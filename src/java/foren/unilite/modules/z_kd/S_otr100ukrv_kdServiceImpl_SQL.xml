<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_otr100ukrv_kdServiceImpl">
	<select id="s_otr100ukrv_kdServiceImpl.selectMasterlList" parameterType="Map" resultType="rMap">		/* 메인1 */
 
	/* s_otr100ukrv_kd.Cs_otr100ukrv_kd[fnOtr100QPop] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON
	
	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정  */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}   

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId
	
	    SET @RefItem = ISNULL(@RefItem, N'0')
	
	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'
	
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
	
	    /* 데이터 조회 */
		SELECT  
			   A.COMP_CODE
			 , A.DIV_CODE
			 , (CASE WHEN ISNULL(A.ORDER_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(A.ORDER_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(A.ORDER_DATE, 7, 2))
	             END)                                           AS ORDER_DATE
			 , B.ORDER_NUM
			 , B.ORDER_SEQ
			 , B.ITEM_CODE
			 , CASE WHEN @RefItem = '0' THEN C.ITEM_NAME
					WHEN @RefItem = '1' THEN C.ITEM_NAME1
					WHEN @RefItem = '2' THEN C.ITEM_NAME2
					ELSE                     C.ITEM_NAME
			   END  AS ITEM_NAME
			 , C.SPEC
			 , RTRIM(B.ORDER_NUM) + RTRIM(CONVERT(VARCHAR(4), B.ORDER_SEQ)) AS G_SORT_KEY
			 , B.ORDER_UNIT_Q
			 , B.ORDER_UNIT
			 , A.MONEY_UNIT
			 , B.ORDER_UNIT_P
			 , B.ORDER_O
			 , B.ORDER_Q
			 , B.ORDER_P
			 , (CASE WHEN ISNULL(B.DVRY_DATE, '') = ''
	                 THEN ''
	                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.DVRY_DATE, 1, 4))
	                                                         , 'MM'  , SUBSTRING(B.DVRY_DATE, 5, 2))
	                                                         , 'DD'  , SUBSTRING(B.DVRY_DATE, 7, 2))
	             END)                                           AS DVRY_DATE
			 , A.ORDER_PRSN
			 , B.CONTROL_STATUS
			 , B.ORDER_REQ_NUM
			 , B.REMARK
			 , B.PROJECT_NO
		FROM              MPO100T A WITH (NOLOCK)
			   INNER JOIN MPO200T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
												 AND A.DIV_CODE    = B.DIV_CODE
												 AND A.CUSTOM_CODE = B.CUSTOM_CODE
												 AND A.ORDER_NUM   = B.ORDER_NUM
			   INNER JOIN BPR100T C WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
												 AND C.ITEM_CODE   = B.ITEM_CODE
		WHERE  A.ORDER_TYPE    	= 		N'4'
		AND    A.COMP_CODE     	= 		@CompCode
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">	
		AND    A.DIV_CODE      	= 		#{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(FR_ORDER_DATE)">
		AND A.ORDER_DATE  		&gt;= 	#{FR_ORDER_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_ORDER_DATE)">
		AND A.ORDER_DATE  		&lt;= 	#{TO_ORDER_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		AND A.CUSTOM_CODE  		= 		#{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		AND A.ORDER_PRSN   		= 		#{ORDER_PRSN}
		</if>
	    
		ORDER BY A.ORDER_DATE, B.ORDER_NUM, B.ORDER_SEQ

	SET NOCOUNT OFF
    SET ARITHABORT OFF
	END
   	
	</select>
	
	<select id="s_otr100ukrv_kdServiceImpl.pabstockqCheck" parameterType="Map" resultType="rMap">		/* PAB_STOCK_Q 체크 */
	
	/* s_otr100ukrv_kd.Cs_otr100ukrv_kd[fnOtr100QSt1] Query1 */
    SELECT A.COMP_CODE"
         , A.DIV_CODE"
         , A.ORDER_DATE"
         , A.ITEM_CODE"
     FROM MCL200T A WITH (NOLOCK)"
     WHERE  A.COMP_CODE   = @CompCode
	 AND    A.DIV_CODE    = @DivCode
	 AND    A.CUSTOM_CODE = @CustomCode
	 AND    A.ORDER_NUM   = @OrderNum
	 AND    A.ORDER_SEQ   = @OrderSeq 
     GROUP BY A.COMP_CODE, A.DIV_CODE, A.ORDER_DATE, A.ITEM_CODE
     
	</select>
	
	<select id="s_otr100ukrv_kdServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">		/* 메인2 */

	/* s_otr100ukrv_kd.Cs_otr100ukrv_kd[fnOtr100QSt1] Query2 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON
	    
	    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
	          , @UserId         NVARCHAR(100) /* 사용자ID      */
	          , @LangType       NVARCHAR(2)  /* 언어구분                */
	          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
	          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */
	                
	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}  
	    
	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId
	    
	    SET @RefItem = ISNULL(@RefItem, N'0')
	    
	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'
	    
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
	    
	    /* 파라메터값 설정 */
	    DECLARE @DivCode        NVARCHAR(08)
	          , @CustomCode     NVARCHAR(08)
	          , @OrderNum       NVARCHAR(20)
	          , @OrderSeq       NUMERIC(4, 0)
	          , @BaseDate       VARCHAR(8000)
	          , @FromItem       VARCHAR(8000)
	          , @ToItem         NVARCHAR(20)
	          , @QtyType        NVARCHAR(01)
	
	    SET @DivCode    = #{DIV_CODE}
	    SET @CustomCode = #{CUSTOM_CODE}
	    SET @BaseDate   = #{ARRAY_DATE}
	    SET @FromItem   = #{ARRAY_ITEM}
	    SET @ToItem     = ''
	    SET @OrderNum   = #{ORDER_NUM}
	    SET @OrderSeq   =  #{ORDER_SEQ} 
	    SET @QtyType    = #{QTY_TYPE}
	
	    /* 품목계정 */
	    DECLARE @ItemAccount    NVARCHAR(02)
	
	    SELECT TOP 1 @ItemAccount = C1.ITEM_ACCOUNT
	    FROM              MPO200T   A  WITH (NOLOCK)
	           INNER JOIN BPR200T   C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                                AND C1.DIV_CODE  = A.DIV_CODE
	                                                AND C1.ITEM_CODE = A.ITEM_CODE
	    WHERE  A.COMP_CODE   = @CompCode
		AND    A.DIV_CODE    = @DivCode
	    AND    A.CUSTOM_CODE = @CustomCode
	    AND    A.ORDER_NUM   = @OrderNum
	    AND    A.ORDER_SEQ   = @OrderSeq
	
	    SET @ItemAccount = ISNULL(@ItemAccount, '')
	
	    /* 대체품목등록여부 */
	    DECLARE @EXChgYN            NVARCHAR(01)
	
	    SELECT @EXChgYN = MAX(A.USE_YN)
	    FROM   (
	           SELECT TOP 1 COMP_CODE, SUB_CODE AS USE_YN
	           FROM   BSA100T WITH (NOLOCK)
	           WHERE  COMP_CODE = @CompCode
	           AND    MAIN_CODE = 'B081'
	           AND    (
	                  REF_CODE1 = 'Y'
	               OR REF_CODE1 = 'y'
	                  )
	           UNION ALL
	           SELECT TOP 1 COMP_CODE, ISNULL(REF_CODE1, 'N') AS USE_YN
	           FROM   BSA100T WITH (NOLOCK)
	           WHERE  COMP_CODE = @CompCode
	           AND    MAIN_CODE = 'S067'
	           AND    SUB_CODE  = '1'
	           ) A
	    WHERE  A.COMP_CODE = @CompCode
	
	    SET @EXChgYN = ISNULL(@EXChgYN, 'N')
	    
	    --가용재고함수에 넣을 인자구하기(일자/품목) 
	    DECLARE @ORDER_DATE              VARCHAR(100),
                @ITEM_CODE               VARCHAR(100),
                @ORDER_DATE_LIST         VARCHAR(8000),
                @ITEM_CODE_LIST          VARCHAR(8000),
                @QRY_TYPE                NVARCHAR(1)
            
        SET @ORDER_DATE_LIST = ''
        SET @ITEM_CODE_LIST = ''       
        SET @QRY_TYPE = '5' 
            
        DECLARE MCL200T_CUR CURSOR FOR      --커서생성
        
        SELECT A.ORDER_DATE
             , A.ITEM_CODE
          FROM MCL200T A WITH (NOLOCK)
         WHERE A.COMP_CODE    = #{S_COMP_CODE}
           AND A.DIV_CODE     = #{DIV_CODE}
           AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
           AND A.ORDER_NUM    = #{ORDER_NUM}
           AND A.ORDER_SEQ    = #{ORDER_SEQ}
         GROUP BY A.COMP_CODE, A.DIV_CODE, A.ORDER_DATE, A.ITEM_CODE
        
        OPEN MCL200T_CUR
        
        FETCH FROM MCL200T_CUR INTO @ORDER_DATE, @ITEM_CODE
        
        WHILE @@fetch_status = 0
            BEGIN
                SET @ORDER_DATE_LIST = @ORDER_DATE_LIST + @ORDER_DATE + '|#'
                SET @ITEM_CODE_LIST  = @ITEM_CODE_LIST + @ITEM_CODE  + '|#'
                FETCH NEXT FROM MCL200T_CUR INTO @ORDER_DATE, @ITEM_CODE
            END
        CLOSE MCL200T_CUR             -- 대상자 커서 클로즈
        DEALLOCATE MCL200T_CUR        -- 대상자 커서 제거
            
	    /* 데이터 조회 */
	    IF @EXChgYN = 'Y'
	        SELECT A.COMP_CODE
	             , A.DIV_CODE
	             , A.CUSTOM_CODE
	             , A.ORDER_ITEM_CODE
	             , A.ORDER_NUM
	             , A.ORDER_SEQ
	             , A.SEQ
	             , A.PATH_CODE
	             , A.ITEM_CODE
	             , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                     WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                                         ELSE C1.ITEM_NAME
	                 END)                                       AS ITEM_NAME
	             , C1.SPEC
	             , (CASE WHEN ISNULL(A.ORDER_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(A.ORDER_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(A.ORDER_DATE, 7, 2))
	                 END)                                       AS ORDER_DATE
	             , C1.STOCK_UNIT
	             , A.ALLOC_Q
	             , ISNULL(D.PAB_STOCK_Q,0)                      AS PAB_STOCK_Q
	             , (CASE WHEN ISNULL(A.ALLOC_Q,0) - ISNULL(D.PAB_STOCK_Q,0) &gt; 0
	                     THEN ISNULL(A.ALLOC_Q,0) - ISNULL(D.PAB_STOCK_Q,0)
	                     ELSE 0
	                 END)                                       AS SHORTAGE_Q
	             , (CASE WHEN @ItemAccount = '00' 
	                     THEN ISNULL((SELECT TOP 1 'Y'
	                                    FROM SET110T WITH (NOLOCK)
	                                   WHERE COMP_CODE       = A.COMP_CODE
	                                     AND DIV_CODE        = A.DIV_CODE
	                                     AND SET_ITEM_CODE   = A.ORDER_ITEM_CODE
	                                     AND CONST_ITEM_CODE = A.ITEM_CODE), 'N')
	                     ELSE ISNULL((SELECT TOP 1 'Y'
	                                    FROM BPR510T WITH (NOLOCK)
	                                   WHERE COMP_CODE       = A.COMP_CODE
	                                     AND DIV_CODE        = A.DIV_CODE
	                                     AND PROD_ITEM_CODE  = A.ORDER_ITEM_CODE
	                                     AND CHILD_ITEM_CODE = A.ITEM_CODE), 'N')
	                 END)                                       AS EXCHG_EXIST_YN
	             , A.REF_ITEM_CODE
	             , (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
	                     WHEN @RefItem = '2' THEN C2.ITEM_NAME2
	                                         ELSE C2.ITEM_NAME
	                 END)                                       AS REF_ITEM_NAME
	             , A.EXCHG_YN
	             , A.OUTSTOCK_Q
	             , A.UNIT_Q
	             , A.LOSS_RATE
	             , A.CONTROL_STATUS
	             , A.GRANT_TYPE
	             , A.REMARK
	             , A.PROJECT_NO
	             , A.NEED_Q  
	          FROM            MCL200T A  WITH (NOLOCK)
	               LEFT JOIN uniLITE.fnGetPABStock(#{S_COMP_CODE}, #{DIV_CODE}, @ORDER_DATE_LIST, @ITEM_CODE_LIST, '', @QRY_TYPE) D ON D.COMP_CODE = A.COMP_CODE
	                                                                                                                AND D.DIV_CODE  = A.DIV_CODE
	                                                                                                                AND D.ITEM_CODE = A.ITEM_CODE
	                                                                                                                AND D.BASE_DATE = A.ORDER_DATE
	               LEFT  JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                                  AND C1.ITEM_CODE = A.ITEM_CODE
	               LEFT  JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
	                                                  AND C2.ITEM_CODE = A.REF_ITEM_CODE
	         WHERE  A.COMP_CODE   = @CompCode
			 AND    A.DIV_CODE    = @DivCode
	    	 AND    A.CUSTOM_CODE = @CustomCode
	     	 AND    A.ORDER_NUM   = @OrderNum
	     	 AND    A.ORDER_SEQ   = @OrderSeq
	         ORDER BY A.SEQ
	
	    ELSE
	        SELECT A.COMP_CODE
	             , A.DIV_CODE
	             , A.CUSTOM_CODE
	             , A.ORDER_ITEM_CODE
	             , A.ORDER_NUM
	             , A.ORDER_SEQ
	             , A.SEQ
	             , A.PATH_CODE
	             , A.ITEM_CODE
	             , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                     WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                                         ELSE C1.ITEM_NAME
	                 END)                                       AS ITEM_NAME
	             , C1.SPEC
	             , (CASE WHEN ISNULL(A.ORDER_DATE, '') = ''
	                     THEN ''
	                     ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.ORDER_DATE, 1, 4))
	                                                             , 'MM'  , SUBSTRING(A.ORDER_DATE, 5, 2))
	                                                             , 'DD'  , SUBSTRING(A.ORDER_DATE, 7, 2))
	                 END)                                       AS ORDER_DATE
	             , C1.STOCK_UNIT
	             , A.ALLOC_Q
	             , 0                                            AS PAB_STOCK_Q
	             , (CASE WHEN ISNULL(A.ALLOC_Q,0) &gt; 0
	                     THEN ISNULL(A.ALLOC_Q,0)
	                     ELSE 0
	                 END)                                       AS SHORTAGE_Q
	             , 'N'                                          AS EXCHG_EXIST_YN
	             , A.REF_ITEM_CODE
	             , (CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
	                     WHEN @RefItem = '2' THEN C2.ITEM_NAME2
	                                         ELSE C2.ITEM_NAME
	                 END)                                       AS REF_ITEM_NAME
	             , A.EXCHG_YN
	             , A.OUTSTOCK_Q
	             , A.UNIT_Q
	             , A.LOSS_RATE
	             , A.CONTROL_STATUS
	             , A.GRANT_TYPE
	             , A.REMARK
	             , A.PROJECT_NO
	             , A.NEED_Q
	          FROM             MCL200T A  WITH (NOLOCK)
	                LEFT  JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                                   AND C1.ITEM_CODE = A.ITEM_CODE
	                LEFT  JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
	                                                   AND C2.ITEM_CODE = A.REF_ITEM_CODE
	          WHERE  A.COMP_CODE   = @CompCode	
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			  AND    A.DIV_CODE    = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	    	  AND    A.CUSTOM_CODE = #{CUSTOM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
	     	  AND    A.ORDER_NUM   = #{ORDER_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ORDER_SEQ)">
	     	  AND    A.ORDER_SEQ   = #{ORDER_SEQ}
			</if>
	          ORDER BY A.SEQ
	
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	
	</select>
	
	<select id="s_otr100ukrv_kdServiceImpl.selectReplaceItemList" parameterType="Map" resultType="rMap">
	   BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
            
            DECLARE @ORDER_DATE              VARCHAR(100),
                    @ITEM_CODE               VARCHAR(100),
                    @ORDER_DATE_LIST         VARCHAR(8000),
                    @ITEM_CODE_LIST          VARCHAR(8000),
                    @QRY_TYPE                NVARCHAR(1)
            
            SET @ORDER_DATE_LIST = ''
            SET @ITEM_CODE_LIST = ''       
            SET @QRY_TYPE = '5' 
                
            DECLARE MCL200T_CUR CURSOR FOR      --커서생성
            
            SELECT A.ORDER_DATE
                 , A.ITEM_CODE
              FROM MCL200T A WITH (NOLOCK)
             WHERE A.COMP_CODE    = #{COMP_CODE}
               AND A.DIV_CODE     = #{DIV_CODE}
               AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
               AND A.ORDER_NUM    = #{ORDER_NUM}
               AND A.ORDER_SEQ    = #{ORDER_SEQ}
             GROUP BY A.COMP_CODE, A.DIV_CODE, A.ORDER_DATE, A.ITEM_CODE
            
            OPEN MCL200T_CUR
            
            FETCH FROM MCL200T_CUR INTO @ORDER_DATE, @ITEM_CODE
            
            WHILE @@fetch_status = 0
                BEGIN
                    SET @ORDER_DATE_LIST = @ORDER_DATE_LIST + @ORDER_DATE + '|#'
                    SET @ITEM_CODE_LIST  = @ITEM_CODE_LIST + @ITEM_CODE  + '|#'
                    FETCH NEXT FROM MCL200T_CUR INTO @ORDER_DATE, @ITEM_CODE
                END
            CLOSE MCL200T_CUR             -- 대상자 커서 클로즈
            DEALLOCATE MCL200T_CUR        -- 대상자 커서 제거
       
            SELECT
                  Z.COMP_CODE       
                , Z.DIV_CODE        
                , Z.CUSTOM_CODE     
                , Z.ORDER_ITEM_CODE 
                , Z.ORDER_NUM       
                , Z.ORDER_SEQ       
                , Z.SEQ             
                , Z.PATH_CODE       
                , Z.ORDER_DATE      
                , Z.STOCK_UNIT      
                , Z.ALLOC_Q         
                , Z.PAB_STOCK_Q     
                , Z.SHORTAGE_Q      
                , Z.OUTSTOCK_Q      
                , Z.LOSS_RATE       
                , Z.CONTROL_STATUS  
                , Z.GRANT_TYPE      
                , Z.REMARK          
                , Z.PROJECT_NO      
                , Z.NEED_Q          
                , Z.INOUT_Q       
                , Z.EXCHG_ITEM_CODE 
                , Z.EXCHG_ITEM_NAME 
                , Z.SPEC            
                , Z.UNIT_Q          
                , Z.ALLOC_Q         
                , Z.OUT_ALLOC_Q   
                , Z.CHID_FLAG               --CHILD 그리드에서 넘어온 원데이터 = '1'  ELSE '2'
             FROM  (
                SELECT 
                     #{COMP_CODE}               AS COMP_CODE      
                    ,#{DIV_CODE}                AS DIV_CODE       
                    ,#{CUSTOM_CODE}             AS CUSTOM_CODE    
                    ,#{ORDER_ITEM_CODE}         AS ORDER_ITEM_CODE
                    ,#{ORDER_NUM}               AS ORDER_NUM      
                    ,#{ORDER_SEQ}               AS ORDER_SEQ      
                    ,#{SEQ}                     AS SEQ            
                    ,#{PATH_CODE}               AS PATH_CODE      
                    ,#{ORDER_DATE}              AS ORDER_DATE     
                    ,#{STOCK_UNIT}              AS STOCK_UNIT     
                    ,#{PAB_STOCK_Q}             AS PAB_STOCK_Q    
                    ,#{SHORTAGE_Q}              AS SHORTAGE_Q     
                    ,#{OUTSTOCK_Q}              AS OUTSTOCK_Q     
                    ,#{LOSS_RATE}               AS LOSS_RATE      
                    ,#{CONTROL_STATUS}          AS CONTROL_STATUS 
                    ,#{GRANT_TYPE}              AS GRANT_TYPE     
                    ,#{REMARK}                  AS REMARK         
                    ,#{PROJECT_NO}              AS PROJECT_NO     
                    ,#{NEED_Q}                  AS NEED_Q         
                    ,#{INOUT_Q}                 AS INOUT_Q        
                    ,#{ITEM_CODE}               AS EXCHG_ITEM_CODE
                    ,#{ITEM_NAME}               AS EXCHG_ITEM_NAME
                    ,#{SPEC}                    AS SPEC           
                    ,#{UNIT_Q}                  AS UNIT_Q         
                    ,#{ALLOC_Q}                 AS ALLOC_Q        
                    ,0                          AS OUT_ALLOC_Q 
                    ,'1'                        AS CHID_FLAG 
                
                UNION ALL
                
                SELECT
                     A.COMP_CODE                                        
                    ,A.DIV_CODE       
                    ,A.CUSTOM_CODE    
                    ,A.PROD_ITEM_CODE
                    ,#{ORDER_NUM}      
                    ,#{ORDER_SEQ}      
                    ,''                         AS SEQ            
                    ,#{PATH_CODE}      
                    ,#{ORDER_DATE}     
                    ,B.STOCK_UNIT     
                    ,C.PAB_STOCK_Q    
                    ,0                          AS SHORTAGE_Q     
                    ,0                          AS OUTSTOCK_Q     
                    ,0                          AS LOSS_RATE      
                    ,'1'                        AS CONTROL_STATUS 
                    ,'2'                        AS GRANT_TYPE     
                    ,''                         AS REMARK         
                    ,''                         AS PROJECT_NO     
                    ,''                         AS NEED_Q         
                    ,''                         AS INOUT_Q        
                    ,A.EXCHG_ITEM_CODE          AS EXCHG_ITEM_CODE
                    ,B.ITEM_NAME                AS EXCHG_ITEM_NAME
                    ,B.SPEC            
                    ,A.UNIT_Q                                     --원단위량
                    ,A.UNIT_Q * ${ORDER_UNIT_Q} AS ALLOC_Q        --계산예약량
                    ,0                          AS OUT_ALLOC_Q    --촐고예약량  
                    ,'2'                        AS CHID_FLAG  
               FROM      S_MCL110T_KD A WITH (NOLOCK)
                    LEFT JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                     AND B.ITEM_CODE = A.EXCHG_ITEM_CODE
                    LEFT JOIN uniLITE.fnGetPABStock(#{COMP_CODE}, #{DIV_CODE}, @ORDER_DATE_LIST, @ITEM_CODE_LIST, '', @QRY_TYPE) C   ON C.COMP_CODE = A.COMP_CODE
                                                                                                                                          AND C.DIV_CODE  = A.DIV_CODE
                                                                                                                                          AND C.ITEM_CODE = A.EXCHG_ITEM_CODE
                                                                                                                                          AND C.BASE_DATE = #{ORDER_DATE}
               WHERE A.COMP_CODE       = #{COMP_CODE}
                 AND A.DIV_CODE        = #{DIV_CODE}
                 AND A.CUSTOM_CODE     = #{CUSTOM_CODE}
                 AND A.PROD_ITEM_CODE  = #{ORDER_ITEM_CODE}
                 AND A.CHILD_ITEM_CODE = #{ITEM_CODE}
             )  Z
             
            ORDER BY Z.CHID_FLAG, Z.EXCHG_ITEM_CODE
            
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END        
	</select>
	
	<insert id="s_otr100ukrv_kdServiceImpl.insertDetail" parameterType="Map">	/* 저장쿼리 */
	   INSERT INTO MCL200T                                                                        
                             (     COMP_CODE       , DIV_CODE        , CUSTOM_CODE     , ORDER_NUM       , ORDER_SEQ   
                                 , PATH_CODE       , ITEM_CODE       , ORDER_ITEM_CODE , ORDER_DATE      , NEED_Q   
                                 , ALLOC_Q         , OUTSTOCK_Q      , UNIT_Q          , LOSS_RATE       , SEQ         
                                 , CONTROL_STATUS  , REF_ITEM_CODE   , EXCHG_YN        , PROJECT_NO      , REMARK      
                                 , GRANT_TYPE      , UPDATE_DB_USER	 , UPDATE_DB_TIME  , INSERT_DB_USER  , INSERT_DB_TIME )                                 		     
					VALUES
						     ( #{COMP_CODE}		    , #{DIV_CODE}			, #{CUSTOM_CODE}		 , #{ORDER_NUM}			, #{ORDER_SEQ}
						     , '0'                  , #{ITEM_CODE}          , #{ORDER_ITEM_CODE}     , #{ORDER_DATE}		, #{NEED_Q}
						     , #{ALLOC_Q}           , #{OUTSTOCK_Q}         , #{UNIT_Q}              , #{LOSS_RATE}         , #{SEQ}
						     , #{CONTROL_STATUS}    , #{REF_ITEM_CODE}      , #{EXCHG_YN}            , #{PROJECT_NO}        , #{REMARK} 
						     , #{GRANT_TYPE}        , #{S_USER_ID}       	, GETDATE()	             , #{S_USER_ID}     	, GETDATE() )
	</insert>
   
   <update id="s_otr100ukrv_kdServiceImpl.updateDetail" parameterType="Map">		
		UPDATE MCL200T
			SET 
				 NEED_Q = #{NEED_Q}
				,ALLOC_Q = #{ALLOC_Q}
				,OUTSTOCK_Q = #{OUTSTOCK_Q}
				,UNIT_Q = #{UNIT_Q} 				
				,LOSS_RATE = #{LOSS_RATE}
				,SEQ = #{SEQ}
				,CONTROL_STATUS = #{CONTROL_STATUS} 				
				,REF_ITEM_CODE = #{REF_ITEM_CODE}
				,EXCHG_YN = #{EXCHG_YN}
				,PROJECT_NO = #{PROJECT_NO} 				
				,REMARK = #{REMARK} 
				,GRANT_TYPE = #{GRANT_TYPE} 
				,UPDATE_DB_USER = #{S_USER_ID}
				,UPDATE_DB_TIME = GETDATE()
		  WHERE COMP_CODE = #{COMP_CODE}
		    AND DIV_CODE  = #{DIV_CODE} 
		    AND CUSTOM_CODE  = #{CUSTOM_CODE} 
		    AND ORDER_NUM   = #{ORDER_NUM}
		    AND ORDER_SEQ   = #{ORDER_SEQ}
		    AND ITEM_CODE   = #{ITEM_CODE}
		    AND PATH_CODE   = #{PATH_CODE}
	</update>
	
	<delete id="s_otr100ukrv_kdServiceImpl.deleteDetail" parameterType="Map">
		DELETE FROM MCL200T
		 WHERE COMP_CODE = #{COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE} 
		   AND CUSTOM_CODE  = #{CUSTOM_CODE} 
		   AND ORDER_NUM   = #{ORDER_NUM}
		   AND ORDER_SEQ   = #{ORDER_SEQ}
		   AND ITEM_CODE   = #{ITEM_CODE}
		   AND PATH_CODE   = #{PATH_CODE}
	</delete>
	
	
	<select id="s_otr100ukrv_kdServiceImpl.checkProgress" parameterType="Map" resultType="rMap">
		 SELECT ISNULL(A.OUTSTOCK_Q, 0) AS OUTSTOCK_Q                            
		      , ISNULL(B.INOUT_Q, 0)    AS INOUT_Q                                
		  FROM           MCL200T A WITH (NOLOCK)                                
		       LEFT JOIN BTR100T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE  
		                                        AND A.DIV_CODE    = B.DIV_CODE   
		                                        AND A.CUSTOM_CODE = B.INOUT_CODE 
		                                        AND A.ORDER_NUM   = B.ORDER_NUM 
		                                        AND A.ORDER_SEQ   = B.ORDER_SEQ 
		                                        AND A.ITEM_CODE   = B.ITEM_CODE  
		 WHERE  A.COMP_CODE   =   #{COMP_CODE}       
		   AND  A.DIV_CODE    =   #{DIV_CODE}       
		   AND  A.CUSTOM_CODE =   #{CUSTOM_CODE}       
		   AND  A.ORDER_NUM   =   #{ORDER_NUM}       
		   AND  A.ORDER_SEQ   =   #{ORDER_SEQ}       
		   AND  A.ITEM_CODE   =   #{ITEM_CODE}
	</select>
	
   <select id="s_otr100ukrv_kdServiceImpl.printList" parameterType="Map" resultType="rMap">
  <![CDATA[
        --s_otr100ukrv_kdServiceImpl.printList
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @COMP_CODE      NVARCHAR(08)
                  , @DIV_CODE       NVARCHAR(08)
                  , @ORDER_NUM      NVARCHAR(20)
                  , @USER_ID        NVARCHAR(100)
                  , @PERSON_NUMB    NVARCHAR(20)
                  , @NAME           NVARCHAR(20)
            
            SET @COMP_CODE   = #{S_COMP_CODE} 
            SET @DIV_CODE    = #{DIV_CODE}
            SET @ORDER_NUM   = #{ORDER_NUM}
            SET @USER_ID     = #{S_USER_ID}
            SET @PERSON_NUMB = #{PERSON_NUMB}
            SET @NAME        = ISNULL((SELECT NAME FROM HUM100T WITH (NOLOCK) WHERE COMP_CODE = @COMP_CODE AND PERSON_NUMB = @PERSON_NUMB), '')


            IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID=OBJECT_ID('tempdb..#TMP_OTR'))
      		    DROP TABLE #TMP_OTR	
      
      			CREATE TABLE #TMP_OTR
      			(
      				DIV_CODE			  NVARCHAR(10) NULL,
      				DIV_NAME			  NVARCHAR(50) NULL, 
      				CUSTOM_CODE			NVARCHAR(10) NULL, 
      				CUSTOM_NAME			NVARCHAR(100) NULL, 
      				ORDER_NUM			  NVARCHAR(20) NULL, 
      				BARCODE_ORDER_NUM	NVARCHAR(20) NULL, 
      				ORDER_DATE			NVARCHAR(10) NULL, 
      				SEQ					  INT NULL,
      				ITEM_CODE			NVARCHAR(20) NULL, 
      				ITEM_NAME			NVARCHAR(100) NULL, 
      				SPEC				  NVARCHAR(100) NULL, 
      				STOCK_UNIT		NVARCHAR(10) NULL, 
      				ALLOC_Q				NUMERIC(30,6) NULL, 
      				OUTSTOCK_Q		NUMERIC(30,6) NULL, 
      				REMAIN_Q			NUMERIC(30,6) NULL, 
      				ORDER_ITEM_CODE		NVARCHAR(20) NULL, 
      				REMARK				NVARCHAR(1000) NULL, 
      				NAME				  NVARCHAR(50) NULL, 
      				ROW_NUM				INT
      			)
			
			
            INSERT INTO #TMP_OTR (DIV_CODE, DIV_NAME, CUSTOM_CODE, CUSTOM_NAME, ORDER_NUM, BARCODE_ORDER_NUM, ORDER_DATE, SEQ, ITEM_CODE, ITEM_NAME, SPEC, STOCK_UNIT, ALLOC_Q, OUTSTOCK_Q, REMAIN_Q, ORDER_ITEM_CODE, REMARK, NAME, ROW_NUM)
            SELECT
          --(SELECT X.DIV_NAME FROM BOR120T X WHERE X.COMP_CODE = A.COMP_CODE AND X.DIV_CODE = A.DIV_CODE) AS DIV_CODE --사업장
                 --, '외주자재출고요청서' AS TITLE --제목
                    A.DIV_CODE                                                                                  AS DIV_CODE
                 ,  C.DIV_NAME                                                                                  AS DIV_NAME
                 ,  A.CUSTOM_CODE                                                                               AS CUSTOM_CODE  --외주처
                 ,  D.CUSTOM_NAME                                                                               AS CUSTOM_NAME
                 ,  A.ORDER_NUM                                                                                 AS ORDER_NUM    --(외주)발주번호
                 ,  '*' + A.ORDER_NUM + '*'                                                                     AS BARCODE_ORDER_NUM
                 ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.ORDER_DATE)                                        AS ORDER_DATE   --발주일자
                 --,  A.SEQ                                           AS SEQ
--                 ,  ROW_NUMBER() OVER(ORDER BY A.COMP_CODE, A.DIV_CODE, A.ORDER_NUM, A.ORDER_DATE, A.ITEM_CODE) AS SEQ
                  , DENSE_RANK() OVER(ORDER BY A.ITEM_CODE)                                                     AS SEQ  --<<180503
                 ,  A.ITEM_CODE                                                                                 AS ITEM_CODE
                 ,  B1.ITEM_NAME                                                                                AS ITEM_NAME
                 ,  B1.SPEC                                                                                     AS SPEC
                 ,  B1.STOCK_UNIT                                                                               AS STOCK_UNIT
                 ,  ISNULL(A.ALLOC_Q, 0)                                                                        AS ALLOC_Q   --요청량
                 ,  ISNULL(A.OUTSTOCK_Q, 0)                                                                     AS OUTSTOCK_Q--출고량
                 ,  ISNULL(A.ALLOC_Q, 0) - ISNULL(A.OUTSTOCK_Q, 0)                                              AS REMAIN_Q  --잔량
--                 ,  A.ORDER_ITEM_CODE                                                                           AS ORDER_ITEM_CODE
                 , B3.SPEC                                                                                      AS ORDER_ITEM_CODE
                 ,  ''                                                                                          AS REMARK
                 ,  @NAME                                                                                       AS NAME
                 , ROW_NUMBER() OVER (PARTITION BY A.ITEM_CODE ORDER BY A.ORDER_NUM, A.SEQ) AS ROW_NUM	--<<180503
            FROM               MCL200T AS A  WITH (NOLOCK)
                    LEFT  JOIN BPR100T AS B1 WITH (NOLOCK) ON B1.COMP_CODE  = A.COMP_CODE
                                                          AND B1.ITEM_CODE  = A.ITEM_CODE
                    LEFT  JOIN BPR100T AS B2 WITH (NOLOCK) ON B2.COMP_CODE  = A.COMP_CODE
                                                          AND B2.ITEM_CODE  = A.REF_ITEM_CODE
                    LEFT  JOIN BPR100T AS B3 WITH (NOLOCK) ON B3.COMP_CODE  = A.COMP_CODE
                                                          AND B3.ITEM_CODE  = A.ORDER_ITEM_CODE                                                          
                    INNER JOIN BOR120T AS C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                          AND C.DIV_CODE    = A.DIV_CODE
                    INNER JOIN BCM100T AS D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
                                                          AND D.CUSTOM_CODE = A.CUSTOM_CODE
            WHERE   A.COMP_CODE   = @COMP_CODE 
            AND     A.DIV_CODE    = @DIV_CODE
            AND     A.ORDER_NUM   = @ORDER_NUM

      			UPDATE A SET ALLOC_Q = B.ALLOC_Q, OUTSTOCK_Q=B.OUTSTOCK_Q, REMAIN_Q=B.REMAIN_Q
      			FROM #TMP_OTR A
      				 INNER JOIN (
      								SELECT ORDER_NUM, ITEM_CODE, SUM(ALLOC_Q) AS ALLOC_Q, SUM(OUTSTOCK_Q) AS OUTSTOCK_Q, SUM(REMAIN_Q) AS REMAIN_Q
      								FROM #TMP_OTR	 
      								GROUP BY ORDER_NUM, ITEM_CODE
      				 ) B ON A.ORDER_NUM=B.ORDER_NUM AND A.ITEM_CODE=B.ITEM_CODE
      
      			UPDATE #TMP_OTR SET ITEM_CODE='', ITEM_NAME='', SPEC='', STOCK_UNIT='', ALLOC_Q=NULL, OUTSTOCK_Q=NULL, REMAIN_Q=NULL, SEQ=NULL
      			WHERE ROW_NUM <> 1
      
      
      			SELECT * FROM #TMP_OTR
      			
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    ]]>
    </select>
	
</mapper>