<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pmp200ukrv_kdServiceImpl">
	<select id="s_pmp200ukrv_kdServiceImpl.selectAgreePrsn" parameterType="Map" resultType="rMap">	
	--pmp200ukrv.Cpmp200ukrv[fnGetAgreePrsn] Query01
	DECLARE     @COMP_CODE          NVARCHAR(08)    -- (필수) 법인코드
	          , @OUTSTOCK_REQ_PRSN  NVARCHAR(08)    -- (필수) 출고요청담당
	
	SET     @COMP_CODE          = #{S_COMP_CODE}
	SET     @OUTSTOCK_REQ_PRSN  = #{OUT_REQ_PRSN}
	
	SELECT A.SUB_CODE   AS OUTSTOCK_REQ_PRSN
	     , A.CODE_NAME	AS OUTSTOCK_REQ_NAME
	     , B.USER_ID    AS AGREE_PRSN
	     , B.USER_NAME  AS AGREE_NAME
	FROM              BSA100T A WITH (NOLOCK)
	       INNER JOIN BSA300T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                         AND B.USER_ID   = A.REF_CODE1
	WHERE  A.COMP_CODE = @COMP_CODE
	AND    A.MAIN_CODE = 'P119'
	AND    A.SUB_CODE  = @OUTSTOCK_REQ_PRSN
	</select>	
    
    <select id="s_pmp200ukrv_kdServiceImpl.selectGwData" parameterType="Map" resultType="rMap">
        SELECT  GW_FLAG
          FROM  PMP300T    A WITH (NOLOCK)
         WHERE  A.COMP_CODE      = #{S_COMP_CODE}
           AND  A.OUTSTOCK_NUM   = #{OUTSTOCK_NUM}
    </select>
    
    <select id="s_pmp200ukrv_kdServiceImpl.makeDraftNum" parameterType="Map" resultType="rMap">
       UPDATE PMP300T
          SET DRAFT_NO        = #{DRAFT_NO},
              UPDATE_DB_USER  = #{S_USER_ID},
              UPDATE_DB_TIME  = GETDATE()
        WHERE COMP_CODE       = #{S_COMP_CODE}
          AND DIV_CODE        = #{DIV_CODE}
          AND OUTSTOCK_NUM    = #{OUTSTOCK_NUM}  
    </select>
    
    <select id="s_pmp200ukrv_kdServiceImpl.selectDraftNo" parameterType="Map" resultType="rMap">
        SELECT  DRAFT_NO
          FROM  PMP300T    A WITH (NOLOCK)
         WHERE  A.COMP_CODE      = #{S_COMP_CODE}
           AND  A.OUTSTOCK_NUM   = #{OUTSTOCK_NUM}
    </select>
    
    
	
	<select id="s_pmp200ukrv_kdServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
	/* pmp200ukrv.Cpmp200ukrv[fnPmp200QStd] Query01 */
	BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		    
		    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
		          , @UserId         NVARCHAR(100) /* 사용자ID                */
		          , @LangType       NVARCHAR(2)  /* 언어구분                */
		          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
		          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */
		                
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}  
		    
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		    
		    SET @RefItem = ISNULL(@RefItem, N'0')
		    
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		    
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		    /* 데이터 조회 */
	SELECT 
	       A.COMP_CODE
	     , A.DIV_CODE
	     , A.ITEM_CODE
			         , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
			                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
			                                     ELSE C1.ITEM_NAME
			            END)                                     AS ITEM_NAME
	     , C1.SPEC
	     , A.WORK_SHOP_CODE
	     , C1.STOCK_UNIT
	     , A.PATH_CODE
	     , A.OUTSTOCK_REQ_Q
	     , A.OUTSTOCK_Q
	     , A.OUTSTOCK_REQ_DATE
	     , A.CONTROL_STATUS
	     , A.REF_WKORD_NUM
	     , A.REMARK
	     , A.PROJECT_NO
	     , A.OUTSTOCK_NUM
	     , A.OUTSTOCK_REQ_PRSN
	     , A.AGREE_STATUS
	     , A.AGREE_PRSN
	     , A.AGREE_DATE
	     , ISNULL(B.COUNT_WKORD_NUM, '') AS COUNT_WKORD_NUM
	     , ''               AS UPDATE_DB_USER
	     , ''               AS UPDATE_DB_TIME
	     ,(SELECT PAB_STOCK_Q  FROM FNGETPABSTOCK(A.COMP_CODE, A.DIV_CODE, A.OUTSTOCK_REQ_DATE, A.ITEM_CODE, A.ITEM_CODE, '4')) AS PAB_STOCK_Q
        , A.GW_FLAG           /* 그룹웨어 기안여부 */
         , A.GW_DOC           /* 그룹웨어 기안여부 */
         , A.DRAFT_NO         /* 그룹웨어 기안여부 */
	FROM              PMP300T A  WITH (NOLOCK)
	       LEFT  JOIN (
	                  SELECT COMP_CODE, DIV_CODE, WKORD_NUM, ITEM_CODE, PATH_CODE, OUTSTOCK_NUM
	                       , COUNT(WKORD_NUM) AS  COUNT_WKORD_NUM
	                  FROM   PMP200T WITH (NOLOCK)
	                  WHERE  COMP_CODE = @CompCode
	                  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
	                  AND    DIV_CODE  = #{DIV_CODE}
	                  </if> 
	                  GROUP  BY COMP_CODE, DIV_CODE, WKORD_NUM, ITEM_CODE, PATH_CODE, OUTSTOCK_NUM
	                  ) B ON B.COMP_CODE    = A.COMP_CODE
	                     AND B.DIV_CODE     = A.DIV_CODE
	                     AND B.WKORD_NUM    = A.REF_WKORD_NUM
	                     AND B.ITEM_CODE    = A.ITEM_CODE
	                     AND B.PATH_CODE    = A.PATH_CODE
	                     AND B.OUTSTOCK_NUM = A.OUTSTOCK_NUM
	       INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                          AND C1.ITEM_CODE = A.ITEM_CODE

		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
		AND    A.DIV_CODE       = #{DIV_CODE}
		</if>  
		<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">    
		AND    A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		</if>  
		<if test="@foren.Ognl@isNotEmpty(OUTSTOCK_NUM)">
		AND    A.OUTSTOCK_NUM   = #{OUTSTOCK_NUM}
		</if>  
		ORDER BY A.ITEM_CODE ASC	
		SET ARITHABORT OFF
	    SET NOCOUNT OFF
	END
		
	</select>
	
	<select id="s_pmp200ukrv_kdServiceImpl.selectOrderNumMaster" parameterType="Map" resultType="rMap">
        /* s_pmp200ukrv_kdServiceImpl.selectOrderNumMaster */
    
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
                
            DECLARE @COMP_CODE      NVARCHAR(08)    /* 법인코드  */
                  , @USER_ID        NVARCHAR(100)    /* 사용자ID */
                  , @RefItem        NVARCHAR(01)
                
            SET @COMP_CODE  = #{S_COMP_CODE}
            SET @USER_ID    = #{S_USER_ID}
                
            /* 명칭 참조 유형 */
            SELECT  TOP 1 @RefItem = REF_ITEM
            FROM    BSA300T WITH (NOLOCK)
            WHERE   COMP_CODE = @COMP_CODE
            AND     USER_ID = @USER_ID
                
            SET @RefItem = ISNULL(@RefItem, N'0')
        
            /*  조회  */
            SELECT  C.DIV_CODE
                 ,  C.WORK_SHOP_CODE
                 ,  '' AS SEQ
                 ,  C.OUTSTOCK_NUM
                 ,  C.REF_WKORD_NUM
                 ,  A.ITEM_CODE
                 ,  CASE WHEN @RefItem = '1'
                         THEN ISNULL(A.ITEM_NAME1, '')
                         WHEN @RefItem = '2'
                         THEN ISNULL(A.ITEM_NAME2, '')
                         ELSE ISNULL(A.ITEM_NAME, '')
                    END                                                           AS ITEM_NAME
                 ,  A.SPEC
                 ,  A.STOCK_UNIT
                 ,  '' ALLOCK_Q
                 ,  C.OUTSTOCK_REQ_Q
                 ,  C.OUTSTOCK_Q
                 ,  ISNULL(C.OUTSTOCK_REQ_Q, 0) - ISNULL(C.OUTSTOCK_Q, 0) AS ISSUE_QTY
                 ,  CAST(C.OUTSTOCK_REQ_DATE AS DATETIME) OUTSTOCK_REQ_DATE
                 ,  C.LOT_NO
                 ,  C.REMARK
                 ,  C.PROJECT_NO
                 ,  C.PJT_CODE
            FROM               BPR100T AS A WITH (NOLOCK)
                    INNER JOIN PMP300T AS C WITH (NOLOCK) ON A.COMP_CODE       = C.COMP_CODE
                                                         AND A.ITEM_CODE       = C.ITEM_CODE
                                                         AND C.CONTROL_STATUS != '8'
            WHERE   A.COMP_CODE          = @COMP_CODE
            /* 조회조건 */
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND     C.DIV_CODE           = #{DIV_CODE}                   /*사업장*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
            AND     C.WORK_SHOP_CODE     = #{WORK_SHOP_CODE}             /*작업장*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_NUM)">
            AND     C.OUTSTOCK_NUM    LIKE #{OUTSTOCK_NUM} +'%'       /*출고요청번호*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE_FR)">
            AND     C.OUTSTOCK_REQ_DATE &gt;= #{OUTSTOCK_REQ_DATE_FR}   /*요청일 FR*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE_TO)">
            AND     C.OUTSTOCK_REQ_DATE &lt;= #{OUTSTOCK_REQ_DATE_TO}   /*요청일 TO*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
            AND     C.ITEM_CODE       LIKE #{ITEM_CODE} +'%'          /*품목코드*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(REF_WKORD_NUM)">
            AND     C.REF_WKORD_NUM   LIKE #{REF_WKORD_NUM} +'%'          /*작업지시번호*/
            </if>
            <if test="IS_ISSUE == &quot;on&quot;">
            AND     ISNULL(C.OUTSTOCK_REQ_Q, 0) - ISNULL(C.OUTSTOCK_Q, 0) > 0   /*미출고*/
            </if>
            
            ORDER   BY OUTSTOCK_NUM
        
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>
   
	<select id="s_pmp200ukrv_kdServiceImpl.selectEstiList" parameterType="Map" resultType="rMap">
	/* pmp200ukrv.Cpmp200ukrv[fnPmp100QRef] Query01  */
	BEGIN
		SET NOCOUNT ON
	    SET ARITHABORT ON
		
		DECLARE @CompCode	    NVARCHAR(08) /* 법인코드				*/
		      , @UserId		    NVARCHAR(100) /* 사용자ID				*/
		      , @LangType	    NVARCHAR(2)  /* 언어구분				*/
		      , @RefItem	    NVARCHAR(01) /* 명칭 참조 유형		    */
		      , @DateFormat		NVARCHAR(10) /* 날짜 포맷 유형 설정     */
					
		SET @CompCode = #{S_COMP_CODE}
		SET @UserId   = #{S_USER_ID}
		SET @LangType = #{S_LANG_CODE}
		
		/* 명칭 참조 유형 */
		SELECT TOP 1 @RefItem = REF_ITEM
		  FROM BSA300T WITH (NOLOCK)
		 WHERE USER_ID = @UserId
		
		SET @RefItem = ISNULL(@RefItem, N'0')
		
	    /* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = @CompCode
		   AND MAIN_CODE = N'B044'
		   AND REF_CODE1 = N'Y'
		
		 SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		 /* 데이터 조회 */
	
	SELECT
	       CAST(0 AS BIT) AS GUBUN
	     , A.COMP_CODE
	     , A.DIV_CODE
	     , A.WORK_SHOP_CODE
	     , A.PROG_WORK_CODE
	     , A.ITEM_CODE
	     , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	            WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	            WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	            ELSE                     C1.ITEM_NAME
	       END  AS ITEM_NAME
	     , C1.SPEC
	     , C1.STOCK_UNIT
	     , A.WKORD_Q
	     , (CASE WHEN ISNULL(A.PRODT_START_DATE, '') = ''
	             THEN ''
	             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_START_DATE, 1, 4))
	                                                     , 'MM'  , SUBSTRING(A.PRODT_START_DATE, 5, 2))
	                                                     , 'DD'  , SUBSTRING(A.PRODT_START_DATE, 7, 2))
	        END)                                                    AS PRODT_START_DATE
	     , (CASE WHEN ISNULL(A.PRODT_END_DATE, '') = ''
	             THEN ''
	             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_END_DATE, 1, 4))
	                                                     , 'MM'  , SUBSTRING(A.PRODT_END_DATE, 5, 2))
	                                                     , 'DD'  , SUBSTRING(A.PRODT_END_DATE, 7, 2))
	        END)                                                    AS PRODT_END_DATE
	     , A.WKORD_NUM 
	     , A.LOT_NO
	     , B.SFLAG 
	     , A.REMARK
	     , A.PROJECT_NO  
	FROM              PMP100TV1 A WITH (NOLOCK)
	       INNER JOIN (
	                  SELECT A.COMP_CODE, A.DIV_CODE, A.WKORD_NUM
	                       , CASE ISNULL(B.CNT_SEARCH, 0) WHEN 0 THEN 'N'   /* 출고요청에 적용되지 않은 작지*/
	                                                      ELSE        'Y'   /* 출고요청에 적용했던 작지    */
	                         END  AS SFLAG
	                  FROM             (
	                                   SELECT COMP_CODE, DIV_CODE, WKORD_NUM
	                                   FROM   PMP200T WITH (NOLOCK)
	                                   WHERE  COMP_CODE = @CompCode
	                                   AND    DIV_CODE  = #{DIV_CODE}
	                                   AND    OUT_METH  = '1'   /* 출고방식이 메뉴얼인 경우*/
	                                   AND    (
	                                          ((OUTSTOCK_NUM IS NULL OR OUTSTOCK_NUM = '' OR OUTSTOCK_NUM = '*') AND REF_TYPE != '2')
	                                       OR (REF_TYPE = '2' AND ALLOCK_Q &gt; OUTSTOCK_REQ_Q)
	                                          )
	                                   GROUP  BY COMP_CODE, DIV_CODE, WKORD_NUM
	                                   ) A
	                         LEFT JOIN (
	                                   SELECT COMP_CODE, DIV_CODE, WKORD_NUM
	                                        , COUNT(1) AS CNT_SEARCH
	                                   FROM   PMP200T WITH (NOLOCK)
	                                   WHERE  COMP_CODE = @CompCode
	                                   AND    DIV_CODE  = #{DIV_CODE}
	                                   AND    OUT_METH  = '1'
	                                   AND    (
	                                          (OUTSTOCK_NUM IS NOT NULL AND OUTSTOCK_NUM != '' AND OUTSTOCK_NUM != '*' AND REF_TYPE != '2')
	                                       OR (REF_TYPE = '2' AND OUTSTOCK_REQ_Q &gt; 0)
	                                          )
	                                   GROUP  BY COMP_CODE, DIV_CODE, WKORD_NUM
	                                   ) B ON B.COMP_CODE = A.COMP_CODE
	                                      AND B.DIV_CODE  = A.DIV_CODE
	                                      AND B.WKORD_NUM = A.WKORD_NUM
	                  ) B ON B.COMP_CODE = A.COMP_CODE
	                     AND B.DIV_CODE  = A.DIV_CODE
	                     AND B.WKORD_NUM = A.WKORD_NUM
	       INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                          AND C1.ITEM_CODE = A.ITEM_CODE
	
	    WHERE  A.COMP_CODE      = @CompCode
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
	    AND    A.DIV_CODE         = #{DIV_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)"> 
	    AND    A.WORK_SHOP_CODE   = #{WORK_SHOP_CODE}
	    </if>
	    AND A.LINE_END_YN = 'Y'
	    AND A.WORK_END_YN = 'N'
	    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	    AND    A.ITEM_CODE      LIKE #{ITEM_CODE} + '%'
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	    AND    (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                                     ELSE C1.ITEM_NAME
	            END)        LIKE     #{ITEM_NAME} + '%'
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE_FR)">
	    AND    A.PRODT_START_DATE &gt;= #{PRODT_START_DATE_FR}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE_TO)">
	    AND    A.PRODT_START_DATE &lt;= #{PRODT_START_DATE_TO}    
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(APPLY_FLAG)">
	    AND    B.SFLAG = #{APPLY_FLAG}
	    </if>
	
	    ORDER BY A.PRODT_START_DATE, A.ITEM_CODE ASC
	
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>
	
	<select id="s_pmp200ukrv_kdServiceImpl.orderApply" parameterType="Map" resultType="rMap">
		--pmp200ukrv.Cpmp200ukrv[fnPmp200QStd] Query03
		DECLARE     @COMP_CODE      NVARCHAR(08)    
		          , @DIV_CODE       NVARCHAR(08)    
		          , @WORK_SHOP_CODE NVARCHAR(08)    
		          , @USER_ID        NVARCHAR(100)    
		
		SET     @COMP_CODE      = #{S_COMP_CODE}
		SET     @DIV_CODE       = #{DIV_CODE}
		SET     @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		SET     @USER_ID        = #{S_USER_ID}
		
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.ITEM_CODE
		     , uniLITE.fnItemNameComp(A.COMP_CODE, @USER_ID, A.ITEM_CODE) AS ITEM_NAME
		     , C1.SPEC
		     , C1.STOCK_UNIT
		     , A.PATH_CODE
		     , A.ALLOCK_Q - A.OUTSTOCK_REQ_Q AS OUTSTOCK_REQ_Q
		     , 0                             AS OUTSTOCK_Q
		     --, ''                            AS OUTSTOCK_REQ_DATE
		     , A.WKORD_NUM                   AS REF_WKORD_NUM
		     , A.REMARK
		     , A.PROJECT_NO
		     --, ''
		     --, ''                            AS OUTSTOCK_REQ_PRSN
		     --, ''                            AS AGREE_STATUS
		     --, ''                            AS AGREE_PRSN
		     --, ''                            AS AGREE_DATE
		     , '1'                           AS COUNT_WKORD_NUM       
		     ,(SELECT PAB_STOCK_Q  FROM FNGETPABSTOCK(A.COMP_CODE, A.DIV_CODE, #{OUTSTOCK_REQ_DATE}, A.ITEM_CODE, A.ITEM_CODE, '4')) AS PAB_STOCK_Q
		FROM              PMP200T A  WITH (NOLOCK)
		       INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
		                                          AND C1.ITEM_CODE = A.ITEM_CODE
		WHERE  A.COMP_CODE  = @COMP_CODE
		AND    A.DIV_CODE   = @DIV_CODE
		AND    A.WKORD_NUM IN ( #{REF_WKORD_NUM} )
		AND    A.OUT_METH   = '1'
		AND    (
		           (OUTSTOCK_NUM IS NULL OR OUTSTOCK_NUM = '' OR OUTSTOCK_NUM = '*') 
		       AND (ALLOCK_Q - OUTSTOCK_REQ_Q > 0)
		       )
		ORDER BY A.ITEM_CODE ASC
	</select>
	
	<select id="s_pmp200ukrv_kdServiceImpl.orderApply2" parameterType="Map" resultType="rMap">
		--pmp200ukrv.Cpmp200ukrv[fnPmp200QSt1] Query02
		DECLARE     @COMP_CODE      NVARCHAR(08)    
		          , @DIV_CODE       NVARCHAR(08)    
		          , @WORK_SHOP_CODE NVARCHAR(08)    
		          , @ITEM_CODE      NVARCHAR(20)    
		          , @PATH_CODE      NVARCHAR(20)    
		          , @USER_ID        NVARCHAR(100)    
		
		SET     @COMP_CODE      = #{S_COMP_CODE}
		SET     @DIV_CODE       = #{DIV_CODE}
		SET     @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		SET     @ITEM_CODE      = #{ITEM_CODE}
		SET     @PATH_CODE      = #{PATH_CODE}
		SET     @USER_ID        = #{S_USER_ID}
		
		SELECT A.WKORD_NUM
		     , A.ITEM_CODE
		     , uniLITE.fnItemNameComp(A.COMP_CODE, @USER_ID, A.ITEM_CODE) AS ITEM_NAME
		     , C1.SPEC
		     , C1.STOCK_UNIT
		     , B.ALLOCK_Q
		     , B.OUTSTOCK_REQ_Q
		     , A.WKORD_Q / A.PROG_UNIT_Q AS WKORD_Q
		     , A.PRODT_Q
		     , A.REMARK
		     , A.PROJECT_NO  
		     , A.LOT_NO
		FROM              PMP100TV1 A WITH (NOLOCK)
		       INNER JOIN PMP200T   B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
		                                           AND B.DIV_CODE   = A.DIV_CODE
		                                           AND B.WKORD_NUM  = A.WKORD_NUM
		                                           AND B.OUT_METH   = '1'
		                                           AND B.ITEM_CODE  = @ITEM_CODE
		       INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
		                                           AND C1.ITEM_CODE = A.ITEM_CODE
		WHERE  A.COMP_CODE   = @COMP_CODE
		AND    A.DIV_CODE    = @DIV_CODE
		AND    A.WKORD_NUM  IN ( #{REF_WKORD_NUM} )
		AND    A.LINE_END_YN = 'Y'
		AND    A.WORK_END_YN = 'N'
		ORDER  BY A.WKORD_NUM ASC
	</select>
	
	<insert id="s_pmp200ukrv_kdServiceImpl.insertLogMaster" parameterType="Map">
		/*s_pmp200ukrv_kdServiceImpl.insertLogMaster*/

DECLARE @AGREE_STATUS NVARCHAR(10)

   --출고요청 자동 여부
   SELECT @AGREE_STATUS = CASE SUB_CODE WHEN 'Y' THEN '2' ELSE '1' END	--1:미승인, 2:승인   
   FROM BSA100T 
   WHERE COMP_CODE=#{S_COMP_CODE} 
   AND MAIN_CODE='P109' 
   AND REF_CODE1='Y'

		INSERT INTO L_PMP300T
             ( KEY_VALUE		    
             , OPR_FLAG
             , COMP_CODE            
             , DIV_CODE              
             , OUTSTOCK_NUM          
             , ITEM_CODE             
             , REF_WKORD_NUM
             , PATH_CODE            
             , WORK_SHOP_CODE        
             , OUTSTOCK_REQ_DATE     
             , OUTSTOCK_REQ_Q        
             , OUTSTOCK_Q
             , CONTROL_STATUS       
             , CANCEL_Q              
             , PROJECT_NO            
             , LOT_NO
             , REMARK               
             , OUTSTOCK_REQ_PRSN     
             , AGREE_STATUS          
             , AGREE_PRSN            
             , AGREE_DATE 
             , UPDATE_DB_USER    
             , UPDATE_DB_TIME  )
        VALUES
             ( #{KEY_VALUE}         
             , #{OPR_FLAG}
             , #{S_COMP_CODE}         
             , #{DIV_CODE}           
             , #{OUTSTOCK_NUM}       
             , #{ITEM_CODE}          
             , #{REF_WKORD_NUM}
             , #{PATH_CODE}         
             , #{WORK_SHOP_CODE}     
             , #{OUTSTOCK_REQ_DATE}  
             , #{OUTSTOCK_REQ_Q}     
             , #{OUTSTOCK_Q}
             , #{CONTROL_STATUS}    
             , #{CANCEL_Q}           
             , #{PROJECT_NO}  
             , #{LOT_NO}
             , #{REMARK}            
             , #{OUTSTOCK_REQ_PRSN}  
             , @AGREE_STATUS        
             , #{AGREE_PRSN}         
             , #{AGREE_DATE} 
             , #{S_USER_ID}    
             , GETDATE() 
            )
	</insert> 
	
	<update id="s_pmp200ukrv_kdServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
        {call uniLITE.USP_PRODT_Pmp200ukr (
            #{KeyValue,         mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{OUTSTOCK_NUM,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ErrorDesc,        mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>  
</mapper>
