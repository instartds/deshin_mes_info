<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_zbb200ukrv_kdService">
    <select id="s_zbb200ukrv_kdService.selectList" parameterType="Map" resultType="rMap">
        --s_zbb200ukrv_kdService.selectList
        
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
            
            DECLARE @COMP_CODE      NVARCHAR(08)
                  , @DIV_CODE       NVARCHAR(08)
                  , @WORK_GUBUN     NVARCHAR(02)
                  , @PART_GUBUN     NVARCHAR(02)
                  , @CUSTOM_CODE    NVARCHAR(20)
                  , @ITEM_CODE      NVARCHAR(20)
                  , @OEM_ITEM_CODE  NVARCHAR(20)
                  , @DOC_NUM        NVARCHAR(20)
                  , @FR_WORK_DATE   NVARCHAR(08)
                  , @TO_WORK_DATE   NVARCHAR(08)
                  , @REMARK         NVARCHAR(100)

            SET @COMP_CODE      = #{S_COMP_CODE}
            SET @DIV_CODE       = #{DIV_CODE}
            SET @WORK_GUBUN     = #{WORK_GUBUN}
            SET @PART_GUBUN     = #{PART_GUBUN}
            SET @CUSTOM_CODE    = #{CUSTOM_CODE}
            SET @ITEM_CODE      = #{ITEM_CODE}
            SET @OEM_ITEM_CODE  = #{OEM_ITEM_CODE}
            SET @DOC_NUM        = #{DOC_NUM}
            SET @FR_WORK_DATE   = #{FR_WORK_DATE}
            SET @TO_WORK_DATE   = #{TO_WORK_DATE}
            SET @REMARK         = #{REMARK}

            SELECT  A.COMP_CODE
                 ,  A.DIV_CODE
                 ,  A.DOC_NUM
                 ,  A.WORK_GUBUN
                 ,  A.PART_GUBUN
                 ,  A.WORK_DATE
                 ,  A.REVISION_NO
                 ,  A.CUSTOM_CODE
                 ,  C.CUSTOM_NAME
                 ,  A.ITEM_CODE
                 ,  B.ITEM_NAME
                 ,  B.OEM_ITEM_CODE
                 ,  B.CAR_TYPE
                 ,  A.WORK_MAN
                 ,  A.DOC_FILE_LINK
                 ,  A.REMARK
            FROM               S_ZBB200T_KD AS A WITH (NOLOCK)
                    LEFT  JOIN BPR100T      AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                              AND B.ITEM_CODE   = A.ITEM_CODE
                    LEFT  JOIN BCM100T      AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                              AND C.CUSTOM_CODE = A.CUSTOM_CODE
            WHERE   A.COMP_CODE        = @COMP_CODE
            AND     A.DIV_CODE         = @DIV_CODE
            AND     A.WORK_DATE       &gt;= #{FR_WORK_DATE}
            AND     A.WORK_DATE       &lt;= #{TO_WORK_DATE}
            <if test="@foren.Ognl@isNotEmpty(WORK_GUBUN)">
            AND     A.WORK_GUBUN        = @WORK_GUBUN
            </if>
            <if test="@foren.Ognl@isNotEmpty(PART_GUBUN)">
            AND     A.PART_GUBUN       = @PART_GUBUN
            </if>
            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
            AND     A.CUSTOM_CODE   LIKE @CUSTOM_CODE + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
            AND     A.ITEM_CODE     LIKE @ITEM_CODE + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(OEM_ITEM_CODE)">
            AND     B.OEM_ITEM_CODE LIKE @OEM_ITEM_CODE + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(DOC_NUM)">
            AND     A.DOC_NUM       LIKE @DOC_NUM + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(REMARK)">
            AND     A.REMARK        LIKE @REMARK + '%'
            </if>          

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>
    
    <update id="s_zbb200ukrv_kdService.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{BASIS_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{KEY_NUMBER, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>
    
    <select id="s_zbb200ukrv_kdService.insertDetail" parameterType="rMap" resultType="rMap">
        --s_zbb200ukrv_kdService.insertDetail
        
        DECLARE @COMP_CODE      NVARCHAR(10)
              , @DIV_CODE       NVARCHAR(10)
              , @WORK_GUBUN     NVARCHAR(10)
              , @PART_GUBUN     NVARCHAR(10)
              , @WORK_YYYY      NVARCHAR(04)
              , @REVISION_NO    NVARCHAR(03)
              , @DOC_NUM        NVARCHAR(20)
                --
              , @SERIAL_NO      NVARCHAR(10)
              , @MAX_NO         NVARCHAR(10)
        
        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WORK_GUBUN     = #{WORK_GUBUN}
        SET @PART_GUBUN     = #{PART_GUBUN}
        SET @WORK_YYYY      = LEFT(#{WORK_DATE}, 4)
        SET @DOC_NUM        = ''
        SET @REVISION_NO    = CASE WHEN LEN(#{REVISION_NO}) = 1
                                   THEN '0' + #{REVISION_NO}
                                   ELSE #{REVISION_NO}
                              END
        --
        SET @SERIAL_NO      = ''
        SET @MAX_NO         = ''
        
        IF  EXISTS (SELECT  TOP 1 1
                    FROM    S_ZBB200T_KD WITH (NOLOCK)
                    WHERE   COMP_CODE           = @COMP_CODE
                    AND     DIV_CODE            = @DIV_CODE
                    AND     LEFT(WORK_DATE, 4)  = @WORK_YYYY)
        BEGIN
            SET @SERIAL_NO  =  (SELECT  SUBSTRING(MAX(REPLACE(DOC_NUM, '-', '')), 5, 3)
                                FROM    S_ZBB200T_KD WITH (NOLOCK)
                                WHERE   COMP_CODE           = @COMP_CODE
                                AND     DIV_CODE            = @DIV_CODE
                                AND     LEFT(WORK_DATE, 4)  = @WORK_YYYY)

            SET @MAX_NO     =   RIGHT('00' + CONVERT(NVARCHAR, CONVERT(INT, @SERIAL_NO) + 1), 3)
            SET @DOC_NUM    =   @WORK_GUBUN + @PART_GUBUN + @MAX_NO + @REVISION_NO
        END
        ELSE
        BEGIN
            SET @DOC_NUM    =   @WORK_GUBUN + @PART_GUBUN + '001' + @REVISION_NO
        END
    	
        INSERT INTO S_ZBB200T_KD
        (
            COMP_CODE
        ,   DIV_CODE
        ,   DOC_NUM
        ,   WORK_DATE
        ,   WORK_GUBUN
        ,   PART_GUBUN
        ,   REVISION_NO
        ,   CUSTOM_CODE
        ,   ITEM_CODE
        ,   WORK_MAN
        ,   REMARK
        ,   INSERT_DB_USER
        ,   INSERT_DB_TIME
        ,   UPDATE_DB_USER
        ,   UPDATE_DB_TIME
        )
        VALUES
        (            
            #{S_COMP_CODE}
        ,   #{DIV_CODE}
        ,   @DOC_NUM
        ,   #{WORK_DATE}
        ,   #{WORK_GUBUN}
        ,   #{PART_GUBUN}
        ,   #{REVISION_NO}
        ,   #{CUSTOM_CODE}
        ,   #{ITEM_CODE}
        ,   #{WORK_MAN}
        ,   #{REMARK}
        ,   #{S_USER_ID}
        ,   GETDATE()
        ,   #{S_USER_ID}
        ,   GETDATE()
        )
        
        SELECT  @DOC_NUM AS DOC_NUM
    </select>
    
    <update id="s_zbb200ukrv_kdService.updateDetail" parameterType="Map">
        --s_zbb200ukrv_kdService.updateDetail
        
        UPDATE  S_ZBB200T_KD
        SET     WORK_DATE       = #{WORK_DATE}
          ,     CUSTOM_CODE     = #{CUSTOM_CODE}
          ,     ITEM_CODE       = #{ITEM_CODE}
          ,     WORK_MAN        = #{WORK_MAN}
          ,     REMARK          = #{REMARK}
          ,     UPDATE_DB_USER  = #{S_USER_ID}
          ,     UPDATE_DB_TIME  = GETDATE()
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     DIV_CODE    = #{DIV_CODE}
        AND     DOC_NUM     = #{DOC_NUM}
    </update>
    
    <delete id="s_zbb200ukrv_kdService.deleteDetail" parameterType="Map">
        --s_zbb200ukrv_kdService.deleteDetail
        
        DELETE  FROM S_ZBB200T_KD
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     DIV_CODE    = #{DIV_CODE}
        AND     DOC_NUM     = #{DOC_NUM}
    </delete>
    
    <select id="s_zbb200ukrv_kdService.getFileList" parameterType="Map" resultType="rMap">
        --s_zbb200ukrv_kdService.getFileList

        SELECT  A.FID                   AS id
             ,  A.FID                   AS fid
             ,  A.ORIGINAL_FILE_NAME    AS name
             ,  B.SIZE                  AS size
             ,  '6'                     AS status 
        FROM               BDC101T A 
                INNER JOIN BFL200T B ON A.COMP_CODE = B.COMP_CODE 
                                    AND A.FID       = B.FID
        WHERE   A.COMP_CODE = #{S_COMP_CODE}
        AND     A.DOC_NO    = #{DOC_NUM}
    </select>
    
    <select id="s_zbb200ukrv_kdService.getDelFileId" parameterType="Map" resultType="rMap">
        --s_zbb200ukrv_kdService.getDelFileId
        
        SELECT  FID 
        FROM    BDC101T A
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     DOC_NO      = #{DOC_NUM}
    </select>
    
    <insert id="s_zbb200ukrv_kdService.insertBDC101" parameterType="Map">
        --s_zbb200ukrv_kdService.insertBDC101
        
        INSERT INTO BDC101T
        ( 
            COMP_CODE
        ,   DOC_NO
        ,   FID 
        ,   ORIGINAL_FILE_NAME
        ,   INSERT_DB_USER
        ,   INSERT_DB_TIME
        )
        SELECT  #{S_COMP_CODE}
             ,  #{DOC_NUM}
             ,  #{FID} 
             ,  ORIGINAL_FILE_NAME
             ,  #{S_USER_ID} 
             ,  GETDATE()
        FROM    BFL200T
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     FID         = #{FID}
    </insert>
    
    <update id="s_zbb200ukrv_kdService.deleteBDC101" parameterType="Map">
        --s_zbb200ukrv_kdService.deleteBDC101
        
        DELETE  FROM  BDC101T
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     FID         = #{FID}
    </update>
</mapper>