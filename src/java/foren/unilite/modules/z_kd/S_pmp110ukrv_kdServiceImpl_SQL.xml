<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pmp110ukrv_kdServiceImpl">
	
	<select id="s_pmp110ukrv_kdServiceImpl.selectWorkNum" parameterType="Map" resultType="rMap">
	/* uniLITE5Popup.CPopup[fnGetWkordNum] Query01   조회창  */
	BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
			
			DECLARE   @CompCode	    NVARCHAR(08) /* 법인코드		  */
			        , @UserId		NVARCHAR(100) /* 사용자ID		  */
			        , @LangType	    NVARCHAR(2)  /* 언어구분		  */
			        , @RefItem	    NVARCHAR(01) /* 명칭 참조 유형	  */
			        , @DateFormat	NVARCHAR(10) /* 날짜 포맷 유형 설정     */
						
			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}
			
			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			    FROM BSA300T WITH (NOLOCK)
			    WHERE USER_ID = @UserId
			
			SET @RefItem = ISNULL(@RefItem, N'0')
			
			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			    FROM BSA100T WITH (NOLOCK)
			    WHERE COMP_CODE = @CompCode
			    AND MAIN_CODE = N'B044'
			    AND REF_CODE1 = N'Y'
			
			SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
			
			/* 데이터 조회 */
		
		SELECT TOP 1 @RefItem = REF_ITEM
		FROM   BSA300T WITH (NOLOCK)
		WHERE  COMP_CODE = @CompCode
		AND    USER_ID   = @UserId
		
		SET @RefItem = ISNULL(@RefItem, N'0')
		
		SELECT A.WKORD_NUM
		     , A.ITEM_CODE
		     , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                ELSE                     C1.ITEM_NAME
	           END                                                         AS ITEM_NAME
		     , C1.SPEC
		     , (CASE WHEN ISNULL(A.PRODT_WKORD_DATE, '') = ''
	                 THEN ''
			         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_WKORD_DATE, 1, 4))
													         , 'MM'  , SUBSTRING(A.PRODT_WKORD_DATE, 5, 2))
													         , 'DD'  , SUBSTRING(A.PRODT_WKORD_DATE, 7, 2))
			    END)                                                       AS PRODT_WKORD_DATE
		  	 , (CASE WHEN ISNULL(A.PRODT_START_DATE, '') = ''
	                 THEN ''
			         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_START_DATE, 1, 4))
													         , 'MM'  , SUBSTRING(A.PRODT_START_DATE, 5, 2))
													         , 'DD'  , SUBSTRING(A.PRODT_START_DATE, 7, 2))
			    END)                                                  	  AS PRODT_START_DATE
		 	 , (CASE WHEN ISNULL(A.PRODT_END_DATE, '') = ''
	                 THEN ''
			         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_END_DATE, 1, 4))
													         , 'MM'  , SUBSTRING(A.PRODT_END_DATE, 5, 2))
													         , 'DD'  , SUBSTRING(A.PRODT_END_DATE, 7, 2))
			    END)                                                      AS PRODT_END_DATE
		     , CASE WHEN ISNULL(A.PROG_UNIT_Q, 0) = 0 THEN 0
		            ELSE ISNULL(A.WKORD_Q, 0) / ISNULL(A.PROG_UNIT_Q, 0)
		       END                                                        AS WKORD_Q
		     , A.WK_PLAN_NUM
		     , A.DIV_CODE
		     , A.WORK_SHOP_CODE
		     , B.ORDER_NUM
		     , ISNULL(B.ORDER_Q, 0)                                       AS ORDER_Q
		     , A.REMARK
		     , ISNULL(A.PRODT_Q, 0)                                       AS PRODT_Q
		     , (CASE WHEN ISNULL(C.DVRY_DATE, '') = ''
	                 THEN ''
			         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(C.DVRY_DATE, 1, 4))
													         , 'MM'  , SUBSTRING(C.DVRY_DATE, 5, 2))
													         , 'DD'  , SUBSTRING(C.DVRY_DATE, 7, 2))
			    END)                                                      AS DVRY_DATE
		     , C1.STOCK_UNIT
		     , A.PROJECT_NO
		     , A.PJT_CODE
		     , A.LOT_NO
		     , A.REWORK_YN
		     , A.STOCK_EXCHG_TYPE
		     , B.REMARK  AS CUSTOM
		FROM              PMP100T A  WITH (NOLOCK)
		       LEFT  JOIN PPL100T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                          AND B.DIV_CODE    = A.DIV_CODE
		                                          AND B.WK_PLAN_NUM = A.WK_PLAN_NUM
		       LEFT  JOIN SOF110T C  WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
		                                          AND C.DIV_CODE    = B.DIV_CODE
		                                          AND C.ORDER_NUM   = B.ORDER_NUM
		                                          AND C.SER_NO      = B.SEQ
		       INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
		                                          AND C1.ITEM_CODE  = A.ITEM_CODE
		WHERE  A.COMP_CODE         = @CompCode
		  AND  LINE_END_YN   	   = 'Y'
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	        AND  A.DIV_CODE      = #{DIV_CODE}  
	    </if>
		<if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
	        AND  A.WKORD_NUM      = #{WKORD_NUM}  
	    </if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">    
			AND A.ITEM_CODE      LIKE #{ITEM_CODE} +  '%'		/*품목코드*/
		</if>
		<if test="@foren.Ognl@isNotEmpty(FR_PRODT_DATE)"> 
	    AND     A.PRODT_START_DATE &gt;=#{FR_PRODT_DATE}
	    </if> 
		<if test="@foren.Ognl@isNotEmpty(TO_PRODT_DATE)"> 
	    AND     A.PRODT_START_DATE &lt;= #{TO_PRODT_DATE}
	    </if> 
	    <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
	    AND     A.WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
	    </if>

	    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	    AND (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	              WHEN @RefItem = '2' THEN C1.ITEM_NAME2
				                      ELSE C1.ITEM_NAME
		      END)             LIKE #{ITEM_NAME} + '%'			
	    </if>
		<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
	        AND  A.LOT_NO      = #{LOT_NO}  
	    </if>

		ORDER BY A.WKORD_NUM
		
		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END 	
		</select>
	
	
	
    <select id="s_pmp110ukrv_kdServiceImpl.selectMasterForm" parameterType="Map" resultType="rMap">
    /* s_pmp110ukrv_kd.Cs_pmp110ukrv_kd[fnPmp110QStd] Query01  Form 조회 */
	BEGIN
		SET NOCOUNT ON
		SET ARITHABORT ON
		
		DECLARE   @CompCode	    NVARCHAR(08) /* 법인코드		  */
		        , @UserId		NVARCHAR(100) /* 사용자ID		  */
		        , @LangType	    NVARCHAR(2)  /* 언어구분		  */
		        , @RefItem	    NVARCHAR(01) /* 명칭 참조 유형	  */
		        , @DateFormat	NVARCHAR(10) /* 날짜 포맷 유형 설정     */
					
		SET @CompCode = #{S_COMP_CODE}
		SET @UserId   = #{S_USER_ID}
		SET @LangType = #{S_LANG_CODE}
		
		/* 명칭 참조 유형 */
		SELECT TOP 1 @RefItem = REF_ITEM
		    FROM BSA300T WITH (NOLOCK)
		    WHERE USER_ID = @UserId
		
		SET @RefItem = ISNULL(@RefItem, N'0')
		
		/* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
		    FROM BSA100T WITH (NOLOCK)
		    WHERE COMP_CODE = @CompCode
		    AND MAIN_CODE = N'B044'
		    AND REF_CODE1 = N'Y'
		
		SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		/* 데이터 조회 */
 
	 	SELECT 
	        A.WKORD_NUM
	      , A.ITEM_CODE
	      , uniLITE.fnItemNameComp(B.COMP_CODE, @UserId, B.ITEM_CODE) AS ITEM_NAME
	      , B.SPEC
	      , (CASE WHEN ISNULL(A.PRODT_WKORD_DATE, '') = ''
	                    THEN ''
			            ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_WKORD_DATE, 1, 4))
													            , 'MM'  , SUBSTRING(A.PRODT_WKORD_DATE, 5, 2))
													            , 'DD'  , SUBSTRING(A.PRODT_WKORD_DATE, 7, 2))
			    END)                                                  AS PRODT_WKORD_DATE
		  , (CASE WHEN ISNULL(A.PRODT_START_DATE, '') = ''
	                    THEN ''
			            ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_START_DATE, 1, 4))
													            , 'MM'  , SUBSTRING(A.PRODT_START_DATE, 5, 2))
													            , 'DD'  , SUBSTRING(A.PRODT_START_DATE, 7, 2))
			    END)                                                  AS PRODT_START_DATE
		  , (CASE WHEN ISNULL(A.PRODT_END_DATE, '') = ''
	                    THEN ''
			            ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_END_DATE, 1, 4))
													            , 'MM'  , SUBSTRING(A.PRODT_END_DATE, 5, 2))
													            , 'DD'  , SUBSTRING(A.PRODT_END_DATE, 7, 2))
			    END)                                                  AS PRODT_END_DATE
	      , CASE WHEN A.WKORD_Q IS NULL OR A.WKORD_Q = 0 THEN 0
	             ELSE unilite.fnformat(@CompCode, A.WKORD_Q / A.PROG_UNIT_Q, 'P_FSET_QS')
	        END  AS WKORD_Q
	      , A.WK_PLAN_NUM
	      , A.DIV_CODE
	      , A.WORK_SHOP_CODE
	      , C.ORDER_NUM
	      , CASE WHEN C.PLAN_TYPE = 'T'
	                  THEN unilite.fnformat(@CompCode, ISNULL(D.QTY, 0) * ISNULL(D.TRANS_RATE, 0), 'P_FSET_QS')
	                  ELSE unilite.fnformat(@CompCode, ISNULL(E.ORDER_Q, 0), 'P_FSET_QS') /* 수주를 참조한 자료면 수주정보의 납기일 참조한다.*/
	        END  AS ORDER_Q
	      , C.REMARK
	      , unilite.fnformat(@CompCode, ISNULL(A.PRODT_Q,0), 'P_FSET_QS') AS PRODT_Q
	      , CASE WHEN C.PLAN_TYPE = 'T'
	                  THEN uniLITE.fnGetUserDate(D.COMP_CODE, D.DELIVERY_DATE)  /* OFFER를 참조한 자료면 OFFER정보의 납기일 참조한다. */
	                  ELSE uniLITE.fnGetUserDate(E.COMP_CODE, E.DVRY_DATE)      /* 수주를 참조한 자료면 수주정보의 납기일 참조한다.      */
	        END  AS DVRY_DATE
	      , B.STOCK_UNIT
	      , A.PROJECT_NO
	      , A.PJT_CODE
	      , A.LOT_NO
	      , A.REWORK_YN
	      , A.STOCK_EXCHG_TYPE
	      , A.WORK_END_YN
	 	FROM              PMP100T A WITH(NOLOCK)
	        INNER JOIN BPR100T B WITH(NOLOCK) ON  B.COMP_CODE   = A.COMP_CODE
	                                          AND B.ITEM_CODE   = A.ITEM_CODE
	        LEFT  JOIN PPL100T C WITH(NOLOCK) ON  C.COMP_CODE   = A.COMP_CODE
	                                          AND C.DIV_CODE    = A.DIV_CODE
	                                          AND C.WK_PLAN_NUM = A.WK_PLAN_NUM
	        LEFT  JOIN TEA110T D WITH(NOLOCK) ON  D.COMP_CODE   = C.COMP_CODE
	                                          AND D.DIV_CODE    = C.DIV_CODE
	                                          AND D.SO_SER_NO   = C.ORDER_NUM
	                                          AND D.SO_SER      = C.SEQ
	        LEFT  JOIN SOF110T E WITH(NOLOCK) ON  E.COMP_CODE   = C.COMP_CODE
	                                          AND E.DIV_CODE    = C.DIV_CODE
	                                          AND E.ORDER_NUM   = C.ORDER_NUM
	                                          AND E.SER_NO      = C.SEQ
	                                          
		 WHERE  A.COMP_CODE      = @CompCode
		 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	        AND  A.DIV_CODE      = #{DIV_CODE}  
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(WKORD_NUM)">
	        AND  A.WKORD_NUM     = #{WKORD_NUM}  
	     </if>
		 <if test="LINE_END_YN == &quot;Y&quot;">
		 AND    LINE_END_YN      = 'Y'
		 </if>
         <if test="LINE_END_YN == &quot;N&quot;">
         AND    LINE_END_YN      = 'N'
         </if>
		
		
		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END 	
    	
    </select>
    <select id="s_pmp110ukrv_kdServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">	
    /* s_pmp110ukrv_kd.Cs_pmp110ukrv_kd[fnPmp110QStd] Query02  Grid 조회 */ 
		 BEGIN
		SET NOCOUNT ON
		SET ARITHABORT ON
		
		DECLARE   @CompCode	    NVARCHAR(08) /* 법인코드		  */
		        , @UserId		NVARCHAR(100) /* 사용자ID		  */
		        , @LangType	    NVARCHAR(2)  /* 언어구분		  */
		        , @RefItem	    NVARCHAR(01) /* 명칭 참조 유형	  */
		        , @DateFormat	NVARCHAR(10) /* 날짜 포맷 유형 설정     */
					
		SET @CompCode = #{S_COMP_CODE}
		SET @UserId   = #{S_USER_ID}
		SET @LangType = #{S_LANG_CODE}
		
		/* 명칭 참조 유형 */
		SELECT TOP 1 @RefItem = REF_ITEM
		    FROM BSA300T WITH (NOLOCK)
		    WHERE USER_ID = @UserId
		
		SET @RefItem = ISNULL(@RefItem, N'0')
		
		/* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
		    FROM BSA100T WITH (NOLOCK)
		    WHERE COMP_CODE = @CompCode
		    AND MAIN_CODE = N'B044'
		    AND REF_CODE1 = N'Y'
		
		SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		/* 데이터 조회 */
		 SELECT 
		        A.LINE_SEQ
		      , A.PROG_WORK_CODE
		      , B.PROG_WORK_NAME
              , A.EQUIP_CODE
              , D.EQUIP_NAME
              , A.MOLD_CODE
              , E.MOLD_NAME
		      , unilite.fnformat(@CompCode, A.PROG_UNIT_Q, 'P_FSET_QS') AS PROG_UNIT_Q
		      , unilite.fnformat(@CompCode, A.WKORD_Q, 'P_FSET_QS')     AS WKORD_Q
		      , A.PROG_UNIT
		      , A.DIV_CODE
		      , A.WKORD_NUM
		      , A.WORK_SHOP_CODE
		      , (CASE WHEN ISNULL(A.PRODT_WKORD_DATE, '') = ''
	                    THEN ''
			            ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_WKORD_DATE, 1, 4))
													            , 'MM'  , SUBSTRING(A.PRODT_WKORD_DATE, 5, 2))
													            , 'DD'  , SUBSTRING(A.PRODT_WKORD_DATE, 7, 2))
			    END)                                                       AS PRODT_WKORD_DATE
			  , (CASE WHEN ISNULL(A.PRODT_START_DATE, '') = ''
		                    THEN ''
				            ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_START_DATE, 1, 4))
														            , 'MM'  , SUBSTRING(A.PRODT_START_DATE, 5, 2))
														            , 'DD'  , SUBSTRING(A.PRODT_START_DATE, 7, 2))
				    END)                                                   AS PRODT_START_DATE
			  , (CASE WHEN ISNULL(A.PRODT_END_DATE, '') = ''
		                    THEN ''
				            ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_END_DATE, 1, 4))
														            , 'MM'  , SUBSTRING(A.PRODT_END_DATE, 5, 2))
														            , 'DD'  , SUBSTRING(A.PRODT_END_DATE, 7, 2))
				    END)                                                   AS PRODT_END_DATE
		      , A.ITEM_CODE
		      , A.REMARK
		      , A.WK_PLAN_NUM
		      , A.LINE_END_YN
		      , CASE WHEN @RefItem = '0' THEN C.ITEM_NAME
	                 WHEN @RefItem = '1' THEN C.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN C.ITEM_NAME2
	                 ELSE                     C.ITEM_NAME
	           END                                                          AS ITEM_NAME
		      , C.SPEC
		      , A.WORK_END_YN
		      , A.PROJECT_NO
		      , A.PJT_CODE
		      , A.LOT_NO
		      , A.REWORK_YN
		      , A.STOCK_EXCHG_TYPE
		      , CONVERT(NVARCHAR(10), '') AS UPDATE_DB_USER
		      , CONVERT(NVARCHAR(20), '') AS UPDATE_DB_TIME
		      , A.COMP_CODE
		 FROM              PMP100T A WITH(NOLOCK)
		        INNER JOIN PBS200T B WITH(NOLOCK) ON  B.COMP_CODE      = A.COMP_CODE
		                                          AND B.DIV_CODE       = A.DIV_CODE
		                                          AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
		                                          AND B.PROG_WORK_CODE = A.PROG_WORK_CODE
		        INNER JOIN BPR100T C WITH(NOLOCK) ON  C.COMP_CODE      = A.COMP_CODE
		                                          AND C.ITEM_CODE      = A.ITEM_CODE
                LEFT  JOIN S_EQM100T_KD  D WITH (NOLOCK) ON D.comp_code      = A.comp_code
                                                        AND D.div_code       = A.div_code
                                                        AND D.EQUIP_CODE     = A.EQUIP_CODE
                LEFT  JOIN S_MOM100T_KD  E WITH (NOLOCK) ON E.comp_code      = A.comp_code
                                                        AND E.div_code       = A.div_code
                                                        AND E.MOLD_CODE      = A.MOLD_CODE
		 WHERE  A.COMP_CODE = @CompCode
		    
		 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	        AND  A.DIV_CODE      = #{DIV_CODE}  
	     </if>
	     
	        AND  A.WKORD_NUM     = #{WKORD_NUM}  
	     
		        
		  ORDER BY CONVERT(NUMERIC, A.LINE_SEQ) ASC
		  
		  SET NOCOUNT OFF
		  SET ARITHABORT OFF
	END
    
    </select>	
	<select id="s_pmp110ukrv_kdServiceImpl.selectEstiList" parameterType="Map" resultType="rMap">
   	
	/* pmp100ukrv.Cpmp100ukrv[fnPmp100QSt1] Query01 */
	
	BEGIN
		SET NOCOUNT ON
		SET ARITHABORT ON
		
		DECLARE @CompCode	    NVARCHAR(08) /* 법인코드				*/
		        , @UserId		NVARCHAR(100) /* 사용자ID				*/
		        , @LangType	    NVARCHAR(2)  /* 언어구분				*/
		        , @RefItem	    NVARCHAR(01) /* 명칭 참조 유형		    */
		        , @DateFormat	NVARCHAR(10) /* 날짜 포맷 유형 설정       		*/
					
		SET @CompCode = #{S_COMP_CODE}
		SET @UserId   = #{S_USER_ID}
		SET @LangType = #{S_LANG_CODE}
		
		/* 명칭 참조 유형 */
		SELECT TOP 1 @RefItem = REF_ITEM
		    FROM BSA300T WITH (NOLOCK)
		    WHERE USER_ID = @UserId
		
		SET @RefItem = ISNULL(@RefItem, N'0')
		
		/* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
		    FROM BSA100T WITH (NOLOCK)
		    WHERE COMP_CODE = @CompCode
		    AND MAIN_CODE = N'B044'
		    AND REF_CODE1 = N'Y'
		
		SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		/* 데이터 조회 */
	
	    SELECT CAST(0 AS BIT)           AS GUBUN
	             , A.DIV_CODE
				 , A.WORK_SHOP_CODE
				 , A.WK_PLAN_NUM
				 , A.ITEM_CODE
				 , uniLITE.fnItemNameComp(B.COMP_CODE, @UserId, B.ITEM_CODE)    AS ITEM_NAME
				 , B.SPEC
				 , B.STOCK_UNIT
				 , ISNULL(A.WK_PLAN_Q, 0)             AS WK_PLAN_Q
				 , ISNULL(H.WKORD_Q,   0)             AS WKORD_Q
				 , A.WK_PLAN_Q - ISNULL(H.WKORD_Q, 0) AS WKORD_REMAIN_Q
				 , C.PRODUCT_LDTIME
				 , uniLITE.fnGetUserDate(A.COMP_CODE,
										 unilite.fnGetWorkDate(A.PRODT_PLAN_DATE, C.PRODUCT_LDTIME * (-1), ISNULL(M1.SUB_CODE,1)))  AS PRODT_START_DATE
				 , uniLITE.fnGetUserDate(A.COMP_CODE, A.PRODT_PLAN_DATE)    AS PRODT_PLAN_DATE
				 , A.ORDER_NUM
				 , CASE WHEN A.PLAN_TYPE = 'T'
							 THEN uniLITE.fnGetUserDate(G.COMP_CODE, G.DATE_DEPART)
							 ELSE uniLITE.fnGetUserDate(E.COMP_CODE, E.ORDER_DATE)
				   END  AS ORDER_DATE
				 , CASE WHEN A.PLAN_TYPE = 'T'
							 THEN ISNULL(F.QTY, 0) * ISNULL(F.TRANS_RATE, 0)
							 ELSE ISNULL(D.ORDER_Q, 0)
				   END  AS ORDER_Q
				 , CASE WHEN A.PLAN_TYPE = 'T'
							 THEN uniLITE.fnCustNameComp(G.COMP_CODE, @UserId, G.IMPORTER)
							 ELSE uniLITE.fnCustNameComp(E.COMP_CODE, @UserId, E.CUSTOM_CODE)
				   END  AS CUSTOM_CODE
				 , CASE WHEN A.PLAN_TYPE = 'T'
							 THEN uniLITE.fnGetUserDate(F.COMP_CODE, F.DELIVERY_DATE)
							 ELSE uniLITe.fnGetUserDate(D.COMP_CODE, D.DVRY_DATE)
				   END  AS DVRY_DATE
				 , CASE WHEN A.PLAN_TYPE != 'T' THEN E.PROJECT_NO END   AS PROJECT_NO
				 , CASE WHEN A.PLAN_TYPE != 'T' THEN E.PJT_CODE   END   AS PJT_CODE
	        FROM       PPL100T A WITH(NOLOCK)
	        INNER JOIN BPR100T B WITH(NOLOCK)   ON  B.COMP_CODE   = A.COMP_CODE
	                                            AND B.ITEM_CODE   = A.ITEM_CODE
	        INNER JOIN BPR200T C WITH(NOLOCK)   ON  C.COMP_CODE   = A.COMP_CODE
	                                            AND C.DIV_CODE    = A.DIV_CODE
	                                            AND C.ITEM_CODE   = A.ITEM_CODE
	        LEFT  JOIN SOF110T D WITH(NOLOCK)   ON  D.COMP_CODE   = A.COMP_CODE
	                                            AND D.DIV_CODE    = A.DIV_CODE
	                                            AND D.ORDER_NUM   = A.ORDER_NUM
	                                            AND D.SER_NO      = A.SEQ
	        LEFT  JOIN SOF100T E WITH(NOLOCK)   ON  E.COMP_CODE   = D.COMP_CODE
	                                            AND E.DIV_CODE    = D.DIV_CODE
	                                            AND E.ORDER_NUM   = D.ORDER_NUM
	        LEFT  JOIN TEA110T F WITH(NOLOCK)   ON  F.COMP_CODE   = A.COMP_CODE
	                                            AND F.DIV_CODE    = A.DIV_CODE
	                                            AND F.SO_SER_NO   = A.ORDER_NUM
	                                            AND F.SO_SER      = A.SEQ    
	        LEFT  JOIN TEA100T G WITH(NOLOCK)   ON  G.COMP_CODE   = F.COMP_CODE
	                                            AND G.DIV_CODE    = F.DIV_CODE
	                                            AND G.SO_SER_NO   = F.SO_SER_NO
            LEFT  JOIN ( SELECT A.COMP_CODE
                              , A.DIV_CODE
                              , A.WK_PLAN_NUM
                              , ISNULL(SUM(A.WKORD_Q), 0) AS WKORD_Q
                         FROM( SELECT X.COMP_CODE
                                    , X.DIV_CODE
                                    , X.WK_PLAN_NUM
                                    , X.WKORD_NUM
                                    , ISNULL(MAX(X.WKORD_Q), 0) AS WKORD_Q
			                     FROM PMP100T X WITH(NOLOCK)
						        WHERE X.COMP_CODE   = @CompCode
						          AND X.DIV_CODE    = #{DIV_CODE}
						          AND X.WK_PLAN_NUM > ''
						       GROUP BY X.COMP_CODE, X.DIV_CODE, X.WK_PLAN_NUM, X.WKORD_NUM
						      ) A
						GROUP BY A.COMP_CODE, A.DIV_CODE, A.WK_PLAN_NUM ) H ON H.COMP_CODE   = A.COMP_CODE 
                                                                           AND H.DIV_CODE    = A.DIV_CODE
                                                                           AND H.WK_PLAN_NUM = A.WK_PLAN_NUM
	        INNER JOIN BSA100T M1 WITH(NOLOCK)  ON  M1.COMP_CODE  = A.COMP_CODE
	                                            AND M1.MAIN_CODE  = 'B062'
	                                            AND M1.SUB_CODE  != '$'
	                                            AND M1.REF_CODE1  = 'Y'
	        WHERE  A.COMP_CODE        = @CompCode
	        AND    A.DIV_CODE         = #{DIV_CODE}  	        
		    AND (    ( A.WKORD_YN     = 'N' AND ISNULL(H.WKORD_Q, 0) = 0 )
                  OR ( A.WKORD_YN     = 'Y' AND A.WK_PLAN_Q - ISNULL(H.WKORD_Q, 0) &gt; 0)
	            ) 
	        
	        <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
	        AND  A.WORK_SHOP_CODE   = #{WORK_SHOP_CODE}  
	        </if>	       
			<if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE_FR)">
	        AND  A.PRODT_PLAN_DATE &gt;= #{OUTSTOCK_REQ_DATE_FR}
	        </if>	       
		    <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE_TO)">
	        AND  A.PRODT_PLAN_DATE &lt;= #{OUTSTOCK_REQ_DATE_TO}
	        </if>	       
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	        AND  A.ITEM_CODE     LIKE #{ITEM_CODE} + '%'
	        </if>	  
	        ORDER BY A.ITEM_CODE, PRODT_PLAN_DATE
	 
	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END 
	</select>
	
	
	<select id="s_pmp110ukrv_kdServiceImpl.selectProgInfo" parameterType="Map" resultType="rMap">
	/* s_pmp110ukrv_kd.Cs_pmp110ukrv_kd[fnProgInfo] Query	*/
		DECLARE @COMP_CODE          NVARCHAR(08)
		      , @DIV_CODE           NVARCHAR(08)
		      , @WORK_SHOP_CODE     NVARCHAR(08)
		      , @ITEM_CODE          NVARCHAR(20)
		
		SET     @COMP_CODE          = #{S_COMP_CODE}
		SET     @DIV_CODE           = #{DIV_CODE}
		SET     @WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
		SET     @ITEM_CODE          = #{ITEM_CODE}
		
		SELECT A.DIV_CODE
		     , A.ITEM_CODE
		     , A.LINE_SEQ
		     , A.PROG_WORK_CODE
		     , B.PROG_WORK_NAME
		     , unilite.fnFormat(@COMP_CODE, ISNULL(A.PROG_UNIT_Q, 1), 'P_FSET_QS') AS PROG_UNIT_Q
		     , ISNULL(A.PROG_UNIT,'') AS PROG_UNIT
		FROM              PBS300T A WITH(NOLOCK)
		       INNER JOIN PBS200T B WITH(NOLOCK) ON  B.COMP_CODE      = A.COMP_CODE
		                                         AND B.DIV_CODE       = A.DIV_CODE
		                                         AND B.PROG_WORK_CODE = A.PROG_WORK_CODE
		                                         AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
		WHERE  A.COMP_CODE      = @COMP_CODE
		AND  ((A.DIV_CODE       = @DIV_CODE       AND @DIV_CODE       != '') OR (@DIV_CODE       = ''))
		AND  ((B.WORK_SHOP_CODE = @WORK_SHOP_CODE AND @WORK_SHOP_CODE != '') OR (@WORK_SHOP_CODE = ''))
		AND  ((A.ITEM_CODE      = @ITEM_CODE      AND @ITEM_CODE      != '') OR (@ITEM_CODE      = ''))
		ORDER BY CAST(LINE_SEQ AS INT) ASC 
	</select>
	
	<select id="s_pmp110ukrv_kdServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
	
	<update id="s_pmp110ukrv_kdServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{BASIS_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{KEY_NUMBER, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>
	
	
	<insert id="s_pmp110ukrv_kdServiceImpl.insertLogMaster" parameterType="Map">
		/*s_pmp110ukrv_kdServiceImpl.insertLogMaster*/
		INSERT INTO L_PMP100T
    	     ( KEY_VALUE		    , OPR_FLAG
    	     , LINE_SEQ             , PROG_WORK_CODE              , PROG_UNIT_Q             , WKORD_Q        		, PROG_UNIT
    	     , DIV_CODE     		, WKORD_NUM      			  , WORK_SHOP_CODE      	, PRODT_START_DATE      , PRODT_END_DATE
    	     , PRODT_WKORD_DATE     , ITEM_CODE					  , REMARK					, PROJECT_NO		  	, LOT_NO 
    	     , REWORK_YN			, STOCK_EXCHG_TYPE			  , COMP_CODE               , EQUIP_CODE            , MOLD_CODE
    	     , WK_PLAN_NUM          , INSERT_DB_USER 		      , INSERT_DB_TIME 			, UPDATE_DB_USER 	    , UPDATE_DB_TIME 
    	     )
    	VALUES
    	     ( #{KEY_VALUE}         , #{OPR_FLAG}
    	     , #{LINE_SEQ}          , #{PROG_WORK_CODE}           , #{PROG_UNIT_Q}          , #{WKORD_Q}        	, #{PROG_UNIT}
    	     , #{DIV_CODE}     		, #{WKORD_NUM}      		  , #{WORK_SHOP_CODE}      	, #{PRODT_START_DATE}   , #{PRODT_END_DATE}
    	     , #{PRODT_WKORD_DATE}  , #{ITEM_CODE}				  , #{REMARK}				, #{PROJECT_NO}			, #{LOT_NO} 
    	     , #{REWORK_YN}			, #{STOCK_EXCHG_TYPE}		  , #{COMP_CODE}            , #{EQUIP_CODE}         , #{MOLD_CODE}
    	     , #{WK_PLAN_NUM}       , #{S_USER_ID}			      , GETDATE()				, #{S_USER_ID}    	  	, GETDATE()
    		 )
	</insert>  
	
	<update id="s_pmp110ukrv_kdServiceImpl.USP_PRODT_Pmp100ukr" parameterType="Map" statementType="CALLABLE">
		{call USP_PRODT_Pmp100ukr_KD (
            #{KeyValue,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{WKORD_NUM,    mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
            #{LOT_NO,       mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ErrorDesc,    mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
	</update>
	
</mapper>