<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_ryt520skrv_kdService">
    <select id="s_ryt520skrv_kdService.selectList" parameterType="Map" resultType="rMap">
    	--s_ryt520skrv_kdService.selectList
    	
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
           
            DECLARE @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
                  , @DIV_CODE           NVARCHAR(08)                -- (필수) 사업장
                  , @CUSTOM_CODE        NVARCHAR(20)                -- (필수) 거래처코드
                  , @FROM_MONTH         NVARCHAR(06)                -- (필수) FROM 작업년월
                  , @TO_MONTH           NVARCHAR(06)                -- (필수) TO 작업년월
                  , @GUBUN1             NVARCHAR(02)                -- (필수) 비율/단가 (R/P)
                  , @GUBUN3             NVARCHAR(02)                -- (필수) BOM적용           
                  , @WORK_YEAR          NVARCHAR(4)
                  , @WORK_SEQ           NUMERIC(1,0)
        
            SET @COMP_CODE   = #{S_COMP_CODE}
            SET @DIV_CODE    = #{DIV_CODE}
            SET @CUSTOM_CODE = #{CUSTOM_CODE}
            SET @FROM_MONTH  = #{FROM_MONTH}
            SET @TO_MONTH    = #{TO_MONTH}
            SET @GUBUN1      = #{GUBUN1}
            SET @GUBUN3      = #{GUBUN3}
            SET @WORK_YEAR   = #{WORK_YEAR}
            SET @WORK_SEQ    = #{WORK_SEQ}            

            SELECT B.COMP_CODE, B.DIV_CODE, B.MONEY_UNIT, B.ITEM_CODE, C.ITEM_NAME, A.GUBUN_NAME AS GUBUN
              	, B.MONTH1
              	, B.MONTH2 
              	, B.MONTH3 
              	, B.MONTH4 
              	, B.MONTH5 
              	, B.MONTH6 
              	, B.MONTH7 
              	, B.MONTH8 
              	, B.MONTH9 
              	, B.MONTH10
              	, B.MONTH11
              	, B.MONTH12
              	, B.TOT_AMT AS TOTAL
            
            FROM (
            		SELECT '10' AS GUBUN, '매출액' AS GUBUN_NAME UNION ALL
            		SELECT '50' AS GUBUN, '기술료비율(%)' AS GUBUN_NAME UNION ALL
            		SELECT '90' AS GUBUN, '기술료' AS GUBUN_NAME
            	 ) A
            	 INNER JOIN (
            
            		SELECT	A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, B.ITEM_CODE	--, B.SALES_CUSTOM_CODE	--, B.SELL_MONTH, B.D_AMT_SELL_FOR
            				, A.MONEY_UNIT
            				, '10' AS GUBUN
            				, SUM(CASE WHEN B.SELL_MONTH =  A.CON_FR_YYMM													 THEN (CASE WHEN A.GUBUN1 = 'R' THEN B.D_AMT_SELL_FOR ELSE B.QTY_SELL END) ELSE 0 END) AS MONTH1
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 1 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN A.GUBUN1 = 'R' THEN B.D_AMT_SELL_FOR ELSE B.QTY_SELL END) ELSE 0 END) AS MONTH2 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 2 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN A.GUBUN1 = 'R' THEN B.D_AMT_SELL_FOR ELSE B.QTY_SELL END) ELSE 0 END) AS MONTH3 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 3 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN A.GUBUN1 = 'R' THEN B.D_AMT_SELL_FOR ELSE B.QTY_SELL END) ELSE 0 END) AS MONTH4 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 4 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN A.GUBUN1 = 'R' THEN B.D_AMT_SELL_FOR ELSE B.QTY_SELL END) ELSE 0 END) AS MONTH5 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 5 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN A.GUBUN1 = 'R' THEN B.D_AMT_SELL_FOR ELSE B.QTY_SELL END) ELSE 0 END) AS MONTH6 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 6 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN A.GUBUN1 = 'R' THEN B.D_AMT_SELL_FOR ELSE B.QTY_SELL END) ELSE 0 END) AS MONTH7 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 7 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN A.GUBUN1 = 'R' THEN B.D_AMT_SELL_FOR ELSE B.QTY_SELL END) ELSE 0 END) AS MONTH8 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 8 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN A.GUBUN1 = 'R' THEN B.D_AMT_SELL_FOR ELSE B.QTY_SELL END) ELSE 0 END) AS MONTH9 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 9 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN A.GUBUN1 = 'R' THEN B.D_AMT_SELL_FOR ELSE B.QTY_SELL END) ELSE 0 END) AS MONTH10
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 10, A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN A.GUBUN1 = 'R' THEN B.D_AMT_SELL_FOR ELSE B.QTY_SELL END) ELSE 0 END) AS MONTH11
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 11, A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN A.GUBUN1 = 'R' THEN B.D_AMT_SELL_FOR ELSE B.QTY_SELL END) ELSE 0 END) AS MONTH12
            				, SUM(CASE WHEN A.GUBUN1 = 'R' THEN B.D_AMT_SELL_FOR ELSE B.QTY_SELL END)																											   AS TOT_AMT
            		FROM	S_RYT500T_KD			A WITH (NOLOCK)
            				INNER JOIN S_RYT510T_KD B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.WORK_YEAR=B.WORK_YEAR AND A.WORK_SEQ=B.WORK_SEQ
            		WHERE	A.COMP_CODE		= @COMP_CODE
            		AND		A.DIV_CODE		= @DIV_CODE
            		AND		A.WORK_YEAR		= @WORK_YEAR
            		AND		A.WORK_SEQ		= @WORK_SEQ
            		AND		A.CUSTOM_CODE	= @CUSTOM_CODE
            		GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, B.ITEM_CODE, A.MONEY_UNIT
            		UNION ALL
            		SELECT	A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, B.ITEM_CODE	--, B.SALES_CUSTOM_CODE	--, B.SELL_MONTH, B.D_AMT_SELL_FOR
            				, A.MONEY_UNIT
            				, '50' AS GUBUN
            				, SUM(CASE WHEN B.SELL_MONTH =  A.CON_FR_YYMM													                           THEN (CASE WHEN C.GUBUN1 = 'R' AND C.GUBUN3='Y' THEN B.RATE_N WHEN C.GUBUN1 = 'R' AND C.GUBUN3='N' THEN C.RYT_P ELSE C.RYT_P END) ELSE 0 END) AS MONTH1
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 1 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN C.GUBUN1 = 'R' AND C.GUBUN3='Y' THEN B.RATE_N WHEN C.GUBUN1 = 'R' AND C.GUBUN3='N' THEN C.RYT_P ELSE C.RYT_P END) ELSE 0 END) AS MONTH2 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 2 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN C.GUBUN1 = 'R' AND C.GUBUN3='Y' THEN B.RATE_N WHEN C.GUBUN1 = 'R' AND C.GUBUN3='N' THEN C.RYT_P ELSE C.RYT_P END) ELSE 0 END) AS MONTH3 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 3 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN C.GUBUN1 = 'R' AND C.GUBUN3='Y' THEN B.RATE_N WHEN C.GUBUN1 = 'R' AND C.GUBUN3='N' THEN C.RYT_P ELSE C.RYT_P END) ELSE 0 END) AS MONTH4 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 4 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN C.GUBUN1 = 'R' AND C.GUBUN3='Y' THEN B.RATE_N WHEN C.GUBUN1 = 'R' AND C.GUBUN3='N' THEN C.RYT_P ELSE C.RYT_P END) ELSE 0 END) AS MONTH5 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 5 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN C.GUBUN1 = 'R' AND C.GUBUN3='Y' THEN B.RATE_N WHEN C.GUBUN1 = 'R' AND C.GUBUN3='N' THEN C.RYT_P ELSE C.RYT_P END) ELSE 0 END) AS MONTH6 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 6 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN C.GUBUN1 = 'R' AND C.GUBUN3='Y' THEN B.RATE_N WHEN C.GUBUN1 = 'R' AND C.GUBUN3='N' THEN C.RYT_P ELSE C.RYT_P END) ELSE 0 END) AS MONTH7 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 7 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN C.GUBUN1 = 'R' AND C.GUBUN3='Y' THEN B.RATE_N WHEN C.GUBUN1 = 'R' AND C.GUBUN3='N' THEN C.RYT_P ELSE C.RYT_P END) ELSE 0 END) AS MONTH8 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 8 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN C.GUBUN1 = 'R' AND C.GUBUN3='Y' THEN B.RATE_N WHEN C.GUBUN1 = 'R' AND C.GUBUN3='N' THEN C.RYT_P ELSE C.RYT_P END) ELSE 0 END) AS MONTH9 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 9 , A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN C.GUBUN1 = 'R' AND C.GUBUN3='Y' THEN B.RATE_N WHEN C.GUBUN1 = 'R' AND C.GUBUN3='N' THEN C.RYT_P ELSE C.RYT_P END) ELSE 0 END) AS MONTH10
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 10, A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN C.GUBUN1 = 'R' AND C.GUBUN3='Y' THEN B.RATE_N WHEN C.GUBUN1 = 'R' AND C.GUBUN3='N' THEN C.RYT_P ELSE C.RYT_P END) ELSE 0 END) AS MONTH11
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 11, A.CON_FR_YYMM+'01'), 112) THEN (CASE WHEN C.GUBUN1 = 'R' AND C.GUBUN3='Y' THEN B.RATE_N WHEN C.GUBUN1 = 'R' AND C.GUBUN3='N' THEN C.RYT_P ELSE C.RYT_P END) ELSE 0 END) AS MONTH12
            				, AVG(CASE WHEN C.GUBUN1 = 'R' AND C.GUBUN3='Y' THEN B.RATE_N WHEN C.GUBUN1 = 'R' AND C.GUBUN3='N' THEN C.RYT_P ELSE C.RYT_P END)						        																						 AS TOT_AMT
            		FROM	S_RYT500T_KD			A WITH (NOLOCK)                          
            				INNER JOIN S_RYT510T_KD B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.WORK_YEAR=B.WORK_YEAR AND A.WORK_SEQ=B.WORK_SEQ
            				INNER JOIN S_RYT200T_KD C WITH (NOLOCK) ON A.COMP_CODE=C.COMP_CODE AND A.DIV_CODE=C.DIV_CODE AND A.WORK_YEAR=C.WORK_YEAR AND A.WORK_SEQ=C.WORK_SEQ
            		WHERE	A.COMP_CODE		= @COMP_CODE
            		AND		A.DIV_CODE		= @DIV_CODE
            		AND		A.WORK_YEAR		= @WORK_YEAR
            		AND		A.WORK_SEQ		= @WORK_SEQ
            		AND		A.CUSTOM_CODE	= @CUSTOM_CODE
            		GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, B.ITEM_CODE, A.MONEY_UNIT
            		UNION ALL
            		SELECT	A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, B.ITEM_CODE	--, B.SALES_CUSTOM_CODE	--, B.SELL_MONTH, B.D_AMT_SELL_FOR
            				, A.MONEY_UNIT
            				, '90' AS GUBUN
            				, SUM(CASE WHEN B.SELL_MONTH =  A.CON_FR_YYMM													 THEN B.D_AMT_ROYALTY_FOR ELSE 0 END) AS MONTH1
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 1 , A.CON_FR_YYMM+'01'), 112) THEN B.D_AMT_ROYALTY_FOR ELSE 0 END) AS MONTH2 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 2 , A.CON_FR_YYMM+'01'), 112) THEN B.D_AMT_ROYALTY_FOR ELSE 0 END) AS MONTH3 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 3 , A.CON_FR_YYMM+'01'), 112) THEN B.D_AMT_ROYALTY_FOR ELSE 0 END) AS MONTH4 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 4 , A.CON_FR_YYMM+'01'), 112) THEN B.D_AMT_ROYALTY_FOR ELSE 0 END) AS MONTH5 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 5 , A.CON_FR_YYMM+'01'), 112) THEN B.D_AMT_ROYALTY_FOR ELSE 0 END) AS MONTH6 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 6 , A.CON_FR_YYMM+'01'), 112) THEN B.D_AMT_ROYALTY_FOR ELSE 0 END) AS MONTH7 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 7 , A.CON_FR_YYMM+'01'), 112) THEN B.D_AMT_ROYALTY_FOR ELSE 0 END) AS MONTH8 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 8 , A.CON_FR_YYMM+'01'), 112) THEN B.D_AMT_ROYALTY_FOR ELSE 0 END) AS MONTH9 
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 9 , A.CON_FR_YYMM+'01'), 112) THEN B.D_AMT_ROYALTY_FOR ELSE 0 END) AS MONTH10
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 10, A.CON_FR_YYMM+'01'), 112) THEN B.D_AMT_ROYALTY_FOR ELSE 0 END) AS MONTH11
            				, SUM(CASE WHEN B.SELL_MONTH =  CONVERT(VARCHAR(6), DATEADD(MONTH, 11, A.CON_FR_YYMM+'01'), 112) THEN B.D_AMT_ROYALTY_FOR ELSE 0 END) AS MONTH12
            				, SUM(B.D_AMT_ROYALTY_FOR)																											   AS TOT_AMT
            		FROM	S_RYT500T_KD			A WITH (NOLOCK)
            				INNER JOIN S_RYT510T_KD B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.WORK_YEAR=B.WORK_YEAR AND A.WORK_SEQ=B.WORK_SEQ
            		WHERE	A.COMP_CODE		= @COMP_CODE
            		AND		A.DIV_CODE		= @DIV_CODE
            		AND		A.WORK_YEAR		= @WORK_YEAR
            		AND		A.WORK_SEQ		= @WORK_SEQ
            		AND		A.CUSTOM_CODE	= @CUSTOM_CODE
            		GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, B.ITEM_CODE, A.MONEY_UNIT	 
            	 
            	 
            	 ) B ON A.GUBUN=B.GUBUN
            	 LEFT JOIN BPR100T C WITH(NOLOCK) ON B.COMP_CODE=C.COMP_CODE AND B.ITEM_CODE=C.ITEM_CODE
            ORDER BY B.ITEM_CODE, A.GUBUN
  
      END
      
    </select>
    
    <select id="s_ryt520skrv_kdService.selectList2" parameterType="Map" resultType="rMap">
        --s_ryt520skrv_kdService.selectList2
        
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            --  [ 변수 선언 ] -----------------------------------------------------------------------------------------------------
            DECLARE @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
                  , @DIV_CODE           NVARCHAR(08)                -- (필수) 사업장
                  , @CUSTOM_CODE        NVARCHAR(20)                -- (필수) 거래처코드
                  , @FROM_MONTH         NVARCHAR(06)                -- (필수) FROM 작업년월
                  , @TO_MONTH           NVARCHAR(06)                -- (필수) TO 작업년월
                    --
                  , @USER_ID            NVARCHAR(100)                -- (필수) USER ID
        
            --  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
            SET @COMP_CODE      = #{S_COMP_CODE}
            SET @DIV_CODE       = #{DIV_CODE}
            SET @CUSTOM_CODE    = #{CUSTOM_CODE}
            SET @FROM_MONTH     = #{FROM_MONTH}
            SET @TO_MONTH       = #{TO_MONTH}
            --
            SET @USER_ID        = #{S_USER_ID}
        
            --  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
            SELECT  A.COMP_CODE
                 ,  A.DIV_CODE
                 ,  A.CUSTOM_CODE
                 ,  B.CUSTOM_NAME
                 ,  LEFT(A.CON_FR_YYMM, 4) + '.' + RIGHT(A.CON_FR_YYMM, 2)  AS CON_FR_YYMM
                 ,  LEFT(A.CON_TO_YYMM, 4) + '.' + RIGHT(A.CON_TO_YYMM, 2)  AS CON_TO_YYMM
                 ,  A.GUBUN1
                 ,  A.MONEY_UNIT
                 ,  A.EXCHG_RATE_O
                 ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.CAL_DATE)      AS CAL_DATE
                 ,  A.AMT_SELL_FOR * ISNULL(A.EXCHG_RATE_O, 0)              AS AMT_SELL
                 ,  A.AMT_DEDUCT_FOR * ISNULL(A.EXCHG_RATE_O, 0)            AS AMT_DEDUCT
                 ,  A.AMT_NET_SELL_FOR * ISNULL(A.EXCHG_RATE_O, 0)          AS AMT_NET_SELL
                 ,  A.AMT_ROYALTY
                 ,  A.AMT_ROYALTY_FOR
                 ,  C.GUBUN3
            FROM               S_RYT500T_KD AS A WITH (NOLOCK)
                    LEFT  JOIN BCM100T      AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                              AND B.CUSTOM_CODE = A.CUSTOM_CODE
                    LEFT  JOIN S_RYT200T_KD AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                              AND C.DIV_CODE    = A.DIV_CODE
                                                              AND C.CUSTOM_CODE = A.CUSTOM_CODE
                                                              AND C.GUBUN1      = A.GUBUN1
            WHERE   A.COMP_CODE   = @COMP_CODE
            AND     A.DIV_CODE    = @DIV_CODE
            AND     A.CUSTOM_CODE = @CUSTOM_CODE
            AND     A.CON_FR_YYMM &gt;= @FROM_MONTH
            AND     A.CON_TO_YYMM &lt;= @TO_MONTH

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>
    
    <select id="s_ryt520skrv_kdService.getMonthDiff" parameterType="Map" resultType="rMap">
        --s_ryt520skrv_kdService.getMonthDiff

        	SELECT  DATEDIFF(MONTH, CON_FR_YYMM + '01', CON_TO_YYMM + '01') AS MONTH_DIFF
        	FROM S_RYT500T_KD WITH (NOLOCK)
        	WHERE COMP_CODE = #{S_COMP_CODE}
        	AND DIV_CODE = #{DIV_CODE}
        	AND WORK_YEAR=#{WORK_YEAR}
        	AND WORK_SEQ=#{WORK_SEQ}
        	AND CUSTOM_CODE = #{CUSTOM_CODE}

    </select>    
    
    <select id="s_ryt520skrv_kdService.selectGwData" parameterType="Map" resultType="rMap">
        SELECT  GW_FLAG
          FROM  S_RYT500T_KD    A WITH (NOLOCK)
            WHERE   A.COMP_CODE      = #{S_COMP_CODE}
              AND   A.DIV_CODE       = #{DIV_CODE}
              AND   A.WORK_YEAR      = #{WORK_YEAR}
              AND   A.WORK_SEQ      = #{WORK_SEQ}
              AND   A.CUSTOM_CODE      = #{CUSTOM_CODE}
    </select>

	<select id="s_ryt520skrv_kdService.makeDraftNum" parameterType="Map" resultType="rMap">
	   UPDATE S_RYT500T_KD
           SET DRAFT_NO        = #{DRAFT_NO},
               UPDATE_DB_USER  = #{S_USER_ID},
               UPDATE_DB_TIME  = GETDATE()
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = #{DIV_CODE}
           	AND   WORK_YEAR      = #{WORK_YEAR}
              AND WORK_SEQ      = #{WORK_SEQ}
              AND CUSTOM_CODE      = #{CUSTOM_CODE}
          
	</select>
	<select id="s_ryt520skrv_kdService.editMonth" parameterType="Map" resultType="rMap">
              SELECT 
              		CON_FR_YYMM
              		, CON_TO_YYMM 
              FROM S_RYT200T_KD
			  WHERE COMP_CODE      = #{S_COMP_CODE}
              AND DIV_CODE       = #{DIV_CODE}
              AND WORK_YEAR      = #{WORK_YEAR}
              AND WORK_SEQ      = #{WORK_SEQ}
              AND CUSTOM_CODE      = #{CUSTOM_CODE}	
    </select>  
    
    
    
</mapper>