<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_bco110ukrv_kdService">

	<select id="s_bco110ukrv_kdService.selectList" parameterType="Map" resultType="rMap">
        BEGIN
               SET NOCOUNT ON
               SET ARITHABORT ON

               DECLARE @ST_DATE     NVARCHAR(08)
                     , @TO_DATE     NVARCHAR(08)

               -- 0.회사정보에서 회계시작년월 찾기
               SELECT @ST_DATE = LEFT(FN_DATE, 6)
                 FROM BOR100T WITH (NOLOCK)

               -- 1. 현재 시스템일자
               SELECT @TO_DATE = CONVERT(NVARCHAR(8), GETDATE(), 112)

               -- 2. 날짜 포맷 유형 설정 ------------------------------------------------------------------------------------------
               DECLARE @DateFormat         NVARCHAR(01)
                     , @TimeFormat         NVARCHAR(01)

               SELECT TOP 1 @DateFormat = SUBSTRING(CODE_NAME, 5, 1)
               FROM   BSA100T WITH (NOLOCK)
               WHERE  COMP_CODE  = #{S_COMP_CODE}
               AND    MAIN_CODE  = 'B044'
               AND    REF_CODE1  = 'Y'

               SET @DateFormat = ISNULL(@DateFormat, '.')
               SET @TimeFormat = ISNULL(@TimeFormat, ':')

            -- 4. Main Query
            IF #{QUERY_TYPE} = '1'

            SELECT CASE B.CONFIRM_YN WHEN 'Y'    THEN    1 ELSE 0 END CONFIRM_YN_CHECK,
                   A.P_REQ_NUM,
                   A.COMP_CODE,
                   A.DIV_CODE,
                   A.TREE_CODE,
                   C.TREE_NAME,
                   A.PERSON_NUMB,
                   ISNULL(D.NAME, '')       AS PERSON_NAME,
                   A.TYPE,
                   B.MONEY_UNIT,
                   A.P_REQ_DATE,
                   B.APLY_START_DATE,
                   A.GW_FLAG,
                   B.SER_NO,
                   B.CUSTOM_CODE,
                   B.CUSTOM_NAME,
                   B.MAKER_CODE,
                   B.MAKER_NAME,
                   B.NEW_ITEM_FREFIX,
                   B.ITEM_CODE,
                   B.ITEM_NAME,
                   B.PRICE_TYPE     AS PRICE_TYPE1,
                   B.PRICE_TYPE     AS PRICE_TYPE2,
                  CASE WHEN A.TYPE = '1'
				        THEN (SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = 'M301' AND SUB_CODE <![CDATA[<>]]> '$' AND SUB_CODE = B.PRICE_TYPE)
						ELSE (SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = 'S003' AND SUB_CODE <![CDATA[<>]]>  '$' AND SUB_CODE = B.PRICE_TYPE)
				   END AS PRICE_TYPE,
                   B.ORDER_UNIT,
                   B.ITEM_P,
                   B.PACK_ITEM_P,
                   B.PRE_ITEM_P,
                   --20191224 수정: if 종전단가 != 0 이면 단가차액=단가-종전단가, else 단가차액 = 0
                   CASE WHEN ISNULL(B.PRE_ITEM_P, 0) = 0 THEN 0
                        ELSE (ISNULL(B.ITEM_P, 0) - ISNULL(B.PRE_ITEM_P, 0))
                   END                                                                         AS DIFFER_UNIT_P,
                   B.HS_CODE,
                   B.PAY_TERMS,
                   B.TERMS_PRICE,
                   B.DELIVERY_METH,
                   B.CH_REASON,
                   CASE WHEN B.OEM_YN     = 'N' THEN '0' ELSE '1' END AS [OEM_YN],
                   B.OEM_APLY_YN,
                   CASE WHEN B.[12199_YN] = 'N' THEN '0' ELSE '1' END AS [12199_YN],
                   CASE WHEN B.[13199_YN] = 'N' THEN '0' ELSE '1' END AS [13199_YN],
                   CASE WHEN B.[14199_YN] = 'N' THEN '0' ELSE '1' END AS [14199_YN],
                   CASE WHEN B.[13301_YN] = 'N' THEN '0' ELSE '1' END AS [13301_YN],
                   CASE WHEN B.OEM_YN     = 'N' THEN '0' ELSE '1' END AS OEM_YN1,
                   CASE WHEN B.[12199_YN] = 'N' THEN '0' ELSE '1' END AS colume1,
                   CASE WHEN B.[13199_YN] = 'N' THEN '0' ELSE '1' END AS colume2,
                   CASE WHEN B.[14199_YN] = 'N' THEN '0' ELSE '1' END AS colume3,
                   CASE WHEN B.[13301_YN] = 'N' THEN '0' ELSE '1' END AS colume4,
                   B.OEM_ITEM_CODE,
                   B.SPEC,
                   B.CAR_TYPE,
                   B.STOCK_UNIT,
                   B.CUSTOM_FULL_NAME,
                   B.ADD01_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD01_CUSTOM_CODE ) AS ADD01_CUSTOM_NAME,
                   B.ADD02_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD02_CUSTOM_CODE ) AS ADD02_CUSTOM_NAME,
                   B.ADD03_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD03_CUSTOM_CODE ) AS ADD03_CUSTOM_NAME,
                   B.ADD04_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD04_CUSTOM_CODE ) AS ADD04_CUSTOM_NAME,
                   B.ADD05_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD05_CUSTOM_CODE ) AS ADD05_CUSTOM_NAME,
                   B.ADD06_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD06_CUSTOM_CODE ) AS ADD06_CUSTOM_NAME,
                   B.ADD07_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD07_CUSTOM_CODE ) AS ADD07_CUSTOM_NAME,
                   B.ADD08_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD08_CUSTOM_CODE ) AS ADD08_CUSTOM_NAME,
                   B.ADD09_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD09_CUSTOM_CODE ) AS ADD09_CUSTOM_NAME,
                   B.ADD10_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD10_CUSTOM_CODE ) AS ADD10_CUSTOM_NAME,
                   B.ADD11_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD11_CUSTOM_CODE ) AS ADD11_CUSTOM_NAME,
                   B.ADD12_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD12_CUSTOM_CODE ) AS ADD12_CUSTOM_NAME,
                   B.ADD13_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD13_CUSTOM_CODE ) AS ADD13_CUSTOM_NAME,
                   B.ADD14_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD14_CUSTOM_CODE ) AS ADD14_CUSTOM_NAME,
                   B.ADD15_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD15_CUSTOM_CODE ) AS ADD15_CUSTOM_NAME,
                   B.ADD16_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD16_CUSTOM_CODE ) AS ADD16_CUSTOM_NAME,
                   B.ADD17_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD17_CUSTOM_CODE ) AS ADD17_CUSTOM_NAME,
                   B.ADD18_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD18_CUSTOM_CODE ) AS ADD18_CUSTOM_NAME,
                   B.ADD19_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD19_CUSTOM_CODE ) AS ADD19_CUSTOM_NAME,
                   B.ADD20_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD20_CUSTOM_CODE ) AS ADD20_CUSTOM_NAME,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD21_CUSTOM_CODE ) AS ADD21_CUSTOM_NAME,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD22_CUSTOM_CODE ) AS ADD22_CUSTOM_NAME,
                   B.REMARK,
                   B.CONFIRM_YN,
                   B.SPEC2,
                   B.STOCK_UNIT2,
                   B.CAR_TYPE2,
                   B.NEW_CAR_TYPE,
				   B.ITEM_NAME2,
                   A.INSERT_DB_USER,
                   A.INSERT_DB_TIME,
                   A.UPDATE_DB_USER,
                   A.UPDATE_DB_TIME,
                   A.TEMPC_01,
                   A.TEMPC_02,
                   A.TEMPC_03,
                   A.TEMPN_01,
                   A.TEMPN_02,
                   A.TEMPN_03,
                   CASE WHEN B.CONFIRM_YN = 'Y' THEN ''
                                                ELSE 'Q'
                    END                                         AS QUERY,
                   B.NS_FLAG,
                   A.P_REQ_TYPE,
                   #{QUERY_TYPE} AS QUERY_TYPE,
                   B.RENEWAL_YN,
                   B.CUSTOM_NAME2,
				   B.CUSTOM_FULL_NAME2
            FROM S_BCO100T_KD A WITH (NOLOCK)
                INNER JOIN S_BCO110T_KD B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                       AND B.P_REQ_NUM   = A.P_REQ_NUM
                LEFT  JOIN BSA210T      C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                       AND C.TREE_CODE   = A.TREE_CODE
                LEFT  JOIN HUM100T      D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
                                                       AND D.PERSON_NUMB = A.PERSON_NUMB
            WHERE A.COMP_CODE = #{S_COMP_CODE}
              AND A.DIV_CODE = #{DIV_CODE}
              AND A.P_REQ_DATE &gt;= #{P_REQ_DATE_FR}
              AND A.P_REQ_DATE &lt;= #{P_REQ_DATE_TO}
              AND A.TYPE = #{TYPE}
            <if test="@foren.Ognl@isNotEmpty(P_REQ_NUM)">
              AND A.P_REQ_NUM LIKE '%' + #{P_REQ_NUM} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(TREE_CODE)">
              AND A.TREE_CODE = #{TREE_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
              AND A.PERSON_NUMB = #{PERSON_NUMB}
            </if>
              AND A.GW_FLAG = '3'
              AND B.CONFIRM_YN = 'N'
             -- AND B.RENEWAL_YN != 'Y'
            ORDER BY A.P_REQ_NUM, B.SER_NO, B.CUSTOM_CODE, A.APLY_START_DATE, B.MONEY_UNIT

            ELSE
              --최종단가대비수출가
          		SELECT 0 AS CONFIRM_YN_CHECK, A.REPORT_NO AS P_REQ_NUM, A.COMP_CODE, A.DIV_CODE
          		, M3.DEPT_CODE AS TREE_CODE, M3.DEPT_NAME AS TREE_NAME, A.PERSON_NUMB, M3.NAME AS PERSON_NAME
          		, '2' AS TYPE, ISNULL(B.MONEY_UNIT, A.MONEY_UNIT) AS MONEY_UNIT
          		, A.REPORT_DATE AS P_REQ_DATE, ISNULL(B.APLY_START_DATE, A.APPLY_DATE) AS APLY_START_DATE
          		, A.GW_FLAG, B.REPORT_SEQ AS SER_NO, A.CUSTOM_CODE, M2.CUSTOM_NAME, NULL AS MAKER_CODE, NULL AS MAKER_NAME, NULL AS NEW_ITEM_FREFIX
          		, B.ITEM_CODE AS ITEM_CODE, M1.ITEM_NAME, '2' AS PRICE_TYPE1, '2' AS PRICE_TYPE2
          		, B.ORDER_UNIT
          		, B.LAST_NEGO_FOR_P AS ITEM_P, 0 AS PACK_ITEM_P, 0 AS PRE_ITEM_P, NULL AS HS_CODE, NULL AS PAY_TERMS, NULL AS TERMS_PRICE, NULL AS DELIVERY_METH, NULL AS CH_REASON
          		, NULL AS OEM_YN, NULL AS OEM_APLY_YN, NULL AS [12199_YN], NULL AS [13199_YN[, NULL AS [14199_YN], NULL AS [13301_YN], NULL AS OEM_YN1
          		, NULL AS colume1, NULL AS colume2, NULL AS colume3, NULL AS colume4
          		, M1.OEM_ITEM_CODE AS OEM_ITEM_CODE, M1.SPEC AS SPEC, M1.CAR_TYPE AS CAR_TYPE
          		, M1.STOCK_UNIT AS STOCK_UNIT, '' AS CUSTOM_FULL_NAME, NULL AS ADD01_CUSTOM_CODE, NULL AS ADD01_CUSTOM_NAME, NULL AS ADD02_CUSTOM_CODE, NULL AS ADD02_CUSTOM_NAME, NULL AS ADD03_CUSTOM_CODE, NULL AS ADD03_CUSTOM_NAME, NULL AS ADD04_CUSTOM_CODE, NULL AS ADD04_CUSTOM_NAME, NULL AS ADD05_CUSTOM_CODE, NULL AS ADD05_CUSTOM_NAME, NULL AS ADD06_CUSTOM_CODE, NULL AS ADD06_CUSTOM_NAME, NULL AS ADD07_CUSTOM_CODE, NULL AS ADD07_CUSTOM_NAME, NULL AS ADD08_CUSTOM_CODE, NULL AS ADD08_CUSTOM_NAME, NULL AS ADD09_CUSTOM_CODE, NULL AS ADD09_CUSTOM_NAME, NULL AS ADD10_CUSTOM_CODE, NULL AS ADD10_CUSTOM_NAME, NULL AS ADD11_CUSTOM_CODE, NULL AS ADD11_CUSTOM_NAME, NULL AS ADD12_CUSTOM_CODE, NULL AS ADD12_CUSTOM_NAME, NULL AS ADD13_CUSTOM_CODE, NULL AS ADD13_CUSTOM_NAME, NULL AS ADD14_CUSTOM_CODE, NULL AS ADD14_CUSTOM_NAME, NULL AS ADD15_CUSTOM_CODE, NULL AS ADD15_CUSTOM_NAME, NULL AS ADD16_CUSTOM_CODE, NULL AS ADD16_CUSTOM_NAME, NULL AS ADD17_CUSTOM_CODE, NULL AS ADD17_CUSTOM_NAME, NULL AS ADD18_CUSTOM_CODE, NULL AS ADD18_CUSTOM_NAME, NULL AS ADD19_CUSTOM_CODE, NULL AS ADD19_CUSTOM_NAME, NULL AS ADD20_CUSTOM_CODE, NULL AS ADD20_CUSTOM_NAME, NULL AS ADD21_CUSTOM_NAME, NULL AS ADD22_CUSTOM_NAME
          		, '최종단가대비수출가 반영' AS REMARK
          		, CASE WHEN ISNULL(B.CONFIRM_YN,'') = '' THEN 'N' ELSE B.CONFIRM_YN END AS CONFIRM_YN
          		, CASE WHEN ISNULL(B.RENEWAL_YN,'') = '' THEN 'N' ELSE B.RENEWAL_YN END AS RENEWAL_YN
          		, NULL AS SPEC2
          		, NULL AS STOCK_UNIT2
          		, NULL AS NEW_CAR_TYPE
          		, A.INSERT_DB_USER, A.INSERT_DB_TIME, A.UPDATE_DB_USER, A.UPDATE_DB_TIME
          		, NULL AS TEMPC_01, NULL AS TEMPC_02, NULL AS TEMPC_03, NULL AS TEMPN_01, NULL AS TEMPN_02, NULL AS TEMPN_03
          		, '1' AS QUERY, '3' AS NS_FLAG, '21' AS P_REQ_TYPE
              , #{QUERY_TYPE} AS QUERY_TYPE
              ,NULL AS CAR_TYPE2
			  ,NULL AS ITEM_NAME2
			  ,'' AS CUSTOM_NAME2
			  ,'' AS CUSTOM_FULL_NAME2
          		FROM S_TTR900T_KD A WITH (NOLOCK)
          			 INNER JOIN S_TTR910T_KD B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.REPORT_NO=B.REPORT_NO
          			 INNER JOIN BPR100T M1 WITH (NOLOCK) ON B.COMP_CODE = M1.COMP_CODE AND B.ITEM_CODE = M1.ITEM_CODE
          			 LEFT  JOIN BCM100T M2 WITH (NOLOCK) ON A.COMP_CODE=M2.COMP_CODE AND A.CUSTOM_CODE=M2.CUSTOM_CODE
          			 LEFT  JOIN HUM100T M3 WITH (NOLOCK) ON A.COMP_CODE=M3.COMP_CODE AND A.PERSON_NUMB=M3.PERSON_NUMB
                  WHERE A.COMP_CODE = #{S_COMP_CODE}
                  AND A.DIV_CODE = #{DIV_CODE}
                  AND A.REPORT_DATE &gt;= #{P_REQ_DATE_FR}
                  AND A.REPORT_DATE &lt;= #{P_REQ_DATE_TO}
                  AND A.GW_FLAG = '3'
                  AND B.CONFIRM_YN = 'N'
				  --AND (B.RENEWAL_YN != 'Y' OR ISNULL(B.RENEWAL_YN,'') = '')
          		ORDER BY A.REPORT_NO, B.REPORT_SEQ
            SET ARITHABORT OFF
            SET NOCOUNT OFF

        END
	</select>

	<select id="s_bco110ukrv_kdService.selectReqNumList" parameterType="Map" resultType="rMap">
        BEGIN
            SET ARITHABORT ON
            SET NOCOUNT ON

            SELECT  A.P_REQ_NUM
                   ,A.COMP_CODE
                   ,A.DIV_CODE
                   ,A.TREE_CODE
                   ,C.TREE_NAME
                   ,A.PERSON_NUMB
                   ,ISNULL(D.NAME, '')       AS PERSON_NAME
                   ,A.TYPE
                   ,A.MONEY_UNIT
                   ,A.P_REQ_DATE
                   ,A.APLY_START_DATE
                   ,A.GW_FLAG
                   ,A.INSERT_DB_USER
                   ,A.INSERT_DB_TIME
                   ,A.UPDATE_DB_USER
                   ,A.UPDATE_DB_TIME
              FROM  S_BCO100T_KD A
                LEFT  JOIN BSA210T      C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                       AND C.TREE_CODE   = A.TREE_CODE
                LEFT  JOIN HUM100T      D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
                                                       AND D.PERSON_NUMB = A.PERSON_NUMB
             WHERE  A.DIV_CODE        = #{DIV_CODE}
               AND  A.P_REQ_DATE      &gt;= #{P_REQ_DATE_FR}
               AND  A.P_REQ_DATE      &lt;= #{P_REQ_DATE_TO}
               <if test="@foren.Ognl@isNotEmpty(TREE_CODE)">
               AND  A.TREE_CODE       = #{TREE_CODE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(TYPE)">
               AND  A.TYPE            = #{TYPE}
               </if>
               <if test="@foren.Ognl@isNotEmpty(APLY_START_DATE_FR)">
               AND  A.APLY_START_DATE &gt;= #{APLY_START_DATE_FR}
               </if>
               <if test="@foren.Ognl@isNotEmpty(APLY_START_DATE_TO)">
               AND  A.APLY_START_DATE &lt;= #{APLY_START_DATE_TO}
               </if>
               <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
               AND  A.PERSON_NUMB     = #{PERSON_NUMB}
               </if>
               <if test="@foren.Ognl@isNotEmpty(P_REQ_NUM)">
               AND  A.P_REQ_NUM       = #{P_REQ_NUM} + '%'
               </if>

            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>

	<select id="s_bco110ukrv_kdService.selectMasterCheck" parameterType="Map" resultType="rMap">
        SELECT P_REQ_NUM
          FROM S_BCO100T_KD WITH (NOLOCK)
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE  = #{DIV_CODE}
           AND P_REQ_NUM = #{P_REQ_NUM}
           AND TYPE = #{TYPE}
           AND MONEY_UNIT = #{MONEY_UNIT}
           AND P_REQ_DATE = #{P_REQ_DATE}
           AND APLY_START_DATE = #{APLY_START_DATE}
         <if test="@foren.Ognl@isNotEmpty(TREE_CODE)">
           AND TREE_CODE = #{TREE_CODE}
         </if>
         <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
           AND PERSON_NUMB = #{PERSON_NUMB}
         </if>
    </select>

    <select id="s_bco110ukrv_kdService.selectPreSeqSelect" parameterType="Map" resultType="rMap">
    	BEGIN
               SET NOCOUNT ON
               SET ARITHABORT ON

               DECLARE @ST_DATE     NVARCHAR(08)
                     , @TO_DATE     NVARCHAR(08)

               -- 0.회사정보에서 회계시작년월 찾기
               SELECT @ST_DATE = LEFT(FN_DATE, 6)
                 FROM BOR100T WITH (NOLOCK)

               -- 1. 현재 시스템일자
               SELECT @TO_DATE = CONVERT(NVARCHAR(8), GETDATE(), 112)

               -- 2. 날짜 포맷 유형 설정 ------------------------------------------------------------------------------------------
               DECLARE @DateFormat         NVARCHAR(01)
                     , @TimeFormat         NVARCHAR(01)

               SELECT TOP 1 @DateFormat = SUBSTRING(CODE_NAME, 5, 1)
               FROM   BSA100T WITH (NOLOCK)
               WHERE  COMP_CODE  = #{S_COMP_CODE}
               AND    MAIN_CODE  = 'B044'
               AND    REF_CODE1  = 'Y'

               SET @DateFormat = ISNULL(@DateFormat, '.')
               SET @TimeFormat = ISNULL(@TimeFormat, ':')

            -- 4. Main Query
            SELECT A.P_REQ_NUM,
                   A.COMP_CODE,
                   A.DIV_CODE,
                   A.TREE_CODE,
                   A.PERSON_NUMB,
                   A.TYPE,
                   B.MONEY_UNIT,
                   A.P_REQ_DATE,
                   A.APLY_START_DATE,
                   A.GW_FLAG,
                   B.SER_NO,
                   B.CUSTOM_CODE,
                   B.CUSTOM_NAME,
                   B.ITEM_CODE,
                   B.ITEM_NAME,
                   B.PRICE_TYPE     AS PRICE_TYPE1,
                   B.PRICE_TYPE     AS PRICE_TYPE2,
                   CASE WHEN A.TYPE = '1'
				        THEN (SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = 'M301' AND SUB_CODE <![CDATA[<>]]> '$' AND SUB_CODE = B.PRICE_TYPE)
						ELSE (SELECT CODE_NAME FROM BSA100T WHERE MAIN_CODE = 'S003' AND SUB_CODE <![CDATA[<>]]>  '$' AND SUB_CODE = B.PRICE_TYPE)
				   END AS PRICE_TYPE,
                   B.ORDER_UNIT,
                   B.ITEM_P,
                   B.PACK_ITEM_P,
                   B.PRE_ITEM_P,
                   B.HS_CODE,
                   B.PAY_TERMS,
                   B.TERMS_PRICE,
                   B.DELIVERY_METH,
                   B.CH_REASON,
                   CASE WHEN B.OEM_YN     = 'N' THEN '0 ELSE '1' END AS OEM_YN,
                   B.OEM_APLY_YN,
                   CASE WHEN B.[12199_YN] = 'N' THEN '0 ELSE '1' END AS [12199_YN],
                   CASE WHEN B.[13199_YN] = 'N' THEN '0 ELSE '1' END AS [13199_YN],
                   CASE WHEN B.[14199_YN] = 'N' THEN '0 ELSE '1' END AS [14199_YN],
                   CASE WHEN B.[13301_YN] = 'N' THEN '0 ELSE '1' END AS [13301_YN],
                   B.OEM_ITEM_CODE,
                   B.SPEC,
                   B.CAR_TYPE,
                   B.STOCK_UNIT,
                   B.CUSTOM_FULL_NAME,
                   B.ADD01_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD01_CUSTOM_CODE ) AS ADD01_CUSTOM_NAME,
                   B.ADD02_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD02_CUSTOM_CODE ) AS ADD02_CUSTOM_NAME,
                   B.ADD03_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD03_CUSTOM_CODE ) AS ADD03_CUSTOM_NAME,
                   B.ADD04_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD04_CUSTOM_CODE ) AS ADD04_CUSTOM_NAME,
                   B.ADD05_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD05_CUSTOM_CODE ) AS ADD05_CUSTOM_NAME,
                   B.ADD06_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD06_CUSTOM_CODE ) AS ADD06_CUSTOM_NAME,
                   B.ADD07_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD07_CUSTOM_CODE ) AS ADD07_CUSTOM_NAME,
                   B.ADD08_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD08_CUSTOM_CODE ) AS ADD08_CUSTOM_NAME,
                   B.ADD09_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD09_CUSTOM_CODE ) AS ADD09_CUSTOM_NAME,
                   B.ADD10_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD10_CUSTOM_CODE ) AS ADD10_CUSTOM_NAME,
                   B.ADD11_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD11_CUSTOM_CODE ) AS ADD11_CUSTOM_NAME,
                   B.ADD12_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD12_CUSTOM_CODE ) AS ADD12_CUSTOM_NAME,
                   B.ADD13_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD13_CUSTOM_CODE ) AS ADD13_CUSTOM_NAME,
                   B.ADD14_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD14_CUSTOM_CODE ) AS ADD14_CUSTOM_NAME,
                   B.ADD15_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD15_CUSTOM_CODE ) AS ADD15_CUSTOM_NAME,
                   B.ADD16_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD16_CUSTOM_CODE ) AS ADD16_CUSTOM_NAME,
                   B.ADD17_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD17_CUSTOM_CODE ) AS ADD17_CUSTOM_NAME,
                   B.ADD18_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD18_CUSTOM_CODE ) AS ADD18_CUSTOM_NAME,
                   B.ADD19_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD19_CUSTOM_CODE ) AS ADD19_CUSTOM_NAME,
                   B.ADD20_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD20_CUSTOM_CODE ) AS ADD20_CUSTOM_NAME,
                   B.ADD21_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD21_CUSTOM_CODE ) AS ADD21_CUSTOM_NAME,
                   B.ADD22_CUSTOM_CODE,
                   (SELECT X.CUSTOM_NAME
                      FROM BCM100T X
                     WHERE X.COMP_CODE   = B.COMP_CODE
                       AND X.CUSTOM_CODE = B.ADD21_CUSTOM_CODE ) AS ADD22_CUSTOM_NAME,
                   B.REMARK,
                   B.CONFIRM_YN,
                   A.INSERT_DB_USER,
                   A.INSERT_DB_TIME,
                   A.UPDATE_DB_USER,
                   A.UPDATE_DB_TIME,
                   A.TEMPC_01,
                   A.TEMPC_02,
                   A.TEMPC_03,
                   A.TEMPN_01,
                   A.TEMPN_02,
                   A.TEMPN_03,
                   B.NS_FLAG
            FROM S_BCO100T_KD A WITH (NOLOCK)
                INNER JOIN S_BCO110T_KD B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                       AND B.P_REQ_NUM   = A.P_REQ_NUM
            WHERE A.COMP_CODE = #{S_COMP_CODE}
              AND A.DIV_CODE = #{DIV_CODE}
              AND A.P_REQ_NUM = #{P_REQ_NUM}
              AND B.SER_NO = #{SER_NO}




            SET ARITHABORT OFF
            SET NOCOUNT OFF

        END
    </select>

    <insert id="s_bco110ukrv_kdService.insertDetail" parameterType="Map">
    <![CDATA[
	BEGIN
	  DECLARE @COMP_CODE NVARCHAR(8), @DIV_CODE NVARCHAR(8), @ITEM_CODE NVARCHAR(20), @ITEM_TYPE NVARCHAR(10), @PURCH_CUSTOM_CODE NVARCHAR(10)
	  		, @SALE_CUSTOM_CODE NVARCHAR(10), @ITEM_P NUMERIC(30,6), @SALE_ITEM_P NUMERIC(30,6)
	  		, @MONEY_UNIT NVARCHAR(10), @ORDER_UNIT NVARCHAR(10), @APLY_START_DATE NVARCHAR(8), @ORDER_RATE NUMERIC(10,0), @P_REQ_NUM NVARCHAR(20)
	  		, @SER_NO NUMERIC(10,0), @PRICE_TYPE NVARCHAR(10), @PACK_ITEM_P NUMERIC(30,6), @USER_ID NVARCHAR(100), @ITEM_ACCOUNT NVARCHAR(10)
	  		, @ROW_COUNT INT, @MARGIN_RATE NUMERIC(10,0), @OEM_APLY_YN NVARCHAR(10)
	  		, @RENEWAL_YN NVARCHAR(10), @CONFIRM_YN NVARCHAR(10), @CUR_DIV_CODE NVARCHAR(10)
	  		, @QUERY_TYPE NVARCHAR(10), @REMARK NVARCHAR(2000)

	  SET NOCOUNT ON

	  SET @COMP_CODE	= #{S_COMP_CODE}
	  SET @DIV_CODE		= #{DIV_CODE}
	  SET @MONEY_UNIT	= #{MONEY_UNIT}
	  SET @ORDER_UNIT	= #{ORDER_UNIT}
	  SET @P_REQ_NUM	= #{P_REQ_NUM}
	  SET @SER_NO		= #{SER_NO}
	  SET @QUERY_TYPE	= #{QUERY_TYPE}

	  SET @USER_ID		= #{S_USER_ID}
	  SET @PACK_ITEM_P	= ISNULL(#{PACK_ITEM_P}, 0)

	  SET @ORDER_RATE = 100
	  --20191227 @CONFIRM_YN, @RENEWAL_YN 가져오는 로직 변경
	  SET @CONFIRM_YN = #{CONFIRM_YN}
	  SET @RENEWAL_YN = #{RENEWAL_YN}

--		SELECT	@RENEWAL_YN = RENEWAL_YN, @CONFIRM_YN = CONFIRM_YN
--		FROM	S_BCO110T_KD
--		WHERE	COMP_CODE	= @COMP_CODE
--		AND		DIV_CODE	= @DIV_CODE
--		AND		P_REQ_NUM	= @P_REQ_NUM
--		AND		SER_NO		= @SER_NO


--		IF @QUERY_TYPE = '2'    	--최종단가대비수출가
--		BEGIN
--		  SET @RENEWAL_YN = 'N'
--		  SET @CONFIRM_YN = 'N'
--		END

		--20191227 @CONFIRM_YN, @RENEWAL_YN 로직 변경
--		IF (@RENEWAL_YN = 'N' AND @CONFIRM_YN = 'N')



		IF @QUERY_TYPE = '1'    	--단가의뢰로직
			BEGIN
				IF (@RENEWAL_YN = 'Y' AND @CONFIRM_YN = 'Y')
				BEGIN
					--추가 거래처 정의
					IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID=OBJECT_ID('tempdb..#TMP_CUSTOM_LIST'))
						DROP TABLE #TMP_CUSTOM_LIST

					SELECT SEQ, COMP_CODE, DIV_CODE, CUSTOM_CODE
					INTO #TMP_CUSTOM_LIST
					FROM (
							SELECT 01 AS SEQ, COMP_CODE, DIV_CODE, ADD01_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 02 AS SEQ, COMP_CODE, DIV_CODE, ADD02_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 03 AS SEQ, COMP_CODE, DIV_CODE, ADD03_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 04 AS SEQ, COMP_CODE, DIV_CODE, ADD04_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 05 AS SEQ, COMP_CODE, DIV_CODE, ADD05_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 06 AS SEQ, COMP_CODE, DIV_CODE, ADD06_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 07 AS SEQ, COMP_CODE, DIV_CODE, ADD07_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 08 AS SEQ, COMP_CODE, DIV_CODE, ADD08_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 09 AS SEQ, COMP_CODE, DIV_CODE, ADD09_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 10 AS SEQ, COMP_CODE, DIV_CODE, ADD10_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 11 AS SEQ, COMP_CODE, DIV_CODE, ADD11_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 12 AS SEQ, COMP_CODE, DIV_CODE, ADD12_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 13 AS SEQ, COMP_CODE, DIV_CODE, ADD13_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 14 AS SEQ, COMP_CODE, DIV_CODE, ADD14_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 15 AS SEQ, COMP_CODE, DIV_CODE, ADD15_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 16 AS SEQ, COMP_CODE, DIV_CODE, ADD16_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 17 AS SEQ, COMP_CODE, DIV_CODE, ADD17_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 18 AS SEQ, COMP_CODE, DIV_CODE, ADD18_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 19 AS SEQ, COMP_CODE, DIV_CODE, ADD19_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 20 AS SEQ, COMP_CODE, DIV_CODE, ADD20_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 21 AS SEQ, COMP_CODE, DIV_CODE, ADD21_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO UNION
							SELECT 22 AS SEQ, COMP_CODE, DIV_CODE, ADD22_CUSTOM_CODE AS CUSTOM_CODE FROM S_BCO110T_KD WITH (NOLOCK) WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@DIV_CODE AND P_REQ_NUM=@P_REQ_NUM AND SER_NO=@SER_NO
						) X
					WHERE CUSTOM_CODE <> ''


					SET @ROW_COUNT = 1
					DECLARE CUR1 CURSOR FOR
			      --단가의뢰
			  		SELECT A.TYPE, B.ITEM_CODE, B.CUSTOM_CODE, B.ITEM_P
			        			, CASE  WHEN [12199_YN] = 'Y' AND M1.SUB_CODE='12199' THEN M1.SUB_CODE
			        					WHEN [13199_YN] = 'Y' AND M1.SUB_CODE='13199' THEN M1.SUB_CODE
			        					WHEN [14199_YN] = 'Y' AND M1.SUB_CODE='14199' THEN M1.SUB_CODE
			        					WHEN [13301_YN] = 'Y' AND M1.SUB_CODE='13301' THEN M1.SUB_CODE
			        					ELSE ''
			        				END AS SALE_CUSTOM_CODE
			        			, C.ITEM_ACCOUNT
			  				, CASE WHEN ISNULL(B.OEM_APLY_YN,'') = '' THEN 'N' ELSE ISNULL(B.OEM_APLY_YN,'') END AS OEM_APLY_YN
			  				, B.REMARK
			  				, B.APLY_START_DATE
			  				, B.PACK_ITEM_P
			  		FROM   S_BCO100T_KD A  WITH (NOLOCK)
			        			INNER JOIN S_BCO110T_KD  B  WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.P_REQ_NUM=B.P_REQ_NUM
			        			INNER JOIN BPR200T		C  WITH (NOLOCK) ON B.COMP_CODE=C.COMP_CODE AND B.DIV_CODE=C.DIV_CODE AND B.ITEM_CODE=C.ITEM_CODE
			        			LEFT  JOIN BSA100T		M1 WITH (NOLOCK) ON A.COMP_CODE=M1.COMP_CODE AND M1.MAIN_CODE='Z001'
			  		WHERE A.COMP_CODE = @COMP_CODE
			  		AND A.DIV_CODE	  = @DIV_CODE
			  		AND A.P_REQ_NUM	  = @P_REQ_NUM
			  		AND B.SER_NO	    = @SER_NO
			  		AND @QUERY_TYPE   = '1'
			  		UNION ALL
			  		--최종단가대비 수출가
			  		SELECT '2' TYPE, B.ITEM_CODE, A.CUSTOM_CODE, B.LAST_NEGO_FOR_P AS ITEM_P, '' AS SALE_CUSTOM_CODE, C.ITEM_ACCOUNT, 'N' AS OEM_APLY_YN
			  				  , '최종단가대비 수출가' AS REMARK
			  				  , A.APPLY_DATE AS APLY_START_DATE
			  				  , 0 AS PACK_ITEM_P
			  		FROM S_TTR900T_KD A WITH (NOLOCK)
			  			 INNER JOIN S_TTR910T_KD B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.REPORT_NO=B.REPORT_NO
			  			 LEFT  JOIN BPR200T		 C WITH (NOLOCK) ON B.COMP_CODE=C.COMP_CODE AND B.DIV_CODE=C.DIV_CODE AND B.ITEM_CODE=C.ITEM_CODE
			  		WHERE A.COMP_CODE   = @COMP_CODE
			    		AND A.DIV_CODE	  = @DIV_CODE
			    		AND A.REPORT_NO	  = @P_REQ_NUM
			    		AND B.REPORT_SEQ  = @SER_NO
			    		AND @QUERY_TYPE   = '2'



					OPEN CUR1
					FETCH NEXT FROM CUR1 INTO @ITEM_TYPE, @ITEM_CODE, @PURCH_CUSTOM_CODE, @ITEM_P, @SALE_CUSTOM_CODE, @ITEM_ACCOUNT, @OEM_APLY_YN, @REMARK, @APLY_START_DATE, @PACK_ITEM_P
					WHILE @@FETCH_STATUS = 0
					BEGIN

						SET @PRICE_TYPE = CASE WHEN @ITEM_TYPE = '1' THEN 'Y' ELSE '2' END
						IF @ITEM_TYPE = '2'
						  SET @CUR_DIV_CODE= '*'
						ELSE
						  SET @CUR_DIV_CODE=@DIV_CODE

						--한번만 수행)
						IF (@ROW_COUNT = 1)
						BEGIN

							--OEM 단가 품목판매단가 반영 (180413)
							IF @OEM_APLY_YN = 'Y' AND @ITEM_TYPE = '2'
							BEGIN
			    				UPDATE BPR100T SET SALE_BASIS_P=@ITEM_P WHERE COMP_CODE=@COMP_CODE AND ITEM_CODE=@ITEM_CODE
							END

							IF NOT EXISTS (SELECT TOP 1 1 FROM BPR400T WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@CUR_DIV_CODE AND ITEM_CODE=@ITEM_CODE AND TYPE=@ITEM_TYPE AND CUSTOM_CODE=@PURCH_CUSTOM_CODE AND MONEY_UNIT=@MONEY_UNIT AND ORDER_UNIT=@ORDER_UNIT AND APLY_START_DATE=@APLY_START_DATE)
							BEGIN
								INSERT INTO BPR400T
			      					(   COMP_CODE,
			      						TYPE,
			      						DIV_CODE,
			      						ITEM_CODE,
			      						CUSTOM_CODE,
			      						MONEY_UNIT,
			      						ORDER_UNIT,
			      						APLY_START_DATE,
			      						BASIS_P,
			      						ITEM_P,
			      						ORDER_RATE,
			      						P_REQ_NUM,
			      						SER_NO,
			      						PRICE_TYPE,
			      						USE_YN,
			      						REMARK,
			      						GW_FLAG,
			      						INSERT_DB_USER,
			      						INSERT_DB_TIME,
			      						UPDATE_DB_USER,
			      						UPDATE_DB_TIME,
			      						TEMPN_01
			      					)
			      				SELECT @COMP_CODE, @ITEM_TYPE, @CUR_DIV_CODE, @ITEM_CODE, @PURCH_CUSTOM_CODE, @MONEY_UNIT, @ORDER_UNIT, @APLY_START_DATE, @ITEM_P, @ITEM_P
			      					, @ORDER_RATE, @P_REQ_NUM, @SER_NO, @PRICE_TYPE, 'Y', @REMARK, '3' AS GW_FLAG
			      					, @USER_ID, GETDATE(), @USER_ID, GETDATE(), ISNULL(@PACK_ITEM_P, 0)
							END


			      			--추가정보 거래처
							INSERT INTO BPR400T
			      				(   COMP_CODE,
			      					TYPE,
			      					DIV_CODE,
			      					ITEM_CODE,
			      					CUSTOM_CODE,
			      					MONEY_UNIT,
			      					ORDER_UNIT,
			      					APLY_START_DATE,
			      					BASIS_P,
			      					ITEM_P,
			      					ORDER_RATE,
			      					P_REQ_NUM,
			      					SER_NO,
			      					PRICE_TYPE,
			      					USE_YN,
			      					REMARK,
			      					GW_FLAG,
			      					INSERT_DB_USER,
			      					INSERT_DB_TIME,
			      					UPDATE_DB_USER,
			      					UPDATE_DB_TIME,
			      					TEMPN_01
			      				)
			  			SELECT @COMP_CODE, @ITEM_TYPE, @CUR_DIV_CODE, @ITEM_CODE, CUSTOM_CODE, @MONEY_UNIT, @ORDER_UNIT, @APLY_START_DATE, @ITEM_P, @ITEM_P
			  				, @ORDER_RATE, @P_REQ_NUM, @SER_NO, @PRICE_TYPE, 'Y', @REMARK, '3' AS GW_FLAG
			  				, @USER_ID, GETDATE(), @USER_ID, GETDATE(), ISNULL(@PACK_ITEM_P, 0)
			  			FROM #TMP_CUSTOM_LIST A
			  			WHERE NOT EXISTS (  SELECT TOP 1 1
			  								FROM  BPR400T WITH (NOLOCK)
			  								WHERE COMP_CODE=A.COMP_CODE
			  								AND	  TYPE=@ITEM_TYPE
			  								AND   DIV_CODE=A.DIV_CODE
			  								AND   ITEM_CODE=@ITEM_CODE
			  								AND   CUSTOM_CODE=A.CUSTOM_CODE
			  								AND   MONEY_UNIT=@MONEY_UNIT
			  								AND   ORDER_UNIT=@ORDER_UNIT
			  								AND   APLY_START_DATE=@APLY_START_DATE )

						END	--IF (@ROW_COUNT = 1)

						--단가의뢰범위에 따라 판매가 생성
						IF @SALE_CUSTOM_CODE <> ''
						BEGIN
							SET @CUR_DIV_CODE = '*'

							--각 매출처별 마진율 구함
							--청도(13199)단가 적용시 생산품목일 경우 REF_CODE2 그외에는 REF_CODE1 마진율 적용
							SELECT @MARGIN_RATE = CASE WHEN @SALE_CUSTOM_CODE='13301' AND @ITEM_ACCOUNT='10' THEN CONVERT(NUMERIC, CASE WHEN ISNULL(REF_CODE2,'') = '' THEN 0 ELSE REF_CODE2 END)
			      										ELSE CONVERT(NUMERIC, CASE WHEN ISNULL(REF_CODE1,'') = '' THEN 0 ELSE REF_CODE1 END)
			      									END
							FROM BSA100T
							WHERE COMP_CODE = @COMP_CODE
							AND MAIN_CODE   = 'Z001'
							AND SUB_CODE	= @SALE_CUSTOM_CODE

							SET @SALE_ITEM_P = @ITEM_P + (@ITEM_P * @MARGIN_RATE / 100)
							IF NOT EXISTS (SELECT TOP 1 1
										   FROM BPR400T
										   WHERE COMP_CODE     = @COMP_CODE
										   AND TYPE            = '2'
										   AND DIV_CODE	       = @CUR_DIV_CODE
										   AND ITEM_CODE       = @ITEM_CODE
										   AND CUSTOM_CODE     = @SALE_CUSTOM_CODE
										   AND MONEY_UNIT      = @MONEY_UNIT
										   AND ORDER_UNIT      = @ORDER_UNIT
										   AND APLY_START_DATE = @APLY_START_DATE )
								BEGIN
									INSERT INTO BPR400T
					      				(   COMP_CODE,
					      					TYPE,
					      					DIV_CODE,
					      					ITEM_CODE,
					      					CUSTOM_CODE,
					      					MONEY_UNIT,
					      					ORDER_UNIT,
					      					APLY_START_DATE,
					      					BASIS_P,
					      					ITEM_P,
					      					ORDER_RATE,
					      					P_REQ_NUM,
					      					SER_NO,
					      					PRICE_TYPE,
					      					USE_YN,
					      					REMARK,
					      					GW_FLAG,
					      					INSERT_DB_USER,
					      					INSERT_DB_TIME,
					      					UPDATE_DB_USER,
					      					UPDATE_DB_TIME,
					      					TEMPN_01
					      				)

					  				SELECT @COMP_CODE, '2', @CUR_DIV_CODE, @ITEM_CODE, @SALE_CUSTOM_CODE, @MONEY_UNIT, @ORDER_UNIT, @APLY_START_DATE, @SALE_ITEM_P, @SALE_ITEM_P
					  				     , @ORDER_RATE, @P_REQ_NUM, @SER_NO, @PRICE_TYPE, 'Y', @REMARK, '3' AS GW_FLAG
					  				     , @USER_ID, GETDATE(), @USER_ID, GETDATE(), ISNULL(@PACK_ITEM_P, 0)
								END
						END	--IF @SALE_CUSTOM_CODE <> ''


						SET @ROW_COUNT = @ROW_COUNT + 1

					FETCH NEXT FROM CUR1 INTO @ITEM_TYPE, @ITEM_CODE, @PURCH_CUSTOM_CODE, @ITEM_P, @SALE_CUSTOM_CODE, @ITEM_ACCOUNT, @OEM_APLY_YN, @REMARK, @APLY_START_DATE, @PACK_ITEM_P
					END
					CLOSE CUR1
					DEALLOCATE CUR1

					DROP TABLE #TMP_CUSTOM_LIST

				    IF #{QUERY_TYPE} = '1'  --단가의뢰
				    BEGIN
				  		UPDATE S_BCO110T_KD
				  		   SET CONFIRM_YN = 'Y'
				  		      ,RENEWAL_YN = 'Y'
				  		      ,[12199_YN] 	  = CASE WHEN #{12199_YN}     = 'true' THEN 'Y' ELSE 'N' END
							  ,[13199_YN] 	  = CASE WHEN #{13199_YN}     = 'true' THEN 'Y' ELSE 'N' END
							  ,[14199_YN] 	  = CASE WHEN #{14199_YN}     = 'true' THEN 'Y' ELSE 'N' END
							  ,[13301_YN] 	  = CASE WHEN #{13301_YN}     = 'true' THEN 'Y' ELSE 'N' END
							  ,OEM_YN   	  = CASE WHEN #{OEM_YN}       = 'true' THEN 'Y' ELSE 'N' END
							  ,OEM_APLY_YN    = #{OEM_APLY_YN}
						   	  ,MONEY_UNIT     = #{MONEY_UNIT}
						   	  ,PACK_ITEM_P    = #{PACK_ITEM_P}
						   	  ,APLY_START_DATE= #{APLY_START_DATE}
				  		 WHERE COMP_CODE = @COMP_CODE
				  		   AND DIV_CODE  = @DIV_CODE
				  		   AND P_REQ_NUM = @P_REQ_NUM
				  		   AND SER_NO    = @SER_NO
				    END
				    ELSE
				    BEGIN --최종단가대비 수출가 확정
				      UPDATE S_TTR910T_KD
				         SET CONFIRM_YN = 'Y'
				       WHERE COMP_CODE   = #{S_COMP_CODE}
				         AND DIV_CODE    = #{S_DIV_CODE}
				         AND REPORT_NO   = #{P_REQ_NUM}
				         AND REPORT_SEQ  = #{SER_NO}
				    END
				END	--IF (@RENEWAL_YN = 'N' AND @CONFIRM_YN = 'N')
				ELSE
				BEGIN
					UPDATE S_BCO110T_KD
					   SET CONFIRM_YN 	  = 'Y'
					   	  ,[12199_YN] 	  = CASE WHEN #{12199_YN}     = 'true' THEN 'Y' ELSE 'N' END
						  ,[13199_YN] 	  = CASE WHEN #{13199_YN}     = 'true' THEN 'Y' ELSE 'N' END
						  ,[14199_YN] 	  = CASE WHEN #{14199_YN}     = 'true' THEN 'Y' ELSE 'N' END
						  ,[13301_YN] 	  = CASE WHEN #{13301_YN}     = 'true' THEN 'Y' ELSE 'N' END
						  ,OEM_YN   	  = CASE WHEN #{OEM_YN}       = 'true' THEN 'Y' ELSE 'N' END
						  ,OEM_APLY_YN    = #{OEM_APLY_YN}
					   	  ,MONEY_UNIT     = #{MONEY_UNIT}
					   	  ,PACK_ITEM_P    = #{PACK_ITEM_P}
					   	  ,APLY_START_DATE= #{APLY_START_DATE}
					 WHERE COMP_CODE = @COMP_CODE
					   AND DIV_CODE  = @DIV_CODE
					   AND P_REQ_NUM = @P_REQ_NUM
					   AND SER_NO    = @SER_NO
				END
			END
		ELSE --최종단가대비수출가 로직 2020.03.20
				BEGIN
					IF (@RENEWAL_YN = 'Y' AND @CONFIRM_YN = 'Y')
					BEGIN
						SET @ROW_COUNT = 1
						DECLARE CUR2 CURSOR FOR

	  					--최종단가대비 수출가
	  					SELECT '2' TYPE, B.ITEM_CODE, A.CUSTOM_CODE, B.LAST_NEGO_FOR_P AS ITEM_P, '' AS SALE_CUSTOM_CODE, C.ITEM_ACCOUNT, 'N' AS OEM_APLY_YN
	  							  , '최종단가대비 수출가' AS REMARK
	  							  , A.APPLY_DATE AS APLY_START_DATE
	  							  , 0 AS PACK_ITEM_P
	  					FROM S_TTR900T_KD A WITH (NOLOCK)
	  						 INNER JOIN S_TTR910T_KD B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.REPORT_NO=B.REPORT_NO
	  						 LEFT  JOIN BPR200T		 C WITH (NOLOCK) ON B.COMP_CODE=C.COMP_CODE AND B.DIV_CODE=C.DIV_CODE AND B.ITEM_CODE=C.ITEM_CODE
	  					WHERE A.COMP_CODE   = @COMP_CODE
	    					AND A.DIV_CODE	  = @DIV_CODE
	    					AND A.REPORT_NO	  = @P_REQ_NUM
	    					AND B.REPORT_SEQ  = @SER_NO
	    					AND @QUERY_TYPE   = '2'


						OPEN CUR2
						FETCH NEXT FROM CUR2 INTO @ITEM_TYPE, @ITEM_CODE, @PURCH_CUSTOM_CODE, @ITEM_P, @SALE_CUSTOM_CODE, @ITEM_ACCOUNT, @OEM_APLY_YN, @REMARK, @APLY_START_DATE, @PACK_ITEM_P
						WHILE @@FETCH_STATUS = 0
						BEGIN
							 SET @PRICE_TYPE  = '2'
							 SET @CUR_DIV_CODE= '*'
							 --한번만 수행)
							IF (@ROW_COUNT = 1)
							BEGIN
								IF NOT EXISTS (SELECT TOP 1 1 FROM BPR400T WHERE COMP_CODE=@COMP_CODE AND DIV_CODE=@CUR_DIV_CODE AND ITEM_CODE=@ITEM_CODE AND TYPE=@ITEM_TYPE AND CUSTOM_CODE=@PURCH_CUSTOM_CODE AND MONEY_UNIT=@MONEY_UNIT AND ORDER_UNIT=@ORDER_UNIT AND APLY_START_DATE=@APLY_START_DATE)
								BEGIN
									INSERT INTO BPR400T
	      								(   COMP_CODE,
	      									TYPE,
	      									DIV_CODE,
	      									ITEM_CODE,
	      									CUSTOM_CODE,
	      									MONEY_UNIT,
	      									ORDER_UNIT,
	      									APLY_START_DATE,
	      									BASIS_P,
	      									ITEM_P,
	      									ORDER_RATE,
	      									P_REQ_NUM,
	      									SER_NO,
	      									PRICE_TYPE,
	      									USE_YN,
	      									REMARK,
	      									GW_FLAG,
	      									INSERT_DB_USER,
	      									INSERT_DB_TIME,
	      									UPDATE_DB_USER,
	      									UPDATE_DB_TIME,
	      									TEMPN_01
	      								)
	      							SELECT @COMP_CODE, @ITEM_TYPE, @CUR_DIV_CODE, @ITEM_CODE, @PURCH_CUSTOM_CODE, @MONEY_UNIT, @ORDER_UNIT, @APLY_START_DATE, @ITEM_P, @ITEM_P
	      								, @ORDER_RATE, @P_REQ_NUM, @SER_NO, @PRICE_TYPE, 'Y', @REMARK, '3' AS GW_FLAG
	      								, @USER_ID, GETDATE(), @USER_ID, GETDATE(), ISNULL(@PACK_ITEM_P, 0)
								END
							END
								SET @ROW_COUNT = @ROW_COUNT + 1

						FETCH NEXT FROM CUR2 INTO @ITEM_TYPE, @ITEM_CODE, @PURCH_CUSTOM_CODE, @ITEM_P, @SALE_CUSTOM_CODE, @ITEM_ACCOUNT, @OEM_APLY_YN, @REMARK, @APLY_START_DATE, @PACK_ITEM_P
						END
						CLOSE CUR2
						DEALLOCATE CUR2

						  UPDATE S_TTR910T_KD
							 SET CONFIRM_YN = 'Y'
							    ,RENEWAL_YN = 'Y'
							    ,APLY_START_DATE= #{APLY_START_DATE}
							    ,MONEY_UNIT     = #{MONEY_UNIT}
						   WHERE COMP_CODE   = @COMP_CODE
							 AND DIV_CODE    = @DIV_CODE
							 AND REPORT_NO   = @P_REQ_NUM
							 AND REPORT_SEQ  = @SER_NO
					END
					ELSE --@RENEWAL_YN = 'Y' AND @CONFIRM_YN = 'Y' 가 아닌 것
						BEGIN
							UPDATE S_TTR910T_KD
							 SET CONFIRM_YN = 'Y'
							    ,APLY_START_DATE= #{APLY_START_DATE}
							    ,MONEY_UNIT     = #{MONEY_UNIT}
						   WHERE COMP_CODE   = @COMP_CODE
							 AND DIV_CODE    = @DIV_CODE
							 AND REPORT_NO   = @P_REQ_NUM
							 AND REPORT_SEQ  = @SER_NO
						END

			END
	  SET NOCOUNT OFF

		--이문을 먼저 실행해야 결과를 얻을수 있습니다.  라는 오류 때문에 임의로 강제 지정
		UPDATE S_BCO110T_KD SET TEMPC_01='1' WHERE 1=2
	END
    ]]>
    </insert>


    <update id="s_bco110ukrv_kdService.updateDetail1" parameterType="Map">
        UPDATE S_BCO100T_KD
           SET TREE_CODE       = #{TREE_CODE},
               PERSON_NUMB     = #{PERSON_NUMB},
               MONEY_UNIT      = #{MONEY_UNIT},
               P_REQ_DATE      = #{P_REQ_DATE},
               APLY_START_DATE = #{APLY_START_DATE},
               GW_FLAG        = #{GW_FLAG},
               UPDATE_DB_USER  = #{S_USER_ID},
               UPDATE_DB_TIME  = GETDATE()
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = #{DIV_CODE}
           AND P_REQ_NUM       = #{P_REQ_NUM}
           AND #{QUERY_TYPE}   = '1'   --단가입력의뢰정보만 반영
    </update>

    <update id="s_bco110ukrv_kdService.updateDetail2" parameterType="Map">
        UPDATE S_BCO110T_KD
           SET CUSTOM_CODE          = #{CUSTOM_CODE},
               CUSTOM_NAME          = #{CUSTOM_NAME},
               MAKER_CODE           = #{MAKER_CODE},
               MAKER_NAME           = #{MAKER_NAME},
               NEW_ITEM_FREFIX      = #{NEW_ITEM_FREFIX},
               ITEM_CODE            = #{ITEM_CODE},
               ITEM_NAME            = #{ITEM_NAME},
               <if test="TYPE == &quot;1&quot;">
               PRICE_TYPE           = #{PRICE_TYPE2},
               </if>
               <if test="TYPE == &quot;2&quot;">
               PRICE_TYPE           = #{PRICE_TYPE1},
               </if>
               ORDER_UNIT           = #{ORDER_UNIT},
               ITEM_P               = #{ITEM_P},
               PACK_ITEM_P          = #{PACK_ITEM_P},
               PRE_ITEM_P           = #{PRE_ITEM_P},
               HS_CODE              = #{HS_CODE},
               PAY_TERMS            = #{PAY_TERMS},
               TERMS_PRICE          = #{TERMS_PRICE},
               DELIVERY_METH        = #{DELIVERY_METH},
               CH_REASON            = #{CH_REASON},
               OEM_YN               = CASE WHEN #{OEM_YN}   = 'false' THEN 'N' ELSE 'Y' END,
               OEM_APLY_YN          = #{OEM_APLY_YN},
               [12199_YN]           = CASE WHEN #{12199_YN} = 'false' THEN 'N' ELSE 'Y' END,
               [13199_YN]           = CASE WHEN #{13199_YN} = 'false' THEN 'N' ELSE 'Y' END,
               [14199_YN]           = CASE WHEN #{14199_YN} = 'false' THEN 'N' ELSE 'Y' END,
               [13301_YN]           = CASE WHEN #{13301_YN} = 'false' THEN 'N' ELSE 'Y' END,
               OEM_ITEM_CODE        = #{OEM_ITEM_CODE},
               SPEC                 = #{SPEC},
               CAR_TYPE             = #{CAR_TYPE},
               STOCK_UNIT           = #{STOCK_UNIT},
               CUSTOM_FULL_NAME     = #{CUSTOM_FULL_NAME},
               ADD01_CUSTOM_CODE    = #{ADD01_CUSTOM_CODE},
               ADD02_CUSTOM_CODE    = #{ADD02_CUSTOM_CODE},
               ADD03_CUSTOM_CODE    = #{ADD03_CUSTOM_CODE},
               ADD04_CUSTOM_CODE    = #{ADD04_CUSTOM_CODE},
               ADD05_CUSTOM_CODE    = #{ADD05_CUSTOM_CODE},
               ADD06_CUSTOM_CODE    = #{ADD06_CUSTOM_CODE},
               ADD07_CUSTOM_CODE    = #{ADD07_CUSTOM_CODE},
               ADD08_CUSTOM_CODE    = #{ADD08_CUSTOM_CODE},
               ADD09_CUSTOM_CODE    = #{ADD09_CUSTOM_CODE},
               ADD10_CUSTOM_CODE    = #{ADD10_CUSTOM_CODE},
               ADD11_CUSTOM_CODE    = #{ADD11_CUSTOM_CODE},
               ADD12_CUSTOM_CODE    = #{ADD12_CUSTOM_CODE},
               ADD13_CUSTOM_CODE    = #{ADD13_CUSTOM_CODE},
               ADD14_CUSTOM_CODE    = #{ADD14_CUSTOM_CODE},
               ADD15_CUSTOM_CODE    = #{ADD15_CUSTOM_CODE},
               ADD16_CUSTOM_CODE    = #{ADD16_CUSTOM_CODE},
               ADD17_CUSTOM_CODE    = #{ADD17_CUSTOM_CODE},
               ADD18_CUSTOM_CODE    = #{ADD18_CUSTOM_CODE},
               ADD19_CUSTOM_CODE    = #{ADD19_CUSTOM_CODE},
               ADD20_CUSTOM_CODE    = #{ADD20_CUSTOM_CODE},
               ADD21_CUSTOM_CODE    = #{ADD21_CUSTOM_CODE},
               ADD22_CUSTOM_CODE    = #{ADD22_CUSTOM_CODE},
               REMARK               = #{REMARK},
               UPDATE_DB_USER       = #{S_USER_ID},
               UPDATE_DB_TIME       = GETDATE()
         WHERE COMP_CODE            = #{S_COMP_CODE}
           AND DIV_CODE             = #{S_DIV_CODE}
           AND P_REQ_NUM            = #{P_REQ_NUM}
           AND SER_NO               = #{SER_NO}
           AND #{QUERY_TYPE}        = '1'   --단가입력의뢰정보만 반영


    </update>

    <delete id="s_bco110ukrv_kdService.deleteDetail1" parameterType="Map">
        DELETE FROM S_BCO100T_KD
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE  = #{S_DIV_CODE}
           AND P_REQ_NUM = #{P_REQ_NUM}
    </delete>

    <delete id="s_bco110ukrv_kdService.deleteDetail2" parameterType="Map">
        DELETE FROM S_BCO110T_KD
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE  = #{S_DIV_CODE}
           AND P_REQ_NUM = #{P_REQ_NUM}
           AND SER_NO    = #{SER_NO}
    </delete>

    <select id="s_bco110ukrv_kdService.checkCompCode" parameterType="Map" resultType="rMap">
    SELECT A.COMP_CODE, A.COMP_NAME
    FROM              BOR100T   A  WITH (NOLOCK)
           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}
                                                AND M1.MAIN_CODE    = 'B107'
                                                AND M1.SUB_CODE     = '20'
    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
    </select>

	<insert id="s_bco110ukrv_kdService.inertBpr400t" parameterType="Map">
       INSERT INTO  BPR400T
		(COMP_CODE,
		 TYPE,
		 DIV_CODE,
		 ITEM_CODE,
		 CUSTOM_CODE,
		 MONEY_UNIT,
		 ORDER_UNIT,
		 APLY_START_DATE,
		 APLY_END_DATE,
		 <if test="TYPE == &quot;1&quot;">
           BASIS_P,
         </if>
         <if test="TYPE == &quot;2&quot;">
           ITEM_P,
         </if>
		 INSERT_DB_TIME,
		 INSERT_DB_USER,
		 UPDATE_DB_TIME,
		 UPDATE_DB_USER
		 )
		 VALUES
		 (#{S_COMP_CODE},
		  #{TYPE},
		  CASE WHEN #{TYPE}='2' THEN '*' ELSE  #{DIV_CODE} END,
		  #{ITEM_CODE},
		  #{CUSTOM_CODE},
		  #{MONEY_UNIT},
		  #{ORDER_UNIT},
		  #{APLY_START_DATE},
		  '99991231',
          #{ITEM_P},
          GETDATE(),
          #{S_USER_ID},
		  GETDATE(),
          #{S_USER_ID}
		 )
    </insert>

    <update id="s_bco110ukrv_kdService.updateBpr400t" parameterType="Map">
      UPDATE BPR400T SET
       <if test="TYPE == &quot;1&quot;">
           BASIS_P =  #{ITEM_P},
         </if>
         <if test="TYPE == &quot;2&quot;">
           ITEM_P = #{ITEM_P},
         </if>
          UPDATE_DB_TIME = GETDATE(),
		  UPDATE_DB_USER = #{S_USER_ID}
       WHERE COMP_CODE = #{S_COMP_CODE}
       AND     DIV_CODE = CASE WHEN TYPE='2' THEN '*' ELSE  #{DIV_CODE} END
       AND     TYPE = #{TYPE}
       AND 	 ITEM_CODE = #{ITEM_CODE}
       AND     CUSTOM_CODE = #{CUSTOM_CODE}
       AND     MONEY_UNIT =  #{MONEY_UNIT}
       AND     ORDER_UNIT  =  #{ORDER_UNIT}
       AND     APLY_START_DATE =   #{APLY_START_DATE}
    </update>

    <select id="s_bco110ukrv_kdService.selectBpr400t" parameterType="Map" resultType="Int" >
       SELECT COUNT(1)
       FROM BPR400T
       WHERE COMP_CODE = #{S_COMP_CODE}
       AND     DIV_CODE = #{DIV_CODE}
       AND     TYPE = #{TYPE}
       AND 	 ITEM_CODE = #{ITEM_CODE}
       AND     CUSTOM_CODE = #{CUSTOM_CODE}
       AND     MONEY_UNIT =  #{MONEY_UNIT}
       AND     ORDER_UNIT  =  #{ORDER_UNIT}
       AND     APLY_START_DATE =   #{APLY_START_DATE}
    </select>
</mapper>