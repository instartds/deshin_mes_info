<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pbs071ukrv_kdService">
    <select id="s_pbs071ukrv_kdService.selectList" parameterType="Map" resultType="rMap">
        --pbs300ukrv.Cpbs300ukrv[fnPbs300QStd]Query01
        DECLARE     @COMP_CODE          NVARCHAR(08)    -- (필수) 법인코드
                  , @DIV_CODE           NVARCHAR(08)    -- (필수) 사업장
                  , @WORK_SHOP_CODE     NVARCHAR(08)    -- (필수) 작업장
                  , @ITEM_FR_CODE       NVARCHAR(20)    -- (선택) 품목코드(FROM)
                  , @ITEM_TO_CODE       NVARCHAR(20)    -- (선택) 품목코드(TO)
                  , @ITEM_ACCOUNT       NVARCHAR(02)    -- (선택) 품목계정
                  , @SUPPLY_TYPE        NVARCHAR(02)    -- (선택) 조달구분
                  , @ITEM_LEVEL1        NVARCHAR(05)    -- (선택) 대분류
                  , @ITEM_LEVEL2        NVARCHAR(05)    -- (선택) 중분류
                  , @ITEM_LEVEL3        NVARCHAR(05)    -- (선택) 소분류
                  , @ACC_STATUS         NVARCHAR(01)    -- (필수) 등록여부
                  , @USER_ID            NVARCHAR(100)    -- (필수) 사용자ID

        SET     @COMP_CODE          = #{S_COMP_CODE}
        SET     @DIV_CODE           = #{DIV_CODE}
        <if test="GS_WORK_SHOP_CODE == &quot;1&quot;">
        SET     @WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
        </if>
        <if test="GS_WORK_SHOP_CODE == &quot;2&quot;">
        SET     @WORK_SHOP_CODE     = (SELECT TOP 1 TREE_CODE
                                         FROM BSA230T WITH (NOLOCK)
                                        WHERE COMP_CODE     = #{S_COMP_CODE}
                                          AND TYPE_LEVEL    = #{DIV_CODE}
                                          AND USE_YN='Y'
                                        ORDER BY TREE_CODE)
        </if>
        SET     @ITEM_FR_CODE       = #{ITEM_FR_CODE}
        SET     @ITEM_TO_CODE       = #{ITEM_TO_CODE}
        SET     @ITEM_ACCOUNT       = #{ITEM_ACCOUNT}
        SET     @SUPPLY_TYPE        = #{SUPPLY_TYPE}
        SET     @ITEM_LEVEL1        = #{ITEM_LEVEL1}
        SET     @ITEM_LEVEL2        = #{ITEM_LEVEL2}
        SET     @ITEM_LEVEL3        = #{ITEM_LEVEL3}
        SET     @ACC_STATUS         = #{ACC_STATUS}
        SET     @USER_ID            = #{S_USER_ID}

        DECLARE     @RefItem            NVARCHAR(01)    -- 사용자 품목명 참조 유형

        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T WITH (NOLOCK)
        WHERE  COMP_CODE = @COMP_CODE
        AND    USER_ID   = @USER_ID

        SET @RefItem = ISNULL(@RefItem, '0')

        SELECT
               A.ITEM_CODE
             , A.ITEM_NAME
             , A.SPEC
             , A.STOCK_UNIT
             , A.ITEM_ACCOUNT
             , A.ITEMACCOUNT_NAME
             , A.SUPPLY_TYPE
             , A.PROG_CNT
             , A.ITEMLEVEL1_NAME
             , A.ITEMLEVEL2_NAME
             , A.ITEMLEVEL3_NAME
             , A.COMP_CODE
        FROM   (
               SELECT A.ITEM_CODE
                    , CASE WHEN @RefItem = '0' THEN B.ITEM_NAME
                           WHEN @RefItem = '1' THEN B.ITEM_NAME1
                           WHEN @RefItem = '2' THEN B.ITEM_NAME2
                           ELSE                     B.ITEM_NAME
                      END  AS ITEM_NAME
                    , B.SPEC
                    , B.STOCK_UNIT
                    , A.ITEM_ACCOUNT
                    , M1.CODE_NAME           AS ITEMACCOUNT_NAME
                    , A.SUPPLY_TYPE
                    , M2.LEVEL_NAME         AS ITEMLEVEL1_NAME
                    , M3.LEVEL_NAME         AS ITEMLEVEL2_NAME
                    , M4.LEVEL_NAME         AS ITEMLEVEL3_NAME
                    , ISNULL(C.PROG_CNT, 0) AS PROG_CNT
                    , A.COMP_CODE
               FROM              BPR200T A  WITH (NOLOCK)
                      INNER JOIN BPR100T B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                         AND B.ITEM_CODE = A.ITEM_CODE
                      LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_CODE
                                       , COUNT(ITEM_CODE) AS PROG_CNT
                                  FROM   PBS300T WITH (NOLOCK)
                                  WHERE  COMP_CODE      = @COMP_CODE
                                  AND    DIV_CODE       = @DIV_CODE
                                  AND    WORK_SHOP_CODE = @WORK_SHOP_CODE
                                  GROUP  BY COMP_CODE, DIV_CODE, ITEM_CODE
                                 ) C  ON C.COMP_CODE    = A.COMP_CODE
                                     AND C.DIV_CODE     = A.DIV_CODE
                                     AND C.ITEM_CODE    = A.ITEM_CODE
                      LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
                                                         AND M1.MAIN_CODE = 'B020'
                                                         AND M1.SUB_CODE  = A.ITEM_ACCOUNT
                      LEFT  JOIN BPR000T M2 WITH (NOLOCK) ON M2.COMP_CODE = B.COMP_CODE
                                                         AND M2.LEVEL1    = B.ITEM_LEVEL1
                                                         AND M2.LEVEL2    = '*'
                                                         AND M2.LEVEL3    = '*'
                      LEFT  JOIN BPR000T M3 WITH (NOLOCK) ON M3.COMP_CODE = B.COMP_CODE
                                                         AND M3.LEVEL1    = B.ITEM_LEVEL1
                                                         AND M3.LEVEL2   != '*'
                                                         AND M3.LEVEL2    = B.ITEM_LEVEL2
                                                         AND M3.LEVEL3    = '*'
                      LEFT  JOIN BPR000T M4 WITH (NOLOCK) ON M4.COMP_CODE = B.COMP_CODE
                                                         AND M4.LEVEL1    = B.ITEM_LEVEL1
                                                         AND M4.LEVEL2    = B.ITEM_LEVEL2
                                                         AND M4.LEVEL2   != '*'
                                                         AND M4.LEVEL3    = B.ITEM_LEVEL3
                                                         AND M4.LEVEL3   != '*'
               WHERE  A.COMP_CODE      = @COMP_CODE
               AND    A.DIV_CODE       = @DIV_CODE
               AND  ((A.ITEM_ACCOUNT   = @ITEM_ACCOUNT AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))
               AND  ((A.SUPPLY_TYPE    = @SUPPLY_TYPE  AND @SUPPLY_TYPE  != '') OR (@SUPPLY_TYPE  = ''))
               AND  ((A.ITEM_CODE     &gt;= @ITEM_FR_CODE AND @ITEM_FR_CODE != '') OR (@ITEM_FR_CODE = ''))
               AND  ((A.ITEM_CODE     &lt;= @ITEM_TO_CODE AND @ITEM_TO_CODE != '') OR (@ITEM_TO_CODE = ''))
               AND  ((B.ITEM_LEVEL1    = @ITEM_LEVEL1  AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))
               AND  ((B.ITEM_LEVEL2    = @ITEM_LEVEL2  AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))
               AND  ((B.ITEM_LEVEL3    = @ITEM_LEVEL3  AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))
               ) A
        WHERE ((A.PROG_CNT &gt;= 0 AND @ACC_STATUS = '0')
            OR (A.PROG_CNT &gt;= 1 AND @ACC_STATUS = '1')
            OR (A.PROG_CNT  = 0 AND @ACC_STATUS = '2'))
        ORDER  BY A.ITEM_CODE  , A.ITEM_ACCOUNT
    </select>

    <select id="s_pbs071ukrv_kdService.selectList2" parameterType="Map" resultType="rMap">
        --pbs300ukrv.Cpbs300ukrv[fnPbs300QSt1]Query01
        DECLARE     @COMP_CODE          NVARCHAR(08)    -- (필수) 법인코드
                  , @DIV_CODE           NVARCHAR(08)    -- (필수) 사업장
                  , @WORK_SHOP_CODE     NVARCHAR(08)    -- (필수) 작업장
                  , @ITEM_CODE          NVARCHAR(20)    -- (선택) 품목코드(FROM)

        SET     @COMP_CODE          = #{S_COMP_CODE}
        SET     @DIV_CODE           = #{DIV_CODE}
        <if test="GS_WORK_SHOP_CODE == &quot;1&quot;">
        SET     @WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
        </if>
        <if test="GS_WORK_SHOP_CODE == &quot;2&quot;">
        SET     @WORK_SHOP_CODE     = (SELECT TOP 1 TREE_CODE
                                         FROM BSA230T
                                        WHERE COMP_CODE     = #{S_COMP_CODE}
                                          AND TYPE_LEVEL    = #{DIV_CODE}
                                          AND USE_YN='Y'
                                        ORDER BY TREE_CODE)
        </if>
        SET     @ITEM_CODE          = #{ITEM_CODE}

        SELECT    A.LINE_SEQ                 AS SORT_FLD
                , A.DIV_CODE
                , A.ITEM_CODE
                , C.ITEM_NAME
                , C.SPEC
                , A.WORK_SHOP_CODE
                , A.PROG_WORK_CODE
                , B.PROG_WORK_NAME
                , CAST(A.LINE_SEQ AS BIGINT) AS LINE_SEQ
                , A.MAKE_LDTIME
                , A.PROG_RATE
                , A.PROG_UNIT_Q
                , B.PROG_UNIT
                , A.COMP_CODE
                , A.REMARK
           FROM             PBS300T A WITH (NOLOCK)
                 INNER JOIN PBS200T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                                   AND B.DIV_CODE       = A.DIV_CODE
                                                   AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
                                                   AND B.PROG_WORK_CODE = A.PROG_WORK_CODE
                 LEFT JOIN  BPR100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                                   AND C.ITEM_CODE = A.ITEM_CODE
           WHERE  A.COMP_CODE       = @COMP_CODE
           AND    A.DIV_CODE        = @DIV_CODE
           AND    A.WORK_SHOP_CODE  = @WORK_SHOP_CODE
           AND    A.ITEM_CODE       = @ITEM_CODE
           AND    B.USE_YN          = 'Y'

         ORDER BY CAST(A.LINE_SEQ AS INT)
    </select>

    <select id="s_pbs071ukrv_kdService.selectCopyProgWorkShopCode" parameterType="Map" resultType="rMap">
        --pbs300ukrv.Cpbs300ukrv[fnPbs300QSt1]Query01
        DECLARE     @COMP_CODE          NVARCHAR(08)    -- (필수) 법인코드
                  , @DIV_CODE           NVARCHAR(08)    -- (필수) 사업장
                  , @WORK_SHOP_CODE     NVARCHAR(08)    -- (필수) 작업장
                  , @ITEM_CODE          NVARCHAR(20)    -- (선택) 품목코드(FROM)

        SET     @COMP_CODE          = #{S_COMP_CODE}
        SET     @DIV_CODE           = #{DIV_CODE}
        <if test="GS_WORK_SHOP_CODE == &quot;1&quot;">
        SET     @WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
        </if>
        <if test="GS_WORK_SHOP_CODE == &quot;2&quot;">
        SET     @WORK_SHOP_CODE     = (SELECT TOP 1 TREE_CODE
                                         FROM BSA230T
                                        WHERE COMP_CODE     = #{S_COMP_CODE}
                                          AND TYPE_LEVEL    = #{DIV_CODE}
                                          AND USE_YN='Y'
                                        ORDER BY TREE_CODE)
        </if>
        SET     @ITEM_CODE          = #{ITEM_CODE}

        SELECT    A.LINE_SEQ                 AS SORT_FLD
                , A.DIV_CODE
                , A.ITEM_CODE                AS REF_ITEM_CODE
                , C.ITEM_NAME
                , C.SPEC
                , A.WORK_SHOP_CODE
                , A.PROG_WORK_CODE
                , B.PROG_WORK_NAME
                , CAST(A.LINE_SEQ AS BIGINT) AS LINE_SEQ
                , A.MAKE_LDTIME
                , A.PROG_RATE
                , A.PROG_UNIT_Q
                , A.PROG_UNIT
                , A.COMP_CODE
           FROM             PBS300T A WITH (NOLOCK)
                 INNER JOIN PBS200T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                                   AND B.DIV_CODE       = A.DIV_CODE
                                                   AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
                                                   AND B.PROG_WORK_CODE = A.PROG_WORK_CODE
                 LEFT JOIN  BPR100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
                                                   AND C.ITEM_CODE = A.ITEM_CODE
           WHERE  A.COMP_CODE       = @COMP_CODE
           AND    A.DIV_CODE        = @DIV_CODE
           AND    A.WORK_SHOP_CODE  = @WORK_SHOP_CODE
           <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
           AND    A.ITEM_CODE       = @ITEM_CODE
           </if>
           AND    B.USE_YN          = 'Y'
           AND    NOT EXISTS (SELECT X.*
                                FROM PBS300T X
                               WHERE X.COMP_CODE      = A.COMP_CODE
                                 AND X.DIV_CODE       = A.DIV_CODE
                                 AND X.PROG_WORK_CODE = A.PROG_WORK_CODE
                                 AND X.ITEM_CODE      = #{ITEM_CODE_TEMP}
                                 and x.WORK_SHOP_CODE = A.WORK_SHOP_CODE
                                 )
         GROUP BY A.LINE_SEQ, A.DIV_CODE, A.ITEM_CODE, C.ITEM_NAME, C.SPEC, A.WORK_SHOP_CODE, A.PROG_WORK_CODE
                , B.PROG_WORK_NAME, A.MAKE_LDTIME, A.PROG_RATE, A.PROG_UNIT_Q, A.PROG_UNIT, A.COMP_CODE
         ORDER BY CAST(A.LINE_SEQ AS INT)
    </select>

    <update id="s_pbs071ukrv_kdService.spReceiving" parameterType="Map" statementType="CALLABLE">
        {call USP_PBS300T (
            #{COMP_CODE        , mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{DIV_CODE         , mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{NUD_FLAG         , mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{REF_ITEM_CODE    , mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{ITEM_CODE        , mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{WORK_SHOP_CODE   , mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{PROG_WORK_CODE   , mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{LINE_SEQ         , mode=IN, jdbcType=INTEGER, javaType=java.lang.Integer},
            #{MAKE_LDTIME      , mode=IN, jdbcType=INTEGER, javaType=java.lang.Integer},
            #{PROG_UNIT_Q      , mode=IN, jdbcType=INTEGER, javaType=java.lang.Integer},
            #{PROG_UNIT        , mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{PROG_RATE        , mode=IN, jdbcType=INTEGER, javaType=java.lang.Integer},
            #{USER_ID          , mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{REMARK           , mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{ERROR_DESC       , mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>











    <select id="s_pbs071ukrv_kdService.selectList3" parameterType="Map" resultType="rMap">
        SELECT  DISTINCT A.COMP_CODE
              , A.DIV_CODE
              , A.ITEM_CODE
              , B.SPEC
              , B.STOCK_UNIT
              , '' AS WORK_SHOP_CODE
              , A.PROG_WORK_CODE
              , A.CHILD_ITEM_CODE
              , B.ITEM_NAME             AS CHILD_ITEM_NAME
              , A.UNIT_Q      -- BOM 으로 수정 => 극동 우태오 부장 요청으로 인해 C.UNIT_Q -> A.UNIT_Q로 변경.
              , C.PROD_UNIT_Q
              , A.REMARK
          FROM S_PBS300T_KD A   WITH (NOLOCK)
          LEFT JOIN BPR100T B   WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                             AND B.ITEM_CODE = A.CHILD_ITEM_CODE
          LEFT JOIN BPR500T C   WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
											 AND C.PROD_ITEM_CODE = A.ITEM_CODE
                                             AND C.CHILD_ITEM_CODE = A.CHILD_ITEM_CODE
         WHERE A.COMP_CODE      = #{S_COMP_CODE}
           AND A.DIV_CODE       = #{DIV_CODE}
           AND A.ITEM_CODE      = #{ITEM_CODE}
           <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
           AND A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(PROG_WORK_CODE)">
           AND A.PROG_WORK_CODE = #{PROG_WORK_CODE}
           </if>
    </select>

    <insert id="s_pbs071ukrv_kdService.insertDetail3" parameterType="Map">        /* 공정품목 추가 */
        --pbs300ukrv.Cpbs300ukrv[fnPbs300Save]Query01
        INSERT S_PBS300T_KD
             ( COMP_CODE
             , DIV_CODE
             , ITEM_CODE
             , WORK_SHOP_CODE
             , PROG_WORK_CODE
             , CHILD_ITEM_CODE
             , UNIT_Q
             , PROD_UNIT_Q
             , REMARK
      			 , INSERT_DB_USER
             , INSERT_DB_TIME
             , UPDATE_DB_USER
             , UPDATE_DB_TIME)
        -- 전 작업장을 대상으로 반영
        SELECT COMP_CODE, TYPE_LEVEL AS DIV_CODE, #{ITEM_CODE} ITEM_CODE, TREE_CODE AS WORK_SHOP_CODE, #{PROG_WORK_CODE} AS PROG_WORK_CODE
              ,  #{CHILD_ITEM_CODE} AS CHILD_ITEM_CODE, #{UNIT_Q} AS UNIT_Q, #{PROD_UNIT_Q} AS PROD_UNIT_Q
              , #{REMARK} AS REMARK, #{S_USER_ID} AS INSERT_DB_USER, GETDATE(), #{S_USER_ID} AS UPDATE_DB_USER, GETDATE()
        FROM BSA230T A
        WHERE COMP_CODE=#{S_COMP_CODE}
        AND TYPE_LEVEL=#{DIV_CODE}
        AND NOT EXISTS (SELECT TOP 1 1 FROM S_PBS300T_KD WHERE COMP_CODE=A.COMP_CODE AND DIV_CODE=A.TYPE_LEVEL AND WORK_SHOP_CODE=A.TREE_CODE  AND ITEM_CODE=#{ITEM_CODE} AND PROG_WORK_CODE=#{PROG_WORK_CODE} AND CHILD_ITEM_CODE=#{CHILD_ITEM_CODE})

    </insert>

    <update id="s_pbs071ukrv_kdService.updateDetail3" parameterType="Map">        /* 공정품목 수정 */
        UPDATE S_PBS300T_KD
           SET UNIT_Q         = #{UNIT_Q}
             , PROD_UNIT_Q    = #{PROD_UNIT_Q}
             , REMARK         = #{REMARK}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
           WHERE COMP_CODE      = #{S_COMP_CODE}
             AND DIV_CODE       = #{DIV_CODE}
             AND ITEM_CODE      = #{ITEM_CODE}

           <if test="@foren.Ognl@isNotEmpty(PROG_WORK_CODE)">
             AND PROG_WORK_CODE = #{PROG_WORK_CODE}
           </if>
    </update>

    <delete id="s_pbs071ukrv_kdService.deleteDetail3" parameterType="Map">        /* 공정품목 삭제 */
        DELETE S_PBS300T_KD
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND DIV_CODE       = #{DIV_CODE}
           AND ITEM_CODE      = #{ITEM_CODE}
           AND CHILD_ITEM_CODE = #{CHILD_ITEM_CODE}
           AND PROG_WORK_CODE = #{PROG_WORK_CODE}
    </delete>








    <select id="s_pbs071ukrv_kdService.selectList4" parameterType="Map" resultType="rMap">    /* 공정/금형 */
        BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON

            DECLARE @COMP_CODE   NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(100) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

            SET @COMP_CODE  = #{S_COMP_CODE}
            SET @UserId     = #{S_USER_ID}
            SET @LangType   = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @COMP_CODE
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT
                   A.COMP_CODE
                 , A.DIV_CODE
                 , A.ITEM_CODE
                 , A.WORK_SHOP_CODE
                 , A.PROG_WORK_CODE
                 , A.EQUIP_CODE
                 , B.EQU_NAME AS EQUIP_NAME
                 , A.SELECT_BASIS
                 , A.REMARK
            FROM              S_WRE900T_KD A WITH (NOLOCK)
            --20191204 사이트 테이블(S_EQM100T_KD)에서 정규테이블(EQU200T)로 변경
                   INNER JOIN EQU200T B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                                     AND B.DIV_CODE     = A.DIV_CODE
                                                     AND B.EQU_CODE     = A.EQUIP_CODE
            WHERE  A.COMP_CODE          = @COMP_CODE
              AND  A.DIV_CODE           = #{DIV_CODE}
              AND  A.WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
              AND  A.PROG_WORK_CODE     = #{PROG_WORK_CODE}
            ORDER  BY A.WORK_SHOP_CODE, A.PROG_WORK_CODE, A.EQUIP_CODE
        END
    </select>

    <insert id="s_pbs071ukrv_kdService.insertDetail4" parameterType="Map">    /* 공정/설비 추가 */
        INSERT INTO S_WRE900T_KD
             (    DIV_CODE
                , ITEM_CODE
                , WORK_SHOP_CODE
                , PROG_WORK_CODE
                , EQUIP_CODE
                , SELECT_BASIS
                , REMARK
                , UPDATE_DB_USER
                , UPDATE_DB_TIME
                , COMP_CODE
             )
        VALUES
             (    #{DIV_CODE}
                , #{ITEM_CODE}
                , #{WORK_SHOP_CODE}
                , #{PROG_WORK_CODE}
                , #{EQUIP_CODE}
                , #{SELECT_BASIS}
                , #{REMARK}
                , #{S_USER_ID}
                , GETDATE()
                , #{S_COMP_CODE}
             )
    </insert>

    <update id="s_pbs071ukrv_kdService.updateDetail4" parameterType="Map">      /* 공정/설비 수정 */
        UPDATE S_WRE900T_KD
           SET EQUIP_CODE       = #{EQUIP_CODE}
              <if test="@foren.Ognl@isNotEmpty('SELECT_BASIS')">
              ,SELECT_BASIS     = #{SELECT_BASIS}
               </if>
              <if test="@foren.Ognl@isNotEmpty('REMARK')">
              ,REMARK           = #{REMARK}
              </if>
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE WORK_SHOP_CODE   = #{WORK_SHOP_CODE}
           AND PROG_WORK_CODE   = #{PROG_WORK_CODE}
           AND EQUIP_CODE       = #{EQUIP_CODE}
           AND DIV_CODE         = #{DIV_CODE}
           AND ITEM_CODE        = #{ITEM_CODE}
           AND COMP_CODE        = #{S_COMP_CODE}
    </update>

    <delete id="s_pbs071ukrv_kdService.deleteDetail4" parameterType="Map">      /* 공정/설비 삭제 */
        DELETE FROM S_WRE900T_KD
         WHERE WORK_SHOP_CODE   = #{WORK_SHOP_CODE}
           AND PROG_WORK_CODE   = #{PROG_WORK_CODE}
           AND EQUIP_CODE       = #{EQUIP_CODE}
           AND DIV_CODE         = #{DIV_CODE}
           AND ITEM_CODE        = #{ITEM_CODE}
           AND COMP_CODE        = #{S_COMP_CODE}
    </delete>


    <select id="s_pbs071ukrv_kdService.selectList5" parameterType="Map" resultType="rMap">    /* 공정/금형 */
        BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON

            DECLARE @COMP_CODE   NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(100) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

            SET @COMP_CODE  = #{S_COMP_CODE}
            SET @UserId     = #{S_USER_ID}
            SET @LangType   = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @COMP_CODE
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT
                   A.COMP_CODE
                 , A.DIV_CODE
                 , A.ITEM_CODE
                 , A.WORK_SHOP_CODE
                 , A.PROG_WORK_CODE
                 , A.MOLD_CODE
                 , C.EQU_NAME AS MOLD_NAME
                 , A.SELECT_BASIS
                 , A.REMARK
            FROM              S_WRM900T_KD A WITH (NOLOCK)
                   INNER JOIN BSA230T       B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                                           AND B.TYPE_LEVEL     = A.DIV_CODE
                                                           AND B.TREE_CODE      = A.WORK_SHOP_CODE
            --20191204 사이트 테이블(S_MOM100T_KD)에서 정규테이블(EQU200T)로 변경
                   LEFT  JOIN EQU200T  C WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
                                                      AND C.DIV_CODE      = A.DIV_CODE
                                                      AND C.EQU_CODE      = A.MOLD_CODE
            WHERE  A.COMP_CODE          = @COMP_CODE
              AND  A.DIV_CODE           = #{DIV_CODE}
              AND  A.WORK_SHOP_CODE     = #{WORK_SHOP_CODE}
              AND  A.PROG_WORK_CODE     = #{PROG_WORK_CODE}
              AND  A.ITEM_CODE          = #{ITEM_CODE}
            ORDER  BY A.WORK_SHOP_CODE, A.PROG_WORK_CODE, A.MOLD_CODE
        END
    </select>

    <insert id="s_pbs071ukrv_kdService.insertDetail5" parameterType="Map">    /* 공정/금형 추가 */
        INSERT INTO S_WRM900T_KD
             (    DIV_CODE
                , ITEM_CODE
                , WORK_SHOP_CODE
                , PROG_WORK_CODE
                , MOLD_CODE
                , SELECT_BASIS
                , REMARK
                , UPDATE_DB_USER
                , UPDATE_DB_TIME
                , COMP_CODE
             )
        VALUES
             (    #{DIV_CODE}
                , #{ITEM_CODE}
                , #{WORK_SHOP_CODE}
                , #{PROG_WORK_CODE}
                , #{MOLD_CODE}
                , #{SELECT_BASIS}
                , #{REMARK}
                , #{S_USER_ID}
                , GETDATE()
                , #{S_COMP_CODE}
             )
    </insert>

    <update id="s_pbs071ukrv_kdService.updateDetail5" parameterType="Map">      /* 공정/금형 수정 */
        UPDATE S_WRM900T_KD
           SET MOLD_CODE        = #{MOLD_CODE}
              <if test="@foren.Ognl@isNotEmpty('SELECT_BASIS')">
              ,SELECT_BASIS     = #{SELECT_BASIS}
               </if>
              <if test="@foren.Ognl@isNotEmpty('REMARK')">
              ,REMARK           = #{REMARK}
              </if>
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE WORK_SHOP_CODE   = #{WORK_SHOP_CODE}
           AND PROG_WORK_CODE   = #{PROG_WORK_CODE}
           AND MOLD_CODE        = #{MOLD_CODE}
           AND DIV_CODE         = #{DIV_CODE}
           AND ITEM_CODE        = #{ITEM_CODE}
           AND COMP_CODE        = #{S_COMP_CODE}
    </update>

    <delete id="s_pbs071ukrv_kdService.deleteDetail5" parameterType="Map">      /* 공정/금형 삭제 */
        DELETE FROM S_WRM900T_KD
         WHERE WORK_SHOP_CODE   = #{WORK_SHOP_CODE}
           AND PROG_WORK_CODE   = #{PROG_WORK_CODE}
           AND MOLD_CODE        = #{MOLD_CODE}
           AND DIV_CODE         = #{DIV_CODE}
           AND ITEM_CODE        = #{ITEM_CODE}
           AND COMP_CODE        = #{S_COMP_CODE}
    </delete>
</mapper>