<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pmp201ukrv_kdServiceImpl">
	<select id="s_pmp201ukrv_kdServiceImpl.selectAgreePrsn" parameterType="Map" resultType="rMap">
	--pmp200ukrv.Cpmp200ukrv[fnGetAgreePrsn] Query01
	DECLARE     @COMP_CODE          NVARCHAR(08)    -- (필수) 법인코드
	          , @OUTSTOCK_REQ_PRSN  NVARCHAR(08)    -- (필수) 출고요청담당

	SET     @COMP_CODE          = #{S_COMP_CODE}
	SET     @OUTSTOCK_REQ_PRSN  = #{OUT_REQ_PRSN}

	SELECT A.SUB_CODE   AS OUTSTOCK_REQ_PRSN
	     , A.CODE_NAME	AS OUTSTOCK_REQ_NAME
	     , B.USER_ID    AS AGREE_PRSN
	     , B.USER_NAME  AS AGREE_NAME
	FROM              BSA100T A WITH (NOLOCK)
	       INNER JOIN BSA300T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                         AND B.USER_ID   = A.REF_CODE1
	WHERE  A.COMP_CODE = @COMP_CODE
	AND    A.MAIN_CODE = 'P119'
	AND    A.SUB_CODE  = @OUTSTOCK_REQ_PRSN
	</select>

    <select id="s_pmp201ukrv_kdServiceImpl.selectGwData" parameterType="Map" resultType="rMap">
        SELECT  GW_FLAG
          FROM  PMP300T    A WITH (NOLOCK)
         WHERE  A.COMP_CODE      = #{S_COMP_CODE}
           AND  A.OUTSTOCK_NUM   = #{OUTSTOCK_NUM}
    </select>

    <select id="s_pmp201ukrv_kdServiceImpl.makeDraftNum" parameterType="Map" resultType="rMap">
       UPDATE PMP300T
          SET DRAFT_NO        = #{DRAFT_NO},
              UPDATE_DB_USER  = #{S_USER_ID},
              UPDATE_DB_TIME  = GETDATE()
        WHERE COMP_CODE       = #{S_COMP_CODE}
          AND DIV_CODE        = #{DIV_CODE}
          AND OUTSTOCK_NUM    = #{OUTSTOCK_NUM}
    </select>

    <select id="s_pmp201ukrv_kdServiceImpl.selectDraftNo" parameterType="Map" resultType="rMap">
        SELECT  DRAFT_NO
          FROM  PMP300T    A WITH (NOLOCK)
         WHERE  A.COMP_CODE      = #{S_COMP_CODE}
           AND  A.OUTSTOCK_NUM   = #{OUTSTOCK_NUM}
    </select>



	<select id="s_pmp201ukrv_kdServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
	/* pmp200ukrv.Cpmp200ukrv[fnPmp200QStd] Query01 */
	BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
		          , @UserId         NVARCHAR(100) /* 사용자ID                */
		          , @LangType       NVARCHAR(2)  /* 언어구분                */
		          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
		          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
	SELECT
	       A.COMP_CODE
	     , A.DIV_CODE
	     , A.ITEM_CODE
			         , (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
			                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
			                                     ELSE C1.ITEM_NAME
			            END)                                     AS ITEM_NAME
	     , C1.SPEC
	     , A.WORK_SHOP_CODE
	     , C1.STOCK_UNIT
	     , A.PATH_CODE
	     , A.OUTSTOCK_REQ_Q
	     , A.OUTSTOCK_Q
	     , A.OUTSTOCK_REQ_DATE
	     , A.CONTROL_STATUS
	     , A.REF_WKORD_NUM
	     , A.REMARK
	     , A.PROJECT_NO
	     , A.OUTSTOCK_NUM
	     , A.OUTSTOCK_REQ_PRSN
	     , A.AGREE_STATUS
	     , A.AGREE_PRSN
	     , A.AGREE_DATE
	     , ISNULL(B.COUNT_WKORD_NUM, '') AS COUNT_WKORD_NUM
	     , ''               AS UPDATE_DB_USER
	     , ''               AS UPDATE_DB_TIME
	     ,(SELECT PAB_STOCK_Q  FROM FNGETPABSTOCK(A.COMP_CODE, A.DIV_CODE, A.OUTSTOCK_REQ_DATE, A.ITEM_CODE, A.ITEM_CODE, '4')) AS PAB_STOCK_Q
        , A.GW_FLAG           /* 그룹웨어 기안여부 */
        , (SELECT CODE_NAME FROM BSA100T WHERE COMP_CODE = A.COMP_CODE AND MAIN_CODE = 'A134' AND REF_CODE1 = A.GW_FLAG) AS GW_TEXT
         , A.GW_DOC           /* 그룹웨어 기안여부 */
         , A.DRAFT_NO         /* 그룹웨어 기안여부 */

		 , D.PROD_ITEM_CODE	AS WKORD_ITEM_CODE
		 , D.PROD_ITEM_NAME AS TOP_ITEM_NAME
		 , D.PROD_SPEC		AS TOP_ITEM_SPEC
		 , D.LOT_NO			AS LOT_NO
      , ISNULL(NOT_OUT_Q,0) AS NOT_OUT_Q
	FROM              PMP300T A  WITH (NOLOCK)
	       LEFT  JOIN (
	                  SELECT COMP_CODE, DIV_CODE, WKORD_NUM, ITEM_CODE, PATH_CODE, OUTSTOCK_NUM
	                       , COUNT(WKORD_NUM) AS  COUNT_WKORD_NUM
	                  FROM   PMP200T WITH (NOLOCK)
	                  WHERE  COMP_CODE = @CompCode
	                  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	                  AND    DIV_CODE  = #{DIV_CODE}
	                  </if>
	                  GROUP  BY COMP_CODE, DIV_CODE, WKORD_NUM, ITEM_CODE, PATH_CODE, OUTSTOCK_NUM
	                  ) B ON B.COMP_CODE    = A.COMP_CODE
	                     AND B.DIV_CODE     = A.DIV_CODE
	                     AND B.WKORD_NUM    = A.REF_WKORD_NUM
	                     AND B.ITEM_CODE    = A.ITEM_CODE
	                     AND B.PATH_CODE    = A.PATH_CODE
	                     AND B.OUTSTOCK_NUM = A.OUTSTOCK_NUM
	       INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                          AND C1.ITEM_CODE = A.ITEM_CODE

  			INNER JOIN (
    						SELECT X1.COMP_CODE, X1.DIV_CODE, X1.ITEM_CODE AS PROD_ITEM_CODE, X3.ITEM_NAME AS PROD_ITEM_NAME, X3.SPEC AS PROD_SPEC, X1.LOT_NO, X1.WKORD_NUM AS TOP_WKORD_NUM
    								, X2.WKORD_NUM AS CHILD_WKORD_NUM
    						FROM PMP100T X1 WITH (NOLOCK)
    								 INNER JOIN (
            											SELECT S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE, S1.LOT_NO, S1.WKORD_NUM, S1.TOP_WKORD_NUM
            											FROM PMP100T S1				      WITH(NOLOCK)
            													 INNER JOIN PMP300T S2  WITH(NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.DIV_CODE=S2.DIV_CODE AND S1.WKORD_NUM=S2.REF_WKORD_NUM
            											WHERE S1.COMP_CODE= #{S_COMP_CODE}
            											AND	  S1.DIV_CODE = #{DIV_CODE}
            											GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE, S1.LOT_NO, S1.WKORD_NUM, S1.TOP_WKORD_NUM
    											      ) X2 ON X1.COMP_CODE=X2.COMP_CODE AND X1.DIV_CODE=X2.DIV_CODE AND X1.WKORD_NUM=X2.TOP_WKORD_NUM
    								 INNER JOIN BPR100T X3 WITH (NOLOCK) ON X1.COMP_CODE=X3.COMP_CODE AND X1.ITEM_CODE=X3.ITEM_CODE
                WHERE X1.COMP_CODE= #{S_COMP_CODE}
    						AND	  X1.DIV_CODE = #{DIV_CODE}  								
    						GROUP BY X1.COMP_CODE, X1.DIV_CODE, X1.ITEM_CODE, X3.ITEM_NAME, X1.LOT_NO, X1.WKORD_NUM, X3.SPEC, X2.WKORD_NUM
    		
    			) D ON A.COMP_CODE=D.COMP_CODE AND A.DIV_CODE=D.DIV_CODE AND A.REF_WKORD_NUM=D.CHILD_WKORD_NUM
    			
					LEFT  JOIN (
								SELECT COMP_CODE, DIV_CODE, ITEM_CODE, SUM((OUTSTOCK_REQ_Q-ISNULL(CANCEL_Q,0))-OUTSTOCK_Q) AS NOT_OUT_Q
								FROM PMP300T WITH (NOLOCK)
								WHERE COMP_CODE=#{S_COMP_CODE}
								AND DIV_CODE=#{DIV_CODE}
								AND CONTROL_STATUS <![CDATA[<]]> '8'
								--AND ISNULL(GW_FLAG,'') = '3'
								AND OUTSTOCK_REQ_Q - OUTSTOCK_Q <![CDATA[>]]> 0
								GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE					
					) M5 ON B.COMP_CODE=M5.COMP_CODE AND B.DIV_CODE=M5.DIV_CODE AND B.ITEM_CODE=M5.ITEM_CODE
					    			
    WHERE A.COMP_CODE =  #{S_COMP_CODE}			                                          

		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		AND    A.DIV_CODE       = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
		AND    A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(OUTSTOCK_NUM)">
		AND    A.OUTSTOCK_NUM   = #{OUTSTOCK_NUM}
		</if>
		ORDER BY A.ITEM_CODE ASC
		SET ARITHABORT OFF
	    SET NOCOUNT OFF
	END

	</select>

	<select id="s_pmp201ukrv_kdServiceImpl.selectOrderNumMaster" parameterType="Map" resultType="rMap">
        /* s_pmp201ukrv_kdServiceImpl.selectOrderNumMaster */

        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @COMP_CODE      NVARCHAR(08)    /* 법인코드  */
                  , @USER_ID        NVARCHAR(100)    /* 사용자ID */
                  , @RefItem        NVARCHAR(01)

            SET @COMP_CODE  = #{S_COMP_CODE}
            SET @USER_ID    = #{S_USER_ID}

            /* 명칭 참조 유형 */
            SELECT  TOP 1 @RefItem = REF_ITEM
            FROM    BSA300T WITH (NOLOCK)
            WHERE   COMP_CODE = @COMP_CODE
            AND     USER_ID = @USER_ID

            SET @RefItem = ISNULL(@RefItem, N'0')

            /*  조회  */
            SELECT  C.DIV_CODE
                 ,  C.WORK_SHOP_CODE
                 ,  '' AS SEQ
                 ,  C.OUTSTOCK_NUM
                 ,  C.REF_WKORD_NUM
                 ,  A.ITEM_CODE
                 ,  CASE WHEN @RefItem = '1'
                         THEN ISNULL(A.ITEM_NAME1, '')
                         WHEN @RefItem = '2'
                         THEN ISNULL(A.ITEM_NAME2, '')
                         ELSE ISNULL(A.ITEM_NAME, '')
                    END                                                           AS ITEM_NAME
                 ,  A.SPEC
                 ,  A.STOCK_UNIT
                 ,  '' ALLOCK_Q
                 ,  C.OUTSTOCK_REQ_Q
                 ,  C.OUTSTOCK_Q
                 ,  ISNULL(C.OUTSTOCK_REQ_Q, 0) - ISNULL(C.OUTSTOCK_Q, 0) AS ISSUE_QTY
                 ,  CAST(C.OUTSTOCK_REQ_DATE AS DATETIME) OUTSTOCK_REQ_DATE
                 ,  C.LOT_NO
                 ,  C.REMARK
                 ,  C.PROJECT_NO
                 ,  C.PJT_CODE
                 ,  ISNULL(C.GW_FLAG, 'N') AS GW_FLAG   -- wb17
            FROM               BPR100T AS A WITH (NOLOCK)
                    INNER JOIN PMP300T AS C WITH (NOLOCK) ON A.COMP_CODE       = C.COMP_CODE
                                                         AND A.ITEM_CODE       = C.ITEM_CODE
                                                         AND C.CONTROL_STATUS != '8'
            WHERE   A.COMP_CODE          = @COMP_CODE
            /* 조회조건 */
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND     C.DIV_CODE           = #{DIV_CODE}                   /*사업장*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
            AND     C.WORK_SHOP_CODE     = #{WORK_SHOP_CODE}             /*작업장*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_NUM)">
            AND     C.OUTSTOCK_NUM    LIKE #{OUTSTOCK_NUM} +'%'       /*출고요청번호*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE_FR)">
            AND     C.OUTSTOCK_REQ_DATE &gt;= #{OUTSTOCK_REQ_DATE_FR}   /*요청일 FR*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(OUTSTOCK_REQ_DATE_TO)">
            AND     C.OUTSTOCK_REQ_DATE &lt;= #{OUTSTOCK_REQ_DATE_TO}   /*요청일 TO*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
            AND     C.ITEM_CODE       LIKE #{ITEM_CODE} +'%'          /*품목코드*/
            </if>
            <if test="@foren.Ognl@isNotEmpty(REF_WKORD_NUM)">
            AND     C.REF_WKORD_NUM   LIKE #{REF_WKORD_NUM} +'%'          /*작업지시번호*/
            </if>
            <if test="IS_ISSUE == &quot;on&quot;">
            AND     ISNULL(C.OUTSTOCK_REQ_Q, 0) - ISNULL(C.OUTSTOCK_Q, 0) <![CDATA[>]]> 0   /*미출고*/
            </if>

            ORDER   BY OUTSTOCK_NUM

            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>

	<select id="s_pmp201ukrv_kdServiceImpl.selectEstiList" parameterType="Map" resultType="rMap">
	/* pmp200ukrv.Cpmp200ukrv[fnPmp100QRef] Query01  */
	BEGIN
		SET NOCOUNT ON
	  SET ARITHABORT ON

		DECLARE @CompCode	    NVARCHAR(08) /* 법인코드				*/
		      , @UserId		    NVARCHAR(100) /* 사용자ID				*/
		      , @LangType	    NVARCHAR(2)  /* 언어구분				*/
		      , @RefItem	    NVARCHAR(01) /* 명칭 참조 유형		    */
		      , @DateFormat		NVARCHAR(10) /* 날짜 포맷 유형 설정     */

		SET @CompCode = #{S_COMP_CODE}
		SET @UserId   = #{S_USER_ID}
		SET @LangType = #{S_LANG_CODE}

		/* 명칭 참조 유형 */
		SELECT TOP 1 @RefItem = REF_ITEM
		  FROM BSA300T WITH (NOLOCK)
		 WHERE USER_ID = @UserId

		SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = @CompCode
		   AND MAIN_CODE = N'B044'
		   AND REF_CODE1 = N'Y'

		 SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		 /* 데이터 조회 */

		--출고요청일괄등록 - 작업지시참조 팝업 SQL
		--작업지시참조 SQL
    		
    SELECT	  X1.PROD_ITEM_CODE AS ITEM_CODE
    		    , X2.ITEM_NAME
    		    , X2.SPEC
    		    , X2.STOCK_UNIT
    		    , X1.WKORD_Q
    		    , X1.PRODT_START_DATE
    		    , X1.PRODT_END_DATE
    		    , X1.WKORD_NUM
    		    , X1.LOT_NO
    		    , X1.REMARK
    		    , X1.PROJECT_NO
    		    , X1.PATH_CODE
        		, X2.ITEM_NAME AS TOP_ITEM_NAME
        		, X2.SPEC  AS TOP_ITEM_SPEC    
    FROM	(
        		SELECT A.COMP_CODE, A.DIV_CODE
        				, A.TOP_WKORD_NUM AS WKORD_NUM
        				, (SELECT TOP 1 ITEM_CODE FROM PMP100T WHERE COMP_CODE=A.COMP_CODE AND DIV_CODE=A.DIV_CODE AND WKORD_NUM=A.TOP_WKORD_NUM) AS PROD_ITEM_CODE
        				, A.LOT_NO, A.PROJECT_NO, A.REMARK, B.PATH_CODE, A.WKORD_Q, A.PRODT_START_DATE, A.PRODT_END_DATE, A.WORK_SHOP_CODE
        
        		FROM PMP100TV1 A WITH (NOLOCK)
          			 INNER JOIN PMP200T B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.WKORD_NUM=B.WKORD_NUM
          			 INNER JOIN BPR200T C WITH (NOLOCK) ON B.COMP_CODE=C.COMP_CODE AND B.DIV_CODE=C.DIV_CODE AND B.ITEM_CODE=C.ITEM_CODE
        		WHERE A.COMP_CODE=@CompCode
        		AND A.DIV_CODE=#{DIV_CODE}
      		<if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE_FR)">
      			AND		A.PRODT_START_DATE <![CDATA[>=]]> #{PRODT_START_DATE_FR}
      		</if>
      		<if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE_TO)">
      			AND		A.PRODT_START_DATE <![CDATA[<=]]>  #{PRODT_START_DATE_TO}
      		</if>
      		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
      			AND		A.ITEM_CODE  LIKE #{ITEM_CODE} + '%'
      		</if>
--        		AND C.ITEM_ACCOUNT NOT IN ('10','20')
        		AND A.WKORD_NUM=A.TOP_WKORD_NUM /* 제품정보만 표시 */
      		<if test="@foren.Ognl@isNotEmpty(WORK_SHOP_CODE)">
      		 	AND    	A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
      		</if>
--        		AND B.ALLOCK_Q - B.OUTSTOCK_REQ_Q <![CDATA[>]]> 0
    				AND EXISTS (
    								SELECT TOP 1 1
    								FROM PMP100T S1 WITH (NOLOCK)
    									 INNER JOIN PMP200T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.DIV_CODE=S2.DIV_CODE AND S1.WKORD_NUM=S2.WKORD_NUM AND S1.WORK_SHOP_CODE=S2.WORK_SHOP_CODE
    								WHERE S1.COMP_CODE=A.COMP_CODE
    								AND S1.DIV_CODE=A.DIV_CODE
    								AND S2.OUT_METH='1'
    								AND S1.LINE_END_YN='Y'
    								AND S1.TOP_WKORD_NUM = A.TOP_WKORD_NUM
    								AND S2.ALLOCK_Q - S2.OUTSTOCK_REQ_Q <![CDATA[>]]> 0				
    				
    				)
				        		
        		GROUP BY A.COMP_CODE, A.DIV_CODE, A.TOP_WKORD_NUM
        				, A.LOT_NO, A.PROJECT_NO, A.REMARK, B.PATH_CODE, A.WKORD_Q, A.PRODT_START_DATE, A.PRODT_END_DATE, A.WORK_SHOP_CODE
    		) X1
    		LEFT JOIN BPR100T X2 ON X1.COMP_CODE=X2.COMP_CODE AND X1.PROD_ITEM_CODE=X2.ITEM_CODE
    WHERE	X1.COMP_CODE=@CompCode
    AND		X1.DIV_CODE=#{DIV_CODE}
		
    SET NOCOUNT OFF
    SET ARITHABORT OFF
	END
	</select>

	<select id="s_pmp201ukrv_kdServiceImpl.orderApply" parameterType="Map" resultType="rMap">
			--작업지시 참조후 조회되는 SQL
			DECLARE     @COMP_CODE      NVARCHAR(08)
		         		   , @DIV_CODE       NVARCHAR(08)
		         		   , @WORK_SHOP_CODE NVARCHAR(08)
		          		   , @USER_ID        NVARCHAR(100)

			SET     @COMP_CODE      = #{S_COMP_CODE}
			SET     @DIV_CODE       = #{DIV_CODE}
			SET     @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
			SET     @USER_ID        = #{S_USER_ID}



			SELECT	A.COMP_CODE, A.DIV_CODE, B.ITEM_CODE, M2.ITEM_NAME, M2.SPEC, M2.STOCK_UNIT
					, B.ALLOCK_Q AS OUTSTOCK_REQ_Q		--출고요청량
					, A.LOT_NO							--LOT NO
					, ISNULL(M3.OUTSTOCK_Q, 0) AS OUTSTOCK_Q					--출고량
					, ISNULL(M4.GOOD_STOCK_Q,0) AS PAB_STOCK_Q --가용재고
					, '2'	AS CONTROL_STATUS			--진행상태
					, B.WKORD_NUM						--작지번호
					, A.ITEM_CODE AS WKORD_ITEM_CODE						--작지품목
					, M22.OEM_ITEM_CODE	--작지품목 품번
					, A.PROJECT_NO						--프로젝트번호
					, A.REMARK							--비고
					, B.PATH_CODE
					, '' AS GW_TEXT
					, '' AS GW_FLAG -- 기안여부
					, '' AS GW_DOC --기안문서번호
					, '' AS DRAFT_NO --기안번호
					, ISNULL(NOT_OUT_Q,0) AS NOT_OUT_Q
			FROM	PMP100T A WITH (NOLOCK)
					INNER JOIN PMP200T B  WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.WKORD_NUM=B.WKORD_NUM
					INNER JOIN BPR200T M1 WITH (NOLOCK) ON B.COMP_CODE=M1.COMP_CODE AND B.DIV_CODE=M1.DIV_CODE AND B.ITEM_CODE=M1.ITEM_CODE
					INNER JOIN BPR100T M2 WITH (NOLOCK) ON B.COMP_CODE=M2.COMP_CODE AND B.ITEM_CODE=M2.ITEM_CODE
					INNER JOIN BPR100T M22 WITH (NOLOCK) ON A.COMP_CODE=M22.COMP_CODE AND A.ITEM_CODE=M22.ITEM_CODE
					LEFT  JOIN (
								SELECT COMP_CODE, DIV_CODE, ITEM_CODE, WORK_SHOP_CODE, REF_WKORD_NUM, SUM(OUTSTOCK_REQ_Q) AS OUTSTOCK_REQ_Q, SUM(OUTSTOCK_Q) AS OUTSTOCK_Q
								FROM PMP300T WITH (NOLOCK)
								WHERE COMP_CODE= @COMP_CODE
								AND DIV_CODE= @DIV_CODE
								GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, WORK_SHOP_CODE, REF_WKORD_NUM
							   ) M3 ON B.COMP_CODE=M3.COMP_CODE AND B.DIV_CODE=M3.DIV_CODE AND B.WKORD_NUM=M3.REF_WKORD_NUM AND B.ITEM_CODE=M3.ITEM_CODE

					LEFT JOIN (
								SELECT S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE, SUM(S1.GOOD_STOCK_Q) AS GOOD_STOCK_Q
								FROM BIV100T S1 WITH (NOLOCK)
									 INNER JOIN BSA220T S2 WITH (NOLOCK) ON S1.COMP_CODE=S2.COMP_CODE AND S1.DIV_CODE=S2.TYPE_LEVEL AND S1.WH_CODE=S2.TREE_CODE
								WHERE S1.COMP_CODE= @COMP_CODE
								AND S1.DIV_CODE= @DIV_CODE
								AND S2.PABSTOCK_YN='Y'
								GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.ITEM_CODE
							  ) M4 ON B.COMP_CODE=M4.COMP_CODE AND B.DIV_CODE=M4.DIV_CODE AND B.ITEM_CODE=M4.ITEM_CODE

					LEFT  JOIN (
								SELECT COMP_CODE, DIV_CODE, ITEM_CODE, SUM((OUTSTOCK_REQ_Q-ISNULL(CANCEL_Q,0))-OUTSTOCK_Q) AS NOT_OUT_Q
								FROM PMP300T WITH (NOLOCK)
								WHERE COMP_CODE=@COMP_CODE
								AND DIV_CODE=@DIV_CODE
								AND CONTROL_STATUS <![CDATA[<]]> '8'
								--AND ISNULL(GW_FLAG,'') = '3'
								AND OUTSTOCK_REQ_Q - OUTSTOCK_Q <![CDATA[>]]> 0
								GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE					
					) M5 ON B.COMP_CODE=M5.COMP_CODE AND B.DIV_CODE=M5.DIV_CODE AND B.ITEM_CODE=M5.ITEM_CODE							  
			WHERE	A.COMP_CODE= @COMP_CODE
			AND		A.DIV_CODE= @DIV_CODE
			AND		A.TOP_WKORD_NUM=#{REF_WKORD_NUM}
			AND		M1.SUPPLY_TYPE <![CDATA[<>]]> '2'
			AND		B.ALLOCK_Q - ISNULL(M3.OUTSTOCK_REQ_Q,0) <![CDATA[>]]> 0
			AND		M1.ITEM_ACCOUNT NOT IN ('10')
			GROUP BY A.COMP_CODE, A.DIV_CODE, B.ITEM_CODE, M2.ITEM_NAME, M2.SPEC, M2.STOCK_UNIT, B.ALLOCK_Q, B.WKORD_NUM
					, A.ITEM_CODE, A.LOT_NO, ISNULL(M3.OUTSTOCK_Q, 0), ISNULL(M4.GOOD_STOCK_Q,0)
					, A.PROJECT_NO, A.REMARK, B.PATH_CODE, ISNULL(NOT_OUT_Q,0)
					, M22.OEM_ITEM_CODE

	</select>

	<select id="s_pmp201ukrv_kdServiceImpl.orderApply2" parameterType="Map" resultType="rMap">
		--pmp200ukrv.Cpmp200ukrv[fnPmp200QSt1] Query02
		DECLARE     @COMP_CODE      NVARCHAR(08)
		          , @DIV_CODE       NVARCHAR(08)
		          , @WORK_SHOP_CODE NVARCHAR(08)
		          , @ITEM_CODE      NVARCHAR(20)
		          , @PATH_CODE      NVARCHAR(20)
		          , @USER_ID        NVARCHAR(100)

		SET     @COMP_CODE      = #{S_COMP_CODE}
		SET     @DIV_CODE       = #{DIV_CODE}
		SET     @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		SET     @ITEM_CODE      = #{ITEM_CODE}
		SET     @PATH_CODE      = #{PATH_CODE}
		SET     @USER_ID        = #{S_USER_ID}

		SELECT A.WKORD_NUM
		     , A.ITEM_CODE
		     , uniLITE.fnItemNameComp(A.COMP_CODE, @USER_ID, A.ITEM_CODE) AS ITEM_NAME
		     , C1.SPEC
		     , C1.STOCK_UNIT
		     , B.ALLOCK_Q
		     , B.OUTSTOCK_REQ_Q
		     , A.WKORD_Q / A.PROG_UNIT_Q AS WKORD_Q
		     , A.PRODT_Q
		     , A.REMARK
		     , A.PROJECT_NO
		     , A.LOT_NO
		FROM              PMP100TV1 A WITH (NOLOCK)
		       INNER JOIN PMP200T   B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
		                                           AND B.DIV_CODE   = A.DIV_CODE
		                                           AND B.WKORD_NUM  = A.WKORD_NUM
		                                           AND B.OUT_METH   = '1'
		                                           AND B.ITEM_CODE  = @ITEM_CODE
		       INNER JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
		                                           AND C1.ITEM_CODE = A.ITEM_CODE
		WHERE  A.COMP_CODE   = @COMP_CODE
		AND    A.DIV_CODE    = @DIV_CODE
		AND    A.WKORD_NUM  IN ( #{REF_WKORD_NUM} )
		AND    A.LINE_END_YN = 'Y'
		AND    A.WORK_END_YN = 'N'
		ORDER  BY A.WKORD_NUM ASC
	</select>

	<insert id="s_pmp201ukrv_kdServiceImpl.insertLogMaster" parameterType="Map">
		/*s_pmp201ukrv_kdServiceImpl.insertLogMaster*/

DECLARE @AGREE_STATUS NVARCHAR(10)

   --출고요청 자동 여부
   SELECT @AGREE_STATUS = CASE SUB_CODE WHEN 'Y' THEN '2' ELSE '1' END	--1:미승인, 2:승인
   FROM BSA100T
   WHERE COMP_CODE=#{S_COMP_CODE}
   AND MAIN_CODE='P109'
   AND REF_CODE1='Y'

		INSERT INTO L_PMP300T
             ( KEY_VALUE
             , OPR_FLAG
             , COMP_CODE
             , DIV_CODE
             , OUTSTOCK_NUM
             , ITEM_CODE
             , REF_WKORD_NUM
             , PATH_CODE
             , WORK_SHOP_CODE
             , OUTSTOCK_REQ_DATE
             , OUTSTOCK_REQ_Q
             , OUTSTOCK_Q
             , CONTROL_STATUS
             , CANCEL_Q
             , PROJECT_NO
             , LOT_NO
             , REMARK
             , OUTSTOCK_REQ_PRSN
             , AGREE_STATUS
             , AGREE_PRSN
             , AGREE_DATE
             , UPDATE_DB_USER
             , UPDATE_DB_TIME  )
        VALUES
             ( #{KEY_VALUE}
             , #{OPR_FLAG}
             , #{S_COMP_CODE}
             , #{S_DIV_CODE}
             , #{OUTSTOCK_NUM}
             , #{ITEM_CODE}
             , #{REF_WKORD_NUM}
             , #{PATH_CODE}
             , #{WORK_SHOP_CODE}
             , #{OUTSTOCK_REQ_DATE}
             , #{OUTSTOCK_REQ_Q}
             , #{OUTSTOCK_Q}
             , #{CONTROL_STATUS}
             , #{CANCEL_Q}
             , #{PROJECT_NO}
             , #{LOT_NO}
             , #{REMARK}
             , #{OUTSTOCK_REQ_PRSN}
             , @AGREE_STATUS
             , #{AGREE_PRSN}
             , #{AGREE_DATE}
             , #{S_USER_ID}
             , GETDATE()
            )
	</insert>

	<update id="s_pmp201ukrv_kdServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
        {call uniLITE.USP_PRODT_Pmp200ukr (
            #{KeyValue,         mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{OUTSTOCK_NUM,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ErrorDesc,        mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>
</mapper>
