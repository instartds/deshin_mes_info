<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_mre101ukrv_kdServiceImpl">
    <select id="s_mre101ukrv_kdServiceImpl.fnExchgRateO" parameterType="Map" resultType="rMap">
        --zfa_popupZ.fnExchgRateO
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @COMP_CODE              NVARCHAR(20)        --(필수) 법인코드
                  , @AC_DATE                NVARCHAR(20)        --(필수) 기준일자/기준월
                  , @MONEY_UNIT             NVARCHAR(20)        --(필수) 화폐단위

            SET @COMP_CODE       = #{S_COMP_CODE}
            SET @AC_DATE         = #{AC_DATE}
            SET @MONEY_UNIT      = #{MONEY_UNIT}

            SELECT CASE WHEN A.EXCHG_BASE = '1' THEN ISNULL(B.BASE_EXCHG, 1)
                        WHEN A.EXCHG_BASE = '2' THEN ISNULL(C.BASE_EXCHG, 1)
                                                ELSE 1
                    END AS BASE_EXCHG
              FROM           ABA100T AS A WITH(NOLOCK)
                   LEFT JOIN (
                              SELECT B.COMP_CODE
                                   , B.BASE_EXCHG
                                FROM BCM510T AS B WITH (NOLOCK)
                               WHERE B.COMP_CODE  = @COMP_CODE
                                 AND B.AC_DATE    = @AC_DATE
                                 AND B.MONEY_UNIT = @MONEY_UNIT
                             ) AS B ON B.COMP_CODE = A.COMP_CODE
                   LEFT JOIN (
                              SELECT C.COMP_CODE
                                   , C.BASE_EXCHG
                                FROM BCM510T AS C WITH (NOLOCK)
                               WHERE C.COMP_CODE  = @COMP_CODE
                                 AND C.AC_DATE    = SUBSTRING(@AC_DATE, 1, 6)
                                 AND C.MONEY_UNIT = @MONEY_UNIT
                             ) AS C ON C.COMP_CODE = A.COMP_CODE
             WHERE A.COMP_CODE = @COMP_CODE

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="s_mre101ukrv_kdServiceImpl.selectPersonDept" parameterType="Map" resultType="rMap">
        SELECT  H.DEPT_CODE
              , H.DEPT_NAME
        FROM                HUM100T   H  WITH (NOLOCK)
            WHERE   H.COMP_CODE        = #{S_COMP_CODE}
              AND   H.PERSON_NUMB      = #{PERSON_NUMB}
    </select>

    <select id="s_mre101ukrv_kdServiceImpl.selectGwData" parameterType="Map" resultType="rMap">
        SELECT  GW_FLAG
          FROM  MRE100T    A WITH (NOLOCK)
         WHERE  A.COMP_CODE    = #{S_COMP_CODE}
           AND  A.PO_REQ_NUM   = #{PO_REQ_NUM}
    </select>

    <select id="s_mre101ukrv_kdServiceImpl.makeDraftNum" parameterType="Map" resultType="rMap">
       UPDATE MRE100T
           SET DRAFT_NO        = #{DRAFT_NO},
               UPDATE_DB_USER  = #{S_USER_ID},
               UPDATE_DB_TIME  = GETDATE()
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = #{DIV_CODE}
           AND PO_REQ_NUM      = #{PO_REQ_NUM}
    </select>


    <select id="s_mre101ukrv_kdServiceImpl.selectOrderNumMasterList" parameterType="Map" resultType="rMap">
        /*s_mre101ukrv_kd.Cs_mre101ukrv_kd 구매계획의뢰번호 pop*/
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
                  , @UserId      NVARCHAR(100) /* 사용자ID    */
                  , @LangType    NVARCHAR(2)  /* 언어구분    */
                  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT  REPLACE(
                    REPLACE(
                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PO_REQ_DATE, 1, 4))
                                       , 'MM',   SUBSTRING(A.PO_REQ_DATE, 5, 2))
                                       , 'DD',   SUBSTRING(A.PO_REQ_DATE, 7, 2))        AS PO_REQ_DATE
                  , A.SUPPLY_TYPE                                                       AS SUPPLY_TYPE
                  , A.PO_REQ_NUM                                                        AS PO_REQ_NUM
                  , E.PO_SER_NO
                  , E.ITEM_CODE
                  , M1.ITEM_NAME
                  , E.CUSTOM_CODE
                  , M2.CUSTOM_NAME
                  , A.TREE_CODE                                                         AS DEPT_CODE
                  , F.TREE_NAME                                                         AS DEPT_NAME
                  , A.PERSON_NUMB                                                       AS PERSON_NUMB
                  , C.NAME                                                              AS PERSON_NAME
                  , A.MONEY_UNIT                                                        AS MONEY_UNIT
                  , A.EXCHG_RATE_O                                                      AS EXCHG_RATE_O
                  , A.DIV_CODE                                                          AS DIV_CODE
                  , D.COMP_NAME
                  , (SELECT TOP 1 CODE_NAME FROM BSA100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND MAIN_CODE='A134' AND REF_CODE1=A.GW_FLAG) AS GW_STATUS
                  , A.ITEM_ACCOUNT
                  , ISNULL(H2.TREE_NAME, ISNULL(G2.TREE_NAME,'')) AS REQ_DEPT_NAME	--의뢰부서
            FROM                MRE100T A WITH  (NOLOCK)
                    LEFT  JOIN  HUM100T C WITH  (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
                                                        AND C.PERSON_NUMB = A.PERSON_NUMB
                    LEFT  JOIN  BOR100T D WITH  (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
                    INNER JOIN  MRE110T E WITH  (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
                                                        AND E.DIV_CODE    = A.DIV_CODE
                                                        AND E.PO_REQ_NUM  = A.PO_REQ_NUM
                    LEFT  JOIN BSA210T F WITH   (NOLOCK) ON F.COMP_CODE   = A.COMP_CODE
                                                        AND F.TYPE_LEVEL  = A.DIV_CODE
                                                        AND F.TREE_CODE   = A.TREE_CODE
          					LEFT  JOIN BPR100T M1 WITH (NOLOCK) ON E.COMP_CODE=M1.COMP_CODE AND E.ITEM_CODE=M1.ITEM_CODE
          					LEFT  JOIN BCM100T M2 WITH (NOLOCK) ON E.COMP_CODE=M2.COMP_CODE AND E.CUSTOM_CODE=M2.CUSTOM_CODE
          					LEFT  JOIN S_MRE010T_KD	G WITH (NOLOCK) ON G.COMP_CODE=E.COMP_CODE AND G.DIV_CODE=E.DIV_CODE AND	G.ITEM_REQ_NUM=E.ITEM_REQ_NUM		--구매
                    LEFT  JOIN BSA210T G2 WITH   (NOLOCK) ON G2.COMP_CODE   = G.COMP_CODE AND G2.TYPE_LEVEL  = G.DIV_CODE AND G2.TREE_CODE   = G.TREE_CODE
          					LEFT  JOIN S_MRE090T_KD	H WITH (NOLOCK) ON H.COMP_CODE=E.COMP_CODE AND H.DIV_CODE=E.DIV_CODE AND	H.PRDT_REQ_NUM=E.PRDT_REQ_NUM		--생산
                    LEFT  JOIN BSA210T H2 WITH   (NOLOCK) ON H2.COMP_CODE   = H.COMP_CODE AND H2.TYPE_LEVEL  = H.DIV_CODE AND H2.TREE_CODE   = H.TREE_CODE

          WHERE   A.COMP_CODE       = @CompCode
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND   A.DIV_CODE        = #{DIV_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">
            AND   A.SUPPLY_TYPE     = #{SUPPLY_TYPE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PO_REQ_DATE_FR)">
            AND   A.PO_REQ_DATE    &gt;= #{PO_REQ_DATE_FR}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PO_REQ_DATE_TO)">
            AND   A.PO_REQ_DATE    &lt;= #{PO_REQ_DATE_TO}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
            AND   A.PERSON_NUMB     = #{PERSON_NUMB}
        </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
            AND    F.TREE_CODE     = #{DEPT_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PO_REQ_NUM)">
            AND   A.PO_REQ_NUM      LIKE '%' + #{PO_REQ_NUM} + '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
            AND   A.ITEM_ACCOUNT      = #{ITEM_ACCOUNT}
        </if>
/*
        GROUP BY  A.PO_REQ_DATE, A.SUPPLY_TYPE, A.PO_REQ_NUM
                , A.TREE_CODE, F.TREE_NAME,  A.PERSON_NUMB
                , C.NAME, A.MONEY_UNIT, A.EXCHG_RATE_O
                , A.DIV_CODE,  D.COMP_NAME
*/
        ORDER BY  A.PO_REQ_DATE, A.SUPPLY_TYPE, A.PO_REQ_NUM, E.PO_SER_NO

            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>

    <select id="s_mre101ukrv_kdServiceImpl.selectList" parameterType="Map" resultType="rMap">
        /* s_mre101ukrv_kd.Cs_mre101ukrv_kd[fnMre200QStd] Query01 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
                  , @UserId         NVARCHAR(100) /* 사용자ID                */
                  , @LangType       NVARCHAR(2)  /* 언어구분                */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT  A.COMP_CODE
                  , A.DIV_CODE
                  , A.PO_REQ_NUM
                  , A.PO_SER_NO
                  , A.ITEM_CODE
                  , ISNULL((CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
                          WHEN @RefItem = '2' THEN B.ITEM_NAME2
                          ELSE B.ITEM_NAME
                     END), A.ITEM_NAME)                                                                         AS ITEM_NAME
                  , ISNULL(B.SPEC, A.SPEC)																 AS SPEC
                  , B.STOCK_UNIT
                  , A.R_ORDER_Q
                  , A.PAB_STOCK_Q
                  , A.ORDER_Q
                  , A.ORDER_UNIT
                  , A.TRNS_RATE
                  , A.ORDER_UNIT_Q
                  , A.MONEY_UNIT
                  , A.EXCHG_RATE_O
                  , A.UNIT_PRICE_TYPE
                  , A.ORDER_P
                  , A.ORDER_O
                  , A.ORDER_LOC_P
                  , A.ORDER_LOC_O
                  , A.SUPPLY_TYPE
                  , A.CUSTOM_CODE
                  , C.CUSTOM_NAME                                                                               AS CUSTOM_NAME
                  , (CASE WHEN ISNULL(A.DVRY_DATE, '') = '' THEN ''
                          ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.DVRY_DATE, 1, 4))
                                                                  , 'MM'  , SUBSTRING(A.DVRY_DATE, 5, 2))
                                                                  , 'DD'  , SUBSTRING(A.DVRY_DATE, 7, 2))
                     END)                                                                                       AS DVRY_DATE
                  , A.WH_CODE
                  , (CASE WHEN ISNULL(A.PO_REQ_DATE, '') = '' THEN ''
                          ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PO_REQ_DATE, 1, 4))
                                                                  , 'MM'  , SUBSTRING(A.PO_REQ_DATE, 5, 2))
                                                                  , 'DD'  , SUBSTRING(A.PO_REQ_DATE, 7, 2))
                     END)                                                                                       AS PO_REQ_DATE
                  , A.INSPEC_FLAG
                  , A.REMARK
                  , A.ORDER_REQ_NUM
                  , A.MRP_CONTROL_NUM
                  , A.ORDER_YN
                  , A.PURCH_LD_TIME
                  , A.TERMPLAN_Q
                  , A.SAFE_STOCK_Q
                  , A.DELIVERY_REQ_DATE
                  , A.PRDT_REQ_NUM
                  , A.PRDT_REQ_SEQ
                  , A.ITEM_REQ_NUM
                  , A.ITEM_REQ_SEQ
                  , ISNULL(ISNULL(A.REQ_DEPT_CODE,H2.TREE_CODE), ISNULL(J2.TREE_CODE,''))                       AS REQ_DEPT_CODE
                  , ISNULL(ISNULL(H4.TREE_NAME,H2.TREE_NAME), ISNULL(J2.TREE_NAME,''))                          AS REQ_DEPT_NAME
                  , E.PERSON_NUMB
                  , G.NAME                                                                                      AS PERSON_NAME
                  , E.PO_REQ_DATE
                  , E.MONEY_UNIT
                  , E.EXCHG_RATE_O
                  , E.SUPPLY_TYPE
                  , E.GW_FLAG
                  , E.GW_DOC
                  , E.DRAFT_NO
                  , E.DOM_FORIGN
                  , D.PURCH_LDTIME
                  , A.REF_TYPE
                  , A.PLAN_YYYYMM
                  , A.PLAN_ORDER
            FROM               MRE110T A WITH (NOLOCK)
                    LEFT JOIN BPR100T B WITH (NOLOCK) ON B.COMP_CODE        = A.COMP_CODE
                                                      AND B.ITEM_CODE        = A.ITEM_CODE
                    LEFT JOIN  BCM100T C WITH  (NOLOCK) ON C.COMP_CODE       = A.COMP_CODE
                                                       AND C.CUSTOM_CODE     = A.CUSTOM_CODE
                    LEFT JOIN  BPR200T D WITH  (NOLOCK) ON D.COMP_CODE       = A.COMP_CODE
                                                       AND D.ITEM_CODE       = A.ITEM_CODE
                                                       AND D.DIV_CODE        = A.DIV_CODE
                    INNER JOIN  MRE100T E WITH (NOLOCK) ON E.COMP_CODE       = A.COMP_CODE
                                                       AND E.DIV_CODE        = A.DIV_CODE
                                                       AND E.PO_REQ_NUM      = A.PO_REQ_NUM
                    LEFT JOIN  BSA210T F WITH  (NOLOCK) ON F.COMP_CODE       = E.COMP_CODE
                                                       AND F.TREE_CODE       = E.TREE_CODE
                    LEFT JOIN  HUM100T G WITH  (NOLOCK) ON G.COMP_CODE       = E.COMP_CODE
                                                       AND G.PERSON_NUMB     = E.PERSON_NUMB
                                                       AND G.DIV_CODE        = E.DIV_CODE
                    LEFT  JOIN S_MRE010T_KD H WITH (NOLOCK) ON H.COMP_CODE   = A.COMP_CODE
                                                           AND H.DIV_CODE    = A.DIV_CODE
                                                           AND H.ITEM_REQ_NUM= A.ITEM_REQ_NUM       --구매
                    LEFT  JOIN BSA210T H2 WITH   (NOLOCK) ON H2.COMP_CODE   =  H.COMP_CODE
                                                         AND H2.TYPE_LEVEL  =  H.DIV_CODE
                                                         AND H2.TREE_CODE   =  H.TREE_CODE
                    LEFT  JOIN S_MRE090T_KD J WITH (NOLOCK) ON J.COMP_CODE  =  A.COMP_CODE
                                                           AND J.DIV_CODE   =  A.DIV_CODE
                                                           AND J.PRDT_REQ_NUM =A.PRDT_REQ_NUM       --생산
                    LEFT  JOIN BSA210T J2 WITH   (NOLOCK) ON J2.COMP_CODE   =  J.COMP_CODE
                                                         AND J2.TYPE_LEVEL  =  J.DIV_CODE
                                                         AND J2.TREE_CODE   =  J.TREE_CODE
					LEFT  JOIN S_MRE011T_KD H3 WITH (NOLOCK) ON H3.COMP_CODE     = A.COMP_CODE
                                                            AND H3.DIV_CODE      = A.DIV_CODE
                                                            AND H3.ITEM_REQ_NUM  = A.ITEM_REQ_NUM       --구매디테일
														    AND H3.PO_SER_NO     = A.ITEM_REQ_SEQ
					LEFT  JOIN BSA210T H4 WITH   (NOLOCK) ON H4.COMP_CODE   =  A.COMP_CODE
                                                         AND H4.TYPE_LEVEL  =  A.DIV_CODE
                                                         AND H4.TREE_CODE   =  A.REQ_DEPT_CODE
            WHERE   A.COMP_CODE     = @CompCode
            AND     A.DIV_CODE      = #{DIV_CODE}
        <if test="@foren.Ognl@isNotEmpty(PO_REQ_NUM)">
            AND     A.PO_REQ_NUM    = #{PO_REQ_NUM}
        </if>
            ORDER BY A.PO_SER_NO

            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>





    <select id="s_mre101ukrv_kdServiceImpl.selectMre090List" parameterType="Map" resultType="rMap">
        --생산계획참조
        DECLARE @COMP_CODE    NVARCHAR(8)
              , @DIV_CODE     NVARCHAR(8)
              , @REQ_FR_DT    NVARCHAR(8)  --요청시작일
              , @REQ_TO_DT    NVARCHAR(8)  --요청종료일
              , @PRDT_REQ_NUM NVARCHAR(20) --생산계획번호
              , @SUPPLY_TYPE  NVARCHAR(1) --조달구분
              , @DOM_FORIGN   NVARCHAR(1) --국내외
              , @ITEM_ACCOUNT NVARCHAR(2) --품목계정

        SET @COMP_CODE    = #{S_COMP_CODE}
        SET @DIV_CODE     = #{DIV_CODE}
        SET @REQ_FR_DT    = #{PO_REQ_DATE_FR}
        SET @REQ_TO_DT    = #{PO_REQ_DATE_TO}
        SET @PRDT_REQ_NUM = #{PO_REQ_NUM}
        SET @SUPPLY_TYPE  = #{SUPPLY_TYPE}
        SET @DOM_FORIGN   = #{DOM_FORIGN}
        SET @ITEM_ACCOUNT = #{ITEM_ACCOUNT}

        SELECT A.REQ_DATE                     --요청일           --> PO_REQ_DATE
             , B.ITEM_CODE                    --품목코드         --> ITEM_CODE
             , C.ITEM_NAME                    --품목명           --> ITEM_NAME
             , C.SPEC                         --규격             --> SPEC
             , D.ORDER_UNIT                   --단위(=구매단위)  --> (없음)
             , D.TRNS_RATE                    --입수             --> (없음)
             , C.STOCK_UNIT                   --단위(=재고단위)  --> (없음)
             , D.PURCH_LDTIME                 --리드타임         --> (없음)
             , B.TERMPLAN_Q                   --기간소요량       --> TERMPLAN_Q
             , B.SAFE_STOCK_Q                 --안전재고량       --> SAFT_STOCK_Q
             , B.STOCK_Q                      --현재고량         --> PAB_STOCK_Q
             , B.NOIN_Q                       --미입고량         --> R_ORDER_Q
             , B.ORDER_PLAN_Q                 --구매계획량       --> (없음)
             , ISNULL(F.ORDER_UNIT_Q,0) AS  ING_PLAN_Q           --진행수량
             , B.ORDER_PLAN_Q - ISNULL(F.ORDER_UNIT_Q,0) AS REMAIN_Q        --잔량             --> ORDER_UNIT_Q(재고단위)
             , B.DELIVERY_REQ_DATE            --희망납기일       --> DELIVERY_REQ_DATE
             --, B.DELIVERY_REQ_ORI_DATE        --납기예정일       --> DVRY_DATE
			 , CONVERT(VARCHAR(8), DATEADD(DAY, D.PURCH_LDTIME, GETDATE()), 112) AS DELIVERY_REQ_ORI_DATE
             , A.TREE_CODE  AS REQ_TREE_CODE  --부서코드         --> REQ_TREE_CODE (MRE110T엔 없음)
             , (SELECT X.TREE_NAME FROM BSA210T X WITH(NOLOCK) WHERE X.COMP_CODE = A.COMP_CODE AND X.TYPE_LEVEL = A.DIV_CODE AND X.TREE_CODE = A.TREE_CODE) AS REQ_TREE_NAME --부서명  --> REQ_TREE_NAME (MRE110T엔 없음)
             , B.REMARK                       --비고             --> REMARK
             , A.PRDT_REQ_NUM                 --생산구매계획번호 --> PRDT_REQ_NUM
             , B.PRDT_REQ_SEQ                 --순번             --> PRDT_REQ_SEQ
             , A.COMP_CODE
             , A.DIV_CODE
      			 , ISNULL(G.LATEST_CUSTOM_CODE,'')  AS LATEST_CUSTOM_CODE						--최근입고거래처
      			 , ISNULL(H.CUSTOM_NAME,'')         AS LATEST_CUSTOM_NAME		        --최근입고거래처
      			 , A.PLAN_YYYYMM
      			 , A.PLAN_ORDER
      			 , H.MONEY_UNIT
          FROM S_MRE090T_KD A WITH(NOLOCK)
               INNER JOIN S_MRE091T_KD B WITH(NOLOCK)
                       ON A.COMP_CODE = B.COMP_CODE
                      AND A.DIV_CODE  = B.DIV_CODE
                      AND A.PRDT_REQ_NUM = B.PRDT_REQ_NUM
               INNER JOIN BPR100T C WITH(NOLOCK)
                       ON A.COMP_CODE = C.COMP_CODE
                      AND B.ITEM_CODE = C.ITEM_CODE
               INNER JOIN BPR200T D WITH(NOLOCK)
                       ON A.COMP_CODE = D.COMP_CODE
                      AND A.DIV_CODE  = D.DIV_CODE
                      AND B.ITEM_CODE = D.ITEM_CODE
      			   LEFT  JOIN (
              							SELECT COMP_CODE, DIV_CODE, ITEM_CODE, PRDT_REQ_NUM, PRDT_REQ_SEQ, SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q
              							FROM MRE110T WITH (NOLOCK)
              							GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, PRDT_REQ_NUM, PRDT_REQ_SEQ
      					      ) F ON B.COMP_CODE =F.COMP_CODE AND B.DIV_CODE = F.DIV_CODE AND B.ITEM_CODE = F.ITEM_CODE AND B.PRDT_REQ_NUM=F.PRDT_REQ_NUM AND B.PRDT_REQ_SEQ = F.PRDT_REQ_SEQ
      				 LEFT JOIN (
            							SELECT COMP_CODE, DIV_CODE, ITEM_CODE, SUBSTRING(MAX(INOUT_DATE + INOUT_CODE),9, 100) AS LATEST_CUSTOM_CODE
            							FROM BTR100T S1 WITH (NOLOCK)
            							WHERE COMP_CODE=@COMP_CODE
            							AND DIV_CODE=@DIV_CODE
            							AND INOUT_TYPE='1'
            							AND INOUT_METH='1'
            							AND CREATE_LOC='2'
            							GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE
      						 ) G ON B.COMP_CODE=G.COMP_CODE AND B.DIV_CODE=G.DIV_CODE AND B.ITEM_CODE=G.ITEM_CODE
      				 LEFT JOIN BCM100T H WITH (NOLOCK) ON G.COMP_CODE=H.COMP_CODE AND G.LATEST_CUSTOM_CODE=H.CUSTOM_CODE
         WHERE A.COMP_CODE        =  @COMP_CODE
           AND A.DIV_CODE         =  @DIV_CODE
         --  AND  A.GW_FLAG               = '3'
           AND A.REQ_DATE        &gt;=  @REQ_FR_DT
           AND A.REQ_DATE        &lt;=  @REQ_TO_DT
           AND A.PRDT_REQ_NUM  LIKE @PRDT_REQ_NUM +'%'
           AND D.SUPPLY_TYPE      =  @SUPPLY_TYPE
           AND A.DOM_FORIGN       =  @DOM_FORIGN
          <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
              AND     D.ITEM_ACCOUNT    = #{ITEM_ACCOUNT}
          </if>
           AND B.ORDER_PLAN_Q - ISNULL(F.ORDER_UNIT_Q,0) &gt; 0
			ORDER BY B.PRDT_REQ_NUM, B.PRDT_REQ_SEQ
    </select>

    <select id="s_mre101ukrv_kdServiceImpl.selectItemRequestList" parameterType="Map" resultType="rMap">
        DECLARE @COMP_CODE    NVARCHAR(8)
              , @DIV_CODE     NVARCHAR(8)
              , @ITEM_REQ_DATE_FR    NVARCHAR(8)  --요청시작일
              , @ITEM_REQ_DATE_TO    NVARCHAR(8)  --요청종료일
              , @DEPT_CODE    NVARCHAR(8)
              , @DEPT_NAME    NVARCHAR(8)
              , @SUPPLY_TYPE  NVARCHAR(1) --조달구분
              , @DOM_FORIGN   NVARCHAR(1) --국내외
              , @ITEM_ACCOUNT NVARCHAR(2) --품목계정

        SET @COMP_CODE    = #{S_COMP_CODE}
        SET @DIV_CODE     = #{DIV_CODE}
        SET @ITEM_REQ_DATE_FR    = #{ITEM_REQ_DATE_FR}
        SET @ITEM_REQ_DATE_TO    = #{ITEM_REQ_DATE_TO}
        SET @DEPT_CODE = #{DEPT_CODE}
        SET @DEPT_NAME = #{DEPT_NAME}
        SET @SUPPLY_TYPE  = #{SUPPLY_TYPE}
        SET @DOM_FORIGN   = #{DOM_FORIGN}
        SET @ITEM_ACCOUNT = #{ITEM_ACCOUNT}

        /* 데이터 조회 */
        SELECT    A.COMP_CODE
                , A.DIV_CODE
                , G.DEPT_CODE
                , G.DEPT_NAME
                , B.PO_SER_NO                                                               AS ITEM_REQ_SEQ
                , B.ITEM_CODE
                , ISNULL(C.ITEM_NAME,B.ITEM_NAME)                                                               AS ITEM_NAME
                , B.ITEM_SPEC                                                               AS SPEC
                , C.STOCK_UNIT
                , D.ITEM_ACCOUNT
                , D.TRNS_RATE
                , D.ORDER_UNIT
                , B.REQ_Q
                , ISNULL(H.ORDER_UNIT_Q,0)                                                  AS ING_PLAN_Q           --진행수량         --> (없음)
                , B.REQ_Q - ISNULL(H.ORDER_UNIT_Q,0)                                        AS REMAIN_Q                    --잔량             --> ORDER_UNIT_Q(재고단위)
                , A.TREE_CODE                                                               AS DEPT_CODE
                , F.TREE_NAME                                                               AS DEPT_NAME
                , A.PERSON_NUMB
                , A.ITEM_REQ_DATE
                , A.MONEY_UNIT
                , A.EXCHG_RATE_O
                , B.DELIVERY_DATE
                , B.USE_REMARK
                , A.GW_DOCU_NUM
                , A.GW_FLAG
                , B.NEXT_YN
                , B.ITEM_REQ_NUM
			 	, ISNULL(K.LATEST_CUSTOM_CODE,'')  AS LATEST_CUSTOM_CODE						--최근입고거래처
			 	, ISNULL(M.CUSTOM_NAME,'')         AS LATEST_CUSTOM_NAME		        --최근입고거래처
			 	, A.P_REQ_TYPE
          FROM  S_MRE010T_KD              A WITH  (NOLOCK)
                INNER JOIN S_MRE011T_KD   B WITH  (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
                                                          AND B.DIV_CODE        = A.DIV_CODE
                                                          AND B.ITEM_REQ_NUM	  = A.ITEM_REQ_NUM
                LEFT JOIN BPR100T         C WITH  (NOLOCK) ON C.COMP_CODE       = B.COMP_CODE
                                                          AND C.ITEM_CODE       = B.ITEM_CODE
                LEFT JOIN BPR200T         D WITH  (NOLOCK) ON D.COMP_CODE       = C.COMP_CODE
                                                          AND D.ITEM_CODE       = C.ITEM_CODE
                LEFT JOIN BSA210T         F WITH  (NOLOCK) ON F.COMP_CODE       = A.COMP_CODE
                                                          AND F.TYPE_LEVEL      = A.DIV_CODE
                                                          AND F.TREE_CODE       = A.TREE_CODE
                LEFT JOIN HUM100T         G WITH  (NOLOCK) ON G.COMP_CODE       = A.COMP_CODE
                                                          AND G.DIV_CODE        = A.DIV_CODE
                                                          AND G.PERSON_NUMB     = A.PERSON_NUMB
        				LEFT  JOIN (
        								SELECT COMP_CODE, DIV_CODE, ITEM_REQ_NUM, ITEM_REQ_SEQ, SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q
        								FROM MRE110T WITH (NOLOCK)
        								WHERE COMP_CODE = @COMP_CODE
        								AND  DIV_CODE   = @DIV_CODE
        								GROUP BY COMP_CODE, DIV_CODE, ITEM_REQ_NUM, ITEM_REQ_SEQ
        				) H ON H.COMP_CODE=B.COMP_CODE AND H.DIV_CODE=B.DIV_CODE AND H.ITEM_REQ_NUM=B.ITEM_REQ_NUM AND H.ITEM_REQ_SEQ=B.PO_SER_NO

      				 LEFT JOIN (
            							SELECT COMP_CODE, DIV_CODE, ITEM_CODE, SUBSTRING(MAX(INOUT_DATE + INOUT_CODE),9, 100) AS LATEST_CUSTOM_CODE
            							FROM BTR100T S1 WITH (NOLOCK)
            							WHERE COMP_CODE=@COMP_CODE
            							AND DIV_CODE=@DIV_CODE
            							AND INOUT_TYPE='1'
            							AND INOUT_METH='1'
            							AND CREATE_LOC='2'
            							GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE
      						 ) K ON B.COMP_CODE=K.COMP_CODE AND B.DIV_CODE=K.DIV_CODE AND B.ITEM_CODE=K.ITEM_CODE
      				 LEFT JOIN BCM100T M WITH (NOLOCK) ON K.COMP_CODE=M.COMP_CODE AND K.LATEST_CUSTOM_CODE=M.CUSTOM_CODE

        WHERE  A.COMP_CODE        =  @COMP_CODE
           AND A.DIV_CODE         =  @DIV_CODE
           AND  A.GW_FLAG               = '3'
           AND A.ITEM_REQ_DATE        &gt;=  @ITEM_REQ_DATE_FR
           AND A.ITEM_REQ_DATE        &lt;=  @ITEM_REQ_DATE_TO
           AND B.REQ_Q - ISNULL(H.ORDER_UNIT_Q,0) &gt; 0

           <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
           AND G.DEPT_CODE        = @DEPT_CODE
           </if>
           AND @SUPPLY_TYPE = CASE WHEN ISNULL(D.SUPPLY_TYPE,'') = '' THEN '1' ELSE D.SUPPLY_TYPE END
           -- 2019.12.02 내수, 수입구분 삭제함
           --AND @DOM_FORIGN  = CASE WHEN ISNULL(C.DOM_FORIGN,'')  = '' THEN '1' ELSE C.DOM_FORIGN END

           <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
           AND D.ITEM_ACCOUNT     =  @ITEM_ACCOUNT
           </if>
		   <if test="@foren.Ognl@isNotEmpty(P_REQ_TYPE)">
			       AND A.P_REQ_TYPE IN
						 <foreach collection="P_REQ_TYPE" item="item" separator="," close=")" open="(">
			              		 #{item}
			        	</foreach>
			</if>

           --구매계획올림 구매요청은 제외
           AND NOT EXISTS (SELECT TOP 1 1 FROM MRE110T WITH (NOLOCK) WHERE COMP_CODE=B.COMP_CODE AND DIV_CODE=B.DIV_CODE AND ITEM_REQ_NUM=B.ITEM_REQ_NUM AND ITEM_REQ_SEQ=B.PO_SER_NO)
        ORDER BY A.ITEM_REQ_NUM, B.PO_SER_NO
    </select>

    <select id="s_mre101ukrv_kdServiceImpl.fnOrderPrice" parameterType="Map" resultType="rMap">
         SELECT A.COMP_CODE,
                A.TYPE,
                A.DIV_CODE,
                A.ITEM_CODE,
                A.CUSTOM_CODE,
                A.MONEY_UNIT,
                A.ORDER_UNIT,
                A.ORDER_RATE,
                A.PRICE_TYPE,
                ISNULL(A.ITEM_P, C.PURCHASE_BASE_P) AS ORDER_P,
                A.APLY_START_DATE,
                C.INSPEC_YN
         FROM uniLITE.BPR400T A WITH  (NOLOCK)
              INNER JOIN
                       (SELECT COMP_CODE, TYPE, DIV_CODE, ITEM_CODE, CUSTOM_CODE, MONEY_UNIT, ORDER_UNIT, MAX(APLY_START_DATE) AS APLY_START_DATE
                          FROM uniLITE.BPR400T WITH (NOLOCK)
                         WHERE COMP_CODE=#{S_COMP_CODE}
                         AND APLY_START_DATE &lt;= #{PO_REQ_DATE}
                         GROUP BY COMP_CODE, TYPE, DIV_CODE, ITEM_CODE, CUSTOM_CODE, MONEY_UNIT, ORDER_UNIT
                        ) B ON A.COMP_CODE = B.COMP_CODE
                           AND A.TYPE                 = B.TYPE
                           AND A.DIV_CODE             = B.DIV_CODE
                           AND A.CUSTOM_CODE          = B.CUSTOM_CODE
                           AND A.ITEM_CODE            = B.ITEM_CODE
                           AND A.MONEY_UNIT           = B.MONEY_UNIT
                           AND A.ORDER_UNIT           = B.ORDER_UNIT
                           AND A.APLY_START_DATE      = B.APLY_START_DATE
             INNER JOIN unilite.BPR200T C ON A.COMP_CODE = C.COMP_CODE
                                         AND A.DIV_CODE  = C.DIV_CODE
                                         AND A.ITEM_CODE = C.ITEM_CODE
        WHERE A.ITEM_CODE           = #{ITEM_CODE}
            AND A.CUSTOM_CODE       = #{CUSTOM_CODE}
            AND A.COMP_CODE         = #{S_COMP_CODE}
            AND A.DIV_CODE          = #{DIV_CODE}
            AND A.TYPE              = N'1'
            AND A.MONEY_UNIT        = #{MONEY_UNIT}
            AND A.ORDER_UNIT        = #{ORDER_UNIT}
    </select>

	 <select id="s_mre101ukrv_kdServiceImpl.fnOrderPrice2" parameterType="Map" resultType="rMap">
        SELECT A.COMP_CODE
              ,A.TYPE
              ,A.DIV_CODE
              ,A.ITEM_CODE
              ,A.CUSTOM_CODE
              ,A.MONEY_UNIT
              ,A.ORDER_UNIT
              ,A.ORDER_RATE
              ,A.PRICE_TYPE
              ,A.ITEM_P      AS ORDER_P -- 매출단가는 단가마스터를 사용함(수불단가 무시, 차이분은 별도 매출처리함)
              ,A.APLY_START_DATE
		 FROM BPR400T A WITH(NOLOCK)
		WHERE A.COMP_CODE   = #{S_COMP_CODE}
		  AND A.TYPE        = '1'
		  AND A.DIV_CODE    IN (#{DIV_CODE}, '*')
		  AND A.CUSTOM_CODE = #{CUSTOM_CODE}
		  AND A.ITEM_CODE   = #{ITEM_CODE}
		  AND A.MONEY_UNIT  = #{MONEY_UNIT}
		  AND A.ORDER_UNIT  = #{ORDER_UNIT}
		  AND A.APLY_START_DATE = (SELECT MAX(X.APLY_START_DATE)
								   FROM BPR400T X WITH(NOLOCK)
								  WHERE X.COMP_CODE   = A.COMP_CODE
								AND X.TYPE        = A.TYPE
								AND X.DIV_CODE    IN (#{DIV_CODE}, '*')
								AND X.ITEM_CODE   = A.ITEM_CODE
								AND X.CUSTOM_CODE = A.CUSTOM_CODE
								AND X.MONEY_UNIT  = A.MONEY_UNIT
								AND X.ORDER_UNIT  = A.ORDER_UNIT
								AND X.APLY_START_DATE <![CDATA[<=]]> #{PO_REQ_DATE})
    </select>

    <select id="s_mre101ukrv_kdServiceImpl.fnStockQ" parameterType="Map" resultType="rMap">
        SELECT A.COMP_CODE
             , A.DIV_CODE
             , A.ITEM_CODE
             , SUM(A.GOOD_STOCK_Q) STOCK_Q
          FROM BIV100T  A WITH(NOLOCK)
			   INNER JOIN BSA220T B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.WH_CODE=B.TREE_CODE AND A.DIV_CODE=B.TYPE_LEVEL AND B.PABSTOCK_YN='Y'
         WHERE A.COMP_CODE = #{S_COMP_CODE}
           AND A.ITEM_CODE = #{ITEM_CODE}
         GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE

    </select>

    <select id="s_mre101ukrv_kdServiceImpl.fnNointQ" parameterType="Map" resultType="rMap">
        SELECT UNILITE.fnMre101_KD_NoInQ(#{S_COMP_CODE}, #{DIV_CODE}, #{ITEM_CODE}, #{PO_REQ_DATE})    AS NOIN_Q
    </select>

    <select id="s_mre101ukrv_kdServiceImpl.purchLdTime" parameterType="Map" resultType="rMap">
        SELECT PURCH_LDTIME
          FROM BPR200T  WITH  (NOLOCK)
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE  = #{DIV_CODE}
           AND ITEM_CODE = #{ITEM_CODE}
    </select>

    <select id="s_mre101ukrv_kdServiceImpl.callInspecyn" parameterType="Map" resultType="rMap">
        SELECT
            ISNULL(INSPEC_YN, 'N') AS INSPEC_YN
            FROM BPR200T WITH  (NOLOCK)
            WHERE COMP_CODE = #{S_COMP_CODE}
            AND DIV_CODE    = #{DIV_CODE}
            AND ITEM_CODE   = #{ITEM_CODE}
    </select>

    <select id="s_mre101ukrv_kdServiceImpl.userName" parameterType="Map" resultType="rMap">
        /*UMFuncKrv.CMFuncKr[fnGetAgreePrsn] Query01*/
        SELECT B.USER_NAME AS USER_NAME
             , B.USER_ID   AS USER_ID
          FROM          BSA100T A WITH (NOLOCK)
             INNER JOIN BSA300T B WITH (NOLOCK) ON A.REF_CODE1 = B.USER_ID

         WHERE A.MAIN_CODE = N'M201'
           AND A.SUB_CODE  = #{SUB_CODE}
           AND A.COMP_CODE = #{S_COMP_CODE}
         ORDER BY A.SUB_CODE
    </select>

    <select id="s_mre101ukrv_kdServiceImpl.userWhcode" parameterType="Map" resultType="rMap">
        SELECT
            A.WH_CODE
        FROM         BSA210T A WITH(NOLOCK)
           LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                           AND B.DEPT_CODE = A.TREE_CODE
        WHERE A.COMP_CODE = #{S_COMP_CODE}
          AND B.USER_ID   = #{S_USER_ID}

    </select>

    <select id="s_mre101ukrv_kdServiceImpl.callDeptInspecFlag" parameterType="Map" resultType="rMap">
        SELECT
            ISNULL(INSPEC_FLAG, 'N') AS  INSPEC_FLAG
        FROM BSA210T WITH(NOLOCK)
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND TYPE_LEVEL = #{DIV_CODE}
          AND TREE_CODE = #{DEPT_CODE}

    </select>

    <update id="s_mre101ukrv_kdServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{BASIS_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{sAUTO_NUM, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>

    <select id="s_mre101ukrv_kdServiceImpl.selectCheckCnt" parameterType="Map" resultType="rMap">
        SELECT COUNT(A.COMP_CODE)  AS CNT
          FROM MRE110T A WITH (NOLOCK)
          INNER JOIN MPO200T B WITH(NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
                                           AND A.DIV_CODE   = B.DIV_CODE
                                           AND A.PO_REQ_NUM = B.PO_REQ_NUM
                                           AND A.PO_SER_NO  = B.PO_REQ_SEQ
         WHERE A.COMP_CODE = #{S_COMP_CODE}
           AND A.PO_REQ_NUM = #{PO_REQ_NUM}
           AND A.PO_SER_NO = #{PO_SER_NO}
    </select>

    <select id="s_mre101ukrv_kdServiceImpl.selectMPO200T" parameterType="Map" resultType="rMap">
        SELECT COUNT(*)         AS COUNT
          FROM MPO200T WITH(NOLOCK)
         WHERE PO_REQ_NUM = #{PO_REQ_NUM}
           AND PO_REQ_SEQ = #{PO_SER_NO}
    </select>

    <insert id="s_mre101ukrv_kdServiceImpl.insertMaster" parameterType="Map">
        INSERT INTO MRE100T
         ( PO_REQ_NUM      , TREE_CODE       , ITEM_ACCOUNT
         , PERSON_NUMB     , PO_REQ_DATE     , SUPPLY_TYPE
         , MONEY_UNIT      , EXCHG_RATE_O    , DIV_CODE           , COMP_CODE
         , UPDATE_DB_USER  , UPDATE_DB_TIME  , INSERT_DB_USER     , INSERT_DB_TIME, DOM_FORIGN)
        VALUES
        (  #{PO_REQ_NUM}     , #{DEPT_CODE}        , #{ITEM_ACCOUNT}
         , #{PERSON_NUMB}    , #{PO_REQ_DATE}      , #{SUPPLY_TYPE}
         , #{MONEY_UNIT}     , #{EXCHG_RATE_O}     , #{DIV_CODE}       , #{S_COMP_CODE}
         , #{S_USER_ID}      , GETDATE()           , #{S_USER_ID}      , GETDATE() ,#{DOM_FORIGN})
    </insert>

    <insert id="s_mre101ukrv_kdServiceImpl.insertDetail" parameterType="Map">
        INSERT INTO MRE110T
         (  COMP_CODE
          , DIV_CODE
          , PO_REQ_NUM
          , PO_SER_NO
          , ITEM_CODE
          , ITEM_NAME
          , SPEC
          , R_ORDER_Q
          , PAB_STOCK_Q
          , ORDER_Q
          , ORDER_UNIT
          , TRNS_RATE
          , ORDER_UNIT_Q
          , MONEY_UNIT
          , EXCHG_RATE_O
          , UNIT_PRICE_TYPE
          , ORDER_P
          , ORDER_O
          , ORDER_LOC_P
          , ORDER_LOC_O
          , SUPPLY_TYPE
          , CUSTOM_CODE
          , DVRY_DATE
          , WH_CODE
          , PO_REQ_DATE
          , INSPEC_FLAG
          , REMARK
          , ORDER_REQ_NUM
          , MRP_CONTROL_NUM
          , ORDER_YN
          , PURCH_LD_TIME
          , TERMPLAN_Q
          , SAFE_STOCK_Q
          , DELIVERY_REQ_DATE
          , PRDT_REQ_NUM
          , PRDT_REQ_SEQ
          , ITEM_REQ_NUM
          , ITEM_REQ_SEQ
          , REQ_DEPT_CODE
          , REF_TYPE
          , PLAN_YYYYMM
          , PLAN_ORDER
          , INSERT_DB_USER
          , INSERT_DB_TIME
         )
        VALUES
            ( #{S_COMP_CODE}
            , #{DIV_CODE}
            , #{PO_REQ_NUM}
            , #{PO_SER_NO}
            , #{ITEM_CODE}
            , #{ITEM_NAME}
            , #{SPEC}
            , #{R_ORDER_Q}
            , #{PAB_STOCK_Q}
            , #{ORDER_Q}
            , #{ORDER_UNIT}
            , #{TRNS_RATE}
            , #{ORDER_UNIT_Q}
            , #{MONEY_UNIT}
            , #{EXCHG_RATE_O}
            , #{UNIT_PRICE_TYPE}
            , #{ORDER_P}
            , #{ORDER_O}
            , #{ORDER_LOC_P}
            , #{ORDER_LOC_O}
            , #{SUPPLY_TYPE}
            , #{CUSTOM_CODE}
            , #{DVRY_DATE}
            , #{WH_CODE}
            , #{PO_REQ_DATE}
            , #{INSPEC_FLAG}
            , #{REMARK}
            , #{ORDER_REQ_NUM}
            , #{MRP_CONTROL_NUM}
            , #{ORDER_YN}
            , #{PURCH_LD_TIME}
            , #{TERMPLAN_Q}
            , #{SAFE_STOCK_Q}
            , #{DELIVERY_REQ_DATE}
            , #{PRDT_REQ_NUM}
            , #{PRDT_REQ_SEQ}
            , #{ITEM_REQ_NUM}
            , #{ITEM_REQ_SEQ}
            , #{REQ_DEPT_CODE}
            , #{REF_TYPE}
            , #{PLAN_YYYYMM}
            , #{PLAN_ORDER}
            , #{S_USER_ID}
            , GETDATE()
        )
    </insert>


    <update id="s_mre101ukrv_kdServiceImpl.updateDetail" parameterType="Map">
        UPDATE MRE110T
        SET
               ITEM_CODE          = #{ITEM_CODE}
			 , ITEM_NAME          = #{ITEM_NAME}
			 , SPEC				  = #{SPEC}
			 , REQ_DEPT_CODE      = #{REQ_DEPT_CODE}
             , R_ORDER_Q          = #{R_ORDER_Q}
             , PAB_STOCK_Q        = #{PAB_STOCK_Q}
             , ORDER_Q            = #{ORDER_Q}
             , ORDER_UNIT         = #{ORDER_UNIT}
             , TRNS_RATE          = #{TRNS_RATE}
             , ORDER_UNIT_Q       = #{ORDER_UNIT_Q}
             , MONEY_UNIT         = #{MONEY_UNIT}
             , EXCHG_RATE_O       = #{EXCHG_RATE_O}
             , UNIT_PRICE_TYPE    = #{UNIT_PRICE_TYPE}
             , ORDER_P            = #{ORDER_P}
             , ORDER_O            = #{ORDER_O}
             , ORDER_LOC_P        = #{ORDER_LOC_P}
             , ORDER_LOC_O        = #{ORDER_LOC_O}
             , SUPPLY_TYPE        = #{SUPPLY_TYPE}
             , CUSTOM_CODE        = #{CUSTOM_CODE}
             , DVRY_DATE          = #{DVRY_DATE}
             , WH_CODE            = #{WH_CODE}
             , PO_REQ_DATE        = #{PO_REQ_DATE}
             , INSPEC_FLAG        = #{INSPEC_FLAG}
             , REMARK             = #{REMARK}
             , ORDER_REQ_NUM      = #{ORDER_REQ_NUM}
             , MRP_CONTROL_NUM    = #{MRP_CONTROL_NUM}
             , ORDER_YN           = #{ORDER_YN}
             , PURCH_LD_TIME      = #{PURCH_LD_TIME}
             , TERMPLAN_Q         = #{TERMPLAN_Q}
             , SAFE_STOCK_Q       = #{SAFE_STOCK_Q}
             , DELIVERY_REQ_DATE  = #{DELIVERY_REQ_DATE}
             , UPDATE_DB_USER     = #{S_USER_ID}
             , UPDATE_DB_TIME     = GETDATE()
       WHERE COMP_CODE   = #{S_COMP_CODE}
           AND DIV_CODE    = #{DIV_CODE}
           AND PO_REQ_NUM  = #{PO_REQ_NUM}
           AND PO_SER_NO  = #{PO_SER_NO}
    </update>


    <delete id="s_mre101ukrv_kdServiceImpl.deleteMaster" parameterType="Map">
        DELETE MRE100T
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND DIV_CODE    = #{DIV_CODE}
           AND PO_REQ_NUM  = #{PO_REQ_NUM}
    </delete>

    <delete id="s_mre101ukrv_kdServiceImpl.deleteDetail" parameterType="Map">
        DELETE MRE110T
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND DIV_CODE    = #{DIV_CODE}
           AND PO_REQ_NUM  = #{PO_REQ_NUM}
           AND PO_SER_NO  = #{PO_SER_NO}
    </delete>

    <select id="s_mre101ukrv_kdServiceImpl.fnMinimumChk" parameterType="Map" resultType="rMap">

			SELECT TOP 1  ISNULL(A.CUSTOM_CODE,'') AS RTN_CUSTOM_CODE
							   , ISNULL(A.CUSTOM_NAME,'') AS RTN_CUSTOM_NAME
			FROM unilite.fnGetPurchaseCustomerT(#{S_COMP_CODE}, #{DIV_CODE}, #{MONEY_UNIT}, '', #{ITEM_CODE}, #{PO_REQ_DATE}) A
					LEFT JOIN unilite.fnGetPurchaseCustomerT(#{S_COMP_CODE}, #{DIV_CODE}, #{MONEY_UNIT}, #{CUSTOM_CODE}, #{ITEM_CODE}, #{PO_REQ_DATE}) B ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.DIV_CODE AND A.ITEM_CODE=B.ITEM_CODE
			WHERE A.ITEM_PURCHASE_P <![CDATA[<]]> B.ITEM_PURCHASE_P
			ORDER BY ISNULL(A.ITEM_PURCHASE_P,0)

    </select>

	<select id="s_mre101ukrv_kdServiceImpl.fnCustomMoneyUnit" parameterType="Map" resultType="rMap">

			SELECT MONEY_UNIT

			FROM BCM100T

			WHERE COMP_CODE = #{S_COMP_CODE}

			AND CUSTOM_CODE = #{CUSTOM_CODE}

    </select>

	<select id="s_mre101ukrv_kdServiceImpl.selectRequestRegList" parameterType="Map" resultType="rMap">
        DECLARE @COMP_CODE    NVARCHAR(8)
              , @DIV_CODE     NVARCHAR(8)
              , @ITEM_REQ_DATE_FR    NVARCHAR(8)  --요청시작일
              , @ITEM_REQ_DATE_TO    NVARCHAR(8)  --요청종료일
              , @DEPT_CODE    NVARCHAR(8)
              , @DEPT_NAME    NVARCHAR(8)
			  , @MAKE_GUBUN   NVARCHAR(2)  --가공구분
			  , @ITEM_NAME    NVARCHAR(100)--의뢰 품명
			  , @ITEM_ACCOUNT NVARCHAR(2)--품목계정
			  , @CUSTOM_CODE  NVARCHAR(20)--거래처코드

        SET @COMP_CODE    = #{S_COMP_CODE}
        SET @DIV_CODE     = #{DIV_CODE}
        SET @ITEM_REQ_DATE_FR    = #{ITEM_REQ_DATE_FR}
        SET @ITEM_REQ_DATE_TO    = #{ITEM_REQ_DATE_TO}
        SET @DEPT_CODE    = #{DEPT_CODE}
        SET @DEPT_NAME    = #{DEPT_NAME}
        SET @MAKE_GUBUN   = #{MAKE_GUBUN}
        SET @ITEM_NAME    = #{ITEM_NAME}
	    SET @ITEM_ACCOUNT = #{ITEM_ACCOUNT}
	    SET @CUSTOM_CODE  = #{CUSTOM_CODE}

	SELECT     	 A.COMP_CODE
				,A.DIV_CODE
				,B.DEPT_CODE
				,R5.TREE_NAME AS DEPT_NAME
				,A.REQ_NUM    AS ITEM_REQ_NUM
				,A.REQ_SEQ    AS ITEM_REQ_SEQ
				,A.CHILD_ITEM_CODE  AS ITEM_CODE
				,R3.ITEM_NAME
				,R2.SPEC
				,R3.ORDER_UNIT
				,R3.ITEM_ACCOUNT
				,R3.TRNS_RATE
				,R2.STOCK_UNIT
				,A.QTY				AS REQ_Q
				, ISNULL(H.ORDER_UNIT_Q,0)                                               AS ING_PLAN_Q           --진행수량
	            ,A.QTY - ISNULL(H.ORDER_UNIT_Q,0)                                        AS REMAIN_Q             --잔량
				,B.PERSON_NUMB
				,A.PURCHASE_P
				,A.GARO_NUM
				,A.SERO_NUM
				,A.THICK_NUM
				,A.BJ_NUM
				,A.PRICE
				,A.AMT
				,A.DELIVERY_DATE
				,A.PURCHASE_QTY
				,B.REQ_DATE AS ITEM_REQ_DATE
				,A.IN_DATE
				,A.DELIVERY_DATE
				,B.ITEM_NAME AS REMARK
				,A.CAL_QTY
				,A.HM_CODE
				,R1.REF_CODE1 AS MAKE_GUBUN_REF1	--가로FLAG
				,R1.REF_CODE2 AS MAKE_GUBUN_REF2	--세로FLAG
				,R1.REF_CODE3 AS MAKE_GUBUN_REF3	--두께FLAG
				,R1.REF_CODE4 AS GARO_NUM_UNIT		--단위(가로)
				,R1.REF_CODE5 AS SERO_NUM_UNIT		--단위(세로)
				,R1.REF_CODE6 AS THICK_NUM_UNIT		--단위(두께)
				,R4.REF_CODE1 AS MATERIAL
				,ISNULL(K.LATEST_CUSTOM_CODE,'')  AS LATEST_CUSTOM_CODE				--최근입고거래처
				,ISNULL(M.CUSTOM_NAME,'')         AS LATEST_CUSTOM_NAME		        --최근입고거래처
				,B.MAKE_GUBUN
				,B.CUSTOM_CODE
				,M2.CUSTOM_NAME
				,B.ITEM_NAME AS MOLD_ITEM_NAME
				,M2.MONEY_UNIT
	          FROM s_zcc810T_KD A WITH(NOLOCK)
		INNER JOIN s_zcc800T_KD B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
											  AND B.DIV_CODE = A.DIV_CODE
											  AND B.REQ_NUM = A.REQ_NUM
		 LEFT JOIN BSA100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
										  AND R1.MAIN_CODE = 'WZ21'
										  AND R1.SUB_CODE != '$'
										  AND R1.SUB_CODE = B.MAKE_GUBUN
		LEFT JOIN BPR100T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
										 AND R2.ITEM_CODE = A.CHILD_ITEM_CODE
		LEFT JOIN BPR200T R3 WITH(NOLOCK) ON R3.COMP_CODE = A.COMP_CODE
										 AND R3.DIV_CODE = A.DIV_CODE
										 AND R3.ITEM_CODE = A.CHILD_ITEM_CODE
		LEFT JOIN BSA100T R4 WITH(NOLOCK) ON R4.COMP_CODE = A.COMP_CODE
										 AND R4.MAIN_CODE = 'WZ22'
										 AND R4.SUB_CODE != '$'
										 AND R4.SUB_CODE = A.HM_CODE
		 LEFT JOIN BSA210T R5 WITH(NOLOCK) ON R5.COMP_CODE   = B.COMP_CODE
										  AND R5.TYPE_LEVEL  = B.DIV_CODE
										  AND R5.TREE_CODE   = B.DEPT_COdE
	     LEFT JOIN HUM100T R6 WITH(NOLOCK) ON R6.COMP_CODE   = B.COMP_CODE
										  AND R6.PERSON_NUMB = B.PERSON_NUMB
		 LEFT  JOIN (SELECT COMP_CODE, DIV_CODE, ITEM_REQ_NUM, ITEM_REQ_SEQ, SUM(ORDER_UNIT_Q) AS ORDER_UNIT_Q
	        			FROM MRE110T WITH (NOLOCK)
	        			WHERE COMP_CODE =  @COMP_CODE
	        			AND  DIV_CODE   =  @DIV_CODE
	        			GROUP BY COMP_CODE, DIV_CODE, ITEM_REQ_NUM, ITEM_REQ_SEQ
	     ) H ON H.COMP_CODE=A.COMP_CODE AND H.DIV_CODE=A.DIV_CODE AND H.ITEM_REQ_NUM=A.REQ_NUM AND H.ITEM_REQ_SEQ=A.REQ_SEQ
		  LEFT JOIN (	SELECT COMP_CODE, DIV_CODE, ITEM_CODE, SUBSTRING(MAX(INOUT_DATE + INOUT_CODE),9, 100) AS LATEST_CUSTOM_CODE
	            		FROM BTR100T S1 WITH (NOLOCK)
	            		WHERE COMP_CODE= @COMP_CODE
	            		AND DIV_CODE   = @DIV_CODE
	            		AND INOUT_TYPE='1'
	            		AND INOUT_METH='1'
	            		AND CREATE_LOC='2'
	            		GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE
	      ) K ON B.COMP_CODE=K.COMP_CODE AND B.DIV_CODE=K.DIV_CODE AND B.ITEM_CODE=K.ITEM_CODE
	      LEFT JOIN BCM100T M WITH (NOLOCK) ON K.COMP_CODE=M.COMP_CODE
										   AND K.LATEST_CUSTOM_CODE=M.CUSTOM_CODE
		  LEFT JOIN BCM100T M2 WITH (NOLOCK) ON B.COMP_CODE=M2.COMP_CODE
										   AND B.CUSTOM_CODE=M2.CUSTOM_CODE
	         WHERE A.COMP_CODE =  @COMP_CODE
	           AND A.DIV_CODE  =  @DIV_CODE
	           AND B.REQ_DATE  &gt;=  @ITEM_REQ_DATE_FR
	           AND B.REQ_DATE  &lt;=  @ITEM_REQ_DATE_TO
	           AND A.QTY - ISNULL(H.ORDER_UNIT_Q,0) &gt; 0

	           <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
	           AND B.DEPT_CODE        = @DEPT_CODE
	           </if>
	           <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
	           AND R3.ITEM_ACCOUNT    = @ITEM_ACCOUNT
	           </if>
	           <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	           AND B.ITEM_NAME        LIKE '%' + @ITEM_NAME + '%'
	           </if>
	           <if test="@foren.Ognl@isNotEmpty(MAKE_GUBUN)">
	           AND B.MAKE_GUBUN        = @MAKE_GUBUN
	           </if>
	            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
	           AND B.CUSTOM_CODE        LIKE '%' + @CUSTOM_CODE + '%'
	           </if>
	           --구매계획올림 구매요청은 제외
	           AND NOT EXISTS (SELECT TOP 1 1 FROM MRE110T WITH (NOLOCK) WHERE COMP_CODE=B.COMP_CODE AND DIV_CODE=B.DIV_CODE AND ITEM_REQ_NUM=A.REQ_NUM AND ITEM_REQ_SEQ=A.REQ_SEQ)
	        ORDER BY A.REQ_NUM, A.REQ_SEQ, A.CHILD_ITEM_CODE
    </select>
</mapper>