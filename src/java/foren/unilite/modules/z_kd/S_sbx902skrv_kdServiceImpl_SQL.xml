<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_sbx902skrv_kdService">
	
	<select id="s_sbx902skrv_kdService.selectList" parameterType="Map" resultType="rMap">     
        /* BOX 회수현황 */
        BEGIN
        
        SET NOCOUNT ON
        SET ARITHABORT ON
        
        DECLARE @COMP_CODE      NVARCHAR(08)
               ,@DIV_CODE       NVARCHAR(08)
               ,@BASIS_DATE     NVARCHAR(08)
               ,@BASIS_DATE_FR  NVARCHAR(08)
               ,@BASIS_DATE_TO  NVARCHAR(08)
               ,@PRE_YYYYMM     NVARCHAR(06)
               ,@ITEM_CODE      NVARCHAR(08)
               ,@ITEM_NAME      NVARCHAR(200)
        
        SET @COMP_CODE      = #{S_COMP_CODE}           -- 법인
        SET @DIV_CODE       = #{DIV_CODE}              -- 사업장
        SET @BASIS_DATE     = #{BASIS_DATE}            -- 기준일
        SET @ITEM_CODE      = #{ITEM_CODE}             -- 품목(BOX)코드
        SET @ITEM_NAME      = #{ITEM_NAME}             -- 품목(BOX)명
        SET @BASIS_DATE_FR  = LEFT(@BASIS_DATE, 6) + '01'
        SET @BASIS_DATE_TO  = @BASIS_DATE
        SET @PRE_YYYYMM      = CONVERT(NVARCHAR(06), DATEADD(MONTH, -1, @BASIS_DATE_FR), 112)
        
        
        	SELECT
			A.COMP_CODE                    AS COMP_CODE      -- 법인
		,A.DIV_CODE                     AS DIV_CODE       -- 사업장
		,A.ITEM_CODE                    AS ITEM_CODE      -- BOX(품목)코드
		,MAX(A.ITEM_NAME)               AS ITEM_NAME      -- BOX(품목)명
		,MAX(A.SPEC)                    AS SPEC           -- BOX(규격)
		,SUM(ISNULL(A.BASIS_Q, 0))      AS PRE_STOCK_Q    -- 이월량
		,SUM(ISNULL(A.INSTOCK_Q, 0))    AS INSTOCK_Q      -- 회수량
		,SUM(ISNULL(A.OUTSTOCK_Q, 0))   AS OUTSTOCK_Q     -- 출고량
		,SUM(ISNULL(A.BASIS_Q, 0) + ISNULL(A.INSTOCK_Q, 0) - ISNULL(A.OUTSTOCK_Q, 0)) AS STOCK_Q  ---재고량
        FROM
        (
			SELECT
			 A.COMP_CODE                    AS COMP_CODE        -- 법인
			,A.DIV_CODE                  AS DIV_CODE         -- 사업장
			,A.ITEM_CODE                 AS ITEM_CODE        -- BOX(품목)코드
			,B.ITEM_NAME                    AS ITEM_NAME        -- 품목명
			,B.SPEC                         AS SPEC             -- 규격
			,0                              AS BASIS_Q          -- 전월미회수
			,(CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.ORDER_UNIT_Q, 0) ELSE 0 END) AS INSTOCK_Q   -- 회수량
			,(CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.ORDER_UNIT_Q, 0) ELSE 0 END) AS OUTSTOCK_Q  -- 출고량
			FROM  unilite.S_BTR100T_KD A WITH(NOLOCK)
			LEFT JOIN unilite.BPR100T  B WITH(NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
													 AND A.ITEM_CODE  = B.ITEM_CODE
			WHERE A.COMP_CODE   = @COMP_CODE
			  AND A.DiV_CODE    = @DIV_CODE
			  AND A.INOUT_DATE &gt;= @BASIS_DATE_FR
			  AND A.INOUT_DATE &lt;= @BASIS_DATE_TO
			  AND @ITEM_CODE   = '' OR B.ITEM_CODE = @ITEM_CODE
			  AND @ITEM_NAME   = '' OR B.ITEM_NAME = @ITEM_NAME
			UNION ALL
        
			SELECT
			 A.COMP_CODE                    AS COMP_CODE        -- 법인
			,A.DIV_CODE                     AS DIV_CODE         -- 사업장
			,A.ITEM_CODE                    AS ITEM_CODE        -- BOX(품목)코드
			,B.ITEM_NAME                    AS ITEM_NAME        -- 품목명
			,B.SPEC                         AS SPEC             -- 규격
			,A.STOCK_Q                      AS BASIS_Q          -- 전월미회수
			,0                              AS INSTOCK_Q        -- 회수량
			,0                              AS OUTSTOCK_Q       -- 출고량
			FROM (
					SELECT A.COMP_CODE, A.DIV_CODE, @PRE_YYYYMM AS BASIS_YYYYMM, A.ITEM_CODE, A.BASIS_Q, A.BASIS_AMOUNT_I, A.INSTOCK_Q, A.INSTOCK_I, A.OUTSTOCK_Q, A.OUTSTOCK_I, A.STOCK_Q, A.STOCK_I, A.AVERAGE_P
					FROM  S_BIV210T_KD A WITH (NOLOCK)
					WHERE COMP_CODE=@COMP_CODE
					AND	  DIV_CODE=@DIV_CODE
					AND   BASIS_YYYYMM =   (SELECT MAX(BASIS_YYYYMM) 
											FROM S_BIV210T_KD WITH (NOLOCK)
											WHERE COMP_CODE	= A.COMP_CODE 
											AND DIV_CODE	= A.DIV_CODE 
											AND ITEM_CODE	= A.ITEM_CODE 
											AND BASIS_YYYYMM &lt; LEFT(@BASIS_DATE_FR,6))
		
			) A 
			LEFT JOIN unilite.BPR100T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE 
													AND A.ITEM_CODE   = B.ITEM_CODE
			WHERE A.COMP_CODE    = @COMP_CODE
			  AND A.DiV_CODE     = @DIV_CODE
			  AND A.BASIS_YYYYMM = @PRE_YYYYMM
			  AND @ITEM_CODE   = '' OR B.ITEM_CODE = @ITEM_CODE
			  AND @ITEM_NAME   = '' OR B.ITEM_NAME = @ITEM_NAME
        ) A
        
        GROUP BY  A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE
		HAVING SUM(ISNULL(A.BASIS_Q, 0)) + SUM(ISNULL(A.INSTOCK_Q, 0)) +  SUM(ISNULL(A.OUTSTOCK_Q, 0)) + (SUM(ISNULL(A.BASIS_Q, 0) + ISNULL(A.OUTSTOCK_Q, 0) - ISNULL(A.INSTOCK_Q, 0)) ) &lt;&gt;0
        
        SET ARITHABORT OFF
        SET NOCOUNT OFF
        
END 
    </select>
    
</mapper>