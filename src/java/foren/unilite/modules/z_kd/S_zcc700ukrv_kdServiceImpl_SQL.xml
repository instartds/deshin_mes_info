<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_zcc700ukrv_kdService">
	<select id="s_zcc700ukrv_kdService.selectList" parameterType="Map" resultType="rMap">
        --s_zcc700ukrv_kdService.selectList
        
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @COMP_CODE          NVARCHAR(08)
                  , @DIV_CODE           NVARCHAR(08)
                  , @FR_DATE            NVARCHAR(08)
                  , @TO_DATE            NVARCHAR(08)
                  , @ENTRY_NUM          NVARCHAR(20)
        
            SET @COMP_CODE      = #{S_COMP_CODE}
            SET @DIV_CODE       = #{DIV_CODE}
            SET @FR_DATE        = #{FR_DATE}
            SET @TO_DATE        = #{TO_DATE}
            SET @ENTRY_NUM      = #{ENTRY_NUM}
        
            SELECT  A.COMP_CODE                                                                 AS COMP_CODE
                 ,  A.DIV_CODE                                                                  AS DIV_CODE
                 ,  A.ENTRY_NUM                                                                 AS ENTRY_NUM
                 ,  A.ENTRY_DATE                                                                AS ENTRY_DATE
                 ,  A.DEPT_CODE                                                                 AS DEPT_CODE
                 ,  B.TREE_NAME                                                                 AS DEPT_NAME
                 ,  A.OEM_ITEM_CODE                                                             AS OEM_ITEM_CODE
                 ,  A.ITEM_NAME                                                                 AS ITEM_NAME
                 ,  A.MAKE_QTY                                                                  AS MAKE_QTY
                 ,  A.MAKE_END_YN                                                               AS MAKE_END_YN
                 ,  A.CUSTOM_CODE                                                               AS CUSTOM_CODE
                 ,  C.CUSTOM_NAME                                                               AS CUSTOM_NAME
                 ,  A.MONEY_UNIT                                                                AS MONEY_UNIT  
                 ,  A.EXCHG_RATE_O                                                              AS EXCHG_RATE_O
                 ,  A.WIRE_P                                                                    AS WIRE_P
                 ,  A.WIRE_S_P                                                                  AS WIRE_S_P 
                 ,  A.LASER_P                                                                   AS LASER_P
                 ,  A.COAT_P                                                                    AS COAT_P     
                 ,  A.ETC_P                                                                     AS ETC_P      
                 ,  A.WIRE_P + A.WIRE_S_P + A.LASER_P + A.COAT_P + A.ETC_P                      AS TOTAL_P
            FROM               S_ZCC700T_KD AS A WITH (NOLOCK)
                    INNER JOIN BSA210T      AS B WITH (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
                                                              AND B.TREE_CODE       = A.DEPT_CODE
                    INNER JOIN BCM100T      AS C WITH (NOLOCK) ON C.COMP_CODE       = A.COMP_CODE
                                                              AND C.CUSTOM_CODE     = A.CUSTOM_CODE
            WHERE   A.COMP_CODE     = @COMP_CODE
            AND     A.DIV_CODE      = @DIV_CODE
            AND     A.ENTRY_DATE   &gt;= @FR_DATE
            AND     A.ENTRY_DATE   &lt;= @TO_DATE
            <if test="@foren.Ognl@isNotEmpty(ENTRY_NUM)">
            AND     A.ENTRY_NUM  LIKE @ENTRY_NUM + '%'
            </if>
            
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>
    
    <update id="s_zcc700ukrv_kdService.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{TABLE_ID,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PREFIX,       mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{APPROVAL_DATE,   mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{AUTO_TYPE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{KEY_NUMBER,   mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>    
    
    <insert id="s_zcc700ukrv_kdService.insertDetail" parameterType="Map">
        --s_zcc700ukrv_kdService.insertDetail
        
        INSERT  INTO S_ZCC700T_KD
        (   COMP_CODE
        ,   DIV_CODE
        ,   ENTRY_NUM
        ,   ENTRY_DATE
        ,   DEPT_CODE
        ,   OEM_ITEM_CODE
        ,   ITEM_NAME
        ,   MAKE_QTY
        ,   MAKE_END_YN
        ,   CUSTOM_CODE
        ,   MONEY_UNIT   
        ,   EXCHG_RATE_O
        ,   WIRE_P
        ,   WIRE_S_P
        ,   LASER_P
        ,   COAT_P
        ,   ETC_P
        ,   INSERT_DB_USER
        ,   INSERT_DB_TIME
        ,   UPDATE_DB_USER
        ,   UPDATE_DB_TIME
        )
        VALUES
        (   #{S_COMP_CODE}
        ,   #{DIV_CODE}
        ,   #{ENTRY_NUM}
        ,   #{ENTRY_DATE}
        ,   #{DEPT_CODE}
        ,   #{OEM_ITEM_CODE}
        ,   #{ITEM_NAME}
        ,   #{MAKE_QTY}
        ,   #{MAKE_END_YN}
        ,   #{CUSTOM_CODE}
        ,   #{MONEY_UNIT}
        ,   #{EXCHG_RATE_O}
        ,   #{WIRE_P}
        ,   #{WIRE_S_P}
        ,   #{LASER_P}
        ,   #{COAT_P}
        ,   #{ETC_P}
        ,   #{S_USER_ID}
        ,   GETDATE()
        ,   #{S_USER_ID}
        ,   GETDATE()
        )
    </insert>
    
    <select id="s_zcc700ukrv_kdService.exists700t" parameterType="Map" resultType="string">
        --s_zcc700ukrv_kdService.exists700t
        SELECT  CASE WHEN EXISTS   (SELECT  1
                                    FROM    S_ZCC700T_KD
                                    WHERE   COMP_CODE = #{S_COMP_CODE}
                                    AND     DIV_CODE  = #{DIV_CODE}
                                    AND     ENTRY_NUM = #{ENTRY_NUM}
                                    AND     EST_P + TEMP_P + NEGO_P + SAMPLE_QTY != 0
                                    ) THEN 'Y' ELSE 'N' END EXIST_YN

    </select>
    
    <select id="s_zcc700ukrv_kdService.exists710t" parameterType="Map" resultType="string">
        --s_zcc700ukrv_kdService.exists710t
        SELECT  CASE WHEN EXISTS   (SELECT  1
                                    FROM    S_ZCC710T_KD
                                    WHERE   COMP_CODE = #{S_COMP_CODE}
                                    AND     DIV_CODE  = #{DIV_CODE}
                                    AND     ENTRY_NUM = #{ENTRY_NUM}
                                    ) THEN 'Y' ELSE 'N' END EXIST_YN

    </select>
    
    <update id="s_zcc700ukrv_kdService.updateDetail" parameterType="Map">
        --s_zcc700ukrv_kdService.updateDetail
         
        UPDATE  S_ZCC700T_KD
        SET     ENTRY_DATE      = #{ENTRY_DATE}
          ,     DEPT_CODE       = #{DEPT_CODE}
          ,     OEM_ITEM_CODE   = #{OEM_ITEM_CODE}
          ,     ITEM_NAME       = #{ITEM_NAME}
          ,     MAKE_QTY        = #{MAKE_QTY}
          ,     MAKE_END_YN     = #{MAKE_END_YN}
          ,     CUSTOM_CODE     = #{CUSTOM_CODE}
          ,     MONEY_UNIT      = #{MONEY_UNIT}
          ,     EXCHG_RATE_O    = #{EXCHG_RATE_O}
          ,     WIRE_P          = #{WIRE_P}
          ,     WIRE_S_P        = #{WIRE_S_P}
          ,     LASER_P         = #{LASER_P}
          ,     COAT_P          = #{COAT_P}
          ,     ETC_P           = #{ETC_P}
          ,     UPDATE_DB_USER  = #{S_USER_ID}
          ,     UPDATE_DB_TIME  = GETDATE() 
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     DIV_CODE    = #{DIV_CODE}
        AND     ENTRY_NUM   = #{ENTRY_NUM}
    </update>
    
    <delete id="s_zcc700ukrv_kdService.deleteDetail" parameterType="Map">
        --s_zcc700ukrv_kdService.deleteDetail
         
        DELETE  FROM S_ZCC700T_KD
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     DIV_CODE    = #{DIV_CODE}
        AND     ENTRY_NUM   = #{ENTRY_NUM}
    </delete>
</mapper>