<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pmr100ukrv_kdServiceImpl">

	<select id="s_pmr100ukrv_kdServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">		<!-- 작업실적등록 조회 -->
    	--s_pmr100ukrv_kd.Cs_pmr100ukrv_kd[fnPmr100QStd] Query01
    	 BEGIN
    	     DECLARE    @COMP_CODE             NVARCHAR(08)        -- (필수 9.) 법인코드
    	              , @DIV_CODE              NVARCHAR(08)        -- (필수 0.) 사업장코드
    	              , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 1.) 작업장코드
    	              , @FROM_PRODT            NVARCHAR(08)        -- (선택 2.) From 착수예정일
    	              , @TO_PRODT              NVARCHAR(08)        -- (선택 3.) To 착수예정일
    	              , @ITEM_CODE             NVARCHAR(20)        -- (선택 4.) 품목코드
    	              , @CONTROL_STATUS        NVARCHAR(01)        -- (선택 5.) 작업실적 상태
    	              , @CONTROL_STATUS1       NVARCHAR(01)        -- (선택10.) 작업실적 상태
    	              , @CONTROL_STATUS2       NVARCHAR(01)        -- (선택11.) 작업실적 상태
    	              , @WKORD_NUM             NVARCHAR(20)        -- (선택 8.) 작업지시 번호
    	              , @USER_ID               NVARCHAR(100)        -- (선택 7.) User ID
					  , @LOT_NO               NVARCHAR(20)        -- (선택 12.) LOT_NO
					  , @SPEC               NVARCHAR(20)       		 -- (선택 13.) SPEC 품번
    	     SET @COMP_CODE         = #{S_COMP_CODE}
    	     SET @DIV_CODE          = #{DIV_CODE}
    	     SET @WORK_SHOP_CODE    = #{WORK_SHOP_CODE}
    	     SET @FROM_PRODT        = #{PRODT_START_DATE_FR}
    	     SET @TO_PRODT          = #{PRODT_START_DATE_TO}
    	     SET @ITEM_CODE         = #{ITEM_CODE}
    	     SET @CONTROL_STATUS    = #{CONTROL_STATUS}
    	     SET @CONTROL_STATUS1   = #{CONTROL_STATUS}
    	     SET @CONTROL_STATUS2   = #{CONTROL_STATUS}
    	     SET @WKORD_NUM         = #{WKORD_NUM}
    	     SET @USER_ID           = #{S_USER_ID}
    	     SET @LOT_NO           = #{LOT_NO}
    	     SET @SPEC           = #{SPEC}

    	     -- s_pmr100ukrv_kd.Cs_pmr100ukrv_kd[fnPmr100QStd] Query1
    	     SELECT
    	            A.*
    	     FROM   (
    	            SELECT ISNULL(A.wkord_status, '2') AS CONTROL_STATUS
    	                 , A.WKORD_NUM
    	                 , A.PROG_WORK_CODE
    	                 , A.WORK_SHOP_CODE
    	                 , A.ITEM_CODE
    	                 , uniLITE.fnItemNameComp(A.comp_code, @USER_ID, A.item_code) AS ITEM_NAME
    	                 , C1.SPEC
    	                 , C1.STOCK_UNIT
    	                 , uniLITE.fnFormat(A.comp_code, A.wkord_q, 'P_FSET_QS') AS WKORD_Q
    	                 , uniLITE.fnFormat(A.comp_code, A.work_q,  'P_FSET_QS') AS WORK_Q
    	                 , uniLITE.fnFormat(A.comp_code, A.prodt_q, 'P_FSET_QS') AS PRODT_Q
    	                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_start_date) AS PRODT_START_DATE
    	                 , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_end_date)   AS PRODT_END_DATE
    	                 , A.REMARK
    	                 , A.WK_PLAN_NUM
    	                 , A.LINE_END_YN
    	                 , A.WORK_END_YN
    	                 , A.LINE_SEQ
    	                 , A.PROG_UNIT
    	                 , uniLITE.fnFormat(A.comp_code, A.prog_unit_q, 'P_FSET_QS')  AS PROG_UNIT_Q
    	                 , C2.OUT_METH
    	                 , '' AS AB
    	                 , A.PROJECT_NO
    	                 , A.LOT_NO
    	                 , C2.RESULT_YN                               -- 생산실적시 영업 자동입고 방법
    	                 , C2.INSPEC_YN                               -- 생산실적시 영업 출하검사 방법
    	                 , C2.WH_CODE                                 -- 기준창고
    	                 , ISNULL(C2.BASIS_P, 0) AS BASIS_P           -- 재고금액
          						 , ISNULL(C3.WH_CODE,'')		AS PROD_WH_CODE			 -- 가공창고
          						 , ISNULL(C3.WH_CELL_CODE,'')	AS PROD_WH_CELL_CODE	 --가공창고CELL
    	            FROM              PMP100TV1 A  WITH (NOLOCK)
    	                   INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.comp_code = A.comp_code
    	                                                        AND C1.item_code = A.item_code
    	                   INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.comp_code = A.comp_code
    	                                                        AND C2.div_code  = A.div_code
    	                                                        AND C2.item_code = A.item_code
     	                  LEFT  JOIN BSA230T   C3 WITH (NOLOCK) ON C3.COMP_CODE= A.COMP_CODE AND C3.TYPE_LEVEL =A.DIV_CODE AND C3.TREE_CODE = A.WORK_SHOP_CODE
    	            WHERE  A.comp_code         = @COMP_CODE
    	            AND    A.div_code          = @DIV_CODE
    	            AND    A.work_shop_code    = @WORK_SHOP_CODE
    	            AND    A.line_end_yn       = 'Y'
    	            AND    A.work_end_yn       = CASE WHEN @CONTROL_STATUS != '8' THEN A.work_end_yn      ELSE 'Y'             END
    	            AND    A.prodt_start_date &gt;= CASE WHEN @FROM_PRODT      = ''  THEN A.prodt_start_date ELSE @FROM_PRODT     END
    	            AND    A.prodt_start_date &lt;= CASE WHEN @TO_PRODT        = ''  THEN A.prodt_start_date ELSE @TO_PRODT       END
    	            AND    A.item_code      LIKE CASE WHEN @ITEM_CODE       = ''  THEN A.item_code        ELSE @ITEM_CODE      END + '%'
    	            AND    A.wkord_num      LIKE CASE WHEN @WKORD_NUM       = ''  THEN A.wkord_num        ELSE @WKORD_NUM      END + '%'
    	            AND    ISNULL(A.LOT_NO,'')		    = CASE WHEN @LOT_NO       = ''  THEN ISNULL(A.LOT_NO,'')        ELSE @LOT_NO      END
					        AND    ISNULL(C1.SPEC,'')			LIKE CASE WHEN @SPEC       = ''  THEN ISNULL(C1.SPEC,'')        ELSE @SPEC      END + '%'
    	            ) A
    	     WHERE  (
    	            (@CONTROL_STATUS = '') OR (@CONTROL_STATUS  != ''  AND A.control_status  = @CONTROL_STATUS )
    	                                   OR (@CONTROL_STATUS1 != ''  AND A.control_status  = @CONTROL_STATUS1)
    	                                   OR (@CONTROL_STATUS2 != ''  AND A.control_status  = @CONTROL_STATUS2)
    	            )
           ORDER BY A.PRODT_START_DATE ASC , A.WKORD_NUM DESC    	            
    	 END
	</select>

	<select id="s_pmr100ukrv_kdServiceImpl.autoNum" parameterType="Map" resultType="rMap">
    	--UBFuncKrv.CBFuncKr[fnAutoNo] Query01
    	BEGIN
    	    DECLARE     @AUTO_NUM      NVARCHAR(20),
    					@REGDATE       NVARCHAR(8)
    		SET @REGDATE = CONVERT(NVARCHAR(8), GETDATE(), 112)
    	    EXEC SP_GetAutoNumComp #{S_COMP_CODE}, #{DIV_CODE}, 'PMR100T', 'P', @REGDATE, '', @AUTO_NUM OUTPUT

    	    IF ISNULL(@AUTO_NUM, '') != ''
    	       SELECT @AUTO_NUM AS PRODT_NUM
    	    ELSE
    	       SELECT TOP 0 '' AS PRODT_NUM

    	END
	</select>

	<select id="s_pmr100ukrv_kdServiceImpl.selectDetailList3" parameterType="Map" resultType="rMap">		<!-- 공정별등록 조회1 -->
    	--s_pmr100ukrv_kd.Cs_pmr100ukrv_kd[fnPmr100QSt1] Query01
        BEGIN
            DECLARE    @SHEET_TYPE            NVARCHAR(10)        -- (필수 0.) SHEET Type
                     , @COMP_CODE             NVARCHAR(08)        -- (필수 4.) 법인코드
                     , @DIV_CODE              NVARCHAR(08)        -- (필수 1.) 사업장코드
                     , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 2.) 작업장코드
                     , @PROG_WORK_CODE        NVARCHAR(08)        -- (필수 2.) 공정코드
                     , @WKORD_NUM             NVARCHAR(20)        -- (선택 3.) 작업지시 번호

            SET @SHEET_TYPE     = ISNULL('SHEET1', 'SHEET1')
            SET @COMP_CODE      = #{S_COMP_CODE}
            SET @DIV_CODE       = #{DIV_CODE}
            SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
            SET @PROG_WORK_CODE = #{PROG_WORK_CODE}
            SET @WKORD_NUM      = #{WKORD_NUM_TEMP}

            IF @SHEET_TYPE = 'SHEET1'
                SELECT
                       A.line_seq AS SEQ
                     , A.DIV_CODE
                     , A.PROG_WORK_CODE
                     , C1.PROG_WORK_NAME
                     , C1.PROG_UNIT
                     , uniLITE.fnFormat(A.comp_code, A.wkord_q, 'P_FSET_QS') AS PROG_WKORD_Q
                     , uniLITE.fnFormat(A.comp_code, A.prodt_q, 'P_FSET_QS') AS SUM_Q
                     , uniLITE.fnGetUserDateComp(A.comp_code, CONVERT(NVARCHAR(10), GETDATE(), 112)) AS PRODT_DATE
                     --, ISNULL(F.PASS_Q, 0) AS PASS_Q
                     , ISNULL(F.PASS_Q, 0) AS ORIGIN_PASS_Q
                     , 0 AS GOOD_WORK_Q
                     , 0 AS BAD_WORK_Q
                     , 1 AS MAN_HOUR
                     , uniLITE.fnFormat(A.comp_code, A.wkord_q - A.prodt_q, 'P_FSET_QS') AS JAN_Q
                     , 0 AS WORK_Q
                     , A.WKORD_NUM
                     , A.LINE_END_YN
                     , A.WK_PLAN_NUM
                     , '' AS PRODT_NUM
                     , A.WKORD_STATUS            AS CONTROL_STATUS
                     , CASE WHEN A.line_end_yn = 'Y' THEN A.lot_no ELSE '' END AS LOT_NO
                     , '' AS FR_SERIAL_NO
                     , '' AS TO_SERIAL_NO
                     , A.EQUIP_CODE
                     , D.EQUIP_NAME
                     , A.MOLD_CODE
                     , E.MOLD_NAME
                     , E.CAVITY
                     , '' AS REMARK
                     , '' AS UPDATE_DB_USER
                     , '' AS UPDATE_DB_TIME
                     , A.COMP_CODE
            					, ISNULL(W1.WH_CODE,'')		AS GOOD_WH_CODE			 -- 가공창고
            					, ISNULL(W1.WH_CELL_CODE,'')	AS GOOD_WH_CELL_CODE	 --가공창고CELL
            					, ISNULL(W1.WH_CODE,'')		AS BAD_WH_CODE			 -- 가공창고
            					, ISNULL(W1.WH_CELL_CODE,'')	AS BAD_WH_CELL_CODE	 --가공창고CELL
                FROM              PMP100T  A  WITH (NOLOCK)
                       LEFT  JOIN PBS200T  C1 WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
                                                           AND C1.DIV_CODE       = A.DIV_CODE
                                                           AND C1.WORK_SHOP_CODE = A.WORK_SHOP_CODE
                                                           AND C1.PROG_WORK_CODE = A.PROG_WORK_CODE
                       LEFT  JOIN S_EQM100T_KD  D WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
                                                               AND D.DIV_CODE       = A.DIV_CODE
                                                               AND D.EQUIP_CODE     = A.EQUIP_CODE
                       LEFT  JOIN S_MOM100T_KD  E WITH (NOLOCK) ON E.COMP_CODE      = A.COMP_CODE
                                                               AND E.DIV_CODE       = A.DIV_CODE
                                                               AND E.MOLD_CODE      = A.MOLD_CODE
                       LEFT  JOIN (SELECT COMP_CODE,  DIV_CODE, WKORD_NUM, PROG_WORK_CODE
                                        , SUM(PASS_Q) AS PASS_Q
                                     FROM PMR100T WITH(NOLOCK)
					                WHERE COMP_CODE = @COMP_CODE
					                  AND DIV_CODE  = @DIV_CODE
					                  AND WKORD_NUM = @WKORD_NUM
					               GROUP BY COMP_CODE, DIV_CODE, WKORD_NUM, PROG_WORK_CODE) F
					                                                          ON F.COMP_CODE      = A.COMP_CODE
								                                             AND F.DIV_CODE       = A.DIV_CODE
								                                             AND F.WKORD_NUM      = A.WKORD_NUM
								                                             AND F.PROG_WORK_CODE = A.PROG_WORK_CODE
          					  LEFT  JOIN BSA230T   W1 WITH (NOLOCK) ON W1.COMP_CODE= A.COMP_CODE AND W1.TYPE_LEVEL =A.DIV_CODE AND W1.TREE_CODE = A.WORK_SHOP_CODE
                WHERE  A.comp_code      = @COMP_CODE
                AND    A.div_code       = @DIV_CODE
                AND    A.wkord_num      = @WKORD_NUM
                AND    A.work_shop_code = @WORK_SHOP_CODE
                ORDER BY RIGHT('00000' + A.line_seq, 5)
            ELSE
                SELECT
                       A.DIV_CODE
                     , A.PRODT_NUM
                     , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
                     , uniLITE.fnFormat(A.comp_code, ISNULL(A.pass_q, 0),      'P_FSET_QS') AS PASS_Q
                     , uniLITE.fnFormat(A.comp_code, ISNULL(A.good_work_q, 0), 'P_FSET_QS') AS GOOD_WORK_Q
                     , uniLITE.fnFormat(A.comp_code, ISNULL(A.bad_work_q, 0),  'P_FSET_QS') AS BAD_WORK_Q
                     , A.MAN_HOUR
                     , uniLITE.fnFormat(A.comp_code, ISNULL(A.prog_wkord_q, 0),'P_FSET_QS') AS PROG_WKORD_Q
                     , uniLITE.fnFormat(A.comp_code, ISNULL(B.in_stock_q, 0),  'P_FSET_QS') AS IN_STOCK_Q
                     , 0 AS CAL_PASS_Q
                     , A.PROG_WORK_CODE, A.WKORD_NUM, A.WK_PLAN_NUM, A.LINE_END_YN
                     , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.lot_no, '')       ELSE '' END AS LOT_NO
                     , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.fr_serial_no, '') ELSE '' END AS FR_SERIAL_NO
                     , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.to_serial_no, '') ELSE '' END AS TO_SERIAL_NO
                     , A.EQUIP_CODE
                     , D.EQUIP_NAME
                     , A.MOLD_CODE
                     , E.MOLD_NAME
                     , A.NOW_DEPR
                     , A.REMARK
                     , '' AS UPDATE_DB_USER
                     , '' AS UPDATE_DB_TIME
                     , A.COMP_CODE
                FROM              PMR100T  A  WITH (NOLOCK)
                       LEFT  JOIN PMR200T  B  WITH (NOLOCK) ON B.comp_code  = A.comp_code
                                                           AND B.div_code   = A.div_code
                                                           AND B.wkord_num  = A.wkord_num
                                                           AND B.prodt_num  = A.prodt_num
                                                           AND B.prodt_date = A.prodt_date
                       LEFT  JOIN S_EQM100T_KD  D WITH (NOLOCK) ON D.comp_code      = A.comp_code
                                                               AND D.div_code       = A.div_code
                                                               AND D.EQUIP_CODE     = A.EQUIP_CODE
                       LEFT  JOIN S_MOM100T_KD  E WITH (NOLOCK) ON E.comp_code      = A.comp_code
                                                               AND E.div_code       = A.div_code
                                                               AND E.MOLD_CODE      = A.MOLD_CODE
                WHERE  A.comp_code      = @COMP_CODE
                AND    A.div_code       = @DIV_CODE
                AND    A.prog_work_code = @PROG_WORK_CODE
                AND    A.wkord_num      = @WKORD_NUM
                ORDER BY A.prodt_date, A.prodt_num
        END
	</select>

	<select id="s_pmr100ukrv_kdServiceImpl.selectDetailList4" parameterType="Map" resultType="rMap">		<!-- 공정별등록 조회2 -->
    	--s_pmr100ukrv_kd.Cs_pmr100ukrv_kd[fnPmr100QSt1] Query01
        BEGIN
            DECLARE    @SHEET_TYPE            NVARCHAR(10)        -- (필수 0.) SHEET Type
                     , @COMP_CODE             NVARCHAR(08)        -- (필수 4.) 법인코드
                     , @DIV_CODE              NVARCHAR(08)        -- (필수 1.) 사업장코드
                     , @WORK_SHOP_CODE        NVARCHAR(08)        -- (필수 2.) 작업장코드
                     , @PROG_WORK_CODE        NVARCHAR(08)        -- (필수 2.) 공정코드
                     , @WKORD_NUM             NVARCHAR(20)        -- (선택 3.) 작업지시 번호

            SET @SHEET_TYPE     = ISNULL('SHEET2', 'SHEET1')
            SET @COMP_CODE      = #{S_COMP_CODE}
            SET @DIV_CODE       = #{DIV_CODE}
            SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}
            SET @PROG_WORK_CODE = #{PROG_WORK_CODE}
            SET @WKORD_NUM      = #{WKORD_NUM_TEMP}

            IF @SHEET_TYPE = 'SHEET1'
                SELECT
                       A.line_seq AS SEQ
                     , A.DIV_CODE
                     , A.PROG_WORK_CODE
                     , C1.PROG_WORK_NAME
                     , C1.PROG_UNIT
                     , uniLITE.fnFormat(A.comp_code, A.wkord_q, 'P_FSET_QS') AS PROG_WKORD_Q
                     , uniLITE.fnFormat(A.comp_code, A.prodt_q, 'P_FSET_QS') AS SUM_Q
                     , uniLITE.fnGetUserDateComp(A.comp_code, CONVERT(NVARCHAR(10), GETDATE(), 112)) AS PRODT_DATE
                     , 0 AS PASS_Q
                     , 0 AS GOOD_WORK_Q
                     , 0 AS BAD_WORK_Q
                     , 0 AS MAN_HOUR
                     , uniLITE.fnFormat(A.comp_code, A.wkord_q - A.prodt_q, 'P_FSET_QS') AS JAN_Q
                     , 0 AS WORK_Q
                     , A.WKORD_NUM
                     , A.LINE_END_YN
                     , A.WK_PLAN_NUM
                     , '' AS PRODT_NUM
                     , '' AS CONTROL_STATUS
                     , CASE WHEN A.line_end_yn = 'Y' THEN A.lot_no ELSE '' END AS LOT_NO
                     , '' AS FR_SERIAL_NO
                     , '' AS TO_SERIAL_NO
                     , A.EQUIP_CODE
                     , D.EQUIP_NAME
                     , A.MOLD_CODE
                     , E.MOLD_NAME
                     , '' AS REMARK
                     , '' AS UPDATE_DB_USER
                     , '' AS UPDATE_DB_TIME
                     , A.COMP_CODE
                FROM              PMP100T  A  WITH (NOLOCK)
                       LEFT  JOIN PBS200T  C1 WITH (NOLOCK) ON C1.comp_code      = A.comp_code
                                                           AND C1.div_code       = A.div_code
                                                           AND C1.work_shop_code = A.work_shop_code
                                                           AND C1.prog_work_code = A.prog_work_code
                       LEFT  JOIN S_EQM100T_KD  D WITH (NOLOCK) ON D.comp_code      = A.comp_code
                                                               AND D.div_code       = A.div_code
                                                               AND D.EQUIP_CODE     = A.EQUIP_CODE
                       LEFT  JOIN S_MOM100T_KD  E WITH (NOLOCK) ON E.comp_code      = A.comp_code
                                                               AND E.div_code       = A.div_code
                                                               AND E.MOLD_CODE      = A.MOLD_CODE
                WHERE  A.comp_code      = @COMP_CODE
                AND    A.div_code       = @DIV_CODE
                AND    A.wkord_num      = @WKORD_NUM
                AND    A.work_shop_code = @WORK_SHOP_CODE
                ORDER BY RIGHT('00000' + A.line_seq, 5)
            ELSE
                SELECT
                       A.DIV_CODE
                     , A.PRODT_NUM
                     , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
                     , uniLITE.fnFormat(A.comp_code, ISNULL(A.pass_q, 0),      'P_FSET_QS') AS PASS_Q
                     , uniLITE.fnFormat(A.comp_code, ISNULL(A.good_work_q, 0), 'P_FSET_QS') AS GOOD_WORK_Q
                     , uniLITE.fnFormat(A.comp_code, ISNULL(A.bad_work_q, 0),  'P_FSET_QS') AS BAD_WORK_Q
                     , A.MAN_HOUR
                     , uniLITE.fnFormat(A.comp_code, ISNULL(A.prog_wkord_q, 0),'P_FSET_QS') AS PROG_WKORD_Q
                     , uniLITE.fnFormat(A.comp_code, ISNULL(B.in_stock_q, 0),  'P_FSET_QS') AS IN_STOCK_Q
                     , 0 AS CAL_PASS_Q
                     , A.PROG_WORK_CODE, A.WKORD_NUM, A.WK_PLAN_NUM, A.LINE_END_YN
                     , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.lot_no, '')       ELSE '' END AS LOT_NO
                     , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.fr_serial_no, '') ELSE '' END AS FR_SERIAL_NO
                     , CASE WHEN A.line_end_yn = 'Y' THEN ISNULL(B.to_serial_no, '') ELSE '' END AS TO_SERIAL_NO
                     , A.EQUIP_CODE
                     , D.EQUIP_NAME
                     , A.MOLD_CODE
                     , E.MOLD_NAME
                     , A.NOW_DEPR
                     , A.REMARK
                     , '' AS UPDATE_DB_USER
                     , '' AS UPDATE_DB_TIME
                     , A.COMP_CODE
                FROM              PMR100T  A  WITH (NOLOCK)
                       LEFT  JOIN PMR200T  B  WITH (NOLOCK) ON B.comp_code  = A.comp_code
                                                           AND B.div_code   = A.div_code
                                                           AND B.wkord_num  = A.wkord_num
                                                           AND B.prodt_num  = A.prodt_num
                                                           AND B.prodt_date = A.prodt_date
                       LEFT  JOIN S_EQM100T_KD  D WITH (NOLOCK) ON D.comp_code      = A.comp_code
                                                               AND D.div_code       = A.div_code
                                                               AND D.EQUIP_CODE     = A.EQUIP_CODE
                       LEFT  JOIN S_MOM100T_KD  E WITH (NOLOCK) ON E.comp_code      = A.comp_code
                                                               AND E.div_code       = A.div_code
                                                               AND E.MOLD_CODE      = A.MOLD_CODE
                WHERE  A.comp_code      = @COMP_CODE
                AND    A.div_code       = @DIV_CODE
                AND    A.prog_work_code = @PROG_WORK_CODE
                AND    A.wkord_num      = @WKORD_NUM
                ORDER BY A.prodt_date, A.prodt_num
        END
	</select>

	<update id="s_pmr100ukrv_kdServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
        {call SP_GetAutoNumComp (
            #{COMP_CODE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{TABLE_ID,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PREFIX,       mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BASIS_DATE,   mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{AUTO_TYPE,    mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{KEY_NUMBER,   mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>

	<insert id="s_pmr100ukrv_kdServiceImpl.insert" parameterType="Map">
    	--pmr100ukrv.Cpmr100ukrv[fnPmr100Sav1] Query3
        INSERT INTO PMR100T
             ( COMP_CODE
             , DIV_CODE
             , PRODT_NUM
             , PRODT_DATE
             , PROG_WORK_CODE
             , PROG_WKORD_Q
             , WORK_Q
             , PASS_Q
             , GOOD_WORK_Q
             , BAD_WORK_Q
             , WKORD_NUM
             , LINE_END_YN
             , WK_PLAN_NUM
             , CONTROL_STATUS
             , MAN_HOUR
             , REMARK
             , PROJECT_NO
             , LOT_NO
             , MOLD_CODE
             , EQUIP_CODE
             , NOW_DEPR
             , FR_SERIAL_NO
             , TO_SERIAL_NO
             , UPDATE_DB_USER
             , UPDATE_DB_TIME)
        VALUES
             ( #{S_COMP_CODE}
             , #{DIV_CODE}
             , #{PRODT_NUM}
             , #{PRODT_DATE}
             , #{PROG_WORK_CODE}
             , #{PROG_WKORD_Q}
             , #{WORK_Q}
             , #{PASS_Q}
             , #{GOOD_WORK_Q}
             , #{BAD_WORK_Q}
             , #{WKORD_NUM}
             , #{LINE_END_YN}
             , #{WK_PLAN_NUM}
             , #{CONTROL_STATUS}
             , #{MAN_HOUR}
             , #{REMARK}
             , #{PROJECT_NO}
             , #{LOT_NO}
             , #{MOLD_CODE}
             , #{EQUIP_CODE}
             , #{NOW_DEPR}
             , #{FR_SERIAL_NO}
             , #{TO_SERIAL_NO}
             , #{S_USER_ID}
             , GETDATE())
	</insert>

	<update id="s_pmr100ukrv_kdServiceImpl.update" parameterType="Map">
        --pmr100ukrv.Cpmr100ukrv[fnPmr100Sav1] Query2
        UPDATE PMR100T
           SET PRODT_DATE     = #{PRODT_DATE}
             , PROG_WORK_CODE = #{PROG_WORK_CODE}
             , PROG_WKORD_Q   = #{PROG_WKORD_Q}
             , WORK_Q         = #{WORK_Q}
             , PASS_Q         = #{PASS_Q}
             , GOOD_WORK_Q    = #{GOOD_WORK_Q}
             , BAD_WORK_Q     = #{BAD_WORK_Q}
             , WKORD_NUM      = #{WKORD_NUM}
             , LINE_END_YN    = #{LINE_END_YN}
             , WK_PLAN_NUM    = #{WK_PLAN_NUM}
             , CONTROL_STATUS = #{CONTROL_STATUS}
             , MAN_HOUR       = #{MAN_HOUR}
             , REMARK         = #{REMARK}
             , PROJECT_NO     = #{PROJECT_NO}
             , PJT_CODE       = #{PJT_CODE}
             , LOT_NO         = #{LOT_NO}
             , MOLD_CODE      = #{MOLD_CODE}
             , EQUIP_CODE     = #{EQUIP_CODE}
             , FR_SERIAL_NO   = #{FR_SERIAL_NO}
             , TO_SERIAL_NO   = #{TO_SERIAL_NO}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND DIV_CODE       = #{DIV_CODE}
           AND PRODT_NUM      = #{PRODT_NUM}
    </update>

	<delete id="s_pmr100ukrv_kdServiceImpl.delete" parameterType="Map">
		--pmr100ukrv.Cpmr100ukrv[fnPmr100Sav1] Query1
        DELETE FROM PMR100T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND DIV_CODE  = #{DIV_CODE}
           AND PRODT_NUM = #{PRODT_NUM}
	</delete>

	<update id="s_pmr100ukrv_kdServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
        {call SP_PRODT_ProductionResult_KDG (
            #{COMP_CODE          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{DIV_CODE           ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PRODT_NUM          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{WKORD_NUM          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_WH_CODE       ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_WH_CELL_CODE  ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_PRSN          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{GOOD_Q             ,     mode=IN,    jdbcType=NUMERIC,   javaType=double},
            #{BAD_WH_CODE        ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_WH_CELL_CODE   ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_PRSN           ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{BAD_Q              ,     mode=IN,    jdbcType=NUMERIC,   javaType=double},
            #{CONTROL_STATUS     ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{PRODT_TYPE         ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{STATUS             ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{USER_ID            ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{MOLD_CODE          ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{EQUIP_CODE         ,     mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{NOW_DEPR           ,     mode=IN,    jdbcType=INTEGER,   javaType=java.lang.Integer},
            #{ERROR_DESC         ,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>




	<select id="s_pmr100ukrv_kdServiceImpl.selectDetailList5" parameterType="Map" resultType="rMap">		<!-- 불량내역등록 조회 -->
    	--s_pmr100ukrv_kd.Cs_pmr100ukrv_kd[fnPmr100QSt2] Query01
        SELECT
               A.DIV_CODE
             , A.WORK_SHOP_CODE
             , A.WKORD_NUM
             , A.PROG_WORK_CODE
             , B.PROG_WORK_NAME
             , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
             , A.ITEM_CODE
             , A.BAD_CODE
             , unilite.fnFormat(A.COMP_CODE, A.BAD_Q, 'P_FSET_QS') AS BAD_Q
             , A.REMARK
             , A.UPDATE_DB_USER
             , A.UPDATE_DB_TIME
             , A.COMP_CODE
         FROM             PMR300T A WITH (NOLOCK)
               INNER JOIN PBS200T B WITH (NOLOCK) ON B.comp_code      = A.comp_code
                                                 AND B.div_code       = A.div_code
                                                 AND B.work_shop_code = A.work_shop_code
                                                 AND B.prog_work_code = A.prog_work_code
         WHERE A.COMP_CODE      = #{S_COMP_CODE}
         AND   A.DIV_CODE       = #{DIV_CODE}
         AND   A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
         AND   A.WKORD_NUM      = #{WKORD_NUM}
         ORDER BY A.PROG_WORK_CODE ASC ,A.PRODT_DATE ASC
	 </select>

	<insert id="s_pmr100ukrv_kdServiceImpl.insertDetail5" parameterType="Map">     /* 불량내역등록 추가 */
         --pmr100ukrv.Cpmr100ukrv[fnPmr100Sav2] Query1
         INSERT INTO PMR300T
              ( DIV_CODE
              , WORK_SHOP_CODE
              , WKORD_NUM
              , PROG_WORK_CODE
              , PRODT_DATE
              , ITEM_CODE
              , BAD_CODE
              , BAD_Q
              , REMARK
              , UPDATE_DB_USER
              , UPDATE_DB_TIME
              , COMP_CODE
              )
         VALUES
              ( #{DIV_CODE}
              , #{WORK_SHOP_CODE}
              , #{WKORD_NUM}
              , #{PROG_WORK_CODE}
              , #{PRODT_DATE}
              , #{ITEM_CODE}
              , #{BAD_CODE}
              , #{BAD_Q}
              , #{REMARK}
              , #{S_USER_ID}
              , GETDATE()
              , #{S_COMP_CODE}
              )
    </insert>

    <update id="s_pmr100ukrv_kdServiceImpl.updateDetail5" parameterType="Map">        /* 불량내역등록 수정 */
         --pmr100ukrv.Cpmr100ukrv[fnPmr100Sav2] Query1
         UPDATE PMR300T
            SET WORK_SHOP_CODE = #{WORK_SHOP_CODE}
              , ITEM_CODE      = #{ITEM_CODE}
              , BAD_Q          = #{BAD_Q}
              , REMARK         = #{REMARK}
              , UPDATE_DB_USER = #{S_USER_ID}
              , UPDATE_DB_TIME = GETDATE()

          WHERE DIV_CODE       = #{DIV_CODE}
            AND WKORD_NUM      = #{WKORD_NUM}
            AND PROG_WORK_CODE = #{PROG_WORK_CODE}
            AND PRODT_DATE     = #{PRODT_DATE}
            AND BAD_CODE       = #{BAD_CODE}
            AND COMP_CODE      = #{S_COMP_CODE}
    </update>

    <delete id="s_pmr100ukrv_kdServiceImpl.deleteDetail5" parameterType="Map">        /* 불량내역등록 삭제 */
        --pmr100ukrv.Cpmr100ukrv[fnPmr100Sav2] Query1
        DELETE FROM PMR300T
         WHERE DIV_CODE       = #{DIV_CODE}
           AND WKORD_NUM      = #{WKORD_NUM}
           AND PROG_WORK_CODE = #{PROG_WORK_CODE}
           AND PRODT_DATE     = #{PRODT_DATE}
           AND BAD_CODE       = #{BAD_CODE}
           AND COMP_CODE      = #{S_COMP_CODE}
    </delete>




	 <select id="s_pmr100ukrv_kdServiceImpl.selectDetailList6" parameterType="Map" resultType="rMap">		<!-- 특이사항등록 조회 -->
    	 --s_pmr100ukrv_kd.Cs_pmr100ukrv_kd[fnPmr100QSt4] Query01
         SELECT
               A.DIV_CODE
             , A.WORK_SHOP_CODE
             , A.WKORD_NUM
             , A.PROG_WORK_CODE
             , B.PROG_WORK_NAME
             , uniLITE.fnGetUserDateComp(A.comp_code, A.prodt_date) AS PRODT_DATE
             , A.CTL_CD1
             , A.TROUBLE_TIME
             , A.TROUBLE
             , A.TROUBLE_CS
             , A.ANSWER
             , A.SEQ
             , A.UPDATE_DB_USER
             , A.UPDATE_DB_TIME
             , A.COMP_CODE
         FROM             PMR400T A WITH (NOLOCK)
               INNER JOIN PBS200T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
                                                 AND B.DIV_CODE       = A.DIV_CODE
                                                 AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
                                                 AND B.PROG_WORK_CODE = A.PROG_WORK_CODE
               INNER JOIN BSA100T C WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE
                                                 AND C.MAIN_CODE      = 'P002'
                                                 AND C.sub_code       = A.CTL_CD1
         WHERE A.COMP_CODE      = #{S_COMP_CODE}
         AND   A.DIV_CODE       = #{DIV_CODE}
         AND   A.WORK_SHOP_CODE = #{WORK_SHOP_CODE}
         AND   A.WKORD_NUM      = #{WKORD_NUM}
         ORDER BY A.PRODT_DATE, A.PROG_WORK_CODE, A.CTL_CD1
	 </select>

	 <insert id="s_pmr100ukrv_kdServiceImpl.insertDetail6" parameterType="Map">		/* 특이사항등록 추가 */
    	 --pmr100ukrv.Cpmr100ukrv[fnPmr100Sav4] Query1
         INSERT INTO PMR400T
              ( DIV_CODE
              , WORK_SHOP_CODE
              , WKORD_NUM
              , PROG_WORK_CODE
              , PRODT_DATE
              , CTL_CD1
              , TROUBLE_TIME
              , TROUBLE
              , TROUBLE_CS
              , ANSWER
              , SEQ
              , UPDATE_DB_USER
              , UPDATE_DB_TIME
              , COMP_CODE
              )
         VALUES
              ( #{DIV_CODE}
              , #{WORK_SHOP_CODE}
              , #{WKORD_NUM}
              , #{PROG_WORK_CODE}
              , #{PRODT_DATE}
              , #{CTL_CD1}
              , #{TROUBLE_TIME}
              , #{TROUBLE}
              , #{TROUBLE_CS}
              , #{ANSWER}
              , #{SEQ}
              , #{S_USER_ID}
              , GETDATE()
              , #{S_COMP_CODE}
              )
	</insert>

	<update id="s_pmr100ukrv_kdServiceImpl.updateDetail6" parameterType="Map">        /* 특이사항등록 수정 */
         --pmr100ukrv.Cpmr100ukrv[fnPmr100Sav4] Query1
         UPDATE PMR400T
            SET WORK_SHOP_CODE = #{WORK_SHOP_CODE}
              , CTL_CD1        = #{CTL_CD1}
              , TROUBLE_TIME   = #{TROUBLE_TIME}
              , TROUBLE        = #{TROUBLE}
              , TROUBLE_CS     = #{TROUBLE_CS}
              , ANSWER         = #{ANSWER}
              , UPDATE_DB_USER = #{S_USER_ID}
              , UPDATE_DB_TIME = GETDATE()

          WHERE DIV_CODE       = #{DIV_CODE}
            AND WKORD_NUM      = #{WKORD_NUM}
            AND PROG_WORK_CODE = #{PROG_WORK_CODE}
            AND PRODT_DATE     = #{PRODT_DATE}
            AND SEQ            = #{SEQ}
            AND COMP_CODE      = #{S_COMP_CODE}
    </update>

    <delete id="s_pmr100ukrv_kdServiceImpl.deleteDetail6" parameterType="Map">        /* 특이사항등록 삭제 */
        --pmr100ukrv.Cpmr100ukrv[fnPmr100Sav4] Query1
        DELETE FROM PMR400T
         WHERE DIV_CODE       = #{DIV_CODE}
           AND WKORD_NUM      = #{WKORD_NUM}
           AND PROG_WORK_CODE = #{PROG_WORK_CODE}
           AND PRODT_DATE     = #{PRODT_DATE}
           AND SEQ            = #{SEQ}
           AND COMP_CODE      = #{S_COMP_CODE}
    </delete>
</mapper>