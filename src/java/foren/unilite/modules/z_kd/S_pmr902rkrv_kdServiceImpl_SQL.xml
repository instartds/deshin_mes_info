<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pmr902rkrv_kdService">
    <select id="s_pmr902rkrv_kdService.selectList" parameterType="Map" resultType="rMap">

        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @COMP_CODE      NVARCHAR(10)
                  , @DIV_CODE       NVARCHAR(10)
                  , @WKORD_NUM      NVARCHAR(20)

            SET @COMP_CODE  = #{S_COMP_CODE}
            SET @DIV_CODE   = #{DIV_CODE}
            SET @WKORD_NUM  = #{WKORD_NUM}

            DECLARE @TOP_WKORD_YN  NVARCHAR(10)
      			SET @TOP_WKORD_YN = 'N'
      			IF EXISTS (
      						SELECT	TOP 1 1
      						FROM	PMP100T
      						WHERE	COMP_CODE=@COMP_CODE
      						AND DIV_CODE=@DIV_CODE
      						AND WKORD_NUM=@WKORD_NUM
      						AND WKORD_NUM=TOP_WKORD_NUM
      			)
      			BEGIN
      				SET @TOP_WKORD_YN = 'Y'
      			END

            SELECT  A.COMP_CODE
                 ,  A.DIV_CODE
                 ,  A.WKORD_NUM
                 ,  A.LINE_SEQ
                 ,  A.PROG_WORK_CODE
                 ,  D.PROG_WORK_NAME
                 ,  ISNULL(A.PROG_UNIT_Q, 0)    AS PROG_UNIT_Q
                 ,  ISNULL(A.WKORD_Q, 0)        AS WKORD_Q
                 ,  A.PROG_UNIT
                 ,  A.EQUIP_CODE
                 ,  E.EQU_NAME 					AS EQUIP_NAME
                 ,  A.MOLD_CODE
                 ,  F.EQU_NAME					AS MOLD_NAME
                 ,  A.GW_FLAG
				 ,  A.GW_DOC
				 ,  A.DRAFT_NO
            FROM               PMP100T      AS A WITH (NOLOCK)
                    LEFT  JOIN PPL100T      AS B WITH (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
                                                              AND B.DIV_CODE        = A.DIV_CODE
                                                              AND B.WK_PLAN_NUM     = A.WK_PLAN_NUM
                    INNER JOIN BPR100T      AS C WITH (NOLOCK) ON C.COMP_CODE       = A.COMP_CODE
                                                              AND C.ITEM_CODE       = A.ITEM_CODE
                    LEFT  JOIN PBS200T      AS D WITH (NOLOCK) ON D.COMP_CODE       = A.COMP_CODE
                                                              AND D.DIV_CODE        = A.DIV_CODE
                                                              AND D.WORK_SHOP_CODE  = A.WORK_SHOP_CODE
                                                              AND D.PROG_WORK_CODE  = A.PROG_WORK_CODE
                    LEFT  JOIN EQU200T AS E WITH (NOLOCK) ON E.COMP_CODE       = A.COMP_CODE
                                                              AND E.DIV_CODE        = A.DIV_CODE
                                                              AND E.EQU_CODE		= A.EQUIP_CODE
															  AND E.EQU_CODE_TYPE	= '2'
                    LEFT  JOIN EQU200T AS F WITH (NOLOCK) ON F.COMP_CODE       = A.COMP_CODE
                                                              AND F.DIV_CODE        = A.DIV_CODE
                                                              AND F.EQU_CODE        = A.MOLD_CODE
															  AND F.EQU_CODE_TYPE	= '1'
                    INNER JOIN (
                                SELECT  DISTINCT F.COMP_CODE
                                     ,  F.WKORD_NUM
                                     ,  ISNULL(G.CONTROL_STATUS, 3) AS CONTROL_STATUS
                                FROM               PMP100T F WITH (NOLOCK)
                                        LEFT  JOIN PMR100T G WITH (NOLOCK) ON G.COMP_CODE   = F.COMP_CODE
                                                                          AND G.WKORD_NUM   = F.WKORD_NUM
                                                                          AND G.LINE_END_YN = 'Y'
                                WHERE   F.COMP_CODE   = @COMP_CODE
                                AND     F.LINE_END_YN = 'Y'
                                GROUP   BY F.COMP_CODE, F.WKORD_NUM, G.CONTROL_STATUS
                                ) AS G                         ON G.COMP_CODE       = A.COMP_CODE
                                                              AND G.WKORD_NUM       = A.WKORD_NUM
             WHERE  A.COMP_CODE = @COMP_CODE
             AND    A.DIV_CODE  = @DIV_CODE
--             AND    A.WKORD_NUM = @WKORD_NUM
--             AND    A.TOP_WKORD_NUM = (SELECT TOP 1 TOP_WKORD_NUM FROM PMP100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND DIV_CODE=A.DIV_CODE AND WKORD_NUM=@WKORD_NUM)
             AND @WKORD_NUM = CASE WHEN @TOP_WKORD_YN ='Y' THEN A.TOP_WKORD_NUM ELSE A.WKORD_NUM END
             ORDER  BY A.COMP_CODE, A.DIV_CODE, A.WKORD_NUM, RIGHT('00'+CONVERT(VARCHAR,A.LINE_SEQ),3) ASC

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END

    </select>
     <select id="s_pmr902rkrv_kdService.selectGwData" parameterType="Map" resultType="rMap">
        SELECT  GW_FLAG
          FROM  PMP100T    A WITH (NOLOCK)
            WHERE   A.COMP_CODE      = #{S_COMP_CODE}
              AND   A.DIV_CODE       = #{DIV_CODE}
              AND WKORD_NUM = #{WKORD_NUM}
    </select>

	<select id="s_pmr902rkrv_kdService.makeDraftNum" parameterType="Map" resultType="rMap">
      DECLARE @TOP_WKORD_YN  NVARCHAR(10)
			SET @TOP_WKORD_YN = 'N'
			IF EXISTS (
						SELECT	TOP 1 1
						FROM	PMP100T WITH (NOLOCK)
						WHERE	COMP_CODE=#{S_COMP_CODE}
						AND DIV_CODE=#{DIV_CODE}
						AND WKORD_NUM=#{WKORD_NUM}
						AND WKORD_NUM=TOP_WKORD_NUM
			)
			BEGIN
				SET @TOP_WKORD_YN = 'Y'
			END
			
	   UPDATE PMP100T
           SET DRAFT_NO        = #{DRAFT_NO},
               UPDATE_DB_USER  = #{S_USER_ID},
               UPDATE_DB_TIME  = GETDATE()
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = #{DIV_CODE}
           AND #{WKORD_NUM} = CASE WHEN @TOP_WKORD_YN ='Y' THEN TOP_WKORD_NUM ELSE WKORD_NUM END

	</select>
</mapper>