<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gop400skrvServiceImpl">
	<select id="gop400skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* gop400skrvServiceImpl.selectList */
		DECLARE @CompCode               NVARCHAR(10)    /* 법인코드 */
		      , @DivCode                NVARCHAR(10)    /* 사업장코드 */
		      , @OperationDateFr        NVARCHAR(08)    /* 운행일(시작) */
		      , @OperationDateTo        NVARCHAR(08)    /* 운행일(종료) */
		      , @RouteGroup             NVARCHAR(20)    /* 노선그룹 */
		      , @RouteCode              NVARCHAR(20)    /* 노선코드 */

		SET @CompCode        = #{S_COMP_CODE}
		SET @DivCode         = #{DIV_CODE}
		SET @OperationDateFr = #{OPERATION_DATE_FR}
		SET @OperationDateTo = #{OPERATION_DATE_TO}
		SET @RouteGroup      = #{ROUTE_GROUP}
		SET @RouteCode       = #{ROUTE_CODE}
		
		SELECT A.COMP_CODE                                    /* 법인코드             */                                            
		     , A.DIV_CODE                                     /* 사업장               */
		     , A.DATA_FLAG                                    /* 운행데이터비교(GO38) */
		     , A.ROUTE_GROUP                                  /* 노선그룹             */ 
		     , A.ROUTE_CODE                                   /* 노선코드             */
		     , A.ROUTE_NUM                                    /* 노선번호             */
		     , A.VEHICLE_CODE                                 /* 차량코드             */
		     , A.VEHICLE_REGIST_NO                            /* 차량번호             */
		     , A.OPERATION_DATE                               /* 운행일               */
		     , A.DRIVER_CODE                                  /* 기사코드             */
		     , A.NAME                                         /* 기사명               */
		     , A.OPERATION_COUNT                              /* 운행순번             */
		     , A.RUN_COUNT                                    /* 운행회차             */ 
		     , A.REF_RUN_COUNT                                /* BIS기준회차          */ 
		     , A.RUN_SEQ_TYPE                                 /* 회차구분(GO37)       */
		     , A.BIS_DRIVER_NO                                /* BIS:기사코드         */
		     , A.BIS_DRIVER_NAME                              /* BIS:기사명           */
		     , A.BIS_RUN_COUNT                                /* BIS:운행회차         */
		     , A.BIS_RUN_SEQ_TYPE                             /* BIS:회차구분(GO37)   */
		     , A.DEPARTURE_DATE                               /* 출발일자             */
		     , A.DEPARTURE_TIME                               /* 출발시간             */
		     , A.RUN_START_DATE                               /* 실제출발일자         */
		     , A.RUN_START_TIME                               /* 실제출발시간         */
		     , A.RUN_EVAL_TYPE                                /* 운행평가             */
		     , (CASE WHEN A.RUN_EVAL_TYPE = '2'
		             THEN RIGHT('00' + CONVERT(NVARCHAR(6),ROUND(A.RUN_DELAY_TIME / 3600,0)), 2) + ':'
		                + RIGHT('00' + CONVERT(NVARCHAR(6),ROUND((A.RUN_DELAY_TIME - (ROUND(A.RUN_DELAY_TIME / 3600,0) * 3600)) / 60,0)), 2) + ':'
		                + RIGHT('00' + CONVERT(NVARCHAR(6),A.RUN_DELAY_TIME - (ROUND(A.RUN_DELAY_TIME / 3600,0) * 3600) - (((A.RUN_DELAY_TIME - (ROUND(A.RUN_DELAY_TIME / 3600,0) * 3600)) / 60) * 60)), 2)
		             ELSE ''
		         END) AS RUN_DELAY_TIME                       /* 지연시간             */
		     , A.BIS_RUN_END_TIME                             /* BIS:도착시간         */
		     , A.BIS_RUN_DISTANCE                             /* BIS:운행거리         */
		     , A.REMARK                                       /* 비고                 */
		  FROM (
		        SELECT A.COMP_CODE                                                          /* 법인코드             */
		             , A.DIV_CODE                                                           /* 사업장               */
		             , (CASE WHEN ISNULL(B.COMP_CODE,'') != '' THEN '1'
		                                                       ELSE '2'
		                 END) AS DATA_FLAG                                                  /* 운행데이터비교(GO38 1:정상/2:비정상:BIS정보없음/3:비정상:승무정보없음) */  
		             , A.ROUTE_GROUP                                                        /* 노선그룹             */
		             , A.ROUTE_CODE                                                         /* 노선코드             */
		             , A.ROUTE_NUM                                                          /* 노선번호             */
		             , A.VEHICLE_CODE                                                       /* 차량코드             */
		             , A.VEHICLE_REGIST_NO                                                  /* 차량번호             */
		             , A.OPERATION_DATE                                                     /* 운행일               */
		             , A.DRIVER_CODE                                                        /* 기사코드             */
		             , A.NAME                                                               /* 기사명               */ 
		             , A.OPERATION_COUNT                                                    /* 운행순번             */
		             , A.RUN_COUNT                                                          /* 운행회차             */
		             , A.REF_RUN_COUNT                                                      /* BIS기준회차          */
		             , A.RUN_SEQ_TYPE                                                       /* 회차구분(GO37 1:첫차/2:막차) */
		             , ISNULL(B.DRIVER_NO,'')       AS BIS_DRIVER_NO                        /* BIS:기사코드         */
		             , ISNULL(F.NAME     ,'')       AS BIS_DRIVER_NAME                      /* BIS:기사명           */
		             , ISNULL(B.RUN_COUNT,'')       AS BIS_RUN_COUNT                        /* BIS:운행회차         */
		             , (CASE WHEN CONVERT(NUMERIC(10),(CASE WHEN ISNULL(B.RUN_COUNT,'99') = '' THEN '99' ELSE ISNULL(B.RUN_COUNT,'99') END)) = ISNULL(H.BIS_MIN_RUN_COUNT,0) THEN '1'
		                     WHEN CONVERT(NUMERIC(10),(CASE WHEN ISNULL(B.RUN_COUNT,'99') = '' THEN '99' ELSE ISNULL(B.RUN_COUNT,'99') END)) = ISNULL(H.BIS_MAX_RUN_COUNT,0) THEN '2'
		                                                                                                                                                                     ELSE ''
		                 END) AS BIS_RUN_SEQ_TYPE                                           /* BIS:회차구분(GO37 1:첫차/2:막차) */
		             , A.DEPARTURE_DATE                                                     /* 출발일자             */
		             , A.DEPARTURE_TIME                                                     /* 출발시간             */
		             , (CASE WHEN ISNULL(B.RUN_START_TIME,'')  = ''       THEN ''
		                     WHEN ISNULL(B.RUN_START_TIME,'') &gt;= '030000' THEN B.OPERATION_DATE
		                                                                  ELSE CONVERT(VARCHAR(8), DATEADD(DAY, 1, CONVERT(DATETIME, B.OPERATION_DATE)), 112)
		                 END) AS RUN_START_DATE                                             /* 실제출발일자         */
		             , ISNULL(B.RUN_START_TIME,'')  AS RUN_START_TIME                       /* 실제출발시간         */
		             , (CASE WHEN ISNULL(B.RUN_START_TIME,'') = '' THEN '3'
		                     WHEN A.DEPARTURE_DATE + A.DEPARTURE_TIME &gt;= (CASE WHEN ISNULL(B.RUN_START_TIME,'')  = ''       THEN ''
		                                                                       WHEN ISNULL(B.RUN_START_TIME,'') &gt;= '030000' THEN B.OPERATION_DATE
		                                                                                                                    ELSE CONVERT(VARCHAR(8), DATEADD(DAY, 1, CONVERT(DATETIME, B.OPERATION_DATE)), 112)
		                                                                   END) + LEFT(ISNULL(B.RUN_START_TIME,''),4)
		                                                           THEN '1'
		                                                           ELSE '2'
		                 END) AS RUN_EVAL_TYPE                                              /* 운행평가(GO39 1:정시출발/2:지연출발/3:정보없음) */
		             , (CASE WHEN ISDATE(A.DEPARTURE_DATE + ' ' + SUBSTRING(A.DEPARTURE_TIME,1,2) + ':' + SUBSTRING(A.DEPARTURE_TIME,3,2)) = 1
		                      AND ISDATE((CASE WHEN ISNULL(B.RUN_START_TIME,'')  = ''       THEN ''
		                                       WHEN ISNULL(B.RUN_START_TIME,'') &gt;= '030000' THEN B.OPERATION_DATE
		                                                                                    ELSE CONVERT(VARCHAR(8), DATEADD(DAY, 1, CONVERT(DATETIME, B.OPERATION_DATE)), 112)
		                                   END) + ' ' + SUBSTRING(B.RUN_START_TIME,1,2) + ':' + SUBSTRING(B.RUN_START_TIME,3,2) + ':' + SUBSTRING(B.RUN_START_TIME,5,2)) = 1
		                     THEN DATEDIFF(SS, CONVERT(DATETIME, A.DEPARTURE_DATE + ' ' + SUBSTRING(A.DEPARTURE_TIME,1,2) + ':' + SUBSTRING(A.DEPARTURE_TIME,3,2))
		                                     , CONVERT(DATETIME, (CASE WHEN ISNULL(B.RUN_START_TIME,'')  = ''       THEN ''
		                                                               WHEN ISNULL(B.RUN_START_TIME,'') &gt;= '030000' THEN B.OPERATION_DATE
		                                                                                                            ELSE CONVERT(VARCHAR(8), DATEADD(DAY, 1, CONVERT(DATETIME, B.OPERATION_DATE)), 112)
		                                                           END) + ' ' + SUBSTRING(B.RUN_START_TIME,1,2) + ':' + SUBSTRING(B.RUN_START_TIME,3,2) + ':' + SUBSTRING(B.RUN_START_TIME,5,2)))
		                     ELSE 0
		                 END) AS RUN_DELAY_TIME                                             /* 지연시간             */
		             , ISNULL(B.RUN_END_TIME,'') AS BIS_RUN_END_TIME                        /* BIS:도착시간         */
		             , ISNULL(B.RUN_DISTANCE,'') AS BIS_RUN_DISTANCE                        /* BIS:운행거리         */
		             , ''                   AS REMARK                                       /* 비고                 */
		          FROM (SELECT A.COMP_CODE
		                     , A.DIV_CODE
		                     , A.ROUTE_GROUP                                                /* 노선그룹             */
		                     , A.ROUTE_CODE                                                 /* 노선코드             */
		                     , C.ROUTE_NUM                                                  /* 노선번호             */
		                     , A.VEHICLE_CODE                                               /* 차량코드             */
		                     , ISNULL(D.VEHICLE_REGIST_NO,'')   AS VEHICLE_REGIST_NO        /* 차량번호             */
		                     , A.OPERATION_DATE                                             /* 운행일               */ 
		                     , A.DRIVER_CODE                                                /* 기사코드             */ 
		                     , ISNULL(E.NAME,'')                AS NAME                     /* 기사명               */
		                     , A.OPERATION_COUNT                                            /* 운행순번             */
		                     , A.RUN_COUNT                                                  /* 운행회차             */
		                     , CONVERT(NVARCHAR(3), ROW_NUMBER() OVER (PARTITION BY A.COMP_CODE, A.DIV_CODE, A.OPERATION_DATE, A.ROUTE_GROUP, A.ROUTE_CODE, C.ROUTE_NUM, A.OPERATION_COUNT, A.VEHICLE_CODE
                                                               ORDER BY A.RUN_COUNT)) AS REF_RUN_COUNT    /* BIS기준회차          */
		                     , (CASE WHEN CONVERT(NUMERIC(10),A.RUN_COUNT) = B.MIN_RUN_COUNT THEN '1'
		                             WHEN CONVERT(NUMERIC(10),A.RUN_COUNT) = B.MAX_RUN_COUNT THEN '2'
		                                                                                     ELSE ''
		                         END) AS RUN_SEQ_TYPE                                       /* 회차구분(GO37 1:첫차/2:막차) */
		                     , A.DEPARTURE_DATE                                             /* 출발일자             */
		                     , A.DEPARTURE_TIME                                             /* 출발시간             */
		                  FROM GOP300T A WITH (NOLOCK)
		                       INNER JOIN (SELECT COMP_CODE
		                                        , DIV_CODE
		                                        , OPERATION_DATE
		                                        , ROUTE_CODE
		                                        , OPERATION_COUNT
		                                        , MIN(CONVERT(NUMERIC(10),RUN_COUNT)) AS MIN_RUN_COUNT
		                                        , MAX(CONVERT(NUMERIC(10),RUN_COUNT)) AS MAX_RUN_COUNT
		                                     FROM GOP300T WITH (NOLOCK)
		                                    WHERE COMP_CODE       = @CompCode
		                                      AND DIV_CODE        = @DivCode
		                                      AND OPERATION_DATE &gt;= @OperationDateFr
		                                      AND OPERATION_DATE &lt;= @OperationDateTo
		                                      AND ((ROUTE_GROUP   = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                                      AND ((ROUTE_CODE    = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		                                      AND OTHER_VEHICLE_YN = 'N'
		                                      AND NOTINSERVICE_YN  = 'N'
		                                    GROUP BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT) B ON B.COMP_CODE       = A.COMP_CODE
		                                                                                                                AND B.DIV_CODE        = A.DIV_CODE
		                                                                                                                AND B.OPERATION_DATE  = A.OPERATION_DATE
		                                                                                                                AND B.ROUTE_CODE      = A.ROUTE_CODE 
		                                                                                                                AND B.OPERATION_COUNT = A.OPERATION_COUNT 
		                       LEFT  JOIN GRT100T C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                                         AND C.DIV_CODE     = A.DIV_CODE
		                                                         AND C.ROUTE_CODE   = A.ROUTE_CODE
		                       LEFT  JOIN GVE100T D WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                                         AND D.DIV_CODE     = A.DIV_CODE
		                                                         AND D.VEHICLE_CODE = A.VEHICLE_CODE
		                       LEFT  JOIN HUM100T E WITH (NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
		                                                         AND E.DIV_CODE     = A.DIV_CODE
		                                                         AND E.PERSON_NUMB  = A.DRIVER_CODE
		                 WHERE A.COMP_CODE        = @CompCode
		                   AND A.DIV_CODE         = @DivCode
		                   AND A.OPERATION_DATE  &gt;= @OperationDateFr
		                   AND A.OPERATION_DATE  &lt;= @OperationDateTo
		                   AND ((A.ROUTE_GROUP    = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                   AND ((A.ROUTE_CODE     = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		                   AND A.OTHER_VEHICLE_YN = 'N'
		                   AND A.NOTINSERVICE_YN  = 'N') A
		               LEFT  JOIN GIF200T B WITH (NOLOCK) ON B.COMP_CODE         = A.COMP_CODE
		                                                 AND B.OPERATION_DATE    = A.OPERATION_DATE
		                                                 AND B.ROUTE_NUM         = A.ROUTE_NUM
		                                                 AND B.VEHICLE_REGIST_NO = A.VEHICLE_REGIST_NO
		                                                 AND B.RUN_COUNT         = A.REF_RUN_COUNT
		               LEFT  JOIN (SELECT COMP_CODE
		                                , OPERATION_DATE
		                                , ROUTE_NUM
		                                , VEHICLE_REGIST_NO
		                                , MIN(CONVERT(NUMERIC(10),RUN_COUNT)) AS BIS_MIN_RUN_COUNT
		                                , MAX(CONVERT(NUMERIC(10),RUN_COUNT)) AS BIS_MAX_RUN_COUNT
		                             FROM GIF200T WITH (NOLOCK)
		                            WHERE COMP_CODE        = @CompCode
		                              AND OPERATION_DATE  &gt;= @OperationDateFr
		                              AND OPERATION_DATE  &lt;= @OperationDateTo
		                              AND ISNUMERIC(RUN_COUNT) = 1
		                            GROUP BY COMP_CODE, OPERATION_DATE, ROUTE_NUM, VEHICLE_REGIST_NO) H ON H.COMP_CODE         = B.COMP_CODE
		                                                                                               AND H.OPERATION_DATE    = B.OPERATION_DATE
		                                                                                               AND H.ROUTE_NUM         = B.ROUTE_NUM 
		                                                                                               AND H.VEHICLE_REGIST_NO = B.VEHICLE_REGIST_NO 
		               LEFT  JOIN HUM100T F WITH (NOLOCK) ON F.COMP_CODE         = B.COMP_CODE
		                                                 AND F.PERSON_NUMB       = B.DRIVER_NO
		        UNION ALL        
		
		        SELECT @CompCode                    AS COMP_CODE                            /* 법인코드             */
		             , @DivCode                     AS DIV_CODE                             /* 사업장               */
		             , '3'                          AS DATA_FLAG                            /* 운행데이터비교(GO38 1:정상/2:비정상:BIS정보없음/3:비정상:승무정보없음) */ 
		             , ISNULL(D.ROUTE_GROUP,'')     AS ROUTE_GROUP                          /* 노선그룹             */
		             , ISNULL(C.ROUTE_CODE ,'')     AS ROUTE_CODE                           /* 노선코드             */
		             , B.ROUTE_NUM                                                          /* 노선번호             */
		             , ISNULL(E.VEHICLE_CODE,'')    AS VEHICLE_CODE                         /* 차량코드             */
		             , B.VEHICLE_REGIST_NO                                                  /* 차량번호             */
		             , B.OPERATION_DATE                                                     /* 운행일               */
		             , ''                           AS DRIVER_CODE                          /* 기사코드             */
		             , ''                           AS NAME                                 /* 기사명               */
		             , ISNULL(G.OPERATION_COUNT,'') AS OPERATION_COUNT                      /* 운행순번             */
		             , ''                           AS RUN_COUNT                            /* 운행회차             */
		             , ''                           AS REF_RUN_COUNT                        /* BIS기준회차          */
		             , ''                           AS RUN_SEQ_TYPE                         /* 회차구분(GO37 1:첫차/2:막차) */
		             , B.DRIVER_NO                  AS BIS_DRIVER_NO                        /* BIS:기사코드         */
		             , ISNULL(F.NAME,'')            AS BIS_DRIVER_NAME                      /* BIS:기사명           */
		             , B.RUN_COUNT                  AS BIS_RUN_COUNT                        /* BIS:운행회차         */
		             , (CASE WHEN CONVERT(NUMERIC(10),(CASE WHEN ISNULL(B.RUN_COUNT,'99') = '' THEN '99' ELSE ISNULL(B.RUN_COUNT,'99') END)) = ISNULL(H.BIS_MIN_RUN_COUNT,0) THEN '1'
		                     WHEN CONVERT(NUMERIC(10),(CASE WHEN ISNULL(B.RUN_COUNT,'99') = '' THEN '99' ELSE ISNULL(B.RUN_COUNT,'99') END)) = ISNULL(H.BIS_MAX_RUN_COUNT,0) THEN '2'
		                                                                                                                                                                     ELSE ''
		                 END) AS BIS_RUN_SEQ_TYPE                                           /* BIS:회차구분(GO37 1:첫차/2:막차) */
		             , ''                           AS DEPARTURE_DATE                       /* 출발일자             */
		             , ''                           AS DEPARTURE_TIME                       /* 출발시간             */
		             , (CASE WHEN ISNULL(B.RUN_START_TIME,'')  = ''       THEN ''
		                     WHEN ISNULL(B.RUN_START_TIME,'') &gt;= '030000' THEN B.OPERATION_DATE
		                                                                  ELSE CONVERT(VARCHAR(8), DATEADD(DAY, 1, CONVERT(DATETIME, B.OPERATION_DATE)), 112)
		                 END) AS RUN_START_DATE                                             /* 실제출발일자         */
		             , ISNULL(B.RUN_START_TIME,'')  AS RUN_START_TIME                       /* 실제출발시간         */ 
		             , '3'                          AS RUN_EVAL_TYPE                        /* 운행평가(GO39 1:정시출발/2:지연출발/3:정보없음) */
		             , 0                            AS RUN_DELAY_TIME                       /* 지연시간             */
		             , B.RUN_END_TIME               AS BIS_RUN_END_TIME                     /* BIS:도착시간         */
		             , B.RUN_DISTANCE               AS BIS_RUN_DISTANCE                     /* BIS:운행거리         */
		             , ''                           AS REMARK                               /* 비고                 */
		          FROM            GIF200T B WITH (NOLOCK)
		               LEFT  JOIN GRT100T C WITH (NOLOCK) ON C.COMP_CODE         = B.COMP_CODE
		                                                 AND C.DIV_CODE          = @DivCode
		                                                 AND C.ROUTE_NUM         = B.ROUTE_NUM
		               LEFT  JOIN GRT110T D WITH (NOLOCK) ON D.COMP_CODE         = B.COMP_CODE
		                                                 AND D.DIV_CODE          = @DivCode
		                                                 AND D.ROUTE_CODE        = C.ROUTE_CODE
		                                                 AND D.ROUTE_START_DATE &lt;= B.OPERATION_DATE
		                                                 AND D.ROUTE_END_DATE   &gt;= B.OPERATION_DATE
		               LEFT  JOIN GVE100T E WITH (NOLOCK) ON E.COMP_CODE         = B.COMP_CODE
		                                                 AND E.DIV_CODE          = @DivCode
		                                                 AND E.VEHICLE_REGIST_NO = B.VEHICLE_REGIST_NO
		               LEFT  JOIN HUM100T F WITH (NOLOCK) ON F.COMP_CODE         = B.COMP_CODE
		                                                 AND F.PERSON_NUMB       = B.DRIVER_NO
		               LEFT JOIN (SELECT A.COMP_CODE                                                /* 법인코드    */
		                               , A.DIV_CODE                                                 /* 사업장      */ 
		                               , A.OPERATION_DATE                                           /* 운행일      */
		                               , C.ROUTE_NUM                                                /* 노선번호    */
		                               , ISNULL(D.VEHICLE_REGIST_NO,'')   AS VEHICLE_REGIST_NO      /* 차량번호    */
		                               , ROW_NUMBER() OVER (PARTITION BY A.COMP_CODE, A.DIV_CODE, A.OPERATION_DATE, C.ROUTE_NUM, ISNULL(D.VEHICLE_REGIST_NO,'')
                                                    ORDER BY A.RUN_COUNT) AS REF_RUN_COUNT    /* BIS기준회차          */
		                            FROM GOP300T A WITH (NOLOCK)
		                                 INNER JOIN (SELECT COMP_CODE
		                                                  , DIV_CODE
		                                                  , OPERATION_DATE
		                                                  , ROUTE_CODE
		                                                  , OPERATION_COUNT
		                                                  , MIN(RUN_COUNT) AS MIN_RUN_COUNT
		                                                  , MAX(RUN_COUNT) AS MAX_RUN_COUNT
		                                               FROM GOP300T WITH (NOLOCK)
		                                              WHERE COMP_CODE        = @CompCode
		                                                AND DIV_CODE         = @DivCode
		                                                AND OPERATION_DATE  &gt;= @OperationDateFr
		                                                AND OPERATION_DATE  &lt;= @OperationDateTo
		                                                AND ((ROUTE_GROUP    = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                                                AND ((ROUTE_CODE     = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		                                                AND OTHER_VEHICLE_YN = 'N'
		                                                AND NOTINSERVICE_YN  = 'N'
		                                              GROUP BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT) B ON B.COMP_CODE       = A.COMP_CODE
		                                                                                                                          AND B.DIV_CODE        = A.DIV_CODE
		                                                                                                                          AND B.OPERATION_DATE  = A.OPERATION_DATE
		                                                                                                                          AND B.ROUTE_CODE      = A.ROUTE_CODE 
		                                                                                                                          AND B.OPERATION_COUNT = A.OPERATION_COUNT 
		                                 LEFT  JOIN GRT100T C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                                                   AND C.DIV_CODE     = A.DIV_CODE
		                                                                   AND C.ROUTE_CODE   = A.ROUTE_CODE
		                                 LEFT  JOIN GVE100T D WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                                                   AND D.DIV_CODE     = A.DIV_CODE
		                                                                   AND D.VEHICLE_CODE = A.VEHICLE_CODE
		                           WHERE A.COMP_CODE        = @CompCode
		                             AND A.DIV_CODE         = @DivCode
		                             AND A.OPERATION_DATE  &gt;= @OperationDateFr
		                             AND A.OPERATION_DATE  &lt;= @OperationDateTo
		                             AND ((A.ROUTE_GROUP    = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                             AND ((A.ROUTE_CODE     = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		                             AND A.OTHER_VEHICLE_YN = 'N'
		                             AND A.NOTINSERVICE_YN  = 'N') A ON A.COMP_CODE         = B.COMP_CODE
		                                                            AND A.OPERATION_DATE    = B.OPERATION_DATE
		                                                            AND A.ROUTE_NUM         = B.ROUTE_NUM
		                                                            AND A.VEHICLE_REGIST_NO = B.VEHICLE_REGIST_NO
		                                                            AND A.REF_RUN_COUNT     = B.RUN_COUNT
		               LEFT JOIN (SELECT DISTINCT
		                                 A.COMP_CODE                                                /* 법인코드 */
		                               , A.DIV_CODE                                                 /* 사업장   */
		                               , A.OPERATION_DATE                                           /* 운행일   */
		                               , C.ROUTE_NUM                                                /* 노선번호 */ 
		                               , ISNULL(D.VEHICLE_REGIST_NO,'')   AS VEHICLE_REGIST_NO      /* 차량번호 */
		                               , A.OPERATION_COUNT                                          /* 운행순번 */
		                            FROM            GOP300T A WITH (NOLOCK)
		                                 LEFT  JOIN GRT100T C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                                                   AND C.DIV_CODE     = A.DIV_CODE
		                                                                   AND C.ROUTE_CODE   = A.ROUTE_CODE
		                                 LEFT  JOIN GVE100T D WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                                                   AND D.DIV_CODE     = A.DIV_CODE
		                                                                   AND D.VEHICLE_CODE = A.VEHICLE_CODE
		                           WHERE A.COMP_CODE        = @CompCode
		                             AND A.DIV_CODE         = @DivCode
		                             AND A.OPERATION_DATE  &gt;= @OperationDateFr
		                             AND A.OPERATION_DATE  &lt;= @OperationDateTo
		                             AND ((A.ROUTE_GROUP    = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                             AND ((A.ROUTE_CODE     = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		                             AND A.OTHER_VEHICLE_YN = 'N'
		                             AND A.NOTINSERVICE_YN  = 'N') G ON G.COMP_CODE         = B.COMP_CODE
		                                                            AND G.OPERATION_DATE    = B.OPERATION_DATE
		                                                            AND G.ROUTE_NUM         = B.ROUTE_NUM
		                                                            AND G.VEHICLE_REGIST_NO = B.VEHICLE_REGIST_NO
		               LEFT  JOIN (SELECT COMP_CODE
		                                , OPERATION_DATE
		                                , ROUTE_NUM
		                                , VEHICLE_REGIST_NO
		                                , MIN(CONVERT(NUMERIC(10),RUN_COUNT)) AS BIS_MIN_RUN_COUNT
		                                , MAX(CONVERT(NUMERIC(10),RUN_COUNT)) AS BIS_MAX_RUN_COUNT
		                             FROM GIF200T WITH (NOLOCK)
		                            WHERE COMP_CODE        = @CompCode
		                              AND OPERATION_DATE  &gt;= @OperationDateFr
		                              AND OPERATION_DATE  &lt;= @OperationDateTo
		                              AND ISNUMERIC(RUN_COUNT) = 1
		                            GROUP BY COMP_CODE, OPERATION_DATE, ROUTE_NUM, VEHICLE_REGIST_NO) H ON H.COMP_CODE         = B.COMP_CODE
		                                                                                               AND H.OPERATION_DATE    = B.OPERATION_DATE
		                                                                                               AND H.ROUTE_NUM         = B.ROUTE_NUM 
		                                                                                               AND H.VEHICLE_REGIST_NO = B.VEHICLE_REGIST_NO 
		         WHERE B.COMP_CODE       = @CompCode
		           AND B.OPERATION_DATE &gt;= @OperationDateFr
		           AND B.OPERATION_DATE &lt;= @OperationDateTo
		           AND ISNULL(A.COMP_CODE,'') = '') A
		 WHERE 1 = 1
		   <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
           AND  A.ROUTE_GROUP= #{ROUTE_GROUP}
           </if>
           <if test="@foren.Ognl@isNotEmpty(ROUTE_CODE)">
           AND  A.ROUTE_CODE= #{ROUTE_CODE}
           </if>
		   <if test="@foren.Ognl@isNotEmpty(VEHICLE_CODE)">
           AND  A.VEHICLE_CODE= #{VEHICLE_CODE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DRIVER_CODE)">
           AND  A.DRIVER_CODE= #{DRIVER_CODE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DRIVER_NAME)">
           AND  A.NAME LIKE '%' + #{DRIVER_NAME} +'%'
           </if>
           <if test="@foren.Ognl@isNotEmpty(RUN_SEQ_TYPE)">
           AND  A.RUN_SEQ_TYPE= #{RUN_SEQ_TYPE}
           </if>
		   <if test="@foren.Ognl@isNotEmpty(RUN_SEQ_TYPE)">
           AND  A.RUN_SEQ_TYPE= #{RUN_SEQ_TYPE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(RUN_EVAL_TYPE)">
           AND  A.RUN_EVAL_TYPE= #{RUN_EVAL_TYPE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DATA_FLAG)">
           AND  A.DATA_FLAG= #{DATA_FLAG}
           </if>
		 ORDER BY (CASE WHEN A.ROUTE_GROUP = '' THEN '999' ELSE A.ROUTE_GROUP END)
		        , A.ROUTE_NUM
		        , A.OPERATION_DATE
		        , CONVERT(NUMERIC(10),CASE WHEN A.OPERATION_COUNT = '' THEN 99 ELSE A.OPERATION_COUNT END)
		        , A.VEHICLE_REGIST_NO
		        , CONVERT(NUMERIC(10),CASE WHEN A.BIS_RUN_COUNT   = '' THEN (CASE WHEN A.RUN_COUNT = '' THEN 99 ELSE A.RUN_COUNT END) ELSE A.BIS_RUN_COUNT END)

	</select>
	<select id="gop400skrvServiceImpl.summary" parameterType="Map" resultType="rMap">
		/* gop400skrvServiceImpl.summary */
		DECLARE @CompCode               NVARCHAR(10)    /* 법인코드 */
		      , @DivCode                NVARCHAR(10)    /* 사업장코드 */
		      , @OperationDateFr        NVARCHAR(08)    /* 운행일(시작) */
		      , @OperationDateTo        NVARCHAR(08)    /* 운행일(종료) */
		      , @RouteGroup             NVARCHAR(20)    /* 노선그룹 */
		      , @RouteCode              NVARCHAR(20)    /* 노선코드 */

		SET @CompCode        = #{S_COMP_CODE}
		SET @DivCode         = #{DIV_CODE}
		SET @OperationDateFr = #{OPERATION_DATE_FR}
		SET @OperationDateTo = #{OPERATION_DATE_TO}
		SET @RouteGroup      = #{ROUTE_GROUP}
		SET @RouteCode       = #{ROUTE_CODE}
		
		SELECT SUM(CASE WHEN ISNULL(A.OPERATION_COUNT, '') != '' AND RUN_SEQ_TYPE = '1' THEN 1 ELSE 0 END) AS OPERATION_CNT	/* 운행 */
		     , SUM(CASE WHEN A.RUN_EVAL_TYPE = '1' AND BIS_RUN_SEQ_TYPE = '1'  THEN 1 ELSE 0 END) 				AS ONTIME_CNT		/* 정시출발 */
		     , SUM(CASE WHEN A.RUN_EVAL_TYPE = '2' AND BIS_RUN_SEQ_TYPE = '1'  THEN 1 ELSE 0 END) 				AS DELAY_CNT		/* 지연출발 */
		     , SUM(CASE WHEN A.RUN_EVAL_TYPE = '3' AND BIS_RUN_SEQ_TYPE = '1'  THEN 1 ELSE 0 END) 				AS NONE_CNT		/* 정보없음 */
		     
		  FROM (
		        SELECT A.COMP_CODE                                                          /* 법인코드             */
		             , A.DIV_CODE                                                           /* 사업장               */
		             , (CASE WHEN ISNULL(B.COMP_CODE,'') != '' THEN '1'
		                                                       ELSE '2'
		                 END) AS DATA_FLAG                                                  /* 운행데이터비교(GO38 1:정상/2:비정상:BIS정보없음/3:비정상:승무정보없음) */  
		             , A.ROUTE_GROUP                                                        /* 노선그룹             */
		             , A.ROUTE_CODE                                                         /* 노선코드             */
		             , A.ROUTE_NUM                                                          /* 노선번호             */
		             , A.VEHICLE_CODE                                                       /* 차량코드             */
		             , A.VEHICLE_REGIST_NO                                                  /* 차량번호             */
		             , A.OPERATION_DATE                                                     /* 운행일               */
		             , A.DRIVER_CODE                                                        /* 기사코드             */
		             , A.NAME                                                               /* 기사명               */ 
		             , A.OPERATION_COUNT                                                    /* 운행순번             */
		             , A.RUN_COUNT                                                          /* 운행회차             */
		             , A.REF_RUN_COUNT                                                      /* BIS기준회차          */
		             , A.RUN_SEQ_TYPE                                                       /* 회차구분(GO37 1:첫차/2:막차) */
		             , ISNULL(B.DRIVER_NO,'')       AS BIS_DRIVER_NO                        /* BIS:기사코드         */
		             , ISNULL(F.NAME     ,'')       AS BIS_DRIVER_NAME                      /* BIS:기사명           */
		             , ISNULL(B.RUN_COUNT,'')       AS BIS_RUN_COUNT                        /* BIS:운행회차         */
		             , (CASE WHEN CONVERT(NUMERIC(10),(CASE WHEN ISNULL(B.RUN_COUNT,'99') = '' THEN '99' ELSE ISNULL(B.RUN_COUNT,'99') END)) = ISNULL(H.BIS_MIN_RUN_COUNT,0) THEN '1'
		                     WHEN CONVERT(NUMERIC(10),(CASE WHEN ISNULL(B.RUN_COUNT,'99') = '' THEN '99' ELSE ISNULL(B.RUN_COUNT,'99') END)) = ISNULL(H.BIS_MAX_RUN_COUNT,0) THEN '2'
		                                                                                                                                                                     ELSE ''
		                 END) AS BIS_RUN_SEQ_TYPE                                           /* BIS:회차구분(GO37 1:첫차/2:막차) */
		             , A.DEPARTURE_DATE                                                     /* 출발일자             */
		             , A.DEPARTURE_TIME                                                     /* 출발시간             */
		             , (CASE WHEN ISNULL(B.RUN_START_TIME,'')  = ''       THEN ''
		                     WHEN ISNULL(B.RUN_START_TIME,'') &gt;= '030000' THEN B.OPERATION_DATE
		                                                                  ELSE CONVERT(VARCHAR(8), DATEADD(DAY, 1, CONVERT(DATETIME, B.OPERATION_DATE)), 112)
		                 END) AS RUN_START_DATE                                             /* 실제출발일자         */
		             , ISNULL(B.RUN_START_TIME,'')  AS RUN_START_TIME                       /* 실제출발시간         */
		             , (CASE WHEN ISNULL(B.RUN_START_TIME,'') = '' THEN '3'
		                     WHEN A.DEPARTURE_DATE + A.DEPARTURE_TIME &gt;= (CASE WHEN ISNULL(B.RUN_START_TIME,'')  = ''       THEN ''
		                                                                       WHEN ISNULL(B.RUN_START_TIME,'') &gt;= '030000' THEN B.OPERATION_DATE
		                                                                                                                    ELSE CONVERT(VARCHAR(8), DATEADD(DAY, 1, CONVERT(DATETIME, B.OPERATION_DATE)), 112)
		                                                                   END) + LEFT(ISNULL(B.RUN_START_TIME,''),4)
		                                                           THEN '1'
		                                                           ELSE '2'
		                 END) AS RUN_EVAL_TYPE                                              /* 운행평가(GO39 1:정시출발/2:지연출발/3:정보없음) */
		             , (CASE WHEN ISDATE(A.DEPARTURE_DATE + ' ' + SUBSTRING(A.DEPARTURE_TIME,1,2) + ':' + SUBSTRING(A.DEPARTURE_TIME,3,2)) = 1
		                      AND ISDATE((CASE WHEN ISNULL(B.RUN_START_TIME,'')  = ''       THEN ''
		                                       WHEN ISNULL(B.RUN_START_TIME,'') &gt;= '030000' THEN B.OPERATION_DATE
		                                                                                    ELSE CONVERT(VARCHAR(8), DATEADD(DAY, 1, CONVERT(DATETIME, B.OPERATION_DATE)), 112)
		                                   END) + ' ' + SUBSTRING(B.RUN_START_TIME,1,2) + ':' + SUBSTRING(B.RUN_START_TIME,3,2) + ':' + SUBSTRING(B.RUN_START_TIME,5,2)) = 1
		                     THEN DATEDIFF(SS, CONVERT(DATETIME, A.DEPARTURE_DATE + ' ' + SUBSTRING(A.DEPARTURE_TIME,1,2) + ':' + SUBSTRING(A.DEPARTURE_TIME,3,2))
		                                     , CONVERT(DATETIME, (CASE WHEN ISNULL(B.RUN_START_TIME,'')  = ''       THEN ''
		                                                               WHEN ISNULL(B.RUN_START_TIME,'') &gt;= '030000' THEN B.OPERATION_DATE
		                                                                                                            ELSE CONVERT(VARCHAR(8), DATEADD(DAY, 1, CONVERT(DATETIME, B.OPERATION_DATE)), 112)
		                                                           END) + ' ' + SUBSTRING(B.RUN_START_TIME,1,2) + ':' + SUBSTRING(B.RUN_START_TIME,3,2) + ':' + SUBSTRING(B.RUN_START_TIME,5,2)))
		                     ELSE 0
		                 END) AS RUN_DELAY_TIME                                             /* 지연시간             */
		             , ISNULL(B.RUN_END_TIME,'') AS BIS_RUN_END_TIME                        /* BIS:도착시간         */
		             , ISNULL(B.RUN_DISTANCE,'') AS BIS_RUN_DISTANCE                        /* BIS:운행거리         */
		             , ''                   AS REMARK                                       /* 비고                 */
		          FROM (SELECT A.COMP_CODE
		                     , A.DIV_CODE
		                     , A.ROUTE_GROUP                                                /* 노선그룹             */
		                     , A.ROUTE_CODE                                                 /* 노선코드             */
		                     , C.ROUTE_NUM                                                  /* 노선번호             */
		                     , A.VEHICLE_CODE                                               /* 차량코드             */
		                     , ISNULL(D.VEHICLE_REGIST_NO,'')   AS VEHICLE_REGIST_NO        /* 차량번호             */
		                     , A.OPERATION_DATE                                             /* 운행일               */ 
		                     , A.DRIVER_CODE                                                /* 기사코드             */ 
		                     , ISNULL(E.NAME,'')                AS NAME                     /* 기사명               */
		                     , A.OPERATION_COUNT                                            /* 운행순번             */
		                     , A.RUN_COUNT                                                  /* 운행회차             */
		                     , CONVERT(NVARCHAR(3), ROW_NUMBER() OVER (PARTITION BY A.COMP_CODE, A.DIV_CODE, A.OPERATION_DATE, A.ROUTE_GROUP, A.ROUTE_CODE, C.ROUTE_NUM, A.OPERATION_COUNT, A.VEHICLE_CODE
                                                               ORDER BY A.RUN_COUNT)) AS REF_RUN_COUNT    /* BIS기준회차          */
		                     , (CASE WHEN CONVERT(NUMERIC(10),A.RUN_COUNT) = B.MIN_RUN_COUNT THEN '1'
		                             WHEN CONVERT(NUMERIC(10),A.RUN_COUNT) = B.MAX_RUN_COUNT THEN '2'
		                                                                                     ELSE ''
		                         END) AS RUN_SEQ_TYPE                                       /* 회차구분(GO37 1:첫차/2:막차) */
		                     , A.DEPARTURE_DATE                                             /* 출발일자             */
		                     , A.DEPARTURE_TIME                                             /* 출발시간             */
		                  FROM GOP300T A WITH (NOLOCK)
		                       INNER JOIN (SELECT COMP_CODE
		                                        , DIV_CODE
		                                        , OPERATION_DATE
		                                        , ROUTE_CODE
		                                        , OPERATION_COUNT
		                                        , MIN(CONVERT(NUMERIC(10),RUN_COUNT)) AS MIN_RUN_COUNT
		                                        , MAX(CONVERT(NUMERIC(10),RUN_COUNT)) AS MAX_RUN_COUNT
		                                     FROM GOP300T WITH (NOLOCK)
		                                    WHERE COMP_CODE       = @CompCode
		                                      AND DIV_CODE        = @DivCode
		                                      AND OPERATION_DATE &gt;= @OperationDateFr
		                                      AND OPERATION_DATE &lt;= @OperationDateTo
		                                      AND ((ROUTE_GROUP   = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                                      AND ((ROUTE_CODE    = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		                                      AND OTHER_VEHICLE_YN = 'N'
		                                      AND NOTINSERVICE_YN  = 'N'
		                                    GROUP BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT) B ON B.COMP_CODE       = A.COMP_CODE
		                                                                                                                AND B.DIV_CODE        = A.DIV_CODE
		                                                                                                                AND B.OPERATION_DATE  = A.OPERATION_DATE
		                                                                                                                AND B.ROUTE_CODE      = A.ROUTE_CODE 
		                                                                                                                AND B.OPERATION_COUNT = A.OPERATION_COUNT 
		                       LEFT  JOIN GRT100T C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                                         AND C.DIV_CODE     = A.DIV_CODE
		                                                         AND C.ROUTE_CODE   = A.ROUTE_CODE
		                       LEFT  JOIN GVE100T D WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                                         AND D.DIV_CODE     = A.DIV_CODE
		                                                         AND D.VEHICLE_CODE = A.VEHICLE_CODE
		                       LEFT  JOIN HUM100T E WITH (NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
		                                                         AND E.DIV_CODE     = A.DIV_CODE
		                                                         AND E.PERSON_NUMB  = A.DRIVER_CODE
		                 WHERE A.COMP_CODE        = @CompCode
		                   AND A.DIV_CODE         = @DivCode
		                   AND A.OPERATION_DATE  &gt;= @OperationDateFr
		                   AND A.OPERATION_DATE  &lt;= @OperationDateTo
		                   AND ((A.ROUTE_GROUP    = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                   AND ((A.ROUTE_CODE     = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		                   AND A.OTHER_VEHICLE_YN = 'N'
		                   AND A.NOTINSERVICE_YN  = 'N') A
		               LEFT  JOIN GIF200T B WITH (NOLOCK) ON B.COMP_CODE         = A.COMP_CODE
		                                                 AND B.OPERATION_DATE    = A.OPERATION_DATE
		                                                 AND B.ROUTE_NUM         = A.ROUTE_NUM
		                                                 AND B.VEHICLE_REGIST_NO = A.VEHICLE_REGIST_NO
		                                                 AND B.RUN_COUNT         = A.REF_RUN_COUNT
		               LEFT  JOIN (SELECT COMP_CODE
		                                , OPERATION_DATE
		                                , ROUTE_NUM
		                                , VEHICLE_REGIST_NO
		                                , MIN(CONVERT(NUMERIC(10),RUN_COUNT)) AS BIS_MIN_RUN_COUNT
		                                , MAX(CONVERT(NUMERIC(10),RUN_COUNT)) AS BIS_MAX_RUN_COUNT
		                             FROM GIF200T WITH (NOLOCK)
		                            WHERE COMP_CODE        = @CompCode
		                              AND OPERATION_DATE  &gt;= @OperationDateFr
		                              AND OPERATION_DATE  &lt;= @OperationDateTo
		                              AND ISNUMERIC(RUN_COUNT) = 1
		                            GROUP BY COMP_CODE, OPERATION_DATE, ROUTE_NUM, VEHICLE_REGIST_NO) H ON H.COMP_CODE         = B.COMP_CODE
		                                                                                               AND H.OPERATION_DATE    = B.OPERATION_DATE
		                                                                                               AND H.ROUTE_NUM         = B.ROUTE_NUM 
		                                                                                               AND H.VEHICLE_REGIST_NO = B.VEHICLE_REGIST_NO 
		               LEFT  JOIN HUM100T F WITH (NOLOCK) ON F.COMP_CODE         = B.COMP_CODE
		                                                 AND F.PERSON_NUMB       = B.DRIVER_NO
		        UNION ALL        
		
		        SELECT @CompCode                    AS COMP_CODE                            /* 법인코드             */
		             , @DivCode                     AS DIV_CODE                             /* 사업장               */
		             , '3'                          AS DATA_FLAG                            /* 운행데이터비교(GO38 1:정상/2:비정상:BIS정보없음/3:비정상:승무정보없음) */ 
		             , ISNULL(D.ROUTE_GROUP,'')     AS ROUTE_GROUP                          /* 노선그룹             */
		             , ISNULL(C.ROUTE_CODE ,'')     AS ROUTE_CODE                           /* 노선코드             */
		             , B.ROUTE_NUM                                                          /* 노선번호             */
		             , ISNULL(E.VEHICLE_CODE,'')    AS VEHICLE_CODE                         /* 차량코드             */
		             , B.VEHICLE_REGIST_NO                                                  /* 차량번호             */
		             , B.OPERATION_DATE                                                     /* 운행일               */
		             , ''                           AS DRIVER_CODE                          /* 기사코드             */
		             , ''                           AS NAME                                 /* 기사명               */
		             , ISNULL(G.OPERATION_COUNT,'') AS OPERATION_COUNT                      /* 운행순번             */
		             , ''                           AS RUN_COUNT                            /* 운행회차             */
		             , ''                           AS REF_RUN_COUNT                        /* BIS기준회차          */
		             , ''                           AS RUN_SEQ_TYPE                         /* 회차구분(GO37 1:첫차/2:막차) */
		             , B.DRIVER_NO                  AS BIS_DRIVER_NO                        /* BIS:기사코드         */
		             , ISNULL(F.NAME,'')            AS BIS_DRIVER_NAME                      /* BIS:기사명           */
		             , B.RUN_COUNT                  AS BIS_RUN_COUNT                        /* BIS:운행회차         */
		             , (CASE WHEN CONVERT(NUMERIC(10),(CASE WHEN ISNULL(B.RUN_COUNT,'99') = '' THEN '99' ELSE ISNULL(B.RUN_COUNT,'99') END)) = ISNULL(H.BIS_MIN_RUN_COUNT,0) THEN '1'
		                     WHEN CONVERT(NUMERIC(10),(CASE WHEN ISNULL(B.RUN_COUNT,'99') = '' THEN '99' ELSE ISNULL(B.RUN_COUNT,'99') END)) = ISNULL(H.BIS_MAX_RUN_COUNT,0) THEN '2'
		                                                                                                                                                                     ELSE ''
		                 END) AS BIS_RUN_SEQ_TYPE                                           /* BIS:회차구분(GO37 1:첫차/2:막차) */
		             , ''                           AS DEPARTURE_DATE                       /* 출발일자             */
		             , ''                           AS DEPARTURE_TIME                       /* 출발시간             */
		             , (CASE WHEN ISNULL(B.RUN_START_TIME,'')  = ''       THEN ''
		                     WHEN ISNULL(B.RUN_START_TIME,'') &gt;= '030000' THEN B.OPERATION_DATE
		                                                                  ELSE CONVERT(VARCHAR(8), DATEADD(DAY, 1, CONVERT(DATETIME, B.OPERATION_DATE)), 112)
		                 END) AS RUN_START_DATE                                             /* 실제출발일자         */
		             , ISNULL(B.RUN_START_TIME,'')  AS RUN_START_TIME                       /* 실제출발시간         */ 
		             , '3'                          AS RUN_EVAL_TYPE                        /* 운행평가(GO39 1:정시출발/2:지연출발/3:정보없음) */
		             , 0                            AS RUN_DELAY_TIME                       /* 지연시간             */
		             , B.RUN_END_TIME               AS BIS_RUN_END_TIME                     /* BIS:도착시간         */
		             , B.RUN_DISTANCE               AS BIS_RUN_DISTANCE                     /* BIS:운행거리         */
		             , ''                           AS REMARK                               /* 비고                 */
		          FROM            GIF200T B WITH (NOLOCK)
		               LEFT  JOIN GRT100T C WITH (NOLOCK) ON C.COMP_CODE         = B.COMP_CODE
		                                                 AND C.DIV_CODE          = @DivCode
		                                                 AND C.ROUTE_NUM         = B.ROUTE_NUM
		               LEFT  JOIN GRT110T D WITH (NOLOCK) ON D.COMP_CODE         = B.COMP_CODE
		                                                 AND D.DIV_CODE          = @DivCode
		                                                 AND D.ROUTE_CODE        = C.ROUTE_CODE
		                                                 AND D.ROUTE_START_DATE &lt;= B.OPERATION_DATE
		                                                 AND D.ROUTE_END_DATE   &gt;= B.OPERATION_DATE
		               LEFT  JOIN GVE100T E WITH (NOLOCK) ON E.COMP_CODE         = B.COMP_CODE
		                                                 AND E.DIV_CODE          = @DivCode
		                                                 AND E.VEHICLE_REGIST_NO = B.VEHICLE_REGIST_NO
		               LEFT  JOIN HUM100T F WITH (NOLOCK) ON F.COMP_CODE         = B.COMP_CODE
		                                                 AND F.PERSON_NUMB       = B.DRIVER_NO
		               LEFT JOIN (SELECT A.COMP_CODE                                                /* 법인코드    */
		                               , A.DIV_CODE                                                 /* 사업장      */ 
		                               , A.OPERATION_DATE                                           /* 운행일      */
		                               , C.ROUTE_NUM                                                /* 노선번호    */
		                               , ISNULL(D.VEHICLE_REGIST_NO,'')   AS VEHICLE_REGIST_NO      /* 차량번호    */
		                               , ROW_NUMBER() OVER (PARTITION BY A.COMP_CODE, A.DIV_CODE, A.OPERATION_DATE, C.ROUTE_NUM, ISNULL(D.VEHICLE_REGIST_NO,'')
                                                    ORDER BY A.RUN_COUNT) AS REF_RUN_COUNT    /* BIS기준회차          */
		                            FROM GOP300T A WITH (NOLOCK)
		                                 INNER JOIN (SELECT COMP_CODE
		                                                  , DIV_CODE
		                                                  , OPERATION_DATE
		                                                  , ROUTE_CODE
		                                                  , OPERATION_COUNT
		                                                  , MIN(RUN_COUNT) AS MIN_RUN_COUNT
		                                                  , MAX(RUN_COUNT) AS MAX_RUN_COUNT
		                                               FROM GOP300T WITH (NOLOCK)
		                                              WHERE COMP_CODE        = @CompCode
		                                                AND DIV_CODE         = @DivCode
		                                                AND OPERATION_DATE  &gt;= @OperationDateFr
		                                                AND OPERATION_DATE  &lt;= @OperationDateTo
		                                                AND ((ROUTE_GROUP    = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                                                AND ((ROUTE_CODE     = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		                                                AND OTHER_VEHICLE_YN = 'N'
		                                                AND NOTINSERVICE_YN  = 'N'
		                                              GROUP BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT) B ON B.COMP_CODE       = A.COMP_CODE
		                                                                                                                          AND B.DIV_CODE        = A.DIV_CODE
		                                                                                                                          AND B.OPERATION_DATE  = A.OPERATION_DATE
		                                                                                                                          AND B.ROUTE_CODE      = A.ROUTE_CODE 
		                                                                                                                          AND B.OPERATION_COUNT = A.OPERATION_COUNT 
		                                 LEFT  JOIN GRT100T C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                                                   AND C.DIV_CODE     = A.DIV_CODE
		                                                                   AND C.ROUTE_CODE   = A.ROUTE_CODE
		                                 LEFT  JOIN GVE100T D WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                                                   AND D.DIV_CODE     = A.DIV_CODE
		                                                                   AND D.VEHICLE_CODE = A.VEHICLE_CODE
		                           WHERE A.COMP_CODE        = @CompCode
		                             AND A.DIV_CODE         = @DivCode
		                             AND A.OPERATION_DATE  &gt;= @OperationDateFr
		                             AND A.OPERATION_DATE  &lt;= @OperationDateTo
		                             AND ((A.ROUTE_GROUP    = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                             AND ((A.ROUTE_CODE     = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		                             AND A.OTHER_VEHICLE_YN = 'N'
		                             AND A.NOTINSERVICE_YN  = 'N') A ON A.COMP_CODE         = B.COMP_CODE
		                                                            AND A.OPERATION_DATE    = B.OPERATION_DATE
		                                                            AND A.ROUTE_NUM         = B.ROUTE_NUM
		                                                            AND A.VEHICLE_REGIST_NO = B.VEHICLE_REGIST_NO
		                                                            AND A.REF_RUN_COUNT     = B.RUN_COUNT
		               LEFT JOIN (SELECT DISTINCT
		                                 A.COMP_CODE                                                /* 법인코드 */
		                               , A.DIV_CODE                                                 /* 사업장   */
		                               , A.OPERATION_DATE                                           /* 운행일   */
		                               , C.ROUTE_NUM                                                /* 노선번호 */ 
		                               , ISNULL(D.VEHICLE_REGIST_NO,'')   AS VEHICLE_REGIST_NO      /* 차량번호 */
		                               , A.OPERATION_COUNT                                          /* 운행순번 */
		                            FROM            GOP300T A WITH (NOLOCK)
		                                 LEFT  JOIN GRT100T C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                                                   AND C.DIV_CODE     = A.DIV_CODE
		                                                                   AND C.ROUTE_CODE   = A.ROUTE_CODE
		                                 LEFT  JOIN GVE100T D WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                                                   AND D.DIV_CODE     = A.DIV_CODE
		                                                                   AND D.VEHICLE_CODE = A.VEHICLE_CODE
		                           WHERE A.COMP_CODE        = @CompCode
		                             AND A.DIV_CODE         = @DivCode
		                             AND A.OPERATION_DATE  &gt;= @OperationDateFr
		                             AND A.OPERATION_DATE  &lt;= @OperationDateTo
		                             AND ((A.ROUTE_GROUP    = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                             AND ((A.ROUTE_CODE     = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		                             AND A.OTHER_VEHICLE_YN = 'N'
		                             AND A.NOTINSERVICE_YN  = 'N') G ON G.COMP_CODE         = B.COMP_CODE
		                                                            AND G.OPERATION_DATE    = B.OPERATION_DATE
		                                                            AND G.ROUTE_NUM         = B.ROUTE_NUM
		                                                            AND G.VEHICLE_REGIST_NO = B.VEHICLE_REGIST_NO
		               LEFT  JOIN (SELECT COMP_CODE
		                                , OPERATION_DATE
		                                , ROUTE_NUM
		                                , VEHICLE_REGIST_NO
		                                , MIN(CONVERT(NUMERIC(10),RUN_COUNT)) AS BIS_MIN_RUN_COUNT
		                                , MAX(CONVERT(NUMERIC(10),RUN_COUNT)) AS BIS_MAX_RUN_COUNT
		                             FROM GIF200T WITH (NOLOCK)
		                            WHERE COMP_CODE        = @CompCode
		                              AND OPERATION_DATE  &gt;= @OperationDateFr
		                              AND OPERATION_DATE  &lt;= @OperationDateTo
		                              AND ISNUMERIC(RUN_COUNT) = 1
		                            GROUP BY COMP_CODE, OPERATION_DATE, ROUTE_NUM, VEHICLE_REGIST_NO) H ON H.COMP_CODE         = B.COMP_CODE
		                                                                                               AND H.OPERATION_DATE    = B.OPERATION_DATE
		                                                                                               AND H.ROUTE_NUM         = B.ROUTE_NUM 
		                                                                                               AND H.VEHICLE_REGIST_NO = B.VEHICLE_REGIST_NO 
		         WHERE B.COMP_CODE       = @CompCode
		           AND B.OPERATION_DATE &gt;= @OperationDateFr
		           AND B.OPERATION_DATE &lt;= @OperationDateTo
		           AND ISNULL(A.COMP_CODE,'') = '') A
		 WHERE 1 =1 
		   <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
           AND  A.ROUTE_GROUP= #{ROUTE_GROUP}
           </if>
           <if test="@foren.Ognl@isNotEmpty(ROUTE_CODE)">
           AND  A.ROUTE_CODE= #{ROUTE_CODE}
           </if>
		   <if test="@foren.Ognl@isNotEmpty(VEHICLE_CODE)">
           AND  A.VEHICLE_CODE= #{VEHICLE_CODE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DRIVER_CODE)">
           AND  A.DRIVER_CODE= #{DRIVER_CODE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DRIVER_NAME)">
           AND  A.NAME LIKE '%' + #{DRIVER_NAME} +'%'
           </if>
           <if test="@foren.Ognl@isNotEmpty(RUN_SEQ_TYPE)">
           AND  A.RUN_SEQ_TYPE= #{RUN_SEQ_TYPE}
           </if>
		   <if test="@foren.Ognl@isNotEmpty(RUN_SEQ_TYPE)">
           AND  A.RUN_SEQ_TYPE= #{RUN_SEQ_TYPE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(RUN_EVAL_TYPE)">
           AND  A.RUN_EVAL_TYPE= #{RUN_EVAL_TYPE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(DATA_FLAG)">
           AND  A.DATA_FLAG= #{DATA_FLAG}
           </if>

	</select>
	<insert id="gop400skrvServiceImpl.saveRunTime" parameterType="Map">
		INSERT INTO GWR400T
		     (	 KEY_VALUE
           		,COMP_CODE           ,DIV_CODE           ,OPERATION_DATE_FR           ,OPERATION_DATE_TO
           		,ROUTE_GROUP		 ,ROUTE_CODE		 ,WORK_USER			 )
		VALUES
		     ( #{KEY_VALUE}
		     , #{S_COMP_CODE} 		, #{DIV_CODE}   	 , #{OPERATION_START_DATE}  	 ,#{OPERATION_END_DATE}  
		     , #{B_ROUTE_GROUP}		, #{B_ROUTE_CODE}	 , #{S_USER_ID}  )
	</insert>
	<update id="gop400skrvServiceImpl.operationUpdateRunTime" parameterType="Map" statementType="CALLABLE">
		{call SP_OPERATION_UpdateRunTime  (
			#{KEY_VALUE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String} 
		)}
	 </update>
</mapper>