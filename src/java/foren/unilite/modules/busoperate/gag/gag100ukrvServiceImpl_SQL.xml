<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gag100ukrvServiceImpl">
	<select id="gag100ukrvServiceImpl.searchList" parameterType="Map" resultType="rMap">
		/* gag100ukrvServiceImpl.searchtList */
		SELECT 
			A.COMP_CODE,
			A.DIV_CODE,
			A.ROUTE_CODE,
			A.ROUTE_START_DATE,
			A.ROUTE_END_DATE,
			A.OFFICE_CODE,
			A.ROUTE_ID,
			A.OPERATION_TYPE,
			A.ROUTE_TYPE,
			A.BOUNDARY_TYPE,
			A.START_STOP,
			A.MID_STOP,
			A.LAST_STOP,
			A.APPROV_CNT,
			A.APPROV_DISTANCE,
			A.ACTUAL_CNT,
			A.ACTUAL_DISTANCE,
			A.RUN_CNT_MAX,
			A.RUN_CNT_MIN,
			A.RUN_TERM_MAX,
			A.RUN_TERM_MIN,
			A.RUN_START_TIME,
			A.RUN_LAST_TIME,
			A.REMARK,
			B.ROUTE_NUM,
			B.ROUTE_NAME,
			A.SELF_CNT,
			A.OTHER_CNT
		FROM GRT110T A
		LEFT JOIN GRT100T B ON A.COMP_CODE = B.COMP_CODE
						  AND A.DIV_CODE = B.DIV_CODE
						  AND A.ROUTE_CODE = B.ROUTE_CODE 
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND A.DIV_CODE = #{DIV_CODE}
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
		  AND A.ROUTE_GROUP = #{ROUTE_GROUP}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_CODE)">
		  AND A.ROUTE_CODE = #{ROUTE_CODE}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_NAME)">
		  AND B.ROUTE_NAME LIKE '%'+ #{ROUTE_NAME} +'%'
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(SEARCH_DATE)">
		  AND B.ROUTE_OPEN_DATE &lt;= #{SEARCH_DATE}
		  AND ISNULL(B.ROUTE_EXPIRE_DATE, '29991231')  &gt; #{SEARCH_DATE}
		  AND A.ROUTE_START_DATE &lt;= #{SEARCH_DATE}
		  AND A.ROUTE_END_DATE &gt;= #{SEARCH_DATE}
		  </if>
		  ORDER BY B.ROUTE_NUM
	</select>
	<select id="gag100ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* gag100ukrvServiceImpl.selectList */
		SELECT 
			COMP_CODE,
			DIV_CODE,
			ROUTE_CODE,
			ROUTE_START_DATE,
			ASSIGN_START_DATE,
			ASSIGN_END_DATE,
			OPERATION_TOT_COUNT,
			SELF_CNT,
			OTHER_CNT,			
			REMARK
		 FROM GAG100T 		
		WHERE COMP_CODE = #{S_COMP_CODE}
		  AND DIV_CODE = #{S_DIV_CODE}
		  AND ROUTE_CODE = #{ROUTE_CODE}
		  AND ROUTE_START_DATE = #{ROUTE_START_DATE}
		ORDER BY ASSIGN_START_DATE DESC
	</select>
	<select id="gag100ukrvServiceImpl.detailList" parameterType="Map" resultType="rMap">
		/* gag100ukrvServiceImpl.detailList */
		SELECT 
			A.COMP_CODE,
			A.DIV_CODE,
			A.ROUTE_CODE,
			A.ROUTE_START_DATE,
			A.ASSIGN_START_DATE,
			A.OPERATION_COUNT,
			A.VEHICLE_CODE,
			A.REMARK,
			B.VEHICLE_NAME,
			C.SELF_CNT,
			C.OTHER_CNT,
			A.OTHER_VEHICLE_YN
		FROM GAG110T A
		LEFT JOIN GVE100T B ON  A.COMP_CODE= B.COMP_CODE
		 					AND A.DIV_CODE = B.DIV_CODE
		 					AND A.VEHICLE_CODE = B.VEHICLE_CODE 
		LEFT JOIN GAG100T C ON  A.COMP_CODE= C.COMP_CODE
							AND A.DIV_CODE = C.DIV_CODE
							AND A.ROUTE_CODE = C.ROUTE_CODE
							AND A.ROUTE_START_DATE =  C.ROUTE_START_DATE
							AND A.ASSIGN_START_DATE = C.ASSIGN_START_DATE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND A.DIV_CODE = #{S_DIV_CODE}
		  AND A.ROUTE_CODE = #{ROUTE_CODE}
		  AND A.ROUTE_START_DATE = #{ROUTE_START_DATE}
		  AND A.ASSIGN_START_DATE = #{ASSIGN_START_DATE}
		ORDER BY CONVERT(NUMERIC(18,0), A.OPERATION_COUNT)
	</select>
	<select id="gag100ukrvServiceImpl.detailListForCash" parameterType="Map" resultType="rMap">
		/* gag100ukrvServiceImpl.detailList */
		SELECT 
			A.COMP_CODE,
			A.DIV_CODE,
			A.ROUTE_CODE,
			A.ROUTE_START_DATE,
			A.ASSIGN_START_DATE,
			A.OPERATION_COUNT,
			A.VEHICLE_CODE,
			A.REMARK,
			B.VEHICLE_NAME,
			C.SELF_CNT,
			C.OTHER_CNT,
			A.OTHER_VEHICLE_YN
		FROM GAG120T A
		LEFT JOIN GVE100T B ON  A.COMP_CODE= B.COMP_CODE
		 					AND A.DIV_CODE = B.DIV_CODE
		 					AND A.VEHICLE_CODE = B.VEHICLE_CODE 
		LEFT JOIN GAG100T C ON  A.COMP_CODE= C.COMP_CODE
							AND A.DIV_CODE = C.DIV_CODE
							AND A.ROUTE_CODE = C.ROUTE_CODE
							AND A.ROUTE_START_DATE =  C.ROUTE_START_DATE
							AND A.ASSIGN_START_DATE = C.ASSIGN_START_DATE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND A.DIV_CODE = #{S_DIV_CODE}
		  AND A.ROUTE_CODE = #{ROUTE_CODE}
		  AND A.ROUTE_START_DATE = #{ROUTE_START_DATE}
		  AND A.ASSIGN_START_DATE = #{ASSIGN_START_DATE}
		ORDER BY CONVERT(NUMERIC(18,0), A.OPERATION_COUNT)
	</select>
	<select id="gag100ukrvServiceImpl.chkPk" parameterType="Map" resultType="rMap">
		SELECT COUNT(ASSIGN_START_DATE) AS CNT
		  FROM GAG100T
		 WHERE COMP_CODE = #{COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}
		   AND ROUTE_CODE = #{ROUTE_CODE}
		   AND ROUTE_START_DATE = #{ROUTE_START_DATE}
		   AND ASSIGN_START_DATE = #{ASSIGN_START_DATE} 
	</select>
	<select id="gag100ukrvServiceImpl.insert"  parameterType="Map" resultType="rMap">
		DECLARE @ASSIGN_START_DATE NVARCHAR(8)

		SELECT @ASSIGN_START_DATE = MAX(ASSIGN_START_DATE) 
		  FROM GAG100T		
		 WHERE COMP_CODE = #{COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}
		   AND ROUTE_CODE = #{ROUTE_CODE}
		   AND ROUTE_START_DATE = #{ROUTE_START_DATE}
		   
		IF (@ASSIGN_START_DATE IS NOT NULL)
		BEGIN	  	
		UPDATE GAG100T
		   SET ASSIGN_END_DATE = CONVERT(NVARCHAR(8),DATEADD(DD, -1, CONVERT(DATETIME, #{ASSIGN_START_DATE})), 112)		
		 WHERE COMP_CODE = #{COMP_CODE}
		   AND DIV_CODE = #{DIV_CODE}
		   AND ROUTE_CODE = #{ROUTE_CODE}
		   AND ROUTE_START_DATE = #{ROUTE_START_DATE}
		   AND ASSIGN_START_DATE = @ASSIGN_START_DATE
		END
		
		INSERT INTO GAG100T	
		(
			COMP_CODE,
			DIV_CODE,
			ROUTE_CODE,
			ROUTE_START_DATE,
			ASSIGN_START_DATE,
			<if test="@foren.Ognl@isNotEmpty(ASSIGN_END_DATE)">
			ASSIGN_END_DATE,
			</if>
			OPERATION_TOT_COUNT,
			SELF_CNT,
			OTHER_CNT,
			REMARK,			
			INSERT_DB_USER,
			INSERT_DB_TIME,
			UPDATE_DB_USER,
			UPDATE_DB_TIME
		)
		VALUES
		(
			#{COMP_CODE},
			#{DIV_CODE},
			#{ROUTE_CODE},
			#{ROUTE_START_DATE},
			#{ASSIGN_START_DATE},
			<if test="@foren.Ognl@isNotEmpty(ASSIGN_END_DATE)">
			#{ASSIGN_END_DATE},
			</if>
			#{OPERATION_TOT_COUNT},
			#{SELF_CNT},
			#{OTHER_CNT},
			#{REMARK},
			#{S_USER_ID},
			GETDATE(),
			#{S_USER_ID},
			GETDATE()
		)
		SELECT @ASSIGN_START_DATE AS P_ASSIGN_START_DATE
	</select>
	
	<update id="gag100ukrvServiceImpl.update" parameterType="Map">
		/* gag100ukrvServiceImpl.update */
		UPDATE GAG100T
		SET  
			ASSIGN_END_DATE = #{ASSIGN_END_DATE},
			REMARK = #{REMARK},
			UPDATE_DB_USER = #{S_USER_ID},
			UPDATE_DB_TIME = GETDATE()
		WHERE COMP_CODE = #{S_COMP_CODE}
		  AND DIV_CODE = #{DIV_CODE}
		  AND ROUTE_CODE = #{ROUTE_CODE}
		  AND ROUTE_START_DATE = #{ROUTE_START_DATE}
		  AND ASSIGN_START_DATE = #{ASSIGN_START_DATE}
	</update>
	<delete id="gag100ukrvServiceImpl.delete" parameterType="Map">
		DELETE FROM GAG110T
		WHERE COMP_CODE = #{S_COMP_CODE}
		  AND DIV_CODE = #{S_DIV_CODE}
		  AND ROUTE_CODE = #{ROUTE_CODE}
		  AND ROUTE_START_DATE = #{ROUTE_START_DATE}
		  AND ASSIGN_START_DATE = #{ASSIGN_START_DATE}
		
		DELETE FROM GAG120T
		WHERE COMP_CODE = #{S_COMP_CODE}
		  AND DIV_CODE = #{S_DIV_CODE}
		  AND ROUTE_CODE = #{ROUTE_CODE}
		  AND ROUTE_START_DATE = #{ROUTE_START_DATE}
		  AND ASSIGN_START_DATE = #{ASSIGN_START_DATE}
		    
		DELETE FROM GAG100T
		WHERE COMP_CODE = #{S_COMP_CODE}
		  AND DIV_CODE = #{S_DIV_CODE}
		  AND ROUTE_CODE = #{ROUTE_CODE}
		  AND ROUTE_START_DATE = #{ROUTE_START_DATE}
		  AND ASSIGN_START_DATE = #{ASSIGN_START_DATE}
		
	</delete>
	<insert id="gag100ukrvServiceImpl.insertDetail"  parameterType="Map">

		
		INSERT INTO GAG110T	
		(
			COMP_CODE,
			DIV_CODE,
			ROUTE_CODE,
			ROUTE_START_DATE,
			ASSIGN_START_DATE,
			OPERATION_COUNT,
			VEHICLE_CODE,
			OTHER_VEHICLE_YN,
			REMARK,			
			INSERT_DB_USER,
			INSERT_DB_TIME,
			UPDATE_DB_USER,
			UPDATE_DB_TIME
		)
		VALUES
		(
			#{COMP_CODE},
			#{DIV_CODE},
			#{ROUTE_CODE},
			#{ROUTE_START_DATE},
			#{ASSIGN_START_DATE},
			#{OPERATION_COUNT},
			#{VEHICLE_CODE},
			#{OTHER_VEHICLE_YN},
			#{REMARK},
			#{S_USER_ID},
			GETDATE(),
			#{S_USER_ID},
			GETDATE()
		)
	</insert>
	<update id="gag100ukrvServiceImpl.updateDetailDefaults"  parameterType="Map">
		UPDATE A
		   SET 	A.VEHICLE_CODE = B.VEHICLE_CODE
		  FROM GAG110T A
		  LEFT JOIN (
			SELECT COMP_CODE
				, DIV_CODE
				, ROUTE_CODE
				, ROUTE_START_DATE
				, ASSIGN_START_DATE
				, VEHICLE_CODE 
				, OPERATION_COUNT
			FROM GAG110T 
			WHERE COMP_CODE	= #{COMP_CODE}
			  AND DIV_CODE	= #{DIV_CODE}
			  AND ROUTE_CODE = #{ROUTE_CODE}
			  AND ROUTE_START_DATE = #{ROUTE_START_DATE}
			  AND ASSIGN_START_DATE = #{P_ASSIGN_START_DATE}
			  AND OTHER_VEHICLE_YN = 'N'		) B ON  B.COMP_CODE			= A.COMP_CODE
													AND B.DIV_CODE			= A.DIV_CODE
													AND B.ROUTE_CODE		= A.ROUTE_CODE
													AND B.ROUTE_START_DATE	= A.ROUTE_START_DATE
													AND B.OPERATION_COUNT	= A.OPERATION_COUNT
		WHERE A.COMP_CODE	= #{COMP_CODE}
		  AND A.DIV_CODE	= #{DIV_CODE}
		  AND A.ROUTE_CODE = #{ROUTE_CODE}
		  AND A.ROUTE_START_DATE = #{ROUTE_START_DATE}
		  AND A.ASSIGN_START_DATE = #{ASSIGN_START_DATE}
		  AND A.OTHER_VEHICLE_YN = 'N'
		  
		INSERT INTO GAG120T	
		(
			COMP_CODE,
			DIV_CODE,
			ROUTE_CODE,
			ROUTE_START_DATE,
			ASSIGN_START_DATE,
			OPERATION_COUNT,
			VEHICLE_CODE,
			OTHER_VEHICLE_YN,
			REMARK,			
			INSERT_DB_USER,
			INSERT_DB_TIME,
			UPDATE_DB_USER,
			UPDATE_DB_TIME
		)
		SELECT COMP_CODE
				, DIV_CODE
				, ROUTE_CODE
				, ROUTE_START_DATE
				, #{ASSIGN_START_DATE}
				, OPERATION_COUNT
				, VEHICLE_CODE 
				, OTHER_VEHICLE_YN
				, REMARK
				, #{S_USER_ID}
				, GETDATE()
				, #{S_USER_ID}
				, GETDATE()
			FROM GAG120T 
			WHERE COMP_CODE	= #{COMP_CODE}
			  AND DIV_CODE	= #{DIV_CODE}
			  AND ROUTE_CODE = #{ROUTE_CODE}
			  AND ROUTE_START_DATE = #{ROUTE_START_DATE}
			  AND ASSIGN_START_DATE = #{P_ASSIGN_START_DATE}
	
	</update>
	<update id="gag100ukrvServiceImpl.updateDetail" parameterType="Map">
		/* gag100ukrvServiceImpl.updateDetail */
		UPDATE GAG110T
		SET  
			VEHICLE_CODE = #{VEHICLE_CODE},
			OTHER_VEHICLE_YN = #{OTHER_VEHICLE_YN},
			REMARK = #{REMARK},
			UPDATE_DB_USER = #{S_USER_ID},
			UPDATE_DB_TIME = GETDATE()
		WHERE COMP_CODE = #{S_COMP_CODE}
		  AND DIV_CODE = #{S_DIV_CODE}
		  AND ROUTE_CODE = #{ROUTE_CODE}
		  AND ROUTE_START_DATE = #{ROUTE_START_DATE}
		  AND ASSIGN_START_DATE = #{ASSIGN_START_DATE}
		  AND OPERATION_COUNT = #{OPERATION_COUNT}
	</update>
	<insert id="gag100ukrvServiceImpl.insertDetailForCash"  parameterType="Map">
		/*gag100ukrvServiceImpl.insertDetailForCash*/
		
		INSERT INTO GAG120T	
		(
			COMP_CODE,
			DIV_CODE,
			ROUTE_CODE,
			ROUTE_START_DATE,
			ASSIGN_START_DATE,
			OPERATION_COUNT,
			VEHICLE_CODE,
			OTHER_VEHICLE_YN,
			REMARK,			
			INSERT_DB_USER,
			INSERT_DB_TIME,
			UPDATE_DB_USER,
			UPDATE_DB_TIME
		)
		VALUES
		(
			#{COMP_CODE},
			#{DIV_CODE},
			#{ROUTE_CODE},
			#{ROUTE_START_DATE},
			#{ASSIGN_START_DATE},
			#{OPERATION_COUNT},
			#{VEHICLE_CODE},
			#{OTHER_VEHICLE_YN},
			#{REMARK},
			#{S_USER_ID},
			GETDATE(),
			#{S_USER_ID},
			GETDATE()
		)
	</insert>
	<update id="gag100ukrvServiceImpl.updateDetailForCash" parameterType="Map">
		/* gag100ukrvServiceImpl.updateDetailForCash */
		UPDATE GAG120T
		SET  
			VEHICLE_CODE = #{VEHICLE_CODE},
			OTHER_VEHICLE_YN = #{OTHER_VEHICLE_YN},
			REMARK = #{REMARK},
			UPDATE_DB_USER = #{S_USER_ID},
			UPDATE_DB_TIME = GETDATE()
		WHERE COMP_CODE = #{S_COMP_CODE}
		  AND DIV_CODE = #{S_DIV_CODE}
		  AND ROUTE_CODE = #{ROUTE_CODE}
		  AND ROUTE_START_DATE = #{ROUTE_START_DATE}
		  AND ASSIGN_START_DATE = #{ASSIGN_START_DATE}
		  AND OPERATION_COUNT = #{OPERATION_COUNT}
	</update>
		<delete id="gag100ukrvServiceImpl.deleteDetailForCash" parameterType="Map">
		
		DELETE FROM GAG120T
		WHERE COMP_CODE = #{S_COMP_CODE}
		  AND DIV_CODE = #{S_DIV_CODE}
		  AND ROUTE_CODE = #{ROUTE_CODE}
		  AND ROUTE_START_DATE = #{ROUTE_START_DATE}
		  AND ASSIGN_START_DATE = #{ASSIGN_START_DATE}
		  AND OPERATION_COUNT	= #{OPERATION_COUNT}
		
	</delete>
</mapper>