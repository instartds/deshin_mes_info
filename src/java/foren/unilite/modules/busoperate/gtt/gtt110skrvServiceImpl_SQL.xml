<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gtt110skrvServiceImpl">
	<select id="gtt110skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		
		/* gtt110skrvServiceImpl.selectList */
		DECLARE @SDATE NVARCHAR(10),
				@EDATE NVARCHAR(10),
				@FIRST_DATE NVARCHAR(2),
				@CAL_LAST_MONTH INT,
				@LAST_DAY_OF_MONTH NVARCHAR(2),
				
				@OPERATION_MONTH_FR NVARCHAR(6),
				@OPERATION_MONTH_TO NVARCHAR(6)
				
		SET @FIRST_DATE = #{FIRST_DATE}
		SET @OPERATION_MONTH_FR= #{OPERATION_MONTH_FR}
		SET @OPERATION_MONTH_TO= #{OPERATION_MONTH_TO}
		
		IF @FIRST_DATE = '01'
		BEGIN 
			SET @CAL_LAST_MONTH=DATEDIFF(D,CONVERT(DATETIME,@OPERATION_MONTH_TO+'01',112), DATEADD(D, -1, DATEADD(M, 1,CONVERT(DATETIME,@OPERATION_MONTH_TO+'01',112))))
			SET @SDATE=CONVERT(NVARCHAR(8),  DATEADD(M, 0, CONVERT(DATETIME,@OPERATION_MONTH_FR+'01',112)),120 )+@FIRST_DATE
			SET @EDATE = CONVERT(NVARCHAR(10), DATEADD(d, @CAL_LAST_MONTH, CONVERT(DATETIME,@OPERATION_MONTH_TO+@FIRST_DATE,112)) ,120 )
		END
		ELSE 
		BEGIN
			SET @SDATE=CONVERT(NVARCHAR(8),  DATEADD(M, -1, CONVERT(DATETIME,@OPERATION_MONTH_FR+'01',112)),120 )+@FIRST_DATE
			IF ISDATE(@SDATE)=0
				SET @SDATE=CONVERT(NVARCHAR(10), CONVERT(DATETIME,@OPERATION_MONTH_FR+'01',112),120 )
				
			IF ISDATE(@OPERATION_MONTH_TO+@FIRST_DATE)=1
				SET @EDATE = CONVERT(NVARCHAR(10), DATEADD(d, -1, CONVERT(DATETIME,@OPERATION_MONTH_TO+@FIRST_DATE,112)) ,120 )
			ELSE 
				SET @EDATE = CONVERT(NVARCHAR(10), DATEADD(D, -1, DATEADD(M, 1,CONVERT(DATETIME,@OPERATION_MONTH_TO+'01',112))) ,120 )
		END
		
		
		SELECT PERSON_NUMB
			  ,REPLACE(ATT_DATE,'-','') AS ATT_DATE
			  ,IN_TIME
			  ,OUT_TIME
		INTO #AttTimeBusV 
		FROM AttTimeBusV
		WHERE ATT_DATE BETWEEN @SDATE AND @EDATE
		
		SELECT  LEFT(OPERATION_MONTH,4)+'.'+RIGHT(OPERATION_MONTH,2) AS OPERATION_MONTH,
				ROUTE_CODE, 
				ROUTE_NUM,
				VEHICLE_CODE,
				VEHICLE_NAME,
				VEHICLE_REGIST_NO,
				DRIVER_CODE,
				DRIVER_NAME,
				COUNT(OPERATION_DATE) AS DATE_CNT,	
				SUM(CASE WHEN A.IN_TIME IS NOT NULL AND A.OUT_TIME IS NOT NULL THEN 1 ELSE 0 END) AS TAG_CNT, 
				SUM(CASE WHEN A.IN_TIME IS NULL THEN 1 ELSE 0 END) AS NO_TAG_IN_CNT, 
				SUM(CASE WHEN A.OUT_TIME IS NULL THEN 1 ELSE 0 END) AS NO_TAG_OUT_CNT, 
				SUM(CASE WHEN A.IN_TIME IS NULL AND A.OUT_TIME IS NULL THEN 1 ELSE 0 END) AS NO_TAG_CNT,			
				SUM(DIFF_FR) AS DIFF_FR ,
				SUM(DIFF_TO)  AS DIFF_TO,
				DRIVER_CNT,
				ROUTE_CNT,
				VEHICLE_CNT,
				OPERATION_DATE_CNT,
				SUM(SUM(DIFF_FR)) OVER() AS LATE_CNT,
				SUM(SUM(DIFF_TO)) OVER() AS EARLY_CNT,
				SUM(CASE WHEN 		A.CONFIRM_YN = 'Y' 
						  		AND A.IN_TIME IS NOT NULL 
						  		AND A.OUT_TIME IS NOT NULL 
						 THEN 1 
						 ELSE 0 
				END) AS OP_DATE_CNT_CONFIRM_Y,
				SUM(CASE WHEN 		A.CONFIRM_YN = 'N' 
								AND A.IN_TIME IS NOT NULL 
								AND A.OUT_TIME IS NOT NULL 
						 THEN 1 
						 ELSE 0 
				END) AS OP_DATE_CNT_CONFIRM_N,
				SUM(CASE WHEN A.CONFIRM_YN = 'Y' AND DIFF_FR = 1 THEN 1 ELSE 0 END) AS LATE_CNT_CONFIRM_Y,
				SUM(CASE WHEN A.CONFIRM_YN = 'N' AND DIFF_FR = 1 THEN 1 ELSE 0 END) AS LATE_CNT_CONFIRM_N,
				SUM(CASE WHEN A.CONFIRM_YN = 'Y' AND DIFF_TO = 1 THEN 1 ELSE 0 END) AS EARLY_CNT_CONFIRM_Y,
				SUM(CASE WHEN A.CONFIRM_YN = 'N' AND DIFF_TO = 1 THEN 1 ELSE 0 END) AS EARLY_CNT_CONFIRM_N
		FROM (
		SELECT	
				CASE WHEN O.OPERATION_DATE >= LEFT(O.OPERATION_DATE,6)+@FIRST_DATE AND @FIRST_DATE !='01' THEN CONVERT(NVARCHAR(6),DATEADD(MONTH,1, CONVERT(DATETIME,O.OPERATION_DATE,112)),112)
					 ELSE LEFT(O.OPERATION_DATE,6)
				END AS OPERATION_MONTH,
				O.ROUTE_CODE, 
				R.ROUTE_NUM,
				O.VEHICLE_CODE,
				V.VEHICLE_NAME,
				V.VEHICLE_REGIST_NO,
				O.DRIVER_CODE,
				H1.NAME AS DRIVER_NAME,
				OPERATION_DATE,
				G.IN_TIME,
				G.OUT_TIME,
				CASE WHEN DATEDIFF(MINUTE,
						 G.IN_TIME,
						 CONVERT(DATETIME, ISNULL(DUTY_FR_DATE, O.OPERATION_DATE)+' '+DUTY_FR_TIME, 114)
						 ) &lt; 0 THEN 1
					 ELSE 0
				END AS DIFF_FR 
						 ,
				CASE WHEN DATEDIFF(MINUTE,
						 CONVERT(DATETIME, ISNULL(DUTY_TO_DATE, O.OPERATION_DATE)+' '+DUTY_TO_TIME, 114),
						 G.OUT_TIME
						 ) &lt; 0 THEN 1
					 ELSE 0
				END  AS DIFF_TO,
				S.DRIVER_CNT,
				S.ROUTE_CNT,
				S.VEHICLE_CNT,
				S.OPERATION_DATE_CNT,
				O.CONFIRM_YN
		FROM (SELECT A.COMP_CODE,
					 A.DIV_CODE,
					 A.OPERATION_DATE, 
					 A.OPERATION_COUNT, 
					 A.ROUTE_CODE, 
					 A.VEHICLE_CODE,
					 A.DRIVER_CODE,   
					  MIN(DUTY_FR_DATE) AS DUTY_FR_DATE,
					 CASE WHEN ISNULL(MIN(DUTY_FR_TIME),'') != '' 	THEN left(MIN(DUTY_FR_TIME), 2)+':'+SUBSTRING(MIN(DUTY_FR_TIME),3,2)+':'+ (CASE WHEN LEN(MIN(DUTY_FR_TIME))= 6 THEN SUBSTRING(MIN(DUTY_FR_TIME),5,2) ELSE '00' END)  ELSE '' END AS DUTY_FR_TIME, 
							  
					 MAX(DUTY_TO_DATE) AS DUTY_TO_DATE,
					 CASE WHEN ISNULL(MAX(DUTY_TO_TIME),'') != '' 	THEN left(MAX(DUTY_TO_TIME), 2)+':'+SUBSTRING(MAX(DUTY_TO_TIME),3,2)+':'+ (CASE WHEN LEN(MAX(DUTY_TO_TIME))= 6 THEN SUBSTRING(MAX(DUTY_TO_TIME),5,2) ELSE '00' END)  ELSE '' END AS DUTY_TO_TIME, 
					 CONFIRM_YN
				FROM GOP300T  A
				INNER JOIN (
					SELECT COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT,  RUN_COUNT
					FROM (
						SELECT COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT, RUN_COUNT,NOTINSERVICE_YN,
						RANK() OVER(PARTITION BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT ORDER BY CONVERT(NUMERIC(10,0),RUN_COUNT) DESC )  AS RNK						
						FROM GOP300T
						WHERE COMP_CODE = #{S_COMP_CODE}
						  AND DIV_CODE = #{DIV_CODE}
						  AND OPERATION_DATE &gt;= REPLACE(@SDATE,'-','')
						  AND OPERATION_DATE &lt;= REPLACE(@EDATE,'-','')
						  AND OTHER_VEHICLE_YN != 'Y'
					) L
					WHERE RNK =1
					  AND NOTINSERVICE_YN != 'Y'
				  )	B	ON  B.COMP_CODE = A.COMP_CODE
						AND B.DIV_CODE = A.DIV_CODE
						AND B.OPERATION_DATE = A.OPERATION_DATE
						AND B.ROUTE_CODE = A.ROUTE_CODE
						AND B.OPERATION_COUNT = A.OPERATION_COUNT
						AND B.RUN_COUNT = A.RUN_COUNT
				WHERE A.COMP_CODE = #{S_COMP_CODE}
				  AND A.DIV_CODE = #{DIV_CODE}
				  AND A.OPERATION_DATE &gt;= REPLACE(@SDATE,'-','')
				  AND A.OPERATION_DATE &lt;= REPLACE(@EDATE,'-','')
				  AND A.NOTINSERVICE_YN != 'Y'
				  AND A.OTHER_VEHICLE_YN != 'Y'
				  <if test="@foren.Ognl@isNotEmpty(DRIVER_CODE)">
				  AND A.DRIVER_CODE = #{DRIVER_CODE}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
				  AND A.ROUTE_GROUP = #{ROUTE_GROUP}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(ROUTE_CODE)">
				  AND A.ROUTE_CODE = #{ROUTE_CODE}
				  </if>	
				  <if test="@foren.Ognl@isNotEmpty(VEHICLE_CODE)">
				  AND A.VEHICLE_CODE = #{VEHICLE_CODE}
				  </if> 
				   
				GROUP BY A.COMP_CODE,
					 A.DIV_CODE,
					 A.OPERATION_DATE, 
					 A.OPERATION_COUNT, 
					 A.ROUTE_CODE, 
					 A.VEHICLE_CODE,
					 A.DRIVER_CODE,
					 A.CONFIRM_YN
			 ) O 
		LEFT JOIN #AttTimeBusV  G ON O.DRIVER_CODE = G.PERSON_NUMB
								 AND O.OPERATION_DATE = G.ATT_DATE
		LEFT JOIN HUM100T H1 ON  O.COMP_CODE = H1.COMP_CODE
							 AND O.DIV_CODE = H1.DIV_CODE
							 AND O.DRIVER_CODE = H1.PERSON_NUMB
		LEFT JOIN GRT100T R 
							  ON O.COMP_CODE = R.COMP_CODE
							 AND O.DIV_CODE = R.DIV_CODE
							 AND O.ROUTE_CODE = R.ROUTE_CODE
		LEFT JOIN GVE100T V   ON  O.COMP_CODE = V.COMP_CODE
							 AND O.DIV_CODE = V.DIV_CODE
							 AND O.VEHICLE_CODE = V.VEHICLE_CODE
		LEFT JOIN (
				SELECT 	COMP_CODE,
					 	DIV_CODE,
					  	COUNT(DISTINCT DRIVER_CODE) AS DRIVER_CNT,
						COUNT(DISTINCT ROUTE_CODE) AS ROUTE_CNT,
						COUNT(DISTINCT VEHICLE_CODE) AS VEHICLE_CNT,
						COUNT(DISTINCT OPERATION_DATE) AS OPERATION_DATE_CNT
				FROM GOP300T 
				WHERE COMP_CODE = #{S_COMP_CODE}
				  AND DIV_CODE = #{DIV_CODE}
				  AND OPERATION_DATE &gt;= REPLACE(@SDATE,'-','')
				  AND OPERATION_DATE &lt;= REPLACE(@EDATE,'-','')
				  <if test="@foren.Ognl@isNotEmpty(DRIVER_CODE)">
				  AND DRIVER_CODE = #{DRIVER_CODE}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(WORK_TEAM_CODE)">
				  AND WORK_TEAM_CODE = #{WORK_TEAM_CODE}
				  </if>	
				  <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
				  AND ROUTE_GROUP = #{ROUTE_GROUP}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(ROUTE_CODE)">
				  AND ROUTE_CODE = #{ROUTE_CODE}
				  </if>	
				  <if test="@foren.Ognl@isNotEmpty(VEHICLE_CODE)">
				  AND VEHICLE_CODE = #{VEHICLE_CODE}
				  </if>
				  <if test="SEARCH_KIND == '02'">
				  AND ISNULL(DRIVER_CODE, '') != ''
				  </if>	  
				  
				  GROUP BY COMP_CODE,DIV_CODE
				  ) S ON O.COMP_CODE =S.COMP_CODE
				      AND O.DIV_CODE=S.DIV_CODE
		WHERE O.COMP_CODE = #{S_COMP_CODE}
		  AND O.DIV_CODE = #{DIV_CODE}
		  <if test="@foren.Ognl@isNotEmpty(DRIVER_NAME)">
		  AND H1.NAME LIKE '%' + #{DRIVER_NAME} +'%'
		  </if>
		  <if test="SEARCH_KIND == '01'">
			  AND DATEDIFF(MINUTE,
							 G.IN_TIME,
							 CONVERT(DATETIME, ISNULL(DUTY_FR_DATE, O.OPERATION_DATE)+' '+DUTY_FR_TIME, 114)
							 )  &lt; 0 
		  </if>
		  ) AS A
		 GROUP BY OPERATION_MONTH,
				ROUTE_CODE, 
				ROUTE_NUM,
				VEHICLE_CODE,
				VEHICLE_NAME,
				VEHICLE_REGIST_NO,
				DRIVER_CODE,
				DRIVER_NAME,
				DRIVER_CNT,
				ROUTE_CNT,
				VEHICLE_CNT,
				OPERATION_DATE_CNT
		  ORDER BY OPERATION_MONTH, ROUTE_NUM, DRIVER_NAME
	</select>
</mapper>