<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gtt400skrvServiceImpl">
	<select id="gtt400skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* gtt400skrvServiceImpl.selectList */
		DECLARE @SDATE NVARCHAR(10),
				@EDATE NVARCHAR(10)
		SELECT @SDATE=CONVERT(NVARCHAR(10), CONVERT(DATETIME,#{ATT_DATE_FR},112),120 ),@EDATE=CONVERT(NVARCHAR(10), CONVERT(DATETIME,#{ATT_DATE_TO},112),120 )
	
		SELECT 
		       PERSON_NUMB
		     , REPLACE(ATT_DATE,'-','') AS ATT_DATE
		     , IN_TIME
		     , OUT_TIME 
		     , CARD_IN_TIME
		     , CARD_OUT_TIME
		     , FP_IN_TIME
		     , FP_OUT_TIME
		  INTO #AttTimeBusV
		  FROM AttTimeBusV
		 WHERE ATT_DATE BETWEEN @SDATE AND @EDATE
		
		(
		SELECT			
				  O.OPERATION_DATE
				, H2.EMP_DIV
				, O.DRIVER_CODE AS PERSON_NUMB
				, H1.NAME 
				, H1.OFFICE_CODE
				, CONVERT(NVARCHAR(8), G.IN_TIME, 114) AS IN_TIME
				, CONVERT(NVARCHAR(8), G.OUT_TIME, 114) AS OUT_TIME
				, CONVERT(NVARCHAR(8), G.CARD_IN_TIME, 114) AS CARD_IN_TIME 
				, CONVERT(NVARCHAR(8), G.CARD_OUT_TIME, 114) AS CARD_OUT_TIME 
				, CONVERT(NVARCHAR(8), G.FP_IN_TIME, 114) AS FP_IN_TIME
				, CONVERT(NVARCHAR(8), G.FP_OUT_TIME, 114) AS FP_OUT_TIME
				, CASE WHEN G.IN_TIME IS NULL OR G.OUT_TIME IS NULL THEN 0 ELSE  1 END AS DATE_CNT
				, (S.DRIVER_CNT - S.NO_DRIVER_CNT - S.NO_TAG_IN_CNT )  AS TAG_IN_CNT
				, (S.DRIVER_CNT - S.NO_DRIVER_CNT - S.NO_TAG_OUT_CNT)  AS TAG_OUT_CNT
				, S.NO_TAG_IN_CNT
				, S.NO_TAG_OUT_CNT
				, (S.DRIVER_CNT - S.NO_DRIVER_CNT - S.NO_TAG_CNT)  AS TAG_CNT
				, S.NO_TAG_CNT
				, O.DUTY_FR_TIME
				, O.DUTY_TO_TIME
				, DATEDIFF(MINUTE,
						 G.IN_TIME,
						 CONVERT(DATETIME, ISNULL(DUTY_FR_DATE, O.OPERATION_DATE)+' '+DUTY_FR_TIME, 114)
						 ) AS DIFF_FR 
						 
				, DATEDIFF(MINUTE,
						 CONVERT(DATETIME, ISNULL(DUTY_TO_DATE, O.OPERATION_DATE)+' '+DUTY_TO_TIME, 114),
						 G.OUT_TIME
						 ) AS DIFF_TO
				 
				, O.WORK_TEAM_CODE 
				, O.ROUTE_CODE 
				, R.ROUTE_NUM
				, O.VEHICLE_CODE
				, V.VEHICLE_NAME
				, V.VEHICLE_REGIST_NO
				, O.OPERATION_COUNT
				, SUM(CASE WHEN DATEDIFF(MINUTE,
						 G.IN_TIME,
						 CONVERT(DATETIME, ISNULL(DUTY_FR_DATE, O.OPERATION_DATE)+' '+DUTY_FR_TIME, 114)
						 ) &lt; 0 THEN 1 ELSE 0 END ) OVER() AS LATE_CNT
				, SUM(CASE WHEN DATEDIFF(MINUTE,
						 CONVERT(DATETIME, ISNULL(DUTY_TO_DATE, O.OPERATION_DATE)+' '+DUTY_TO_TIME, 114),
						 G.OUT_TIME
						 ) &lt; 0 THEN 1 ELSE 0 END ) OVER() AS EARLY_CNT  
				, O.CONFIRM_YN
				, (S.DRIVER_CNT - S.NO_DRIVER_CNT) AS ASSIGNED_DRIVER_CNT
				, S.NO_DRIVER_CNT
				
		FROM (SELECT GOP.COMP_CODE,
					 GOP.DIV_CODE,
					 GOP.OPERATION_DATE, 
					 GOP.OPERATION_COUNT, 
					 MIN(GOP.RUN_COUNT) AS RUN_COUNT,
					 COUNT(GOP.RUN_COUNT) AS RUN_COUNT_CNT,
					 GOP.ROUTE_CODE, 
					 VEHICLE_CODE,
					 DRIVER_CODE,   
					 WORK_TEAM_CODE,
					 CASE WHEN DRIVER_CODE != PLAN_DRIVER_CODE THEN PLAN_DRIVER_CODE ELSE '' END ORG_DRIVER_CODE,
					  MIN(DUTY_FR_DATE) AS DUTY_FR_DATE,
					 CASE WHEN ISNULL(MIN(DUTY_FR_TIME),'') != '' 	THEN left(MIN(DUTY_FR_TIME), 2)+':'+SUBSTRING(MIN(DUTY_FR_TIME),3,2)+':'+ (CASE WHEN LEN(MIN(DUTY_FR_TIME))= 6 THEN SUBSTRING(MIN(DUTY_FR_TIME),5,2) ELSE '00' END)  ELSE '' END AS DUTY_FR_TIME, 
							  
					 MAX(DUTY_TO_DATE) AS DUTY_TO_DATE,
					 CASE WHEN ISNULL(MAX(DUTY_TO_TIME),'') != '' 	THEN left(MAX(DUTY_TO_TIME), 2)+':'+SUBSTRING(MAX(DUTY_TO_TIME),3,2)+':'+ (CASE WHEN LEN(MAX(DUTY_TO_TIME))= 6 THEN SUBSTRING(MAX(DUTY_TO_TIME),5,2) ELSE '00' END)  ELSE '' END AS DUTY_TO_TIME ,
					 GOP.CONFIRM_YN
				FROM GOP300T GOP
				INNER JOIN (
					SELECT COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT,  CONVERT(NVARCHAR(20), MAX(CONVERT(NUMERIC(10,0), RUN_COUNT ))) AS RUN_COUNT
					FROM GOP300T
					WHERE COMP_CODE = #{S_COMP_CODE}
					  AND DIV_CODE = #{DIV_CODE}
					  AND OPERATION_DATE &gt;= #{ATT_DATE_FR}
					  AND OPERATION_DATE &lt;= #{ATT_DATE_TO}
					  AND NOTINSERVICE_YN != 'Y'
					  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
					  AND DRIVER_CODE = #{PERSON_NUMB}
					  </if>
					  GROUP BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT
				) MO  ON GOP.COMP_CODE = MO.COMP_CODE
					 AND GOP.DIV_CODE = MO.DIV_CODE
					 AND GOP.OPERATION_DATE = MO.OPERATION_DATE
					 AND GOP.ROUTE_CODE = MO.ROUTE_CODE
					 AND GOP.OPERATION_COUNT = MO.OPERATION_COUNT
					 AND GOP.RUN_COUNT = MO.RUN_COUNT
				WHERE GOP.COMP_CODE = #{S_COMP_CODE}
				  AND GOP.DIV_CODE = #{DIV_CODE}
				  AND GOP.OPERATION_DATE &gt;= #{ATT_DATE_FR}
				  AND GOP.OPERATION_DATE &lt;= #{ATT_DATE_TO}
				  AND GOP.NOTINSERVICE_YN != 'Y'
				  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				  AND GOP.DRIVER_CODE = #{PERSON_NUMB}
				  </if>
				GROUP BY GOP.COMP_CODE,
					 GOP.DIV_CODE,
					 GOP.OPERATION_DATE, 
					 GOP.OPERATION_COUNT, 
					 GOP.ROUTE_CODE, 
					 GOP.VEHICLE_CODE,
					 GOP.DRIVER_CODE,   
					 GOP.WORK_TEAM_CODE,
					 GOP.PLAN_DRIVER_CODE,
					 GOP.CONFIRM_YN
			 ) O 
		LEFT JOIN #AttTimeBusV G ON O.DRIVER_CODE = G.PERSON_NUMB
								 AND O.OPERATION_DATE = G.ATT_DATE
		LEFT JOIN HUM100T H1 ON  O.COMP_CODE = H1.COMP_CODE
							 AND O.DIV_CODE = H1.DIV_CODE
							 AND O.DRIVER_CODE = H1.PERSON_NUMB
		LEFT JOIN (
			  SELECT B1.COMP_CODE, B1.SUB_CODE AS EMP_DIV, B2.SUB_CODE AS EMPLOY_TYPE
				FROM (
					SELECT COMP_CODE, SUB_CODE 
					  FROM BSA100T 
					 WHERE COMP_CODE=#{S_COMP_CODE} 
					   AND MAIN_CODE='H181') B1
				LEFT JOIN (
					SELECT COMP_CODE, SUB_CODE, REF_CODE1 
					  FROM BSA100T 
					 WHERE COMP_CODE=#{S_COMP_CODE}  
					   AND MAIN_CODE='H024') B2 
												ON B2.COMP_CODE = B1.COMP_CODE
												AND B2.REF_CODE1 = B1.SUB_CODE
		
						 ) H2 ON  H2.COMP_CODE = H1.COMP_CODE
							 AND  H2.EMPLOY_TYPE = H1.EMPLOY_TYPE
		LEFT JOIN GRT100T R   ON O.COMP_CODE = R.COMP_CODE
							 AND O.DIV_CODE = R.DIV_CODE
							 AND O.ROUTE_CODE = R.ROUTE_CODE
		LEFT JOIN GVE100T V   ON O.COMP_CODE = V.COMP_CODE
							 AND O.DIV_CODE = V.DIV_CODE
							 AND O.VEHICLE_CODE = V.VEHICLE_CODE
		LEFT JOIN (
				SELECT 	S1.COMP_CODE,
					 	S1.DIV_CODE,
					 	COUNT(S1.DRIVER_CODE) AS DRIVER_CNT,
						COUNT(S1.ROUTE_CODE) AS ROUTE_CNT,
						COUNT(S1.VEHICLE_CODE) AS VEHICLE_CNT,
						COUNT(S1.OPERATION_DATE) AS OPERATION_DATE_CNT,
						SUM(CASE WHEN ISNULL(S1.DRIVER_CODE, '') = '' 	THEN 1 ELSE 0 END) AS NO_DRIVER_CNT,
						
						SUM(CASE WHEN ISNULL(S2.NO_TAG_IN,'') = ''  AND ISNULL(S1.DRIVER_CODE,'') != ''		THEN 1 ELSE 0 END)  AS NO_TAG_IN_CNT,
						SUM(CASE WHEN ISNULL(S2.NO_TAG_OUT,'') = '' AND ISNULL(S1.DRIVER_CODE,'') != '' 		THEN 1 ELSE 0 END)  AS NO_TAG_OUT_CNT,
						SUM(CASE WHEN ISNULL(S2.NO_TAG,'') = ''  AND ISNULL(S1.DRIVER_CODE,'') != ''			THEN 1 ELSE 0 END)  AS NO_TAG_CNT
				FROM GOP300T S1
				INNER JOIN (
					SELECT COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT,  CONVERT(NVARCHAR(20), MAX(CONVERT(NUMERIC(10,0), RUN_COUNT ))) AS RUN_COUNT
					FROM GOP300T
					WHERE COMP_CODE = #{S_COMP_CODE}
					  AND DIV_CODE = #{DIV_CODE}
					  AND OPERATION_DATE &gt;= #{ATT_DATE_FR}
					  AND OPERATION_DATE &lt;= #{ATT_DATE_TO}
					  AND NOTINSERVICE_YN != 'Y'
					  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
					  AND DRIVER_CODE = #{PERSON_NUMB}
					  </if>
					  GROUP BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT
				) MO  ON S1.COMP_CODE = MO.COMP_CODE
					 AND S1.DIV_CODE = MO.DIV_CODE
					 AND S1.OPERATION_DATE = MO.OPERATION_DATE
					 AND S1.ROUTE_CODE = MO.ROUTE_CODE
					 AND S1.OPERATION_COUNT = MO.OPERATION_COUNT
					 AND S1.RUN_COUNT = MO.RUN_COUNT
				LEFT JOIN (
				SELECT USER_IDX,USER_NAME,PERSON_NUMB,REPLACE(ATT_DATE,'-','') AS ATT_DATE,IN_TIME,OUT_TIME ,
					   CASE WHEN IN_TIME IS NOT NULL  THEN PERSON_NUMB ELSE '' END AS NO_TAG_IN,
					   CASE WHEN OUT_TIME IS NOT NULL THEN PERSON_NUMB ELSE '' END AS NO_TAG_OUT,
					   CASE WHEN IN_TIME IS NOT NULL AND OUT_TIME IS NOT NULL THEN PERSON_NUMB ELSE '' END AS NO_TAG
				  FROM #AttTimeBusV
				 WHERE ATT_DATE BETWEEN #{ATT_DATE_FR}
									AND #{ATT_DATE_TO}
							 ) S2 ON S1.DRIVER_CODE = S2.PERSON_NUMB
								 AND S1.OPERATION_DATE = S2.ATT_DATE
				LEFT JOIN HUM100T H1 ON  S1.COMP_CODE = H1.COMP_CODE
							 AND S1.DIV_CODE = H1.DIV_CODE
							 AND S1.DRIVER_CODE = H1.PERSON_NUMB
				LEFT JOIN (
						  SELECT B1.COMP_CODE, B1.SUB_CODE AS EMP_DIV, B2.SUB_CODE AS EMPLOY_TYPE
							FROM (
								SELECT COMP_CODE, SUB_CODE 
								  FROM BSA100T 
								 WHERE COMP_CODE=#{S_COMP_CODE}
								   AND MAIN_CODE='H181') B1
							LEFT JOIN (
								SELECT COMP_CODE, SUB_CODE, REF_CODE1 
								  FROM BSA100T 
								 WHERE COMP_CODE=#{S_COMP_CODE}
								   AND MAIN_CODE='H024') B2 
															ON B2.COMP_CODE = B1.COMP_CODE
															AND B2.REF_CODE1 = B1.SUB_CODE
					
									 ) H2 ON  H2.COMP_CODE = H1.COMP_CODE
										 AND  H2.EMPLOY_TYPE = H1.EMPLOY_TYPE
				WHERE S1.COMP_CODE = #{S_COMP_CODE}
				  AND S1.DIV_CODE = #{DIV_CODE}
				  AND S1.OPERATION_DATE &gt;= #{ATT_DATE_FR}
				  AND S1.OPERATION_DATE &lt;= #{ATT_DATE_TO}
				  AND S1.NOTINSERVICE_YN != 'Y'
				  <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
				  AND S1.DRIVER_CODE = #{PERSON_NUMB}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(DRIVER_NAME)">
				   AND H1.NAME LIKE '%' + #{NAME} +'%'
				  </if>
		      	  <if test="@foren.Ognl@isNotEmpty(EMP_DIV)">
				  AND H2.EMP_DIV = #{EMP_DIV}
				  </if>
				  GROUP BY S1.COMP_CODE,S1.DIV_CODE
				  ) S ON O.COMP_CODE =S.COMP_CODE
				      AND O.DIV_CODE=S.DIV_CODE
		WHERE O.COMP_CODE = #{S_COMP_CODE}
		  AND O.DIV_CODE = #{DIV_CODE}
		  
		  <if test="@foren.Ognl@isNotEmpty(DRIVER_NAME)">
		  AND H1.NAME LIKE '%' + #{DRIVER_NAME} +'%'
		  </if>
		  
		  <if test="@foren.Ognl@isNotEmpty(CONFIRM_YN)">
		  AND O.CONFIRM_YN = #{CONFIRM_YN}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(EMP_DIV)">
			  AND H2.EMP_DIV = #{EMP_DIV}
		  </if>
		 )
		 UNION ALL
		 (
		 SELECT REPLACE(C.ATT_DATE, '-','') AS OPERATION_DATE
		 	 , D.EMP_DIV
		     , A.PERSON_NUMB
		     , A.NAME
		     , A.OFFICE_CODE
			 , CONVERT(NVARCHAR(8), C.IN_TIME,		114) AS IN_TIME
			 , CONVERT(NVARCHAR(8), C.OUT_TIME,		114) AS OUT_TIME
		     , CONVERT(NVARCHAR(8), C.CARD_IN_TIME,	114) AS CARD_IN_TIME 
			 , CONVERT(NVARCHAR(8), C.CARD_OUT_TIME,	114) AS CARD_OUT_TIME 
			 , CONVERT(NVARCHAR(8), C.FP_IN_TIME,		114) AS FP_IN_TIME
			 , CONVERT(NVARCHAR(8), C.FP_OUT_TIME,	114) AS FP_OUT_TIME
			 , SUM(CASE WHEN C.IN_TIME  IS NOT NULL AND C.OUT_TIME IS NOT NULL  THEN 1 ELSE 0 END) OVER(PARTITION BY C.PERSON_NUMB)AS  DATE_CNT
			 , SUM(CASE WHEN C.IN_TIME  IS NOT NULL THEN 1 ELSE 0 END) OVER()AS  TAG_IN_CNT
			 , SUM(CASE WHEN C.OUT_TIME IS NOT NULL THEN 1 ELSE 0 END)OVER() AS  TAG_OUT_CNT
			 , SUM(CASE WHEN C.IN_TIME  IS NULL THEN 1 ELSE 0 END) OVER()AS  NO_TAG_IN_CNT
			 , SUM(CASE WHEN C.OUT_TIME IS NULL THEN 1 ELSE 0 END)OVER() AS  NO_TAG_OUT_CNT
			 , SUM(CASE WHEN C.IN_TIME  IS NOT NULL AND C.OUT_TIME IS NOT NULL  THEN 1 ELSE 0 END) OVER()AS  TAG_CNT
			 , SUM(CASE WHEN C.IN_TIME  IS NULL AND C.OUT_TIME IS NULL  THEN 1 ELSE 0 END) OVER()AS  NO_TAG_CNT
			 , '' AS DUTY_FR_TIME
			 , '' AS DUTY_TO_TIME
			 , 0 AS DIFF_FR 
			 , 0 AS DIFF_TO
			 , '' AS WORK_TEAM_CODE 
			 , '' AS ROUTE_CODE 
			 , '' AS ROUTE_NUM
			 , '' AS VEHICLE_CODE
			 , '' AS VEHICLE_NAME
			 , '' AS VEHICLE_REGIST_NO
			 , '' AS OPERATION_COUNT
			 , 0 AS LATE_CNT
			 , 0 AS EARLY_CNT  
			 , '' AS CONFIRM_YN
			 , 0 AS ASSIGNED_DRIVER_CNT
			 , 0 AS NO_DRIVER_CNT
		  FROM            HUM100T     A WITH (NOLOCK)
		       INNER JOIN BSA100T     B WITH (NOLOCK) ON B.COMP_CODE            = A.COMP_CODE
		                                             AND B.MAIN_CODE            = 'H024'            --사원구분
		                                             AND B.SUB_CODE             = A.EMPLOY_TYPE
		                                             AND ISNULL(B.REF_CODE1,'') = '4'               --정비직
		       INNER JOIN #AttTimeBusV C               ON C.PERSON_NUMB          = A.PERSON_NUMB
		       LEFT JOIN (
				  SELECT B1.COMP_CODE, B1.SUB_CODE AS EMP_DIV, B2.SUB_CODE AS EMPLOY_TYPE
					FROM (
						SELECT COMP_CODE, SUB_CODE 
						  FROM BSA100T 
						 WHERE COMP_CODE=#{S_COMP_CODE}
						   AND MAIN_CODE='H181') B1
					LEFT JOIN (
						SELECT COMP_CODE, SUB_CODE, REF_CODE1 
						  FROM BSA100T 
						 WHERE COMP_CODE=#{S_COMP_CODE} 
						   AND MAIN_CODE='H024') B2 
													ON B2.COMP_CODE = B1.COMP_CODE
													AND B2.REF_CODE1 = B1.SUB_CODE
			
							 ) D ON  D.COMP_CODE   = A.COMP_CODE
								 AND D.EMPLOY_TYPE = A.EMPLOY_TYPE
		  WHERE A.COMP_CODE = #{S_COMP_CODE}
		    AND A.DIV_CODE = #{DIV_CODE}
		    AND C.ATT_DATE &gt;= #{ATT_DATE_FR}
   		    AND C.ATT_DATE &lt;= #{ATT_DATE_TO}
   		    <if test="@foren.Ognl@isNotEmpty(NAME)">
   		    AND A.NAME LIKE '%'+ #{NAME} +'%'
   		    </if>
   		    <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
   		    AND A.PERSON_NUMB = #{PERSON_NUMB}
   		    </if>
   		    <if test="@foren.Ognl@isNotEmpty(OFFICE_CODE)">
   		    AND A.OFFICE_CODE = #{OFFICE_CODE}
   		    </if>
			<if test="@foren.Ognl@isNotEmpty(EMP_DIV)">
			  AND D.EMP_DIV = #{EMP_DIV}
			</if>
		 )
		 UNION ALL
		 (
		 SELECT REPLACE(C.ATT_DATE, '-','') AS OPERATION_DATE
		 	 , D.EMP_DIV
		     , A.PERSON_NUMB
		     , A.NAME
		     , A.OFFICE_CODE
			 , CONVERT(NVARCHAR(8), C.IN_TIME,		114) AS IN_TIME
			 , CONVERT(NVARCHAR(8), C.OUT_TIME,		114) AS OUT_TIME
		     , CONVERT(NVARCHAR(8), C.CARD_IN_TIME,	114) AS CARD_IN_TIME 
			 , CONVERT(NVARCHAR(8), C.CARD_OUT_TIME,	114) AS CARD_OUT_TIME 
			 , CONVERT(NVARCHAR(8), C.FP_IN_TIME,		114) AS FP_IN_TIME
			 , CONVERT(NVARCHAR(8), C.FP_OUT_TIME,	114) AS FP_OUT_TIME
			 , SUM(CASE WHEN C.IN_TIME  IS NOT NULL AND C.OUT_TIME IS NOT NULL  THEN 1 ELSE 0 END) OVER(PARTITION BY C.PERSON_NUMB)AS  DATE_CNT
			 , SUM(CASE WHEN C.IN_TIME  IS NOT NULL THEN 1 ELSE 0 END) OVER()AS  TAG_IN_CNT
			 , SUM(CASE WHEN C.OUT_TIME IS NOT NULL THEN 1 ELSE 0 END)OVER() AS  TAG_OUT_CNT
			 , SUM(CASE WHEN C.IN_TIME  IS NULL THEN 1 ELSE 0 END) OVER()AS  NO_TAG_IN_CNT
			 , SUM(CASE WHEN C.OUT_TIME IS NULL THEN 1 ELSE 0 END)OVER() AS  NO_TAG_OUT_CNT
			 , SUM(CASE WHEN C.IN_TIME  IS NOT NULL AND C.OUT_TIME IS NOT NULL  THEN 1 ELSE 0 END) OVER()AS  TAG_CNT
			 , SUM(CASE WHEN C.IN_TIME  IS NULL AND C.OUT_TIME IS NULL  THEN 1 ELSE 0 END) OVER()AS  NO_TAG_CNT
			 , '' AS DUTY_FR_TIME
			 , '' AS DUTY_TO_TIME
			 , 0 AS DIFF_FR 
			 , 0 AS DIFF_TO
			 , '' AS WORK_TEAM_CODE 
			 , '' AS ROUTE_CODE 
			 , '' AS ROUTE_NUM
			 , '' AS VEHICLE_CODE
			 , '' AS VEHICLE_NAME
			 , '' AS VEHICLE_REGIST_NO
			 , '' AS OPERATION_COUNT
			 , 0 AS LATE_CNT
			 , 0 AS EARLY_CNT  
			 , '' AS CONFIRM_YN
			 , 0 AS ASSIGNED_DRIVER_CNT
			 , 0 AS NO_DRIVER_CNT
		  FROM            HUM100T     A WITH (NOLOCK)
		       INNER JOIN BSA100T     B WITH (NOLOCK) ON B.COMP_CODE            = A.COMP_CODE
		                                             AND B.MAIN_CODE            = 'H024'            --사원구분
		                                             AND B.SUB_CODE             = A.EMPLOY_TYPE
		                                             AND ISNULL(B.REF_CODE1,'') = '2'               --내근직
		       INNER JOIN #AttTimeBusV C               ON C.PERSON_NUMB          = A.PERSON_NUMB
		       LEFT JOIN (
				  SELECT B1.COMP_CODE, B1.SUB_CODE AS EMP_DIV, B2.SUB_CODE AS EMPLOY_TYPE
					FROM (
						SELECT COMP_CODE, SUB_CODE 
						  FROM BSA100T 
						 WHERE COMP_CODE='MASTER' 
						   AND MAIN_CODE='H181') B1
					LEFT JOIN (
						SELECT COMP_CODE, SUB_CODE, REF_CODE1 
						  FROM BSA100T 
						 WHERE COMP_CODE='MASTER' 
						   AND MAIN_CODE='H024') B2 
													ON B2.COMP_CODE = B1.COMP_CODE
													AND B2.REF_CODE1 = B1.SUB_CODE
			
							 ) D ON  D.COMP_CODE   = A.COMP_CODE
								 AND D.EMPLOY_TYPE = A.EMPLOY_TYPE
		  WHERE A.COMP_CODE = #{S_COMP_CODE}
		    AND A.DIV_CODE = #{DIV_CODE}
		    AND C.ATT_DATE &gt;= #{ATT_DATE_FR}
   		    AND C.ATT_DATE &lt;= #{ATT_DATE_TO}
   		    <if test="@foren.Ognl@isNotEmpty(NAME)">
   		    AND A.NAME LIKE '%'+ #{NAME} +'%'
   		    </if>
   		    <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
   		    AND A.PERSON_NUMB = #{PERSON_NUMB}
   		    </if>
   		    <if test="@foren.Ognl@isNotEmpty(OFFICE_CODE)">
   		    AND A.OFFICE_CODE = #{OFFICE_CODE}
   		    </if>
   		    <if test="@foren.Ognl@isNotEmpty(EMP_DIV)">
			  AND D.EMP_DIV = #{EMP_DIV}
			</if>
		 )
		  ORDER BY OPERATION_DATE, NAME
	</select>
</mapper>