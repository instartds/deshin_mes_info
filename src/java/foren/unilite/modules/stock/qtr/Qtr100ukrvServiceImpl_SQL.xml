<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="qtr100ukrvServiceImpl">
	<select id="qtr100ukrvServiceImpl.selectInoutType" parameterType="Map" resultType="rMap">
		SELECT
			COMP_CODE
		  FROM BSA100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'M104'
		   AND SUB_CODE != '$'
		   AND SUB_CODE = #{INOUT_TYPE_DETAIL}
		   AND ISNULL(REF_CODE5,'N') = 'Y'
	</select>
	<select id="qtr100ukrvServiceImpl.selectreleaseNoMasterList" parameterType="Map" resultType="rMap">     /* 검색팝업창 */
        /* qtr100ukrv.Cqtr100ukrv[fnMtr200QPop] Query01 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
                  , @UserId         NVARCHAR(100) /* 사용자ID                */
                  , @LangType       NVARCHAR(2)  /* 언어구분                */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT DISTINCT
                   A.WH_CODE
                 , A.WH_CELL_CODE
                 , B.WH_CELL_NAME
                 , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
                     END) AS INOUT_DATE
                 , A.INOUT_CODE_TYPE

                 , A.INOUT_CODE
                 , (CASE A.INOUT_CODE_TYPE WHEN '4' THEN C.CUSTOM_NAME
                                           WHEN '1' THEN D.TREE_NAME
                                           WHEN '2' THEN E1.TREE_NAME
                                           WHEN '3' THEN E.TREE_NAME
                     END) AS INOUT_NAME
                 , A.INOUT_PRSN
                 , A.INOUT_TYPE
                 , A.INOUT_NUM
                 , A.INOUT_SEQ
                 , A.COMP_CODE
                 , A.DIV_CODE
                 , A.LOT_NO
                 , A.PROJECT_NO
                 , A.ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN F.ITEM_NAME1
                         WHEN @RefItem = '2' THEN F.ITEM_NAME2
                                             ELSE F.ITEM_NAME
                     END) AS ITEM_NAME
              FROM            BTR100T AS A  WITH(NOLOCK)
                   LEFT  JOIN BSA225T AS B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
                                                        AND B.DIV_CODE     = A.DIV_CODE
                                                        AND B.WH_CODE      = A.WH_CODE
                                                        AND B.WH_CELL_CODE = A.WH_CELL_CODE
                   LEFT  JOIN BCM100T AS C  WITH(NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
                                                        AND C.CUSTOM_CODE  = A.INOUT_CODE
                   LEFT  JOIN BSA210T AS D  WITH(NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
                                                        AND D.TYPE_LEVEL   = A.DIV_CODE
                                                        AND D.TREE_CODE    = A.INOUT_CODE
                   LEFT  JOIN BSA230T AS E  WITH(NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
                                                        AND E.TYPE_LEVEL   = A.DIV_CODE
                                                        AND E.TREE_CODE    = A.INOUT_CODE
                   LEFT  JOIN BSA220T AS E1 WITH(NOLOCK) ON E1.COMP_CODE   = A.COMP_CODE
                                                        AND E1.TYPE_LEVEL  = A.DIV_CODE
                                                        AND E1.TREE_CODE   = A.INOUT_CODE
                   INNER JOIN BPR100T AS F  WITH(NOLOCK) ON F.COMP_CODE    = A.COMP_CODE
                                                        AND F.ITEM_CODE    = A.ITEM_CODE
             WHERE A.COMP_CODE              = @CompCode
               AND A.INOUT_TYPE            IN ('2', '3')
               AND A.CREATE_LOC            IN ('2', '3')
               AND A.INOUT_CODE_TYPE       != '5'
               AND ISNULL(A.ORDER_TYPE,'') != '4'
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
               AND A.DIV_CODE               = #{DIV_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
               AND A.INOUT_DATE            &gt;= #{FR_INOUT_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
               AND A.INOUT_DATE            &lt;= #{TO_INOUT_DATE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_TYPE)">
               AND A.INOUT_CODE_TYPE        = #{INOUT_CODE_TYPE}
            </if>

            <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_WORK_SHOP)">
               AND A.INOUT_CODE             = #{INOUT_CODE_WORK_SHOP}
            </if>
            <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_DEPT)">
               AND A.INOUT_CODE             = #{INOUT_CODE_DEPT}
            </if>
            <if test="@foren.Ognl@isNotEmpty(INOUT_CODE_WH)">
               AND A.INOUT_CODE             = #{INOUT_CODE_WH}
            </if>

            <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
               AND A.WH_CODE                = #{WH_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
               AND A.INOUT_PRSN             = #{INOUT_PRSN}
            </if>
            <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
               AND A.WH_CELL_CODE           = #{WH_CELL_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
               AND A.LOT_NO              LIKE #{LOT_NO}
            </if>
            <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
               AND A.PROJECT_NO          LIKE #{PROJECT_NO}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
               AND A.ITEM_CODE           LIKE #{ITEM_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
               AND (CASE WHEN @RefItem = '1' THEN F.ITEM_NAME1
                         WHEN @RefItem = '2' THEN F.ITEM_NAME2
                                             ELSE F.ITEM_NAME
                     END)                LIKE '%' + #{ITEM_NAME}    + '%'
            </if>
            SET ARITHABORT OFF
            SET NOCOUNT OFF
        END
    </select>

    <select id="qtr100ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">        /* 메인조회창 */
        /*qtr100ukrv.Cqtr100ukrv[fnMtr200QStd] Query01*/
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

            DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */
                  , @UserId         NVARCHAR(100) /* 사용자ID    */
                  , @LangType       NVARCHAR(2)  /* 언어구분    */
                  , @RefItem        NVARCHAR(01) /* 명칭 참조 유형  */
                  , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정 */

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

            /* 데이터 조회 */
            SELECT A.INOUT_NUM
                 , A.INOUT_SEQ
                 , A.INOUT_METH
                 , A.INOUT_TYPE_DETAIL
                 , A.DIV_CODE
                 , A.INOUT_CODE
                 , (CASE WHEN A.INOUT_CODE_TYPE = '1' THEN C1.TREE_NAME END) AS INOUT_NAME2-- 부서
                 , (CASE WHEN A.INOUT_CODE_TYPE = '2' THEN C2.TREE_NAME END) AS INOUT_NAME  -- 창고
                 , (CASE WHEN A.INOUT_CODE_TYPE = '3' THEN C3.TREE_NAME END) AS INOUT_NAME1 -- 작업장
                 , A.ITEM_CODE
                 , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
                         WHEN @RefItem = '2' THEN C.ITEM_NAME2
                                             ELSE C.ITEM_NAME
                     END)   AS ITEM_NAME
                 , C.SPEC
                 , C.STOCK_UNIT
                 , G.PATH_CODE
                 , uniLITE.fnFormat(@CompCode, ISNULL(G.OUTSTOCK_REQ_Q, 0) - ISNULL(G.OUTSTOCK_Q, 0), 'M_FSET_QS')    AS NOT_Q
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_Q, 0), 'M_FSET_QS')      AS INOUT_Q
                 , A.ITEM_STATUS
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_Q, 0), 'M_FSET_QS')      AS ORIGINAL_Q
                 ,(SELECT PAB_STOCK_Q  FROM FNGETPABSTOCK(A.COMP_CODE, A.DIV_CODE, A.INOUT_DATE, A.ITEM_CODE, A.ITEM_CODE, '4')) AS PAB_STOCK_Q
                 , uniLITE.fnFormat(@CompCode, ISNULL(D.GOOD_STOCK_Q,0), 'M_FSET_QS')  AS GOOD_STOCK_Q
                 , uniLITE.fnFormat(@CompCode, ISNULL(D.BAD_STOCK_Q,0), 'M_FSET_QS')   AS BAD_STOCK_Q
                 , A.BASIS_NUM
                 , A.BASIS_SEQ
                 , A.INOUT_TYPE
                 , A.INOUT_CODE_TYPE
                 , A.WH_CODE
                 , A.WH_CELL_CODE
                 , (CASE WHEN ISNULL(A.INOUT_DATE, '') = ''
                         THEN ''
                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
                                                                 , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
                                                                 , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))
                     END)                                           AS INOUT_DATE
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_P, 0), 'M_FSET_QS')      AS INOUT_P
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.INOUT_I, 0), 'M_FSET_QS')      AS INOUT_I
                 , A.MONEY_UNIT
                 , A.INOUT_PRSN
                 , uniLITE.fnFormat(@CompCode, ISNULL(A.ACCOUNT_Q, 0), 'M_FSET_QS')    AS ACCOUNT_Q
                 , A.ACCOUNT_YNC
                 , ISNULL(A.CREATE_LOC, '')                                            AS CREATE_LOC
                 , A.ORDER_NUM
                 , A.REMARK
                 , A.PROJECT_NO
                 , A.LOT_NO
                 , A.SALE_DIV_CODE
                 , A.SALE_CUSTOM_CODE
                 , A.BILL_TYPE
                 , A.SALE_TYPE
                 , A.COMP_CODE
                 , H.OUTSTOCK_NUM           AS ARRAY_OUTSTOCK_NUM       -- 출고요청번호(ARRAY DATA)
                 , H.REF_WKORD_NUM          AS ARRAY_REF_WKORD_NUM      -- 작업지시번호(ARRAY DATA)
                 , H.OUTSTOCK_REQ_Q         AS ARRAY_OUTSTOCK_REQ_Q     -- 출고요청량  (ARRAY DATA)
                 , H.OUTSTOCK_Q             AS ARRAY_OUTSTOCK_Q         -- 출고량      (ARRAY DATA)
                 , H.REMARK                 AS ARRAY_REMARK             -- 비고        (ARRAY DATA)
                 , H.PROJECT_NO             AS ARRAY_PROJECT_NO         -- 프로젝트번호(ARRAY DATA)
                 , H.LOT_NO                 AS ARRAY_LOT_NO             -- LOT 번호    (ARRAY DATA)
                 , C4.LOT_YN                AS LOT_YN                   -- LOT 관리여부
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
            FROM              BTR100T A  WITH (NOLOCK)
                   INNER JOIN BPR100T C  WITH (NOLOCK) ON C.COMP_CODE      = A.COMP_CODE
                                                      AND C.ITEM_CODE      = A.ITEM_CODE
                   INNER JOIN BPR200T C4 WITH (NOLOCK) ON C4.COMP_CODE     = A.COMP_CODE
                                                      AND C4.DIV_CODE      = A.DIV_CODE
                                                      AND C4.ITEM_CODE     = A.ITEM_CODE
                   LEFT  JOIN BIV100T D  WITH (NOLOCK) ON D.COMP_CODE      = A.COMP_CODE
                                                      AND D.DIV_CODE       = A.DIV_CODE
                                                      AND D.WH_CODE        = A.WH_CODE
                                                      AND D.ITEM_CODE      = A.ITEM_CODE
                   LEFT  JOIN SOF110T E  WITH (NOLOCK) ON E.COMP_CODE      = A.COMP_CODE
                                                      AND E.DIV_CODE       = A.DIV_CODE
                                                      AND E.ORDER_NUM      = A.ORDER_NUM
                                                      AND E.SER_NO         = A.ORDER_SEQ
                   LEFT  JOIN (SELECT A.COMP_CODE, B.DIV_CODE, A.INOUT_NUM, A.INOUT_SEQ, A.INOUT_TYPE, A.PATH_CODE
                                    , SUM(ISNULL(B.OUTSTOCK_REQ_Q, 0))  AS OUTSTOCK_REQ_Q
                                    , SUM(ISNULL(B.OUTSTOCK_Q, 0))      AS OUTSTOCK_Q
                               FROM              PMP350T A WITH (NOLOCK)
                                      INNER JOIN PMP300T B WITH (NOLOCK) ON A.COMP_CODE     = B.COMP_CODE
                                                                        AND A.DIV_CODE      = B.DIV_CODE
                                                                        AND A.OUTSTOCK_NUM  = B.OUTSTOCK_NUM
                                                                        AND A.REF_WKORD_NUM = B.REF_WKORD_NUM
                                                                        AND A.ITEM_CODE     = B.ITEM_CODE
                               WHERE  A.COMP_CODE = @CompCode
                            <if test="@foren.Ognl@isEmpty(DIV_CODE)">
                               AND    A.DIV_CODE  = #{DIV_CODE}
                            </if>
                            <if test="@foren.Ognl@isEmpty(INOUT_NUM)">
                               AND    A.INOUT_NUM = #{INOUT_NUM}
                            </if>
                               GROUP BY A.COMP_CODE, B.DIV_CODE, A.INOUT_NUM, A.INOUT_SEQ, A.INOUT_TYPE
                                      , A.PATH_CODE) G ON G.COMP_CODE      = A.COMP_CODE
                                                      AND G.DIV_CODE       = A.DIV_CODE
                                                      AND G.INOUT_NUM      = A.INOUT_NUM
                                                      AND G.INOUT_SEQ      = A.INOUT_SEQ
                                                      AND G.INOUT_TYPE     = A.INOUT_TYPE
                   LEFT  JOIN uniLITE.fnArrayOutStockReq(@CompCode, #{DIV_CODE}, #{INOUT_NUM}, 0) H
                                                       ON H.COMP_CODE      = A.COMP_CODE
                                                      AND H.DIV_CODE       = A.DIV_CODE
                                                      AND H.INOUT_NUM      = A.INOUT_NUM
                                                      AND H.INOUT_SEQ      = A.INOUT_SEQ
                                                      AND H.INOUT_TYPE     = A.INOUT_TYPE
                   LEFT  JOIN BSA210T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE
                                                      AND C1.TYPE_LEVEL    = A.DIV_CODE
                                                      AND C1.TREE_CODE     = A.INOUT_CODE
                   LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE
                                                      AND C2.TYPE_LEVEL    = A.DIV_CODE
                                                      AND C2.TREE_CODE     = A.INOUT_CODE
                   LEFT  JOIN BSA230T C3 WITH (NOLOCK) ON C3.COMP_CODE     = A.COMP_CODE
                                                      AND C3.TYPE_LEVEL    = A.DIV_CODE
                                                      AND C3.TREE_CODE     = A.INOUT_CODE
            WHERE  A.COMP_CODE        = @CompCode
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND    A.DIV_CODE         = #{DIV_CODE}
            </if>
            AND    A.INOUT_TYPE      IN ('2', '3')
            AND    A.CREATE_LOC      IN ('2', '3')
            AND    A.INOUT_CODE_TYPE != '4'
            <if test="@foren.Ognl@isNotEmpty(INOUT_NUM)">
            AND    A.INOUT_NUM        = #{INOUT_NUM}
            </if>
            <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
            AND    A.LOT_NO        LIKE #{LOT_NO} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
            AND    A.PROJECT_NO    LIKE #{PROJECT_NO} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
            AND    A.ITEM_CODE     LIKE #{ITEM_CODE} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
            AND    (CASE WHEN @RefItem = N'1' THEN C.ITEM_NAME1
                         WHEN @RefItem = N'2' THEN C.ITEM_NAME2
                                              ELSE C.ITEM_NAME
                     END)          LIKE  #{ITEM_NAME}+ '%'
            </if>
            ORDER BY A.INOUT_NUM, A.INOUT_SEQ

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </select>

    <select id="qtr100ukrvServiceImpl.selectrefList" parameterType="Map" resultType="rMap">        /* 출고요청참조 */
        --qtr100ukrv.Cqtr100ukrv[fnMtr200QRef] Query01

        SET NOCOUNT ON

        CREATE TABLE #PMP300T_TEMP
        (      COMP_CODE           NVARCHAR(08)    NOT NULL DEFAULT 'MASTER'
             , DIV_CODE            NVARCHAR(08)    NOT NULL
             , OUTSTOCK_NUM        NVARCHAR(20)    NOT NULL
             , ITEM_CODE           NVARCHAR(20)    NOT NULL
             , REF_WKORD_NUM       NVARCHAR(20)    NOT NULL
             , PATH_CODE           NVARCHAR(08)    NOT NULL
        )
        CREATE INDEX PMP300T_TEMP_IDX01 ON #PMP300T_TEMP(COMP_CODE, DIV_CODE, OUTSTOCK_NUM, ITEM_CODE, REF_WKORD_NUM, PATH_CODE)




        --qtr100ukrv.Cqtr100ukrv[fnMtr200QRef] Query03
        DECLARE     @COMP_CODE              NVARCHAR(08)            -- (필수) 법인코드
                  , @DIV_CODE               NVARCHAR(08)            -- (필수) 사업장코드
                  , @WORK_SHOP_CODE         NVARCHAR(08)            -- (선택) 작업장
                  , @REQ_FR_DATE            NVARCHAR(08)            -- (선택) 출고요청일자(FROM)
                  , @REQ_TO_DATE            NVARCHAR(08)            -- (선택) 출고요청일자(TO)
                  , @OUT_WH_CODE            NVARCHAR(08)            -- (선택) 출고창고
                  , @ITEM_CODE              NVARCHAR(20)            -- (선택) 품목코드
                  , @ITEM_NAME              NVARCHAR(200)           -- (선택) 품목명
                  , @OUTSTOCK_NUM           NVARCHAR(20)            -- (선택) 출고요청번호
                  , @WKORD_NUM              NVARCHAR(20)            -- (선택) 작업지시번호
                  , @INOUT_CODE_TYPE        NVARCHAR(01)            -- (필수) 출고처구분
                  , @MAIN_WH_CODE           NVARCHAR(08)            -- (필수) 주창고
                  , @WORK_WH_CODE           NVARCHAR(08)            -- (필수) 가공창고
                  , @WH_CELL_CODE           NVARCHAR(20)            -- (필수) Cell창고
                  , @LOT_NO                 NVARCHAR(40)            -- (선택) LOT NO
                  , @USER_ID                NVARCHAR(100)            -- (필수) 사용자ID

        SET @COMP_CODE              = #{S_COMP_CODE}
        SET @DIV_CODE               = #{DIV_CODE}
        SET @WORK_SHOP_CODE         = #{WORK_SHOP_CODE}
        SET @REQ_FR_DATE            = #{REQ_FR_DATE}
        SET @REQ_TO_DATE            = #{REQ_TO_DATE}
        SET @OUT_WH_CODE            = #{OUT_WH_CODE}
        SET @ITEM_CODE              = #{ITEM_CODE}
        SET @ITEM_NAME              = #{ITEM_NAME}
        SET @OUTSTOCK_NUM           = #{OUTSTOCK_NUM}
        SET @WKORD_NUM              = #{WKORD_NUM}
        SET @INOUT_CODE_TYPE        = #{INOUT_CODE_TYPE}
        SET @MAIN_WH_CODE           = #{MAIN_WH_CODE}
        SET @WORK_WH_CODE           = #{WORK_WH_CODE}
        SET @WH_CELL_CODE           = #{WH_CELL_CODE}
        SET @LOT_NO                 = #{LOT_NO}
        SET @USER_ID                = #{S_USER_ID}

        DECLARE     @RefItem                NVARCHAR(01)             -- 사용자 품목명 참조 유형

        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T WITH (NOLOCK)
        WHERE  COMP_CODE = @COMP_CODE
        AND    USER_ID   = @USER_ID

        SET @RefItem = ISNULL(@RefItem, '0')
/*
    		INSERT INTO #PMP300T_TEMP (COMP_CODE, DIV_CODE, OUTSTOCK_NUM, ITEM_CODE,REF_WKORD_NUM, PATH_CODE)
    		SELECT COMP_CODE, DIV_CODE, OUTSTOCK_NUM, ITEM_CODE,REF_WKORD_NUM, PATH_CODE
    		FROM PMP350T WITH (NOLOCK)
    		WHERE COMP_CODE=@COMP_CODE
*/
        SELECT CAST(0 AS BIT)                                                           AS CHOICE
             , A.COMP_CODE
             , A.DIV_CODE
             , A.WORK_SHOP_CODE
             , C4.TREE_NAME                                                             AS WORK_SHOP_NAME
             , CASE WHEN ISNULL(B.WH_CODE, '') = '' THEN
                         CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, ''))  -- 공용창고
                              ELSE ISNULL(C4.WH_CODE, '')                                                   -- 가공창고
                         END
                    ELSE B.WH_CODE
               END                                                                      AS WORK_WH_CODE
             , C5.TREE_NAME                                                             AS WORK_WH_NAME
--             , ''                                                                     AS WORK_WH_CELL_CODE
              , (SELECT TOP 1 WH_CELL_CODE FROM BSA230T WITH(NOLOCK)
                                          WHERE COMP_CODE  = @COMP_CODE
                                            AND TYPE_LEVEL = @DIV_CODE
                                            AND TREE_CODE  = A.WORK_SHOP_CODE
                                            AND WH_CODE    = (CASE WHEN ISNULL(B.WH_CODE, '') = '' THEN
                                                                       CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, ''))  -- 공용창고
                                                                        ELSE ISNULL(C4.WH_CODE, '')                                                   -- 가공창고
                                                                       END
                                                             ELSE B.WH_CODE
                                                             END)
                                                                                      ) AS WORK_WH_CELL_CODE
             , ''                                                                       AS WORK_WH_CELL_NAME
             , A.ITEM_CODE
             , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                    WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                    WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                    ELSE                     C1.ITEM_NAME
               END                                                                      AS ITEM_NAME
             , C1.SPEC
             , C1.STOCK_UNIT
             , A.PATH_CODE
             , uniLITE.fnGetUserDate(A.COMP_CODE, A.OUTSTOCK_REQ_DATE)                  AS OUTSTOCK_REQ_DATE
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_REQ_Q, 0), 'M_FSET_QS')   AS OUTSTOCK_REQ_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_Q, 0),     'M_FSET_QS')   AS OUTSTOCK_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_REQ_Q, 0)
                                          - ISNULL(A.OUTSTOCK_Q, 0),     'M_FSET_QS')   AS NOT_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.STOCK_Q, 0),        'M_FSET_QS')   AS STOCK_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.GOOD_STOCK_Q, 0),   'M_FSET_QS')   AS GOOD_STOCK_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.BAD_STOCK_Q, 0),    'M_FSET_QS')   AS BAD_STOCK_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.AVERAGE_P, 0),      'M_FSET_PS')   AS AVERAGE_P
             , C2.WH_CODE                                                               AS MAIN_WH_CODE
             , C7.TREE_NAME                                                             AS MAIN_WH_NAME
             , A.OUTSTOCK_NUM
             , A.CONTROL_STATUS
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.CANCEL_Q, 0),       'M_FSET_QS')   AS CANCEL_Q
             , A.REMARK
             , A.PROJECT_NO
             , @OUT_WH_CODE                                                             AS WH_CODE
             , @WH_CELL_CODE                                                            AS WH_CELL_CODE
             , A.REF_WKORD_NUM
             , ISNULL(C.LOT_NO, '')                                                     AS WK_LOT_NO
             , ISNULL(C.REMARK, '')                                                     AS WK_REMARK
             , ISNULL(C.PROJECT_NO, '')                                                 AS WK_PROJECT_NO
             , C.ITEM_CODE                                                              AS PROD_ITEM_CODE
             , C2.LOT_YN
             , CASE WHEN @RefItem = '0' THEN C3.ITEM_NAME
                    WHEN @RefItem = '1' THEN C3.ITEM_NAME1
                    WHEN @RefItem = '2' THEN C3.ITEM_NAME2
                    ELSE                     C3.ITEM_NAME
               END                                                                      AS PROD_ITEM_NAME
        FROM               PMP300T      A  WITH (NOLOCK)
               LEFT  JOIN  PMP200T      B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
                                                        AND B.DIV_CODE      = A.DIV_CODE
                                                        AND B.ITEM_CODE     = A.ITEM_CODE
                                                        AND B.WKORD_NUM     = A.REF_WKORD_NUM
                                                        AND B.PATH_CODE     = A.PATH_CODE
               LEFT  JOIN  PMP100TV1    C  WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
                                                        AND C.DIV_CODE      = A.DIV_CODE
                                                        AND C.WKORD_NUM     = A.REF_WKORD_NUM
               LEFT  JOIN  BIV100T      D  WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE
                                                        AND D.DIV_CODE      = A.DIV_CODE
                                                        AND D.ITEM_CODE     = A.ITEM_CODE
                                                        AND D.WH_CODE       = @OUT_WH_CODE
/*
               LEFT  JOIN #PMP300T_TEMP E  WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
                                                        AND E.DIV_CODE      = A.DIV_CODE
                                                        AND E.OUTSTOCK_NUM  = A.OUTSTOCK_NUM
                                                        AND E.ITEM_CODE     = A.ITEM_CODE
                                                        AND E.REF_WKORD_NUM = A.REF_WKORD_NUM
                                                        AND E.PATH_CODE     = A.PATH_CODE
*/
               LEFT  JOIN PMP350T       E  WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
                                                        AND E.DIV_CODE      = A.DIV_CODE
                                                        AND E.OUTSTOCK_NUM  = A.OUTSTOCK_NUM
                                                        AND E.ITEM_CODE     = A.ITEM_CODE
                                                        AND E.REF_WKORD_NUM = A.REF_WKORD_NUM
                                                        AND E.PATH_CODE     = A.PATH_CODE

               INNER JOIN  BPR100T      C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
                                                        AND C1.ITEM_CODE    = A.ITEM_CODE
               INNER JOIN  BPR200T      C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                                        AND C2.DIV_CODE     = A.DIV_CODE
                                                        AND C2.ITEM_CODE    = A.ITEM_CODE
               LEFT  JOIN  BPR100T      C3 WITH (NOLOCK) ON C3.COMP_CODE    = C.COMP_CODE
                                                        AND C3.ITEM_CODE    = C.ITEM_CODE
               INNER JOIN  BSA230T      C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
                                                        AND C4.TYPE_LEVEL   = A.DIV_CODE
                                                        AND C4.TREE_CODE    = A.WORK_SHOP_CODE
               LEFT  JOIN  BSA220T      C5 WITH (NOLOCK) ON C5.COMP_CODE    = C4.COMP_CODE
                                                        AND C5.TYPE_LEVEL   = C4.TYPE_LEVEL
                                                        AND C5.TREE_CODE    = CASE WHEN ISNULL(B.WH_CODE, '') = '' THEN
                                                                                        CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, ''))
                                                                                             ELSE ISNULL(C4.WH_CODE, '')
                                                                                        END
                                                                                   ELSE B.WH_CODE
                                                                              END
               LEFT  JOIN  BSA220T      C7 WITH (NOLOCK) ON C7.COMP_CODE    = C2.COMP_CODE
                                                        AND C7.TYPE_LEVEL   = C2.DIV_CODE
                                                        AND C7.TREE_CODE    = C2.WH_CODE
        WHERE  A.COMP_CODE              = @COMP_CODE
        AND    A.CONTROL_STATUS         &lt; '8'
        AND    A.OUTSTOCK_REQ_Q         &gt; A.OUTSTOCK_Q
        AND    A.DIV_CODE               = @DIV_CODE
        AND    A.AGREE_STATUS           = '2'          -- 승인내역만 조회되도록 추가
        AND		A.OUTSTOCK_REQ_Q        &lt;&gt; ISNULL(E.OUTSTOCK_Q,0)

        AND   ((A.WORK_SHOP_CODE        =       @WORK_SHOP_CODE                        AND @WORK_SHOP_CODE != '') OR (@WORK_SHOP_CODE  = ''))
        AND   ((A.OUTSTOCK_REQ_DATE    &gt;=       @REQ_FR_DATE                           AND @REQ_FR_DATE    != '') OR (@REQ_FR_DATE     = ''))
        AND   ((A.OUTSTOCK_REQ_DATE    &lt;=       @REQ_TO_DATE                           AND @REQ_TO_DATE    != '') OR (@REQ_TO_DATE     = ''))
        AND   ((A.ITEM_CODE          LIKE       @ITEM_CODE    + '%'                    AND @ITEM_CODE      != '') OR (@ITEM_CODE       = ''))
        AND   ((C1.ITEM_NAME         LIKE '%' + @ITEM_NAME    + '%' AND @RefItem = '0' AND @ITEM_NAME      != '')
            OR (C1.ITEM_NAME1        LIKE '%' + @ITEM_NAME    + '%' AND @RefItem = '1' AND @ITEM_NAME      != '')
            OR (C1.ITEM_NAME2        LIKE '%' + @ITEM_NAME    + '%' AND @RefItem = '2' AND @ITEM_NAME      != '') OR (@ITEM_NAME       = ''))
        AND   ((A.OUTSTOCK_NUM       LIKE       @OUTSTOCK_NUM + '%'                    AND @OUTSTOCK_NUM   != '') OR (@OUTSTOCK_NUM    = ''))
        AND   ((A.REF_WKORD_NUM      LIKE       @WKORD_NUM    + '%'                    AND @WKORD_NUM      != '') OR (@WKORD_NUM       = ''))

            --'출고처구분 : 창고  (가공창고가 설정되어 있는 데이터 조회), 작업장(가공창고가 설정되어 있지 않은 데이터 조회)
        --AND   ((ISNULL(C5.TREE_CODE, '') != '' AND @INOUT_CODE_TYPE = '2') OR (ISNULL(C5.TREE_CODE, '') = '' AND @INOUT_CODE_TYPE = '3'))

        AND   ((C2.WH_CODE              =       @MAIN_WH_CODE                          AND @MAIN_WH_CODE   != '') OR (@MAIN_WH_CODE    = ''))
        AND   ((C5.TREE_CODE            =       @WORK_WH_CODE                          AND @WORK_WH_CODE   != '') OR (@WORK_WH_CODE    = ''))
        AND   ((C.LOT_NO             LIKE       @LOT_NO       + '%'                    AND @LOT_NO         != '') OR (@LOT_NO          = ''))
        AND   B.OUT_METH='1'
        -- 폼목마스터에서 예약정보로 수정함 2018.07.03

        ORDER BY A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE, C5.TREE_CODE, A.ITEM_CODE, A.PATH_CODE


        DROP TABLE #PMP300T_TEMP

        SET NOCOUNT OFF
    </select>

    <select id="qtr100ukrvServiceImpl.selectrefList2" parameterType="Map" resultType="rMap">        /* 반품가능요청참조 */
        --qtr100ukrv.Cqtr100ukrv[fnMtr200QRe1] Query01
        DECLARE     @COMP_CODE              NVARCHAR(08)            -- (필수) 법인코드
                  , @DIV_CODE               NVARCHAR(08)            -- (필수) 사업장코드
                  , @WORK_SHOP_CODE         NVARCHAR(08)            -- (선택) 작업장
                  , @REQ_FR_DATE            NVARCHAR(08)            -- (선택) 출고요청일자(FROM)
                  , @REQ_TO_DATE            NVARCHAR(08)            -- (선택) 출고요청일자(TO)
                  , @OUT_WH_CODE            NVARCHAR(08)            -- (선택) 출고창고
                  , @ITEM_CODE              NVARCHAR(20)            -- (선택) 품목코드
                  , @ITEM_NAME              NVARCHAR(200)           -- (선택) 품목명
                  , @OUTSTOCK_NUM           NVARCHAR(20)            -- (선택) 출고요청번호
                  , @WKORD_NUM              NVARCHAR(20)            -- (선택) 작업지시번호
                  , @INOUT_CODE_TYPE        NVARCHAR(01)            -- (필수) 출고처구분
                  , @WH_CELL_CODE           NVARCHAR(20)            -- (필수) Cell창고
                  , @LOT_NO                 NVARCHAR(40)            -- (선택) Lot No
                  , @USER_ID                NVARCHAR(100)            -- (필수) 사용자ID

        SET @COMP_CODE              = #{S_COMP_CODE}
        SET @DIV_CODE               = #{DIV_CODE}
        SET @WORK_SHOP_CODE         = #{WORK_SHOP_CODE}
        SET @REQ_FR_DATE            = #{REQ_FR_DATE}
        SET @REQ_TO_DATE            = #{REQ_TO_DATE}
        SET @OUT_WH_CODE            = #{OUT_WH_CODE}
        SET @ITEM_CODE              = #{ITEM_CODE}
        SET @ITEM_NAME              = #{ITEM_NAME}
        SET @OUTSTOCK_NUM           = #{OUTSTOCK_NUM}
        SET @WKORD_NUM              = #{WKORD_NUM}
        SET @INOUT_CODE_TYPE        = #{INOUT_CODE_TYPE}
        SET @WH_CELL_CODE           = #{WH_CELL_CODE}
        SET @LOT_NO                 = #{LOT_NO}
        SET @USER_ID                = #{S_USER_ID}

        DECLARE     @RefItem                NVARCHAR(01)             -- 사용자 품목명 참조 유형

        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T WITH (NOLOCK)
        WHERE  COMP_CODE = @COMP_CODE
        AND    USER_ID   = @USER_ID

        SET @RefItem = ISNULL(@RefItem, '0')

        SELECT CAST(0 AS BIT)                                                           AS CHOICE
             , A.COMP_CODE
             , A.DIV_CODE
             , A.WORK_SHOP_CODE
             , C4.TREE_NAME                                                             AS WORK_SHOP_NAME
             , CASE WHEN ISNULL(B.WH_CODE, '') = '' THEN
                         CASE WHEN C2.COMMITEM_YN = 'Y' THEN C4.SECTION_CD              -- 공용창고
                              ELSE C4.WH_CODE                                           -- 가공창고
                         END
                    ELSE B.WH_CODE
               END                                                                      AS WORK_WH_CODE
             , C5.TREE_NAME                                                             AS WORK_WH_NAME
             , uniLITE.fnGetUserDate(A.COMP_CODE, A.OUTSTOCK_REQ_DATE)                  AS OUTSTOCK_REQ_DATE
             , A.ITEM_CODE
             , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                    WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                    WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                    ELSE                     C1.ITEM_NAME
               END                                                                      AS ITEM_NAME
             , C1.SPEC
             , C1.STOCK_UNIT
             , A.PATH_CODE
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(E.WIP_STOCK_Q, 0) * -1,'M_FSET_QS')  AS NOTOUTSTOCK_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_Q, 0),      'M_FSET_QS')  AS OUTSTOCK_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.OUTSTOCK_REQ_Q, 0)
                                          - ISNULL(A.OUTSTOCK_Q, 0),      'M_FSET_QS')  AS NOT_Q
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(D.GOOD_STOCK_Q, 0),    'M_FSET_QS')  AS STOCK_Q
             , A.OUTSTOCK_NUM
             , A.CONTROL_STATUS
             , uniLITE.fnFormat(@COMP_CODE, ISNULL(A.CANCEL_Q, 0),        'M_FSET_QS')  AS CANCEL_Q
             , A.REMARK
             , @OUT_WH_CODE                                                             AS WH_CODE
             , @WH_CELL_CODE                                                            AS WH_CELL_CODE
             , A.REF_WKORD_NUM        --'출고요청정보가 작업지시별 참조인 경우
             , ISNULL(C.LOT_NO, '')                                                     AS WK_LOT_NO
        FROM              PMP300T   A  WITH (NOLOCK)
               LEFT  JOIN PMP200T   B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
                                                    AND B.DIV_CODE      = A.DIV_CODE
                                                    AND B.ITEM_CODE     = A.ITEM_CODE
                                                    AND B.WKORD_NUM     = A.REF_WKORD_NUM
                                                    AND B.PATH_CODE     = A.PATH_CODE
               LEFT  JOIN PMP100TV1 C  WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
                                                    AND C.DIV_CODE      = A.DIV_CODE
                                                    AND C.WKORD_NUM     = A.REF_WKORD_NUM
               LEFT  JOIN BIV100T   D  WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE
                                                    AND D.DIV_CODE      = A.DIV_CODE
                                                    AND D.ITEM_CODE     = A.ITEM_CODE
                                                    AND D.WH_CODE       = @OUT_WH_CODE
               LEFT  JOIN PMP100TV  E  WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
                                                    AND E.DIV_CODE      = A.DIV_CODE
                                                    AND E.WKORD_NUM     = A.REF_WKORD_NUM
                                                    AND E.ITEM_CODE     = A.ITEM_CODE
               INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
                                                    AND C1.ITEM_CODE    = A.ITEM_CODE
               INNER JOIN BPR200T   C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                                    AND C2.DIV_CODE     = A.DIV_CODE
                                                    AND C2.ITEM_CODE    = A.ITEM_CODE
               INNER JOIN BSA230T   C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
                                                    AND C4.TYPE_LEVEL   = A.DIV_CODE
                                                    AND C4.TREE_CODE    = A.WORK_SHOP_CODE
               LEFT  JOIN BSA220T   C5 WITH (NOLOCK) ON C5.COMP_CODE    = C4.COMP_CODE
                                                    AND C5.TYPE_LEVEL   = C4.TYPE_LEVEL
                                                    AND C5.TREE_CODE    = CASE WHEN ISNULL(B.WH_CODE, '') = '' THEN
                                                                                    CASE WHEN C2.COMMITEM_YN = 'Y' THEN ISNULL(C4.SECTION_CD, ISNULL(C4.WH_CODE, ''))
                                                                                         ELSE ISNULL(C4.WH_CODE, '')
                                                                                    END
                                                                               ELSE B.WH_CODE
                                                                          END
        WHERE  A.COMP_CODE              = @COMP_CODE
        AND    A.OUTSTOCK_Q             &gt;  0
        AND    A.DIV_CODE               = @DIV_CODE
        AND    A.AGREE_STATUS           = '2'          -- 승인내역만 조회되도록 추가

        AND   ((A.WORK_SHOP_CODE        =       @WORK_SHOP_CODE                        AND @WORK_SHOP_CODE != '') OR (@WORK_SHOP_CODE  = ''))
        AND   ((A.OUTSTOCK_REQ_DATE    &gt;=       @REQ_FR_DATE                           AND @REQ_FR_DATE    != '') OR (@REQ_FR_DATE     = ''))
        AND   ((A.OUTSTOCK_REQ_DATE    &lt;=       @REQ_TO_DATE                           AND @REQ_TO_DATE    != '') OR (@REQ_TO_DATE     = ''))
        AND   ((A.ITEM_CODE          LIKE       @ITEM_CODE    + '%'                    AND @ITEM_CODE      != '') OR (@ITEM_CODE       = ''))
        AND   ((C1.ITEM_NAME         LIKE '%' + @ITEM_NAME    + '%' AND @RefItem = '0' AND @ITEM_NAME      != '')
            OR (C1.ITEM_NAME1        LIKE '%' + @ITEM_NAME    + '%' AND @RefItem = '1' AND @ITEM_NAME      != '')
            OR (C1.ITEM_NAME2        LIKE '%' + @ITEM_NAME    + '%' AND @RefItem = '2' AND @ITEM_NAME      != '') OR (@ITEM_NAME       = ''))
        AND   ((A.OUTSTOCK_NUM       LIKE       @OUTSTOCK_NUM + '%'                    AND @OUTSTOCK_NUM   != '') OR (@OUTSTOCK_NUM    = ''))
        AND   ((A.REF_WKORD_NUM      LIKE       @WKORD_NUM    + '%'                    AND @WKORD_NUM      != '') OR (@WKORD_NUM       = ''))
        AND   ((C.LOT_NO             LIKE       @LOT_NO       + '%'                    AND @LOT_NO         != '') OR (@LOT_NO          = ''))

        --'출고처구분 : 창고  (가공창고가 설정되어 있는 데이터 조회), 작업장(가공창고가 설정되어 있지 않은 데이터 조회)
        AND   ((ISNULL(C5.TREE_CODE, '') != '' AND @INOUT_CODE_TYPE = '2') OR (ISNULL(C5.TREE_CODE, '') = '' AND @INOUT_CODE_TYPE = '3'))


        ORDER BY A.COMP_CODE, A.DIV_CODE, A.WORK_SHOP_CODE, C4.WH_CODE, A.ITEM_CODE, A.PATH_CODE

    </select>

    <insert id="qtr100ukrvServiceImpl.insertLogMaster" parameterType="Map">
        INSERT INTO L_BTR100T
             ( KEY_VALUE		    , OPR_FLAG
             , COMP_CODE            , INOUT_NUM             , INOUT_SEQ             , INOUT_TYPE            , DIV_CODE
             , INOUT_METH           , CREATE_LOC            , INOUT_TYPE_DETAIL     , INOUT_CODE_TYPE       , INOUT_CODE
             , INOUT_CODE_DETAIL    , INOUT_DATE            , ITEM_CODE             , ITEM_STATUS           , WH_CODE
             , WH_CELL_CODE         , INOUT_PRSN            , INOUT_Q               , INOUT_P               , INOUT_I
             , MONEY_UNIT           , BASIS_NUM             , BASIS_SEQ             , PROJECT_NO            , PJT_CODE
             , LOT_NO               , REMARK                , ORDER_NUM             , BILL_TYPE             , SALE_TYPE           , PATH_CODE
             , SALE_DIV_CODE        , SALE_CUSTOM_CODE      , ACCOUNT_YNC		    , ACCOUNT_Q 			, OUTSTOCK_NUM        , REF_WKORD_NUM
             , UPDATE_DB_USER       , UPDATE_DB_TIME)
        VALUES
             ( #{KEY_VALUE}         , #{OPR_FLAG}
             , #{COMP_CODE}         , #{INOUT_NUM}          , #{INOUT_SEQ}          , #{INOUT_TYPE}         , #{DIV_CODE}
             , #{INOUT_METH}        , #{CREATE_LOC}         , #{INOUT_TYPE_DETAIL}  , #{INOUT_CODE_TYPE}    , #{INOUT_CODE}
             , #{INOUT_CODE_DETAIL} , #{INOUT_DATE}         , #{ITEM_CODE}          , #{ITEM_STATUS}        , #{WH_CODE}
             , #{WH_CELL_CODE}      , #{INOUT_PRSN}         , #{INOUT_Q}            , #{INOUT_P}            , #{INOUT_I}
             , #{MONEY_UNIT}        , #{BASIS_NUM}          , #{BASIS_SEQ}		    , #{PROJECT_NO}         , #{PJT_CODE}
             , #{LOT_NO}            , #{REMARK}             , #{ORDER_NUM}          , #{BILL_TYPE}          , #{SALE_TYPE}          , #{PATH_CODE}
             , #{SALE_DIV_CODE}     , #{SALE_CUSTOM_CODE}   , #{ACCOUNT_YNC}        , #{ACCOUNT_Q} 			, #{ARRAY_OUTSTOCK_NUM} , #{ARRAY_REF_WKORD_NUM}
             , #{S_USER_ID}         , GETDATE())
    </insert>

    <update id="qtr100ukrvServiceImpl.spReseving" parameterType="Map" statementType="CALLABLE">
        {call uniLITE.USP_MATRL_Mtr200ukr  (
            #{KEY_VALUE,      mode=IN,    jdbcType=VARCHAR,   javaType=java.lang.String},
            #{INOUT_NUM,      mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String},
            #{ERROR_DESC,     mode=OUT,   jdbcType=VARCHAR,   javaType=java.lang.String}
        )}
    </update>

    <select id="qtr100ukrvServiceImpl.getFifo" parameterType="Map" resultType="rMap">
        DECLARE @COMP_CODE      NVARCHAR(08)
              , @DIV_CODE       NVARCHAR(08)
              , @ITEM_CODE      NVARCHAR(20)
              , @ITEM_NAME      NVARCHAR(200)
              , @SPEC           NVARCHAR(160)
              , @UNIT           NVARCHAR(03)
              , @LOT_NO         NVARCHAR(20)
              , @SLOT_NO        NVARCHAR(20)
              , @ORDER_UNIT_Q   NUMERIC(30, 6)
              , @WH_CODE        NVARCHAR(08)
              , @INOUT_NUM      NVARCHAR(20)
              , @INOUT_SEQ      NUMERIC(4, 0)
              , @REMARK         NVARCHAR(200)
              , @KEY_VALUE      NVARCHAR(20)

              , @STOCK_Q        NUMERIC(30, 6)
              , @BAD_STOCK_Q        NUMERIC(30, 6)
              , @LOT_NO_S       NVARCHAR(MAX)

              , @LOT_NO_OUT     NVARCHAR(20)
              , @LANG_CODE      NVARCHAR(02)
              , @ERR_MSG        NVARCHAR(MAX)

            SET @COMP_CODE      = #{S_COMP_CODE}
            SET @DIV_CODE       = #{DIV_CODE}
            SET @ITEM_CODE      = #{ITEM_CODE}
            SET @LOT_NO         = #{LOT_NO}
            SET @ORDER_UNIT_Q   = #{ORDER_UNIT_Q}
            SET @WH_CODE        = #{WH_CODE}
            SET @KEY_VALUE      = #{KEY_VALUE}
            SET @LOT_NO_S       = #{LOT_NO_S}
            SET @LANG_CODE      = #{S_LANG_CODE}


        BEGIN TRY

        DECLARE @DAY_TERM NUMERIC(3, 0)

        SELECT @DAY_TERM = REF_CODE1
        -- SELECT REF_CODE1
          FROM BSA100T WITH(NOLOCK)
         WHERE COMP_CODE = @COMP_CODE
           AND MAIN_CODE = 'B704'
           AND SUB_CODE  = '10'

        IF ISNULL(@DAY_TERM, 0) = 0
          SET @DAY_TERM = 1


            BEGIN
                --1.입력한 Lot_no 등록여부 확인
                SELECT @ITEM_CODE       = ISNULL(A.ITEM_CODE    , '')
                     , @LOT_NO          = ISNULL(A.LOT_NO       , '')
                     , @STOCK_Q    = ISNULL(A.GOOD_STOCK_Q , 0)
                     , @ITEM_NAME       = ISNULL(B.ITEM_NAME    , '')
                     , @SPEC            = ISNULL(B.SPEC         , '')
                     , @UNIT            = ISNULL(B.STOCK_UNIT   , '')
                     , @INOUT_NUM       = ISNULL(C.INOUT_NUM    , '')
                     , @INOUT_SEQ       = ISNULL(C.INOUT_SEQ    , 0)
                     , @REMARK          = ISNULL(C.REMARK       , '')
                     , @BAD_STOCK_Q = ISNULL(A.BAD_STOCK_Q , 0)
                  FROM      BIV150T A WITH(NOLOCK)
                 INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                   AND B.ITEM_CODE  = A.ITEM_CODE
                  LEFT JOIN (
                              SELECT COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, INOUT_NUM, INOUT_SEQ, MAX(REMARK) AS REMARK
                                FROM BTR100T WITH (NOLOCK, INDEX(BTR100T_IDX07))
                               GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, INOUT_NUM, INOUT_SEQ
                              ) AS C                ON C.COMP_CODE  = A.COMP_CODE
                                                   AND C.DIV_CODE   = A.DIV_CODE
                                                   AND C.ITEM_CODE  = A.ITEM_CODE
                                                   AND C.LOT_NO     = A.LOT_NO
                 WHERE A.COMP_CODE  = @COMP_CODE
                   AND A.DIV_CODE   = @DIV_CODE
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                   AND A.ITEM_CODE  = @ITEM_CODE
            </if>
                   AND A.WH_CODE    = @WH_CODE
                   AND A.LOT_NO     = @LOT_NO

                IF (@@ROWCOUNT = 0)                 --입력된 LOT_NO가 등록되지 않았을때,
                    BEGIN
                        --SET @ERR_MSG = '등록되지 않은 Lot No. 입니다.;'                                                --800006
                        SET @ERR_MSG = uniLITE.fnGetErrorMsg_omega('800006', '', @LANG_CODE) + ';'          --800006
                        RAISERROR (@ERR_MSG, 16, 1)
                    END

                ELSE IF (@ORDER_UNIT_Q &lt;= 0)     --입력된 LOT_NO의 재고(양품)량이 0일 때,
                    BEGIN
                        --SET @ERR_MSG = '입력된 Lot No.의 재고가 존재하지 않습니다.;'                                     --800008
                        SET @ERR_MSG = uniLITE.fnGetErrorMsg_omega('800008', '', @LANG_CODE) + ';'          --800008
                        RAISERROR (@ERR_MSG, 16, 1)
                    END



                ----2.입력한 Lot_no 보다 선입된 Lot_no 존재여부 확인
                IF (ISNULL(@ERR_MSG, '') = '' AND #{GSFIFO} = 'Y')
                    BEGIN
                        SELECT @LOT_NO_OUT  = LOT_NO
                          FROM BIV150T WITH(NOLOCK)
                         WHERE LOT_NO = (
                                            SELECT MIN(A.LOT_NO)
                                              FROM BIV150T      A WITH(NOLOCK)
                                              LEFT JOIN uniLITE.fnSplit(@LOT_NO_S, ',') AS B ON B.VALUE = A.LOT_NO
                                             WHERE A.COMP_CODE  = @COMP_CODE
                                               AND A.DIV_CODE   = @DIV_CODE
                                               AND A.ITEM_CODE  = @ITEM_CODE
                                               AND A.WH_CODE    = @WH_CODE
                                               AND A.GOOD_STOCK_Q > 0

                                               AND B.VALUE IS NULL
                                        )


                        --IF (ISNULL(@LOT_NO_OUT, '') !='' AND SUBSTRING(@LOT_NO_OUT, 2, 6) &lt; SUBSTRING(@LOT_NO, 2, 6))      --입력된 LOT_NO보다 이전 LOT_NO가 있을 때,
                        IF ( ISNULL(@LOT_NO_OUT, '') !='' AND DATEADD(D, @DAY_TERM, SUBSTRING(@LOT_NO_OUT, 2, 6)) &lt; DATEADD(D, 0, SUBSTRING(@LOT_NO, 2, 6)) )        --입력된 LOT_NO보다 이전 LOT_NO가 있을 때,
                            BEGIN
                                --SET @ERR_MSG = '선입된 Lot No.가 존재 합니다.;' + '(Lot No.: ' + @LOT_NO_OUT + ')'                                         --800009
                                SET @ERR_MSG = uniLITE.fnGetErrorMsg_omega('800009', '', @LANG_CODE) + ';' + '(Lot No.: ' + @LOT_NO_OUT + ')'       --800009
                        RAISERROR (@ERR_MSG, 16, 1)
                            END
                    END


                SELECT UPPER(@ITEM_CODE)+ '|'
                     + UPPER(@LOT_NO)   + '|'
                     + CONVERT(NVARCHAR, @ORDER_UNIT_Q) + '|'
                     + @ITEM_NAME       + '|'
                     + @SPEC            + '|'
                     + @UNIT            + '|'
                     + @INOUT_NUM       + '|'
                     + CONVERT(NVARCHAR, @INOUT_SEQ)    + '|'
                     + @REMARK                                   + '|'
                     + CONVERT(NVARCHAR,@STOCK_Q)     +   '|'
                     + CONVERT(NVARCHAR,@BAD_STOCK_Q )         AS NEWVALUE
                     , @ERR_MSG                                 AS ERR_MSG

            END
        END TRY


        BEGIN CATCH
            IF CURSOR_STATUS('GLOBAL', 'BOX_LOTNO_CUR') > 0
            BEGIN
                CLOSE BOX_LOTNO_CUR
                DEALLOCATE BOX_LOTNO_CUR
            END

            IF CHARINDEX(';', @ERR_MSG) = 0
                SET @ERR_MSG = SUBSTRING(CONVERT(NVARCHAR(20), ERROR_NUMBER()) + ';' + ERROR_MESSAGE(), 1, 1000)
                SELECT @ERR_MSG AS ERR_MSG
        END CATCH
    </select>
	<select id="qtr100ukrvServiceImpl.selectPurchaseReceiptList" parameterType="Map" resultType="rMap">        /* 구매입고참조 */
        --qtr100ukrv.Cqtr100ukrv[fnMtr200QRe1] Query01
        DECLARE     @COMP_CODE              NVARCHAR(08)            -- (필수) 법인코드
	                  , @DIV_CODE               NVARCHAR(08)            -- (필수) 사업장코드
	                  , @INOUT_DATE_FR            NVARCHAR(08)            -- (선택) 출고요청일자(FROM)
	                  , @INOUT_DATE_TO            NVARCHAR(08)            -- (선택) 출고요청일자(TO)
	                  , @ITEM_CODE              NVARCHAR(20)            -- (선택) 품목코드
	                  , @ITEM_NAME              NVARCHAR(200)            -- (선택) 품목명
	                  , @CUSTOM_CODE              NVARCHAR(20)            -- (선택) 거래처코드
	                  , @CUSTOM_NAME              NVARCHAR(40)            -- (선택) 거래처명
	                  , @WH_CODE       				 NVARCHAR(08)			--창고
	                  , @USER_ID                NVARCHAR(100)            -- (필수) 사용자ID

        SET @COMP_CODE              = #{S_COMP_CODE}
        SET @DIV_CODE               = #{DIV_CODE}
        SET @INOUT_DATE_FR            = #{INOUT_DATE_FR}
        SET @INOUT_DATE_TO            = #{INOUT_DATE_TO}
        SET @ITEM_CODE              = #{ITEM_CODE}
        SET @ITEM_NAME              = #{ITEM_NAME}
        SET @CUSTOM_CODE              = #{CUSTOM_CODE}
        SET @CUSTOM_NAME              = #{CUSTOM_NAME}
        SET @WH_CODE              = #{WH_CODE}
        SET @USER_ID                = #{S_USER_ID}

        DECLARE     @RefItem                NVARCHAR(01)             -- 사용자 품목명 참조 유형

        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T WITH (NOLOCK)
        WHERE  COMP_CODE = @COMP_CODE
        AND    USER_ID   = @USER_ID

        SET @RefItem = ISNULL(@RefItem, '0')

       --QC 출고 - 자재 구매 입고 참조
		SELECT A.INOUT_DATE
				, A.INOUT_CODE
				, B.CUSTOM_NAME
				, A.ITEM_CODE
				, C.ITEM_NAME
				, A.LOT_NO
				, A.INOUT_Q
				, A.INOUT_NUM AS BASIS_NUM
				, A.INOUT_SEQ AS BASIS_SEQ
				, D.LOT_YN
				, C.STOCK_UNIT
				, A.WH_CODE
				, E.GOOD_STOCK_Q
				, E.BAD_STOCK_Q
		FROM BTR100T A WITH (NOLOCK)
			 INNER JOIN BCM100T B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.INOUT_CODE=B.CUSTOM_CODE
			 INNER JOIN BPR100T C WITH (NOLOCK) ON A.COMP_CODE=C.COMP_CODE AND A.ITEM_CODE=C.ITEM_CODE
			 INNER JOIN BPR200T D WITH (NOLOCK) ON A.COMP_CODE=D.COMP_CODE AND A.DIV_CODE = D.DIV_CODE AND A.ITEM_CODE=D.ITEM_CODE
			  LEFT JOIN (SELECT COMP_CODE
							 , DIV_CODE
							 , ITEM_CODE
							 , LOT_NO
							 , WH_CODE
							 , SUM(GOOD_STOCK_Q) AS GOOD_STOCK_Q
							 , SUM(BAD_STOCK_Q) AS BAD_STOCK_Q  FROM BIV150T
					    GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, WH_CODE) AS E  ON A.COMP_CODE=E.COMP_CODE
																						AND A.DIV_CODE = E.DIV_CODE
																						AND A.ITEM_CODE=E.ITEM_CODE
																						AND A.LOT_NO = E.LOT_NO
		WHERE A.COMP_CODE= @COMP_CODE
		AND A.DIV_CODE= @DIV_CODE
		AND A.INOUT_TYPE= '1'
		AND   ((A.INOUT_CODE         LIKE        @CUSTOM_CODE    + '%'   AND @CUSTOM_CODE      != '') OR (@CUSTOM_CODE       = ''))
        AND   ((B.CUSTOM_NAME       LIKE '%' + @CUSTOM_NAME    + '%'  AND @CUSTOM_NAME      != '')   OR (@CUSTOM_NAME       = ''))
		 AND  ((A.INOUT_DATE  >=      @INOUT_DATE_FR       AND @INOUT_DATE_FR    != '') OR (@INOUT_DATE_FR     = ''))
        AND   ((A.INOUT_DATE   <![CDATA[<=]]>      @INOUT_DATE_TO   AND @INOUT_DATE_TO    != '') OR (@INOUT_DATE_TO     = ''))
		AND   ((A.ITEM_CODE         LIKE        @ITEM_CODE    + '%'   AND @ITEM_CODE      != '') OR (@ITEM_CODE       = ''))
        AND   ((C.ITEM_NAME        LIKE '%' + @ITEM_NAME    + '%'  AND @ITEM_NAME      != '')   OR (@ITEM_NAME       = ''))
		--AND INOUT_CODE = '01218500'
		AND A.CREATE_LOC = '2'
		AND A.WH_CODE =  @WH_CODE
		AND ISNULL(A.INSPEC_Q,0) = 0
		ORDER BY A.INOUT_CODE

    </select>

	<select id="qtr100ukrvServiceImpl.selectProductionReceiptList" parameterType="Map" resultType="rMap">      /* 생산입고참조 */
<![CDATA[	
        --qtr100ukrv.Cqtr100ukrv[fnMtr200QRe1] Query01
        DECLARE     @COMP_CODE              NVARCHAR(08)            -- (필수) 법인코드
	                  , @DIV_CODE               NVARCHAR(08)            -- (필수) 사업장코드
	                  , @INOUT_DATE_FR            NVARCHAR(08)            -- (선택) 출고요청일자(FROM)
	                  , @INOUT_DATE_TO            NVARCHAR(08)            -- (선택) 출고요청일자(TO)
	                  , @ITEM_CODE              NVARCHAR(20)            -- (선택) 품목코드
	                  , @ITEM_NAME              NVARCHAR(200)            -- (선택) 품목명
	                  , @CUSTOM_CODE              NVARCHAR(20)            -- (선택) 거래처코드
	                  , @CUSTOM_NAME              NVARCHAR(40)            -- (선택) 거래처명
	                  , @WH_CODE                NVARCHAR(08)			--창고
	                  , @WH_CELL_CODE           NVARCHAR(08)			--창고CELL: 20200520 추가
	                  , @USER_ID                NVARCHAR(100)            -- (필수) 사용자ID

        SET @COMP_CODE             = #{S_COMP_CODE}
        SET @DIV_CODE                = #{DIV_CODE}
        SET @INOUT_DATE_FR        = #{INOUT_DATE_FR}
        SET @INOUT_DATE_TO       = #{INOUT_DATE_TO}
        SET @ITEM_CODE              = #{ITEM_CODE}
        SET @ITEM_NAME              = #{ITEM_NAME}
        SET @CUSTOM_CODE         = #{CUSTOM_CODE}
        SET @CUSTOM_NAME         = #{CUSTOM_NAME}
        SET @WH_CODE                = #{WH_CODE}
        SET @WH_CELL_CODE             = #{WH_CELL_CODE}			--창고CELL: 20200520 추가
        SET @USER_ID                  = #{S_USER_ID}

        DECLARE     @RefItem                NVARCHAR(01)             -- 사용자 품목명 참조 유형

        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T WITH (NOLOCK)
        WHERE  COMP_CODE = @COMP_CODE
        AND    USER_ID   = @USER_ID

        SET @RefItem = ISNULL(@RefItem, '0')

       --QC 출고 - 생산 구매 입고 참조
		SELECT A.INOUT_DATE
				, A.INOUT_CODE
				, A.WH_CODE
				, B.TREE_NAME AS WH_NAME
				, A.WH_CELL_CODE
				, A.ITEM_CODE
				, C.ITEM_NAME
				, A.LOT_NO
				, ABS(A.INOUT_Q) AS INOUT_Q
				, A.INOUT_NUM AS BASIS_NUM
				, A.INOUT_SEQ AS BASIS_SEQ
				, D.LOT_YN
				, C.STOCK_UNIT
				, ISNULL(E.GOOD_STOCK_Q,0) AS GOOD_STOCK_Q
				, ISNULL(E.BAD_STOCK_Q ,0) AS BAD_STOCK_Q            
		FROM BTR100T A WITH (NOLOCK)                 
			  INNER JOIN BSA220T B WITH (NOLOCK) ON A.COMP_CODE=B.COMP_CODE AND A.DIV_CODE=B.TYPE_LEVEL AND A.WH_CODE=B.TREE_CODE
			 INNER JOIN BPR100T C WITH (NOLOCK) ON A.COMP_CODE=C.COMP_CODE AND A.ITEM_CODE=C.ITEM_CODE
			 INNER JOIN BPR200T D WITH (NOLOCK) ON A.COMP_CODE=D.COMP_CODE AND A.DIV_CODE = D.DIV_CODE AND A.ITEM_CODE=D.ITEM_CODE
			  LEFT JOIN (SELECT COMP_CODE
							 , DIV_CODE
							 , ITEM_CODE
							 , LOT_NO
							 , WH_CODE
							 , SUM(GOOD_STOCK_Q) AS GOOD_STOCK_Q
							 , SUM(BAD_STOCK_Q) AS BAD_STOCK_Q
							 , WH_CELL_CODE
							FROM BIV150TV WITH (NOLOCK)
					    GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE, LOT_NO, WH_CODE, WH_CELL_CODE) AS E  ON A.COMP_CODE=E.COMP_CODE
																								AND A.DIV_CODE = E.DIV_CODE
																								AND A.WH_CODE  = E.WH_CODE
																								AND ISNULL(A.WH_CELL_CODE, '')  = ISNULL(E.WH_CELL_CODE, '')			--창고CELL: 20200520 추가
																								AND A.ITEM_CODE=E.ITEM_CODE
																								AND A.LOT_NO = E.LOT_NO
		WHERE A.COMP_CODE= @COMP_CODE
		AND A.DIV_CODE= @DIV_CODE
		AND ( A.INOUT_TYPE= '1'
		      OR
		      (A.INOUT_TYPE='2' AND INOUT_TYPE_DETAIL='96')   --재고실사
		    )
		 AND  ((A.INOUT_DATE  >=      @INOUT_DATE_FR       AND @INOUT_DATE_FR    != '') OR (@INOUT_DATE_FR     = ''))
        AND   ((A.INOUT_DATE   <=      @INOUT_DATE_TO   AND @INOUT_DATE_TO    != '') OR (@INOUT_DATE_TO     = ''))
		AND   ((A.ITEM_CODE         LIKE        @ITEM_CODE    + '%'   AND @ITEM_CODE      != '') OR (@ITEM_CODE       = ''))
        AND   ((C.ITEM_NAME        LIKE '%' + @ITEM_NAME    + '%'  AND @ITEM_NAME      != '')   OR (@ITEM_NAME       = ''))
--		AND A.CREATE_LOC = '1'  --
		AND ISNULL(A.INSPEC_Q,0) = 0
		AND A.WH_CODE =  @WH_CODE
		AND ((ISNULL(A.WH_CELL_CODE, '') =  ISNULL(@WH_CELL_CODE, '') AND  ISNULL(@WH_CELL_CODE, '') != '') OR (ISNULL(@WH_CELL_CODE, '') = ''))			--창고CELL: 20200520 추가
		AND ISNULL(E.GOOD_STOCK_Q,0) > 0
--중복 출고가 가능하므로 제거		
--    AND NOT EXISTS (SELECT TOP 1 1 FROM BTR100T WITH (NOLOCK) WHERE COMP_CODE=A.COMP_CODE AND DIV_CODE=A.DIV_CODE AND BASIS_NUM=A.INOUT_NUM AND BASIS_SEQ=A.INOUT_SEQ)
		ORDER BY A.INOUT_CODE
]]>
    </select>
</mapper>