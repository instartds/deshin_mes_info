<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biv600skrvServiceImpl">
	<select id="biv600skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	/* UBRpt02Krv.CBiv600SKr[fnBiv300q1]Query01 */
	BEGIN
		SET NOCOUNT ON
		SET ARITHABORT ON
	
		DECLARE @CompCode		NVARCHAR(08)	/* 법인코드		*/
		      , @UserId			NVARCHAR(100)	/* 사용자ID		*/
		      , @LangType		NVARCHAR(2)		/* 언어구분		*/
	          , @RefItem		NVARCHAR(01)
	          , @DateFormat		NVARCHAR(10)
	
	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = N'KR'
	
		/* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
		FROM BSA300T WITH (NOLOCK)
		WHERE USER_ID = @UserId
	
	    SET @RefItem = ISNULL(@RefItem, N'0')
	
		/* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
		FROM BSA100T WITH (NOLOCK)
		WHERE COMP_CODE = @CompCode
			AND MAIN_CODE = N'B044'
			AND REF_CODE1 = N'Y'
	
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
	
		/* 데이터 조회 */
	    SELECT 
	           A.PROD_ITEM_CODE AS ITEM_CODE
	         , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                ELSE C1.ITEM_NAME
	           END ITEM_NAME
	         , C1.SPEC
	         , C1.STOCK_UNIT
	         , SUM(ISNULL(B.STOCK_Q     , 0)) AS STOCK_Q
	         , SUM(ISNULL(B.GOOD_STOCK_Q, 0)) AS GOOD_STOCK_Q
	         , SUM(ISNULL(B.BAD_STOCK_Q , 0)) AS BAD_STOCK_Q
	    FROM              BPR500T  A  WITH (NOLOCK)
	           LEFT  JOIN BIV100T  B  WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
	                                               AND B.DIV_CODE   = A.DIV_CODE
	                                               AND B.ITEM_CODE  = A.PROD_ITEM_CODE
	           LEFT  JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                               AND C1.ITEM_CODE = A.PROD_ITEM_CODE
	    WHERE	A.COMP_CODE       = @CompCode
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			AND A.DIV_CODE        = #{DIV_CODE}
		</if>	
			AND A.CHILD_ITEM_CODE = '$'
	
			/*선택조건 Start */
		<if test="@foren.Ognl@isNotEmpty(WH_CODE)">	
			AND B.WH_CODE         = #{WH_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(FROM_ITEM)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 표준화 -->
	        AND A.PROD_ITEM_CODE &gt;= #{FROM_ITEM}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(TO_ITEM)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 표준화 -->
	        AND A.PROD_ITEM_CODE &lt;= #{TO_ITEM}
	    </if>
	     
		<if test="@foren.Ognl@isNotEmpty(FROM_NAME) and @foren.Ognl@isEmpty(FROM_ITEM)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 표준화 -->
			AND (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
					  WHEN @RefItem = '2' THEN C1.ITEM_NAME2
										  ELSE C1.ITEM_NAME
				 END)            &gt;= #{FROM_NAME}
		</if>
		
		<if test="@foren.Ognl@isNotEmpty(TO_NAME) and @foren.Ognl@isEmpty(TO_ITEM)"> <!-- 20210811 수정: 품목 조회조건 쿼리문 표준화 -->
			AND (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
					  WHEN @RefItem = '2' THEN C1.ITEM_NAME2
										  ELSE C1.ITEM_NAME
				 END)            &lt;= #{TO_NAME}
		</if>
			/* 선택조건 End */
	
	    GROUP BY A.COMP_CODE, A.DIV_CODE, A.PROD_ITEM_CODE, C1.ITEM_NAME, C1.ITEM_NAME1, C1.ITEM_NAME2, C1.SPEC, C1.STOCK_UNIT
	    ORDER BY A.PROD_ITEM_CODE
	
		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END
	</select>
	
	
	<select id="biv600skrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
	/* UBRpt02Krv.CBiv600SKr[fnBiv300q2]Query01 */
	BEGIN
		SET NOCOUNT ON
		SET ARITHABORT ON
	
		DECLARE @CompCode		NVARCHAR(08)	/* 법인코드		*/
		      , @UserId			NVARCHAR(100)	/* 사용자ID		*/
		      , @LangType		NVARCHAR(2)		/* 언어구분		*/
	          , @RefItem		NVARCHAR(01)
	          , @DateFormat		NVARCHAR(10)
	
	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = N'KR'
	
		/* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
		FROM BSA300T WITH (NOLOCK)
		WHERE USER_ID = @UserId
	
	    SET @RefItem = ISNULL(@RefItem, N'0')
	
		/* 날짜 포맷 유형 설정 */
		SELECT TOP 1 @DateFormat = CODE_NAME
		FROM BSA100T WITH (NOLOCK)
		WHERE COMP_CODE = @CompCode
			AND MAIN_CODE = N'B044'
			AND REF_CODE1 = N'Y'
	
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
	
		/* 데이터 조회 */
	
		DECLARE @QRY_TYPE		NVARCHAR(2) 
		
		SET @QRY_TYPE =  #{QRY_TYPE}

		IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('biv600skrv_RecordSet')) DROP TABLE biv600skrv_RecordSet   --20210727 추가 / 임시테이블 명 변경 (biv600skrv_RecordSet)

	    CREATE TABLE  biv600skrv_RecordSet
	               (KEY_ID             INTEGER       IDENTITY(1, 1) PRIMARY KEY    /* Key ID			*/
	             , ITEM_CODE           NVARCHAR(20)                                /* 품목코드			*/
	             , ITEM_NAME           NVARCHAR(200)                               /* 품목명			*/
	             , SPEC                NVARCHAR(160)                               /* 규격				*/
	             , STOCK_UNIT          NVARCHAR(03)                                /* 재고단위			*/
	             , STOCK_Q             NVARCHAR(30)  DEFAULT 0                     /* 현재고			*/
	             , WH_NAME1            NVARCHAR(30)                                /* 창고 1명			*/
	             , WH_STOCK1           NVARCHAR(30)  DEFAULT 0                     /* 창고 1 현재고		*/
	             , WH_NAME2            NVARCHAR(30)                                /* 창고 2명			*/
	             , WH_STOCK2           NVARCHAR(30)  DEFAULT 0                     /* 창고 2 현재고		*/
	             , WH_NAME3            NVARCHAR(30)                                /* 창고 3명			*/
	             , WH_STOCK3           NVARCHAR(30)  DEFAULT 0                     /* 창고 3 현재고		*/
	             , WH_NAME4            NVARCHAR(30)                                /* 창고 4명			*/
	             , WH_STOCK4           NVARCHAR(30)  DEFAULT 0                     /* 창고 4 현재고		*/
	             , WH_NAME5            NVARCHAR(30)                                /* 창고 5명			*/
	             , WH_STOCK5           NVARCHAR(30)  DEFAULT 0                     /* 창고 5 현재고		*/
	             , WH_NAME6            NVARCHAR(30)                                /* 창고 6명			*/
	             , WH_STOCK6           NVARCHAR(30)  DEFAULT 0                     /* 창고 6 현재고		*/
	             , WH_NAME7            NVARCHAR(30)                                /* 창고 7명			*/
	             , WH_STOCK7           NVARCHAR(30)  DEFAULT 0                     /* 창고 7 현재고		*/
	             , WH_NAME8            NVARCHAR(30)                                /* 창고 8명			*/
	             , WH_STOCK8           NVARCHAR(30)  DEFAULT 0                     /* 창고 8 현재고		*/
	             , WH_NAME9            NVARCHAR(30)                                /* 창고 9명			*/
	             , WH_STOCK9           NVARCHAR(30)  DEFAULT 0                     /* 창고 9 현재고		*/
	             , WH_NAME10           NVARCHAR(30)                                /* 창고 10명			*/
	             , WH_STOCK10          NVARCHAR(30)  DEFAULT 0                     /* 창고 10 현재고	*/
	             , WH_NAME11           NVARCHAR(30)                                /* 창고 11명			*/
	             , WH_STOCK11          NVARCHAR(30)  DEFAULT 0                     /* 창고 11 현재고	*/
	             , WH_NAME12           NVARCHAR(30)                                /* 창고 12명			*/
	             , WH_STOCK12          NVARCHAR(30)  DEFAULT 0                     /* 창고 12 현재고	*/
	             , WH_NAME13           NVARCHAR(30)                                /* 창고 13명			*/
	             , WH_STOCK13          NVARCHAR(30)  DEFAULT 0                     /* 창고 13 현재고	*/
	             , WH_NAME14           NVARCHAR(30)                                /* 창고 14명			*/
	             , WH_STOCK14          NVARCHAR(30)  DEFAULT 0                     /* 창고 14 현재고	*/
	             , WH_NAME15           NVARCHAR(30)                                /* 창고 15명			*/
	             , WH_STOCK15          NVARCHAR(30)  DEFAULT 0                     /* 창고 15 현재고	*/
	             , WH_NAME16           NVARCHAR(30)                                /* 창고 16명			*/
	             , WH_STOCK16          NVARCHAR(30)  DEFAULT 0                     /* 창고 16 현재고	*/
	             , WH_NAME17           NVARCHAR(30)                                /* 창고 17명			*/
	             , WH_STOCK17          NVARCHAR(30)  DEFAULT 0                     /* 창고 17 현재고	*/
	             , WH_NAME18           NVARCHAR(30)                                /* 창고 18명			*/
	             , WH_STOCK18          NVARCHAR(30)  DEFAULT 0                     /* 창고 18 현재고	*/
	             , WH_NAME19           NVARCHAR(30)                                /* 창고 19명			*/
	             , WH_STOCK19          NVARCHAR(30)  DEFAULT 0                     /* 창고 19 현재고	*/
	             , WH_NAME20           NVARCHAR(30)                                /* 창고 20명			*/
	             , WH_STOCK20          NVARCHAR(30)  DEFAULT 0                     /* 창고 20 현재고	*/
	             , LEVEL               INTEGER
	             , SORT_FLD            NVARCHAR(2000)
	               )
		IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID('biv600skrv_WhList')) DROP TABLE biv600skrv_WhList   --20210727 추가 / 임시테이블 명 변경 (biv600skrv_WhList)
	
	    CREATE TABLE biv600skrv_WhList
	               (
	               WH_CODE             NVARCHAR(08) PRIMARY KEY                    /* 창고코드			*/
	             , WH_NAME             NVARCHAR(30)                                /* 창고명			*/
	             , WH_NUM              INTEGER      IDENTITY(1, 1)
	               )
	
		/*  CURSOR 변수	*/
	    DECLARE    @KeyID              INTEGER
	             , @StockQ             NUMERIC(20, 6)
	             , @WhCode             NVARCHAR(08)
	             , @WhName             NVARCHAR(30)
	             , @WhNum              INTEGER
	
	    INSERT INTO biv600skrv_WhList(WH_CODE, WH_NAME)
	    SELECT A.TREE_CODE, A.TREE_NAME
	    FROM BSA220T A WITH (NOLOCK)
		WHERE	A.COMP_CODE  = @CompCode
			AND A.TYPE_LEVEL = #{DIV_CODE}
			AND A.USE_YN     = 'Y'
	    ORDER BY A.TREE_CODE
	
		/*  BOM 전개를 통한 자품목 정보 등록	*/
	    INSERT INTO  biv600skrv_RecordSet(ITEM_CODE, ITEM_NAME, SPEC, STOCK_UNIT, LEVEL, SORT_FLD
	                         , WH_NAME1,  WH_NAME2,  WH_NAME3,  WH_NAME4,  WH_NAME5
	                         , WH_NAME6,  WH_NAME7,  WH_NAME8,  WH_NAME9,  WH_NAME10
	                         , WH_NAME11, WH_NAME12, WH_NAME13, WH_NAME14, WH_NAME15
	                         , WH_NAME16, WH_NAME17, WH_NAME18, WH_NAME19, WH_NAME20)
	    SELECT  A.ITEM_CODE, A.ITEM_NAME, A.SPEC, A.STOCK_UNIT, A.LEVEL, A.SORT_FLD
	         ,  C1.WH_NAME,  C2.WH_NAME,  C3.WH_NAME,  C4.WH_NAME,  C5.WH_NAME
	         ,  C6.WH_NAME,  C7.WH_NAME,  C8.WH_NAME,  C9.WH_NAME, C10.WH_NAME
	         , C11.WH_NAME, C12.WH_NAME, C13.WH_NAME, C14.WH_NAME, C15.WH_NAME
	         , C16.WH_NAME, C17.WH_NAME, C18.WH_NAME, C19.WH_NAME, C20.WH_NAME
		/* uniLITE.fnBOMExplosion 테이블 값 함수 */
	    FROM   uniLITE.fnBOMExplosion(@CompCode, #{DIV_CODE}, #{ITEM_CODE}, '', #{USER_ID}, '') A
	           LEFT  JOIN biv600skrv_WhList  C1  ON  C1.WH_NUM = 1
	           LEFT  JOIN  biv600skrv_WhList  C2  ON  C2.WH_NUM = 2
	           LEFT  JOIN  biv600skrv_WhList  C3  ON  C3.WH_NUM = 3
	           LEFT  JOIN  biv600skrv_WhList  C4  ON  C4.WH_NUM = 4
	           LEFT  JOIN  biv600skrv_WhList  C5  ON  C5.WH_NUM = 5
	           LEFT  JOIN  biv600skrv_WhList  C6  ON  C6.WH_NUM = 6
	           LEFT  JOIN  biv600skrv_WhList  C7  ON  C7.WH_NUM = 7
	           LEFT  JOIN  biv600skrv_WhList  C8  ON  C8.WH_NUM = 8
	           LEFT  JOIN  biv600skrv_WhList  C9  ON  C9.WH_NUM = 9
	           LEFT  JOIN  biv600skrv_WhList  C10 ON C10.WH_NUM = 10
	           LEFT  JOIN  biv600skrv_WhList  C11 ON C11.WH_NUM = 11
	           LEFT  JOIN  biv600skrv_WhList  C12 ON C12.WH_NUM = 12
	           LEFT  JOIN  biv600skrv_WhList  C13 ON C13.WH_NUM = 13
	           LEFT  JOIN  biv600skrv_WhList  C14 ON C14.WH_NUM = 14
	           LEFT  JOIN  biv600skrv_WhList  C15 ON C15.WH_NUM = 15
	           LEFT  JOIN  biv600skrv_WhList  C16 ON C16.WH_NUM = 16
	           LEFT  JOIN  biv600skrv_WhList  C17 ON C17.WH_NUM = 17
	           LEFT  JOIN  biv600skrv_WhList  C18 ON C18.WH_NUM = 18
	           LEFT  JOIN  biv600skrv_WhList  C19 ON C19.WH_NUM = 19
	           LEFT  JOIN  biv600skrv_WhList  C20 ON C20.WH_NUM = 20
	
	
		/*  각 자품목에 대한 창고별 재고량 변경	*/
	    DECLARE CUR_0078253 CURSOR FOR
	        SELECT A.KEY_ID
	             ,ISNULL(CASE WHEN @QRY_TYPE = '0' THEN B.STOCK_Q
	                           WHEN @QRY_TYPE = '1' THEN B.GOOD_STOCK_Q
	                           WHEN @QRY_TYPE = '2' THEN B.BAD_STOCK_Q
	                           ELSE 0.0
	                      END, 0) AS STOCK_Q
	             , C.WH_CODE
	             , C.WH_NAME
	             , C.WH_NUM
	        FROM            biv600skrv_RecordSet A
				LEFT  JOIN BIV100T    B  WITH (NOLOCK) ON B.COMP_CODE = @CompCode
													  AND B.DIV_CODE  = #{DIV_CODE}
													  AND B.ITEM_CODE = A.ITEM_CODE
				LEFT  JOIN  biv600skrv_WhList    C                ON C.WH_CODE   = B.WH_CODE
			/* 선택조건 Start */
			
	        
	       <if test="@foren.Ognl@isNotEmpty(WH_CODE)">   
	       WHERE C.WH_CODE = #{WH_CODE}
	       </if> 
			/* 선택조건 End */
	
	    OPEN CUR_0078253
	    FETCH NEXT FROM CUR_0078253 INTO @KeyID, @StockQ, @WhCode, @WhName, @WhNum
	    WHILE (@@FETCH_STATUS = 0)
	    BEGIN
	        UPDATE  biv600skrv_RecordSet
	        SET    WH_STOCK1  = CASE WHEN @WhNum =  1 THEN @StockQ ELSE WH_STOCK1  END
	             , WH_STOCK2  = CASE WHEN @WhNum =  2 THEN @StockQ ELSE WH_STOCK2  END
	             , WH_STOCK3  = CASE WHEN @WhNum =  3 THEN @StockQ ELSE WH_STOCK3  END
	             , WH_STOCK4  = CASE WHEN @WhNum =  4 THEN @StockQ ELSE WH_STOCK4  END
	             , WH_STOCK5  = CASE WHEN @WhNum =  5 THEN @StockQ ELSE WH_STOCK5  END
	             , WH_STOCK6  = CASE WHEN @WhNum =  6 THEN @StockQ ELSE WH_STOCK6  END
	             , WH_STOCK7  = CASE WHEN @WhNum =  7 THEN @StockQ ELSE WH_STOCK7  END
	             , WH_STOCK8  = CASE WHEN @WhNum =  8 THEN @StockQ ELSE WH_STOCK8  END
	             , WH_STOCK9  = CASE WHEN @WhNum =  9 THEN @StockQ ELSE WH_STOCK9  END
	             , WH_STOCK10 = CASE WHEN @WhNum = 10 THEN @StockQ ELSE WH_STOCK10 END
	             , WH_STOCK11 = CASE WHEN @WhNum = 11 THEN @StockQ ELSE WH_STOCK11 END
	             , WH_STOCK12 = CASE WHEN @WhNum = 12 THEN @StockQ ELSE WH_STOCK12 END
	             , WH_STOCK13 = CASE WHEN @WhNum = 13 THEN @StockQ ELSE WH_STOCK13 END
	             , WH_STOCK14 = CASE WHEN @WhNum = 14 THEN @StockQ ELSE WH_STOCK14 END
	             , WH_STOCK15 = CASE WHEN @WhNum = 15 THEN @StockQ ELSE WH_STOCK15 END
	             , WH_STOCK16 = CASE WHEN @WhNum = 16 THEN @StockQ ELSE WH_STOCK16 END
	             , WH_STOCK17 = CASE WHEN @WhNum = 17 THEN @StockQ ELSE WH_STOCK17 END
	             , WH_STOCK18 = CASE WHEN @WhNum = 18 THEN @StockQ ELSE WH_STOCK18 END
	             , WH_STOCK19 = CASE WHEN @WhNum = 19 THEN @StockQ ELSE WH_STOCK19 END
	             , WH_STOCK20 = CASE WHEN @WhNum = 20 THEN @StockQ ELSE WH_STOCK20 END
	             , STOCK_Q = ISNULL(STOCK_Q, 0) + @StockQ
	        WHERE  KEY_ID  = @KeyID
	
	        FETCH NEXT FROM CUR_0078253 INTO @KeyID, @StockQ, @WhCode, @WhName, @WhNum
	    END
	    CLOSE CUR_0078253
	    DEALLOCATE CUR_0078253
	
	    SELECT KEY_ID
	         , CASE WHEN LEVEL &gt; 0 THEN REPLICATE('_', LEVEL) + ' ' ELSE '' END + ITEM_CODE AS ITEM_CODE
	         , ITEM_NAME, SPEC, STOCK_UNIT, STOCK_Q
	         , WH_NAME1,  WH_STOCK1,  WH_NAME2,  WH_STOCK2,  WH_NAME3,  WH_STOCK3,  WH_NAME4,  WH_STOCK4,  WH_NAME5,  WH_STOCK5
	         , WH_NAME6,  WH_STOCK6,  WH_NAME7,  WH_STOCK7,  WH_NAME8,  WH_STOCK8,  WH_NAME9,  WH_STOCK9,  WH_NAME10, WH_STOCK10
	         , WH_NAME11, WH_STOCK11, WH_NAME12, WH_STOCK12, WH_NAME13, WH_STOCK13, WH_NAME14, WH_STOCK14, WH_NAME15, WH_STOCK15
	         , WH_NAME16, WH_STOCK16, WH_NAME17, WH_STOCK17, WH_NAME18, WH_STOCK18, WH_NAME19, WH_STOCK19, WH_NAME20, WH_STOCK20
	    FROM    biv600skrv_RecordSet
	    ORDER BY SORT_FLD
	
		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END
	
	</select>
</mapper>