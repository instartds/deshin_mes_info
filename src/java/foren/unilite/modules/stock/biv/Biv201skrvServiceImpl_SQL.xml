<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biv201skrvServiceImpl">
	<select id="biv201skrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">	/* 창고 초기화 */
		SELECT
			A.WH_CODE
		FROM BSA210T A WITH(NOLOCK)
			LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
											AND B.DEPT_CODE = A.TREE_CODE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND B.USER_ID = #{S_USER_ID}
	</select>
	
	<select id="biv201skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
BEGIN

SET NOCOUNT ON
SET ARITHABORT ON
	
	DECLARE
			@COMP_CODE			NVARCHAR(08)
			,@DIV_CODE			NVARCHAR(08)
			,@SALE_DATE_FR		NVARCHAR(08)
			,@SALE_DATE_TO		NVARCHAR(08)
			,@DEPT_CODE			NVARCHAR(08)
			,@WH_CODE			NVARCHAR(08)
			,@ITEM_CODE			NVARCHAR(20)
			,@ERROR_DESC		NVARCHAR(1000)
			,@WON_CALC_BAS		NVARCHAR(01)
	
		SET @COMP_CODE		= #{S_COMP_CODE}
		SET @DIV_CODE		= #{DIV_CODE}
		SET @SALE_DATE_FR	= #{SALE_DATE_FR}
		SET @SALE_DATE_TO	= #{SALE_DATE_TO}
		SET @DEPT_CODE		= #{DEPT_CODE}
		SET @WH_CODE		= #{WH_CODE}
		SET @ITEM_CODE		= #{PROD_ITEM_CODE}
		SET @WON_CALC_BAS	= #{WON_CALC_BAS}

	SELECT 
		 A.COMP_CODE					AS COMP_CODE
		,A.DIV_CODE						AS DIV_CODE
		,A.DEPT_CODE					AS DEPT_CODE
		,E.TREE_NAME					AS DEPT_NAME
		,B.WH_CODE						AS WH_CODE
		,F.TREE_NAME					AS WH_NAME
		,B.ITEM_CODE					AS PROD_ITEM_CODE
		,MAX(D1.ITEM_NAME)				AS PROD_ITEM_NAME
		,CASE WHEN ROW_NUMBER() OVER (PARTITION BY A.COMP_CODE, A.DIV_CODE, A.DEPT_CODE, B.WH_CODE, B.ITEM_CODE ORDER BY A.COMP_CODE) != 1 THEN 0 ELSE SUM(B.SALE_Q) END AS SALE_Q
		,ROW_NUMBER() OVER (PARTITION BY A.COMP_CODE, A.DIV_CODE, A.DEPT_CODE, B.WH_CODE, B.ITEM_CODE ORDER BY A.COMP_CODE) AS SEQ
		,C.CHILD_ITEM_CODE				AS ITEM_CODE
		,MAX(D2.ITEM_NAME)				AS ITEM_NAME
		,(((ISNULL(C.UNIT_Q, 1.0)) / (ISNULL(C.PROD_UNIT_Q, 1.0)) * SUM(B.SALE_Q)) + ((ISNULL(C.UNIT_Q, 1.0)) / (ISNULL(C.PROD_UNIT_Q, 1.0)) * SUM(B.SALE_Q) * ((C.LOSS_RATE) / 100))) AS INOUT_Q
		,CASE    WHEN @WON_CALC_BAS = '1' THEN CEILING((((ISNULL(C.UNIT_Q, 1.0)) / (ISNULL(C.PROD_UNIT_Q, 1.0)) * SUM(B.SALE_Q)) + ((ISNULL(C.UNIT_Q, 1.0)) / (ISNULL(C.PROD_UNIT_Q, 1.0)) * SUM(B.SALE_Q) * ((C.LOSS_RATE) / 100))))
					WHEN @WON_CALC_BAS = '2' THEN FLOOR((((ISNULL(C.UNIT_Q, 1.0)) / (ISNULL(C.PROD_UNIT_Q, 1.0)) * SUM(B.SALE_Q)) + ((ISNULL(C.UNIT_Q, 1.0)) / (ISNULL(C.PROD_UNIT_Q, 1.0)) * SUM(B.SALE_Q) * ((C.LOSS_RATE) / 100))))
					WHEN @WON_CALC_BAS = '3' THEN ROUND((((ISNULL(C.UNIT_Q, 1.0)) / (ISNULL(C.PROD_UNIT_Q, 1.0)) * SUM(B.SALE_Q)) + ((ISNULL(C.UNIT_Q, 1.0)) / (ISNULL(C.PROD_UNIT_Q, 1.0)) * SUM(B.SALE_Q) * ((C.LOSS_RATE) / 100))), 0) END AS CALC_INOUT_Q
		,ISNULL(C.UNIT_Q, 1.0) 			AS UNIT_Q
		,ISNULL(C.PROD_UNIT_Q, 1.0) 	AS PROD_UNIT_Q
		,ISNULL(C.LOSS_RATE, 1.0) 		AS LOSS_RATE
		FROM        SSA100T A WITH(NOLOCK)
		INNER JOIN SSA110T B WITH(NOLOCK) ON	   A.COMP_CODE = B.COMP_CODE
																AND A.DIV_CODE	 = B.DIV_CODE
																AND A.BILL_NUM	 = B.BILL_NUM
																AND EXISTS(SELECT ITEM_CODE FROM BPR200T WITH(NOLOCK)
																						WHERE COMP_CODE		= B.COMP_CODE 
																							AND DIV_CODE	= B.DIV_CODE 
																							AND ITEM_CODE	= B.ITEM_CODE
																							AND ITEM_ACCOUNT= '10')
		INNER JOIN BPR500T C WITH(NOLOCK) ON C.COMP_CODE			= B.COMP_CODE 
															 AND C.DIV_CODE			= B.DIV_CODE 
															 AND C.PROD_ITEM_CODE	= B.ITEM_CODE 
															 AND C.CHILD_ITEM_CODE	!= '$'
		LEFT JOIN BPR100T D1 WITH(NOLOCK) ON D1.COMP_CODE = C.COMP_CODE 
															AND D1.ITEM_CODE	= C.PROD_ITEM_CODE
		LEFT JOIN BPR100T D2 WITH(NOLOCK) ON D2.COMP_CODE = C.COMP_CODE 
															AND D2.ITEM_CODE	= C.CHILD_ITEM_CODE
		INNER JOIN BSA210T E WITH(NOLOCK) ON E.COMP_CODE 	= A.COMP_CODE
           								   AND E.TYPE_LEVEL = A.DIV_CODE
           								   AND E.TREE_CODE  = A.DEPT_CODE
        INNER JOIN BSA220T F WITH(NOLOCK) ON B.COMP_CODE  = F.COMP_CODE 
          								   AND B.DIV_CODE   = F.TYPE_LEVEL 
          								   AND B.WH_CODE    = F.TREE_CODE																
	WHERE A.COMP_CODE  = @COMP_CODE
		AND A.DIV_CODE = @DIV_CODE
		AND A.SALE_DATE &gt;= @SALE_DATE_FR
		AND A.SALE_DATE &lt;= @SALE_DATE_TO
		AND (@DEPT_CODE  = '' OR (@DEPT_CODE != ''	AND A.DEPT_CODE = @DEPT_CODE))
		AND (@WH_CODE    = '' OR (@WH_CODE	 != ''	AND B.WH_CODE	= @WH_CODE))
		AND (@ITEM_CODE  = '' OR (@ITEM_CODE != ''	AND B.ITEM_CODE	= @ITEM_CODE))

		GROUP BY A.COMP_CODE, A.DIV_CODE, A.DEPT_CODE,E.TREE_NAME, B.WH_CODE,F.TREE_NAME, B.ITEM_CODE, C.CHILD_ITEM_CODE, C.UNIT_Q, C.PROD_UNIT_Q, C.LOSS_RATE
		--HAVING SUM(A.INOUT_Q) &gt; 0
		ORDER BY A.COMP_CODE, A.DIV_CODE, A.DEPT_CODE, B.WH_CODE, B.ITEM_CODE, C.CHILD_ITEM_CODE

SET ARITHABORT OFF
SET NOCOUNT OFF

END 
	</select>	
	

</mapper>