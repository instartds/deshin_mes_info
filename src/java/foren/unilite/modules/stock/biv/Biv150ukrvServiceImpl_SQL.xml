<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Biv150ukrvService">	
	<select id="Biv150ukrvService.Yyyymm" parameterType="Map" resultType="rMap">	/* 창고콤보 바꿀시 실사일자 SET */
	/*biv150ukrv.Cbiv150ukrv[fnBiv150QCdt] Query01*/
	BEGIN
	    DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드*/
	                  , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장*/
	                  , @WH_CODE            NVARCHAR(08)                /* (필수) 창고*/
	                  , @WH_CELL_CODE       NVARCHAR(20)                /* (필수) 창고CELL*/
	
	/*  1. 변수 값 할당 */
	    SET @COMP_CODE          = #{S_COMP_CODE}
	    SET @DIV_CODE           = #{DIV_CODE}
	    SET @WH_CODE            = #{WH_CODE}
	    SET @WH_CELL_CODE       = #{WH_CELL_CODE}
	
	    SELECT ISNULL(MAX(COUNT_DATE), '00000000') AS COUNT_DATE
	    FROM   BIV300T A  WITH (NOLOCK)
	    WHERE  A.COMP_CODE    = @COMP_CODE
	    AND    A.DIV_CODE     = @DIV_CODE
	    AND    A.WH_CODE      = @WH_CODE
	    AND    A.WH_CELL_CODE = @WH_CELL_CODE 
	    AND    A.COUNT_FLAG   = 'P'
	END
	</select>
	
	<select id="Biv150ukrvService.selectList" parameterType="Map" resultType="rMap">	
	/* biv150ukrv.Cbiv150ukrv[fnBiv150QStd] Query01 */
	BEGIN
	    DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드 */
	                  , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장 */
	                  , @WH_CODE            NVARCHAR(08)                /* (필수) 창고 */
	                  , @WH_CELL_CODE       NVARCHAR(20)                /* (선택) 창고CELL */
	                  , @COUNT_DATE         NVARCHAR(08)                /* (필수) 실사(선택)일자 */
	
	/* 1. 변수 값 할당 */
	    SET @COMP_CODE          = #{S_COMP_CODE}
	    SET @DIV_CODE           = #{DIV_CODE}
	    SET @WH_CODE            = #{WH_CODE}
	    SET @WH_CELL_CODE       = #{WH_CELL_CODE}
	    SET @COUNT_DATE         = #{COUNT_DATE}
	
	    SELECT A.COUNT_DATE
	         , A.DIV_CODE
	         , A.WH_CODE
	         , A.ITEM_CODE
	         , A.COUNT_FLAG
	         , CASE WHEN A.COUNT_CONT_DATE = '00000000' THEN ''
	                ELSE uniLITE.fnGetUserDate(A.COMP_CODE, A.COUNT_CONT_DATE)
	           END  AS COUNT_CONT_DATE
	    FROM   BIV300T A  WITH (NOLOCK)
	    WHERE  A.COMP_CODE    = #{S_COMP_CODE}
	    AND    A.DIV_CODE     = #{DIV_CODE}
	    AND    A.COUNT_DATE   = #{COUNT_DATE}
	    AND    A.WH_CODE      = #{WH_CODE}
	    AND    A.WH_CELL_CODE LIKE #{WH_CELL_CODE} + '%'
	    ORDER BY A.ITEM_CODE
	END
	</select>
	<update id="Biv150ukrvService.execStockAdjust" parameterType="Map" statementType="CALLABLE">    
		{call SP_STOCK_StockAdjust (
			#{S_COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{COUNT_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{WH_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{WH_CELL_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{INOUT_PRSN, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{WORK_FLAG, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{S_USER_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>



<!-- 사용 안 함 -->
	<select id="Biv150ukrvService.insertDetail" parameterType="Map" resultType="rMap">		
	/*biv150ukrv.Cbiv150ukrv[fnBiv150SCfm] Query01*/
	/*
	 실사조정
	
	1. 변수 값 할당
	2. 재고평가 방법 조회(Default: 월 총평균법)
	3. 실사조정 수불 생성
	    3-1. 작업할 실사선별 자료가 없을경우, 에러 처리
	    3-2. 수불번호 채번
	    3-3. 불량 수불 생성
	        3-3-1. 수불정보 생성
	        3-3-2. 재고평가 방법에 따라 재고평가 수행
	    3-4. 불량 수불 생성
	        3-4-1. 수불정보 생성
	        3-4-2. 재고평가 방법에 따라 재고평가 수행
	4. 실사조정 처리 결과 수정
	5. Error Handler 처리
	*/
	BEGIN
	    DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드*/
	                  , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장코드*/
	
	                  , @COUNT_DATE         NVARCHAR(08)                /* (필수) 실사선별일*/
	
	                  , @WH_CODE            NVARCHAR(08)                /* (필수) 창고코드*/
	                  , @WH_CELL_CODE       NVARCHAR(20)                /* (선택) 창고Cell코드*/
	
	                  , @INOUT_PRSN         NVARCHAR(10)                /* (선택) 수불담당자*/
	
	                  , @USER_ID            NVARCHAR(100)                /* (필수) USER ID*/
	
	    SET NOCOUNT ON
	    SET ARITHABORT ON
	
	/*  일반 변수*/
	    DECLARE         @InOutNum           NVARCHAR(20)                /* 수불번호*/
	                  , @InOutSeq           NUMERIC(4, 0)               /* 수불순번*/
	                  , @GoodQ              NUMERIC(20, 6)              /* 양품수량*/
	                  , @BadQ               NUMERIC(20, 6)              /* 불량수량*/
	                  , @InOutP             NUMERIC(20, 6)              /* 단가*/
	                  , @KEY_VALUE          NVARCHAR(20)                /* KEY_VALUE*/
	
	/*  CURSOR 변수*/
	    DECLARE         @ItemCode           NVARCHAR(20)                /* 품목코드*/
	                  , @LotNo              NVARCHAR(20)                /* LOT NO*/
	                  , @WhCellCode         NVARCHAR(20)                /* 창고Cell 코드*/
	                  , @CountContDate      NVARCHAR(08)                /* 실사조정일*/
	                  , @GoodStockBookQ     NUMERIC(20, 6)              /* 장부 양품 수량*/
	                  , @BadStockBookQ      NUMERIC(20, 6)              /* 장부 불량 수량*/
	                  , @GoodStockQ         NUMERIC(20, 6)              /* 실사 양품 수량*/
	                  , @BadStockQ          NUMERIC(20, 6)              /* 실사 불량 수량*/
	                  , @CountFlag          NVARCHAR(01)                /* 실사조정 유형(P: 등록, C: 반영, O: 선별)*/
	                  , @BasisP             NUMERIC(20, 6)              /* 평균단가*/
	
	/*  에러변수*/
	    DECLARE         @ErrorCode          NVARCHAR(20)                /* 에러코드명*/
	                  , @ErrorDesc          NVARCHAR(1000)              /* 에러명*/
	
	/*  1. 변수 값 할당 */
	    SET @COMP_CODE      = #{S_COMP_CODE}
	    SET @DIV_CODE       = #{DIV_CODE}
	
	    SET @COUNT_DATE     = #{COUNT_DATE}
	
	    SET @WH_CODE        = #{WH_CODE}
	    SET @WH_CELL_CODE   = #{WH_CELL_CODE}
	
	    SET @INOUT_PRSN     = CASE WHEN #{INOUT_PRSN} = '' THEN NULL ELSE #{INOUT_PRSN} END
	
	    SET @USER_ID        = #{S_USER_ID}
	    SET @KEY_VALUE		= LEFT(REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(30), GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '') 
       						  + RIGHT(N'0000' + CONVERT(NVARCHAR, CONVERT(INT, RAND() * 10000)), 3), 20)
	
	/*  2. 마감여부 조회 */
	    DECLARE         @BasisMonth         NVARCHAR(08)                /* 기초월*/
	                  , @LastMonth          NVARCHAR(08)                /* 최종 마감월*/
	
	    SELECT @BasisMonth = ISNULL(MAX(BASIS_YYYYMM),'000000')
	         , @LastMonth  = ISNULL(MAX(LAST_YYYYMM) ,'000000')
	    FROM   BIV900T WITH(NOLOCK)
	    WHERE  COMP_CODE = @COMP_CODE
	    AND    DIV_CODE  = @DIV_CODE
	    AND    WH_CODE   = @WH_CODE
	
	    IF @@ERROR != 0
	    BEGIN
	        SET @ErrorCode = '1'
	
	        GOTO ERROR_HANDLER
	    END
	
	    IF (@LastMonth &gt; CONVERT(NVARCHAR(06), @COUNT_DATE, 112)) OR (@BasisMonth &gt; CONVERT(NVARCHAR(06), @COUNT_DATE, 112))
	    BEGIN
	        SET @ErrorCode = '54100'   /* 이미 마감된 자료 입니다.'*/
	
	        GOTO ERROR_HANDLER
	    END
	
	/*  3. 자사화폐단위 조회 */
	    DECLARE         @MoneyUnit          NVARCHAR(03)                /* 자사화폐단위*/
	
	    SELECT TOP 1 @MoneyUnit = SUB_CODE
	    FROM   BSA100T WITH(NOLOCK)
	    WHERE  COMP_CODE = @COMP_CODE
	    AND    MAIN_CODE = 'B004'
	    AND    SUB_CODE != '$'
	    AND    REF_CODE1 = 'Y'
	
	    IF ISNULL(@MoneyUnit, '') = ''
	    BEGIN
	        SET @ErrorCode = '54103'   /* 자사화폐단위가 존재하지 않습니다.*/
	
	        GOTO ERROR_HANDLER
	    END
	
	/*  4. 실사조정 수불 생성 */
	    DECLARE CUR_200811022145 CURSOR STATIC FOR
	        SELECT A.ITEM_CODE
	             , A.LOT_NO
	             , A.WH_CELL_CODE
	             , A.COUNT_CONT_DATE
	             , A.GOOD_STOCK_BOOK_Q
	             , A.BAD_STOCK_BOOK_Q
	             , A.GOOD_STOCK_Q
	             , A.BAD_STOCK_Q
	             , A.COUNT_FLAG
	             , CASE WHEN ISNULL(M1.SUB_CODE, '') = '1' AND SUBSTRING(C1.ITEM_ACCOUNT, 1, 1) IN ('1', '2') THEN ISNULL(C1.BASIS_P, 0)
	                    ELSE ISNULL(B.AVERAGE_P, 0)
	               END AS BASIS_P
	        FROM              BIV300T  A  WITH (NOLOCK)
	               LEFT  JOIN BIV200T  B  WITH (NOLOCK) ON  B.COMP_CODE    = A.COMP_CODE
	                                                   AND  B.DIV_CODE     = A.DIV_CODE
	                                                   AND  B.BASIS_YYYYMM = CONVERT(NVARCHAR(06), @COUNT_DATE, 112)
	                                                   AND  B.WH_CODE      = A.WH_CODE
	                                                   AND  B.ITEM_CODE    = A.ITEM_CODE
	               LEFT  JOIN BPR200T  C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
	                                                   AND C1.DIV_CODE     = A.DIV_CODE
	                                                   AND C1.ITEM_CODE    = A.ITEM_CODE
	               LEFT  JOIN BSA100T  M1 WITH (NOLOCK) ON M1.COMP_CODE    = A.COMP_CODE
	                                                   AND M1.MAIN_CODE    = 'B069'               /* 재고단가 적용방법*/
	                                                   AND M1.REF_CODE1    = 'Y'
	                                                   AND M1.SUB_CODE     = '1'
	        WHERE  A.COMP_CODE    = @COMP_CODE
	        AND    A.DIV_CODE     = @DIV_CODE
	        AND    A.COUNT_DATE   = @COUNT_DATE
	        AND    A.WH_CODE      = @WH_CODE
	        AND  ((A.WH_CELL_CODE = @WH_CELL_CODE AND @WH_CELL_CODE != '') OR (@WH_CELL_CODE = ''))
	        AND    A.COUNT_FLAG  != 'C'
	        AND   (A.GOOD_STOCK_BOOK_Q != A.GOOD_STOCK_Q OR A.BAD_STOCK_BOOK_Q != A.BAD_STOCK_Q)
	
	    OPEN CUR_200811022145
	    FETCH NEXT FROM CUR_200811022145 INTO @ItemCode, @LotNo, @WhCellCode, @CountContDate, @GoodStockBookQ, @BadStockBookQ, @GoodStockQ, @BadStockQ, @CountFlag, @BasisP
	
	
	/*  4-1. 작업할 실사선별 자료가 없을경우, 에러 처리*/
	    IF @@CURSOR_ROWS = 0
	    BEGIN
	        SET @ErrorCode = '54361'   /* 작업할 자료가 존재하지 않습니다.*/
	
	        CLOSE CUR_200811022145
	        DEALLOCATE CUR_200811022145
	
	        GOTO ERROR_HANDLER
	    END
	
	/*  4-2. 수불번호 채번*/
	    IF @@FETCH_STATUS = 0
	    EXEC uniLITE.SP_GetAutoNumComp @COMP_CODE, 'S', 'BTR100T', 'R', @COUNT_DATE, '1', @InOutNum OUTPUT     /* 일채번*/
	
	    SET @InOutSeq = 0
	    WHILE(@@FETCH_STATUS = 0)
	    BEGIN
	        SET @GoodQ  = @GoodStockBookQ - @GoodStockQ
	        SET @BadQ   = @BadStockBookQ  - @BadStockQ
	        SET @InOutP = @BasisP
	
	        IF @BasisP = 0
	            SELECT TOP 1 @InOutP = AVERAGE_P
	            FROM   BIV200T  WITH (NOLOCK)
	            WHERE  COMP_CODE     = @COMP_CODE
	            AND    DIV_CODE      = @DIV_CODE
	            AND    BASIS_YYYYMM &lt;= CONVERT(NVARCHAR(06), @COUNT_DATE, 112)
	            AND    ITEM_CODE     = @ItemCode
	            ORDER BY COMP_CODE, DIV_CODE, BASIS_YYYYMM DESC, WH_CODE
	
	        SET @InOutP = ISNULL(@InOutP, 0)
	
	/*      4-3. 양품 수불 생성*/
	        IF @GoodQ != 0
	        BEGIN
	
	            SET @InOutSeq = @InOutSeq + 1
	
	            INSERT INTO BTR100T(COMP_CODE,       DIV_CODE,   INOUT_NUM,     INOUT_SEQ
	                              , ITEM_CODE,       WH_CODE,    WH_CELL_CODE,  INOUT_DATE,       INOUT_PRSN
	                              , INOUT_Q,         INOUT_P,    INOUT_I,       EXCHG_RATE_O,     MONEY_UNIT
	                              , BILL_TYPE,       SALE_TYPE,  SALE_DIV_CODE, SALE_CUSTOM_CODE
	                              , REMARK,          PROJECT_NO, LOT_NO,        UPDATE_DB_USER,   UPDATE_DB_TIME
	                              , INOUT_TYPE,      CREATE_LOC, ITEM_STATUS,   INOUT_METH,       INOUT_TYPE_DETAIL
	                              , INOUT_CODE_TYPE, INOUT_CODE, ORDER_UNIT_Q)
	            SELECT @COMP_CODE AS COMP_CODE,  @DIV_CODE  AS DIV_CODE,          @InOutNum   AS INOUT_NUM,       @InOutSeq     AS INOUT_SEQ
	                 , @ItemCode  AS ITEM_CODE,  @WH_CODE   AS WH_CODE,           @WhCellCode AS WH_CELL_CODE,    @COUNT_DATE   AS INOUT_DATE,       @INOUT_PRSN   AS INOUT_PRSN
	                 , @GoodQ     AS INOUT_Q,    @InOutP    AS INOUT_P,      @GoodQ * @InOutP AS INOUT_I,         1.0           AS EXCHG_RATE_O,     @MoneyUnit    AS MONEY_UNIT
	
	                 , '*'        AS BILL_TYPE,  '*'        AS SALE_TYPE,        '*'          AS SLAE_DIV_CODE,   '*'           AS SALE_CUSTOM_CODE
	                 , NULL       AS REMARK,     NULL       AS PROJECT_NO,        @LotNo      AS LOT_NO,          @USER_ID      AS UPDATE_DB_USER,   CONVERT(SMALLDATETIME, GETDATE()) AS UPDATE_DB_TIME
	
	                 , '2'        AS INOUT_TYPE, '4'        AS CREATE_LOC,        '1'         AS ITEM_STATUS
	                 , '4'        AS INOUT_METH, '96'       AS INOUT_TYPE_DETAIL, '2'         AS INOUT_CODE_TYPE, @WH_CODE      AS INOUT_CODE, @GoodQ AS ORDER_UNIT_Q
	

				INSERT INTO L_BTR100T(KEY_VALUE, OPR_FLAG, COMP_CODE,       DIV_CODE,   INOUT_NUM,     INOUT_SEQ
	                              , ITEM_CODE,       WH_CODE,    WH_CELL_CODE,  INOUT_DATE,       INOUT_PRSN
	                              , INOUT_Q,         INOUT_P,    INOUT_I,       EXCHG_RATE_O,     MONEY_UNIT
	                              , BILL_TYPE,       SALE_TYPE,  SALE_DIV_CODE, SALE_CUSTOM_CODE
	                              , REMARK,          PROJECT_NO, LOT_NO,        UPDATE_DB_USER,   UPDATE_DB_TIME
	                              , INOUT_TYPE,      CREATE_LOC, ITEM_STATUS,   INOUT_METH,       INOUT_TYPE_DETAIL
	                              , INOUT_CODE_TYPE, INOUT_CODE, ORDER_UNIT_Q)
	            SELECT @KEY_VALUE, 'N', @COMP_CODE AS COMP_CODE,  @DIV_CODE  AS DIV_CODE,          @InOutNum   AS INOUT_NUM,       @InOutSeq     AS INOUT_SEQ
	                 , @ItemCode  AS ITEM_CODE,  @WH_CODE   AS WH_CODE,           @WhCellCode AS WH_CELL_CODE,    @COUNT_DATE   AS INOUT_DATE,       @INOUT_PRSN   AS INOUT_PRSN
	                 , @GoodQ     AS INOUT_Q,    @InOutP    AS INOUT_P,      @GoodQ * @InOutP AS INOUT_I,         1.0           AS EXCHG_RATE_O,     @MoneyUnit    AS MONEY_UNIT
	
	                 , '*'        AS BILL_TYPE,  '*'        AS SALE_TYPE,        '*'          AS SLAE_DIV_CODE,   '*'           AS SALE_CUSTOM_CODE
	                 , NULL       AS REMARK,     NULL       AS PROJECT_NO,        @LotNo      AS LOT_NO,          @USER_ID      AS UPDATE_DB_USER,   CONVERT(SMALLDATETIME, GETDATE()) AS UPDATE_DB_TIME
	
	                 , '2'        AS INOUT_TYPE, '4'        AS CREATE_LOC,        '1'         AS ITEM_STATUS
	                 , '4'        AS INOUT_METH, '96'       AS INOUT_TYPE_DETAIL, '2'         AS INOUT_CODE_TYPE, @WH_CODE      AS INOUT_CODE, @GoodQ AS ORDER_UNIT_Q	
	
	        END        /* End Of IF GoodQ*/
	        
	/*      4-4. 불량 수불 생성*/
	        IF @BadQ != 0
	        BEGIN
	
	            SET @InOutSeq = @InOutSeq + 1
	
	            INSERT INTO BTR100T(COMP_CODE,       DIV_CODE,   INOUT_NUM,     INOUT_SEQ
	                              , ITEM_CODE,       WH_CODE,    WH_CELL_CODE,  INOUT_DATE,       INOUT_PRSN
	                              , INOUT_Q,         INOUT_P,    INOUT_I,       EXCHG_RATE_O,     MONEY_UNIT
	                              , BILL_TYPE,       SALE_TYPE,  SALE_DIV_CODE, SALE_CUSTOM_CODE
	                              , REMARK,          PROJECT_NO, LOT_NO,        UPDATE_DB_USER,   UPDATE_DB_TIME
	                              , INOUT_TYPE,      CREATE_LOC, ITEM_STATUS,   INOUT_METH,       INOUT_TYPE_DETAIL
	                              , INOUT_CODE_TYPE, INOUT_CODE, ORDER_UNIT_Q)
	            SELECT @COMP_CODE AS COMP_CODE,  @DIV_CODE   AS DIV_CODE,          @InOutNum   AS INOUT_NUM,       @InOutSeq     AS INOUT_SEQ
	                 , @ItemCode  AS ITEM_CODE,  @WH_CODE    AS WH_CODE,           @WhCellCode AS WH_CELL_CODE,    @COUNT_DATE   AS INOUT_DATE,       @INOUT_PRSN   AS INOUT_PRSN
	                 , @BadQ      AS INOUT_Q,    @InOutP     AS INOUT_P,       @BadQ * @InOutP AS INOUT_I,         1.0           AS EXCHG_RATE_O,     @MoneyUnit    AS MONEY_UNIT
	
	                 , '*'        AS BILL_TYPE,  '*'         AS SALE_TYPE,        '*'          AS SLAE_DIV_CODE,   '*'           AS SALE_CUSTOM_CODE
	                 , NULL       AS REMARK,     NULL        AS PROJECT_NO,        @LotNo      AS LOT_NO,          @USER_ID      AS UPDATE_DB_USER,   CONVERT(SMALLDATETIME, GETDATE()) AS UPDATE_DB_TIME
	
	                 , '2'        AS INOUT_TYPE, '4'         AS CREATE_LOC,        '2'         AS ITEM_STATUS
	                 , '4'        AS INOUT_METH, '96'        AS INOUT_TYPE_DETAIL, '2'         AS INOUT_CODE_TYPE, @WH_CODE      AS INOUT_CODE, @BadQ AS ORDER_UNIT_Q
	
	            INSERT INTO L_BTR100T(KEY_VALUE, OPR_FLAG, COMP_CODE,       DIV_CODE,   INOUT_NUM,     INOUT_SEQ
	                              , ITEM_CODE,       WH_CODE,    WH_CELL_CODE,  INOUT_DATE,       INOUT_PRSN
	                              , INOUT_Q,         INOUT_P,    INOUT_I,       EXCHG_RATE_O,     MONEY_UNIT
	                              , BILL_TYPE,       SALE_TYPE,  SALE_DIV_CODE, SALE_CUSTOM_CODE
	                              , REMARK,          PROJECT_NO, LOT_NO,        UPDATE_DB_USER,   UPDATE_DB_TIME
	                              , INOUT_TYPE,      CREATE_LOC, ITEM_STATUS,   INOUT_METH,       INOUT_TYPE_DETAIL
	                              , INOUT_CODE_TYPE, INOUT_CODE, ORDER_UNIT_Q)
	            SELECT @KEY_VALUE, 'N', @COMP_CODE AS COMP_CODE,  @DIV_CODE   AS DIV_CODE,          @InOutNum   AS INOUT_NUM,       @InOutSeq     AS INOUT_SEQ
	                 , @ItemCode  AS ITEM_CODE,  @WH_CODE    AS WH_CODE,           @WhCellCode AS WH_CELL_CODE,    @COUNT_DATE   AS INOUT_DATE,       @INOUT_PRSN   AS INOUT_PRSN
	                 , @BadQ      AS INOUT_Q,    @InOutP     AS INOUT_P,       @BadQ * @InOutP AS INOUT_I,         1.0           AS EXCHG_RATE_O,     @MoneyUnit    AS MONEY_UNIT
	
	                 , '*'        AS BILL_TYPE,  '*'         AS SALE_TYPE,        '*'          AS SLAE_DIV_CODE,   '*'           AS SALE_CUSTOM_CODE
	                 , NULL       AS REMARK,     NULL        AS PROJECT_NO,        @LotNo      AS LOT_NO,          @USER_ID      AS UPDATE_DB_USER,   CONVERT(SMALLDATETIME, GETDATE()) AS UPDATE_DB_TIME
	
	                 , '2'        AS INOUT_TYPE, '4'         AS CREATE_LOC,        '2'         AS ITEM_STATUS
	                 , '4'        AS INOUT_METH, '96'        AS INOUT_TYPE_DETAIL, '2'         AS INOUT_CODE_TYPE, @WH_CODE      AS INOUT_CODE, @BadQ AS ORDER_UNIT_Q	
	                 
	        END        /* End Of IF GoodQ*/
	
	/*      순번이 9999보다 클 경우, 신규 순서번호 채번*/
	        IF @InOutSeq &gt; 9990
	        BEGIN
	            EXEC uniLITE.SP_GetAutoNumComp @COMP_CODE, 'S', 'BTR100T', 'R', @COUNT_DATE, '1', @InOutNum OUTPUT     /* 일채번*/
	
	            SET @InOutSeq = 0
	        END
	
	        FETCH NEXT FROM CUR_200811022145 INTO @ItemCode, @LotNo, @WhCellCode, @CountContDate, @GoodStockBookQ, @BadStockBookQ, @GoodStockQ, @BadStockQ, @CountFlag, @BasisP
	    END
	    CLOSE CUR_200811022145
	    DEALLOCATE CUR_200811022145
	
	    /*EXEC uniLITE.SP_STOCK_Valuation @COMP_CODE, @DIV_CODE, @KEY_VALUE, @USER_ID, @ErrorDesc OUTPUT*/	/*	속도저하로 막음	*/

        IF ISNULL(@ErrorDesc, N'') != N''
	    BEGIN 
		     GOTO ERROR_HANDLER
	    END
		 	    
	/*  5. 실사조정 처리 결과 수정*/
	    UPDATE BIV300T
	    SET    COUNT_CONT_DATE = CONVERT(CHAR(8), GETDATE(), 112)
	         , COUNT_FLAG      = 'C'
	         , UPDATE_DB_USER  = @USER_ID
	         , UPDATE_DB_TIME  = CONVERT(SMALLDATETIME, GETDATE())
	    WHERE  COMP_CODE    = @COMP_CODE
	    AND    DIV_CODE     = @DIV_CODE
	    AND    COUNT_DATE   = @COUNT_DATE
	    AND    WH_CODE      = @WH_CODE
	    AND  ((WH_CELL_CODE = @WH_CELL_CODE AND @WH_CELL_CODE != '') OR (@WH_CELL_CODE = ''))
	
	/*  6. Error Handler 처리*/
	ERROR_HANDLER:
	    SET ARITHABORT OFF
	    SET NOCOUNT OFF
	
	    SELECT TOP 1 ISNULL(@ErrorCode, '') ERROR_CODE, ISNULL(@ErrorDesc, '') ERROR_DESC, ISNULL(@ItemCode, '') ITEM_CODE
	END
	</select>
	<select id="Biv150ukrvService.deleteDetail" parameterType="Map" resultType="rMap">		
	/*UBiv01Krvv.CBiv150UKr[fnBiv150SCnl] Query01*/
	/*
	실사조정 취소
	
	1. 변수 값 할당
	2. 재고평가 방법 조회(Default: 월 총평균법)
	3. 마감여부 조회
	4. 최종실사등록일 조회
	5. 실사조정 수불 삭제
	    5-1. 수불정보 삭제
	    5-2. 재고평가 방법에 따라 재고평가 수행
	6. 실사조정 처리 결과 수정
	7. Error Handler 처리
	*/
	BEGIN
	    DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드*/
	                  , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장코드*/
	
	                  , @COUNT_DATE         NVARCHAR(08)                /* (필수) 실사선별일*/
	
	                  , @WH_CODE            NVARCHAR(08)                /* (필수) 창고코드*/
	                  , @WH_CELL_CODE       NVARCHAR(20)                /* (선택) 창고Cell코드*/
	
	                  , @INOUT_PRSN         NVARCHAR(10)                /* (선택) 수불담당자*/
	
	                  , @USER_ID            NVARCHAR(100)                /* (필수) USER ID*/
	
	    SET NOCOUNT ON
	    SET ARITHABORT ON
	
	/*  일반 변수*/
	    DECLARE         @InOutNum           NVARCHAR(20)                /* 수불번호*/
	                  , @InOutSeq           NUMERIC(4, 0)               /* 수불순번*/
	                  , @GoodQ              NUMERIC(20, 6)              /* 양품수량*/
	                  , @BadQ               NUMERIC(20, 6)              /* 불량수량*/
	                  , @InOutP             NUMERIC(20, 6)              /* 단가*/
	                  , @KEY_VALUE			NVARCHAR(20)                /* KEY_VALUE*/
	
	/*  CURSOR 변수*/
	    DECLARE         @ItemCode           NVARCHAR(20)                /* 품목코드*/
	                  , @LotNo              NVARCHAR(20)                /* LOT NO*/
	                  , @WhCellCode         NVARCHAR(20)                /* 창고Cell 코드*/
	                  , @CountContDate      NVARCHAR(08)                /* 실사조정일*/
	                  , @GoodStockBookQ     NUMERIC(20, 6)              /* 장부 양품 수량*/
	                  , @BadStockBookQ      NUMERIC(20, 6)              /* 장부 불량 수량*/
	                  , @GoodStockQ         NUMERIC(20, 6)              /* 실사 양품 수량*/
	                  , @BadStockQ          NUMERIC(20, 6)              /* 실사 불량 수량*/
	                  , @CountFlag          NVARCHAR(01)                /* 실사조정 유형(P: 등록, C: 반영, O: 선별)*/
	                  , @BasisP             NUMERIC(20, 6)              /* 평균단가*/
	
	/*  에러변수*/
	    DECLARE         @ErrorCode          NVARCHAR(20)                /* 에러코드명*/
	                  , @ErrorDesc          NVARCHAR(1000)              /* 에러명*/
	
	/*  1. 변수 값 할당*/
	    SET @COMP_CODE      = #{S_COMP_CODE}
	    SET @DIV_CODE       = #{DIV_CODE}
	
	    SET @COUNT_DATE     = #{COUNT_DATE}
	
	    SET @WH_CODE        = #{WH_CODE}
	    SET @WH_CELL_CODE   = #{WH_CELL_CODE}
	
	    SET @INOUT_PRSN     = CASE WHEN #{INOUT_PRSN} = '' THEN NULL ELSE #{INOUT_PRSN} END
	
	    SET @USER_ID        = #{S_USER_ID}
	    SET @KEY_VALUE		= LEFT(REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(30), GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '') 
       						  + RIGHT(N'0000' + CONVERT(NVARCHAR, CONVERT(INT, RAND() * 10000)), 3), 20)
	
	/*  2. 마감여부 조회 */
	    DECLARE         @BasisMonth         NVARCHAR(08)                /* 기초월*/
	                  , @LastMonth          NVARCHAR(08)                /* 최종 마감월*/
	
	    SELECT @BasisMonth = ISNULL(MAX(BASIS_YYYYMM),'000000')
	         , @LastMonth  = ISNULL(MAX(LAST_YYYYMM) ,'000000')
	    FROM   BIV900T WITH(NOLOCK)
	    WHERE  COMP_CODE = @COMP_CODE
	    AND    DIV_CODE  = @DIV_CODE
	    AND    WH_CODE   = @WH_CODE
	
	    IF @@ERROR != 0
	    BEGIN
	        SET @ErrorCode = '1'
	
	        GOTO ERROR_HANDLER
	    END
	
	    IF (@LastMonth &gt; CONVERT(NVARCHAR(06), @COUNT_DATE, 112)) OR (@BasisMonth &gt; CONVERT(NVARCHAR(06), @COUNT_DATE, 112))
	    BEGIN
	        SET @ErrorCode = '54100'   /* 이미 마감된 자료 입니다.'*/
	
	        GOTO ERROR_HANDLER
	    END
	
	/*  3. 최종실사등록일 조회 */
	    DECLARE         @LastCountDate     NVARCHAR(08)                /* 최종실사등록일*/
	
	    SELECT @LastCountDate = MAX(COUNT_DATE)
	    FROM   BIV300T WITH (NOLOCK)
	    WHERE  COMP_CODE        = @COMP_CODE
	    AND    DIV_CODE         = @DIV_CODE
	    AND    WH_CODE          = @WH_CODE
	    AND  ((WH_CELL_CODE     = @WH_CELL_CODE AND @WH_CELL_CODE != '') OR (@WH_CELL_CODE = ''))
	    AND    COUNT_CONT_DATE IS NOT NULL
	    AND    COUNT_CONT_DATE  &gt; '00000000'
	           
	    IF @LastCountDate != @COUNT_DATE
	    BEGIN
	        SET @ErrorCode = '54106'   /* 최종 실사조정일만 취소가능합니다.*/
	
	        GOTO ERROR_HANDLER
	    END

		INSERT INTO L_BTR100T(KEY_VALUE, OPR_FLAG, COMP_CODE,       DIV_CODE,   INOUT_NUM,     INOUT_SEQ
                              , ITEM_CODE,       WH_CODE,    WH_CELL_CODE,  INOUT_DATE,       INOUT_PRSN
                              , INOUT_Q,         INOUT_P,    INOUT_I,       EXCHG_RATE_O,     MONEY_UNIT
                              , BILL_TYPE,       SALE_TYPE,  SALE_DIV_CODE, SALE_CUSTOM_CODE
                              , REMARK,          PROJECT_NO, LOT_NO,        UPDATE_DB_USER,   UPDATE_DB_TIME
                              , INOUT_TYPE,      CREATE_LOC, ITEM_STATUS,   INOUT_METH,       INOUT_TYPE_DETAIL
                              , INOUT_CODE_TYPE, INOUT_CODE, ORDER_UNIT_Q)
            SELECT @KEY_VALUE, 'D', COMP_CODE, DIV_CODE, INOUT_NUM,       INOUT_SEQ
                 , ITEM_CODE,  WH_CODE,           WH_CELL_CODE,    INOUT_DATE,       INOUT_PRSN
                 , INOUT_Q,    INOUT_P,      INOUT_I,         EXCHG_RATE_O,     MONEY_UNIT

                 , BILL_TYPE,  SALE_TYPE,        SALE_DIV_CODE,   SALE_CUSTOM_CODE
                 , REMARK,     PROJECT_NO,       LOT_NO,          UPDATE_DB_USER,   UPDATE_DB_TIME

                 , INOUT_TYPE, CREATE_LOC,       ITEM_STATUS
                 , INOUT_METH, INOUT_TYPE_DETAIL, INOUT_CODE_TYPE, INOUT_CODE, ORDER_UNIT_Q	
        FROM   BTR100T WITH (NOLOCK)
        WHERE  COMP_CODE         = @COMP_CODE
        AND    DIV_CODE          = @DIV_CODE
        AND    WH_CODE           = @WH_CODE
        AND  ((WH_CELL_CODE      = @WH_CELL_CODE AND @WH_CELL_CODE != '') OR (@WH_CELL_CODE = ''))
        AND    INOUT_DATE        = @COUNT_DATE
        AND    INOUT_TYPE        = '2'
        AND    CREATE_LOC        = '4'
        AND    INOUT_METH        = '4'
        AND    INOUT_TYPE_DETAIL = '96'

     /*4-1 수불 데이터 삭제*/
        DELETE BTR100T
        WHERE  COMP_CODE         = @COMP_CODE
        AND    DIV_CODE          = @DIV_CODE
        AND    WH_CODE           = @WH_CODE
        AND  ((WH_CELL_CODE      = @WH_CELL_CODE AND @WH_CELL_CODE != '') OR (@WH_CELL_CODE = ''))
        AND    INOUT_DATE        = @COUNT_DATE
        AND    INOUT_TYPE        = '2'
        AND    CREATE_LOC        = '4'
        AND    INOUT_METH        = '4'
        AND    INOUT_TYPE_DETAIL = '96'

	    /*EXEC uniLITE.SP_STOCK_Valuation @COMP_CODE, @DIV_CODE, @KEY_VALUE, @USER_ID, @ErrorDesc OUTPUT*/

        IF ISNULL(@ErrorDesc, N'') != N''
	    BEGIN 
		     GOTO ERROR_HANDLER
	    END
	    	
	/*  5. 실사조정 처리 결과 수정*/
	    UPDATE BIV300T
	    SET    COUNT_CONT_DATE  = '00000000'
	         , COUNT_FLAG       = 'P'
	         , UPDATE_DB_USER   = @USER_ID
	         , UPDATE_DB_TIME   = CONVERT(SMALLDATETIME, GETDATE())
	    WHERE  COMP_CODE        = @COMP_CODE
	    AND    DIV_CODE         = @DIV_CODE
	    AND    COUNT_DATE       = @COUNT_DATE
	    AND    WH_CODE          = @WH_CODE
	    AND  ((WH_CELL_CODE     = @WH_CELL_CODE AND @WH_CELL_CODE != '') OR (@WH_CELL_CODE = ''))
	    AND    COUNT_CONT_DATE != '00000000'
	
	/*  6. Error Handler 처리*/
	ERROR_HANDLER:
	    SET ARITHABORT OFF
	    SET NOCOUNT OFF
	
	    SELECT TOP 1 ISNULL(@ErrorCode, '') ERROR_CODE, ISNULL(@ErrorDesc, '') ERROR_DESC
	END
	</select>
</mapper>