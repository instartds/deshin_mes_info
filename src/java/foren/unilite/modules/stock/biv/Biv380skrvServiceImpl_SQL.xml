<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biv380skrvServiceImpl">
	<select id="biv380skrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">	/* 창고 초기화 */
		SELECT
			A.WH_CODE
		FROM BSA210T A WITH(NOLOCK)
			LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
											AND B.DEPT_CODE = A.TREE_CODE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND B.USER_ID = #{S_USER_ID}
	</select>

	<select id="biv380skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	/*biv380skrv.Cbiv380skrv[fnBiv320QStd]Query03*/
	/*월별 수불현황 조회(합계포함)*/
	BEGIN
	    DECLARE         @COMP_CODE          NVARCHAR(08)                /* (필수) 법인코드*/
	                  , @DIV_CODE           NVARCHAR(08)                /* (필수) 사업장코드*/

	                  , @FR_INOUT_DATE      NVARCHAR(08)                /* (필수) 시작 수불일*/
	                  , @TO_INOUT_DATE      NVARCHAR(08)                /* (필수) 종료 수불일*/

	                  , @ITEM_CODE          NVARCHAR(20)                /* (선택) 품목코드*/
	                  , @ITEM_NAME          NVARCHAR(200)               /* (선택) 품목명*/

	                  , @ITEM_ACCOUNT       NVARCHAR(02)                /* (선택) 품목 계정코드*/

	                  , @WH_CODE            NVARCHAR(08)                /* (선택) 창고코드*/

	                  , @ITEM_LEVEL1        NVARCHAR(10)                /* 대분류*/
	                  , @ITEM_LEVEL2        NVARCHAR(10)                /* 중분류*/
	                  , @ITEM_LEVEL3        NVARCHAR(10)                /* 소분류*/

	                  , @MOVE_FLAG          NVARCHAR(01)                /* 재고이동 포함 여부(Y/N)*/
	                  , @EVAL_FLAG          NVARCHAR(01)                /* 실사조정 포함 여부(Y/N)*/

	                  , @INOUT_METH         NVARCHAR(02)                /* 수불방법*/
	                  , @CREATE_LOC         NVARCHAR(02)                /* 생성경로*/
	                  , @INOUT_CODE_TYPE    NVARCHAR(02)                /* 수불처 유형*/
	                  , @ITEM_STATUS        NVARCHAR(01)                /* 품목상태*/

	                  , @INOUT_NUM          NVARCHAR(20)                /* 수불번호*/
	                  , @LOT_NO             NVARCHAR(20)                /* Lot No.*/

	                  , @INOUT_FLAG         NVARCHAR(01)                /* 수불 발생 유형(1: 발생, 2: 미발생, 3: 전체)*/

	                  , @SUBCON_YN          NVARCHAR(02)                /* 외주포함여부 (N: 포함않함,  Y: 포함)*/
	                  , @QRY_TYPE           NVARCHAR(02)                /* 조회유형 (1: 품목별,  2: 창고별)*/
	                  , @STOCK_CARE_YN      NVARCHAR(01)                /* 재고관리대상 (A:전체 Y:예 N:아니오)*/

	                  , @USER_ID            NVARCHAR(100)               /* (필수) USER ID*/


	    SET NOCOUNT ON
	    SET ARITHABORT ON

	/*  1. 변수 값 할당 */
	    SET @COMP_CODE       = #{S_COMP_CODE}
	    SET @DIV_CODE        =#{DIV_CODE}

	    SET @FR_INOUT_DATE   = CASE WHEN #{FR_INOUT_DATE} = '' THEN CONVERT(NVARCHAR(06), GETDATE(), 112) ELSE #{FR_INOUT_DATE} END + '01'
	    SET @TO_INOUT_DATE   = CASE WHEN #{TO_INOUT_DATE} = '' THEN CONVERT(NVARCHAR(06), GETDATE(), 112) ELSE #{TO_INOUT_DATE} END + '31'

	    SET @ITEM_CODE       = #{ITEM_CODE}
	    SET @ITEM_NAME       = #{ITEM_NAME}

	    SET @ITEM_ACCOUNT    = #{ITEM_ACCOUNT}

	    SET @WH_CODE         = #{WH_CODE}

	    SET @ITEM_LEVEL1     = #{ITEM_LEVEL1}
	    SET @ITEM_LEVEL2     = #{ITEM_LEVEL2}
	    SET @ITEM_LEVEL3     = #{ITEM_LEVEL3}

	    SET @MOVE_FLAG       = #{MOVE_FLAG}
	    SET @EVAL_FLAG       = #{EVAL_FLAG}
	    SET @STOCK_CARE_YN   = #{STOCK_CARE_YN}

	    SET @INOUT_METH      = N''
	    SET @CREATE_LOC      = N''
	    SET @INOUT_CODE_TYPE = N''
	    SET @ITEM_STATUS     = N''

	    SET @INOUT_NUM       = N''
	    SET @LOT_NO          = N''

	    SET @INOUT_FLAG      = N''

	    SET @SUBCON_YN       = N'N'
	    SET @QRY_TYPE        = '1'

	    SET @USER_ID         = #{S_USER_ID}

	/*  2. 초기화 */
	    IF @DIV_CODE IN (N'', N'NULL')
	    BEGIN
	        SELECT  TOP 0
	                CONVERT(NVARCHAR(100), '')              AS ITEM_ACCOUNT_NAME
	              , CONVERT(NVARCHAR(20), '')               AS ACCOUNT1
	              , CONVERT(NVARCHAR(50), '')               AS ITEM_LEVEL1_NAME
	              , CONVERT(NVARCHAR(50), '')               AS ITEM_LEVEL2_NAME
	              , CONVERT(NVARCHAR(50), '')               AS ITEM_LEVEL3_NAME
	              , CONVERT(NVARCHAR(20), '')               AS ITEM_CODE
	              , CONVERT(NVARCHAR(200), '')              AS ITEM_NAME
	              , CONVERT(NVARCHAR(160), '')              AS SPEC
	              , CONVERT(NVARCHAR(03), '')               AS STOCK_UNIT
	              , CONVERT(NUMERIC(38, 8), 0)              AS STOCK_P
	              , CONVERT(NVARCHAR(03), '')               AS WGT_UNIT
	              , CONVERT(NUMERIC(30, 6), 0)              AS UNIT_WGT
	              , CONVERT(NVARCHAR(03), '')               AS PACK_UNIT
	              , CONVERT(NUMERIC(30, 6), 0)              AS TRANS_RATE
	              , CONVERT(NVARCHAR(4000), '')             AS INOUT_DATE

	              , CONVERT(INT, 0)                         AS BOX_BASIS_Q
	              , CONVERT(NUMERIC(30, 6), 0)              AS EA_BASIS_Q
	              , CONVERT(NUMERIC(30, 6), 0)              AS BASIS_Q
	              , CONVERT(NUMERIC(38, 6), 0)              AS BASIS_WGT_Q
	              , CONVERT(NUMERIC(30, 6), 0)              AS BASIS_I
	              , CONVERT(INT, 0)                         AS BOX_INSTOCK_Q
	              , CONVERT(NUMERIC(30, 6), 0)              AS EA_INSTOCK_Q
	              , CONVERT(NUMERIC(30, 6), 0)              AS INSTOCK_Q
	              , CONVERT(NUMERIC(38, 6), 0)              AS INSTOCK_WGT_Q
	              , CONVERT(NUMERIC(30, 6), 0)              AS INSTOCK_I
	              , CONVERT(INT, 0)                         AS BOX_OUTSTOCK_Q
	              , CONVERT(NUMERIC(30, 6), 0)              AS EA_OUTSTOCK_Q
	              , CONVERT(NUMERIC(30, 6), 0)              AS OUTSTOCK_Q
	              , CONVERT(NUMERIC(38, 6), 0)              AS OUTSTOCK_WGT_Q
	              , CONVERT(NUMERIC(30, 6), 0)              AS OUTSTOCK_I
	              , CONVERT(INT, 0)                         AS BOX_STOCK_Q
	              , CONVERT(NUMERIC(30, 6), 0)              AS EA_STOCK_Q
	              , CONVERT(NUMERIC(30, 6), 0)              AS STOCK_Q
	              , CONVERT(NUMERIC(38, 6), 0)              AS STOCK_WGT_Q
	              , CONVERT(NUMERIC(30, 6), 0)              AS STOCK_I

	        RETURN
	    END

	/*  3. 명칭 조회 유형 설정 */
	    DECLARE             @RefItem            NVARCHAR(01)

	    SELECT TOP 1 @RefItem = REF_ITEM
	    FROM   BSA300T WITH (NOLOCK)
	    WHERE  USER_ID = @USER_ID

	    SET @RefItem = ISNULL(@RefItem, '')

	/*  4. 재고단가 계산 방법 설정 */
	    DECLARE             @StockP             NVARCHAR(01)

	    SELECT TOP 1 @StockP = SUB_CODE
	    FROM   BSA100T WITH (NOLOCK)
	    WHERE  COMP_CODE = @COMP_CODE                                             /* 단가처리 기준*/
	    AND    MAIN_CODE = N'B069'
	    AND    SUB_CODE  = N'1'                                                     /* 기준재고단가*/
	    AND    REF_CODE1 = N'Y'

	    SET @StockP = ISNULL(@StockP, '')

	/* 날짜 포맷 유형 설정 */
	    DECLARE @DateFormat             NVARCHAR(10)

	    SELECT TOP 1 @DateFormat = LEFT(CODE_NAME, 7)
	    FROM   BSA100T WITH (NOLOCK)
	    WHERE  COMP_CODE = @COMP_CODE
	    AND    MAIN_CODE = N'B044'
	    AND    REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, LEFT(N'YYYY/MM/DD', 7))

	/*  5. 가장 최근 마감월 조회 */
	    DECLARE             @QryYYYYMM          NVARCHAR(06)                        /* 조회월*/
	                      , @LastYYYYMM         NVARCHAR(06)                        /* 기초 조회월*/
	                      , @ErrorDesc          NVARCHAR(1000)

	    SET @QryYYYYMM  = CONVERT(NVARCHAR(06), @FR_INOUT_DATE, 112)

	    EXEC uniLITE.SP_STOCK_AdjustMonthlyColsing @COMP_CODE, @DIV_CODE, @QryYYYYMM, @WH_CODE, @ITEM_CODE, @USER_ID, @ErrorDesc OUTPUT

	    IF ISNULL(@ErrorDesc, '') != ''
	    BEGIN
	        RETURN
	    END

	    SELECT TOP 1
	           @LastYYYYMM = MAX(BASIS_YYYYMM)
	    FROM   BIV200T WITH (NOLOCK)
	    WHERE  COMP_CODE    = @COMP_CODE
	    AND    DIV_CODE     = @DIV_CODE
	    AND    BASIS_YYYYMM &lt; @QryYYYYMM

	    SET @LastYYYYMM = ISNULL(@LastYYYYMM, CONVERT(NVARCHAR(06), DATEADD(MONTH, -1, @FR_INOUT_DATE), 112))


	/*  6. 자국통화 자릿수 조회 */
	    DECLARE             @RoundPT            INTEGER                             /* 통화별 자리수*/

	    SELECT  TOP 1
	            @RoundPT = CASE WHEN ISNUMERIC(REF_CODE2) = 1 THEN CONVERT(INTEGER, REF_CODE2) ELSE 0 END
	    FROM    BSA100T  WITH (NOLOCK)
	    WHERE   COMP_CODE = @COMP_CODE
	    AND     MAIN_CODE = N'B004'
	    AND     REF_CODE1 = N'Y'

	    SET @RoundPT = ISNULL(@RoundPT, 0)

	/*  7. 임시 테이블 처리 */
	    /* 로컬 변수 선언*/
	    DECLARE             @TypeKey            NVARCHAR(20)

	    SET @TypeKey      = REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(30), GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '')

	    /* 1) 하루전 임시 데이터 삭제*/
	    IF NOT EXISTS   (
	                    SELECT TOP 1 1
	                    FROM   T_BIV380SKRV1 WITH (NOLOCK)
	                    WHERE  TYPE_KEY LIKE LEFT(@TypeKey, 8) + N'%'
	                    )
	        TRUNCATE TABLE T_BIV380SKRV1


	/*  8. 조회 데이터 생성*/
	/*  1. 조회월 데이터 생성(수불)*/
	    INSERT INTO T_BIV380SKRV1(TYPE_KEY
	                            , COMP_CODE, DIV_CODE
	                            , ITEM_ACCOUNT_NAME, ACCOUNT1, ITEM_CODE, ITEM_NAME, SPEC, STOCK_UNIT
	                            , WH_CODE, INOUT_DATE

	                            , WGT_UNIT, UNIT_WGT, PACK_UNIT, TRANS_RATE

	                            , BASIS_Q,    BASIS_I
	                            , INSTOCK_Q,  INSTOCK_I
	                            , OUTSTOCK_Q, OUTSTOCK_I
	                            , STOCK_Q,    STOCK_I)
	    SELECT  @TypeKey                                                                                            AS TYPE_KEY
	          , A.COMP_CODE
	          , A.DIV_CODE
	          , A.ITEM_ACCOUNT_NAME
	          , A.ACCOUNT1
	          , A.ITEM_CODE
	          , A.ITEM_NAME
	          , A.SPEC
	          , A.STOCK_UNIT
	          , A.WH_CODE
	          , A.INOUT_DATE

	          , ISNULL(C1.WGT_UNIT, N'')                                                                            AS WGT_UNIT
	          , ISNULL(C1.UNIT_WGT, 1.0)                                                                            AS UNIT_WGT
	          , ISNULL(C1.SALE_UNIT, N'')                                                                           AS PACK_UNIT
	          , CASE WHEN C1.STOCK_UNIT = C1.SALE_UNIT   THEN CASE WHEN ISNULL(C2.MINI_PACK_Q, 0.0) &lt;= 0.0 THEN 1.0
	                                                               ELSE ISNULL(C2.MINI_PACK_Q, 1.0)
	                                                          END
	                 WHEN ISNULL(C1.TRNS_RATE, 0.0) = 0.0 THEN 1.0
	                 ELSE C1.TRNS_RATE
	            END                                                                                                 AS TRANS_RATE

	          , SUM(ISNULL(A.BASIS_Q, 0.0))                                                                         AS BASIS_Q
	          , SUM(ISNULL(A.BASIS_I, 0.0))                                                                         AS BASIS_I

	          , SUM(ISNULL(A.IN_Q, 0.0))                                                                            AS INSTOCK_Q
	          , SUM(ISNULL(A.IN_I, 0.0))                                                                            AS INSTOCK_I

	          , SUM(ISNULL(A.OUT_Q, 0.0) - ISNULL(A.RTN_Q, 0.0))                                                    AS OUTSTOCK_Q
	          , SUM(ISNULL(A.OUT_I, 0.0) - ISNULL(A.RTN_I, 0.0))                                                    AS OUTSTOCK_I

	          , SUM(ISNULL(A.BASIS_Q, 0.0) + ISNULL(A.IN_Q, 0.0) - (ISNULL(A.OUT_Q, 0.0) - ISNULL(A.RTN_Q, 0.0)))   AS STOCK_Q
	          , SUM(ISNULL(A.BASIS_I, 0.0) + ISNULL(A.IN_I, 0.0) - (ISNULL(A.OUT_I, 0.0) - ISNULL(A.RTN_I, 0.0)))   AS STOCK_I
	    FROM    (
	            /*  1.1 전월 기초재고정보 추가*/
	            SELECT  CASE WHEN @QRY_TYPE = '1' THEN ISNULL(M1.CODE_NAME, '')
	                         WHEN @QRY_TYPE = '2' THEN ISNULL(D1.TREE_NAME, '')
	                         ELSE ''
	                    END                                                                         AS ITEM_ACCOUNT_NAME
	                  , CASE WHEN @QRY_TYPE = '1' THEN C2.ITEM_ACCOUNT
	                         WHEN @QRY_TYPE = '2' THEN ISNULL(A.WH_CODE, '')
	                         ELSE ''
	                    END                                                                         AS ACCOUNT1
	                  , A.COMP_CODE                                                                 AS COMP_CODE
	                  , A.DIV_CODE                                                                  AS DIV_CODE
	                  , A.ITEM_CODE                                                                 AS ITEM_CODE
	                  , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                         WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                         WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                         ELSE C1.ITEM_NAME END                                                  AS ITEM_NAME
	                  , C1.SPEC                                                                     AS SPEC
	                  , C1.STOCK_UNIT                                                               AS STOCK_UNIT
	                  , CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END      AS WH_CODE
	                  , LEFT(@FR_INOUT_DATE, 6)                                                     AS INOUT_DATE

	                  , ISNULL(A.STOCK_Q, 0)                                                        AS BASIS_Q
	                  , CASE WHEN @StockP = '1' AND C2.SUPPLY_TYPE = N'2'
	                              THEN ROUND(ISNULL(C2.BASIS_P, 0) * ISNULL(A.STOCK_Q, 0), @RoundPT)
	                         ELSE ROUND(ISNULL(A.STOCK_I, 0), @RoundPT)
	                    END                                                                         AS BASIS_I
	                  , 0.0                                                                         AS IN_Q
	                  , 0.0                                                                         AS IN_I
	                  , 0.0                                                                         AS OUT_Q
	                  , 0.0                                                                         AS OUT_I
	                  , 0.0                                                                         AS RTN_Q
	                  , 0.0                                                                         AS RTN_I
	            FROM                BIV200T A  WITH (NOLOCK)
	                    INNER JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE                 /* 품목*/
	                                                        AND C1.ITEM_CODE     = A.ITEM_CODE
	                    INNER JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE                 /* 사업장 품목*/
	                                                        AND C2.DIV_CODE      = A.DIV_CODE
	                                                        AND C2.ITEM_CODE     = A.ITEM_CODE
	                    LEFT  JOIN  BSA220T D1 WITH (NOLOCK) ON D1.COMP_CODE     = A.COMP_CODE                 /* 창고코드*/
	                                                        AND D1.TYPE_LEVEL    = A.DIV_CODE
	                                                        AND D1.TREE_CODE     = A.WH_CODE
	                    LEFT  JOIN  BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE     = C2.COMP_CODE
	                                                        AND M1.MAIN_CODE     = N'B020'                     /* 계정구분*/
	                                                        AND M1.SUB_CODE      = C2.ITEM_ACCOUNT
	            WHERE   A.COMP_CODE      = @COMP_CODE
	            AND     A.DIV_CODE       = @DIV_CODE
	            AND     A.BASIS_YYYYMM   = @LastYYYYMM
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
				AND A.ITEM_CODE = #{ITEM_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
				AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
				AND CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
						 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
						 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
						 ELSE C1.ITEM_NAME
					END LIKE '%' + #{ITEM_NAME} + '%'
				</if>
	            AND   ((C1.ITEM_LEVEL1   = @ITEM_LEVEL1     AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
	            AND   ((C1.ITEM_LEVEL2   = @ITEM_LEVEL2     AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
	            AND   ((C1.ITEM_LEVEL3   = @ITEM_LEVEL3     AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        /* 소분류*/
	            AND   ((A.WH_CODE        = @WH_CODE         AND @WH_CODE      != '') OR (@WH_CODE      = ''))        /* 창고*/
	            AND   ((C2.ITEM_ACCOUNT  = @ITEM_ACCOUNT    AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        /* 계정*/

	            UNION ALL
	            /*  1.2 당월 신규 발생한 기초재고정보 추가*/
	            SELECT  CASE WHEN @QRY_TYPE = '1' THEN ISNULL(M1.CODE_NAME, '')
	                         WHEN @QRY_TYPE = '2' THEN ISNULL(D1.TREE_NAME, '')
	                         ELSE ''
	                    END                                                                         AS ITEM_ACCOUNT_NAME
	                  , CASE WHEN @QRY_TYPE = '1' THEN C2.ITEM_ACCOUNT
	                         WHEN @QRY_TYPE = '2' THEN ISNULL(A.WH_CODE, '')
	                         ELSE ''
	                    END                                                                         AS ACCOUNT1
	                  , A.COMP_CODE                                                                 AS COMP_CODE
	                  , A.DIV_CODE                                                                  AS DIV_CODE
	                  , A.ITEM_CODE                                                                 AS ITEM_CODE
	                  , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                         WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                         WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                         ELSE C1.ITEM_NAME END                                                  AS ITEM_NAME
	                  , C1.SPEC                                                                     AS SPEC
	                  , C1.STOCK_UNIT                                                               AS STOCK_UNIT
	                  , CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END      AS WH_CODE
	                  , LEFT(@FR_INOUT_DATE, 6)                                                     AS INOUT_DATE

	                  , ISNULL(A.BASIS_Q, 0)                                                        AS BASIS_Q
	                  , CASE WHEN @StockP = '1' AND C2.SUPPLY_TYPE = N'2'
	                              THEN ROUND(ISNULL(C2.BASIS_P, 0) * ISNULL(A.BASIS_Q, 0), @RoundPT)
	                         ELSE ROUND(ISNULL(A.BASIS_AMOUNT_I, 0), @RoundPT)
	                    END                                                                         AS BASIS_I
	                  , 0.0                                                                         AS IN_Q
	                  , 0.0                                                                         AS IN_I
	                  , 0.0                                                                         AS OUT_Q
	                  , 0.0                                                                         AS OUT_I
	                  , 0.0                                                                         AS RTN_Q
	                  , 0.0                                                                         AS RTN_I
	            FROM                BIV200T A  WITH (NOLOCK)
	                    INNER JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE               /* 품목*/
	                                                        AND C1.ITEM_CODE     = A.ITEM_CODE
	                    INNER JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE               /* 사업장 품목*/
	                                                        AND C2.DIV_CODE      = A.DIV_CODE
	                                                        AND C2.ITEM_CODE     = A.ITEM_CODE
	                    LEFT  JOIN  BIV200T B  WITH (NOLOCK) ON  B.COMP_CODE     = A.COMP_CODE               /* 사업장 품목*/
	                                                        AND  B.DIV_CODE      = A.DIV_CODE
	                                                        AND  B.ITEM_CODE     = A.ITEM_CODE
	                                                        AND  B.WH_CODE       = A.WH_CODE
	                                                        AND  B.BASIS_YYYYMM  = @LastYYYYMM
	                    LEFT  JOIN  BSA220T D1 WITH (NOLOCK) ON D1.COMP_CODE     = A.COMP_CODE               /* 창고코드*/
	                                                        AND D1.TYPE_LEVEL    = A.DIV_CODE
	                                                        AND D1.TREE_CODE     = A.WH_CODE
	                    LEFT  JOIN  BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE     = C2.COMP_CODE
	                                                        AND M1.MAIN_CODE     = N'B020'                   /* 계정구분*/
	                                                        AND M1.SUB_CODE      = C2.ITEM_ACCOUNT
	            WHERE   A.COMP_CODE      = @COMP_CODE
	            AND     A.DIV_CODE       = @DIV_CODE
	            AND     A.BASIS_YYYYMM   = @QryYYYYMM
	            AND     B.COMP_CODE     IS NULL

				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
				AND A.ITEM_CODE = #{ITEM_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
				AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
				AND CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
						 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
						 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
						 ELSE C1.ITEM_NAME
					END LIKE '%' + #{ITEM_NAME} + '%'
				</if>
	            AND   ((C1.ITEM_LEVEL1   = @ITEM_LEVEL1     AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
	            AND   ((C1.ITEM_LEVEL2   = @ITEM_LEVEL2     AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
	            AND   ((C1.ITEM_LEVEL3   = @ITEM_LEVEL3     AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        /* 소분류*/
	            AND   ((A.WH_CODE        = @WH_CODE         AND @WH_CODE      != '') OR (@WH_CODE      = ''))        /* 창고*/
	            AND   ((C2.ITEM_ACCOUNT  = @ITEM_ACCOUNT    AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        /* 계정*/

	            UNION ALL
	            /*  1.3 외주 재고정보 추가*/
	            SELECT  CASE WHEN @QRY_TYPE = '1' THEN ISNULL(M1.CODE_NAME, '')
	                         WHEN @QRY_TYPE = '2' THEN ISNULL(CASE WHEN @RefItem = '0' THEN D2.CUSTOM_NAME
	                                                               WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
	                                                               WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
	                                                               ELSE D2.CUSTOM_NAME END, '')
	                         ELSE ''
	                    END                                                                         AS ITEM_ACCOUNT_NAME
	                  , CASE WHEN @QRY_TYPE = '1' THEN C2.ITEM_ACCOUNT
	                         WHEN @QRY_TYPE = '2' THEN 'ZZ' + ISNULL(A.CUSTOM_CODE, '')
	                         ELSE ''
	                    END                                                                         AS ACCOUNT1
	                  , A.COMP_CODE                                                                 AS COMP_CODE
	                  , A.DIV_CODE                                                                  AS DIV_CODE
	                  , A.ITEM_CODE                                                                 AS ITEM_CODE
	                  , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                         WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                         WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                         ELSE C1.ITEM_NAME END                                                  AS ITEM_NAME
	                  , C1.SPEC                                                                     AS SPEC
	                  , C1.STOCK_UNIT                                                               AS STOCK_UNIT
	                  , CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.CUSTOM_CODE
	                         ELSE '' END                                                            AS WH_CODE
	                  , LEFT(@FR_INOUT_DATE, 6)                                                     AS INOUT_DATE

	                  , ISNULL(A.STOCK_Q, 0)                                                        AS BASIS_Q
	                  , CASE WHEN @StockP = '1' AND C2.SUPPLY_TYPE = N'2'
	                              THEN ROUND(ISNULL(C2.BASIS_P, 0) * ISNULL(A.STOCK_Q, 0), @RoundPT)
	                         ELSE ROUND(ISNULL(A.STOCK_I, 0), @RoundPT)
	                    END                                                                         AS BASIS_I
	                  , 0.0                                                                         AS IN_Q
	                  , 0.0                                                                         AS IN_I
	                  , 0.0                                                                         AS OUT_Q
	                  , 0.0                                                                         AS OUT_I
	                  , 0.0                                                                         AS RTN_Q
	                  , 0.0                                                                         AS RTN_I
	            FROM                BIZ200T A  WITH (NOLOCK)
	                    INNER JOIN  (
	                                SELECT A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.ITEM_CODE, MAX(A.BASIS_YYYYMM) AS BASIS_YYYYMM
	                                FROM   BIZ200T A  WITH (NOLOCK)
	                                WHERE  A.COMP_CODE      = @COMP_CODE
	                                AND    A.DIV_CODE       = @DIV_CODE
	                                AND    A.BASIS_YYYYMM  &gt;= CONVERT(NVARCHAR(6), DATEADD(MONTH, -6, CONVERT(DATETIME, @LastYYYYMM + '01')), 112)
	                                AND    A.BASIS_YYYYMM  &lt;= @LastYYYYMM
	                                GROUP BY A.COMP_CODE, A.DIV_CODE, A.CUSTOM_CODE, A.ITEM_CODE
	                                ) B                      ON B.COMP_CODE      = A.COMP_CODE
	                                                        AND B.DIV_CODE       = A.DIV_CODE
	                                                        AND B.CUSTOM_CODE    = A.CUSTOM_CODE
	                                                        AND B.ITEM_CODE      = A.ITEM_CODE
	                                                        AND B.BASIS_YYYYMM   = A.BASIS_YYYYMM
	                    INNER JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE                 /* 품목*/
	                                                        AND C1.ITEM_CODE     = A.ITEM_CODE
	                    INNER JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE                 /* 사업장 품목*/
	                                                        AND C2.DIV_CODE      = A.DIV_CODE
	                                                        AND C2.ITEM_CODE     = A.ITEM_CODE
	                    LEFT  JOIN  BCM100T D2 WITH (NOLOCK) ON D2.COMP_CODE     = A.COMP_CODE             /* 거래처코드*/
	                                                        AND D2.CUSTOM_CODE   = A.CUSTOM_CODE
	                    LEFT  JOIN  BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE     = C2.COMP_CODE
	                                                        AND M1.MAIN_CODE     = N'B020'                     /* 계정구분*/
	                                                        AND M1.SUB_CODE      = C2.ITEM_ACCOUNT
	            WHERE   @SUBCON_YN       = 'Y'
	            AND     A.COMP_CODE      = @COMP_CODE
	            AND     A.DIV_CODE       = @DIV_CODE
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
				AND A.ITEM_CODE = #{ITEM_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
				AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
				AND CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
						 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
						 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
						 ELSE C1.ITEM_NAME
					END LIKE '%' + #{ITEM_NAME} + '%'
				</if>
	            AND   ((C1.ITEM_LEVEL1   = @ITEM_LEVEL1     AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))        /* 대분류*/
	            AND   ((C1.ITEM_LEVEL2   = @ITEM_LEVEL2     AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))        /* 중분류*/
	            AND   ((C1.ITEM_LEVEL3   = @ITEM_LEVEL3     AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))        /* 소분류*/
	            /*AND   ((A.WH_CODE        = @WH_CODE         AND @WH_CODE      != '') OR (@WH_CODE      = ''))      창고*/
	            AND   ((C2.ITEM_ACCOUNT  = @ITEM_ACCOUNT    AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))        /* 계정*/

	            UNION ALL
	            /*  1.4 수불 재고정보 추가*/
	            SELECT  CASE WHEN @QRY_TYPE = '1' THEN ISNULL(M1.CODE_NAME, '')
	                         WHEN @QRY_TYPE = '2' THEN ISNULL(D1.TREE_NAME, '')
	                         ELSE ''
	                    END                                                                         AS ITEM_ACCOUNT_NAME
	                  , CASE WHEN @QRY_TYPE = '1' THEN C2.ITEM_ACCOUNT
	                         WHEN @QRY_TYPE = '2' THEN ISNULL(A.WH_CODE, '')
	                         ELSE ''
	                    END                                                                         AS ACCOUNT1
	                  , A.COMP_CODE                                                                 AS COMP_CODE
	                  , A.DIV_CODE                                                                  AS DIV_CODE
	                  , A.ITEM_CODE                                                                 AS ITEM_CODE
	                  , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                         WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                         WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                         ELSE C1.ITEM_NAME END                                                  AS ITEM_NAME
	                  , C1.SPEC                                                                     AS SPEC
	                  , C1.STOCK_UNIT                                                               AS STOCK_UNIT
	                  , CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.WH_CODE ELSE '' END      AS WH_CODE
	                  , LEFT(A.INOUT_DATE, 6)                                                       AS INOUT_DATE

	                  , 0.0                                                                         AS BASIS_Q
	                  , 0.0                                                                         AS BASIS_I
	                  , CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0)
	                         WHEN A.INOUT_TYPE = '4' THEN ISNULL(A.INOUT_Q, 0) *(-1) ELSE 0.0
	                    END                                                                         AS IN_Q
	                  , CASE WHEN A.INOUT_TYPE = '1' THEN
	                              CASE WHEN @StockP = '1' AND C2.SUPPLY_TYPE = N'2'
	                                        THEN ROUND(ISNULL(C2.BASIS_P, 0) * ISNULL(A.INOUT_Q, 0), @RoundPT)
	                                   ELSE ROUND(ISNULL(A.INOUT_CAL_I, 0.0), @RoundPT) END
						     WHEN A.INOUT_TYPE = '4' THEN
	                              CASE WHEN @StockP = '1' AND C2.SUPPLY_TYPE = N'2'
	                                        THEN ROUND(ISNULL(C2.BASIS_P, 0) * ISNULL(A.INOUT_Q, 0)*(-1), @RoundPT)
	                                   ELSE ROUND(ISNULL(A.INOUT_CAL_I, 0.0)*(-1), @RoundPT) END
	                         ELSE 0.0
	                    END                                                                         AS IN_I
	                  , CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_Q, 0)
	                         ELSE 0.0
	                    END                                                                         AS OUT_Q
	                  , CASE WHEN A.INOUT_TYPE = '2' THEN
	                              CASE WHEN @StockP = '1' AND C2.SUPPLY_TYPE = N'2'
	                                        THEN ROUND(ISNULL(C2.BASIS_P, 0) * ISNULL(A.INOUT_Q, 0), @RoundPT)
	                                   ELSE ROUND(ISNULL(A.INOUT_CAL_I, 0.0), @RoundPT) END
	                         ELSE 0.0
	                    END                                                                         AS OUT_I
	                  , CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_Q, 0)
	                         ELSE 0.0
	                    END                                                                         AS RTN_Q
	                  , CASE WHEN A.INOUT_TYPE = '3' THEN
	                              CASE WHEN @StockP = '1' AND C2.SUPPLY_TYPE = N'2'
	                                        THEN ROUND(ISNULL(C2.BASIS_P, 0) * ISNULL(A.INOUT_Q, 0), @RoundPT)
	                                   ELSE ROUND(ISNULL(A.INOUT_CAL_I, 0.0), @RoundPT) END
	                         ELSE 0.0
	                    END                                                                         AS RTN_I
	            FROM                BTR100T A  WITH (NOLOCK)
	                    INNER JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE                 /* 품목*/
	                                                        AND C1.ITEM_CODE     = A.ITEM_CODE
	                    INNER JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE                 /* 사업장 품목*/
	                                                        AND C2.DIV_CODE      = A.DIV_CODE
	                                                        AND C2.ITEM_CODE     = A.ITEM_CODE
	                    LEFT  JOIN  BSA220T D1 WITH (NOLOCK) ON D1.COMP_CODE     = A.COMP_CODE                 /* 창고코드*/
	                                                        AND D1.TYPE_LEVEL    = A.DIV_CODE
	                                                        AND D1.TREE_CODE     = A.WH_CODE
	                    LEFT  JOIN  BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE     = C2.COMP_CODE
	                                                        AND M1.MAIN_CODE     = N'B020'                     /* 계정구분*/
	                                                        AND M1.SUB_CODE      = C2.ITEM_ACCOUNT
	            WHERE   A.COMP_CODE      = @COMP_CODE
	            AND     A.DIV_CODE       = @DIV_CODE
	            AND     A.INOUT_DATE    &gt;= @FR_INOUT_DATE
	            AND     INOUT_DATE      &lt;= @TO_INOUT_DATE
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
				AND A.ITEM_CODE = #{ITEM_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
				AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
				AND CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
						 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
						 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
						 ELSE C1.ITEM_NAME
					END LIKE '%' + #{ITEM_NAME} + '%'
				</if>
	            AND   ((C1.ITEM_LEVEL1   = @ITEM_LEVEL1     AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))       /* 대분류*/
	            AND   ((C1.ITEM_LEVEL2   = @ITEM_LEVEL2     AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))       /* 중분류*/
	            AND   ((C1.ITEM_LEVEL3   = @ITEM_LEVEL3     AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))       /* 소분류*/
	            AND   ((A.WH_CODE        = @WH_CODE         AND @WH_CODE      != '') OR (@WH_CODE      = ''))       /* 창고*/
	            AND   ((C2.ITEM_ACCOUNT  = @ITEM_ACCOUNT    AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))       /* 계정*/
	            AND   ((A.INOUT_METH    != '3'              AND @MOVE_FLAG    = 'N') OR (@MOVE_FLAG   = 'Y'))       /* 이동포함여부*/
	            AND   ((A.INOUT_METH    != '4'              AND @EVAL_FLAG    = 'N') OR (@EVAL_FLAG   = 'Y'))       /* 실사포함여부*/

	            UNION ALL
	            /*  1.5 외주 수불 재고정보 추가*/
	            SELECT  CASE WHEN @QRY_TYPE = '1' THEN ISNULL(M1.CODE_NAME, '')
	                         WHEN @QRY_TYPE = '2' THEN ISNULL(CASE WHEN @RefItem = '0' THEN D2.CUSTOM_NAME
	                                                               WHEN @RefItem = '1' THEN D2.CUSTOM_NAME1
	                                                               WHEN @RefItem = '2' THEN D2.CUSTOM_NAME2
	                                                               ELSE D2.CUSTOM_NAME END, '')
	                         ELSE ''
	                    END                                                                         AS ITEM_ACCOUNT_NAME
	                  , CASE WHEN @QRY_TYPE = '1' THEN C2.ITEM_ACCOUNT
	                         WHEN @QRY_TYPE = '2' THEN 'ZZ' + ISNULL(A.CUSTOM_CODE, '')
	                         ELSE ''
	                    END                                                                         AS ACCOUNT1
	                  , A.COMP_CODE                                                                 AS COMP_CODE
	                  , A.DIV_CODE                                                                  AS DIV_CODE
	                  , A.ITEM_CODE                                                                 AS ITEM_CODE
	                  , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                         WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                         WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                         ELSE C1.ITEM_NAME END                                                  AS ITEM_NAME
	                  , C1.SPEC                                                                     AS SPEC
	                  , C1.STOCK_UNIT                                                               AS STOCK_UNIT
	                  , CASE WHEN @QRY_TYPE = '2' OR @WH_CODE != '' THEN A.CUSTOM_CODE
	                         ELSE '' END                                                            AS WH_CODE
	                  , LEFT(A.INOUT_DATE, 6)                                                       AS INOUT_DATE

	                  , 0.0                                                                         AS BASIS_Q
	                  , 0.0                                                                         AS BASIS_I
	                  , CASE WHEN A.INOUT_TYPE = '1' THEN ISNULL(A.INOUT_Q, 0)
	                         ELSE 0.0
	                    END                                                                         AS IN_Q
	                  , CASE WHEN A.INOUT_TYPE = '1' THEN
	                              CASE WHEN @StockP = '1' AND C2.SUPPLY_TYPE = N'2'
	                                        THEN ROUND(ISNULL(C2.BASIS_P, 0) * ISNULL(A.INOUT_Q, 0), @RoundPT)
	                                   ELSE ROUND(ISNULL(A.INOUT_I, 0.0), @RoundPT) END
	                         ELSE 0.0
	                    END                                                                         AS IN_I
	                  , CASE WHEN A.INOUT_TYPE = '2' THEN ISNULL(A.INOUT_Q, 0)
	                         ELSE 0.0
	                    END                                                                         AS OUT_Q
	                  , CASE WHEN A.INOUT_TYPE = '2' THEN
	                              CASE WHEN @StockP = '1' AND C2.SUPPLY_TYPE = N'2'
	                                        THEN ROUND(ISNULL(C2.BASIS_P, 0) * ISNULL(A.INOUT_Q, 0), @RoundPT)
	                                   ELSE ROUND(ISNULL(A.INOUT_I, 0.0), @RoundPT) END
	                         ELSE 0.0
	                    END                                                                         AS OUT_I
	                  , CASE WHEN A.INOUT_TYPE = '3' THEN ISNULL(A.INOUT_Q, 0)
	                         ELSE 0.0
	                    END                                                                         AS RTN_Q
	                  , CASE WHEN A.INOUT_TYPE = '3' THEN
	                              CASE WHEN @StockP = '1' AND C2.SUPPLY_TYPE = N'2'
	                                        THEN ROUND(ISNULL(C2.BASIS_P, 0) * ISNULL(A.INOUT_Q, 0), @RoundPT)
	                                   ELSE ROUND(ISNULL(A.INOUT_I, 0.0), @RoundPT) END
	                         ELSE 0.0
	                    END                                                                         AS RTN_I
	            FROM                BIZ600T A  WITH (NOLOCK)
	                    INNER JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE                 /* 품목*/
	                                                        AND C1.ITEM_CODE     = A.ITEM_CODE
	                    INNER JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE     = A.COMP_CODE                 /* 사업장 품목*/
	                                                        AND C2.DIV_CODE      = A.DIV_CODE
	                                                        AND C2.ITEM_CODE     = A.ITEM_CODE
	                    LEFT  JOIN  BCM100T D2 WITH (NOLOCK) ON D2.COMP_CODE     = A.COMP_CODE             /* 거래처코드*/
	                                                        AND D2.CUSTOM_CODE   = A.CUSTOM_CODE
	                    LEFT  JOIN  BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE     = C2.COMP_CODE
	                                                        AND M1.MAIN_CODE     = N'B020'                     /* 계정구분*/
	                                                        AND M1.SUB_CODE      = C2.ITEM_ACCOUNT
	            WHERE   @SUBCON_YN       = 'Y'
	            AND     A.COMP_CODE      = @COMP_CODE
	            AND     A.DIV_CODE       = @DIV_CODE
	            AND     A.INOUT_DATE    &gt;= @FR_INOUT_DATE
	            AND     A.INOUT_DATE    &lt;= @TO_INOUT_DATE
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
				AND A.ITEM_CODE = #{ITEM_CODE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
				AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
				</if>
				<if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
				AND CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
						 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
						 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
						 ELSE C1.ITEM_NAME
					END LIKE '%' + #{ITEM_NAME} + '%'
				</if>
	            AND   ((C1.ITEM_LEVEL1   = @ITEM_LEVEL1     AND @ITEM_LEVEL1  != '') OR (@ITEM_LEVEL1  = ''))       /* 대분류*/
	            AND   ((C1.ITEM_LEVEL2   = @ITEM_LEVEL2     AND @ITEM_LEVEL2  != '') OR (@ITEM_LEVEL2  = ''))       /* 중분류*/
	            AND   ((C1.ITEM_LEVEL3   = @ITEM_LEVEL3     AND @ITEM_LEVEL3  != '') OR (@ITEM_LEVEL3  = ''))       /* 소분류*/
	            /*AND   ((A.WH_CODE        = @WH_CODE         AND @WH_CODE      != '') OR (@WH_CODE      = ''))        창고*/
	            AND   ((C2.ITEM_ACCOUNT  = @ITEM_ACCOUNT    AND @ITEM_ACCOUNT != '') OR (@ITEM_ACCOUNT = ''))       /* 계정*/
	            /*AND   ((A.INOUT_METH    != '3'              AND @TRANS_FLAG   = 'N') OR (@TRANS_FLAG   = 'Y'))       재고이동 포함여부*/

	            AND   ((A.INOUT_METH    != '3'              AND @MOVE_FLAG    = 'N') OR (@MOVE_FLAG   = 'Y'))       /* 이동포함여부*/
	            AND   ((A.INOUT_METH    != '4'              AND @EVAL_FLAG    = 'N') OR (@EVAL_FLAG   = 'Y'))       /* 실사포함여부*/
	            ) A
	            LEFT  JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                                AND C1.ITEM_CODE = A.ITEM_CODE
	            LEFT  JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
	                                                AND C2.DIV_CODE  = A.DIV_CODE
	                                                AND C2.ITEM_CODE = A.ITEM_CODE
	    GROUP BY A.ITEM_ACCOUNT_NAME
	           , A.ACCOUNT1
	           , A.COMP_CODE
	           , A.DIV_CODE
	           , A.ITEM_CODE
	           , A.ITEM_NAME
	           , A.SPEC
	           , A.STOCK_UNIT
	           , A.WH_CODE
	           , A.INOUT_DATE

	           , ISNULL(C1.WGT_UNIT, N'')
	           , ISNULL(C1.UNIT_WGT, 1.0)
	           , ISNULL(C1.SALE_UNIT, N'')
	           , CASE WHEN C1.STOCK_UNIT = C1.SALE_UNIT   THEN CASE WHEN ISNULL(C2.MINI_PACK_Q, 0.0) &lt;= 0.0 THEN 1.0
	                                                                ELSE ISNULL(C2.MINI_PACK_Q, 1.0)
	                                                           END
	                  WHEN ISNULL(C1.TRNS_RATE, 0.0) = 0.0 THEN 1.0
	                  ELSE C1.TRNS_RATE
	             END


	/*  2. 기초수량/금액 계산*/
	    DECLARE         @StockQ             NUMERIC(30, 6)
	                  , @StockI             NUMERIC(30, 6)
	                  , @BasisQ             NUMERIC(30, 6)
	                  , @BasisI             NUMERIC(30, 6)
	                  , @PreItem            NVARCHAR(20)
	                  , @Account            NVARCHAR(10)

	    UPDATE  A
	    SET     @BasisQ   = CASE WHEN ISNULL(@PreItem, '') != A.ITEM_CODE OR ISNULL(@Account, '') != A.ACCOUNT1 THEN A.BASIS_Q ELSE ISNULL(@StockQ, 0) END
	          , @BasisI   = CASE WHEN ISNULL(@PreItem, '') != A.ITEM_CODE OR ISNULL(@Account, '') != A.ACCOUNT1 THEN A.BASIS_I ELSE ISNULL(@StockI, 0) END
	          , @StockQ   = ISNULL(@BasisQ, 0) + A.INSTOCK_Q - A.OUTSTOCK_Q
	          , @StockI   = ISNULL(@BasisI, 0) + A.INSTOCK_I - A.OUTSTOCK_I
	          , @PreItem  = A.ITEM_CODE
	          , @Account  = A.ACCOUNT1

	          , A.BASIS_Q = @BasisQ
	          , A.BASIS_I = @BasisI
	          , A.STOCK_Q = @StockQ
	          , A.STOCK_I = @StockI
	    FROM    T_BIV380SKRV1 A  WITH (NOLOCK, INDEX(T_BIV380SKRV1_IDX00))
	    INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE AND B.ITEM_CODE = A.ITEM_CODE


	    WHERE   A.TYPE_KEY = @TypeKey
			AND B.STOCK_CARE_YN = 'Y'


	/*  9. 데이터 조회 */
	    SELECT  A.ITEM_ACCOUNT_NAME
	          , A.ACCOUNT1
	          , ISNULL(L1.LEVEL_NAME, N' ')                                                                                             AS ITEM_LEVEL1_NAME
	          , ISNULL(L2.LEVEL_NAME, N' ')                                                                                             AS ITEM_LEVEL2_NAME
	          , ISNULL(L3.LEVEL_NAME, N' ')                                                                                             AS ITEM_LEVEL3_NAME
	          , A.ITEM_CODE
	          , A.ITEM_NAME
	          , A.SPEC
	          , A.STOCK_UNIT
	          , A.STOCK_P
	          , A.WGT_UNIT
	          , A.UNIT_WGT
	          , A.PACK_UNIT
	          , A.TRANS_RATE
	          , REPLACE(
	            REPLACE(@DateFormat, 'YYYY', LEFT( A.INOUT_DATE, 4))
	                               , 'MM',   RIGHT(A.INOUT_DATE, 2)
	                   )                                                                                                                AS INOUT_DATE

	          , CASE WHEN CONVERT(INT, A.BASIS_Q / A.TRANS_RATE)    = 0   THEN NULL ELSE CONVERT(INT, A.BASIS_Q / A.TRANS_RATE)    END  AS BOX_BASIS_Q
	          , CASE WHEN              A.BASIS_Q % A.TRANS_RATE     = 0.0 THEN NULL ELSE              A.BASIS_Q % A.TRANS_RATE     END  AS EA_BASIS_Q
	          , CASE WHEN                             A.BASIS_Q     = 0.0 THEN NULL ELSE                             A.BASIS_Q     END  AS BASIS_Q
	          , CASE WHEN                A.BASIS_Q * A.UNIT_WGT     = 0.0 THEN NULL ELSE                A.BASIS_Q * A.UNIT_WGT     END  AS BASIS_WGT_Q
	          , CASE WHEN                             A.BASIS_I     = 0.0 THEN NULL ELSE                             A.BASIS_I     END  AS BASIS_I

	          , CASE WHEN CONVERT(INT, A.INSTOCK_Q / A.TRANS_RATE)  = 0   THEN NULL ELSE CONVERT(INT, A.INSTOCK_Q / A.TRANS_RATE)  END  AS BOX_INSTOCK_Q
	          , CASE WHEN              A.INSTOCK_Q % A.TRANS_RATE   = 0.0 THEN NULL ELSE              A.INSTOCK_Q % A.TRANS_RATE   END  AS EA_INSTOCK_Q
	          , CASE WHEN                             A.INSTOCK_Q   = 0.0 THEN NULL ELSE                             A.INSTOCK_Q   END  AS INSTOCK_Q
	          , CASE WHEN                A.INSTOCK_Q * A.UNIT_WGT   = 0.0 THEN NULL ELSE                A.INSTOCK_Q * A.UNIT_WGT   END  AS INSTOCK_WGT_Q
	          , CASE WHEN                             A.INSTOCK_I   = 0.0 THEN NULL ELSE                             A.INSTOCK_I   END  AS INSTOCK_I

	          , CASE WHEN CONVERT(INT, A.OUTSTOCK_Q / A.TRANS_RATE) = 0   THEN NULL ELSE CONVERT(INT, A.OUTSTOCK_Q / A.TRANS_RATE) END  AS BOX_OUTSTOCK_Q
	          , CASE WHEN              A.OUTSTOCK_Q % A.TRANS_RATE  = 0.0 THEN NULL ELSE              A.OUTSTOCK_Q % A.TRANS_RATE  END  AS EA_OUTSTOCK_Q
	          , CASE WHEN                             A.OUTSTOCK_Q  = 0.0 THEN NULL ELSE                             A.OUTSTOCK_Q  END  AS OUTSTOCK_Q
	          , CASE WHEN                A.OUTSTOCK_Q * A.UNIT_WGT  = 0.0 THEN NULL ELSE                A.OUTSTOCK_Q * A.UNIT_WGT  END  AS OUTSTOCK_WGT_Q
	          , CASE WHEN                             A.OUTSTOCK_I  = 0.0 THEN NULL ELSE                             A.OUTSTOCK_I  END  AS OUTSTOCK_I

	          , CASE WHEN CONVERT(INT, A.STOCK_Q / A.TRANS_RATE)    = 0   THEN NULL ELSE CONVERT(INT, A.STOCK_Q / A.TRANS_RATE)    END  AS BOX_STOCK_Q
	          , CASE WHEN              A.STOCK_Q % A.TRANS_RATE     = 0.0 THEN NULL ELSE              A.STOCK_Q % A.TRANS_RATE     END  AS EA_STOCK_Q
	          , CASE WHEN                             A.STOCK_Q     = 0.0 THEN NULL ELSE                             A.STOCK_Q     END  AS STOCK_Q
	          , CASE WHEN                A.STOCK_Q * A.UNIT_WGT     = 0.0 THEN NULL ELSE                A.STOCK_Q * A.UNIT_WGT     END  AS STOCK_WGT_Q
	          , CASE WHEN                             A.STOCK_I     = 0.0 THEN NULL ELSE                             A.STOCK_I     END  AS STOCK_I
	    FROM                T_BIV380SKRV1 A  WITH (NOLOCK)
	           INNER JOIN   BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE     = A.COMP_CODE              /* 품목*/
	                                                 AND C1.ITEM_CODE     = A.ITEM_CODE
	           LEFT  JOIN   BPR000T  L1 WITH (NOLOCK) ON L1.COMP_CODE     = C1.COMP_CODE             /* 품목 대분류*/
	                                                 AND L1.LEVEL1        = C1.ITEM_LEVEL1
	                                                 AND L1.LEVEL2        = '*'
	                                                 AND L1.LEVEL3        = '*'
	           LEFT  JOIN   BPR000T  L2 WITH (NOLOCK) ON L2.COMP_CODE     = C1.COMP_CODE             /* 품목 중분류*/
	                                                 AND L2.LEVEL1        = C1.ITEM_LEVEL1
	                                                 AND L2.LEVEL2        = C1.ITEM_LEVEL2
	                                                 AND L2.LEVEL3        = '*'
	           LEFT  JOIN   BPR000T  L3 WITH (NOLOCK) ON L3.COMP_CODE     = C1.COMP_CODE             /* 품목 소분류*/
	                                                 AND L3.LEVEL1        = C1.ITEM_LEVEL1
	                                                 AND L3.LEVEL2        = C1.ITEM_LEVEL2
	                                                 AND L3.LEVEL3        = C1.ITEM_LEVEL3
			  LEFT  JOIN   BPR200T  L4 WITH (NOLOCK) ON  L4.COMP_CODE     = A.COMP_CODE
													 AND L4.DIV_CODE      = A.DIV_CODE
													 AND L4.ITEM_CODE     = A.ITEM_CODE
               LEFT  JOIN   BSA100T  L5 WITH (NOLOCK) ON L5.COMP_CODE     = L4.COMP_CODE
													 AND L5.MAIN_CODE     = 'B014'
													 AND L5.SUB_CODE     != '$'
													 AND L5.SUB_CODE      = L4.SUPPLY_TYPE
	    WHERE   A.TYPE_KEY    = @TypeKey
	    AND    (A.BASIS_Q    != 0
	    OR      A.BASIS_I    != 0
	    OR      A.INSTOCK_Q  != 0
	    OR      A.INSTOCK_I  != 0
	    OR      A.OUTSTOCK_Q != 0
	    OR      A.OUTSTOCK_I != 0
	    OR      A.STOCK_Q    != 0
	    OR      A.STOCK_I    != 0)
	    AND (@STOCK_CARE_YN = 'A' OR C1.STOCK_CARE_YN = @STOCK_CARE_YN )

		<if test="INCLUDE_FLAG == &quot;N&quot;"> /* 사급포함여부가 N이면 */
		AND  ISNULL(L5.REF_CODE2,'') != 'Y'
		</if>
	    ORDER BY A.ACCOUNT1, ISNULL(L1.LEVEL_NAME, N' '), ISNULL(L2.LEVEL_NAME, N' '), ISNULL(L3.LEVEL_NAME, N' '), A.ITEM_CODE, A.INOUT_DATE

	    SET NOCOUNT OFF
	    SET ARITHABORT OFF
	END
	</select>

</mapper>