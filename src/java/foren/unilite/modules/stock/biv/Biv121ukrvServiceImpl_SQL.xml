<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biv121ukrvServiceImpl">

	<select id="biv121ukrvServiceImpl.report" parameterType="Map" resultType="rMap">	/* 창고 초기화 */
		SELECT	A.COUNT_DATE											--조사일자
			,	A.SECTOR												--진열대명
			,	A.WH_CODE												--창고코드
			,	CASE WHEN C.TREE_NAME IS NOT NULL THEN C.TREE_NAME		--창고명
					 ELSE A._EXCEL_ERROR_MSG END WH_NAME
			,	ISNULL(A.SEQ,1) AS SEQ									--번호
			,	A.ITEM_CODE												--바코드
			,	CASE WHEN B.ITEM_NAME IS NOT NULL THEN B.ITEM_NAME		--품명
					 ELSE A._EXCEL_ERROR_MSG END ITEM_NAME
			,	A.GOOD_STOCK_Q											--수량
			,   B.SALE_BASIS_P
		FROM BIV301T A WITH (NOLOCK)
		LEFT OUTER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE	= B.COMP_CODE
											   AND A.ITEM_CODE	= B.ITEM_CODE
		LEFT OUTER JOIN BSA220T C WITH (NOLOCK) ON A.COMP_CODE	= C.COMP_CODE
											   AND A.DIV_CODE	= C.TYPE_LEVEL
											   AND A.WH_CODE	= C.TREE_CODE


		WHERE A.COMP_CODE  = #{S_COMP_CODE}		-- 법인코드
		  AND A.DIV_CODE   = #{DIV_CODE}		-- 사업장
		  AND A.WH_CODE    = #{WH_CODE}			-- 창고명
		  AND A.COUNT_DATE = #{COUNT_DATE}		-- 실사일
		  AND A.DEPT_CODE  = #{DEPT_CODE}
		  AND A.SECTOR     = #{SECTOR}
		  AND A.SEND_CLASS = 0

		ORDER BY A.WH_CODE, A.SECTOR, A.SEQ
	</select>

	<select id="biv121ukrvServiceImpl.userWhcode" parameterType="Map" resultType="rMap">	/* 창고 초기화 */
		SELECT
			A.WH_CODE
		FROM BSA210T A WITH(NOLOCK)
			LEFT JOIN BSA300T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
											AND B.DEPT_CODE = A.TREE_CODE
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND B.USER_ID = #{S_USER_ID}
	</select>

	<select id="biv121ukrvServiceImpl.getSectorList" parameterType="Map" resultType="comboItem">
	SELECT DISTINCT(SECTOR) AS 'value'
		  ,SECTOR 			AS 'text'
		  ,'' AS 'search'
	FROM BIV301T
	WHERE SEND_CLASS = 0 AND ISNULL(SECTOR,'') != ''
	  AND COMP_CODE = #{S_COMP_CODE}
	  AND DIV_CODE = #{DIV_CODE}
	  AND COUNT_DATE = #{COUNT_DATE}
	  AND WH_CODE = #{WH_CODE}
	ORDER BY SECTOR
	</select>

	<insert id="biv121ukrvServiceImpl.insertExcelBiv301t" parameterType="Map">

    	INSERT INTO BIV301T
	     ( COMP_CODE
	       ,DIV_CODE
	       ,COUNT_DATE
	       ,COUNT_DATE_SEQ
	       ,WH_CODE
	       ,WH_CELL_CODE
	       ,ITEM_CODE
	       ,LOT_NO
	       ,DEPT_CODE
	       ,GOOD_STOCK_Q
	       ,_EXCEL_JOBID
	       ,_EXCEL_ROWNUM
	       ,_EXCEL_HAS_ERROR
	       ,_EXCEL_ERROR_MSG
	       ,REF_CLASS
	       ,SECTOR
	       ,INSERT_DB_USER
	       ,ITEM_SEQ
	       ,SEQ
	       ,PDA_NO
	    )
	SELECT 	COMP_CODE
			,DIV_CODE
			,COUNT_DATE
			,(SELECT ISNULL(MAX(COUNT_DATE_SEQ), 0) + 1
			  FROM BIV301T WITH (NOLOCK)
			  WHERE COUNT_DATE = A.COUNT_DATE
			  	AND COMP_CODE = A.COMP_CODE
			  	AND DIV_CODE = A.DIV_CODE
			    AND WH_CODE = A.WH_CODE) AS COUNT_DATE_SEQ
			,WH_CODE
			,WH_CELL_CODE
			,ITEM_CODE
			,ISNULL(LOT_NO, '')
			,CASE WHEN ISNULL(DEPT_CODE,'') = '' THEN  #{DEPT_CODE} ELSE DEPT_CODE END
			,SUM(GOOD_STOCK_Q) AS GOOD_STOCK_Q
			,_EXCEL_JOBID
			,MIN(_EXCEL_ROWNUM) AS _EXCEL_ROWNUM
			,_EXCEL_HAS_ERROR
			,_EXCEL_ERROR_MSG
			,REF_CLASS
			,SECTOR
			,INSERT_DB_USER
			,1
			,MIN(_EXCEL_ROWNUM) AS _EXCEL_ROWNUM
			,'XXX'
		FROM BIV302T A WITH (NOLOCK)
		WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		GROUP BY COMP_CODE, DIV_CODE, COUNT_DATE, WH_CODE, WH_CELL_CODE, ITEM_CODE, LOT_NO, DEPT_CODE, _EXCEL_JOBID, _EXCEL_HAS_ERROR, _EXCEL_ERROR_MSG, REF_CLASS
      		, SECTOR, INSERT_DB_USER
    </insert>

	<select id="biv121ukrvServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">		/* 조회 쿼리 */

	/* biv121ukrv.Cbiv121ukrv[fnBiv100QStd] Query01 */

	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
	          , @Count_flag  NVARCHAR(01) /* 실사회차구분 */

	    SET @CompCode 	= #{S_COMP_CODE}
	    SET @UserId   	= #{S_USER_ID}
	    SET @LangType 	= #{S_LANG_CODE}
	    SET @Count_flag = #{COUNT_FLAG}    /* '1'-최종, '2'-전체'*/

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
		SELECT A.COMP_CODE			AS COMP_CODE,
			   A.DIV_CODE			AS DIV_CODE,
			   A.COUNT_DATE			AS COUNT_DATE,
			   A.COUNT_DATE_SEQ		AS COUNT_DATE_SEQ,
			   A.WH_CODE			AS WH_CODE,
			   A.WH_CELL_CODE		AS WH_CELL_CODE,
			   A.ITEM_CODE			AS ITEM_CODE,
			   B.ITEM_NAME			AS ITEM_NAME,
			   A.LOT_NO         AS LOT_NO,
			   A.DEPT_CODE			AS DEPT_CODE,
			   M2.TREE_NAME			AS DEPT_NAME,
			   A.GOOD_STOCK_Q		AS GOOD_STOCK_Q,
			   A._EXCEL_JOBID		AS _EXCEL_JOBID,
			   A._EXCEL_ROWNUM		AS _EXCEL_ROWNUM,
			   A._EXCEL_HAS_ERROR	AS _EXCEL_HAS_ERROR,
			   A.SECTOR				AS SECTOR,
			   A._EXCEL_ERROR_MSG	AS _EXCEL_ERROR_MSG,
			   A.REF_CLASS			AS REF_CLASS,
			   CASE WHEN ISNULL(A.SEND_YN, 'N') = 'Y' THEN '반영' ELSE '미반영' END AS SEND_YN,
			   A.SEQ				AS SEQ,
			   A.ITEM_SEQ			AS ITEM_SEQ,
			   A.PDA_NO				AS PDA_NO
		FROM BIV301T A WITH (NOLOCK)
		LEFT JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
										 AND B.DIV_CODE  = A.DIV_CODE
										 AND B.ITEM_CODE = A.ITEM_CODE
		LEFT JOIN BSA210T M2 WITH (NOLOCK) ON M2.COMP_CODE    = A.COMP_CODE
	                                      AND M2.TYPE_LEVEL   = A.DIV_CODE
	                                      AND M2.TREE_CODE    = A.DEPT_CODE
		WHERE A.COMP_CODE	= @CompCode
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		  AND A.DIV_CODE	= #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		  AND A.WH_CODE		= #{WH_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COUNT_DATE)">
		  AND A.COUNT_DATE	= #{COUNT_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
	      AND ISNULL(M2.TREE_LEVEL,'')   LIKE  ISNULL((SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE = M2.COMP_CODE AND TYPE_LEVEL= M2.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}),'') + '%'
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(SECTOR)">
	      AND A.SECTOR		= #{SECTOR}
	    </if>
		<if test="REF_CLASS == &quot;PDA&quot;">
		 AND A.REF_CLASS 	= 'PDA'
		</if>
		<if test="REF_CLASS == &quot;PDA&quot;">
		 AND A.SEND_CLASS 	= '0'
		</if>
		<if test="REF_CLASS == &quot;EXCEL&quot;">
		AND	A.REF_CLASS		= 'EXCEL'
		</if>
		<if test="SEND_YN == &quot;N&quot;">
		AND	A.SEND_YN	= 'N'
		</if>
		<if test="SEND_YN == &quot;Y&quot;">
		AND	A.SEND_YN	= 'Y'
		</if>
		--AND (@Count_flag = '1'
		-- OR (@Count_flag = '2' AND A.COUNT_DATE_SEQ
	    --     = ISNULL(
		--	     (SELECT MAX(X.COUNT_DATE_SEQ)
	    --         FROM BIV301T X WITH (NOLOCK)
	    --        WHERE X.COMP_CODE 		= A.COMP_CODE
	    --           AND X.DIV_CODE     	= A.DIV_CODE
	    --           AND X.COUNT_DATE 	= A.COUNT_DATE
		--           AND X.WH_CODE     	= A.WH_CODE
		--           AND X.ITEM_CODE    	= A.ITEM_CODE), 1)))
		ORDER BY A.COUNT_DATE, A.COUNT_DATE_SEQ, A.WH_CODE, A.SECTOR, A.SEQ

		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END
	</select>

	<update id="biv121ukrvServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">

		{call SP_STOCK_CreateStockCountinfo (
			#{S_COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{COUNT_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{WH_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{S_USER_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{EXECUTE_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>

	<insert id="biv121ukrvServiceImpl.insertExcelBiv302t" parameterType="Map">		/* 엑셀insert */
    	INSERT INTO BIV302T
	     ( _EXCEL_JOBID
	       , _EXCEL_ROWNUM
	       , _EXCEL_HAS_ERROR
	       , _EXCEL_ERROR_MSG
	       , COMP_CODE
	       , INSERT_DB_USER
	       , INSERT_DB_TIME
	       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	       , DIV_CODE
	       </if>
	       <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	       , WH_CODE
	       </if>
	       , SECTOR
	       , DEPT_CODE
	       , WH_CELL_CODE
	       , COUNT_DATE
	       , REF_CLASS
	       <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	       , ITEM_CODE
	       </if>
	       , GOOD_STOCK_Q
	       <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
	       , LOT_NO
	       </if>
	     )
	VALUES
	     ( #{_EXCEL_JOBID}
	       , #{_EXCEL_ROWNUM}
	       , #{_EXCEL_HAS_ERROR, jdbcType=VARCHAR}
	       , #{_EXCEL_ERROR, jdbcType=VARCHAR}
	       , #{S_COMP_CODE}
	       , #{S_USER_ID}
	       , getDate()
	       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	       , #{DIV_CODE}
	       </if>
	       <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	       , #{WH_CODE}
	       </if>
	       <if test="@foren.Ognl@isNotEmpty(SECTOR)">
	       , #{SECTOR}
	       </if>
	       <if test="@foren.Ognl@isEmpty(SECTOR)">
	       , ''
	       </if>

	       , #{DEPT_CODE}
	       <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
	       , #{WH_CELL_CODE}
	       </if>
	       <if test="@foren.Ognl@isEmpty(WH_CELL_CODE)">
	       , ''
	       </if>
	       , #{COUNT_DATE}
	       , 'EXCEL'
	       <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	       , #{ITEM_CODE}
	       </if>
	       , CASE WHEN #{GOOD_STOCK_Q} = '' OR #{GOOD_STOCK_Q} IS NULL THEN 0 ELSE #{GOOD_STOCK_Q} END
	       <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
	       , #{LOT_NO}
	       </if>
	     )
    </insert>

    <select id="biv121ukrvServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">	/* 엑셀업로드 */
	/* biv121ukrv.Cbiv121ukrv[fnBiv100QStd] Query01 */

	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
		SELECT A.COMP_CODE			AS COMP_CODE,
			   A.DIV_CODE			AS DIV_CODE,
			   A.COUNT_DATE			AS COUNT_DATE,
			   A.COUNT_DATE_SEQ		AS COUNT_DATE_SEQ,
			   A.WH_CODE			AS WH_CODE,
			   A.WH_CELL_CODE		AS WH_CELL_CODE,
			   A.ITEM_CODE			AS ITEM_CODE,
			   B.ITEM_NAME			AS ITEM_NAME,
			   A.LOT_NO         AS LOT_NO,
			   A.DEPT_CODE			AS DEPT_CODE,
			   M2.TREE_NAME			AS DEPT_NAME,
			   A.GOOD_STOCK_Q		AS GOOD_STOCK_Q,
			   A._EXCEL_JOBID		AS _EXCEL_JOBID,
			   A._EXCEL_ROWNUM		AS _EXCEL_ROWNUM,
			   A._EXCEL_HAS_ERROR	AS _EXCEL_HAS_ERROR,
			   A.SECTOR				AS SECTOR,
			   A._EXCEL_ERROR_MSG	AS _EXCEL_ERROR_MSG,
			   A.REF_CLASS			AS REF_CLASS,
			   A.SEND_YN			AS SEND_YN
		FROM BIV302T A WITH (NOLOCK)
		LEFT JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
										 AND B.DIV_CODE  = A.DIV_CODE
										 AND B.ITEM_CODE = A.ITEM_CODE
		LEFT JOIN BSA210T M2 WITH (NOLOCK) ON M2.COMP_CODE    = A.COMP_CODE
	                                      AND M2.TYPE_LEVEL   = A.DIV_CODE
	                                      AND M2.TREE_CODE    = A.DEPT_CODE
		WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM

		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END
	</select>

	<select id="biv121ukrvServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>

	<insert id="biv121ukrvServiceImpl.insertDetail" parameterType="Map">	/* 추가 */
	INSERT INTO BIV301T
	     ( COMP_CODE
	       ,DIV_CODE
	       ,ITEM_CODE
	       ,GOOD_STOCK_Q
	       ,REF_CLASS
	       <if test="@foren.Ognl@isNotEmpty(SECTOR)">
	       ,SECTOR
	       </if>
	       ,SEND_YN
	       ,COUNT_DATE_SEQ
	       ,COUNT_DATE
	       ,WH_CODE
	       <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
	       ,WH_CELL_CODE
	       </if>
	       ,LOT_NO
	       ,DEPT_CODE
	       ,ITEM_SEQ
	       ,PDA_NO
	       ,SEQ
	       ,INSERT_DB_TIME
	       ,INSERT_DB_USER
	      )
	VALUES
	     (  #{COMP_CODE}
	       ,#{DIV_CODE}
	       ,#{ITEM_CODE}
	       ,#{GOOD_STOCK_Q}
	       ,#{REF_CLASS}
	       <if test="@foren.Ognl@isNotEmpty(SECTOR)">
	       ,#{SECTOR}
	       </if>
	       ,#{SEND_YN}
	       ,#{COUNT_DATE_SEQ}
	       ,#{COUNT_DATE}
	       ,#{WH_CODE}
	       <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
	       ,#{WH_CELL_CODE}
	       </if>
	       , #{LOT_NO}
	       ,#{DEPT_CODE}
	       ,'1'
	       ,'ERP'
	       ,#{SEQ}
	       ,getDate()
	       ,#{S_USER_ID}
	     )
	</insert>

	<update id="biv121ukrvServiceImpl.updateDetail" parameterType="Map">		/* 수정 */
	UPDATE  BIV301T
       SET   GOOD_STOCK_Q   = #{GOOD_STOCK_Q}
        	,SECTOR			= #{SECTOR}
	 WHERE COMP_CODE		= #{S_COMP_CODE}
       AND DIV_CODE			= #{DIV_CODE}
       AND COUNT_DATE		= #{COUNT_DATE}
       AND ITEM_SEQ			= #{ITEM_SEQ}
       AND COUNT_DATE_SEQ  	= #{COUNT_DATE_SEQ}
       AND WH_CODE			= #{WH_CODE}
       AND WH_CELL_CODE		= #{WH_CELL_CODE}
       AND ITEM_CODE		= #{ITEM_CODE}
       AND LOT_NO       = #{LOT_NO}
	   AND PDA_NO			= #{PDA_NO}
	   AND SEQ				= #{SEQ}
	</update>

	<delete id="biv121ukrvServiceImpl.deleteDetail" parameterType="Map">		/* 삭제 */
	DELETE FROM BIV301T
	 WHERE COMP_CODE 		= #{COMP_CODE}
	   AND DIV_CODE 		= #{DIV_CODE}
	   AND COUNT_DATE 		= #{COUNT_DATE}
	   AND COUNT_DATE_SEQ 	= #{COUNT_DATE_SEQ}
	   AND WH_CODE 			= #{WH_CODE}
	   AND WH_CELL_CODE 	= #{WH_CELL_CODE}
	   AND ITEM_CODE 		= #{ITEM_CODE}
     AND LOT_NO       = #{LOT_NO}
	   AND ITEM_SEQ			= '1'
	   AND SEQ				= #{SEQ}
	   AND PDA_NO			= #{PDA_NO}

	  IF NOT EXISTS ( SELECT TOP 1 1
	                  FROM BIV301T
	                  WHERE COMP_CODE 	= #{COMP_CODE}
                	  AND DIV_CODE 		  = #{DIV_CODE}
                	  AND COUNT_DATE 		= #{COUNT_DATE}
                	  AND WH_CODE 			= #{WH_CODE} )
    BEGIN
      DELETE BIV300T
      WHERE COMP_CODE 	= #{COMP_CODE}
  	  AND DIV_CODE 		  = #{DIV_CODE}
  	  AND COUNT_DATE 		= #{COUNT_DATE}
  	  AND WH_CODE 			= #{WH_CODE}
    END

	</delete>

	<update id="excelValidate" >
		/*biv121ukrvServiceImpl.excelValidate*/
		/*LOT_NO재고 사용하는 경우 LOT_NO필수 체크*/

	    DECLARE         @LotYN               NVARCHAR(01)
							,@COMP_CODE      NVARCHAR(08)

        SET 	@COMP_CODE	= #{S_COMP_CODE}
        SELECT TOP 1 @LotYN = REF_CODE1
        FROM   BSA100T WITH (NOLOCK)
        WHERE  COMP_CODE = @COMP_CODE
        AND    MAIN_CODE = 'B084'                                   /* 재고합산 유형 */
        AND    SUB_CODE  = 'C'                                        /* Lot No. 합산 */

        SET @LotYN = ISNULL(@LotYN, 'N')

	    UPDATE   BIV302T
			SET   _EXCEL_HAS_ERROR = (CASE WHEN @LotYN = 'Y' AND  ISNULL(LOT_NO,'') = '' 	THEN 'Y'
										  ELSE _EXCEL_HAS_ERROR
									      END),
					_EXCEL_ERROR_MSG = (CASE WHEN @LotYN = 'Y' AND  ISNULL(LOT_NO,'') = '' 	THEN ISNULL(_EXCEL_ERROR_MSG,'') + 'LOT_NO는 필수 입력 항목입니다.'
										 ELSE _EXCEL_ERROR_MSG
										 END)
		WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>

</mapper>