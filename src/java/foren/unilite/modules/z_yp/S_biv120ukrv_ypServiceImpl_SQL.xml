<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_biv120ukrv_ypServiceImpl">

	<select id="s_biv120ukrv_ypServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">

	/* s_biv120ukrv_yp.Cs_biv120ukrv_yp[fnBiv120QStd] Query01 */
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON

	    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
	          , @UserId      NVARCHAR(100) /* 사용자ID    */
	          , @LangType    NVARCHAR(2)  /* 언어구분    */
	          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
	          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

	    SET @CompCode = #{S_COMP_CODE}
	    SET @UserId   = #{S_USER_ID}
	    SET @LangType = #{S_LANG_CODE}

	    /* 명칭 참조 유형 */
	    SELECT TOP 1 @RefItem = REF_ITEM
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USER_ID = @UserId

	    SET @RefItem = ISNULL(@RefItem, N'0')

	    /* 날짜 포맷 유형 설정 */
	    SELECT TOP 1 @DateFormat = CODE_NAME
	      FROM BSA100T WITH (NOLOCK)
	     WHERE COMP_CODE = @CompCode
	       AND MAIN_CODE = N'B044'
	       AND REF_CODE1 = N'Y'

	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

	    /* 데이터 조회 */
		SELECT A.COMP_CODE
	         , A.DIV_CODE
	         , A.WH_CODE
	         , A.COUNT_DATE
	         , C2.ITEM_ACCOUNT
	         , M1.LEVEL_NAME   AS ITEM_LEVEL1
	         , M2.LEVEL_NAME   AS ITEM_LEVEL2
	         , M3.LEVEL_NAME   AS ITEM_LEVEL3
	         , A.ITEM_CODE
	         , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
	                WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                ELSE C1.ITEM_NAME
	           END                                              AS ITEM_NAME
	         , C1.SPEC
	         , C1.STOCK_UNIT
	         , ISNULL(C1.UNIT_WGT, 1.0)                         AS UNIT_WGT
	         , C1.WGT_UNIT
	         , A.WH_CELL_CODE
	         , C3.WH_CELL_NAME
	         , A.LOT_NO
	         , A.GOOD_STOCK_BOOK_Q
	         , A.BAD_STOCK_BOOK_Q
	         , A.GOOD_STOCK_BOOK_Q * ISNULL(C1.UNIT_WGT, 1.0)   AS GOOD_STOCK_BOOK_W
	         , A.BAD_STOCK_BOOK_Q  * ISNULL(C1.UNIT_WGT, 1.0)   AS BAD_STOCK_BOOK_W
	         , A.GOOD_STOCK_Q
	         , A.BAD_STOCK_Q
	         , A.GOOD_STOCK_Q      * ISNULL(C1.UNIT_WGT, 1.0)   AS GOOD_STOCK_W
	         , A.BAD_STOCK_Q       * ISNULL(C1.UNIT_WGT, 1.0)   AS BAD_STOCK_W
	         , A.COUNT_FLAG
	         , A.COUNT_CONT_DATE
	         , A.REMARK
	         , A.UPDATE_DB_USER
	         , A.UPDATE_DB_TIME
	         , M4.REF_CODE1
	         , A.GOOD_STOCK_BOOK_I /*전산 재고금액*/
	         , A.GOOD_STOCK_Q * ISNULL(F.ITEM_P, 0) AS GOOD_STOCK_I /*실사 재고금액*/
	         , (A.GOOD_STOCK_BOOK_Q - A.GOOD_STOCK_Q)*-1 AS OVER_GOOD_STOCK_Q
	         , (A.BAD_STOCK_BOOK_Q - A.BAD_STOCK_Q)*-1 AS OVER_BAD_STOCK_Q
	         , G.CUSTOM_CODE
			 , G.CUSTOM_NAME
	    FROM              BIV300T A  WITH (NOLOCK)
	           INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
	                                              AND C1.ITEM_CODE    = A.ITEM_CODE
	           INNER JOIN BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
	                                              AND C2.DIV_CODE     = A.DIV_CODE
	                                              AND C2.ITEM_CODE    = A.ITEM_CODE
	           LEFT  JOIN BSA225T C3 WITH (NOLOCK) ON C3.COMP_CODE    = A.COMP_CODE
	                                              AND C3.DIV_CODE     = A.DIV_CODE
	                                              AND C3.WH_CODE      = A.WH_CODE
	                                              AND C3.WH_CELL_CODE = A.WH_CELL_CODE
	           LEFT  JOIN BPR000T M1 WITH (NOLOCK) ON M1.COMP_CODE    = C1.COMP_CODE
	                                              AND M1.LEVEL1       = C1.ITEM_LEVEL1
	                                              AND M1.LEVEL2       = '*'
	                                              AND M1.LEVEL3       = '*'
	           LEFT  JOIN BPR000T M2 WITH (NOLOCK) ON M2.COMP_CODE    = C1.COMP_CODE
	                                              AND M2.LEVEL1       = C1.ITEM_LEVEL1
	                                              AND M2.LEVEL2      != '*'
	                                              AND M2.LEVEL2       = C1.ITEM_LEVEL2
	                                              AND M2.LEVEL3       = '*'
	           LEFT  JOIN BPR000T M3 WITH (NOLOCK) ON M3.COMP_CODE    = C1.COMP_CODE
	                                              AND M3.LEVEL1       = C1.ITEM_LEVEL1
	                                              AND M3.LEVEL2      != '*'
	                                              AND M3.LEVEL2       = C1.ITEM_LEVEL2
	                                              AND M3.LEVEL3      != '*'
	                                              AND M3.LEVEL3       = C1.ITEM_LEVEL3
	           LEFT  JOIN BSA100T M4 WITH (NOLOCK) ON M4.COMP_CODE    = A.COMP_CODE
	                                              AND M4.MAIN_CODE    = N'B084'
	                                              AND M4.SUB_CODE     = N'D'
               LEFT  JOIN BPR400T           F WITH (NOLOCK) ON F.COMP_CODE       = @CompCode
                                                           AND F.DIV_CODE        = A.DIV_CODE
                                                           AND F.TYPE            = '1'
                                                           AND F.ITEM_CODE       = A.ITEM_CODE
                                                       --  AND F.CUSTOM_CODE     =
                                                           AND F.MONEY_UNIT      = 'KRW'
                                                       --  AND F.ORDER_UNIT      =
                                                           AND F.APLY_START_DATE + F.CUSTOM_CODE = (SELECT MAX(X.APLY_START_DATE + X.CUSTOM_CODE) AS APLY_START_DATE
                                                                                                      FROM BPR400T X WITH(NOLOCK)
                                                                                                     WHERE X.COMP_CODE        = F.COMP_CODE
                                                                                                       AND X.DIV_CODE         = F.DIV_CODE
                                                                                                       AND X.ITEM_CODE        = F.ITEM_CODE
                                                                                                     --AND X.CUSTOM_CODE      = F.CUSTOM_CODE   --CUSTOM_CODE 조인이 없어야 한건만 가져옴...
                                                                                                       AND X.MONEY_UNIT       = F.MONEY_UNIT
                                                                                                       AND X.ORDER_UNIT       = F.ORDER_UNIT
                                                                                                       AND X.TYPE             = F.TYPE
                                                                                                       AND X.APLY_START_DATE &lt;= A.COUNT_DATE)
		 	LEFT  JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE    = A.COMP_CODE
	       								 	AND G.CHANNEL  = CASE WHEN LEFT(A.LOT_NO,2) = ''
	       								   									  THEN 'NULL'
	       								   									  ELSE LEFT(A.LOT_NO,2)
	       								   							  END
	    WHERE  A.COMP_CODE        = @CompCode
	    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	    AND    A.DIV_CODE         = #{DIV_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
	    AND    A.WH_CODE          = #{WH_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
	    AND    A.WH_CELL_CODE     = #{WH_CELL_CODE}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(COUNT_DATE)">
	    AND    A.COUNT_DATE       = #{COUNT_DATE}
	    </if>
	    AND    C1.STOCK_CARE_YN   = 'Y'
	    AND    C2.REAL_CARE_YN    = 'Y'

	    /* 2009/12/09 창고 Cell 관리를 할 경우 창고 Cell 코드가 있는 데이터만 조회 */
	    AND  ((A.WH_CELL_CODE     &gt; '' AND ISNULL(M4.REF_CODE1, 'N') = 'Y') OR (ISNULL(M4.REF_CODE1, 'N') = 'N'))
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
	    AND    C2.ITEM_ACCOUNT    = #{ITEM_ACCOUNT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
	    AND    A.ITEM_CODE     LIKE #{ITEM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
	    AND    (CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
	                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
	                                     ELSE C1.ITEM_NAME
	            END)           LIKE #{ITEM_NAME}
		</if>

	    <if test="@foren.Ognl@isNotEmpty(DIFF_YN)">
	    AND (((A.GOOD_STOCK_BOOK_Q != A.GOOD_STOCK_Q OR A.BAD_STOCK_BOOK_Q != A.BAD_STOCK_Q) AND #{DIFF_YN}   = 'Y') OR (#{DIFF_YN}   = 'N'))
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(BOOK_ZERO)">
	    AND (((A.GOOD_STOCK_BOOK_Q != 0.0            OR A.BAD_STOCK_BOOK_Q != 0.0          ) AND #{BOOK_ZERO} = 'Y') OR (#{BOOK_ZERO} = 'N'))
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(CONT_ZERO)">
	    AND (((A.GOOD_STOCK_Q      != 0.0            OR A.BAD_STOCK_Q      != 0.0          ) AND #{CONT_ZERO} = 'Y') OR (#{CONT_ZERO} = 'N'))
	    </if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
	    AND    C1.ITEM_LEVEL1     = #{ITEM_LEVEL1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
	    AND    C1.ITEM_LEVEL2     = #{ITEM_LEVEL2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
	    AND    C1.ITEM_LEVEL3     = #{ITEM_LEVEL3}
		</if>
	    ORDER BY A.ITEM_CODE

		SET NOCOUNT OFF
		SET ARITHABORT OFF
	END
	</select>

	<insert id="s_biv120ukrv_ypServiceImpl.insertLogMaster" parameterType="Map">	/* 저장쿼리 */
	/*s_biv120ukrv_ypServiceImpl.selectSaveList*/
	INSERT INTO L_BIV300T
     (  KEY_VALUE,
     	OPR_FLAG,
    	COMP_CODE,
    	DIV_CODE,
    	COUNT_DATE,
    	WH_CODE,
    	ITEM_CODE,
    	WH_CELL_CODE,
    	LOT_NO,
    	COUNT_CONT_DATE,
    	GOOD_STOCK_BOOK_Q,
    	BAD_STOCK_BOOK_Q,
    	GOOD_STOCK_Q,
    	BAD_STOCK_Q,
    	COUNT_FLAG,
    	REMARK,
    	UPDATE_DB_USER,
    	UPDATE_DB_TIME,
    	INSERT_DB_USER,
    	INSERT_DB_TIME	 )
	VALUES
     (  #{KEY_VALUE},
     	#{OPR_FLAG},
    	#{COMP_CODE},
    	#{DIV_CODE},
    	#{COUNT_DATE},
    	#{WH_CODE},
    	#{ITEM_CODE},
    	#{WH_CELL_CODE},
    	#{LOT_NO},
    	getDate(),
    	#{GOOD_STOCK_BOOK_Q},
    	#{BAD_STOCK_BOOK_Q},
    	#{GOOD_STOCK_Q},
    	#{BAD_STOCK_Q},
    	#{COUNT_FLAG},
    	#{REMARK},
    	#{S_USER_ID},
    	getDate(),
    	#{S_USER_ID},
    	getDate()	 )
	</insert>

	<update id="s_biv120ukrv_ypServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call SP_STOCK_StockCounting (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{CountDate, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>
</mapper>