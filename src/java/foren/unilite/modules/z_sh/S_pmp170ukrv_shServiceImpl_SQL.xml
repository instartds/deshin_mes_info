<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_pmp170ukrv_shServiceImpl">
<select id="s_pmp170ukrv_shServiceImpl.printList" parameterType="Map" resultType="rMap">
	BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON

        DECLARE             @COMP_CODE              NVARCHAR(08)             --(필수) 법인코드
                          , @DIV_CODE               NVARCHAR(08)             --(필수) 사업장
                          , @WORK_SHOP_CODE         NVARCHAR(10)             --(필수) 작업장

                          , @USER_ID                NVARCHAR(100)             --(필수) 사용자 ID

        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}

        SET @USER_ID        = #{S_USER_ID}

    -- 명칭 조회 유형 설정 ------------------------------------------------------------------------------------
        DECLARE @RefItem            NVARCHAR(01)

        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T WITH (NOLOCK)
        WHERE  USER_ID = @USER_ID

        SET @RefItem = ISNULL(@RefItem, '0')

    -- 날짜 포맷 유형 설정 ------------------------------------------------------------------------------------
        DECLARE @DateFormat             NVARCHAR(10)

        SELECT TOP 1 @DateFormat = CODE_NAME
        FROM   BSA100T WITH (NOLOCK)
        WHERE  COMP_CODE = @COMP_CODE
        AND    MAIN_CODE = 'B044'
        AND    REF_CODE1 = 'Y'

        SET @DateFormat = ISNULL(@DateFormat, 'YYYY-MM-DD')
    -------------------------------------------------------------------------------------------------------------

        SELECT  R5.CODE_NAME                                                                AS WORK_END_YN
              , A.PROG_WORK_CODE                                                    AS PROG_WORK_CODE
              , D1.PROG_WORK_NAME                                                   AS PROG_WORK_NAME
              , A.WKORD_NUM                                                         AS WKORD_NUM
              , A.ITEM_CODE                                                         AS ITEM_CODE
              , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                     WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                     WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                     ELSE C1.ITEM_NAME
                END                                                                 AS ITEM_NAME
              , C1.ITEM_NAME1
              , C1.SPEC                                                             AS SPEC
              , C1.STOCK_UNIT                                                       AS STOCK_UNIT
              , CONVERT(NVARCHAR(10),
                REPLACE(
                REPLACE(
                REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_START_DATE, 1, 4))
                                   , 'MM',   SUBSTRING(A.PRODT_START_DATE, 5, 2))
                                   , 'DD',   SUBSTRING(A.PRODT_START_DATE, 7, 2)))  AS PRODT_START_DATE
              , CONVERT(NVARCHAR(10),
                REPLACE(
                REPLACE(
                REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_END_DATE, 1, 4))
                                   , 'MM',   SUBSTRING(A.PRODT_END_DATE, 5, 2))
                                   , 'DD',   SUBSTRING(A.PRODT_END_DATE, 7, 2)))    AS PRODT_END_DATE
              , ISNULL(A.WKORD_Q, 0.0)                                              AS WKORD_Q
              , ISNULL(A.PRODT_Q, 0.0)                                              AS PRODT_Q
              , A.REMARK                                                            AS REMARK1
              , A.PROJECT_NO                                                        AS PROJECT_NO
              , A.PJT_CODE                                                          AS PJT_CODE
              , A.SO_NUM                                                         AS ORDER_NUM
              , CASE WHEN B.PLAN_TYPE = 'T' THEN ISNULL(T1.QTY, 0.0) * ISNULL(T1.TRANS_RATE, 0.0)
                     ELSE ISNULL(S1.ORDER_Q, 0.0)
                END                                                                 AS ORDER_Q
              , CASE WHEN B.PLAN_TYPE = 'T' THEN CONVERT(NVARCHAR(10),
                                                 REPLACE(
                                                 REPLACE(
                                                 REPLACE(@DateFormat, 'YYYY', SUBSTRING(T1.DELIVERY_DATE, 1, 4))
                                                                    , 'MM',   SUBSTRING(T1.DELIVERY_DATE, 5, 2))
                                                                    , 'DD',   SUBSTRING(T1.DELIVERY_DATE, 7, 2)))
                     ELSE CONVERT(NVARCHAR(10),
                          REPLACE(
                          REPLACE(
                          REPLACE(@DateFormat, 'YYYY', SUBSTRING(S1.DVRY_DATE, 1, 4))
                                             , 'MM',   SUBSTRING(S1.DVRY_DATE, 5, 2))
                                             , 'DD',   SUBSTRING(S1.DVRY_DATE, 7, 2)))
                END                                                                 AS DVRY_DATE
              , A.LOT_NO                                                            AS LOT_NO
              , B.REMARK                                                            AS REMARK2
              , A.WORK_SHOP_CODE                                                    AS WORK_SHOP_CODE
              , D2.TREE_NAME                                                        AS WORK_SHOP_NAME
              ,A.MOLD_CODE			--금형
              ,R1.EQU_NAME AS MOLD_NAME
			  ,A.EQUIP_CODE			--설비
			  ,R2.EQU_NAME AS EQUIP_NAME
			  ,A.DIV_CODE

			 ,R3.CUSTOM_NAME AS SOF_CUSTOM_NAME
			 ,R4.ITEM_NAME AS SOF_ITEM_NAME
			 
			 ,R6.CORE_CODE --코어
			 ,R6.CORE_NAME
			 
			 
        FROM                PMP100T A  WITH (NOLOCK)
                LEFT  JOIN  PPL100T B  WITH (NOLOCK) ON  B.COMP_CODE      = A.COMP_CODE
                                                    --20200120 주석처리
                                                    --AND  B.DIV_CODE       = A.DIV_CODE
                                                    AND  B.WK_PLAN_NUM    = A.WK_PLAN_NUM
                LEFT  JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
                                                    AND C1.ITEM_CODE      = A.ITEM_CODE
				LEFT  JOIN (
							SELECT COMP_CODE,DIV_CODE, PROG_WORK_CODE, WKORD_NUM, SUM(WORK_Q) AS WORK_Q, SUM(PASS_Q) AS PASS_Q, SUM(GOOD_WORK_Q) AS GOOD_WORK_Q, SUM(BAD_WORK_Q) AS BAD_WORK_Q
									, MAX(CONTROL_STATUS) AS CONTROL_STATUS
							FROM PMR100T
							GROUP BY COMP_CODE,DIV_CODE, PROG_WORK_CODE, WKORD_NUM
            				) D 					 ON D.COMP_CODE      = A.COMP_CODE
                                                    AND D.DIV_CODE       = A.DIV_CODE
                                                    AND D.WKORD_NUM      = A.WKORD_NUM
                                                    AND D.PROG_WORK_CODE=A.PROG_WORK_CODE
                LEFT  JOIN  PBS200T D1 WITH (NOLOCK) ON D1.COMP_CODE      = A.COMP_CODE
                                                    AND D1.DIV_CODE       = A.DIV_CODE
                                                    AND D1.WORK_SHOP_CODE = A.WORK_SHOP_CODE
                                                    AND D1.PROG_WORK_CODE = A.PROG_WORK_CODE
                LEFT  JOIN  BSA230T D2 WITH (NOLOCK) ON D2.COMP_CODE      = A.COMP_CODE
                                                    AND D2.TYPE_LEVEL     = A.DIV_CODE
                                                    AND D2.TREE_CODE      = A.WORK_SHOP_CODE
                LEFT  JOIN  SOF110T S1 WITH (NOLOCK) ON S1.COMP_CODE      = A.COMP_CODE
                                                    AND S1.OUT_DIV_CODE   = A.DIV_CODE
                                                    AND S1.ORDER_NUM      = A.SO_NUM
                                                    AND S1.SER_NO         = A.SO_SEQ
				LEFT  JOIN SOF100T S2 WITH(NOLOCK)   ON S2.COMP_CODE   = S1.COMP_CODE
													AND S2.DIV_CODE    = S1.DIV_CODE
													AND S2.ORDER_NUM   = S1.ORDER_NUM
                LEFT  JOIN  TEA110T T1 WITH (NOLOCK) ON T1.COMP_CODE      = B.COMP_CODE
                                                    AND T1.DIV_CODE       = B.DIV_CODE
                                                    AND T1.SO_SER_NO      = B.ORDER_NUM
                                                    AND T1.SO_SER         = B.SEQ

				LEFT JOIN EQU210T R  WITH(NOLOCK) ON R.COMP_CODE = A.COMP_CODE
												 AND R.DIV_CODE = A.DIV_CODE
												 AND R.ITEM_CODE = A.ITEM_CODE
				LEFT JOIN EQU200T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
												 AND R1.DIV_CODE = A.DIV_CODE
												 AND R1.EQU_CODE = CASE WHEN ISNULL(A.MOLD_CODE, '') = '' THEN R.EQU_CODE ELSE 	A.MOLD_CODE	END
												 AND R1.EQU_CODE_TYPE = '1'
				LEFT JOIN EQU200T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
												 AND R2.DIV_CODE = A.DIV_CODE
												 AND R2.EQU_CODE = A.EQUIP_CODE
												 AND R2.EQU_CODE_TYPE = '2'
												 
				LEFT JOIN BCM100T R3 WITH(NOLOCK) ON R3.COMP_CODE = S2.COMP_CODE
												 AND R3.CUSTOM_CODE = S2.CUSTOM_CODE
				LEFT JOIN BPR200T R4 WITH(NOLOCK) ON R4.COMP_CODE = S1.COMP_CODE
												 AND R4.DIV_CODE = S1.DIV_CODE
												 AND R4.ITEM_CODE = S1.ITEM_CODE
				LEFT JOIN BSA100T R5 WITH(NOLOCK) ON R5.COMP_CODE = A.COMP_CODE
												 AND R5.MAIN_CODE = 'P001'
												 AND R5.SUB_CODE = (CASE WHEN A.WORK_END_YN != 'Y'
														                 THEN CASE WHEN D.CONTROL_STATUS = '9' THEN '9'
														                           ELSE '3'
														                      END
														                 ELSE '8'
														            END)
				--20200116 상태값 조회조건 적용하기 위해 추가
          		LEFT JOIN BSA100T M3 WITH(NOLOCK) ON M3.COMP_CODE = A.COMP_CODE
          										 AND M3.MAIN_CODE = 'P001'
          										 AND M3.SUB_CODE = A.WKORD_STATUS

				LEFT JOIN EQU220T R6 WITH(NOLOCK) ON R6.COMP_CODE = A.COMP_CODE
												 AND R6.DIV_CODE = A.DIV_CODE
												 AND R6.CORE_CODE = CASE WHEN ISNULL(A.MOLD_CODE, '') = '' THEN R.EQU_CODE ELSE 	A.MOLD_CODE	END
       WHERE   A.COMP_CODE         = @COMP_CODE
        AND     A.DIV_CODE          = @DIV_CODE
        AND     A.WORK_SHOP_CODE    = @WORK_SHOP_CODE
        <if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE_FR)">
			AND A.PRODT_START_DATE >= #{PRODT_START_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE_TO)">
			AND A.PRODT_START_DATE &lt;= #{PRODT_START_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PROG_WORK_CODE)">
			AND A.PROG_WORK_CODE LIKE #{PROG_WORK_CODE}+'%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(WORK_END_YN)">
			AND     A.WORK_END_YN    LIKE #{WORK_END_YN}+'%'
			<if test="WORK_END_YN == &quot;N&quot;">
				<if test="CONTROL_STATUS != '9'">
					AND     ISNULL(D.CONTROL_STATUS, '3') != '9'
				</if>
				<if test="CONTROL_STATUS == '9'">
					AND     ISNULL(D.CONTROL_STATUS, '3') LIKE #{CONTROL_STATUS}+'%'
				</if>
			</if>
		</if>
		<if test="@foren.Ognl@isNotEmpty(WKORD_NUM_FR)">
			AND      A.WKORD_NUM       >= #{WKORD_NUM_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WKORD_NUM_TO)">
			AND     A.WKORD_NUM        &lt;= #{WKORD_NUM_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
			AND     A.ITEM_CODE        LIKE  #{ITEM_CODE}+'%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_NUM_FR)">
			AND     B.ORDER_NUM           >= #{ORDER_NUM_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_NUM_TO)">
			AND     B.ORDER_NUM           &lt;= #{ORDER_NUM_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(EQU_MACH_CODE)">
			AND     A.EQUIP_CODE        LIKE  #{EQU_MACH_CODE}+'%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(STATUS_CODE)">
			--20200116 상태값 조회조건 적용하기 위해 추가
			AND M3.SUB_CODE = #{STATUS_CODE}
		</if>
        ORDER BY A.PROG_WORK_CODE, A.WKORD_NUM, A.ITEM_CODE, A.PRODT_START_DATE

        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END
</select>
<select id="s_pmp170ukrv_shServiceImpl.selectList" parameterType="Map" resultType="rMap">
	/* s_pmp170ukrv_shServiceImpl.selectList */

	BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON

        DECLARE             @COMP_CODE              NVARCHAR(08)             --(필수) 법인코드
                          , @DIV_CODE               NVARCHAR(08)             --(필수) 사업장
                          , @WORK_SHOP_CODE         NVARCHAR(10)             --(필수) 작업장

                          , @USER_ID                NVARCHAR(100)             --(필수) 사용자 ID

        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @DIV_CODE       = #{DIV_CODE}
        SET @WORK_SHOP_CODE = #{WORK_SHOP_CODE}

        SET @USER_ID        = #{S_USER_ID}

    -- 명칭 조회 유형 설정 ------------------------------------------------------------------------------------
        DECLARE @RefItem            NVARCHAR(01)

        SELECT TOP 1 @RefItem = REF_ITEM
        FROM   BSA300T WITH (NOLOCK)
        WHERE  USER_ID = @USER_ID

        SET @RefItem = ISNULL(@RefItem, '0')

    -- 날짜 포맷 유형 설정 ------------------------------------------------------------------------------------
        DECLARE @DateFormat             NVARCHAR(10)

        SELECT TOP 1 @DateFormat = CODE_NAME
        FROM   BSA100T WITH (NOLOCK)
        WHERE  COMP_CODE = @COMP_CODE
        AND    MAIN_CODE = 'B044'
        AND    REF_CODE1 = 'Y'

        SET @DateFormat = ISNULL(@DateFormat, 'YYYY-MM-DD')
    -------------------------------------------------------------------------------------------------------------

        SELECT  CASE WHEN A.WORK_END_YN != 'Y'
                     THEN CASE WHEN D.CONTROL_STATUS = '9' THEN '9'
                               ELSE '3'
                          END
                     ELSE '8'
                END                                                                 AS WORK_END_YN
              , A.PROG_WORK_CODE                                                    AS PROG_WORK_CODE
              , D1.PROG_WORK_NAME                                                   AS PROG_WORK_NAME
              , A.WKORD_NUM                                                         AS WKORD_NUM
              , A.ITEM_CODE                                                         AS ITEM_CODE
              , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                     WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                     WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                     ELSE C1.ITEM_NAME
                END                                                                 AS ITEM_NAME
              , C1.ITEM_NAME1
              , C1.SPEC                                                             AS SPEC
              , C1.STOCK_UNIT                                                       AS STOCK_UNIT
              , CONVERT(NVARCHAR(10),
                REPLACE(
                REPLACE(
                REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_START_DATE, 1, 4))
                                   , 'MM',   SUBSTRING(A.PRODT_START_DATE, 5, 2))
                                   , 'DD',   SUBSTRING(A.PRODT_START_DATE, 7, 2)))  AS PRODT_START_DATE
              , CONVERT(NVARCHAR(10),
                REPLACE(
                REPLACE(
                REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PRODT_END_DATE, 1, 4))
                                   , 'MM',   SUBSTRING(A.PRODT_END_DATE, 5, 2))
                                   , 'DD',   SUBSTRING(A.PRODT_END_DATE, 7, 2)))    AS PRODT_END_DATE
              , ISNULL(A.WKORD_Q, 0.0)                                              AS WKORD_Q
              , ISNULL(A.PRODT_Q, 0.0)                                              AS PRODT_Q
              , A.REMARK                                                            AS REMARK1
              , A.PROJECT_NO                                                        AS PROJECT_NO
              , A.PJT_CODE                                                          AS PJT_CODE
              , A.SO_NUM                                                         AS ORDER_NUM
              , CASE WHEN B.PLAN_TYPE = 'T' THEN ISNULL(T1.QTY, 0.0) * ISNULL(T1.TRANS_RATE, 0.0)
                     ELSE ISNULL(S1.ORDER_Q, 0.0)
                END                                                                 AS ORDER_Q
              , CASE WHEN B.PLAN_TYPE = 'T' THEN CONVERT(NVARCHAR(10),
                                                 REPLACE(
                                                 REPLACE(
                                                 REPLACE(@DateFormat, 'YYYY', SUBSTRING(T1.DELIVERY_DATE, 1, 4))
                                                                    , 'MM',   SUBSTRING(T1.DELIVERY_DATE, 5, 2))
                                                                    , 'DD',   SUBSTRING(T1.DELIVERY_DATE, 7, 2)))
                     ELSE CONVERT(NVARCHAR(10),
                          REPLACE(
                          REPLACE(
                          REPLACE(@DateFormat, 'YYYY', SUBSTRING(S1.DVRY_DATE, 1, 4))
                                             , 'MM',   SUBSTRING(S1.DVRY_DATE, 5, 2))
                                             , 'DD',   SUBSTRING(S1.DVRY_DATE, 7, 2)))
                END                                                                 AS DVRY_DATE
              , A.LOT_NO                                                            AS LOT_NO
              , B.REMARK                                                            AS REMARK2
              , A.WORK_SHOP_CODE                                                    AS WORK_SHOP_CODE
              , D2.TREE_NAME                                                        AS WORK_SHOP_NAME
              
              ,CASE WHEN ISNULL(A.MOLD_CODE, '') = '' THEN R.EQU_CODE ELSE 	A.MOLD_CODE	END AS MOLD_CODE	--금형 or 코어
              ,CASE WHEN R6.REF_CODE1 = 'Y' THEN R5.CORE_NAME ELSE R1.EQU_NAME END AS MOLD_NAME 	--금형 or 코어
              --,R1.EQU_NAME AS MOLD_NAME
              
			  ,A.EQUIP_CODE			--설비
			  ,R2.EQU_NAME AS EQUIP_NAME
			  ,A.DIV_CODE

			 ,R3.CUSTOM_NAME AS SOF_CUSTOM_NAME
			 ,R4.ITEM_NAME AS SOF_ITEM_NAME
          , ISNULL(M3.SUB_CODE, '')          AS STATUS_CODE

        FROM                PMP100T A  WITH (NOLOCK)
                LEFT  JOIN  PPL100T B  WITH (NOLOCK) ON  B.COMP_CODE      = A.COMP_CODE
                                                    --20200120 주석처리
                                                    --AND  B.DIV_CODE       = A.DIV_CODE
                                                    AND  B.WK_PLAN_NUM    = A.WK_PLAN_NUM
                LEFT  JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
                                                    AND C1.ITEM_CODE      = A.ITEM_CODE
				LEFT  JOIN (
							SELECT COMP_CODE,DIV_CODE, PROG_WORK_CODE, WKORD_NUM, SUM(WORK_Q) AS WORK_Q, SUM(PASS_Q) AS PASS_Q, SUM(GOOD_WORK_Q) AS GOOD_WORK_Q, SUM(BAD_WORK_Q) AS BAD_WORK_Q
									, MAX(CONTROL_STATUS) AS CONTROL_STATUS
							FROM PMR100T
							GROUP BY COMP_CODE,DIV_CODE, PROG_WORK_CODE, WKORD_NUM
            				) D 					 ON D.COMP_CODE      = A.COMP_CODE
                                                    AND D.DIV_CODE       = A.DIV_CODE
                                                    AND D.WKORD_NUM      = A.WKORD_NUM
                                                    AND D.PROG_WORK_CODE=A.PROG_WORK_CODE
                LEFT  JOIN  PBS200T D1 WITH (NOLOCK) ON D1.COMP_CODE      = A.COMP_CODE
                                                    AND D1.DIV_CODE       = A.DIV_CODE
                                                    AND D1.WORK_SHOP_CODE = A.WORK_SHOP_CODE
                                                    AND D1.PROG_WORK_CODE = A.PROG_WORK_CODE
                LEFT  JOIN  BSA230T D2 WITH (NOLOCK) ON D2.COMP_CODE      = A.COMP_CODE
                                                    AND D2.TYPE_LEVEL     = A.DIV_CODE
                                                    AND D2.TREE_CODE      = A.WORK_SHOP_CODE
              LEFT  JOIN  SOF110T S1 WITH (NOLOCK) ON S1.COMP_CODE      = A.COMP_CODE
                                                    --AND S1.OUT_DIV_CODE   = A.DIV_CODE
                                                    AND S1.ORDER_NUM      = A.SO_NUM
                                                    AND S1.SER_NO         = A.SO_SEQ
				LEFT  JOIN SOF100T S2 WITH(NOLOCK)   ON S2.COMP_CODE   = S1.COMP_CODE
													AND S2.DIV_CODE    = S1.DIV_CODE
													AND S2.ORDER_NUM   = S1.ORDER_NUM
                LEFT  JOIN  TEA110T T1 WITH (NOLOCK) ON T1.COMP_CODE      = B.COMP_CODE
                                                    AND T1.DIV_CODE       = B.DIV_CODE
                                                    AND T1.SO_SER_NO      = B.ORDER_NUM
                                                    AND T1.SO_SER         = B.SEQ

				LEFT JOIN EQU210T R WITH(NOLOCK) ON R.COMP_CODE = A.COMP_CODE
											   AND R.DIV_CODE = A.DIV_CODE
											   AND R.ITEM_CODE = A.ITEM_CODE
											   AND R.EQU_CODE = (SELECT TOP 1 EQU_CODE
								   							 FROM EQU210T 
								   							WHERE COMP_CODE = A.COMP_CODE
															  AND DIV_CODE = A.DIV_CODE
															  AND ITEM_CODE = A.ITEM_CODE
															  ORDER BY UPDATE_DB_TIME DESC
															   )		  			
												 
				LEFT JOIN EQU200T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
												 AND R1.DIV_CODE = A.DIV_CODE
												 AND R1.EQU_CODE = CASE WHEN ISNULL(A.MOLD_CODE, '') = '' THEN R.EQU_CODE ELSE 	A.MOLD_CODE	END
												 AND R1.EQU_CODE_TYPE = '1'
				LEFT JOIN EQU200T R2 WITH(NOLOCK) ON R2.COMP_CODE = A.COMP_CODE
												 AND R2.DIV_CODE = A.DIV_CODE
												 AND R2.EQU_CODE = A.EQUIP_CODE
												 AND R2.EQU_CODE_TYPE = '2'

				LEFT JOIN BCM100T R3 WITH(NOLOCK) ON R3.COMP_CODE = S2.COMP_CODE
												 AND R3.CUSTOM_CODE = S2.CUSTOM_CODE
				LEFT JOIN BPR200T R4 WITH(NOLOCK) ON R4.COMP_CODE = S1.COMP_CODE
												 AND R4.DIV_CODE = S1.DIV_CODE
												 AND R4.ITEM_CODE = S1.ITEM_CODE

          		LEFT JOIN BSA100T M3 WITH(NOLOCK) ON M3.COMP_CODE = A.COMP_CODE
          										 AND M3.MAIN_CODE = 'P001'
          										 AND M3.SUB_CODE = A.WKORD_STATUS
          										 
				LEFT JOIN EQU220T R5 WITH(NOLOCK) ON R5.COMP_CODE = A.COMP_CODE
												 AND R5.DIV_CODE = A.DIV_CODE
												 AND R5.CORE_CODE = CASE WHEN ISNULL(A.MOLD_CODE, '') = '' THEN R.EQU_CODE ELSE 	A.MOLD_CODE	END
												 
				LEFT JOIN BSA100T R6 WITH(NOLOCK) ON R6.COMP_CODE = A.COMP_CODE
												 AND R6.MAIN_CODE = 'I811'
												 AND R6.SUB_CODE = '1'
        WHERE   A.COMP_CODE         = @COMP_CODE
        AND     A.DIV_CODE          = @DIV_CODE
        AND     A.WORK_SHOP_CODE    = @WORK_SHOP_CODE
        <if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE_FR)">
			AND A.PRODT_START_DATE >= #{PRODT_START_DATE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRODT_START_DATE_TO)">
			AND A.PRODT_START_DATE &lt;= #{PRODT_START_DATE_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PROG_WORK_CODE)">
			AND A.PROG_WORK_CODE LIKE #{PROG_WORK_CODE}+'%'
		</if>

		<if test="@foren.Ognl@isNotEmpty(STATUS_CODE)">
			<choose>
				<when test="STATUS_CODE == 2">
			      	AND M3.SUB_CODE IN ('2', '3')
			    </when>
			    <otherwise>
					--20200116 상태값 조회조건 적용하기 위해 추가
					AND M3.SUB_CODE = #{STATUS_CODE}
			    </otherwise>
	  		</choose>
		</if>

		<if test="@foren.Ognl@isNotEmpty(WKORD_NUM_FR)">
			AND      A.WKORD_NUM       >= #{WKORD_NUM_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(WKORD_NUM_TO)">
			AND     A.WKORD_NUM        &lt;= #{WKORD_NUM_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
			AND     A.ITEM_CODE        LIKE  #{ITEM_CODE}+'%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_NUM_FR)">
			AND     B.ORDER_NUM           >= #{ORDER_NUM_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_NUM_TO)">
			AND     B.ORDER_NUM           &lt;= #{ORDER_NUM_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(EQU_MACH_CODE)">
			AND     A.EQUIP_CODE        LIKE  #{EQU_MACH_CODE}+'%'
		</if>

        ORDER BY A.PROG_WORK_CODE, A.WKORD_NUM, A.ITEM_CODE, A.PRODT_START_DATE

        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END
</select>

<insert id="s_pmp170ukrv_shServiceImpl.insertDetail" parameterType="Map">

</insert>

<update id="s_pmp170ukrv_shServiceImpl.updateDetail" parameterType="Map">
	BEGIN
	
<if test="@foren.Ognl@isNotEmpty(MOLD_CODE)">
	DECLARE
	@LastSeq NUMERIC	-- 최종순번
	
	SET @LastSeq = 0
	
	SELECT @LastSeq = MAX(SEQ)
	FROM EQU210T WITH(NOLOCK)
	WHERE COMP_CODE = #{S_COMP_CODE}
	  AND DIV_CODE  = #{DIV_CODE}
	  AND EQU_CODE  = #{MOLD_CODE} --금형번호

    SET @LastSeq = CASE WHEN @LastSeq = 0 OR @LastSeq is null  THEN 1 ELSE @LastSeq + 1 END

	IF NOT EXISTS (
		SELECT
			TOP 1 COMP_CODE
		FROM EQU210T WITH(NOLOCK)
		WHERE COMP_CODE = #{S_COMP_CODE}
		  AND DIV_CODE  = #{DIV_CODE}
		  AND EQU_CODE  = #{MOLD_CODE} --금형번호
		  AND ITEM_CODE = #{ITEM_CODE}
    )
	BEGIN
		INSERT INTO EQU210T(
			 COMP_CODE
			,DIV_CODE
			,EQU_CODE
			,ITEM_CODE
			,SEQ
			,CUSTOM_CODE
			,INSERT_DB_USER
			,INSERT_DB_TIME
			,UPDATE_DB_USER
			,UPDATE_DB_TIME
		)VALUES(
			 #{S_COMP_CODE}
			,#{DIV_CODE}
			,#{MOLD_CODE}
			,#{ITEM_CODE}
			,@LastSeq
			,#{CUSTOM_CODE}
			,#{S_USER_ID}
			,GETDATE()
			,#{S_USER_ID}
			,GETDATE()

		)

		END
</if>		
		
		

		UPDATE PMP100T
		   SET PRODT_START_DATE = #{PRODT_START_DATE}
		       ,PRODT_END_DATE = #{PRODT_END_DATE}
		       ,MOLD_CODE      = #{MOLD_CODE}
		       ,EQUIP_CODE     = #{EQUIP_CODE}
		       ,UPDATE_DB_USER = #{S_USER_ID}
		       ,UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND WKORD_NUM 	= #{WKORD_NUM}
		   AND PROG_WORK_CODE = #{PROG_WORK_CODE}
	END
</update>

<delete id="s_pmp170ukrv_shServiceImpl.deleteDetail" parameterType="Map">

</delete>

<update id="s_pmp170ukrv_shServiceImpl.updateStatus" parameterType="rMap">	/* 저장 */
	--UPmp40Kr.CPmp180UKr[fnPmp180Save] Query1

	BEGIN
	    SET NOCOUNT ON

	--  입력 변수
	    DECLARE @COMP_CODE              NVARCHAR(16)            -- 회사코드
	          , @DIV_CODE               NVARCHAR(08)            -- 사업장코드
	          , @WKORD_NUM              NVARCHAR(20)            -- 작업지시 번호
	          , @ITEM_CODE              NVARCHAR(20)            -- 품목코드
	          , @PROC_TYPE              NVARCHAR(10)            -- 저장구분     (CLOSE:마감/ ORDER:공정외주)
	          , @STATUS_CODE            NVARCHAR(01)            -- 마감여부     (N:진행/ Y:마감)
	          , @OUT_ORDER_YN           NVARCHAR(01)            -- 공정외주여부 (Y:예/ N:아니오)
	          , @USER_ID                NVARCHAR(100)            -- 사용자 ID    (시스템 코드)

	--  구매오더를 위한 변수
	    DECLARE @CustomCode             NVARCHAR(08)            -- 주거래처
	          , @OrderReqNum            NVARCHAR(20)            -- 발주예정정보

	--  일반 변수
	    DECLARE @ErrorCode              NVARCHAR(20)            -- 에러코드
	          , @ErrorDesc              NVARCHAR(1000)          -- 에러메세지

	    SET @COMP_CODE      = #{S_COMP_CODE}
	    SET @DIV_CODE       = #{DIV_CODE}
	    SET @WKORD_NUM      = #{WKORD_NUM}
	    SET @ITEM_CODE      = #{ITEM_CODE}
	    SET @PROC_TYPE      = #{PROC_TYPE}
	    SET @STATUS_CODE    = #{STATUS_CODE}
	    SET @OUT_ORDER_YN   = #{OUT_ORDER_YN}
	    SET @USER_ID        = #{S_USER_ID}

	    SET @ErrorCode  = ''
	    SET @ErrorDesc  = ''

	------------------------------------------------------------------------------------------------------
	--  1. 진행중인 작업지시의 마감처리
	    IF @STATUS_CODE = '2'	--데이터 상태가 진행일때
	    BEGIN

	--      1-1. 진행중인 출고요청에 대한 마감 처리
	        UPDATE  PMP300T
	        SET     CONTROL_STATUS = '8'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
	        FROM              PMP300T A WITH (NOLOCK)
	                LEFT JOIN (SELECT OUTSTOCK_NUM
	                             FROM PMP200T WITH (NOLOCK)
	                            WHERE COMP_CODE      = @COMP_CODE
	                              AND DIV_CODE       = @DIV_CODE
	                              AND WKORD_NUM      = @WKORD_NUM
	                           UNION
	                           SELECT OUTSTOCK_NUM
	                             FROM PMP300T WITH (NOLOCK)
	                            WHERE COMP_CODE      = @COMP_CODE
	                              AND DIV_CODE       = @DIV_CODE
	                              AND REF_WKORD_NUM  = @WKORD_NUM
	                          ) B  ON B.OUTSTOCK_NUM = A.OUTSTOCK_NUM
	                WHERE A.COMP_CODE      = @COMP_CODE
	                  AND A.DIV_CODE       = @DIV_CODE
	                  AND A.CONTROL_STATUS &lt; '8'
	                  AND B.OUTSTOCK_NUM  IS NOT NULL

	--      1-2. 진행중인 작업지시 마감 처리
	        UPDATE  PMP100T
	        SET     WORK_END_YN  = 'Y'
	              , WKORD_STATUS = '8'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
	        WHERE   COMP_CODE    = @COMP_CODE
	        AND     DIV_CODE     = @DIV_CODE
	        AND     WKORD_NUM    = @WKORD_NUM
	    END

	------------------------------------------------------------------------------------------------------
	--  완료처리된 작업지시의 진행 처리
	    IF @STATUS_CODE = '9'	--데이터 상태가 완료일때
	    BEGIN

	--  완료처리된 출고요청에 대한 진행 처리
	        UPDATE  PMP300T
	        SET     CONTROL_STATUS  = '2'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
	        FROM              PMP300T A WITH (NOLOCK)
	                LEFT JOIN (SELECT OUTSTOCK_NUM
	                             FROM PMP200T WITH (NOLOCK)
	                            WHERE COMP_CODE      = @COMP_CODE
	                              AND DIV_CODE       = @DIV_CODE
	                              AND WKORD_NUM      = @WKORD_NUM
	                           UNION
	                           SELECT OUTSTOCK_NUM
	                             FROM PMP300T WITH (NOLOCK)
	                            WHERE COMP_CODE      = @COMP_CODE
	                              AND DIV_CODE       = @DIV_CODE
	                              AND REF_WKORD_NUM  = @WKORD_NUM
	                          ) B  ON B.OUTSTOCK_NUM = A.OUTSTOCK_NUM
	        WHERE   A.COMP_CODE      = @COMP_CODE
	        AND     A.DIV_CODE       = @DIV_CODE
	        AND     A.CONTROL_STATUS = '9'
	        AND     B.OUTSTOCK_NUM  IS NOT NULL

	--  완료처리된 작업지시 진행 처리
	        UPDATE  PMP100T
	        SET     WORK_END_YN  = 'N'
	              , WKORD_STATUS = '2'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
	        WHERE   COMP_CODE    = @COMP_CODE
	        AND     DIV_CODE     = @DIV_CODE
	        AND     WKORD_NUM    = @WKORD_NUM

			UPDATE PMR100T
			  SET  CONTROL_STATUS = '2'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
			WHERE  COMP_CODE = @COMP_CODE
			  AND  DIV_CODE = @DIV_CODE
			  AND  WKORD_NUM = @WKORD_NUM


	    END
	------------------------------------------------------------------------------------------------------
	--  2. 마감처리된 작업지시의 진행 처리
	    IF @STATUS_CODE = '8'	--데이터 상태가 마감일때
	    BEGIN

	--      2-1. 마감처리된 출고요청에 대한 진행 처리
	        UPDATE  PMP300T
	        SET     CONTROL_STATUS  = '2'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
	        FROM              PMP300T A WITH (NOLOCK)
	                LEFT JOIN (SELECT OUTSTOCK_NUM
	                             FROM PMP200T WITH (NOLOCK)
	                            WHERE COMP_CODE      = @COMP_CODE
	                              AND DIV_CODE       = @DIV_CODE
	                              AND WKORD_NUM      = @WKORD_NUM
	                           UNION
	                           SELECT OUTSTOCK_NUM
	                             FROM PMP300T WITH (NOLOCK)
	                            WHERE COMP_CODE      = @COMP_CODE
	                              AND DIV_CODE       = @DIV_CODE
	                              AND REF_WKORD_NUM  = @WKORD_NUM
	                          ) B  ON B.OUTSTOCK_NUM = A.OUTSTOCK_NUM
	        WHERE   A.COMP_CODE      = @COMP_CODE
	        AND     A.DIV_CODE       = @DIV_CODE
	        AND     A.CONTROL_STATUS = '8'
	        AND     B.OUTSTOCK_NUM  IS NOT NULL

	--      2-2. 마감처리된 작업지시 진행 처리
	        UPDATE  PMP100T
	        SET     WORK_END_YN  = 'N'
	              , WKORD_STATUS = '2'
	        		,UPDATE_DB_TIME = GETDATE()
	        		,UPDATE_DB_USER = #{S_USER_ID}
	        WHERE   COMP_CODE    = @COMP_CODE
	        AND     DIV_CODE     = @DIV_CODE
	        AND     WKORD_NUM    = @WKORD_NUM
	    END

	------------------------------------------------------------------------------------------------------
	--  3. 공정외주 처리로직
	    IF @PROC_TYPE = 'ORDER'
	    BEGIN

	--      3-1. 공정외주 등록
	        IF @OUT_ORDER_YN = 'N'
	        BEGIN

	--          3-1-1. 해당품목의 주거래처 조회
	            SELECT  TOP 1
	                    @CustomCode = ISNULL(CUSTOM_CODE, '')
	            FROM    BPR200T WITH (NOLOCK)
	            WHERE   COMP_CODE   = @COMP_CODE
	            AND     DIV_CODE    = @DIV_CODE
	            AND     ITEM_CODE   = @ITEM_CODE

	--          3-1-2. 발주예정번호 채번
	            EXEC SP_GetAutoNumComp @COMP_CODE, @DIV_CODE, 'MRP400T', 'M', '', '1', @OrderReqNum OUTPUT  -- 일채번

	--          3-1-3. 발주예정정보 생성
	            INSERT  INTO    MRP400T
	            (       COMP_CODE               -- 법인코드
	                  , DIV_CODE                -- 사업장
	                  , ORDER_REQ_NUM           -- 발주예정번호
	                  , MRP_CONTROL_NUM         -- MRP 관리번호
	                  , ITEM_CODE               -- 품목코드
	                  , BASIS_DATE              -- 투입일자
	                  , CREATE_DATE             -- 요청일자
	                  , SUPPLY_TYPE             -- 조달구분  (B014) - 1:구매, 2:사내가공, 3:외주
	                  , DOM_FORIGN              -- 국내외구분(B019) - 1:국내, 2:해외, 3:국내외
	                  , REQ_PLAN_Q              -- 요청량
	                  , ORDER_PLAN_Q            -- 발주예정량(재고단위)
	                  , ORDER_PLAN_DATE         -- 발주예정일
	                  , ORDER_YN                -- 발주예정반영여부 (M003) - N:미반영, X:불필요, Y:반영
	                  , CUSTOM_CODE             -- 거래처코드
	                  , MRP_YN                  -- MRP_YN
	                  , WK_PLAN_NUM             -- 생산계획번호
	                  , WKORD_NUM               -- 작업지시번호
	                  , PROJECT_NO              -- 관리번호
	                  , REMARK                  -- 비고
	                  , LOT_NO                  -- LOT_NO
	            )
	            SELECT  COMP_CODE
	                  , DIV_CODE
	                  , @OrderReqNum            AS ORDER_REQ_NUM
	                  , '*'                     AS MRP_CONTROL_NUM
	                  , ITEM_CODE
	                  , PRODT_END_DATE          AS BASIS_DATE
	                  , PRODT_START_DATE        AS CREATE_DATE
	                  , '3'                     AS SUPPLY_TYPE
	                  , '1'                     AS DOM_FORIGN
	                  , WKORD_Q                 AS REQ_PLAN_Q
	                  , WKORD_Q                 AS ORDER_PLAN_Q
	                  , PRODT_START_DATE        AS ORDER_PLAN_DATE
	                  , 'N'                     AS ORDER_YN
	                  , @CustomCode             AS CUSTOM_CODE
	                  , 'Y'                     AS MRP_YN
	                  , WK_PLAN_NUM
	                  , WKORD_NUM
	                  , PROJECT_NO
	                  , REMARK
	                  , LOT_NO
	            FROM    PMP100TV1 WITH (NOLOCK)
	            WHERE   COMP_CODE   = @COMP_CODE
	            AND     DIV_CODE    = @DIV_CODE
	            AND     WKORD_NUM   = @WKORD_NUM

	        END

	--      3-2. 공정외주 취소
	        IF @OUT_ORDER_YN = 'Y'
	        BEGIN

	            SELECT  TOP 1 @ErrorDesc = uniLITE.fnGetErrorMsg(54524, @WKORD_NUM)
	            FROM    MRP400T WITH (NOLOCK)
	            WHERE   COMP_CODE   = @COMP_CODE
	            AND     DIV_CODE    = @DIV_CODE
	            AND     WKORD_NUM   = @WKORD_NUM
	            AND     ORDER_YN    = 'Y'
	            AND     SUPPLY_TYPE != '2'

	            IF @@ROWCOUNT &gt;= 1
	                BEGIN
	                    SET @ErrorCode = '54524'
	                    GOTO ERROR_HANDLER
	                END

	--          3-2-2. 구매오더 삭제
	            DELETE  FROM    MRP400T
	            WHERE   COMP_CODE   = @COMP_CODE
	            AND     DIV_CODE    = @DIV_CODE
	            AND     WKORD_NUM   = @WKORD_NUM
	            AND     ORDER_YN    = 'N'

	        END

	    END

	------------------------------------------------------------------------------------------------------
	-- 4. Error Handler 처리
	ERROR_HANDLER:
	    SELECT TOP 1 ISNULL(@ErrorCode, '') ERROR_CODE, ISNULL(@ErrorDesc, '') ERROR_DESC

	END
	</update>
</mapper>