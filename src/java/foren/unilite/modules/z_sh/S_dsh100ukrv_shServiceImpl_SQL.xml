<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "s_dsh100ukrv_shService">
	
<select id="s_dsh100ukrv_shService.getEquipCodeDashMenu" parameterType="Map" resultType="rMap">
	/* s_dsh100ukrv_shService.getEquipCodeDashMenu */

SELECT 
	A.COMP_CODE
	,A.DIV_CODE
	,A.EQU_CODE	
	,A.EQU_NAME
	,B.OP_MODE
FROM  EQU200T A WITH(NOLOCK)

LEFT JOIN (
	SELECT 
		A.COMP_CODE
		, A.DIV_CODE
		, A.SENSOR_CODE
		, A.INSERT_DB_TIME
		, B.OP_MODE
	  FROM(
			SELECT 
				A.COMP_CODE
				, A.DIV_CODE
				, A.SENSOR_CODE
				, MAX(A.INSERT_DB_TIME) AS INSERT_DB_TIME
			  FROM EQU300T A WITH(NOLOCK)
			 WHERE A.COMP_CODE = #{S_COMP_CODE}
			   AND A.DIV_CODE = #{S_DIV_CODE}
			   AND CONVERT(VARCHAR, INSERT_DB_TIME, 112) = CONVERT(VARCHAR, GETDATE(), 112)
		  GROUP BY A.COMP_CODE, A.DIV_CODE, A.SENSOR_CODE
		) A
	INNER JOIN (
			SELECT 
				A.COMP_CODE
				, A.DIV_CODE
				, A.SENSOR_CODE
				, A.INSERT_DB_TIME
				, A.OP_MODE
			 FROM EQU300T A WITH(NOLOCK)
			WHERE A.COMP_CODE = #{S_COMP_CODE}
			  AND A.DIV_CODE = #{S_DIV_CODE}
			  AND CONVERT(VARCHAR, INSERT_DB_TIME, 112) = CONVERT(VARCHAR, GETDATE(), 112)
	) B ON B.COMP_CODE = A.COMP_CODE
	   AND B.DIV_CODE = A.DIV_CODE
	   AND B.SENSOR_CODE = A.SENSOR_CODE
	   AND B.INSERT_DB_TIME = A.INSERT_DB_TIME

) B ON B.COMP_CODE = A.COMP_CODE
   AND B.DIV_CODE = A.DIV_CODE
   AND B.SENSOR_CODE = A.EQU_CODE
 
WHERE A.COMP_CODE = #{S_COMP_CODE}
  AND A.DIV_CODE = #{S_DIV_CODE}
  AND A.EQU_CODE_TYPE = '2'	--설비
    
</select>		

<select id="s_dsh100ukrv_shService.getEquipInfo" parameterType="Map" resultType="rMap">	
/* s_dsh100ukrv_shService.getEquipInfo */
SELECT
	A.COMP_CODE
	,A.DIV_CODE
	,A.EQUIP_CODE
	,A.WKORD_NUM
	,A.MOLD_CODE
	, ISNULL(B.CAVITY_Q,0) AS CAVITY_Q
	, ISNULL(C.ACT_SHOT_CNT,0) AS ACT_SHOT_CNT	--사이클 타임
	, FORMAT(ISNULL(B.CAVITY_Q,0) * ISNULL(C.ACT_SHOT_CNT,0), N'#,0') AS PRODT_Q	--작업수량
	, ISNULL(C.ACT_CYCLE_TIME,0) AS ACT_CYCLE_TIME
	,R1.ITEM_NAME							--부품명
	,C.LAST_SEQ
	, FORMAT(ISNULL(D.WKORD_Q,0), N'#,0') AS WKORD_Q	--목표수량
	,CASE WHEN ISNULL(D.WKORD_Q,0) = 0 THEN 0
	      ELSE FORMAT(ISNULL(B.CAVITY_Q,0) * ISNULL(C.ACT_SHOT_CNT,0) / ISNULL(D.WKORD_Q,0) * 100, N'#,0') 
	 END AS WORK_PROGRESS	--진행율
	 
 FROM(
	SELECT TOP 1
		COMP_CODE
		, DIV_CODE
		, WKORD_NUM
		,EQUIP_CODE
		,MOLD_CODE
	  FROM PMP160T WITH(NOLOCK)
	 WHERE COMP_CODE =  #{S_COMP_CODE}
	   AND DIV_CODE = #{S_DIV_CODE}
	   AND EQUIP_CODE = #{EQUIP_CODE}
	   AND PRODT_START_DATE &lt;= CONVERT(CHAR(8), GETDATE(), 112)
	ORDER BY COMP_CODE, DIV_CODE, EQUIP_CODE, PRODT_START_DATE DESC, INSERT_DB_TIME DESC
	) A
	LEFT JOIN EQU220T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
									AND B.DIV_CODE = A.DIV_CODE
									AND B.CORE_CODE = A.MOLD_CODE
	LEFT JOIN (
		SELECT TOP 1
			COMP_CODE
			,DIV_CODE
			,SENSOR_CODE
			,ACT_SHOT_CNT
			,ACT_CYCLE_TIME
			,ID AS LAST_SEQ
		FROM EQU300T WITH(NOLOCK)

		WHERE COMP_CODE = #{S_COMP_CODE}
		  AND DIV_CODE = #{S_DIV_CODE}
		  AND CONVERT(VARCHAR, INSERT_DB_TIME, 112) = CONVERT(VARCHAR, GETDATE(), 112)
  
		  AND SENSOR_CODE = #{EQUIP_CODE}

		  AND ID > #{LAST_SEQ}
  
		  ORDER BY INSERT_DB_TIME DESC,ID 
	) C ON C.COMP_CODE = A.COMP_CODE
	   AND C.DIV_CODE = A.DIV_CODE
	   AND C.SENSOR_CODE = A.EQUIP_CODE


	INNER JOIN PMP100T D WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
									AND D.DIV_CODE = A.DIV_CODE
									AND D.WKORD_NUM = A.WKORD_NUM
									AND D.WORK_SHOP_CODE = 'WS100'
									-- AND D.WKORD_STATUS NOT IN ('8','9') 대시보드에서는 작업지시가 완료,마감되도 보이도록 
	LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = D.COMP_CODE
								 AND R1.ITEM_CODE = D.ITEM_CODE	
</select>
	
	
	
	
	
	

<select id="s_dsh100ukrv_shService.getEquipInfo_TEMP" parameterType="Map" resultType="rMap">
	SELECT TOP 1
		A.ACT_SHOT_CNT
		,A.ACT_CYCLE_TIME
		,A.ID AS LAST_SEQ
FROM EQU300T A WITH(NOLOCK)

WHERE A.COMP_CODE = #{S_COMP_CODE}
  AND A.DIV_CODE = #{S_DIV_CODE}
  AND CONVERT(VARCHAR, A.INSERT_DB_TIME, 112) = CONVERT(VARCHAR, GETDATE(), 112)
  
  AND A.SENSOR_CODE = #{EQUIP_CODE}

  AND A.ID > #{LAST_SEQ}
  
  ORDER BY A.INSERT_DB_TIME DESC,A.ID
</select>	



<select id="s_dsh100ukrv_shService.getOperatingStatus" parameterType="Map" resultType="rMap">
	SELECT 
		A.COMP_CODE
		,A.DIV_CODE
		,A.SENSOR_CODE 
		,A.SENSOR_NAME
		--,A.MOLD_CODE
		--,A.OP_MODE
		,COUNT(A.ID) AS CNT_ALL

		,ISNULL((SELECT COUNT(S1.ID) AS CNT 
			  FROM EQU300T S1 WITH(NOLOCK)
			 WHERE S1.COMP_CODE = A.COMP_CODE
			   AND S1.DIV_CODE = A.DIV_CODE
			   AND S1.SENSOR_CODE = A.SENSOR_CODE
			   AND S1.OP_MODE = '8'	--자동
			   AND CONVERT(VARCHAR, S1.INSERT_DB_TIME, 112) = CONVERT(VARCHAR, GETDATE(), 112)
			GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.SENSOR_CODE, S1.SENSOR_NAME, S1.MOLD_CODE, S1.OP_MODE
		),0) AS CNT_8

		,ISNULL((SELECT COUNT(S1.ID) AS CNT 
			  FROM EQU300T S1 WITH(NOLOCK)
			 WHERE S1.COMP_CODE = A.COMP_CODE
			   AND S1.DIV_CODE = A.DIV_CODE
			   AND S1.SENSOR_CODE = A.SENSOR_CODE
			   AND S1.OP_MODE IN ('0','2')	--수동,반자동
			   AND CONVERT(VARCHAR, S1.INSERT_DB_TIME, 112) = CONVERT(VARCHAR, GETDATE(), 112)
			GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.SENSOR_CODE, S1.SENSOR_NAME, S1.MOLD_CODE, S1.OP_MODE
		),0) AS CNT_0_2

		,ISNULL((SELECT COUNT(S1.ID) AS CNT 
			  FROM EQU300T S1 WITH(NOLOCK)
			 WHERE S1.COMP_CODE = A.COMP_CODE
			   AND S1.DIV_CODE = A.DIV_CODE
			   AND S1.SENSOR_CODE = A.SENSOR_CODE
			   AND S1.OP_MODE = '16'	--저속개폐
			   AND CONVERT(VARCHAR, S1.INSERT_DB_TIME, 112) = CONVERT(VARCHAR, GETDATE(), 112)
			GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.SENSOR_CODE, S1.SENSOR_NAME, S1.MOLD_CODE, S1.OP_MODE
		),0) AS CNT_16

		,ISNULL((SELECT COUNT(S1.ID) AS CNT 
			  FROM EQU300T S1 WITH(NOLOCK)
			 WHERE S1.COMP_CODE = A.COMP_CODE
			   AND S1.DIV_CODE = A.DIV_CODE
			   AND S1.SENSOR_CODE = A.SENSOR_CODE
			   AND S1.OP_MODE = '9'	--정지
			   AND CONVERT(VARCHAR, S1.INSERT_DB_TIME, 112) = CONVERT(VARCHAR, GETDATE(), 112)
			GROUP BY S1.COMP_CODE, S1.DIV_CODE, S1.SENSOR_CODE, S1.SENSOR_NAME, S1.MOLD_CODE, S1.OP_MODE
		),0) AS CNT_9

	  FROM EQU300T A WITH(NOLOCK)
	 WHERE A.COMP_CODE = #{S_COMP_CODE}
	   AND A.DIV_CODE = #{S_DIV_CODE}
	   AND A.SENSOR_CODE = #{EQUIP_CODE}
	   AND CONVERT(VARCHAR, INSERT_DB_TIME, 112) = CONVERT(VARCHAR, GETDATE(), 112)

	GROUP BY A.COMP_CODE, A.DIV_CODE, A.SENSOR_CODE, A.SENSOR_NAME--, A.MOLD_CODE--, A.OP_MODE

	
</select>


<select id="s_dsh100ukrv_shService.getOpsearch" parameterType="Map" resultType="rMap">
SELECT 
	A.COMP_CODE
	, A.DIV_CODE
	, A.WKORD_NUM
	, A.EQUIP_CODE
	, A.MOLD_CODE
	, A.PRODT_START_DATE

	, B.SO_NUM	--수주번호
	, A.PRODT_START_TIME	--시작시간
	, (ISNULL(C.CNT,0) + ISNULL(D.CNT,0))*10 AS TOTAL_WORK_TIME	--총작업시간 (현재는 10초 기준이며, EQU300T에 INSERT 되는 초를 기준으로 변경 될수 있음)
	, ISNULL(D.CNT,0)*10	AS PAUSE_WORK_TIME--유실시간
	, ISNULL(C.CNT,0)*10	AS REAL_WORK_TIME	--실작업시간
	, CASE WHEN ((ISNULL(C.CNT,0) + ISNULL(D.CNT,0))*10) = 0 THEN 0
	       ELSE ISNULL(C.CNT,0)*10 / ((ISNULL(C.CNT,0) + ISNULL(D.CNT,0))*10) 
	  END AS WORK_RATE	--가동율
	, ISNULL(B.WKORD_Q,0) AS WKORD_Q	--생산량
	, ISNULL(C.ACT_SHOT_CNT,0) AS ACT_SHOT_CNT	--평균가공시간
	, ISNULL(B.WKORD_Q,0)*ISNULL(C.ACT_SHOT_CNT,0)	AS STANDARD_WORK_TIME--표준작업시간
	, CASE WHEN ISNULL(C.CNT,0)*10 = 0 THEN 0
	       ELSE B.WKORD_Q*C.ACT_SHOT_CNT / ISNULL(C.CNT,0)*10
	  END AS WORK_EF	--작업효율 %
	, R1.ITEM_NAME
  FROM(
	SELECT 
		A.COMP_CODE
		, A.DIV_CODE
		, A.WKORD_NUM
		, A.EQUIP_CODE
		, A.MOLD_CODE
		, A.PRODT_START_DATE
		, MAX(A.PRODT_START_TIME) AS PRODT_START_TIME
	  FROM PMP160T A WITH(NOLOCK)
	 WHERE A.COMP_CODE = #{S_COMP_CODE}
	   AND A.DIV_CODE = #{S_DIV_CODE}
	   AND A.EQUIP_CODE = #{EQUIP_CODE}
	   AND CONVERT(VARCHAR, A.INSERT_DB_TIME, 112) = CONVERT(VARCHAR, GETDATE(), 112)

	GROUP BY A.COMP_CODE, A.DIV_CODE, A.WKORD_NUM, A.EQUIP_CODE, A.MOLD_CODE, A.PRODT_START_DATE
	) A
INNER JOIN PMP100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
								AND B.DIV_CODE = A.DIV_CODE
								AND B.WKORD_NUM = A.WKORD_NUM
								AND B.WORK_SHOP_CODE = 'WS100'
LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = B.COMP_CODE
								 AND R1.ITEM_CODE = B.ITEM_CODE	
--자동,반자동으로 가동된
	LEFT JOIN (

			SELECT 
				COMP_CODE
				, DIV_CODE
				, SENSOR_CODE
				, MOLD_CODE
				,OP_MODE
				,COUNT(ID) AS CNT 
				,MAX(ACT_SHOT_CNT) AS ACT_SHOT_CNT
			  FROM EQU300T WITH(NOLOCK) 
 			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND DIV_CODE = #{S_DIV_CODE}
			   AND SENSOR_CODE = #{EQUIP_CODE}
			   AND OP_MODE IN ('8','2') --자동, 반자동
			   AND CONVERT(VARCHAR, INSERT_DB_TIME, 112) = CONVERT(VARCHAR, GETDATE(), 112)
	
		 GROUP BY COMP_CODE, DIV_CODE, SENSOR_CODE, MOLD_CODE,OP_MODE
	) C ON C.COMP_CODE = A.COMP_CODE
	   AND C.DIV_CODE = A.DIV_CODE
	   AND C.SENSOR_CODE = A.EQUIP_CODE
	   AND C.MOLD_CODE = A.MOLD_CODE

-- 유실된
	LEFT JOIN (
 			SELECT 
				COMP_CODE
				, DIV_CODE
				, SENSOR_CODE
				, MOLD_CODE
				,OP_MODE
				,COUNT(ID) AS CNT 
				,MAX(ACT_SHOT_CNT) AS ACT_SHOT_CNT
			  FROM EQU300T WITH(NOLOCK) 
 			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND DIV_CODE = #{S_DIV_CODE}
			   AND SENSOR_CODE = #{EQUIP_CODE}
			   AND OP_MODE NOT IN ('8','2')
			   AND CONVERT(VARCHAR, INSERT_DB_TIME, 112) = CONVERT(VARCHAR, GETDATE(), 112)

		 GROUP BY COMP_CODE, DIV_CODE, SENSOR_CODE, MOLD_CODE,OP_MODE
	) D ON D.COMP_CODE = A.COMP_CODE
	   AND D.DIV_CODE = A.DIV_CODE
	   AND D.SENSOR_CODE = A.EQUIP_CODE
	   AND D.MOLD_CODE = A.MOLD_CODE


</select>







	
	
<select id="s_dsh100ukrv_shService.getTemperature" parameterType="Map" resultType="rMap">
	
	
 <if test="INIT_CHART_DATA == &quot;Y&quot;"> 
 
SELECT * FROM(
	SELECT TOP 300
		--CONVERT(VARCHAR, A.INSERT_DB_TIME, 24) AS INSERT_DB_TIME
		A.INSERT_DB_TIME
		,A.HUM01
		,A.TEM01
		,A.ID AS LAST_SEQ
		,A.SENSOR_CODE
		,A.SENSOR_NAME
	FROM EQU302T A WITH(NOLOCK)

	WHERE A.COMP_CODE = #{S_COMP_CODE}
	  AND A.DIV_CODE = #{S_DIV_CODE}

	  AND A.SENSOR_CODE IN ('S01','S02','S03')
  
	  ORDER BY A.INSERT_DB_TIME DESC
  ) T
ORDER BY T.INSERT_DB_TIME ASC
   </if>
	
 <if test="INIT_CHART_DATA == &quot;N&quot;"> 
 
SELECT TOP 3
	--CONVERT(VARCHAR, A.INSERT_DB_TIME, 24) AS INSERT_DB_TIME
	A.INSERT_DB_TIME
	,A.HUM01
	,A.TEM01
	,A.ID AS LAST_SEQ
	,A.SENSOR_CODE
	,A.SENSOR_NAME
FROM EQU302T A WITH(NOLOCK)

WHERE A.COMP_CODE = #{S_COMP_CODE}
  AND A.DIV_CODE = #{S_DIV_CODE}
  AND CONVERT(VARCHAR, A.INSERT_DB_TIME, 112) = CONVERT(VARCHAR, GETDATE(), 112)
  
  AND A.SENSOR_CODE IN ('S01','S02','S03')

  
  AND A.ID > #{LAST_SEQ}
  
  ORDER BY A.INSERT_DB_TIME ,A.ID
   </if>
  
</select>	
	
	
<select id="s_dsh100ukrv_shService.getInspecPrsn" parameterType="Map" resultType="rMap">
	/* s_dsh100ukrv_shService.getInspecPrsn */
SELECT 
	SUB_CODE AS INSPEC_PRSN	
	,CODE_NAME AS INSPEC_PRSN_NAME	
FROM  BSA100T WITH(NOLOCK)		 
WHERE COMP_CODE = #{S_COMP_CODE}
  AND MAIN_CODE = 'P505'
  AND SUB_CODE !='$'
  AND USE_YN = 'Y'
  
ORDER BY SORT_SEQ
</select>	

<select id="s_dsh100ukrv_shService.getEquipCode" parameterType="Map" resultType="rMap">
	/* s_dsh100ukrv_shService.getEquipCode */
SELECT 
	EQU_CODE	
	,EQU_NAME	
FROM  EQU200T WITH(NOLOCK)
			 
WHERE COMP_CODE = #{S_COMP_CODE}		 
  AND DIV_CODE = #{S_DIV_CODE}
  AND EQU_CODE_TYPE = '2'	--설비
			 
ORDER BY COMP_CODE, DIV_CODE, EQU_CODE 
</select>	
<select id="s_dsh100ukrv_shService.getWkordNum2" parameterType="Map" resultType="rMap">
	/* s_dsh100ukrv_shService.getWkordNum2 */
SELECT 
	A.WKORD_NUM								--작업지시번호
	,A.MOLD_CODE AS CORE_CODE				--금형코드
	,A.SO_NUM								--수주번호
	,R1.ITEM_NAME							--부품명
	--,ISNULL(R2.CODE_NAME,'') +' / '+ ISNULL(R4.CODE_NAME,'') AS COLOR_MTRL				--색상/원료
	,ISNULL(R4.CODE_NAME,'') AS ITEM_COLOR	--색상
	
	,(
		 SELECT
			STUFF((
				SELECT ','+ ITEM_NAME
				FROM( 
					SELECT TOP 2
						S2.ITEM_NAME 
					  FROM PMP200T S1 WITH(NOLOCK)
						LEFT JOIN BPR100T S2 WITH(NOLOCK) ON S2.COMP_CODE = S1.COMP_CODE
														 AND S2.ITEM_CODE = S1.ITEM_CODE
					WHERE S1.COMP_CODE = A.COMP_CODE
					  AND S1.DIV_CODE = A.DIV_CODE
					  AND S1.WKORD_NUM = A.WKORD_NUM
					  ORDER BY S1.ITEM_CODE

				) T FOR XML PATH('')
			), 1, 1, '') AS ITEM_MTRL
		) AS ITEM_MTRL	--원료

	,(SELECT TOP 1
		S1.ITEM_CODE
	  FROM PMP200T S1 WITH(NOLOCK)
	WHERE S1.COMP_CODE = A.COMP_CODE
	  AND S1.DIV_CODE = A.DIV_CODE
	  AND S1.WKORD_NUM = A.WKORD_NUM
	  ORDER BY S1.ITEM_CODE
	) AS MATERIAL_CODE
	,(
		 SELECT
			STUFF((
				SELECT ','+ CONVERT(NVARCHAR(1000), TEMPN_01)
				FROM( 
					SELECT TOP 2
					    CONVERT(NUMERIC(30,2),ROUND(S1.TEMPN_01,2)) AS TEMPN_01
					  FROM PMP200T S1 WITH(NOLOCK)

					WHERE S1.COMP_CODE = A.COMP_CODE
					  AND S1.DIV_CODE = A.DIV_CODE
					  AND S1.WKORD_NUM = A.WKORD_NUM
					  ORDER BY S1.ITEM_CODE
				) T FOR XML PATH('')
			), 1, 1, '') AS ITEM_MTRL_Q_ORIGIN
		) AS ITEM_MTRL_Q_ORIGIN	--기투입량
		
	--,'LDPE XJ700 / 원색(내츄럴)' AS COLOR_MTRL	
	,ISNULL(A.PRODT_START_TIME,'') + '~' + ISNULL(A.PRODT_END_TIME,'') AS PRODT_TIME	--작업시간
	,ISNULL(FORMAT(A.WKORD_Q, '#,0'),0) AS WKORD_Q	--작업지시량
	
	,A.WORK_SHOP_CODE	--작업장
	
	,ISNULL((SELECT TOP 1
		ISNULL(S1.FILE_ID,'item_noImage')+'.' + ISNULL(S1.FILE_EXT,'png')
		  FROM EQU202T S1	WITH(NOLOCK)
		 WHERE S1.COMP_CODE = A.COMP_CODE
		   AND S1.DIV_CODE = A.DIV_CODE
		   AND S1.EQU_CODE = A.MOLD_CODE
		   AND S1.FILE_TYPE = '04' --부품사진
		   AND S1.FILE_EXT IN('png','jpg','bmp')
		 ORDER BY S1.MANAGE_NO DESC
	 ),'item_noImage.png') AS FILE_NAME		--이미지관련
	 
	 ,ISNULL(A.SEQ,1) AS SEQ 
	 
	-- ,ISNULL((SELECT TOP 1
	--	S2.WKORD_NUM
	-- FROM PMP160T S2 WITH(NOLOCK)
	--WHERE S2.COMP_CODE = A.COMP_CODE
	--  AND S2.DIV_CODE = A.DIV_CODE
	--  AND S2.EQUIP_CODE = A.EQUIP_CODE
	--  AND S2.PRODT_START_DATE &lt;= CONVERT(CHAR(8), GETDATE(), 112)
	--  ORDER BY S2.COMP_CODE, S2.DIV_CODE, S2.EQUIP_CODE, S2.PRODT_START_DATE DESC, S2.PRODT_START_TIME DESC
	--  ),'') AS WKORD_NUM_LATELY	--최근 시작된 작업지시번호
	
	 , ISNULL(B.WKORD_NUM,'') AS WKORD_NUM_LATELY--최근 시작된 작업지시번호 
	 
	 ,ISNULL((SELECT 
			ISNULL(SUM(S3.BAD_INSPEC_Q),0) AS BAD_INSPEC_Q
		FROM QMS460T S3 WITH(NOLOCK)
	   WHERE S3.COMP_CODE = A.COMP_CODE
	     AND S3.DIV_CODE = A.DIV_CODE
		 AND S3.WKORD_NUM = A.WKORD_NUM
	--	 AND S3.INSPEC_DATE = CONVERT(CHAR(8), GETDATE(), 112)
	  GROUP BY S3.COMP_CODE, S3.DIV_CODE, S3.WKORD_NUM
	  ),0) AS BAD_INSPEC_Q_SUM --불량코드별 불량수량 합
	  
	  --,ISNULL(B.CAVITY_Q,0) AS CAVITY_Q	--캐비티수
	--  ,ISNULL(FORMAT(B.PRODT_Q, '#,0'),0) AS PRODT_Q	--작업수량
	
	  ,ISNULL(C.CAVITY_Q,0) AS CAVITY_Q	--캐비티수
	  ,FORMAT((ISNULL(C.CAVITY_Q,0) * ISNULL(B.ACT_SHOT_CNT,0)), '#,0') AS PRODT_Q	--작업수량
FROM PMP100T A WITH(NOLOCK)
LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
								 AND R1.ITEM_CODE = A.ITEM_CODE
LEFT JOIN BSA100T R2 WITH(NOLOCK) ON R2.COMP_CODE  = A.COMP_CODE
		              AND R2.MAIN_CODE  = 'Z050'
		              AND R2.SUB_CODE   = RIGHT(A.ITEM_CODE, 2)
LEFT JOIN BPR100T R3 WITH(NOLOCK) ON R3.COMP_CODE  = A.COMP_CODE
		              AND R3.ITEM_CODE  = A.ITEM_CODE
LEFT JOIN BSA100T R4 WITH(NOLOCK) ON R4.COMP_CODE  = A.COMP_CODE
		              AND R4.MAIN_CODE  = 'B145'
		              AND R4.SUB_CODE   = R3.ITEM_COLOR
LEFT JOIN (
	SELECT TOP 1 A.COMP_CODE,A.DIV_CODE, A.WKORD_NUM,A.EQUIP_CODE, C.ACT_SHOT_CNT--, B.CAVITY_Q, B.CAVITY_Q * C.ACT_SHOT_CNT AS PRODT_Q
	   FROM PMP160T A WITH(NOLOCK)
	 --  LEFT JOIN EQU220T B WITH(NOLOCK) ON A.MOLD_CODE = B.CORE_CODE
	   LEFT JOIN (SELECT COMP_CODE, DIV_CODE, SENSOR_CODE, WKORD_NUM, ACT_SHOT_CNT
					FROM EQU300T A WITH(NOLOCK)
					WHERE INSERT_DB_TIME = (SELECT MAX(INSERT_DB_TIME) FROM EQU300T B WITH(NOLOCK) WHERE A.SENSOR_CODE = B.SENSOR_CODE GROUP BY B.SENSOR_CODE)) C ON C.COMP_CODE = A.COMP_CODE AND C.DIV_CODE = A.DIV_CODE AND C.SENSOR_CODE = A.EQUIP_CODE AND C.WKORD_NUM = A.WKORD_NUM
	WHERE A.COMP_CODE = #{S_COMP_CODE}
  	  AND A.DIV_CODE = #{S_DIV_CODE}
	  AND A.EQUIP_CODE = #{EQUIP_CODE}
	  AND A.PRODT_START_DATE &lt;= CONVERT(CHAR(8), GETDATE(), 112)				 
	ORDER BY A.COMP_CODE, A.DIV_CODE, A.EQUIP_CODE, A.PRODT_START_DATE DESC, A.INSERT_DB_TIME DESC	
	
--	  WHERE A.PRODT_START_DATE = (SELECT MAX(PRODT_START_DATE) FROM PMP160T B WITH(NOLOCK) WHERE A.EQUIP_CODE = B.EQUIP_CODE GROUP BY B.EQUIP_CODE)
--		AND A.PRODT_START_TIME = (SELECT MAX(PRODT_START_TIME) FROM PMP160T B WITH(NOLOCK) WHERE A.EQUIP_CODE = B.EQUIP_CODE GROUP BY B.EQUIP_CODE)
) B ON B.COMP_CODE = A.COMP_CODE
   AND B.DIV_CODE = A.DIV_CODE
   AND B.WKORD_NUM = A.WKORD_NUM
   AND B.EQUIP_CODE = A.EQUIP_CODE 

LEFT JOIN EQU220T C WITH(NOLOCK) ON A.MOLD_CODE = C.CORE_CODE

WHERE A.COMP_CODE = #{S_COMP_CODE}
  AND A.DIV_CODE = #{S_DIV_CODE}
  AND A.WORK_SHOP_CODE = 'WS100'
  AND A.WKORD_STATUS NOT IN ('8','9')
  AND A.PRODT_START_DATE &lt;= CONVERT(CHAR(8), GETDATE(), 112)
  AND A.EQUIP_CODE = #{EQUIP_CODE}
  
ORDER BY A.COMP_CODE, A.DIV_CODE,A.PRODT_START_DATE, A.SEQ 
</select>	

<select id="s_dsh100ukrv_shService.getBadInspecCode" parameterType="Map" resultType="rMap">
	/* s_dsh100ukrv_shService.getBadInspecCode */
	SELECT TOP 12
		SUB_CODE AS BAD_INSPEC_CODE
		,CODE_NAME AS BAD_INSPEC_NAME
	FROM BSA100T WITH(NOLOCK)
	
	WHERE COMP_CODE = #{S_COMP_CODE}
	  AND MAIN_CODE = 'P003'
	  AND SUB_CODE != '$'
	  AND USE_YN = 'Y'
	  
	  
	ORDER BY SORT_SEQ
</select>	
	
<select id="s_dsh100ukrv_shService.getBadInspecQList" parameterType="Map" resultType="rMap">
	/* s_dsh100ukrv_shService.getBadInspecQList */
  SELECT 
	WKORD_NUM
	,BAD_INSPEC_CODE
	,ISNULL(SUM(BAD_INSPEC_Q),0) AS BAD_INSPEC_Q
	FROM QMS460T WITH(NOLOCK)
   WHERE COMP_CODE = #{S_COMP_CODE}
     AND DIV_CODE = #{S_DIV_CODE}
	 AND WKORD_NUM = #{WKORD_NUM}
  GROUP BY COMP_CODE, DIV_CODE, WKORD_NUM, BAD_INSPEC_CODE
</select>
	




	
	
	
	
<select id="s_dsh100ukrv_shService.getStartInfo" parameterType="Map" resultType="rMap">
	/* s_dsh100ukrv_shService.getStartInfo */
SELECT
	COMP_CODE
  FROM PMP160T WITH(NOLOCK)
WHERE COMP_CODE = #{S_COMP_CODE}
  AND DIV_CODE = #{S_DIV_CODE}
  AND WKORD_NUM = #{WKORD_NUM}
  AND EQUIP_CODE = #{EQUIP_CODE}
  
</select>



<update id="s_dsh100ukrv_shService.insertStart" parameterType="Map">
	/* s_dsh100ukrv_shService.insertStart */
	INSERT INTO PMP160T(
		COMP_CODE
		,DIV_CODE
		,WKORD_NUM
		,EQUIP_CODE
		,MOLD_CODE
		,PRODT_START_DATE
		,PRODT_START_TIME
	
		,INSERT_DB_USER
		,INSERT_DB_TIME
		,UPDATE_DB_USER
		,UPDATE_DB_TIME
	
	)VALUES(
		#{S_COMP_CODE}
		,#{S_DIV_CODE}
		,#{WKORD_NUM}
		,#{EQUIP_CODE}
		,#{CORE_CODE}
		,#{PRODT_START_DATE}
		,#{PRODT_START_TIME}
		
		,#{S_USER_ID}
		,GETDATE()
		,#{S_USER_ID}
		,GETDATE()
	)
</update>

<update id="s_dsh100ukrv_shService.insertBadInspecQ" parameterType="Map">
	/* s_dsh100ukrv_shService.insertBadInspecQ */
	INSERT INTO QMS460T(
       COMP_CODE
     , DIV_CODE
     , WKORD_NUM
     , INSPEC_DATE
     , INSPEC_TIME
     , BAD_INSPEC_CODE
     , BAD_INSPEC_Q
     , INSPEC_PRSN
     
     , WORK_SHOP_CODE
     , EQU_CODE
     , MOLD_CODE
     
     , INSERT_DB_USER
     , INSERT_DB_TIME
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
	) VALUES (
       #{S_COMP_CODE}
     , #{S_DIV_CODE}
     , #{WKORD_NUM}
     , #{INSPEC_DATE}
     , #{INSPEC_TIME}
     , #{BAD_INSPEC_CODE}
     , #{BAD_INSPEC_Q}
     , #{INSPEC_PRSN}
     
     , #{WORK_SHOP_CODE}
     , #{EQU_CODE}
     , #{MOLD_CODE}
     
     , #{S_USER_ID}
     , GETDATE()
     , #{S_USER_ID}
     , GETDATE()
	)
	
	
</update>

<update id="s_dsh100ukrv_shService.updateItemMtrl" parameterType="Map">
	UPDATE A
	   SET A.TEMPN_01 = ISNULL(A.TEMPN_01,0) + #{ITEM_MTRL_Q}
	      ,A.INSERT_DB_USER = #{S_USER_ID}
	      ,A.INSERT_DB_TIME = GETDATE()
	  FROM PMP200T A WITH(NOLOCK)
 LEFT JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
 								 AND B.ITEM_CODE = A.ITEM_CODE
	 WHERE A.COMP_CODE = #{S_COMP_CODE}
	   AND A.DIV_CODE = #{S_DIV_CODE}
	   AND A.WKORD_NUM = #{WKORD_NUM}
	   AND B.ITEM_NAME = #{ITEM_MTRL}
</update>


<select id="s_dsh100ukrv_shService.getSetup" parameterType="Map" resultType="rMap">
IF EXISTS (SELECT TOP 1 1 FROM EQU300T WITH(NOLOCK) WHERE SENSOR_CODE = #{EQUIP_CODE} AND ERP_MOLD_CODE = #{CORE_CODE})

	SELECT TOP 1 A.* --, B.*
	FROM EQU301T A WITH(NOLOCK)
	INNER JOIN (
				SELECT TOP 1 ERP_MOLD_CODE, LASTID, LASTTIME, TOTALCOUNT, WKORD_NUM
				 FROM 
				 (
					SELECT TOP 1
						   ERP_MOLD_CODE
						  ,GROUPKEY
						  ,MAX(WKORD_NUM) AS WKORD_NUM
						  ,MAX(ID) AS LASTID
						  ,MAX(INSERT_DB_TIME) AS LASTTIME
						  ,COUNT(*) AS TOTALCOUNT
					  FROM
					  (
						SELECT
							   ROW_NUMBER() OVER(PARTITION BY ERP_MOLD_CODE ORDER BY ERP_MOLD_CODE, ROWNUM) - ROWNUM AS GROUPKEY   -- 신규번호 - (마이너스) 기존번호 = 값이 같은것은 연속된 값이라는 뜻
							 , ROWNUM
							 , WKORD_NUM
							 , ERP_MOLD_CODE
							 , ID
							 , INSERT_DB_TIME
						  FROM
							   (
								SELECT
									ROW_NUMBER() OVER(PARTITION BY ERP_MOLD_CODE ORDER BY ID) AS ROWNUM
									, WKORD_NUM
									, SENSOR_CODE
									, ERP_MOLD_CODE
									, ID
									, INSERT_DB_TIME
									, OP_MODE
								 FROM EQU300T WITH(NOLOCK)
								 WHERE SENSOR_CODE   = #{EQUIP_CODE}				-- 확인할것 
								  AND ISNULL(ERP_MOLD_CODE, '') != '' 			-- 확인할것 
							   ) AAA											-- 확인할것 
							   WHERE OP_MODE = 8   -- 자동상태값				-- 확인할것 
								 AND ERP_MOLD_CODE = #{CORE_CODE}				-- 확인할것 (몰드값과 호기값 반드시 확인)
					  ) BBB
					  GROUP BY ERP_MOLD_CODE, GROUPKEY
					  HAVING COUNT(ID) > 120        -- 최근 120회이상의 자동상태값 (15초 * 120회 = 30분 이상 자동모드인것)   -- 확인할것
					  ORDER BY LASTTIME DESC
				  
				) CCC
				ORDER BY TOTALCOUNT DESC
			) DDD ON  A.WKORD_NUM       = DDD.WKORD_NUM
				  AND A.INSERT_DB_TIME &lt;= DDD.LASTTIME
			--INNER JOIN EQU300T B WITH(NOLOCK) ON B.ID = DDD.LASTID
	WHERE A.MATERIAL_CODE = #{MATERIAL_CODE}
	ORDER BY A.INSERT_DB_TIME DESC
ELSE
	SELECT TOP 1 A.* --, B.*
	FROM EQU301T A WITH(NOLOCK)
	INNER JOIN (
				SELECT TOP 1 ERP_MOLD_CODE, LASTID, LASTTIME, TOTALCOUNT, WKORD_NUM
				 FROM 
				 (
					SELECT TOP 1
						   ERP_MOLD_CODE
						  ,GROUPKEY
						  ,MAX(WKORD_NUM) AS WKORD_NUM
						  ,MAX(ID) AS LASTID
						  ,MAX(INSERT_DB_TIME) AS LASTTIME
						  ,COUNT(*) AS TOTALCOUNT
					  FROM
					  (
						SELECT
							   ROW_NUMBER() OVER(PARTITION BY ERP_MOLD_CODE ORDER BY ERP_MOLD_CODE, ROWNUM) - ROWNUM AS GROUPKEY   -- 신규번호 - (마이너스) 기존번호 = 값이 같은것은 연속된 값이라는 뜻
							 , ROWNUM
							 , WKORD_NUM
							 , ERP_MOLD_CODE
							 , ID
							 , INSERT_DB_TIME
						  FROM
							   (
								SELECT
									ROW_NUMBER() OVER(PARTITION BY ERP_MOLD_CODE ORDER BY ID) AS ROWNUM
									, WKORD_NUM
									, SENSOR_CODE
									, ERP_MOLD_CODE
									, ID
									, INSERT_DB_TIME
									, OP_MODE
								 FROM EQU300T WITH(NOLOCK)
								 WHERE ISNULL(ERP_MOLD_CODE, '') != '' 			-- 확인할것
							   ) AAA
							   WHERE OP_MODE = 8   -- 자동상태값
								 --AND SENSOR_CODE   = -- 해당 호기에 없는 조건값을 찾기 위해 호기조건 제외함
								 AND ERP_MOLD_CODE = #{CORE_CODE}
					  ) BBB
					  GROUP BY ERP_MOLD_CODE, GROUPKEY
					  HAVING COUNT(ID) > 120        -- 최근 120회이상의 자동상태값 (15초 * 120회 = 30분 이상 자동모드인것)   -- 확인할것
					  ORDER BY LASTTIME DESC
				  
				) CCC
				ORDER BY TOTALCOUNT DESC
			) DDD ON  A.WKORD_NUM       = DDD.WKORD_NUM
				  AND A.INSERT_DB_TIME &lt;= DDD.LASTTIME
			--INNER JOIN EQU300T B WITH(NOLOCK) ON B.ID = DDD.LASTID
	WHERE A.MATERIAL_CODE = #{MATERIAL_CODE}
	ORDER BY A.INSERT_DB_TIME DESC
	
</select>


<select id="s_dsh100ukrv_shService.getEquipPassword" parameterType="Map" resultType="rMap">
	/* s_dsh100ukrv_shService.getEquipPassword */
SELECT
	TOP 1 SUB_CODE AS PW	
FROM  BSA100T WITH(NOLOCK)		 
WHERE COMP_CODE = #{S_COMP_CODE}
  AND MAIN_CODE = 'ZW03'
  AND SUB_CODE !='$'
  AND USE_YN = 'Y'
  
  ORDER BY SORT_SEQ
</select>	

<select id="s_dsh100ukrv_shService.getEquipManufacturer" parameterType="Map" resultType="rMap">
	/* s_dsh100ukrv_shService.getEquipManufacturer */
SELECT 
	REF_CODE3 AS EM	
FROM  BSA100T WITH(NOLOCK)		 
WHERE COMP_CODE = #{S_COMP_CODE}
  AND MAIN_CODE = 'I290'
  AND SUB_CODE !='$'
  AND SUB_CODE = #{EQUIP_CODE}
  AND USE_YN = 'Y'
</select>	









	
	
<select id="s_dsh100ukrv_shService.getWkordNum" parameterType="Map" resultType="rMap">
SELECT 
	WKORD_NUM
	,WKORD_NUM + '/' + SO_NUM AS WKORD_SO_NUM
FROM PMP100T WITH(NOLOCK)

WHERE COMP_CODE = #{S_COMP_CODE}
  AND DIV_CODE = #{S_DIV_CODE}
  AND WORK_SHOP_CODE = 'WS100'
  AND PRODT_START_DATE = CONVERT(CHAR(8), GETDATE(), 112)
  AND EQUIP_CODE = #{EQUIP_CODE}
  
ORDER BY COMP_CODE, DIV_CODE, SEQ 
</select>

<select id="s_dsh100ukrv_shService.getWkordNumInfo" parameterType="Map" resultType="rMap">
SELECT 
	A.MOLD_CODE AS CORE_CODE
	,R1.ITEM_NAME
	,FORMAT(A.WKORD_Q, '#,0') AS WKORD_Q
FROM PMP100T A WITH(NOLOCK)
LEFT JOIN BPR100T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
								 AND R1.ITEM_CODE = A.ITEM_CODE

WHERE A.COMP_CODE = #{S_COMP_CODE}
  AND A.DIV_CODE = #{S_DIV_CODE}
  AND A.WKORD_NUM = #{WKORD_NUM}
  
</select>





</mapper>