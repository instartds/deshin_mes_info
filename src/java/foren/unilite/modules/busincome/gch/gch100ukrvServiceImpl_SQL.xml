<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gch100ukrvServiceImpl">
	<select id="gch100ukrvServiceImpl.selectListX" parameterType="Map" resultType="rMap">
		/* gch100ukrvServiceImpl.selectList */
		SELECT    A.DIV_CODE
				, A.OPERATION_DATE AS DEPOSIT_DATE
				, A.OFFICE_CODE
				, A.ROUTE_GROUP
				, A.ROUTE_CODE
				, ROW_NUMBER() OVER(PARTITION BY A.ROUTE_CODE ORDER BY A.OPERATION_DATE, R.ROUTE_NUM, A.VEHICLE_CODE) AS ROUTE_ROWNUM
				, A.VEHICLE_CODE
				, V.VEHICLE_NAME
				, V.VEHICLE_REGIST_NO
				, A.DRIVER_CODE
				, MO.NOTINSERVICE_YN
				, H.NAME AS DRIVER_NAME
				, ISNULL(G.DEPOSIT_CASH,0) AS DEPOSIT_CASH
				, ISNULL(G.THOUSAND_BILL_COUNT,0) AS THOUSAND_BILL_COUNT
				, R.ROUTE_NUM
		  FROM GOP300T A
		LEFT JOIN GCH100T G  ON G.COMP_CODE 	= A.COMP_CODE
							AND G.DIV_CODE		= A.DIV_CODE
							AND G.DEPOSIT_DATE	= A.OPERATION_DATE
							AND G.ROUTE_CODE	= A.ROUTE_CODE
							AND G.VEHICLE_CODE	= A.VEHICLE_CODE
		LEFT JOIN HUM100T H  ON H.COMP_CODE		= A.COMP_CODE
						    AND H.DIV_CODE		= A.DIV_CODE
						    AND H.PERSON_NUMB	= A.DRIVER_CODE
		LEFT JOIN GVE100T V  ON V.COMP_CODE 	= A.COMP_CODE
		                    AND V.DIV_CODE 		= A.DIV_CODE
		                    AND V.VEHICLE_CODE 	= A.VEHICLE_CODE 
		LEFT JOIN GRT100T R  ON R.COMP_CODE 	= A.COMP_CODE
		                    AND R.DIV_CODE 		= A.DIV_CODE
		                    AND R.ROUTE_CODE 	= A.ROUTE_CODE
		INNER JOIN (	
					  SELECT COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT, RUN_COUNT,NOTINSERVICE_YN
						FROM (
							SELECT COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT,  
								   MIN(CONVERT(NUMERIC(10,0), RUN_COUNT)) OVER(PARTITION BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT)  AS  RUN_COUNT, 
								   MAX(CASE WHEN RNK2=1 THEN NOTINSERVICE_YN ELSE '' END) OVER(PARTITION BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT) AS NOTINSERVICE_YN
								   
							FROM (
								SELECT COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT, RUN_COUNT, NOTINSERVICE_YN, 
									   RANK() OVER(PARTITION BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT ORDER BY CONVERT(NUMERIC(10,0),RUN_COUNT) ASC )  AS RNK,
									   RANK() OVER(PARTITION BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT ORDER BY CONVERT(NUMERIC(10,0),RUN_COUNT) DESC ) AS RNK2
								FROM GOP300T
								WHERE COMP_CODE = #{S_COMP_CODE}
								  AND DIV_CODE = #{DIV_CODE}
								  AND OPERATION_DATE = #{DEPOSIT_DATE}
								  AND OTHER_VEHICLE_YN != 'Y'
								  <if test="@foren.Ognl@isNotEmpty(DRIVER_CODE)">
								  AND DRIVER_CODE = #{DRIVER_CODE}
								  </if>	
								  <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
								  AND ROUTE_GROUP = #{ROUTE_GROUP}
								  </if>
								  <if test="@foren.Ognl@isNotEmpty(ROUTE_CODE)">
								  AND ROUTE_CODE = #{ROUTE_CODE}
								  </if>	
								  <if test="@foren.Ognl@isNotEmpty(VEHICLE_CODE)">
								  AND VEHICLE_CODE = #{VEHICLE_CODE}
								  </if> 
								  <if test="@foren.Ognl@isNotEmpty(OFFICE_CODE)">
								   AND OFFICE_CODE = #{OFFICE_CODE}
								  </if> 
							  ) L
							WHERE RNK =1  OR RNK2 =1
							) L2 
							GROUP BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE, OPERATION_COUNT,  RUN_COUNT,NOTINSERVICE_YN  
						) MO  ON MO.COMP_CODE		= A.COMP_CODE
							 AND MO.DIV_CODE		= A.DIV_CODE
							 AND MO.OPERATION_DATE	= A.OPERATION_DATE
							 AND MO.ROUTE_CODE		= A.ROUTE_CODE
							 AND MO.OPERATION_COUNT = A.OPERATION_COUNT
							 AND MO.RUN_COUNT		= A.RUN_COUNT
		 WHERE A.COMP_CODE 			= #{S_COMP_CODE}
		   AND A.DIV_CODE 			= #{DIV_CODE}
		   AND A.OPERATION_DATE 	= #{DEPOSIT_DATE}
		   AND A.OTHER_VEHICLE_YN 	!= 'Y'
		  <if test="@foren.Ognl@isNotEmpty(DRIVER_CODE)">
		   AND A.DRIVER_CODE = #{DRIVER_CODE}
		  </if>	
		  <if test="@foren.Ognl@isNotEmpty(DRIVER_NAME)">
		   AND H.NAME LIKE '%'+ #{DRIVER_NAME} +'%'
		  </if>	
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
		   AND A.ROUTE_GROUP = #{ROUTE_GROUP}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_CODE)">
		   AND A.ROUTE_CODE = #{ROUTE_CODE}
		  </if>	
		  <if test="@foren.Ognl@isNotEmpty(VEHICLE_CODE)">
		   AND A.VEHICLE_CODE = #{VEHICLE_CODE}
		  </if> 
		  <if test="@foren.Ognl@isNotEmpty(VEHICLE_NAME)">
		   AND V.VEHICLE_NAME LIKE '%' + #{VEHICLE_NAME} + '%'
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(OFFICE_CODE)">
		   AND A.OFFICE_CODE = #{OFFICE_CODE}
		  </if> 
		 ORDER BY A.OPERATION_DATE, R.ROUTE_NAME, A.VEHICLE_CODE
	</select>
	<select id="gch100ukrvServiceImpl.selectListXX" parameterType="Map" resultType="rMap">
		/* gch100ukrvServiceImpl.selectList */
		SELECT	 A1.ROUTE_NUM
				,ISNULL(G.DEPOSIT_DATE, #{DEPOSIT_DATE}) AS DEPOSIT_DATE
				,B1.VEHICLE_CODE 
				,V.VEHICLE_NAME
				,V.VEHICLE_REGIST_NO
				,A.OFFICE_CODE
				,A.ROUTE_GROUP
				,A.ROUTE_CODE
				,A1.ROUTE_NUM
				,ROW_NUMBER() OVER(PARTITION BY A.ROUTE_CODE ORDER BY A1.ROUTE_NUM, B1.VEHICLE_CODE) AS ROUTE_ROWNUM
				,A.ROUTE_START_DATE
				,A.ROUTE_END_DATE
				,B.ASSIGN_START_DATE
				,B.ASSIGN_END_DATE
				,G.DEPOSIT_DATE
				,G.DEPOSIT_CASH
				,CASE WHEN G.NOTINSERVICE_YN = 'Y' THEN 'true' ELSE 'false' END AS  NOTINSERVICE_YN
				,G.THOUSAND_BILL_COUNT
		FROM GRT110T A
		INNER JOIN GRT100T A1 ON A1.COMP_CODE			= A.COMP_CODE
							 AND A1.DIV_CODE			= A.DIV_CODE
							 AND A1.ROUTE_CODE			= A.ROUTE_CODE
		INNER JOIN GAG100T B  ON  B.COMP_CODE			= A.COMP_CODE
							 AND  B.DIV_CODE			= A.DIV_CODE
							 AND  B.ROUTE_CODE			= A.ROUTE_CODE
							 AND  B.ROUTE_START_DATE	= A.ROUTE_START_DATE
		INNER JOIN GAG120T B1 ON B1.COMP_CODE			= B.COMP_CODE
							 AND B1.DIV_CODE			= B.DIV_CODE
							 AND B1.ROUTE_CODE			= B.ROUTE_CODE
							 AND B1.ROUTE_START_DATE	= B.ROUTE_START_DATE
							 AND B1.ASSIGN_START_DATE	= B.ASSIGN_START_DATE
		INNER JOIN GVE100T V  ON  V.COMP_CODE			= B1.COMP_CODE
							 AND  V.DIV_CODE			= B1.DIV_CODE
							 AND  V.VEHICLE_CODE		= B1.VEHICLE_CODE
		LEFT JOIN  (SELECT COMP_CODE, DIV_CODE, DEPOSIT_DATE,ROUTE_CODE, VEHICLE_CODE, DEPOSIT_CASH, NOTINSERVICE_YN, THOUSAND_BILL_COUNT
					  FROM GCH100T 
					 WHERE DEPOSIT_DATE = #{DEPOSIT_DATE}
					)      G  ON  G.COMP_CODE			= B1.COMP_CODE
							 AND  G.DIV_CODE			= B1.DIV_CODE
							 AND  G.ROUTE_CODE			= B1.ROUTE_CODE   
							 AND  G.VEHICLE_CODE		= B1.VEHICLE_CODE   
							 AND  G.DEPOSIT_DATE		&gt;= B.ASSIGN_START_DATE 
							 AND  G.DEPOSIT_DATE		&lt;= B.ASSIGN_END_DATE
		WHERE A.COMP_CODE	= #{S_COMP_CODE}
		  AND A.DIV_CODE 	= #{DIV_CODE}
		  AND #{DEPOSIT_DATE} BETWEEN A.ROUTE_START_DATE AND A.ROUTE_END_DATE
		  AND #{DEPOSIT_DATE} BETWEEN B.ASSIGN_START_DATE AND B.ASSIGN_END_DATE
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
		   AND A.ROUTE_GROUP = #{ROUTE_GROUP}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_CODE)">
		   AND A.ROUTE_CODE = #{ROUTE_CODE}
		  </if>	
		  <if test="@foren.Ognl@isNotEmpty(VEHICLE_CODE)">
		   AND B1.VEHICLE_CODE  = #{VEHICLE_CODE}
		  </if> 
		  <if test="@foren.Ognl@isNotEmpty(VEHICLE_NAME)">
		   AND V.VEHICLE_NAME LIKE '%' + #{VEHICLE_NAME} + '%'
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(OFFICE_CODE)">
		   AND A.OFFICE_CODE = #{OFFICE_CODE}
		  </if> 
		 ORDER BY A.OFFICE_CODE, A1.ROUTE_NUM, V.VEHICLE_NAME
	</select>	
	<select id="gch100ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* gch100ukrvServiceImpl.selectList */
		SELECT	 A1.ROUTE_NUM
				,ISNULL(G.DEPOSIT_DATE, #{DEPOSIT_DATE}) AS DEPOSIT_DATE
				,B1.VEHICLE_CODE 
				,V.VEHICLE_NAME
				,V.VEHICLE_REGIST_NO
				,A.OFFICE_CODE
				,C.ROUTE_GROUP
				,A.ROUTE_CODE
				,A1.ROUTE_NUM
				,ROW_NUMBER() OVER(PARTITION BY A.ROUTE_CODE ORDER BY A1.ROUTE_NUM, B1.VEHICLE_CODE) AS ROUTE_ROWNUM
				,A.ROUTE_START_DATE
				,A.ROUTE_END_DATE
				,B.ASSIGN_START_DATE
				,B.ASSIGN_END_DATE
				,G.DEPOSIT_DATE
				,G.DEPOSIT_CASH
				,CASE WHEN G.NOTINSERVICE_YN = 'Y' THEN 'true' ELSE 'false' END AS  NOTINSERVICE_YN
				,G.THOUSAND_BILL_COUNT
		FROM GRT110T A
		INNER JOIN GRT100T A1 ON A1.COMP_CODE			= A.COMP_CODE
							 AND A1.DIV_CODE			= A.DIV_CODE
							 AND A1.ROUTE_CODE			= A.ROUTE_CODE
		INNER JOIN GAG100T B  ON  B.COMP_CODE			= A.COMP_CODE
							 AND  B.DIV_CODE			= A.DIV_CODE
							 AND  B.ROUTE_CODE			= A.ROUTE_CODE
							 AND  B.ROUTE_START_DATE	= A.ROUTE_START_DATE
		INNER JOIN GAG120T B1 ON B1.COMP_CODE			= B.COMP_CODE
							 AND B1.DIV_CODE			= B.DIV_CODE
							 AND B1.ROUTE_CODE			= B.ROUTE_CODE
							 AND B1.ROUTE_START_DATE	= B.ROUTE_START_DATE
							 AND B1.ASSIGN_START_DATE	= B.ASSIGN_START_DATE
		INNER JOIN GVE100T V  ON  V.COMP_CODE			= B1.COMP_CODE
							 AND  V.DIV_CODE			= B1.DIV_CODE
							 AND  V.VEHICLE_CODE		= B1.VEHICLE_CODE
		LEFT JOIN  (SELECT COMP_CODE, DIV_CODE, DEPOSIT_DATE,ROUTE_CODE, VEHICLE_CODE, DEPOSIT_CASH, NOTINSERVICE_YN, THOUSAND_BILL_COUNT
					  FROM GCH100T 
					 WHERE DEPOSIT_DATE = #{DEPOSIT_DATE}
					)      G  ON  G.COMP_CODE			= B1.COMP_CODE
							 AND  G.DIV_CODE			= B1.DIV_CODE
							 AND  G.ROUTE_CODE			= B1.ROUTE_CODE   
							 AND  G.VEHICLE_CODE		= B1.VEHICLE_CODE   
							 AND  G.DEPOSIT_DATE		&gt;= B.ASSIGN_START_DATE 
							 AND  G.DEPOSIT_DATE		&lt;= B.ASSIGN_END_DATE
		LEFT JOIN (SELECT SUB_CODE,REF_CODE2 AS ROUTE_GROUP
					 FROM BSA100T 
					WHERE COMP_CODE=#{S_COMP_CODE}
					  AND MAIN_CODE='GO16'
					  AND SUB_CODE !='$'
					  AND USE_YN = 'Y'
					)		C ON C.SUB_CODE = A.ROUTE_GROUP
		WHERE A.COMP_CODE	= #{S_COMP_CODE}
		  AND A.DIV_CODE 	= #{DIV_CODE}
		  AND #{DEPOSIT_DATE} BETWEEN A.ROUTE_START_DATE AND A.ROUTE_END_DATE
		  AND #{DEPOSIT_DATE} BETWEEN B.ASSIGN_START_DATE AND B.ASSIGN_END_DATE
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_GROUP)">
		   AND C.ROUTE_GROUP = #{ROUTE_GROUP}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(ROUTE_CODE)">
		   AND A.ROUTE_CODE = #{ROUTE_CODE}
		  </if>	
		  <if test="@foren.Ognl@isNotEmpty(VEHICLE_CODE)">
		   AND B1.VEHICLE_CODE  = #{VEHICLE_CODE}
		  </if> 
		  <if test="@foren.Ognl@isNotEmpty(VEHICLE_NAME)">
		   AND V.VEHICLE_NAME LIKE '%' + #{VEHICLE_NAME} + '%'
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(OFFICE_CODE)">
		   AND A.OFFICE_CODE = #{OFFICE_CODE}
		  </if> 
		 ORDER BY A.OFFICE_CODE, A1.ROUTE_NUM, V.VEHICLE_NAME
	</select>	
	<update id="gch100ukrvServiceImpl.update" parameterType="Map">
		IF EXISTS(
				SELECT DEPOSIT_CASH
				    FROM GCH100T 
				   WHERE COMP_CODE 		= #{S_COMP_CODE}
				     AND DIV_CODE 		= #{DIV_CODE}
				     AND DEPOSIT_DATE 	= #{DEPOSIT_DATE}
				     AND ROUTE_CODE 	= #{ROUTE_CODE}
				     AND VEHICLE_CODE 	= #{VEHICLE_CODE} 
		)
		BEGIN
			UPDATE GCH100T
			SET 
				DEPOSIT_CASH 		= #{DEPOSIT_CASH},
				THOUSAND_BILL_COUNT = #{THOUSAND_BILL_COUNT},
				NOTINSERVICE_YN		= #{NOTINSERVICE_YN},
				UPDATE_DB_USER 		= #{S_USER_ID},
				UPDATE_DB_TIME 		= GETDATE()
			WHERE COMP_CODE 	= #{COMP_CODE} 
			  AND DIV_CODE 		= #{DIV_CODE}  
			  AND DEPOSIT_DATE 	= #{DEPOSIT_DATE} 
			  AND ROUTE_CODE 	= #{ROUTE_CODE}
			  AND VEHICLE_CODE 	= #{VEHICLE_CODE}
		END
		ELSE
		BEGIN
			INSERT INTO GCH100T
			(
				COMP_CODE            
				, DIV_CODE             
				, DEPOSIT_DATE					
				, ROUTE_CODE						
				, VEHICLE_CODE				
				                     
				, OFFICE_CODE						
				, ROUTE_GROUP						
				, DEPOSIT_CASH					
				, THOUSAND_BILL_COUNT
				, NOTINSERVICE_YN		
				, REMARK			
				, INSERT_DB_USER   
				, INSERT_DB_TIME   
				, UPDATE_DB_USER   
				, UPDATE_DB_TIME   
			)
			VALUES
			(
				#{S_COMP_CODE}          
				, #{DIV_CODE}             
				, #{DEPOSIT_DATE}					
				, #{ROUTE_CODE}						
				, #{VEHICLE_CODE}					
				                     
				, #{OFFICE_CODE}						
				, #{ROUTE_GROUP}						
				, #{DEPOSIT_CASH}					
				, #{THOUSAND_BILL_COUNT}
				, #{NOTINSERVICE_YN}                     
				, #{REMARK}								
				             
				, #{S_USER_ID}
				, GETDATE()
				, #{S_USER_ID}
				, GETDATE()
			)
		END
	</update>
</mapper>