<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gcd200skrvService">
	<select id="gcd200skrvService.selectList" parameterType="Map" resultType="rMap">
		DECLARE @CompCode               NVARCHAR(10)    /* 법인코드     	*/
		      , @DivCode                NVARCHAR(10)    /* 사업장코드   	*/
		      , @OfficeCode             NVARCHAR(10)    /* 영업소코드   	*/
		      , @OperationDateFr        NVARCHAR(08)    /* 운행일(시작) 	*/
		      , @OperationDateTo        NVARCHAR(08)    /* 운행일(종료) 	*/
		      , @RouteGroup             NVARCHAR(20)    /* 노선그룹     	*/
		      , @RouteCode              NVARCHAR(20)    /* 노선코드     	*/
			
		SET @CompCode        = #{S_COMP_CODE}
		SET @DivCode         = #{DIV_CODE}
		SET @OperationDateFr = #{OPERATION_DATE_FR}
		SET @OperationDateTo = #{OPERATION_DATE_TO}
		SET @OfficeCode 	 = #{OFFICE_CODE}
		SET @RouteGroup      = #{ROUTE_GROUP}
		SET @RouteCode       = #{ROUTE_CODE}
		
		/* 수입금 집계 내역 조회 */
		SELECT A.COMP_CODE                                                              /* (숨김) 법인코드     	 	    */                                            
		     , A.DIV_CODE                                                               /* (숨김) 사업장        		*/
		     , A.OFFICE_CODE                                                            /* (공통코드) 영업소코드	    */ 
		     , A.ROUTE_GROUP                                                            /* (공통코드) 노선그룹  		*/ 
			 , C.CODE_NAME AS ROUTE_GROUP_NAME                                          /* 노선그룹명           		*/
		     , A.ROUTE_CODE                                                             /* 노선코드             		*/
		     , R.ROUTE_NUM                                                              /* 노선번호             		*/
--		     , ISNULL(B1.TOTAL_OPERATION   ,0) + ISNULL(B2.TOTAL_OPERATION   ,0)    AS TOTAL_OPERATION      /* 총댓수               		*/
--		     , ISNULL(B1.TOTAL_SERVICE     ,0) + ISNULL(B2.TOTAL_SERVICE     ,0)    AS TOTAL_SERVICE        /* 운행                		 	*/
--		     , ISNULL(B1.TOTAL_NOTINSERVICE,0) + ISNULL(B2.TOTAL_NOTINSERVICE,0)    AS TOTAL_NOTINSERVICE   /* 운휴                 		*/
--		     , ISNULL(B1.TOTAL_OPERATION   ,0) AS TOTAL_OPERATION      /* 총댓수               		*/

		     , ISNULL(B1.TOTAL_SERVICE     ,0) + ISNULL(B1.TOTAL_NOTINSERVICE,0) AS TOTAL_OPERATION        /* 총댓수                		 	*/
		     , ISNULL(B1.TOTAL_SERVICE     ,0)                                   AS TOTAL_SERVICE        /* 운행                		 	*/
		     , ISNULL(B1.TOTAL_NOTINSERVICE,0)                                   AS TOTAL_NOTINSERVICE   /* 운휴                 		*/

		     , SUM(A.DEPOSIT_CASH)  AS DEPOSIT_CASH                                     /* 현금금액             		*/
		     , SUM(A.TOTAL_COUNT)   AS TOTAL_COUNT                                      /* 카드건수             		*/
		     , SUM(A.TOTAL_AMOUNT)  AS TOTAL_AMOUNT                                     /* 카드금액             		*/
		     , SUM(A.DEPOSIT_CASH) + SUM(A.TOTAL_AMOUNT) AS TOTAL_INCOME                /* 수입합계             		*/
--		     , (CASE WHEN (ISNULL(B1.TOTAL_SERVICE,0) + ISNULL(B2.TOTAL_SERVICE,0)) = 0
--		             THEN 0
--		             ELSE (SUM(A.DEPOSIT_CASH) + SUM(A.TOTAL_AMOUNT)) / (ISNULL(B1.TOTAL_SERVICE,0) + ISNULL(B2.TOTAL_SERVICE,0))
--		         END) AS AVG_PER_SERVICE                                                /* 대당평균             		*/
		     , (CASE WHEN ISNULL(B1.TOTAL_SERVICE,0) = 0
		             THEN 0
		             ELSE (SUM(A.DEPOSIT_CASH) + SUM(A.TOTAL_AMOUNT)) / ISNULL(B1.TOTAL_SERVICE,0)
		         END) AS AVG_PER_SERVICE                                                /* 대당평균             		*/
		     , '' AS REMARK                                                             /* 비고                 		*/
		  FROM (SELECT A.COMP_CODE                                              /* 법인코드             	*/                                            
		             , A.DIV_CODE                                               /* 사업장               	*/
		             , A.OFFICE_CODE                                            /* 영업소코드           	*/ 
		             , C.REF_CODE2 AS ROUTE_GROUP                               /* 노선그룹             	*/ 
		             , A.ROUTE_CODE                                             /* 노선코드             	*/
		             , A.VEHICLE_CODE                                           /* 차량코드             	*/
		             , ISNULL(A.DEPOSIT_CASH,0)         AS DEPOSIT_CASH         /* 현금금액             	*/
		             , ISNULL(B.TOTAL_COUNT ,0)         AS TOTAL_COUNT          /* 카드건수             	*/
		             , ISNULL(B.TOTAL_AMOUNT,0)         AS TOTAL_AMOUNT         /* 카드금액             	*/
	              FROM            GCH100T A WITH (NOLOCK)
                       LEFT  JOIN (SELECT COMP_CODE 
                                        , DIV_CODE
                                        , CALCULATE_DATE
                                        , ROUTE_CODE
                                        , VEHICLE_CODE
		                                , SUM(ISNULL(TOTAL_COUNT ,0)) AS TOTAL_COUNT          /* 카드건수             	*/
		                                , SUM(ISNULL(TOTAL_AMOUNT,0)) AS TOTAL_AMOUNT         /* 카드금액             	*/
                                     FROM GCD200T WITH (NOLOCK)
		                            WHERE COMP_CODE          = @CompCode
         		                      AND DIV_CODE           = @DivCode
                                      AND CALCULATE_DATE &gt;= @OperationDateFr
                                      AND CALCULATE_DATE &lt;= @OperationDateTo
		                              AND ((OFFICE_CODE      = @OfficeCode AND @OfficeCode != '') OR (@OfficeCode = ''))
		                              AND ((ROUTE_GROUP      = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                              AND ((ROUTE_CODE       = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
                                    GROUP BY COMP_CODE, DIV_CODE, CALCULATE_DATE, ROUTE_CODE, VEHICLE_CODE) B ON B.COMP_CODE      = A.COMP_CODE
                                                                                                             AND B.DIV_CODE       = A.DIV_CODE
                                                                                                             AND B.CALCULATE_DATE = A.DEPOSIT_DATE
                                                                                                             AND B.ROUTE_CODE     = A.ROUTE_CODE
                                                                                                             AND B.VEHICLE_CODE   = A.VEHICLE_CODE
                        LEFT JOIN BSA100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
						                                AND C.MAIN_CODE = 'GO16'
														AND C.SUB_CODE  = A.ROUTE_GROUP
		         WHERE A.COMP_CODE        = @CompCode
		           AND A.DIV_CODE         = @DivCode
		           AND A.DEPOSIT_DATE &gt;= @OperationDateFr
		           AND A.DEPOSIT_DATE &lt;= @OperationDateTo
		           AND ((A.OFFICE_CODE    = @OfficeCode AND @OfficeCode != '') OR (@OfficeCode = ''))
		           AND ((A.ROUTE_GROUP    = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		           AND ((A.ROUTE_CODE     = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
	            UNION ALL
	            SELECT A.COMP_CODE                                              /* (숨김) 법인코드      	*/                                            
		             , A.DIV_CODE                                               /* (숨김) 사업장        	*/
		             , A.OFFICE_CODE                                            /* (공통코드) 영업소코드    */
		             , A.ROUTE_GROUP                                            /* (공통코드) 노선그룹  	*/ 
		             , A.ROUTE_CODE                                             /* 노선코드             	*/
		             , A.VEHICLE_CODE                                           /* 차량코드             	*/
	                 , 0                                AS DEPOSIT_CASH         /* 현금금액             	*/
		             , ISNULL(A.TOTAL_COUNT   ,0)       AS TOTAL_COUNT          /* 카드건수             	*/
		             , ISNULL(A.TOTAL_AMOUNT  ,0)       AS TOTAL_AMOUNT         /* 카드금액             	*/
	              FROM            GCD200T A WITH (NOLOCK)
	                   LEFT  JOIN GCH100T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
	                                                     AND B.DIV_CODE       = A.DIV_CODE
	                                                     AND B.DEPOSIT_DATE   = A.CALCULATE_DATE
	                                                     AND B.ROUTE_CODE     = A.ROUTE_CODE
	                                                     AND B.VEHICLE_CODE   = A.VEHICLE_CODE
		         WHERE A.COMP_CODE          = @CompCode
	     		   AND A.DIV_CODE           = @DivCode
	               AND A.CALCULATE_DATE &gt;= @OperationDateFr
	               AND A.CALCULATE_DATE &lt;= @OperationDateTo
		           AND ((A.OFFICE_CODE      = @OfficeCode AND @OfficeCode != '') OR (@OfficeCode = ''))
		           AND ((A.ROUTE_GROUP      = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		           AND ((A.ROUTE_CODE       = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
	               AND B.COMP_CODE         IS NULL
	            UNION ALL   
                SELECT A.COMP_CODE                                              /* (숨김) 법인코드      	*/                                            
		             , A.DIV_CODE                                               /* (숨김) 사업장        	*/
		             , A.OFFICE_CODE                                            /* (공통코드) 영업소코드    */
 		             , A.ROUTE_GROUP                                            /* (공통코드) 노선그룹  	*/ 
		             , A.ROUTE_CODE                                             /* 노선코드             	*/
		             , A.VEHICLE_CODE                                           /* 차량코드             	*/
 		             , 0                                AS DEPOSIT_CASH         /* 현금금액             	*/
 		             , ISNULL(A.TOTAL_COUNT   ,0)       AS TOTAL_COUNT          /* 카드건수             	*/
		             , ISNULL(A.TOTAL_AMOUNT  ,0)       AS TOTAL_AMOUNT         /* 카드금액             	*/
                  FROM            GCD300T A WITH (NOLOCK)
		         WHERE A.COMP_CODE          = @CompCode
         		   AND A.DIV_CODE           = @DivCode
                   AND A.CALCULATE_DATE &gt;= @OperationDateFr
                   AND A.CALCULATE_DATE &lt;= @OperationDateTo) A
	           LEFT  JOIN (SELECT A.COMP_CODE                                              /* 법인코드             */                                            
		                        , A.DIV_CODE                                               /* 사업장               */
	       		                , A.OFFICE_CODE
		                        , A.ROUTE_CODE                                             /* 노선코드             */
		                        , COUNT(A.ROUTE_CODE)                                                  AS TOTAL_OPERATION
	                            
	                            , SUM(CASE WHEN ISNULL(A.DEPOSIT_CASH,0)      > 0   THEN 1 ELSE 0 END) AS TOTAL_SERVICE
	                            , SUM(CASE WHEN ISNULL(A.NOTINSERVICE_YN,'N') = 'Y' THEN 1 ELSE 0 END) AS TOTAL_NOTINSERVICE

--	                            , SUM(CASE WHEN ISNULL(A.NOTINSERVICE_YN,'N') = 'N' THEN 1 ELSE 0 END) AS TOTAL_SERVICE
--	                            , SUM(CASE WHEN ISNULL(A.NOTINSERVICE_YN,'N') = 'Y' THEN 1 ELSE 0 END) AS TOTAL_NOTINSERVICE
	                         FROM GCH100T A WITH (NOLOCK)
		                    WHERE A.COMP_CODE       = @CompCode
		                      AND A.DIV_CODE        = @DivCode
		           			  AND A.DEPOSIT_DATE   &gt;= @OperationDateFr
		                      AND A.DEPOSIT_DATE   &lt;= @OperationDateTo
	   		                  AND ((A.OFFICE_CODE   = @OfficeCode AND @OfficeCode != '') OR (@OfficeCode = ''))
		                      AND ((A.ROUTE_GROUP   = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                      AND ((A.ROUTE_CODE    = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
	                        GROUP BY A.COMP_CODE, A.DIV_CODE, A.OFFICE_CODE, A.ROUTE_CODE) B1 ON B1.COMP_CODE       = A.COMP_CODE
	                                                                                         AND B1.DIV_CODE        = A.DIV_CODE
	                                                                                         AND B1.ROUTE_CODE      = A.ROUTE_CODE 
	                                                                                         AND B1.OFFICE_CODE     = A.OFFICE_CODE 
	           LEFT  JOIN (SELECT A.COMP_CODE
		                        , A.DIV_CODE
	                            , A.OFFICE_CODE
		                        , A.ROUTE_CODE
		                        , COUNT(A.ROUTE_CODE)   AS TOTAL_OPERATION
	                            , COUNT(A.ROUTE_CODE)   AS TOTAL_SERVICE
	                            , 0                     AS TOTAL_NOTINSERVICE
	                         FROM            GCD200T A WITH (NOLOCK)
	                              LEFT  JOIN GCH100T B WITH (NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
	                                                                AND B.DIV_CODE       = A.DIV_CODE
	                                                                AND B.DEPOSIT_DATE   = A.CALCULATE_DATE
	                                                                AND B.ROUTE_CODE     = A.ROUTE_CODE
	                                                                AND B.VEHICLE_CODE   = A.VEHICLE_CODE
		                    WHERE A.COMP_CODE          = @CompCode
	     		              AND A.DIV_CODE           = @DivCode
	                          AND A.CALCULATE_DATE &gt;= @OperationDateFr
	                          AND A.CALCULATE_DATE &lt;= @OperationDateTo
		                      AND ((A.OFFICE_CODE      = @OfficeCode AND @OfficeCode != '') OR (@OfficeCode = ''))
		                      AND ((A.ROUTE_GROUP      = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                      AND ((A.ROUTE_CODE       = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
	                          AND B.COMP_CODE         IS NULL
	                        GROUP BY A.COMP_CODE, A.DIV_CODE, A.OFFICE_CODE, A.ROUTE_CODE) B2 ON B2.COMP_CODE      = A.COMP_CODE
	                                                                                         AND B2.DIV_CODE       = A.DIV_CODE
	                                                                                         AND B2.ROUTE_CODE     = A.ROUTE_CODE 
	                                                                                         AND B2.OFFICE_CODE    = A.OFFICE_CODE 
	            LEFT  JOIN GRT100T R WITH (NOLOCK) ON R.COMP_CODE      = A.COMP_CODE
		                                          AND R.DIV_CODE       = A.DIV_CODE
		                                          AND R.ROUTE_CODE     = A.ROUTE_CODE
				LEFT JOIN (SELECT COMP_CODE, SUB_CODE, CODE_NAME 
					         FROM BSA100T WITH (NOLOCK)
	                        WHERE COMP_CODE = @CompCode
	                          AND MAIN_CODE = 'GO16') C	ON A.COMP_CODE   = C.COMP_CODE
													   AND A.ROUTE_GROUP = C.SUB_CODE
		 GROUP BY A.COMP_CODE   , A.DIV_CODE        , A.OFFICE_CODE     , A.ROUTE_GROUP         , A.ROUTE_CODE
		        , R.ROUTE_NUM   , B1.TOTAL_OPERATION, B1.TOTAL_SERVICE  , B1.TOTAL_NOTINSERVICE
	            , C.CODE_NAME   , B2.TOTAL_OPERATION, B2.TOTAL_SERVICE  , B2.TOTAL_NOTINSERVICE
		 ORDER BY A.OFFICE_CODE , A.ROUTE_GROUP     , R.ROUTE_NUM
	</select>		

</mapper>