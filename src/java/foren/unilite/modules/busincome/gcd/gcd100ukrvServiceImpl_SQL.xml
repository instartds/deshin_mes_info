<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gcd100ukrvServiceImpl">
	<select id="gcd100ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* gcd100ukrvServiceImpl.selectList */
		SELECT  A.DIV_CODE
				, A.DIV_CODE
				, A.PAYMENT_DATE
				, A.OFFICE_CODE
				, A.VEHICLE_CODE
				, A.DRIVER_CODE
				, A.COMPANY_NAME
				, H.NAME AS DRIVER_NAME
				, V.VEHICLE_REGIST_NO
				, A.ADULT_COUNT
				, A.ADULT_AMOUNT
				, A.STUDENT_COUNT
				, A.STUDENT_AMOUNT
				, A.CHILD_COUNT
				, A.CHILD_AMOUNT
				, A.TOTAL_COUNT
				, A.TOTAL_AMOUNT
		FROM GCD100T A
		LEFT JOIN HUM100T H  ON H.COMP_CODE		= A.COMP_CODE
						    AND H.DIV_CODE		= A.DIV_CODE
						    AND H.PERSON_NUMB	= A.DRIVER_CODE
		LEFT JOIN GVE100T V  ON V.COMP_CODE 	= A.COMP_CODE
		                    AND V.DIV_CODE 		= A.DIV_CODE
		                    AND V.VEHICLE_CODE 	= A.VEHICLE_CODE 
		 WHERE A.COMP_CODE 			= #{S_COMP_CODE}
		   AND A.DIV_CODE 			= #{DIV_CODE}
		   AND A.PAYMENT_DATE 	= #{PAYMENT_DATE}
	
		  <if test="@foren.Ognl@isNotEmpty(DRIVER_CODE)">
		   AND A.DRIVER_CODE = #{DRIVER_CODE}
		  </if>	
		  <if test="@foren.Ognl@isNotEmpty(DRIVER_NAME)">
		   AND H.NAME LIKE '%'+ #{DRIVER_NAME} +'%'
		  </if>	

		  <if test="@foren.Ognl@isNotEmpty(VEHICLE_CODE)">
		   AND A.VEHICLE_CODE = #{VEHICLE_CODE}
		  </if> 
		  <if test="@foren.Ognl@isNotEmpty(VEHICLE_NAME)">
		   AND V.VEHICLE_NAME LIKE '%' + #{VEHICLE_NAME} + '%'
		  </if>
		 ORDER BY A.PAYMENT_DATE, A.VEHICLE_CODE, H.NAME
	</select>	
	<insert id="gcd100ukrvServiceImpl.insert" parameterType="Map">
		
		INSERT INTO GCD100T
		(
			COMP_CODE
			, DIV_CODE
			, PAYMENT_DATE
			, OFFICE_CODE
			, VEHICLE_CODE
			, DRIVER_CODE
			, COMPANY_NAME
			, DRIVER_NAME
			, VEHICLE_REGIST_NO
			, ADULT_COUNT
			, ADULT_AMOUNT
			, STUDENT_COUNT
			, STUDENT_AMOUNT
			, CHILD_COUNT
			, CHILD_AMOUNT
			, TOTAL_COUNT
			, TOTAL_AMOUNT

			, REMARK
			, INSERT_DB_USER
			, INSERT_DB_TIME
			, UPDATE_DB_USER
			, UPDATE_DB_TIME

		)
		VALUES
		(
			 #{S_COMP_CODE}
			, #{DIV_CODE}
			, #{PAYMENT_DATE}
			, #{OFFICE_CODE}
			, #{VEHICLE_CODE}
			, #{DRIVER_CODE}
			, #{COMPANY_NAME}
			, #{DRIVER_NAME}
			, #{VEHICLE_REGIST_NO}
			, #{ADULT_COUNT}
			, #{ADULT_AMOUNT}
			, #{STUDENT_COUNT}
			, #{STUDENT_AMOUNT}
			, #{CHILD_COUNT}
			, #{CHILD_AMOUNT}
			, #{TOTAL_COUNT}
			, #{TOTAL_AMOUNT}

			, #{REMARK}
			, #{S_USER_ID}
			, GETDATE()
			, #{S_USER_ID}
			, GETDATE()
		)
	</insert>
	<update id="gcd100ukrvServiceImpl.update" parameterType="Map">
		UPDATE GCD100T
		   SET   ADULT_COUNT	= #{ADULT_COUNT}
				,ADULT_AMOUNT	= #{ADULT_AMOUNT}
				,STUDENT_COUNT	= #{STUDENT_COUNT}
				,STUDENT_AMOUNT	= #{STUDENT_AMOUNT}
				,CHILD_COUNT	= #{CHILD_COUNT}
				,CHILD_AMOUNT	= #{CHILD_AMOUNT}
				,TOTAL_COUNT	= #{TOTAL_COUNT}
				,TOTAL_AMOUNT	= #{TOTAL_AMOUNT}
				,REMARK			= #{REMARK}
				,UPDATE_DB_USER = #{S_USER_ID}
				,UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE 		= #{S_COMP_CODE}
		   AND DIV_CODE 		= #{DIV_CODE}
		   AND OFFICE_CODE 		= #{OFFICE_CODE}
		   AND PAYMENT_DATE 	= #{PAYMENT_DATE}
		   AND DRIVER_CODE		= #{DRIVER_CODE}
		   AND VEHICLE_CODE  	= #{VEHICLE_CODE}	
	</update>
	<update id="gcd100ukrvServiceImpl.delete" parameterType="Map">
		DELETE FROM GCD100T
		WHERE COMP_CODE 	= #{S_COMP_CODE}
		  AND DIV_CODE 		= #{DIV_CODE}
		  AND OFFICE_CODE 	= #{OFFICE_CODE}
		  AND PAYMENT_DATE 	= #{PAYMENT_DATE}
		  AND DRIVER_CODE	= #{DRIVER_CODE}
		  AND VEHICLE_CODE  = #{VEHICLE_CODE}		  
	</update>
	<update id="gcd100ukrvServiceImpl.deleteExcel" parameterType="Map">
		DELETE FROM GCD100T
		WHERE COMP_CODE 	= #{S_COMP_CODE}
		  AND DIV_CODE 		= #{DIV_CODE}
		  AND PAYMENT_DATE 	= #{PAYMENT_DATE}	  
	</update>
	<insert id="gcd100ukrvServiceImpl.insertExcelGcd102t" parameterType="Map">
    	/*gcd100ukrvServiceImpl.insertExcelGcd102t*/
    	INSERT INTO GCD102T
		(_EXCEL_JOBID, _EXCEL_ROWNUM, _EXCEL_HAS_ERROR, _EXCEL_ERROR_MSG, 
		  PAYMENT_DATE,		DRIVER_CODE,		COMPANY_NAME,		DRIVER_NAME,			VEHICLE_REGIST_NO,
		  ADULT_COUNT,		ADULT_AMOUNT,		STUDENT_COUNT,		STUDENT_AMOUNT,		CHILD_COUNT,
		  CHILD_AMOUNT,		TOTAL_COUNT,		TOTAL_AMOUNT
		)
    	VALUES (
    		#{_EXCEL_JOBID}, #{_EXCEL_ROWNUM}, #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}, #{_EXCEL_ERROR,jdbcType=VARCHAR}, 
			#{PAYMENT_DATE},		#{DRIVER_CODE},		#{COMPANY_NAME},		#{DRIVER_NAME},			#{VEHICLE_REGIST_NO},
		  	#{ADULT_COUNT},			#{ADULT_AMOUNT},	#{STUDENT_COUNT},		#{STUDENT_AMOUNT},		#{CHILD_COUNT},
		  	#{CHILD_AMOUNT},		#{TOTAL_COUNT},		#{TOTAL_AMOUNT}
    	)
    </insert>  
    <select id="gcd100ukrvServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
		/*gcd100ukrvServiceImpl.selectExcelUploadSheet1*/
		
		SELECT A._EXCEL_ROWNUM
			 , A._EXCEL_HAS_ERROR
			 , A._EXCEL_ERROR_MSG
			 , B.SUB_CODE AS OFFICE_CODE
			 , A.PAYMENT_DATE
			 , V.VEHICLE_CODE
			 , ISNULL(H.PERSON_NUMB,'') AS DRIVER_CODE
			 , A.COMPANY_NAME
			 , ISNULL(A.DRIVER_NAME,'') AS DRIVER_NAME
			 , A.VEHICLE_REGIST_NO
			 , V.VEHICLE_CODE
			 , A.ADULT_COUNT
			 , A.ADULT_AMOUNT
			 , A.STUDENT_COUNT
			 , A.STUDENT_AMOUNT
			 , A.CHILD_COUNT
			 , A.CHILD_AMOUNT
			 , A.TOTAL_COUNT
			 , A.TOTAL_AMOUNT

		  FROM GCD102T A
			  LEFT JOIN BSA100T B ON  B.COMP_CODE = #{S_COMP_CODE}
							  	 AND B.MAIN_CODE = 'GO01'
							  	 AND B.REF_CODE1 =  A.COMPANY_NAME 
			  LEFT JOIN HUM100T H ON H.COMP_CODE = #{S_COMP_CODE}
							  	 AND H.DIV_CODE  = #{S_DIV_CODE}
							  	 AND H.PERSON_NUMB =  A.DRIVER_CODE 
			  LEFT JOIN GVE100T V ON V.COMP_CODE = #{S_COMP_CODE}
							  	 AND V.DIV_CODE  = #{S_DIV_CODE}
							  	 AND V.VEHICLE_REGIST_NO =  A.VEHICLE_REGIST_NO 
		 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		 ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
	</select>
	<update id="gcd100ukrvServiceImpl.excelValidate" >
		/*gcd100ukrvServiceImpl.excelValidate*/
		DELETE FROM GCD102T WHERE _EXCEL_JOBID = #{_EXCEL_JOBID} AND COMPANY_NAME = '교통사업자합계'
		DELETE FROM GCD102T WHERE _EXCEL_JOBID = #{_EXCEL_JOBID} AND DRIVER_NAME = '운전자합계'
		DELETE FROM GCD102T WHERE _EXCEL_JOBID = #{_EXCEL_JOBID} AND PAYMENT_DATE LIKE '%합계'
		
	  	UPDATE A
		   SET A._EXCEL_HAS_ERROR = (CASE WHEN B.SUB_CODE IS NULL OR ISNULL(A.COMPANY_NAME,'') = '' THEN 'Y' 
										  ELSE A._EXCEL_HAS_ERROR 
									 END),
				A._EXCEL_ERROR_MSG = (CASE WHEN B.SUB_CODE IS NULL OR ISNULL(A.COMPANY_NAME,'') = '' THEN ISNULL(_EXCEL_ERROR_MSG,'') + '영업소 정보가 존재하지 않습니다. ' 
										   ELSE A._EXCEL_ERROR_MSG END)
		  FROM GCD102T A 
		  LEFT JOIN BSA100T B ON  B.COMP_CODE = #{S_COMP_CODE}
							  AND B.MAIN_CODE = 'GO01'
							  AND B.REF_CODE1 =  A.COMPANY_NAME 
		  WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = (CASE WHEN (A.DRIVER_CODE != '000000' AND B.PERSON_NUMB IS NULL)  OR ISNULL(A.DRIVER_CODE,'') = ''  THEN 'Y' 
										  ELSE A._EXCEL_HAS_ERROR 
									 END),
				A._EXCEL_ERROR_MSG = (CASE WHEN (A.DRIVER_CODE != '000000' AND B.PERSON_NUMB IS NULL) OR ISNULL(A.DRIVER_CODE,'') = '' THEN ISNULL(_EXCEL_ERROR_MSG,'') + '기사 정보가 존재하지 않습니다. ' 
										   ELSE A._EXCEL_ERROR_MSG END)
		  FROM GCD102T A 
		  LEFT JOIN HUM100T B ON  B.COMP_CODE = #{S_COMP_CODE}
							  AND B.DIV_CODE  = #{S_DIV_CODE}
							  AND B.PERSON_NUMB =  A.DRIVER_CODE 
		  WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		  
		  UPDATE A
		   SET A._EXCEL_HAS_ERROR = (CASE WHEN B.VEHICLE_REGIST_NO IS NULL OR ISNULL(A.VEHICLE_REGIST_NO,'') = '' THEN 'Y' 
										  ELSE A._EXCEL_HAS_ERROR 
									 END),
				A._EXCEL_ERROR_MSG = (CASE WHEN B.VEHICLE_REGIST_NO IS NULL OR ISNULL(A.VEHICLE_REGIST_NO,'') = '' THEN ISNULL(_EXCEL_ERROR_MSG,'') + '차량 정보가 존재하지 않습니다. ' 
										   ELSE A._EXCEL_ERROR_MSG END)
		  FROM GCD102T A 
		  LEFT JOIN GVE100T B ON  B.COMP_CODE = #{S_COMP_CODE}
							  AND B.DIV_CODE  = #{S_DIV_CODE}
							  AND B.VEHICLE_REGIST_NO =  A.VEHICLE_REGIST_NO 
		  WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>
</mapper>