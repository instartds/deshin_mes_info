<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="grn100skrvServiceImpl">
	<select id="grn100skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		DECLARE @CompCode               NVARCHAR(10)    /* 법인코드     */
		      , @DivCode                NVARCHAR(10)    /* 사업장코드   */
		      , @OperationDateFr        NVARCHAR(08)    /* 운행일(시작) */
		      , @OperationDateTo        NVARCHAR(08)    /* 운행일(종료) */
		      , @RouteGroup             NVARCHAR(20)    /* 노선그룹     */
		      , @RouteCode              NVARCHAR(20)    /* 노선코드     */
		
		SET @CompCode        = #{S_COMP_CODE}
		SET @DivCode         = #{DIV_CODE}
		SET @OperationDateFr = #{OPERATION_DATE_FR}
		SET @OperationDateTo = #{OPERATION_DATE_TO}
		SET @RouteGroup      = #{ROUTE_GROUP}
		SET @RouteCode       = #{ROUTE_CODE}

		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.ROUTE_GROUP                                                /* 노선그룹                      */
		     , C.CODE_NAME AS ROUTE_GROUP_NAME								/* 노선그룹명                    */
		     , A.ROUTE_CODE                                                 /* 노선코드                      */
		     , A.ROUTE_NUM                                                  /* 노선번호                      */
		     , A.OPERATION_DATE                                             /* 운행일                        */ 
		     , A.F_VEHICLE_CODE                                             /* 첫차:차량코드                 */
		     , A.F_VEHICLE_NAME                                             /* 첫차:차량                     */
		     , A.F_VEHICLE_REGIST_NO                                        /* 첫차:차량번호                 */
		     , A.F_DRIVER_CODE                                              /* 첫차:기사코드                 */ 
		     , A.F_NAME                                                     /* 첫차:기사명                   */
		     , A.F_OPERATION_COUNT                                          /* 첫차:운행순번(숨김)-참조용    */
		     , A.F_RUN_COUNT                                                /* 첫차:운행회차(숨김)-참조용    */
		     , A.F_DEPARTURE_DATE                                           /* 첫차:출발일자                 */
		     , A.F_DEPARTURE_TIME                                           /* 첫차:출발시간                 */
		     , A.F_RUN_DEPARTURE_DATE                                       /* 첫차:실제출발일자             */
		     , A.F_RUN_DEPARTURE_TIME                                       /* 첫차:실제출발시간             */
		     , A.F_STOP_ARRIVAL_DATE                                        /* 첫차:첫번째정류장도착일자     */
		     , A.F_STOP_ARRIVAL_TIME                                        /* 첫차:첫번째정류장도착시간     */
		     , A.F_STOP_RUN_ARRIVAL_DATE                                    /* 첫차:첫번째정류장실제도착일자 */
		     , A.F_STOP_RUN_ARRIVAL_TIME                                    /* 첫차:첫번째정류장실제도착시간 */
		     , (CASE WHEN A.F_RUN_DELAY_TIME &lt;= 300
		             THEN '1'
		             ELSE '2'
		         END) AS F_RUN_EVAL_TYPE                                    /* 첫차:운행평가(GO39 1:정시출발/2:지연출발/3:정보없음) */
		     , B.L_VEHICLE_CODE                                             /* 막차:차량코드                 */
		     , B.L_VEHICLE_NAME                                             /* 막차:차량                 */
		     , B.L_VEHICLE_REGIST_NO                                        /* 막차:차량번호                 */
		     , B.L_DRIVER_CODE                                              /* 막차:기사코드                 */ 
		     , B.L_NAME                                                     /* 막차:기사명                   */
		     , B.L_OPERATION_COUNT                                          /* 막차:운행순번(숨김)-참조용    */
		     , B.L_RUN_COUNT                                                /* 막차:운행회차(숨김)-참조용    */
		     , B.L_DEPARTURE_DATE                                           /* 막차:출발일자                 */
		     , B.L_DEPARTURE_TIME                                           /* 막차:출발시간                 */
		     , B.L_RUN_DEPARTURE_DATE                                       /* 막차:실제출발일자             */
		     , B.L_RUN_DEPARTURE_TIME                                       /* 막차:실제출발시간             */
		     , B.L_STOP_ARRIVAL_DATE                                        /* 막차:첫번째정류장도착일자     */
		     , B.L_STOP_ARRIVAL_TIME                                        /* 막차:첫번째정류장도착시간     */
		     , B.L_STOP_RUN_ARRIVAL_DATE                                    /* 막차:첫번째정류장실제도착일자 */
		     , B.L_STOP_RUN_ARRIVAL_TIME                                    /* 막차:첫번째정류장실제도착시간 */
		     , (CASE WHEN B.L_RUN_DELAY_TIME &lt;= 300
		             THEN '1'
		             ELSE '2'
		         END) AS L_RUN_EVAL_TYPE                                    /* 막차:운행평가(GO39 1:정시출발/2:지연출발/3:정보없음) */
		  FROM (SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , A.ROUTE_GROUP                                                /* 노선그룹                      */
		             , A.ROUTE_CODE                                                 /* 노선코드                      */
		             , C.ROUTE_NUM                                                  /* 노선번호                      */
		             , A.OPERATION_DATE                                             /* 운행일                        */ 
		             , A.VEHICLE_CODE                   AS F_VEHICLE_CODE           /* 첫차:차량코드                 */
		             , ISNULL(D.VEHICLE_REGIST_NO,'')   AS F_VEHICLE_REGIST_NO      /* 첫차:차량번호                 */
		             , ISNULL(D.VEHICLE_NAME,'')		AS F_VEHICLE_NAME			/* 첫차:차량                    */
		             , A.DRIVER_CODE                    AS F_DRIVER_CODE            /* 첫차:기사코드                 */ 
		             , ISNULL(E.NAME,'')                AS F_NAME                   /* 첫차:기사명                   */
		             , A.OPERATION_COUNT                AS F_OPERATION_COUNT        /* 첫차:운행순번(숨김)-참조용    */
		             , A.RUN_COUNT                      AS F_RUN_COUNT              /* 첫차:운행회차(숨김)-참조용    */
		             , A.DEPARTURE_DATE                 AS F_DEPARTURE_DATE         /* 첫차:출발일자                 */
		             , A.DEPARTURE_TIME                 AS F_DEPARTURE_TIME         /* 첫차:출발시간                 */
		             , A.RUN_DEPARTURE_DATE             AS F_RUN_DEPARTURE_DATE     /* 첫차:실제출발일자             */
		             , A.RUN_DEPARTURE_TIME             AS F_RUN_DEPARTURE_TIME     /* 첫차:실제출발시간             */
		             , A.STOP_ARRIVAL_DATE              AS F_STOP_ARRIVAL_DATE      /* 첫차:첫번째정류장도착일자     */
		             , A.STOP_ARRIVAL_TIME              AS F_STOP_ARRIVAL_TIME      /* 첫차:첫번째정류장도착시간     */
		             , A.STOP_RUN_ARRIVAL_DATE          AS F_STOP_RUN_ARRIVAL_DATE  /* 첫차:첫번째정류장실제도착일자 */
		             , A.STOP_RUN_ARRIVAL_TIME          AS F_STOP_RUN_ARRIVAL_TIME  /* 첫차:첫번째정류장실제도착시간 */
		             , (CASE WHEN ISDATE(A.STOP_ARRIVAL_DATE     + ' ' + SUBSTRING(A.STOP_ARRIVAL_TIME    ,1,2) + ':' + SUBSTRING(A.STOP_ARRIVAL_TIME    ,3,2) + ':' + '00'                                  ) = 1
		                      AND ISDATE(A.STOP_RUN_ARRIVAL_DATE + ' ' + SUBSTRING(A.STOP_RUN_ARRIVAL_TIME,1,2) + ':' + SUBSTRING(A.STOP_RUN_ARRIVAL_TIME,3,2) + ':' + SUBSTRING(A.STOP_RUN_ARRIVAL_TIME,5,2)) = 1
		                     THEN DATEDIFF(SS, CONVERT(DATETIME, A.STOP_ARRIVAL_DATE     + ' ' + SUBSTRING(A.STOP_ARRIVAL_TIME    ,1,2) + ':' + SUBSTRING(A.STOP_ARRIVAL_TIME    ,3,2) + ':' + '00'                                  )
		                                     , CONVERT(DATETIME, A.STOP_RUN_ARRIVAL_DATE + ' ' + SUBSTRING(A.STOP_RUN_ARRIVAL_TIME,1,2) + ':' + SUBSTRING(A.STOP_RUN_ARRIVAL_TIME,3,2) + ':' + SUBSTRING(A.STOP_RUN_ARRIVAL_TIME,5,2)))
		                     ELSE 0
		                 END) AS F_RUN_DELAY_TIME                                   /* 첫차:지연시간                 */
		          FROM GOP300T A WITH (NOLOCK)
		               INNER JOIN (SELECT COMP_CODE
		                                , DIV_CODE
		                                , OPERATION_DATE
		                                , ROUTE_CODE
		                                , MIN(RIGHT('00'+ RUN_COUNT,2) + RIGHT('00'+ OPERATION_COUNT,2)) AS FIRST_COUNT
		                                , MAX(RIGHT('00'+ RUN_COUNT,2) + RIGHT('00'+ OPERATION_COUNT,2)) AS LAST_COUNT
		                             FROM GOP300T WITH (NOLOCK)
		                            WHERE COMP_CODE       = @CompCode
		                              AND DIV_CODE        = @DivCode
		                              AND OPERATION_DATE &gt;= @OperationDateFr
		                              AND OPERATION_DATE &lt;= @OperationDateTo
		                              AND ((ROUTE_GROUP   = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                              AND ((ROUTE_CODE    = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		                              AND OTHER_VEHICLE_YN = 'N'
		                              AND NOTINSERVICE_YN  = 'N'
		                            GROUP BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE) B ON A.COMP_CODE       = B.COMP_CODE
		                                                                                       AND A.DIV_CODE        = B.DIV_CODE
		                                                                                       AND A.OPERATION_DATE  = B.OPERATION_DATE
		                                                                                       AND A.ROUTE_CODE      = B.ROUTE_CODE 
		                                                                                       AND A.OPERATION_COUNT = CONVERT(NVARCHAR(20),CONVERT(NUMERIC(10,0),SUBSTRING(B.FIRST_COUNT,3,2)))
		                                                                                       AND A.RUN_COUNT       = CONVERT(NVARCHAR(20),CONVERT(NUMERIC(10,0),SUBSTRING(B.FIRST_COUNT,1,2)))
		               LEFT  JOIN GRT100T C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                                 AND C.DIV_CODE     = A.DIV_CODE
		                                                 AND C.ROUTE_CODE   = A.ROUTE_CODE
		               LEFT  JOIN GVE100T D WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                                 AND D.DIV_CODE     = A.DIV_CODE
		                                                 AND D.VEHICLE_CODE = A.VEHICLE_CODE
		               LEFT  JOIN HUM100T E WITH (NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
		                                                 AND E.DIV_CODE     = A.DIV_CODE
		                                                 AND E.PERSON_NUMB  = A.DRIVER_CODE
		         WHERE A.COMP_CODE        = @CompCode
		           AND A.DIV_CODE         = @DivCode
		           AND A.OPERATION_DATE  &gt;= @OperationDateFr
		           AND A.OPERATION_DATE  &lt;= @OperationDateTo
		           AND ((A.ROUTE_GROUP    = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		           AND ((A.ROUTE_CODE     = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		           AND A.OTHER_VEHICLE_YN = 'N'
		           AND A.NOTINSERVICE_YN  = 'N') A
		       LEFT JOIN 
		       (SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , A.ROUTE_GROUP                                                /* 노선그룹                      */
		             , A.ROUTE_CODE                                                 /* 노선코드                      */
		             , C.ROUTE_NUM                                                  /* 노선번호                      */
		             , A.OPERATION_DATE                                             /* 운행일                        */ 
		             , A.VEHICLE_CODE                   AS L_VEHICLE_CODE           /* 막차:차량코드                 */
		             , ISNULL(D.VEHICLE_REGIST_NO,'')   AS L_VEHICLE_REGIST_NO      /* 막차:차량번호                 */
		             , ISNULL(D.VEHICLE_NAME,'')		AS L_VEHICLE_NAME			/* 막차:차량                    */
		             , A.DRIVER_CODE                    AS L_DRIVER_CODE            /* 막차:기사코드                 */ 
		             , ISNULL(E.NAME,'')                AS L_NAME                   /* 막차:기사명                   */
		             , A.OPERATION_COUNT                AS L_OPERATION_COUNT        /* 막차:운행순번(숨김)-참조용    */
		             , A.RUN_COUNT                      AS L_RUN_COUNT              /* 막차:운행회차(숨김)-참조용    */
		             , A.DEPARTURE_DATE                 AS L_DEPARTURE_DATE         /* 막차:출발일자                 */
		             , A.DEPARTURE_TIME                 AS L_DEPARTURE_TIME         /* 막차:출발시간                 */
		             , A.RUN_DEPARTURE_DATE             AS L_RUN_DEPARTURE_DATE     /* 막차:실제출발일자             */
		             , A.RUN_DEPARTURE_TIME             AS L_RUN_DEPARTURE_TIME     /* 막차:실제출발시간             */
		             , A.STOP_ARRIVAL_DATE              AS L_STOP_ARRIVAL_DATE      /* 막차:첫번째정류장도착일자     */
		             , A.STOP_ARRIVAL_TIME              AS L_STOP_ARRIVAL_TIME      /* 막차:첫번째정류장도착시간     */
		             , A.STOP_RUN_ARRIVAL_DATE          AS L_STOP_RUN_ARRIVAL_DATE  /* 막차:첫번째정류장실제도착일자 */
		             , A.STOP_RUN_ARRIVAL_TIME          AS L_STOP_RUN_ARRIVAL_TIME  /* 막차:첫번째정류장실제도착시간 */
		             , (CASE WHEN ISDATE(A.STOP_ARRIVAL_DATE     + ' ' + SUBSTRING(A.STOP_ARRIVAL_TIME    ,1,2) + ':' + SUBSTRING(A.STOP_ARRIVAL_TIME    ,3,2) + ':' + '00'                                  ) = 1
		                      AND ISDATE(A.STOP_RUN_ARRIVAL_DATE + ' ' + SUBSTRING(A.STOP_RUN_ARRIVAL_TIME,1,2) + ':' + SUBSTRING(A.STOP_RUN_ARRIVAL_TIME,3,2) + ':' + SUBSTRING(A.STOP_RUN_ARRIVAL_TIME,5,2)) = 1
		                     THEN DATEDIFF(SS, CONVERT(DATETIME, A.STOP_ARRIVAL_DATE     + ' ' + SUBSTRING(A.STOP_ARRIVAL_TIME    ,1,2) + ':' + SUBSTRING(A.STOP_ARRIVAL_TIME    ,3,2) + ':' + '00'                                  )
		                                     , CONVERT(DATETIME, A.STOP_RUN_ARRIVAL_DATE + ' ' + SUBSTRING(A.STOP_RUN_ARRIVAL_TIME,1,2) + ':' + SUBSTRING(A.STOP_RUN_ARRIVAL_TIME,3,2) + ':' + SUBSTRING(A.STOP_RUN_ARRIVAL_TIME,5,2)))
		                     ELSE 0
		                 END) AS L_RUN_DELAY_TIME                                   /* 첫차:지연시간                 */
		          FROM GOP300T A WITH (NOLOCK)
		               INNER JOIN (SELECT COMP_CODE
		                                , DIV_CODE
		                                , OPERATION_DATE
		                                , ROUTE_CODE
		                                , MIN(RIGHT('00'+ RUN_COUNT,2) + RIGHT('00'+ OPERATION_COUNT,2)) AS FIRST_COUNT
		                                , MAX(RIGHT('00'+ RUN_COUNT,2) + RIGHT('00'+ OPERATION_COUNT,2)) AS LAST_COUNT
		                             FROM GOP300T WITH (NOLOCK)
		                            WHERE COMP_CODE       = @CompCode
		                              AND DIV_CODE        = @DivCode
		                              AND OPERATION_DATE &gt;= @OperationDateFr
		                              AND OPERATION_DATE &lt;= @OperationDateTo
		                              AND ((ROUTE_GROUP   = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		                              AND ((ROUTE_CODE    = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		                              AND OTHER_VEHICLE_YN = 'N'
		                              AND NOTINSERVICE_YN  = 'N'
		                            GROUP BY COMP_CODE, DIV_CODE, OPERATION_DATE, ROUTE_CODE) B ON A.COMP_CODE       = B.COMP_CODE
		                                                                                       AND A.DIV_CODE        = B.DIV_CODE
		                                                                                       AND A.OPERATION_DATE  = B.OPERATION_DATE
		                                                                                       AND A.ROUTE_CODE      = B.ROUTE_CODE 
		                                                                                       AND A.OPERATION_COUNT = CONVERT(NVARCHAR(20),CONVERT(NUMERIC(10,0),SUBSTRING(B.LAST_COUNT,3,2)))
		                                                                                       AND A.RUN_COUNT       = CONVERT(NVARCHAR(20),CONVERT(NUMERIC(10,0),SUBSTRING(B.LAST_COUNT,1,2)))
		               LEFT  JOIN GRT100T C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                                 AND C.DIV_CODE     = A.DIV_CODE
		                                                 AND C.ROUTE_CODE   = A.ROUTE_CODE
		               LEFT  JOIN GVE100T D WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                                 AND D.DIV_CODE     = A.DIV_CODE
		                                                 AND D.VEHICLE_CODE = A.VEHICLE_CODE
		               LEFT  JOIN HUM100T E WITH (NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
		                                                 AND E.DIV_CODE     = A.DIV_CODE
		                                                 AND E.PERSON_NUMB  = A.DRIVER_CODE
		         WHERE A.COMP_CODE        = @CompCode
		           AND A.DIV_CODE         = @DivCode
		           AND A.OPERATION_DATE  &gt;= @OperationDateFr
		           AND A.OPERATION_DATE  &lt;= @OperationDateTo
		           AND ((A.ROUTE_GROUP    = @RouteGroup AND @RouteGroup != '') OR (@RouteGroup = ''))
		           AND ((A.ROUTE_CODE     = @RouteCode  AND @RouteCode  != '') OR (@RouteCode  = ''))
		           AND A.OTHER_VEHICLE_YN = 'N'
		           AND A.NOTINSERVICE_YN  = 'N') B ON B.COMP_CODE       = A.COMP_CODE
		                                          AND B.DIV_CODE        = A.DIV_CODE
		                                          AND B.OPERATION_DATE  = A.OPERATION_DATE
		                                          AND B.ROUTE_CODE      = A.ROUTE_CODE 
				LEFT JOIN (
					SELECT SUB_CODE, CODE_NAME
					FROM   BSA100T
					WHERE  COMP_CODE        = @CompCode
					  AND  MAIN_CODE ='GO16'
				) C ON  C.SUB_CODE = A.ROUTE_GROUP
		 ORDER BY A.COMP_CODE, A.DIV_CODE, A.ROUTE_GROUP, A.ROUTE_NUM , A.OPERATION_DATE

	</select>
</mapper>