<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_hbs211ukr_sdcService">
	
	<select id="s_hbs211ukr_sdcService.selectDetailList" parameterType="Map" resultType="rMap">
		--s_hbs211ukr_sdcService.selectDetailList
		SELECT COMP_CODE
		     , PAY_GRADE_YYYY
		     , JOB_CODE
		     , WAGES_CODE
		     , WAGES_I
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		 FROM HBS211T
		WHERE COMP_CODE      = #{S_COMP_CODE}
		  AND PAY_GRADE_YYYY = #{BASE_YEARS}
	</select>

	<update id="s_hbs211ukr_sdcService.insertDetail" parameterType="Map">		
		--s_hbs211ukr_sdcService.insertDetail
		IF EXISTS (
					SELECT TOP 1 1 
					  FROM HBS211T WITH (NOLOCK)
					 WHERE COMP_CODE      = #{S_COMP_CODE}
					   AND PAY_GRADE_YYYY = #{PAY_GRADE_YYYY}
					   AND JOB_CODE       = #{JOB_CODE}
					   AND WAGES_CODE     = #{WAGES_CODE}
				  )
			BEGIN
				UPDATE HBS211T
				   SET WAGES_I        = #{WAGES_I}	     
				     , UPDATE_DB_USER = #{S_USER_ID}
				     , UPDATE_DB_TIME = GETDATE()
				     
				 WHERE COMP_CODE       = #{S_COMP_CODE}
				   AND PAY_GRADE_YYYY  = #{PAY_GRADE_YYYY}
				   AND JOB_CODE 	   = #{JOB_CODE}
				   AND WAGES_CODE      = #{WAGES_CODE}
			END
		ELSE
			BEGIN
				INSERT INTO HBS211T
				     ( COMP_CODE
				     , PAY_GRADE_YYYY
				     , JOB_CODE
				     , WAGES_CODE
				     , WAGES_I
				     , INSERT_DB_USER
				     , INSERT_DB_TIME
				     , UPDATE_DB_USER
				     , UPDATE_DB_TIME
				     ) 
				VALUES
				     ( #{S_COMP_CODE}
				     , #{PAY_GRADE_YYYY}
				     , #{JOB_CODE}
				     , #{WAGES_CODE}
				     , #{WAGES_I}
				     , #{S_USER_ID}
				     , GETDATE()
				     , #{S_USER_ID}
				     , GETDATE()
				     )
			END

	</update>
	
	<update id="s_hbs211ukr_sdcService.updateDetail" parameterType="Map">
		--s_hbs211ukr_sdcService.updateDetail
		UPDATE HBS211T
		   SET WAGES_I        = #{WAGES_I}	     
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND PAY_GRADE_YYYY  = #{PAY_GRADE_YYYY}
		   AND JOB_CODE 	   = #{JOB_CODE}
		   AND WAGES_CODE      = #{WAGES_CODE}
	</update>
	
	<delete id="s_hbs211ukr_sdcService.deleteDetail" parameterType="Map">
		--s_hbs211ukr_sdcService.deleteDetail
		BEGIN
			DELETE FROM HBS211T 
			 WHERE COMP_CODE    	= #{S_COMP_CODE}
			   AND PAY_GRADE_YYYY   = #{PAY_GRADE_YYYY}
			   AND JOB_CODE 		= #{JOB_CODE}
			   AND WAGES_CODE       = #{WAGES_CODE} 
		END		
	</delete>
	
 	<select id="s_hbs211ukr_sdcService.selectExcelUploadSheet" parameterType="Map" resultType="rMap">
	    /* s_hbs211ukr_sdcService.selectExcelUploadSheet */
		SELECT 
		       A._EXCEL_JOBID
		     , A._EXCEL_ROWNUM
		     
			 , CASE WHEN ISNULL(M.SUB_CODE, '') = ''
			        THEN 'Y'
				END AS _EXCEL_HAS_ERROR
	
			 , CASE WHEN ISNULL(M.SUB_CODE, '') = ''
			        THEN '직무명을 확인하십시오.'
				END AS _EXCEL_ERROR_MSG
		     
		     , A.COMP_CODE
		     , A.PAY_GRADE_YYYY
		     , M.SUB_CODE  AS JOB_CODE
		     , ISNULL(M.CODE_NAME, A.JOB_CODE) AS JOB_NAME
		     , A.WAGES_CODE
		     , A.WAGES_I
		 FROM    L_HBS211T A WITH (NOLOCK) 
		 LEFT JOIN BSA100T M WITH (NOLOCK) ON M.COMP_CODE   = #{S_COMP_CODE}
	                                      AND M.MAIN_CODE   = 'H008'
										  AND M.CODE_NAME   = A.JOB_CODE
	
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
	</select>
	
	<!-- Excel Upload-->
    <update id="s_hbs211ukr_sdcService.insertExcelUpload" parameterType="Map">
        /* s_hbs211ukr_sdcService.insertExcelUpload*/
        INSERT INTO L_HBS211T
            (
               _EXCEL_JOBID 
             , _EXCEL_ROWNUM 
             , _EXCEL_HAS_ERROR 
             , _EXCEL_ERROR_MSG
             
             , COMP_CODE
             , PAY_GRADE_YYYY
             , JOB_CODE
             , WAGES_CODE
             , WAGES_I
          
            
             , INSERT_DB_USER
             , INSERT_DB_TIME
        )
        VALUES (
               #{_EXCEL_JOBID} 
             , #{_EXCEL_ROWNUM} 
             , #{_EXCEL_HAS_ERROR ,jdbcType=VARCHAR} 
             , #{_EXCEL_ERROR     ,jdbcType=VARCHAR}
                  
             , #{S_COMP_CODE}
             , #{PAY_GRADE_YYYY}
             , #{JOB_CODE}
             , 'BSE'
             , #{WAGES_I}
                       
             , #{S_USER_ID}
             , GETDATE()
        )
    </update>
    
    <!-- 임시 테이블에 insert된 데이터 조회 --> 
    <select id="s_hbs211ukr_sdcService.getData" parameterType="Map" resultType="rMap">
    	--s_hbs211ukr_sdcService.getData
        SELECT  * FROM L_HBS211T WITH(NOLOCK)
         WHERE _EXCEL_JOBID  = #{_EXCEL_JOBID}
    </select>
</mapper>