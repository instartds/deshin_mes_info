<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_hpa902rkr_sdcServiceImpl">
	
	<select id="s_hpa902rkr_sdcServiceImpl.selectSupplyList" parameterType="Map" resultType="rMap">
		--s_hpa902rkr_sdcServiceImpl.selectSupplyList
		SELECT TEMPC_01		AS CHOICE
			 , WAGES_CODE
			 , WAGES_NAME
		  FROM HBS300T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND USE_YN	 = 'Y'
	</select>

	<select id="s_hpa902rkr_sdcServiceImpl.selectDeductList" parameterType="Map" resultType="rMap">
		--s_hpa902rkr_sdcServiceImpl.selectDeductList
		SELECT TEMPC_01		AS CHOICE
			 , SUB_CODE		AS DEDUCT_CODE
			 , CODE_NAME	AS DEDUCT_NAME
		  FROM BSA100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'H034'
		   AND SUB_CODE != '$'
		   AND USE_YN	 = 'Y'
	</select>

	<update id="s_hpa902rkr_sdcServiceImpl.updateSupplyListByCurrMonth" parameterType="Map">
		--s_hpa902rkr_sdcServiceImpl.updateCurrMonthSupplyList
		BEGIN
			DECLARE	@COMP_CODE	NVARCHAR(08),
					@PAY_YYYYMM	NVARCHAR(06),
					@SUPP_TYPE	NVARCHAR(01)
		
			SET @COMP_CODE	= #{S_COMP_CODE}
			SET @PAY_YYYYMM	= #{PAY_YYYYMM}
			SET @SUPP_TYPE	= #{SUPP_TYPE}
		
			UPDATE HBS300T
			   SET TEMPC_01  = '1'
			 WHERE COMP_CODE = @COMP_CODE
			   AND USE_YN	 = 'Y'
			   AND WAGES_CODE IN (	SELECT DISTINCT
										   WAGES_CODE
									  FROM HPA300T
									 WHERE COMP_CODE  = @COMP_CODE
									   AND PAY_YYYYMM = @PAY_YYYYMM
									   AND SUPP_TYPE  = @SUPP_TYPE
									   AND AMOUNT_I  != 0	)
		
			UPDATE HBS300T
			   SET TEMPC_01  = '0'
			 WHERE COMP_CODE = @COMP_CODE
			   AND USE_YN	 = 'Y'
			   AND WAGES_CODE NOT IN (	SELECT DISTINCT
											   WAGES_CODE
										  FROM HPA300T
										 WHERE COMP_CODE  = @COMP_CODE
										   AND PAY_YYYYMM = @PAY_YYYYMM
										   AND SUPP_TYPE  = @SUPP_TYPE
										   AND AMOUNT_I  != 0	)
		END
	</update>

	<update id="s_hpa902rkr_sdcServiceImpl.updateDeductListByCurrMonth" parameterType="Map">
		--s_hpa902rkr_sdcServiceImpl.updateCurrMonthDeductList
		BEGIN
			DECLARE	@COMP_CODE	NVARCHAR(08),
					@PAY_YYYYMM	NVARCHAR(06),
					@SUPP_TYPE	NVARCHAR(01)
		
			SET @COMP_CODE	= #{S_COMP_CODE}
			SET @PAY_YYYYMM	= #{PAY_YYYYMM}
			SET @SUPP_TYPE	= #{SUPP_TYPE}
		
			UPDATE BSA100T
			   SET TEMPC_01  = '1'
			 WHERE COMP_CODE = @COMP_CODE
			   AND MAIN_CODE = 'H034'
			   AND SUB_CODE != '$'
			   AND USE_YN	 = 'Y'
			   AND SUB_CODE IN (	SELECT DISTINCT
										   DED_CODE
									  FROM HPA400T
									 WHERE COMP_CODE 	 = @COMP_CODE
									   AND PAY_YYYYMM	 = @PAY_YYYYMM
									   AND SUPP_TYPE	 = @SUPP_TYPE
									   AND DED_AMOUNT_I != 0	)
		
			UPDATE BSA100T
			   SET TEMPC_01  = '0'
			 WHERE COMP_CODE = @COMP_CODE
			   AND MAIN_CODE = 'H034'
			   AND SUB_CODE != '$'
			   AND USE_YN	 = 'Y'
			   AND SUB_CODE NOT IN (	SELECT DISTINCT
											   DED_CODE
										  FROM HPA400T
										 WHERE COMP_CODE	 = @COMP_CODE
										   AND PAY_YYYYMM	 = @PAY_YYYYMM
										   AND SUPP_TYPE	 = @SUPP_TYPE
										   AND DED_AMOUNT_I != 0	)
		END
	</update>

	<update id="s_hpa902rkr_sdcServiceImpl.updateSupplyItem" parameterType="Map">
		--s_hpa902rkr_sdcServiceImpl.updateSupplyItem
		UPDATE HBS300T
		   SET TEMPC_01		= #{CHOICE}
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND WAGES_CODE	= #{WAGES_CODE}
		   AND USE_YN		= 'Y'
	</update>
	
	<update id="s_hpa902rkr_sdcServiceImpl.updateDeductItem" parameterType="Map">
		--s_hpa902rkr_sdcServiceImpl.updateDeductItem
		UPDATE BSA100T
		   SET TEMPC_01		= #{CHOICE}
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND MAIN_CODE	= 'H034'
		   AND SUB_CODE		= #{DEDUCT_CODE}
		   AND USE_YN		= 'Y'
	</update>
	
	<select id="s_hpa902rkr_sdcServiceImpl.selectPrintList" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE		NVARCHAR(08),
				@DIV_CODE		NVARCHAR(08),
				@PAY_YYYYMM		NVARCHAR(06),
				@SUPP_TYPE		NVARCHAR(01)
		
		SET @COMP_CODE		= #{S_COMP_CODE}
		SET @DIV_CODE		= #{DIV_CODE}
		SET @PAY_YYYYMM		= #{PAY_YYYYMM}
		SET @SUPP_TYPE		= #{SUPP_TYPE}
		
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.PAY_YYYYMM
			 , A.PERSON_NUMB
			 , C.NAME
			 , A.SUPP_TYPE
			 --, A.DEPT_CODE
			 --, A.DEPT_NAME
			 , D.COST_POOL_CODE	AS DEPT_CODE
			 , D.COST_POOL_NAME	AS DEPT_NAME
			 , C.JOIN_DATE
			 , CASE WHEN CHARINDEX('임금피크제', C.PAY_GRADE_01) > 0 THEN SUBSTRING(C.PAY_GRADE_01, 1, 4) ELSE C.PAY_GRADE_01 END	AS PAY_GRADE_01
			 , C.PAY_GRADE_02
			 , A.PAY_CODE		--	급여지급방식
			 , A.PAY_PROV_FLAG	--	지급차수
			 , A.PAY_GUBUN		--	고용형태
			 , A.EMPLOY_TYPE	--	사원구분
								--	사원그룹은 뭐지
			 , A.COST_KIND		--	COST POOL
			 , C.AFFIL_CODE		--	직렬
			 , A.SUPP_TOTAL_I
			 , A.DED_TOTAL_I
			 , A.REAL_AMOUNT_I
			 , MAX(B.WORK_DAY)	AS WORK_DAY
			 , MAX(B.W01)		AS W01
			 , MAX(B.W02)		AS W02
			 , MAX(B.W03)		AS W03
			 , MAX(B.W04)		AS W04
			 , MAX(B.W05)		AS W05
			 , MAX(B.W06)		AS W06
			 , MAX(B.W07)		AS W07
			 , MAX(B.W08)		AS W08
			 , MAX(B.W09)		AS W09
			 , MAX(B.W10)		AS W10
			 , MAX(B.W11)		AS W11
			 , MAX(B.W12)		AS W12
			 , MAX(B.W13)		AS W13
			 , MAX(B.W14)		AS W14
			 , MAX(B.S01)		AS S01
			 , MAX(B.S02)		AS S02
			 , MAX(B.S03)		AS S03
			 , MAX(B.S04)		AS S04
			 , MAX(B.S05)		AS S05
			 , MAX(B.S06)		AS S06
			 , MAX(B.S07)		AS S07
			 , MAX(B.S08)		AS S08
			 , MAX(B.S09)		AS S09
			 , MAX(B.S10)		AS S10
			 , MAX(B.S11)		AS S11
			 , MAX(B.S12)		AS S12
			 , MAX(B.S13)		AS S13
			 , MAX(B.S14)		AS S14
			 , MAX(B.S15)		AS S15
			 , MAX(B.S16)		AS S16
			 , MAX(B.S17)		AS S17
			 , MAX(B.S18)		AS S18
			 , MAX(B.S19)		AS S19
			 , MAX(B.S20)		AS S20
			 , MAX(B.S21)		AS S21
			 , MAX(B.S22)		AS S22
			 , MAX(B.S23)		AS S23
			 , MAX(B.S24)		AS S24
			 , MAX(B.S25)		AS S25
			 , MAX(B.S26)		AS S26
			 , MAX(B.S27)		AS S27
			 , MAX(B.S28)		AS S28
			 , MAX(B.S29)		AS S29
			 , MAX(B.S30)		AS S30
			 , MAX(B.SUPP_TOT)	AS SUPP_TOT
			 , MAX(B.D01)		AS D01
			 , MAX(B.D02)		AS D02
			 , MAX(B.D03)		AS D03
			 , MAX(B.D04)		AS D04
			 , MAX(B.D05)		AS D05
			 , MAX(B.D06)		AS D06
			 , MAX(B.D07)		AS D07
			 , MAX(B.D08)		AS D08
			 , MAX(B.D09)		AS D09
			 , MAX(B.D10)		AS D10
			 , MAX(B.D11)		AS D11
			 , MAX(B.D12)		AS D12
			 , MAX(B.D13)		AS D13
			 , MAX(B.D14)		AS D14
			 , MAX(B.D15)		AS D15
			 , MAX(B.D16)		AS D16
			 , MAX(B.D17)		AS D17
			 , MAX(B.D18)		AS D18
			 , MAX(B.D19)		AS D19
			 , MAX(B.D20)		AS D20
			 , MAX(B.DED_TOT)	AS DED_TOT
			 , MAX(B.SUPP_TOT) - MAX(B.DED_TOT)	AS REAL_AMOUNT
		  FROM HPA600T A
				LEFT OUTER JOIN HUM100T C
							 ON A.COMP_CODE = C.COMP_CODE
							AND A.DIV_CODE = C.DIV_CODE
							AND A.PERSON_NUMB = C.PERSON_NUMB
				LEFT OUTER JOIN	CBM700T D WITH (NOLOCK)
							 ON A.COMP_CODE	= D.COMP_CODE
							AND A.COST_KIND	= D.COST_POOL_CODE
				LEFT OUTER JOIN (
									SELECT B.COMP_CODE
										 , B.DUTY_YYYYMM														AS PAY_YYYYMM
										 , B.PERSON_NUMB
										 , C.WORK_DAY
										 , SUM(CASE WHEN A.SEQ =  1 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W01
										 , SUM(CASE WHEN A.SEQ =  2 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W02
										 , SUM(CASE WHEN A.SEQ =  3 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W03
										 , SUM(CASE WHEN A.SEQ =  4 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W04
										 , SUM(CASE WHEN A.SEQ =  5 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W05
										 , SUM(CASE WHEN A.SEQ =  6 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W06
										 , SUM(CASE WHEN A.SEQ =  7 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W07
										 , SUM(CASE WHEN A.SEQ =  8 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W08
										 , SUM(CASE WHEN A.SEQ =  9 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W09
										 , SUM(CASE WHEN A.SEQ = 10 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W10
										 , SUM(CASE WHEN A.SEQ = 11 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W11
										 , SUM(CASE WHEN A.SEQ = 12 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W12
										 , SUM(CASE WHEN A.SEQ = 13 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W13
										 , SUM(CASE WHEN A.SEQ = 14 THEN B.DUTY_NUM + B.DUTY_TIME ELSE 0 END)	AS W14
										 , NULL																	AS S01
										 , NULL																	AS S02
										 , NULL																	AS S03
										 , NULL																	AS S04
										 , NULL																	AS S05
										 , NULL																	AS S06
										 , NULL																	AS S07
										 , NULL																	AS S08
										 , NULL																	AS S09
										 , NULL																	AS S10
										 , NULL																	AS S11
										 , NULL																	AS S12
										 , NULL																	AS S13
										 , NULL																	AS S14
										 , NULL																	AS S15
										 , NULL																	AS S16
										 , NULL																	AS S17
										 , NULL																	AS S18
										 , NULL																	AS S19
										 , NULL																	AS S20
										 , NULL																	AS S21
										 , NULL																	AS S22
										 , NULL																	AS S23
										 , NULL																	AS S24
										 , NULL																	AS S25
										 , NULL																	AS S26
										 , NULL																	AS S27
										 , NULL																	AS S28
										 , NULL																	AS S29
										 , NULL																	AS S30
										 , NULL																	AS SUPP_TOT
										 , NULL																	AS D01
										 , NULL																	AS D02
										 , NULL																	AS D03
										 , NULL																	AS D04
										 , NULL																	AS D05
										 , NULL																	AS D06
										 , NULL																	AS D07
										 , NULL																	AS D08
										 , NULL																	AS D09
										 , NULL																	AS D10
										 , NULL																	AS D11
										 , NULL																	AS D12
										 , NULL																	AS D13
										 , NULL																	AS D14
										 , NULL																	AS D15
										 , NULL																	AS D16
										 , NULL																	AS D17
										 , NULL																	AS D18
										 , NULL																	AS D19
										 , NULL																	AS D20
										 , NULL																	AS DED_TOT
									  FROM (
											SELECT ROW_NUMBER() OVER(ORDER BY REF_CODE2, SUB_CODE)	AS SEQ
												 , COMP_CODE
												 , SUB_CODE		AS DUTY_CODE
												 , CODE_NAME	AS DUTY_NAME
											  FROM BSA100T
											 WHERE COMP_CODE = @COMP_CODE
											   AND MAIN_CODE = 'H033'
											   AND SUB_CODE != '$'
											   AND USE_YN	 = 'Y'
										   ) A
											LEFT OUTER JOIN HAT200T B
														 ON A.COMP_CODE   = B.COMP_CODE
														AND A.DUTY_CODE   = B.DUTY_CODE
														AND B.COMP_CODE   = @COMP_CODE
														AND B.DUTY_YYYYMM = @PAY_YYYYMM
											LEFT OUTER JOIN HAT300T C
														 ON B.COMP_CODE   = C.COMP_CODE
														AND B.DUTY_YYYYMM = C.DUTY_YYYYMM
														AND B.PERSON_NUMB = C.PERSON_NUMB
									 GROUP BY B.COMP_CODE
										 , B.DUTY_YYYYMM
										 , B.PERSON_NUMB
										 , C.WORK_DAY
		
									UNION ALL
		
									SELECT B.COMP_CODE
										 , B.PAY_YYYYMM
										 , B.PERSON_NUMB
										 , NULL																															AS WORK_DAY
										 , NULL																															AS W01
										 , NULL																															AS W02
										 , NULL																															AS W03
										 , NULL																															AS W04
										 , NULL																															AS W05
										 , NULL																															AS W06
										 , NULL																															AS W07
										 , NULL																															AS W08
										 , NULL																															AS W09
										 , NULL																															AS W10
										 , NULL																															AS W11
										 , NULL																															AS W12
										 , NULL																															AS W13
										 , NULL																															AS W14
										 , SUM(CASE WHEN A.SEQ  =  1 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S01
										 , SUM(CASE WHEN A.SEQ  =  2 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S02
										 , SUM(CASE WHEN A.SEQ  =  3 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S03
										 , SUM(CASE WHEN A.SEQ  =  4 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S04
										 , SUM(CASE WHEN A.SEQ  =  5 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S05
										 , SUM(CASE WHEN A.SEQ  =  6 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S06
										 , SUM(CASE WHEN A.SEQ  =  7 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S07
										 , SUM(CASE WHEN A.SEQ  =  8 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S08
										 , SUM(CASE WHEN A.SEQ  =  9 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S09
										 , SUM(CASE WHEN A.SEQ  = 10 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S10
										 , SUM(CASE WHEN A.SEQ  = 11 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S11
										 , SUM(CASE WHEN A.SEQ  = 12 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S12
										 , SUM(CASE WHEN A.SEQ  = 13 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S13
										 , SUM(CASE WHEN A.SEQ  = 14 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S14
										 , SUM(CASE WHEN A.SEQ  = 15 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S15
										 , SUM(CASE WHEN A.SEQ  = 16 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S16
										 , SUM(CASE WHEN A.SEQ  = 17 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S17
										 , SUM(CASE WHEN A.SEQ  = 18 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S18
										 , SUM(CASE WHEN A.SEQ  = 19 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S19
										 , SUM(CASE WHEN A.SEQ  = 20 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S20
										 , SUM(CASE WHEN A.SEQ  = 21 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S21
										 , SUM(CASE WHEN A.SEQ  = 22 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S22
										 , SUM(CASE WHEN A.SEQ  = 23 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S23
										 , SUM(CASE WHEN A.SEQ  = 24 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S24
										 , SUM(CASE WHEN A.SEQ  = 25 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S25
										 , SUM(CASE WHEN A.SEQ  = 26 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S26
										 , SUM(CASE WHEN A.SEQ  = 27 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S27
										 , SUM(CASE WHEN A.SEQ  = 28 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S28
										 , SUM(CASE WHEN A.SEQ  = 29 THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S29
										 , SUM(CASE WHEN A.SEQ >= ${SUP_LIST_MAX} THEN B.AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.WAGES_CODE, #{SUP_LIST}) > 0 THEN 0 ELSE NULL END)	AS S30
										 , SUM(B.AMOUNT_I)																												AS SUPP_TOT
										 , NULL																															AS D01
										 , NULL																															AS D02
										 , NULL																															AS D03
										 , NULL																															AS D04
										 , NULL																															AS D05
										 , NULL																															AS D06
										 , NULL																															AS D07
										 , NULL																															AS D08
										 , NULL																															AS D09
										 , NULL																															AS D10
										 , NULL																															AS D11
										 , NULL																															AS D12
										 , NULL																															AS D13
										 , NULL																															AS D14
										 , NULL																															AS D15
										 , NULL																															AS D16
										 , NULL																															AS D17
										 , NULL																															AS D18
										 , NULL																															AS D19
										 , NULL																															AS D20
										 , NULL																															AS DED_TOT
									  FROM (
											SELECT ROW_NUMBER() OVER(ORDER BY PRINT_SEQ, WAGES_CODE)	AS SEQ
												 , COMP_CODE
												 , WAGES_CODE
												 , WAGES_NAME
											  FROM HBS300T
											 WHERE COMP_CODE = @COMP_CODE
											   AND CODE_TYPE = '1'
											   AND USE_YN	 = 'Y'
		<if test="PRINT_TYPE == &quot;2&quot;">
											   AND WAGES_CODE IN (	SELECT VALUE
																	  FROM uniLITE.fnSplit(#{SUP_LIST}, '|')	)
		</if>
										   ) A
											LEFT OUTER JOIN HPA300T B
														 ON A.COMP_CODE   = B.COMP_CODE
														AND A.WAGES_CODE  = B.WAGES_CODE
														AND B.COMP_CODE   = @COMP_CODE
														AND B.PAY_YYYYMM  = @PAY_YYYYMM
														AND B.SUPP_TYPE   = @SUPP_TYPE
														AND B.WAGES_CODE IN (	SELECT VALUE
																				  FROM uniLITE.fnSplit(#{SUP_LIST}, '|')	)
									 GROUP BY B.COMP_CODE
										 , B.PAY_YYYYMM
										 , B.PERSON_NUMB
			 
									UNION ALL
		
									SELECT B.COMP_CODE
										 , B.PAY_YYYYMM
										 , B.PERSON_NUMB
										 , NULL																																AS WORK_DAY
										 , NULL																																AS W01
										 , NULL																																AS W02
										 , NULL																																AS W03
										 , NULL																																AS W04
										 , NULL																																AS W05
										 , NULL																																AS W06
										 , NULL																																AS W07
										 , NULL																																AS W08
										 , NULL																																AS W09
										 , NULL																																AS W10
										 , NULL																																AS W11
										 , NULL																																AS W12
										 , NULL																																AS W13
										 , NULL																																AS W14
										 , NULL																																AS S01
										 , NULL																																AS S02
										 , NULL																																AS S03
										 , NULL																																AS S04
										 , NULL																																AS S05
										 , NULL																																AS S06
										 , NULL																																AS S07
										 , NULL																																AS S08
										 , NULL																																AS S09
										 , NULL																																AS S10
										 , NULL																																AS S11
										 , NULL																																AS S12
										 , NULL																																AS S13
										 , NULL																																AS S14
										 , NULL																																AS S15
										 , NULL																																AS S16
										 , NULL																																AS S17
										 , NULL																																AS S18
										 , NULL																																AS S19
										 , NULL																																AS S20
										 , NULL																																AS S21
										 , NULL																																AS S22
										 , NULL																																AS S23
										 , NULL																																AS S24
										 , NULL																																AS S25
										 , NULL																																AS S26
										 , NULL																																AS S27
										 , NULL																																AS S28
										 , NULL																																AS S29
										 , NULL																																AS S30
										 , NULL																																AS SUPP_TOT
										 , SUM(CASE WHEN A.SEQ  =  1 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D01
										 , SUM(CASE WHEN A.SEQ  =  2 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D02
										 , SUM(CASE WHEN A.SEQ  =  3 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D03
										 , SUM(CASE WHEN A.SEQ  =  4 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D04
										 , SUM(CASE WHEN A.SEQ  =  5 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D05
										 , SUM(CASE WHEN A.SEQ  =  6 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D06
										 , SUM(CASE WHEN A.SEQ  =  7 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D07
										 , SUM(CASE WHEN A.SEQ  =  8 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D08
										 , SUM(CASE WHEN A.SEQ  =  9 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D09
										 , SUM(CASE WHEN A.SEQ  = 10 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D10
										 , SUM(CASE WHEN A.SEQ  = 11 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D11
										 , SUM(CASE WHEN A.SEQ  = 12 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D12
										 , SUM(CASE WHEN A.SEQ  = 13 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D13
										 , SUM(CASE WHEN A.SEQ  = 14 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D14
										 , SUM(CASE WHEN A.SEQ  = 15 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D15
										 , SUM(CASE WHEN A.SEQ  = 16 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D16
										 , SUM(CASE WHEN A.SEQ  = 17 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D17
										 , SUM(CASE WHEN A.SEQ  = 18 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D18
										 , SUM(CASE WHEN A.SEQ  = 19 THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D19
										 , SUM(CASE WHEN A.SEQ >= ${DED_LIST_MAX} THEN B.DED_AMOUNT_I ELSE 0 END) + MAX(CASE WHEN CHARINDEX(A.DED_CODE, #{DED_LIST}) > 0 THEN 0 ELSE NULL END)	AS D20
										 , SUM(B.DED_AMOUNT_I)																												AS DED_TOT
									  FROM (
											SELECT ROW_NUMBER() OVER(ORDER BY REF_CODE2, SUB_CODE)	AS SEQ
												 , COMP_CODE
												 , SUB_CODE		AS DED_CODE
												 , CODE_NAME	AS DED_NAME
											  FROM BSA100T
											 WHERE COMP_CODE = @COMP_CODE
											   AND MAIN_CODE = 'H034'
											   AND SUB_CODE != '$'
											   AND USE_YN	 = 'Y'
										   ) A
											LEFT OUTER JOIN HPA400T B
														 ON A.COMP_CODE  = B.COMP_CODE
														AND A.DED_CODE   = B.DED_CODE
														AND B.COMP_CODE  = @COMP_CODE
														AND B.PAY_YYYYMM = @PAY_YYYYMM
														AND B.SUPP_TYPE  = @SUPP_TYPE
														AND B.DED_CODE  IN (	SELECT VALUE
																				  FROM uniLITE.fnSplit(#{DED_LIST}, '|')	)
									 GROUP BY B.COMP_CODE
										 , B.PAY_YYYYMM
										 , B.PERSON_NUMB
								) B
							 ON A.COMP_CODE   = B.COMP_CODE
							AND A.PAY_YYYYMM  = B.PAY_YYYYMM
							AND A.PERSON_NUMB = B.PERSON_NUMB
		 WHERE A.COMP_CODE  	= @COMP_CODE
		   AND A.PAY_YYYYMM 	= @PAY_YYYYMM
		   AND A.SUPP_TYPE  	= @SUPP_TYPE
		   AND (A.SUPP_TOTAL_I != 0 OR A.DED_TOTAL_I != 0 OR A.REAL_AMOUNT_I != 0)
		<if test="@foren.Ognl@isNotEmpty(DEPT_FR)">
		   AND A.DEPT_CODE     &gt;= #{DEPT_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_TO)">
		   AND A.DEPT_CODE     &lt;= #{DEPT_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
		   AND A.PAY_CODE		= #{PAY_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_DAY_FLAG)">
		   AND A.PAY_PROV_FLAG	= #{PAY_DAY_FLAG}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
		   AND A.PAY_GUBUN		= #{PAY_GUBUN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">
		   AND A.EMPLOY_TYPE	= #{EMPLOY_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COST_KIND)">
		   AND A.COST_KIND		= #{COST_KIND}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AFFIL_CODE)">
		   AND C.AFFIL_CODE		= #{AFFIL_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
		   AND A.PERSON_NUMB	= #{PERSON_NUMB}
		</if>
		 GROUP BY A.COMP_CODE
			 , A.DIV_CODE
			 , A.PAY_YYYYMM
			 , A.PERSON_NUMB
			 , C.NAME
			 , A.SUPP_TYPE
			 --, A.DEPT_CODE
			 --, A.DEPT_NAME
			 , D.COST_POOL_CODE
			 , D.COST_POOL_NAME
			 , C.JOIN_DATE
			 , C.PAY_GRADE_01
			 , C.PAY_GRADE_02
			 , A.PAY_CODE		--	급여지급방식
			 , A.PAY_PROV_FLAG	--	지급차수
			 , A.PAY_GUBUN		--	고용형태
			 , A.EMPLOY_TYPE	--	사원구분
								--	사원그룹은 뭐지
			 , A.COST_KIND		--	COST POOL
			 , C.AFFIL_CODE		--	직렬
			 , A.SUPP_TOTAL_I
			 , A.DED_TOTAL_I
			 , A.REAL_AMOUNT_I
		<if test="PRINT_TYPE == &quot;2&quot;">
		HAVING MAX(B.SUPP_TOT) != 0
		</if>
		 ORDER BY A.COMP_CODE
			 , A.DIV_CODE
			 , A.PAY_YYYYMM
			 --, A.DEPT_CODE
			 , D.COST_POOL_CODE
			 , CASE WHEN CHARINDEX('임금피크제', C.PAY_GRADE_01) > 0 THEN SUBSTRING(C.PAY_GRADE_01, 1, 4) ELSE C.PAY_GRADE_01 END
			 , C.NAME
	</select>

	<select id="s_hpa902rkr_sdcServiceImpl.selectPrintHeader" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE	NVARCHAR(08)
		
		SET @COMP_CODE = #{S_COMP_CODE}
		
		SELECT '실근'	AS WORK_DAY
			 , MAX(CASE WHEN A.SEQ  =  1 THEN A.DUTY_NAME	ELSE '' END)	AS W01
			 , MAX(CASE WHEN A.SEQ  =  2 THEN A.DUTY_NAME	ELSE '' END)	AS W02
			 , MAX(CASE WHEN A.SEQ  =  3 THEN A.DUTY_NAME	ELSE '' END)	AS W03
			 , MAX(CASE WHEN A.SEQ  =  4 THEN A.DUTY_NAME	ELSE '' END)	AS W04
			 , MAX(CASE WHEN A.SEQ  =  5 THEN A.DUTY_NAME	ELSE '' END)	AS W05
			 , MAX(CASE WHEN A.SEQ  =  6 THEN A.DUTY_NAME	ELSE '' END)	AS W06
			 , MAX(CASE WHEN A.SEQ  =  7 THEN A.DUTY_NAME	ELSE '' END)	AS W07
			 , MAX(CASE WHEN A.SEQ  =  8 THEN A.DUTY_NAME	ELSE '' END)	AS W08
			 , MAX(CASE WHEN A.SEQ  =  9 THEN A.DUTY_NAME	ELSE '' END)	AS W09
			 , MAX(CASE WHEN A.SEQ  = 10 THEN A.DUTY_NAME	ELSE '' END)	AS W10
			 , MAX(CASE WHEN A.SEQ  = 11 THEN A.DUTY_NAME	ELSE '' END)	AS W11
			 , MAX(CASE WHEN A.SEQ  = 12 THEN A.DUTY_NAME	ELSE '' END)	AS W12
			 , MAX(CASE WHEN A.SEQ  = 13 THEN A.DUTY_NAME	ELSE '' END)	AS W13
			 , MAX(CASE WHEN A.SEQ  = 14 THEN A.DUTY_NAME	ELSE '' END)	AS W14
			 , MAX(CASE WHEN B.SEQ  =  1 THEN B.WAGES_NAME	ELSE '' END)	AS S01
			 , MAX(CASE WHEN B.SEQ  =  2 THEN B.WAGES_NAME	ELSE '' END)	AS S02
			 , MAX(CASE WHEN B.SEQ  =  3 THEN B.WAGES_NAME	ELSE '' END)	AS S03
			 , MAX(CASE WHEN B.SEQ  =  4 THEN B.WAGES_NAME	ELSE '' END)	AS S04
			 , MAX(CASE WHEN B.SEQ  =  5 THEN B.WAGES_NAME	ELSE '' END)	AS S05
			 , MAX(CASE WHEN B.SEQ  =  6 THEN B.WAGES_NAME	ELSE '' END)	AS S06
			 , MAX(CASE WHEN B.SEQ  =  7 THEN B.WAGES_NAME	ELSE '' END)	AS S07
			 , MAX(CASE WHEN B.SEQ  =  8 THEN B.WAGES_NAME	ELSE '' END)	AS S08
			 , MAX(CASE WHEN B.SEQ  =  9 THEN B.WAGES_NAME	ELSE '' END)	AS S09
			 , MAX(CASE WHEN B.SEQ  = 10 THEN B.WAGES_NAME	ELSE '' END)	AS S10
			 , MAX(CASE WHEN B.SEQ  = 11 THEN B.WAGES_NAME	ELSE '' END)	AS S11
			 , MAX(CASE WHEN B.SEQ  = 12 THEN B.WAGES_NAME	ELSE '' END)	AS S12
			 , MAX(CASE WHEN B.SEQ  = 13 THEN B.WAGES_NAME	ELSE '' END)	AS S13
			 , MAX(CASE WHEN B.SEQ  = 14 THEN B.WAGES_NAME	ELSE '' END)	AS S14
			 , MAX(CASE WHEN B.SEQ  = 15 THEN B.WAGES_NAME	ELSE '' END)	AS S15
			 , MAX(CASE WHEN B.SEQ  = 16 THEN B.WAGES_NAME	ELSE '' END)	AS S16
			 , MAX(CASE WHEN B.SEQ  = 17 THEN B.WAGES_NAME	ELSE '' END)	AS S17
			 , MAX(CASE WHEN B.SEQ  = 18 THEN B.WAGES_NAME	ELSE '' END)	AS S18
			 , MAX(CASE WHEN B.SEQ  = 19 THEN B.WAGES_NAME	ELSE '' END)	AS S19
			 , MAX(CASE WHEN B.SEQ  = 20 THEN B.WAGES_NAME	ELSE '' END)	AS S20
			 , MAX(CASE WHEN B.SEQ  = 21 THEN B.WAGES_NAME	ELSE '' END)	AS S21
			 , MAX(CASE WHEN B.SEQ  = 22 THEN B.WAGES_NAME	ELSE '' END)	AS S22
			 , MAX(CASE WHEN B.SEQ  = 23 THEN B.WAGES_NAME	ELSE '' END)	AS S23
			 , MAX(CASE WHEN B.SEQ  = 24 THEN B.WAGES_NAME	ELSE '' END)	AS S24
			 , MAX(CASE WHEN B.SEQ  = 25 THEN B.WAGES_NAME	ELSE '' END)	AS S25
			 , MAX(CASE WHEN B.SEQ  = 26 THEN B.WAGES_NAME	ELSE '' END)	AS S26
			 , MAX(CASE WHEN B.SEQ  = 27 THEN B.WAGES_NAME	ELSE '' END)	AS S27
			 , MAX(CASE WHEN B.SEQ  = 28 THEN B.WAGES_NAME	ELSE '' END)	AS S28
			 , MAX(CASE WHEN B.SEQ  = 29 THEN B.WAGES_NAME	ELSE '' END)	AS S29
			 , MAX(CASE WHEN B.SEQ >= 30 THEN '기타'		ELSE '' END)	AS S30
			 , MAX(CASE WHEN C.SEQ  =  1 THEN C.DED_NAME	ELSE '' END)	AS D01
			 , MAX(CASE WHEN C.SEQ  =  2 THEN C.DED_NAME	ELSE '' END)	AS D02
			 , MAX(CASE WHEN C.SEQ  =  3 THEN C.DED_NAME	ELSE '' END)	AS D03
			 , MAX(CASE WHEN C.SEQ  =  4 THEN C.DED_NAME	ELSE '' END)	AS D04
			 , MAX(CASE WHEN C.SEQ  =  5 THEN C.DED_NAME	ELSE '' END)	AS D05
			 , MAX(CASE WHEN C.SEQ  =  6 THEN C.DED_NAME	ELSE '' END)	AS D06
			 , MAX(CASE WHEN C.SEQ  =  7 THEN C.DED_NAME	ELSE '' END)	AS D07
			 , MAX(CASE WHEN C.SEQ  =  8 THEN C.DED_NAME	ELSE '' END)	AS D08
			 , MAX(CASE WHEN C.SEQ  =  9 THEN C.DED_NAME	ELSE '' END)	AS D09
			 , MAX(CASE WHEN C.SEQ  = 10 THEN C.DED_NAME	ELSE '' END)	AS D10
			 , MAX(CASE WHEN C.SEQ  = 11 THEN C.DED_NAME	ELSE '' END)	AS D11
			 , MAX(CASE WHEN C.SEQ  = 12 THEN C.DED_NAME	ELSE '' END)	AS D12
			 , MAX(CASE WHEN C.SEQ  = 13 THEN C.DED_NAME	ELSE '' END)	AS D13
			 , MAX(CASE WHEN C.SEQ  = 14 THEN C.DED_NAME	ELSE '' END)	AS D14
			 , MAX(CASE WHEN C.SEQ  = 15 THEN C.DED_NAME	ELSE '' END)	AS D15
			 , MAX(CASE WHEN C.SEQ  = 16 THEN C.DED_NAME	ELSE '' END)	AS D16
			 , MAX(CASE WHEN C.SEQ  = 17 THEN C.DED_NAME	ELSE '' END)	AS D17
			 , MAX(CASE WHEN C.SEQ  = 18 THEN C.DED_NAME	ELSE '' END)	AS D18
			 , MAX(CASE WHEN C.SEQ  = 19 THEN C.DED_NAME	ELSE '' END)	AS D19
			 , MAX(CASE WHEN C.SEQ >= 20 THEN '기타'		ELSE '' END)	AS D20
		  FROM (
				SELECT ROW_NUMBER() OVER(ORDER BY RIGHT('000' + REF_CODE2, 3), SUB_CODE)	AS SEQ
					 , COMP_CODE
					 , SUB_CODE		AS DUTY_CODE
					 , CODE_NAME	AS DUTY_NAME
				  FROM BSA100T
				 WHERE COMP_CODE = @COMP_CODE
				   AND MAIN_CODE = 'H033'
				   AND SUB_CODE != '$'
				   AND USE_YN	 = 'Y'
			   ) A
				INNER JOIN	(
								SELECT ROW_NUMBER() OVER(ORDER BY PRINT_SEQ, WAGES_CODE)	AS SEQ
									 , COMP_CODE
									 , WAGES_CODE
									 , WAGES_NAME
								  FROM HBS300T
								 WHERE COMP_CODE = @COMP_CODE
								   AND CODE_TYPE = '1'
								   AND USE_YN	 = 'Y'
		<if test="PRINT_TYPE == &quot;2&quot;">
								   AND WAGES_CODE IN (	SELECT VALUE
														  FROM uniLITE.fnSplit(#{SUP_LIST}, '|')	)
		</if>
							) B ON 1 = 1
				INNER JOIN	(
								SELECT ROW_NUMBER() OVER(ORDER BY RIGHT('000' + REF_CODE2, 3), SUB_CODE)	AS SEQ
									 , COMP_CODE
									 , SUB_CODE		AS DED_CODE
									 , CODE_NAME	AS DED_NAME
								  FROM BSA100T
								 WHERE COMP_CODE = @COMP_CODE
								   AND MAIN_CODE = 'H034'
								   AND SUB_CODE != '$'
								   AND USE_YN	 = 'Y'
							) C ON 1 = 1
	</select>

</mapper>