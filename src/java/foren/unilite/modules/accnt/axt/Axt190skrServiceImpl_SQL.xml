<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="axt190skrService">

	<select id="axt190skrService.selectList" parameterType="Map" resultType="rMap">
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.COLLECT_DATE	AS IN_DATE
			 , A.CUSTOM_CODE
			 , B.CUSTOM_NAME
			 , A.COLLECT_TYPE	AS IN_GUBUN
			 , CASE WHEN D.REF_CODE2 IN ('N') THEN '어음입금' ELSE '현금입금' END		AS INCOME_TYPE
			 , A.NOTE_NUM		AS NOTE_NO
			 , A.PUB_CUST_CD	AS BANK_CODE
			 , C.CUSTOM_NAME	AS BANK_NAME
			 , uniLITE.fnGetUserdate(A.COMP_CODE, A.NOTE_DUE_DATE)						AS EXP_DATE
			 , ''				AS REMARK2
			 , CASE WHEN D.REF_CODE2 = 'C' THEN A.COLLECT_AMT ELSE 0 END				AS CASH_I
			 , CASE WHEN D.REF_CODE2 = 'N' THEN A.COLLECT_AMT ELSE 0 END				AS NOTE_I
			 , A.COLLECT_AMT															AS AMT_I
			 , A.REMARK
		  FROM SCO100T A
				LEFT OUTER JOIN BCM100T B
							 ON A.COMP_CODE		= B.COMP_CODE
							AND A.CUSTOM_CODE	= B.CUSTOM_CODE
				LEFT OUTER JOIN BCM100T C
							 ON A.COMP_CODE		= C.COMP_CODE
							AND A.PUB_CUST_CD	= C.CUSTOM_CODE
				INNER JOIN		BSA100T D
							 ON A.COMP_CODE		= D.COMP_CODE
							AND D.MAIN_CODE		= 'A398'
							AND A.COLLECT_TYPE	= D.SUB_CODE
							AND D.REF_CODE1		= 'Y'
		 WHERE A.COMP_CODE		 = #{S_COMP_CODE}
		   AND A.COLLECT_DATE	&gt;= #{AC_DATE_FR}
		   AND A.COLLECT_DATE	&lt;= #{AC_DATE_TO}
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE		 = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND A.CUSTOM_CODE	 = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INCOME_TYPE)">
		   AND A.COLLECT_TYPE	 = #{INCOME_TYPE}
		</if>
		 ORDER BY A.CUSTOM_CODE
			 , A.COLLECT_DATE
			 , A.COLLECT_TYPE
	</select>

	<select id="axt190skrService.selectList_BAK2" parameterType="Map" resultType="rMap">
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.IN_DATE
			 , A.CUSTOM_CODE
			 , A.CUSTOM_NAME
			 , A.IN_GUBUN
			 --, D.CODE_NAME + CASE WHEN D.REF_CODE2 IN ('C', 'N') THEN '입금' ELSE '' END	AS INCOME_TYPE
			 , CASE WHEN D.REF_CODE2 IN ('N') THEN '어음입금' ELSE '현금입금' END		AS INCOME_TYPE
			 , A.NOTE_NUM																AS NOTE_NO
			 , A.BANK_CODE
			 , C.CUSTOM_NAME															AS BANK_NAME
			 , uniLITE.fnGetUserdate(A.COMP_CODE, A.EXP_DATE)							AS EXP_DATE
			 , ''																		AS REMARK2
			 , CASE WHEN D.REF_CODE2 = 'C' THEN A.IN_AMOUNT ELSE 0 END					AS CASH_I
			 , CASE WHEN D.REF_CODE2 = 'N' THEN A.IN_AMOUNT ELSE 0 END					AS NOTE_I
			 , A.IN_AMOUNT																AS AMT_I
			 , A.REMARK
		  FROM AXT100T A
				LEFT OUTER JOIN BCM100T C
							 ON A.COMP_CODE	= C.COMP_CODE
							AND A.BANK_CODE	= C.CUSTOM_CODE
				INNER JOIN		BSA100T D
							 ON A.COMP_CODE	= D.COMP_CODE
							AND D.MAIN_CODE	= 'A398'
							AND A.IN_GUBUN	= D.SUB_CODE
							AND D.REF_CODE1	= 'Y'
		 WHERE A.COMP_CODE		 = #{S_COMP_CODE}
		   AND A.IN_DATE		&gt;= #{AC_DATE_FR}
		   AND A.IN_DATE		&lt;= #{AC_DATE_TO}
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE		 = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND A.CUSTOM_CODE	 = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INCOME_TYPE)">
		   AND A.IN_GUBUN		 = #{INCOME_TYPE}
		</if>
		 ORDER BY A.CUSTOM_CODE
			 , A.IN_DATE
			 , A.IN_GUBUN
	</select>

	<select id="axt190skrService.selectList_BAK" parameterType="Map" resultType="rMap">
		SELECT DISTINCT
			   A.COMP_CODE
			 , A.DIV_CODE
			 , A.EX_DATE
			 , A.EX_NUM
			 , A.EX_SEQ
			 , A.ACCNT
			 , A.CUSTOM_CODE
			 , A.CUSTOM_NAME
			 , CASE WHEN C.SPEC_DIVI = 'D1' THEN '받을어음입금' ELSE '현금입금' END	AS INCOME_TYPE
			 , CASE WHEN C.SPEC_DIVI = 'D1' THEN CASE WHEN A.AC_CODE1 = 'C2' THEN A.AC_DATA1
													  WHEN A.AC_CODE2 = 'C2' THEN A.AC_DATA2
													  WHEN A.AC_CODE3 = 'C2' THEN A.AC_DATA3
													  WHEN A.AC_CODE4 = 'C2' THEN A.AC_DATA4
													  WHEN A.AC_CODE5 = 'C2' THEN A.AC_DATA5
													  WHEN A.AC_CODE6 = 'C2' THEN A.AC_DATA6
													  ELSE ''
												 END
					ELSE ''
			   END	AS NOTE_NO
			 , CASE WHEN C.SPEC_DIVI = 'D1' THEN CASE WHEN A.AC_CODE1 = 'A3' THEN A.AC_DATA1
													  WHEN A.AC_CODE2 = 'A3' THEN A.AC_DATA2
													  WHEN A.AC_CODE3 = 'A3' THEN A.AC_DATA3
													  WHEN A.AC_CODE4 = 'A3' THEN A.AC_DATA4
													  WHEN A.AC_CODE5 = 'A3' THEN A.AC_DATA5
													  WHEN A.AC_CODE6 = 'A3' THEN A.AC_DATA6
													  ELSE ''
												 END
					ELSE ''
			   END	AS BANK_CODE
			 , CASE WHEN C.SPEC_DIVI = 'D1' THEN CASE WHEN A.AC_CODE1 = 'A3' THEN A.AC_DATA_NAME1
													  WHEN A.AC_CODE2 = 'A3' THEN A.AC_DATA_NAME2
													  WHEN A.AC_CODE3 = 'A3' THEN A.AC_DATA_NAME3
													  WHEN A.AC_CODE4 = 'A3' THEN A.AC_DATA_NAME4
													  WHEN A.AC_CODE5 = 'A3' THEN A.AC_DATA_NAME5
													  WHEN A.AC_CODE6 = 'A3' THEN A.AC_DATA_NAME6
													  ELSE ''
												 END
					ELSE ''
			   END	AS BANK_NAME
			 , CASE WHEN C.SPEC_DIVI = 'D1' THEN CASE WHEN A.AC_CODE1 = 'C3' THEN uniLITE.fnGetUserdate(A.COMP_CODE, A.AC_DATA1)
													  WHEN A.AC_CODE2 = 'C3' THEN uniLITE.fnGetUserdate(A.COMP_CODE, A.AC_DATA2)
													  WHEN A.AC_CODE3 = 'C3' THEN uniLITE.fnGetUserdate(A.COMP_CODE, A.AC_DATA3)
													  WHEN A.AC_CODE4 = 'C3' THEN uniLITE.fnGetUserdate(A.COMP_CODE, A.AC_DATA4)
													  WHEN A.AC_CODE5 = 'C3' THEN uniLITE.fnGetUserdate(A.COMP_CODE, A.AC_DATA5)
													  WHEN A.AC_CODE6 = 'C3' THEN uniLITE.fnGetUserdate(A.COMP_CODE, A.AC_DATA6)
													  ELSE ''
												 END
					ELSE ''
			   END	AS EXP_DATE
			 , A.REMARK2
			 , CASE WHEN C.SPEC_DIVI != 'D1' THEN A.AMT_I ELSE 0 END	AS CASH_I
			 , CASE WHEN C.SPEC_DIVI  = 'D1' THEN A.AMT_I ELSE 0 END	AS NOTE_I
			 , A.AMT_I
			 , A.REMARK
		  FROM AGJ110T A
				INNER JOIN	(
								SELECT B.COMP_CODE
									 , B.EX_DATE
									 , B.EX_NUM
									 , B.EX_SEQ
									 , B.ACCNT
									 , B.CUSTOM_CODE
									 , B.AMT_I
								  FROM AGJ110T B
								 WHERE B.COMP_CODE	= #{S_COMP_CODE}
								   AND B.ACCNT     IN (	SELECT ACCNT
														  FROM ABA400T
														 WHERE SPEC_DIVI = 'G1')
								   AND B.DR_CR			= '2'
								   AND B.EX_DATE	   &gt;= #{AC_DATE_FR}
								   AND B.EX_DATE	   &lt;= #{AC_DATE_TO}
								   AND ISNULL(B.MOD_DIVI, '') != 'D'
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
								   AND B.DIV_CODE		= #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
								   AND B.CUSTOM_CODE	= #{CUSTOM_CODE}
		</if>
							) B
							 ON A.COMP_CODE		= B.COMP_CODE
							AND A.EX_DATE		= B.EX_DATE
							AND A.EX_NUM		= B.EX_NUM
							AND A.CUSTOM_CODE	= B.CUSTOM_CODE
							AND A.DR_CR			= '1'
				INNER JOIN	(
								SELECT DISTINCT
									   C.COMP_CODE
									 , C.ACCNT
									 , CASE WHEN ISNULL(D.SPEC_DIVI, '') = 'D1' THEN 'D1' ELSE '' END	AS SPEC_DIVI
								  FROM AGA130T C
										INNER JOIN		ABA400T D
													 ON C.COMP_CODE	= D.COMP_CODE
													AND C.ACCNT		= D.ACCNT
								 WHERE C.COMP_CODE	= #{S_COMP_CODE}
								   AND C.DR_CR		= '1'
							) C
							 ON A.COMP_CODE	= C.COMP_CODE
							AND A.ACCNT		= C.ACCNT
		 WHERE A.COMP_CODE		= #{S_COMP_CODE}
		   AND A.EX_DATE	   &gt;= #{AC_DATE_FR}
		   AND A.EX_DATE	   &lt;= #{AC_DATE_TO}
		   AND ISNULL(A.MOD_DIVI, '') != 'D'
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		   AND A.DIV_CODE		= #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND A.CUSTOM_CODE	= #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INCOME_TYPE)">
		   AND CASE WHEN C.SPEC_DIVI = 'D1' THEN '받을어음입금' ELSE '현금입금' END	= #{INCOME_TYPE}
		</if>
		 ORDER BY A.CUSTOM_CODE
			 , A.EX_DATE
			 , A.EX_NUM
			 , A.EX_SEQ
	</select>

</mapper>