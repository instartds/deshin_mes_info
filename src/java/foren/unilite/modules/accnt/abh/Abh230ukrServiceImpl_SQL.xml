<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="abh230ukrServiceImpl">
	<select id="abh230ukrServiceImpl.getCmsId" parameterType="Map" resultType="rMap">
		SELECT CMS_ID 
		  FROM BOR100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE} 
	</select>
	
	
	
	<!-- 조회 -->	
	<select id="abh230ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		SELECT	 
		        ROW_NUMBER() OVER (ORDER BY A.ORG_AC_DATE, A.ORG_SLIP_NUM, A.ORG_SLIP_SEQ)  AS            ROW_NUMBER
		      ,  A.DOC_ID					/* 자동증가						*/
			  ,  A.COMP_CODE				/* 법인							*/
			  ,  A.SEQ						/* 순번							*/
			  ,  A.ORG_AC_DATE				/* 원전표일자						*/
			  ,  A.ORG_SLIP_NUM				/* 원전표번호						*/
			  ,  A.ORG_SLIP_SEQ				/* 원전표순번						*/
			  ,  A.PAY_EXP_DATE				/* 지급예정일						*/
			  ,  A.SEND_DATE				/* 이체일자						*/
			  ,  A.OUT_SAVE_CODE			/* 출금통장코드						*/
			  ,  A.BANK_CODE				/* 은행코드						*/
			  ,  A.BANK_NAME				/* 은행명							*/
			  ,  A.ACCOUNT_NUM				/* 계좌번호						*/
			  ,  A.BANKBOOK_NAME			/* 예금주명						*/
			  ,  A.SEND_NUM					/* 이체번호(한번에 보낼 때 통으로 채번 셋팅)	*/
			  ,  A.IN_REMARK				/* 입금통장표시내용					*/
			  ,  A.AMT_I					/* 금액							*/					
			  ,  A.CMS_TRANS_YN				/* 전송하면 'Y'					    */
			  ,  A.RCPT_ID					/* 예금주전송ID(필요시 사용)			*/
			  ,  A.RCPT_STATE_NUM			/* 예금주전송전문번호					*/
			  ,  A.RCPT_NAME				/* 예금주명						*/
			  ,  A.RCPT_RESULT_MSG			/* 예금주결과메시지					*/
			  ,  A.INSERT_DB_USER			/* 입력자							*/
			  ,  A.INSERT_DB_TIME			/* 입력일							*/
			  ,  A.UPDATE_DB_USER			/* 수정자							*/
			  ,  A.UPDATE_DB_TIME			/* 수정일							*/
			  ,  A.TEMPC_01					/* 여유컬럼						*/
			  ,  A.ACCNT					/* 계정코드						*/
			  
			  ,  A.DOC_STATUS               /* 결재상태                                                     */
			FROM		ABH230T A WITH(NOLOCK)
		  WHERE  A.COMP_CODE			= #{S_COMP_CODE}
			AND  A.PAY_EXP_DATE	&gt;= #{PAY_EXP_DATE_FR}
			AND  A.PAY_EXP_DATE	&lt;= #{PAY_EXP_DATE_TO}
			<if test="SEARCH_DEPOSITOR != &quot;A&quot;">				/* 예금주조회 여부 */  
			AND  A.CMS_TRANS_YN		= #{SEARCH_DEPOSITOR}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TRANSFER_PERIOD_FR)">		/* 이체기간(FR) */  
			AND  A.SEND_DATE	&gt;= #{TRANSFER_PERIOD_FR}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TRANSFER_PERIOD_TO)">		/* 이체기간(TO) */
			AND  A.SEND_DATE	&lt;= #{TRANSFER_PERIOD_TO}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SEQ_FR)">					/* 순번(FR) */
			AND  A.SEQ			&gt;= #{SEQ_FR}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SEQ_TO)">					/* 순번(TO) */
			AND  A.SEQ			&lt;= #{SEQ_TO}
			</if>
		    AND NOT EXISTS (SELECT AA.COMP_CODE
                                 , B.ACCNT
                                 , B.ORG_AC_DATE
                                 , B.ORG_SLIP_NUM
                                 , B.ORG_SLIP_SEQ
                                 , B.SEQ
                              FROM ABH200T AA
                                   INNER JOIN (SELECT B.COMP_CODE, B.SEND_NUM, B.ACCNT, B.ORG_AC_DATE, B.ORG_SLIP_NUM, B.ORG_SLIP_SEQ, B.SEQ
                                                 FROM ABH210T B
                                                WHERE COMP_CODE = #{S_COMP_CODE}
                                                GROUP BY B.COMP_CODE, B.SEND_NUM, B.ACCNT, B.ORG_AC_DATE, B.ORG_SLIP_NUM, B.ORG_SLIP_SEQ, B.SEQ
                                              ) B  ON B.COMP_CODE = AA.COMP_CODE
                                                  AND B.SEND_NUM  = AA.SEND_NUM
                             WHERE AA.COMP_CODE    = A.COMP_CODE
                               AND B.ORG_AC_DATE   = A.ORG_AC_DATE
                               AND B.ORG_SLIP_NUM  = A.ORG_SLIP_NUM
                               AND B.ORG_SLIP_SEQ  = A.ORG_SLIP_SEQ
                               AND B.SEQ           = A.SEQ
                           )	
    	  ORDER BY A.ORG_AC_DATE, A.ORG_SLIP_NUM, A.ORG_SLIP_SEQ
	</select>

	<!-- 추가 -->	
	<update id="abh230ukrServiceImpl.insertList" parameterType="Map">
		INSERT ABH230T
				(
				  COMP_CODE
				, SEQ
				, ORG_AC_DATE	
				, ORG_SLIP_NUM
				, ORG_SLIP_SEQ
				, PAY_EXP_DATE
			<if test="@foren.Ognl@isNotEmpty(SEND_DATE)">
				, SEND_DATE
			</if>
			<if test="@foren.Ognl@isNotEmpty(OUT_SAVE_CODE)">
				, OUT_SAVE_CODE
			</if>
			<if test="@foren.Ognl@isNotEmpty(BANK_CODE)">
				, BANK_CODE
			</if>
			<if test="@foren.Ognl@isNotEmpty(BANK_NAME)">
				, BANK_NAME
			</if>
			<if test="@foren.Ognl@isNotEmpty(ACCOUNT_NUM)">
				, ACCOUNT_NUM
			</if>
			<if test="@foren.Ognl@isNotEmpty(BANKBOOK_NAME)">
				, BANKBOOK_NAME
			</if>
				, AMT_I					
			<if test="@foren.Ognl@isNotEmpty(SEND_NUM)">
				, SEND_NUM
			</if>
			<if test="@foren.Ognl@isNotEmpty(IN_REMARK)">
				, IN_REMARK
			</if>
			<if test="@foren.Ognl@isNotEmpty(CMS_TRANS_YN)">
				, CMS_TRANS_YN
			</if>
			<if test="@foren.Ognl@isNotEmpty(RCPT_ID)">
				, RCPT_ID
			</if>
			<if test="@foren.Ognl@isNotEmpty(RCPT_STATE_NUM)">
				, RCPT_STATE_NUM
			</if>
			<if test="@foren.Ognl@isNotEmpty(RCPT_NAME)">
				, RCPT_NAME
			</if>
			<if test="@foren.Ognl@isNotEmpty(RCPT_RESULT_MSG)">
				, RCPT_RESULT_MSG
			</if>
			<if test="@foren.Ognl@isNotEmpty(ACCNT)">
				, ACCNT
			</if>
				, INSERT_DB_USER
				, INSERT_DB_TIME
				, UPDATE_DB_USER
				, UPDATE_DB_TIME
				)
		VALUES
				(
				 #{S_COMP_CODE}
				, #{SEQ}
				, #{ORG_AC_DATE}
				, #{ORG_SLIP_NUM}
				, #{ORG_SLIP_SEQ}
				, #{PAY_EXP_DATE}
			<if test="@foren.Ognl@isNotEmpty(SEND_DATE)">
				, #{SEND_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(OUT_SAVE_CODE)">
				, #{OUT_SAVE_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(BANK_CODE)">
				, #{BANK_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(BANK_NAME)">
				, #{BANK_NAME}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ACCOUNT_NUM)">
				, #{ACCOUNT_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(BANKBOOK_NAME)">
				, #{BANKBOOK_NAME}
			</if>
				, #{AMT_I}
			<if test="@foren.Ognl@isNotEmpty(SEND_NUM)">
				, #{SEND_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(IN_REMARK)">
				, #{IN_REMARK}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CMS_TRANS_YN)">
				, #{CMS_TRANS_YN}
			</if>
			<if test="@foren.Ognl@isNotEmpty(RCPT_ID)">
				, #{RCPT_ID}
			</if>
			<if test="@foren.Ognl@isNotEmpty(RCPT_STATE_NUM)">
				, #{RCPT_STATE_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(RCPT_NAME)">
				, #{RCPT_NAME}
			</if>
			<if test="@foren.Ognl@isNotEmpty(RCPT_RESULT_MSG)">
				, #{RCPT_RESULT_MSG}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ACCNT)">
				, #{ACCNT}
			</if>
				, #{S_USER_ID}
				, GETDATE()
				, #{S_USER_ID}
				, GETDATE()
				)
	</update>

	<!-- 수정 -->	
	<update id="abh230ukrServiceImpl.updateList" parameterType="Map">		
		UPDATE  ABH230T
			SET  
				ORG_AC_DATE		= #{ORG_AC_DATE}
			 ,  ORG_SLIP_NUM	= #{ORG_SLIP_NUM}
			 ,  ORG_SLIP_SEQ	= #{ORG_SLIP_SEQ}
			<if test="@foren.Ognl@isNotEmpty(PAY_EXP_DATE)">	 
			 ,  PAY_EXP_DATE	= #{PAY_EXP_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SEND_DATE)">	 
			 ,  SEND_DATE		= #{SEND_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(BANK_CODE)">	 
			 ,  BANK_CODE		= #{BANK_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(BANK_NAME)">	 
			 ,  BANK_NAME		= #{BANK_NAME}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ACCOUNT_NUM)">	 
			 ,  ACCOUNT_NUM		= #{ACCOUNT_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(IN_REMARK)">
			 ,  IN_REMARK		= #{IN_REMARK}
			</if>
			<if test="@foren.Ognl@isNotEmpty(BANKBOOK_NAME)">	 
			 ,  BANKBOOK_NAME	= #{BANKBOOK_NAME}
			</if>
			<if test="@foren.Ognl@isNotEmpty(AMT_I)">	 
			 ,  AMT_I			= #{AMT_I}
			</if>
		 WHERE  DOC_ID			= #{DOC_ID}
	</update>
	
	<!-- 삭제 -->	
	<update id="abh230ukrServiceImpl.deleteList" parameterType="Map">
		DELETE FROM ABH230T
		 WHERE  DOC_ID			= #{DOC_ID}
	</update>








	<!-- 엑셀 업로드 로직 -->
	<insert id="abh230ukrServiceImpl.insertExcelabh230upload" parameterType="Map">
		INSERT INTO ABH230T_XLS 
		(		  
			  _EXCEL_JOBID 
			, _EXCEL_ROWNUM 
			, _EXCEL_HAS_ERROR 
			, _EXCEL_ERROR_MSG			
			, COMP_CODE
			, SEQ
			, ORG_AC_DATE	
			, ORG_SLIP_NUM
			, ORG_SLIP_SEQ
			, PAY_EXP_DATE
			, BANK_CODE
			<if test="@foren.Ognl@isNotEmpty(BANK_NAME)"> 
			, BANK_NAME
			</if>
			, ACCOUNT_NUM
			, BANKBOOK_NAME
			, AMT_I	
			<if test="@foren.Ognl@isNotEmpty(IN_REMARK)"> 
			, IN_REMARK
			</if>
			, INSERT_DB_USER
			, INSERT_DB_TIME
		)					
		VALUES ( 
			  #{_EXCEL_JOBID} 
			, #{_EXCEL_ROWNUM} 
			, #{_EXCEL_HAS_ERROR ,jdbcType=VARCHAR} 
			, #{_EXCEL_ERROR	 ,jdbcType=VARCHAR}			  
			, #{S_COMP_CODE} 
			, #{SEQ}
			, #{ORG_AC_DATE}
			, #{ORG_SLIP_NUM}
			, #{ORG_SLIP_SEQ}
			, #{PAY_EXP_DATE}
			, #{BANK_CODE}
			<if test="@foren.Ognl@isNotEmpty(BANK_NAME)"> 
			, #{BANK_NAME}
			</if>
			, #{ACCOUNT_NUM}
			, #{BANKBOOK_NAME}
			, #{AMT_I}	
			<if test="@foren.Ognl@isNotEmpty(IN_REMARK)"> 
			, #{IN_REMARK}
			</if>
			, #{S_USER_ID}
			, GETDATE()	
		)
	</insert>


	<!-- 데이터 체크 -->	
	<select id="abh230ukrServiceImpl.beforeExcelCheck" parameterType="Map" resultType="rMap">
		DECLARE @COUNT		INTEGER
			  , @COUNT2		INTEGER
			  
		SELECT @COUNT	= COUNT(*) FROM ABH230T_XLS WITH(NOLOCK)
		 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
		 
		SELECT  @COUNT2	= COUNT(A._EXCEL_ROWNUM) 
		  FROM  		ABH230T_XLS		A WITH(NOLOCK)
		  LEFT  JOIN	AGJ210T			B WITH(NOLOCK)	ON B.COMP_CODE	= A.COMP_CODE
													   AND B.AC_DATE	= A.ORG_AC_DATE
													   AND B.SLIP_NUM	= A.ORG_SLIP_NUM
													   AND B.SLIP_SEQ	= A.ORG_SLIP_SEQ
                                                       AND ISNULL(B.MOD_DIVI, '') != 'D'
		 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		   AND B.ACCNT IS NOT NULL
		   
		SELECT  @COUNT AS COUNT_DATA, @COUNT2 AS COUNT_EXIST_ACCNT
	</select>


	<!-- 에러메세지 insert -->	
	<update id="abh230ukrServiceImpl.insertErrorMsg">
		INSERT INTO ABH230T_XLS 
		(		  
			  _EXCEL_JOBID 
			, _EXCEL_ROWNUM 
			, _EXCEL_HAS_ERROR 
			, _EXCEL_ERROR_MSG			
			, COMP_CODE
			, SEQ
			, ORG_AC_DATE	
			, ORG_SLIP_NUM
			, ORG_SLIP_SEQ
			, PAY_EXP_DATE
			, BANK_CODE
			, ACCOUNT_NUM
			, BANKBOOK_NAME
			, AMT_I	
			, IN_REMARK
			, INSERT_DB_USER
			, INSERT_DB_TIME
		)					
		VALUES ( 
			  ''
			, ''
			, 0
			, #{MSG}			  
			, ''
			, 0
			, ''
			, 0
			, 0
			, ''
			, ''
			, ''
			, ''
			, 0
			, ''
			, 'UNILITE5'
			, GETDATE()	
		)
	</update>  


	<!-- 에러가 없을 경우 실 테이블에 insert할 데이터 조회 -->	
	<select id="abh230ukrServiceImpl.getData" parameterType="Map" resultType="rMap">
		SELECT  * FROM ABH230T_XLS
		 WHERE _EXCEL_JOBID		= #{_EXCEL_JOBID}
		   AND _EXCEL_ROWNUM   != 0
	</select>
	
	
	<!-- 실테이블에 insert -->	
	<update id="abh230ukrServiceImpl.excelValidate">
		INSERT INTO ABH230T 
			( 
			  COMP_CODE
			, SEQ
			, ORG_AC_DATE	
			, ORG_SLIP_NUM
			, ORG_SLIP_SEQ
			, PAY_EXP_DATE
			, BANK_CODE
			, BANK_NAME
			, ACCOUNT_NUM
			, BANKBOOK_NAME
			, AMT_I	
			, IN_REMARK
			, CMS_TRANS_YN
			, ACCNT
			, INSERT_DB_USER
			, INSERT_DB_TIME
		)
		SELECT 
			  A.COMP_CODE
			, A.SEQ
			, A.ORG_AC_DATE	
			, A.ORG_SLIP_NUM
			, A.ORG_SLIP_SEQ
			, A.PAY_EXP_DATE
			, A.BANK_CODE
			, A.BANK_NAME
			, #{ACCOUNT_NUM}
			, A.BANKBOOK_NAME
			, A.AMT_I	
			, A.IN_REMARK
			, 'N'
			, B.ACCNT
			, #{S_USER_ID}	
			, GETDATE()	  
			
		 FROM 		ABH230T_XLS	A WITH(NOLOCK)
		 LEFT JOIN	AGJ210T		B WITH(NOLOCK)	ON B.COMP_CODE	= A.COMP_CODE
										   AND B.AC_DATE	= A.ORG_AC_DATE
										   AND B.SLIP_NUM	= A.ORG_SLIP_NUM
										   AND B.SLIP_SEQ	= A.ORG_SLIP_SEQ
										   AND ISNULL(B.MOD_DIVI, '') != 'D'
		WHERE _EXCEL_JOBID		= #{_EXCEL_JOBID}
		  AND _EXCEL_ROWNUM		= #{ROWNUM}
	</update>  


	<!-- 로그테이블 삭제 -->	
	<update id="abh230ukrServiceImpl.deleteLog" parameterType="Map">
		DELETE FROM ABH230T_XLS
	</update>


	<!-- 에러메세지 조회 -->	
	<select id="abh230ukrServiceImpl.getErrMsg" parameterType="Map" resultType="String">
		SELECT _EXCEL_ERROR_MSG AS ERR_MSG
		  FROM ABH230T_XLS
		 WHERE _EXCEL_ROWNUM	= 0
	</select>







	<!-- CMS 관련 로직 (예금주 조회 / 결과 받기) -->
	<!-- 로그 테이블 (L_AGH220T)에 INSERT : 동일한 컬럼내용으로 같이 사용 (박재범 부장님) -->
	<insert id="abh230ukrServiceImpl.insertLogDetailsCms" parameterType="Map">	  
		 INSERT INTO L_ABH220T
				(
				  KEY_VALUE
				, AUTO_NUM
				, COMP_CODE
				, SEQ
				, ACCNT
				, ORG_AC_DATE
				, ORG_SLIP_NUM
				, ORG_SLIP_SEQ
				, INSERT_DB_USER
				, INSERT_DB_TIME
				)
		VALUES
				(
				  #{KEY_VALUE}
				, #{DOC_ID}
				, #{S_COMP_CODE}
				, #{SEQ}
				, #{ACCNT}
				, #{ORG_AC_DATE}
				, #{ORG_SLIP_NUM}
				, #{ORG_SLIP_SEQ}
				, #{S_USER_ID}
				, GETDATE()
			)
	</insert>	  

	<!-- 예금주 조회 SP 호출 -->
	<update id="spUspAccntAbh230ukrFnBanknameQuery" parameterType="Map" statementType="CALLABLE">
		{call USP_ACCNT_ABH230UKR_fnBankNameQuery (
			#{S_COMP_CODE	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{KEY_VALUE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{S_LANG_CODE	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{S_USER_ID		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
            #{RTN_VALUE     , mode=OUT  , jdbcType=VARCHAR  , javaType=java.lang.String},
			#{ERROR_DESC	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update>  

    <!-- Header List -->
    <select id="abh230ukrServiceImpl.getTempHeader" parameterType="Map" resultType="rMap">
    /* abh230ukrServiceImpl.getTempHeader */
    SELECT  *
      FROM  L_ERP_HEADER WITH (NOLOCK)
     WHERE  KEY_VALUE = #{KEY_VALUE}
    </select>

    <select id="abh230ukrServiceImpl.getTempBody" parameterType="Map" resultType="rMap">
    /* abh230ukrServiceImpl.getTempBody */ 
    SELECT * 
      FROM L_ERP_BODY WITH(NOLOCK)
     WHERE KEY_VALUE = #{KEY_VALUE} 
    </select>

    <insert id="abh230ukrServiceImpl.insTempToHeader" parameterType="Map">
    /* abh230ukrServiceImpl.insTempToHeader */ 
    INSERT INTO BRANCH.ERP_HEADER (
         JUMIN_BIZ_NO
        ,USE_BASE
        ,TR_CODE
        ,TR_KEY
        ,REQUEST_DATE
        ,BUKRS
        ,REQUEST_TIME
        ,EXEC_DATE
        ,STATUS
        ,STATUS_DESC
        ,OUT_BANKCODE
        ,OUT_CURRCODE
        ,OUT_ACCTNO
        ,TOTAL_CNT
        ,TOTAL_AMT
        ,SUCCESS_CNT
        ,SUCCESS_AMT
        ,ERROR_CNT
        ,ERROR_AMT
        ,ERPIF_START_DATE
        ,ERPIF_START_TIME
        ,ERPIF_END_DATE
        ,ERPIF_END_TIME
        ,ERPIF_RES_CODE
        ,ERPIF_RES_DESC
        ,CREATOR
        ,CREATOR_NM
        ,OPERATOR
        ,OPERATOR_NM
        ,APPROVAL_YN
        ,FIELD_01
        ,FIELD_02
        ,FIELD_03
        ,FIELD_04
        ,FIELD_05
        ,FIELD_06
        ,FIELD_07
        ,FIELD_08
        ,FIELD_09
        ,FIELD_10
        ,SEND_NUM
        ,COMP_CODE
        ,JOB_YN
     ) 
        SELECT
             JUMIN_BIZ_NO
            ,USE_BASE
            ,TR_CODE
            ,TR_KEY
            ,REQUEST_DATE
            ,BUKRS
            ,REQUEST_TIME
            ,EXEC_DATE
            ,STATUS
            ,STATUS_DESC
            ,OUT_BANKCODE
            ,OUT_CURRCODE
            ,OUT_ACCTNO
            ,TOTAL_CNT
            ,TOTAL_AMT
            ,SUCCESS_CNT
            ,SUCCESS_AMT
            ,ERROR_CNT
            ,ERROR_AMT
            ,ERPIF_START_DATE
            ,ERPIF_START_TIME
            ,ERPIF_END_DATE
            ,ERPIF_END_TIME
            ,ERPIF_RES_CODE
            ,ERPIF_RES_DESC
            ,CREATOR
            ,CREATOR_NM
            ,OPERATOR
            ,OPERATOR_NM
            ,APPROVAL_YN
            ,FIELD_01
            ,FIELD_02
            ,FIELD_03
            ,FIELD_04
            ,FIELD_05
            ,FIELD_06
            ,FIELD_07
            ,FIELD_08
            ,FIELD_09
            ,FIELD_10
            ,SEND_NUM
            ,COMP_CODE
            ,JOB_YN
          FROM L_ERP_HEADER WITH (NOLOCK)
         WHERE KEY_VALUE    = #{KEY_VALUE}
           AND JUMIN_BIZ_NO = #{JUMIN_BIZ_NO}
           AND USE_BASE     = #{USE_BASE}
           AND TR_CODE      = #{TR_CODE}
           AND TR_KEY       = #{TR_KEY}
           AND REQUEST_DATE = #{REQUEST_DATE}
    </insert>

    <update id="abh230ukrServiceImpl.updtTempToBody" parameterType="Map">  
    /* abh230ukrServiceImpl.updtTempToBody */
    UPDATE L_ERP_BODY SET
        FIELD_002      = #{FIELD_002}
    WHERE JUMIN_BIZ_NO = #{JUMIN_BIZ_NO}
      AND USE_BASE     = #{USE_BASE}
      AND TR_CODE      = #{TR_CODE}
      AND TR_KEY       = #{TR_KEY}
      AND SEQ          = #{SEQ}
      AND REQUEST_DATE = #{REQUEST_DATE}
    </update>
            
    <insert id="abh230ukrServiceImpl.insTempToBody" parameterType="Map">
    /* abh230ukrServiceImpl.updTempBody */ 
    INSERT INTO BRANCH.ERP_BODY (
             JUMIN_BIZ_NO
            ,USE_BASE
            ,TR_CODE
            ,TR_KEY
            ,SEQ
            ,REQUEST_DATE
            ,BUKRS
            ,REQUEST_TIME
            ,EXEC_DATE
            ,STATUS
            ,STATUS_DESC
            ,ERPIF_START_DATE
            ,ERPIF_START_TIME
            ,ERPIF_END_DATE
            ,ERPIF_END_TIME
            ,ERPIF_RES_CODE
            ,ERPIF_RES_DESC
            ,CREATOR
            ,CREATOR_NM
            ,OPERATOR
            ,OPERATOR_NM
            ,TRANS_AMT
            ,FIELD_001
            ,FIELD_002
            ,FIELD_003
            ,FIELD_004
            ,FIELD_005
            ,FIELD_006
            ,FIELD_007
            ,FIELD_008
            ,FIELD_009
            ,FIELD_010
            ,FIELD_011
            ,FIELD_012
            ,FIELD_013
            ,FIELD_014
            ,FIELD_015
            ,FIELD_016
            ,FIELD_017
            ,FIELD_018
            ,FIELD_019
            ,FIELD_020
            ,FIELD_021
            ,FIELD_022
            ,FIELD_023
            ,FIELD_024
            ,FIELD_025
            ,FIELD_026
            ,FIELD_027
            ,FIELD_028
            ,FIELD_029
            ,FIELD_030
            ,FIELD_031
            ,FIELD_032
            ,FIELD_033
            ,FIELD_034
            ,FIELD_035
            ,FIELD_036
            ,FIELD_037
            ,FIELD_038
            ,FIELD_039
            ,FIELD_040
            ,FIELD_041
            ,FIELD_042
            ,FIELD_043
            ,FIELD_044
            ,FIELD_045
            ,FIELD_046
            ,FIELD_047
            ,FIELD_048
            ,FIELD_049
            ,FIELD_050
            ,FIELD_051
            ,FIELD_052
            ,FIELD_053
            ,FIELD_054
            ,FIELD_055
            ,FIELD_056
            ,FIELD_057
            ,FIELD_058
            ,FIELD_059
            ,FIELD_060
            ,FIELD_061
            ,FIELD_062
            ,FIELD_063
            ,FIELD_064
            ,FIELD_065
            ,FIELD_066
            ,FIELD_067
            ,FIELD_068
            ,FIELD_069
            ,FIELD_070
            ,FIELD_071
            ,FIELD_072
            ,FIELD_073
            ,FIELD_074
            ,FIELD_075
            ,FIELD_076
            ,FIELD_077
            ,FIELD_078
            ,FIELD_079
            ,FIELD_080
            ,FIELD_081
            ,FIELD_082
            ,FIELD_083
            ,FIELD_084
            ,FIELD_085
            ,FIELD_086
            ,FIELD_087
            ,FIELD_088
            ,FIELD_089
            ,FIELD_090
            ,FIELD_091
            ,FIELD_092
            ,FIELD_093
            ,FIELD_094
            ,FIELD_095
            ,FIELD_096
            ,FIELD_097
            ,FIELD_098
            ,FIELD_099
            ,FIELD_100
            ,FIELD_101
            ,FIELD_102
            ,FIELD_103
            ,FIELD_104
            ,FIELD_105
            ,FIELD_106
            ,FIELD_107
            ,FIELD_108
            ,FIELD_109
            ,FIELD_110
            ,FIELD_111
            ,FIELD_112
            ,FIELD_113
            ,FIELD_114
            ,FIELD_115
            ,FIELD_116
            ,FIELD_117
            ,FIELD_118
            ,FIELD_119
            ,FIELD_120
            ,SEND_NUM
            ,STATE_NUM
            ,REFER_YN
            ,COMP_CODE
            ,JOB_YN     
     ) 
        SELECT
             JUMIN_BIZ_NO
            ,USE_BASE
            ,TR_CODE
            ,TR_KEY
            ,SEQ
            ,REQUEST_DATE
            ,BUKRS
            ,REQUEST_TIME
            ,EXEC_DATE
            ,STATUS
            ,STATUS_DESC
            ,ERPIF_START_DATE
            ,ERPIF_START_TIME
            ,ERPIF_END_DATE
            ,ERPIF_END_TIME
            ,ERPIF_RES_CODE
            ,ERPIF_RES_DESC
            ,CREATOR
            ,CREATOR_NM
            ,OPERATOR
            ,OPERATOR_NM
            ,TRANS_AMT
            ,FIELD_001
            ,FIELD_002
            ,FIELD_003
            ,FIELD_004
            ,FIELD_005
            ,FIELD_006
            ,FIELD_007
            ,FIELD_008
            ,FIELD_009
            ,FIELD_010
            ,FIELD_011
            ,FIELD_012
            ,FIELD_013
            ,FIELD_014
            ,FIELD_015
            ,FIELD_016
            ,FIELD_017
            ,FIELD_018
            ,FIELD_019
            ,FIELD_020
            ,FIELD_021
            ,FIELD_022
            ,FIELD_023
            ,FIELD_024
            ,FIELD_025
            ,FIELD_026
            ,FIELD_027
            ,FIELD_028
            ,FIELD_029
            ,FIELD_030
            ,FIELD_031
            ,FIELD_032
            ,FIELD_033
            ,FIELD_034
            ,FIELD_035
            ,FIELD_036
            ,FIELD_037
            ,FIELD_038
            ,FIELD_039
            ,FIELD_040
            ,FIELD_041
            ,FIELD_042
            ,FIELD_043
            ,FIELD_044
            ,FIELD_045
            ,FIELD_046
            ,FIELD_047
            ,FIELD_048
            ,FIELD_049
            ,FIELD_050
            ,FIELD_051
            ,FIELD_052
            ,FIELD_053
            ,FIELD_054
            ,FIELD_055
            ,FIELD_056
            ,FIELD_057
            ,FIELD_058
            ,FIELD_059
            ,FIELD_060
            ,FIELD_061
            ,FIELD_062
            ,FIELD_063
            ,FIELD_064
            ,FIELD_065
            ,FIELD_066
            ,FIELD_067
            ,FIELD_068
            ,FIELD_069
            ,FIELD_070
            ,FIELD_071
            ,FIELD_072
            ,FIELD_073
            ,FIELD_074
            ,FIELD_075
            ,FIELD_076
            ,FIELD_077
            ,FIELD_078
            ,FIELD_079
            ,FIELD_080
            ,FIELD_081
            ,FIELD_082
            ,FIELD_083
            ,FIELD_084
            ,FIELD_085
            ,FIELD_086
            ,FIELD_087
            ,FIELD_088
            ,FIELD_089
            ,FIELD_090
            ,FIELD_091
            ,FIELD_092
            ,FIELD_093
            ,FIELD_094
            ,FIELD_095
            ,FIELD_096
            ,FIELD_097
            ,FIELD_098
            ,FIELD_099
            ,FIELD_100
            ,FIELD_101
            ,FIELD_102
            ,FIELD_103
            ,FIELD_104
            ,FIELD_105
            ,FIELD_106
            ,FIELD_107
            ,FIELD_108
            ,FIELD_109
            ,FIELD_110
            ,FIELD_111
            ,FIELD_112
            ,FIELD_113
            ,FIELD_114
            ,FIELD_115
            ,FIELD_116
            ,FIELD_117
            ,FIELD_118
            ,FIELD_119
            ,FIELD_120
            ,SEND_NUM
            ,STATE_NUM
            ,REFER_YN
            ,COMP_CODE
            ,JOB_YN
          FROM L_ERP_BODY WITH (NOLOCK)
         WHERE KEY_VALUE    = #{RTN_VALUE}
           AND JUMIN_BIZ_NO = #{JUMIN_BIZ_NO}
           AND USE_BASE     = #{USE_BASE}
           AND TR_CODE      = #{TR_CODE}
           AND TR_KEY       = #{TR_KEY}
           AND SEQ          = #{SEQ}
           AND REQUEST_DATE = #{REQUEST_DATE}
    </insert>

	<update id="spUspAccntAbh230ukrFnBankNameresult" parameterType="Map" statementType="CALLABLE">
		{call USP_ACCNT_ABH200UKR_fnBankNameresult (
			#{S_COMP_CODE	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{KEY_VALUE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{S_WORK_GB		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{S_LANG_CODE	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{S_USER_ID		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{ERROR_DESC	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update> 

    <update id="spUspAccntAbh230ukrFnBankNameresult2" parameterType="Map" statementType="CALLABLE">
    
        {call USP_ACCNT_ABH200UKR_fnBankNameresult2 (
            #{S_COMP_CODE, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{KEY_VALUE,  mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{S_WORK_GB,   mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{S_LANG_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
            #{S_USER_ID,  mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{ERROR_DESC,   mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>    





	<!-- 이체지급 버튼 로직 -->
	<update id="abh230ukrServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
		{call SP_GetAutoNumComp (
			#{COMP_CODE	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{DIV_CODE	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{TABLE_ID	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{PREFIX	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{BASIS_DATE, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{AUTO_TYPE	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{KEY_NUMBER, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update>

	<insert id="abh230ukrServiceImpl.insertMasterAbh200Save" parameterType="Map">	 
		INSERT INTO ABH200T  
			(					
			  COMP_CODE
			, SEND_NUM
			, SEND_DATE
			, PAY_METH 
			, PAY_CODE 
			, EX_DATE
			, EX_NUM
			, INSERT_DB_USER
			, INSERT_DB_TIME
			, UPDATE_DB_USER
			, UPDATE_DB_TIME
			)		  
		VALUES (			 
			  #{S_COMP_CODE}
			, #{KEY_NUMBER} 
			, CONVERT(VARCHAR, GETDATE(), 112)  
			, #{PAY_METH} 
			, #{PAY_CODE} 
			, #{EX_DATE}
			, #{EX_NUM}
			, #{S_USER_ID}	
			, GETDATE()	   
			, #{S_USER_ID}	
			, GETDATE()
		)
	</insert>

	<insert id="abh230ukrServiceImpl.insertDetailsAbh210Save" parameterType="Map">	 
		INSERT INTO ABH210T
			(
			  COMP_CODE
			, SEND_NUM
			, ACCNT
			, ORG_AC_DATE
			, ORG_SLIP_NUM
			, ORG_SLIP_SEQ
			, SEQ
			, DIV_CODE
			, PEND_CODE
			, PAY_CUSTOM_CODE
			<if test="@foren.Ognl@isNotEmpty(AMT_I)">
			, J_AMT_I
			</if>
			<if test="@foren.Ognl@isNotEmpty(INC_AMT_I)">
			, INC_AMT_I
			</if>
			<if test="@foren.Ognl@isNotEmpty(LOC_AMT_I)">
			, LOC_AMT_I
			</if>
			, PURCHASE_CARD_NUM
			, EXP_DATE
			, BANK_CODE
			, ACCOUNT_NUM
			, BANKBOOK_NAME
			, AGREE_YN
			, EX_DATE
			, EX_NUM
			<if test="@foren.Ognl@isNotEmpty(IN_REMARK)">
			, IN_REMARK
			</if>
			, INSERT_DB_USER
			, INSERT_DB_TIME
			, UPDATE_DB_USER
			, UPDATE_DB_TIME
		
			)
		VALUES
			(
			  #{S_COMP_CODE}
			, #{SEND_NUM}
			, #{ACCNT}
			, #{ORG_AC_DATE}
			, #{ORG_SLIP_NUM}
			, #{ORG_SLIP_SEQ}
			, #{SEQ}
			, #{DIV_CODE}
			, ''						--미결항목코드(PEND_CODE)
			, ''						--지급처코드(PAY_CUSTOM_CODE)
			<if test="@foren.Ognl@isNotEmpty(AMT_I)">
			, #{AMT_I}
			</if>
			<if test="@foren.Ognl@isNotEmpty(INC_AMT_I)">
			, #{INC_AMT_I}
			</if>
			<if test="@foren.Ognl@isNotEmpty(LOC_AMT_I)">
			, #{LOC_AMT_I}
			</if>
			, #{PURCHASE_CARD_NUM}
			, #{EXP_DATE}
			, #{BANK_CODE}
			, unilite.fnCipherEncrypt(#{ACCOUNT_NUM}, '')
			, #{BANKBOOK_NAME}
			, 'N'
			, #{EX_DATE}
			, #{EX_NUM}
			<if test="@foren.Ognl@isNotEmpty(IN_REMARK)">
			, #{IN_REMARK}
			</if>
			, #{S_USER_ID}
			, GETDATE()
			, #{S_USER_ID}
			, GETDATE()
			)
	</insert>
	
	
	
<insert id="abh230ukrServiceImpl.insertRequestLogDetail" parameterType="Map">     
    INSERT INTO L_TB_ES_APRV
    (
        KEY_VALUE
       ,OPR_FLAG       
       ,COMP_CODE      
       ,USER_ID 
       
       ,ORG_AC_DATE  
       ,ORG_SLIP_NUM 
        
       
       ,APRV_COMP_CODE 
       ,INSERT_DB_USER
       ,INSERT_DB_TIME
       ,UPDATE_DB_USER
       ,UPDATE_DB_TIME
    )
    VALUES
    (
        #{KEY_VALUE}
       ,#{OPR_FLAG}
       ,#{S_COMP_CODE}
       ,#{S_PERSON_NUMB}
         
       ,#{ORG_AC_DATE}
       ,#{ORG_SLIP_NUM} 
       
         
       ,#{S_COMP_CODE}
       ,#{S_PERSON_NUMB}
       ,GETDATE()
       ,#{S_PERSON_NUMB}
       ,GETDATE()
    )

</insert>     
        
<update id="uspJoinsAccntAprvCheckAbh230ukr" parameterType="Map" statementType="CALLABLE">
    {call USP_ACCNT_AprvCheck_JS(
    
        #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
        #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
        #{APRV_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
        #{SLIP_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
        #{USER_ID,       mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
        #{ErrorDesc,     mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
    )}
</update>
    
<update id="uspJoinsAccntAprvBufAbh230ukr" parameterType="Map" statementType="CALLABLE">
    {call USP_ACCNT_AprvBuffer_JS(
    
        #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
        #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
        #{APRV_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
        #{USER_ID,       mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
        #{GW_KEY_VALUE,  mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
        #{ErrorDesc,     mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
    )}
</update>
<update id="uspJoinsAccntAprvMainAbh230ukr" parameterType="Map" statementType="CALLABLE">
    {call USP_ACCNT_AprvMain_JS(
    
        #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
        #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
        #{APRV_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
        #{USER_ID,       mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
        #{ErrorDesc,     mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
    )}
</update>
</mapper>