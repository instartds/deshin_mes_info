<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="abh300ukrServiceImpl">
						
	<select id="abh300ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
	  /* abh300ukr.Cabh300ukr[fnAbh300Qstd] QUERY01 */
		    BEGIN
		        DECLARE         @COMP_CODE          NVARCHAR(10)              /*  (필수) 법인코드 		*/
		                      , @FR_DATE            NVARCHAR(08)              /*  (필수) 일자(FR)		*/
		                      , @TO_DATE            NVARCHAR(08)              /*  (필수) 일자(TO)		*/
		                      , @SAVE_CODE          NVARCHAR(08)              /*  (선택) 통장코드 		*/
		                      , @SAVE_NAME          NVARCHAR(30)              /*  (선택) 통장명 		*/
		                      , @AP_STS             NVARCHAR(01)              /*  (선택) 전표승인여부	*/
		                      , @PROC_FLAG          NVARCHAR(04)              /*  (필수) 실행구분 		*/
		                      , @USER_ID            NVARCHAR(100)              /* (필수) 사용자ID		*/
		                      , @INPUT_DATE         NVARCHAR(10)              /* (필수) 입력일자 		*/
		    
		  /*   [ 변수 값 할당 ] -------------------------------------------------------------------------------------------------- */
		        SET @COMP_CODE          = #{S_COMP_CODE}
		        SET @FR_DATE            = #{DATE_FR}
		        SET @TO_DATE            = #{DATE_TO}
		        SET @SAVE_CODE          = #{BANK_BOOK_CODE}
		        SET @SAVE_NAME          = #{BANK_BOOK_NAME}
		        SET @AP_STS             = #{AP_STS}
		        SET @PROC_FLAG          = #{PROC_FLAG}            /* Proc:자동기표, Canc:기표취소 */
		        SET @USER_ID            = #{S_USER_ID}
		        SET @INPUT_DATE         = GETDATE()
		    
		  /*   [ 명칭 참조 유형 ] ------------------------------------------------------------------------------------------------ */
		        DECLARE         @RefItem            NVARCHAR(01)
		    
		        SELECT TOP 1 @RefItem = REF_ITEM
		        FROM   BSA300T WITH (NOLOCK)
		        WHERE  USER_ID = @USER_ID
		    
		        SET @RefItem = ISNULL(@RefItem, N'0')
		    
		  /*   [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------- */
		        DECLARE @DateFormat             NVARCHAR(10)
		    
		        SELECT TOP 1 @DateFormat = CODE_NAME
		        FROM   BSA100T WITH (NOLOCK)
		        WHERE  COMP_CODE = @COMP_CODE
		        AND    MAIN_CODE = N'B044'
		        AND    REF_CODE1 = N'Y'
		    
		        SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
		    
		  /*   [ 임시 테이블 처리 ] ---------------------------------------------------------------------------------------------- */
		        DECLARE     @TypeKey                NVARCHAR(20)
		    
		        SET @TypeKey  = REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(30), GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '')
		    
		        IF NOT EXISTS   (
		                        SELECT TOP 1 1
		                        FROM   T_ABH300UKR1 WITH (NOLOCK)
		                        WHERE  TYPE_KEY LIKE LEFT(@TypeKey, 8) + '%'
		                        )
		        BEGIN
		            TRUNCATE TABLE T_ABH300UKR1
		        END
		    
		  /*   [ 데이터 생성 ] --------------------------------------------------------------------------------------------------- */
		      /*  1. 입금내역 데이터 생성 */
		        INSERT  INTO T_ABH300UKR1 ( TYPE_KEY    , TYPE_FLAG     , COMP_CODE , AUTO_NUM      , SEQ
		                                  , BANK_NAME   , SAVE_CODE     , SAVE_NAME , BANK_ACCOUNT
		                                  , INOUT_DATE  , INOUT_AMT_I   , REMARK    , CUSTOM_CODE   , CUSTOM_NAME   , EX_DATE    , EX_NUM
		                                  , EX_INFO     , AP_STS        , REMARK2   , IN_GUBUN   
		                                  , IN_REFT_NO  , REFER_PATH    , DIV_CODE  , ACCNT         ,ACCNT_NAME     , DEPT_CODE  , DEPT_NAME, MONEY_UNIT)
		        SELECT 
		               @TypeKey                                                                                     AS TYPE_KEY
		              , '1'                                                                                         AS TYPE_FLAG
		              , A.COMP_CODE                                                                                 AS COMP_CODE
		              , A.AUTO_NUM                                                                                  AS AUTO_NUM
		              , ROW_NUMBER() OVER (ORDER BY A.INOUT_DATE, C1.SAVE_CODE)                                     AS SEQ
		              , CASE WHEN @RefItem = '1' THEN C2.CUSTOM_NAME1
		                     WHEN @RefItem = '2' THEN C2.CUSTOM_NAME2
		                     ELSE                     C2.CUSTOM_NAME
		                END                                                                                         AS BANK_NAME
		              , C1.SAVE_CODE                                                                                AS SAVE_CODE
		              , C1.SAVE_NAME                                                                                AS SAVE_NAME
		              , unilite.fnCipherDecrypt(A.ACCOUNT_NUM, '')                                                  AS BANK_ACCOUNT
		              , REPLACE(
		                REPLACE(
		                REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
		                                   , 'MM'  , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                   , 'DD'  , SUBSTRING(A.INOUT_DATE, 7, 2))                                 AS INOUT_DATE
		              , A.INOUT_AMT_I                                                                               AS INOUT_AMT_I
		              , A.REMARK                                                                                    AS REMARK
		              , A.CUSTOM_CODE                                                                               AS CUSTOM_CODE
		              , CASE WHEN @RefItem = '1' THEN C3.CUSTOM_NAME1
		                     WHEN @RefItem = '2' THEN C3.CUSTOM_NAME2
		                     ELSE                     C3.CUSTOM_NAME
		                END                                                                                         AS CUSTOM_NAME
		              , CASE WHEN ISNULL(A.EX_DATE, '') = '' THEN NULL
		                     ELSE REPLACE(
		                          REPLACE(
		                          REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.EX_DATE, 1, 4))
		                                             , 'MM'  , SUBSTRING(A.EX_DATE, 5, 2))
		                                             , 'DD'  , SUBSTRING(A.EX_DATE, 7, 2))
		                END                                                                                         AS EX_DATE
		              , A.EX_NUM                                                                                    AS EX_NUM
		              , A.EX_DATE + RIGHT('0000000' + CONVERT(NVARCHAR(7), A.EX_NUM), 7)                            AS EX_INFO
		              , B.AP_STS                                                                                    AS AP_STS
		              , A.REMARK2                                                                                   AS REMARK2
		              , A.IN_GUBUN                                                                                  AS IN_GUBUN
		              , A.IN_REFT_NO                                                                                AS IN_REFT_NO
		              , CASE WHEN ISNULL(A.TEMPC_01, '') != '' THEN 'BRANCH 연계' ELSE '' END                        AS REFER_PATH
		              , B.DIV_CODE                                                                                  AS DIV_CODE
		              , ISNULL(A.ACCNT,'')      AS ACCNT
                      , ISNULL(D.ACCNT_NAME,'') AS ACCNT_NAME
                      , ISNULL(A.DEPT_CODE,'')  AS DEPT_CODE
                      , ISNULL(A.DEPT_NAME,'')  AS DEPT_NAME
		              , A.MONEY_UNIT
		        FROM                ABH300T   A  WITH (NOLOCK)
		                LEFT  JOIN  (
		                            SELECT  DISTINCT COMP_CODE, EX_DATE, EX_NUM, AP_STS, DIV_CODE
		                            FROM    AGJ110T WITH (NOLOCK)
		                            WHERE   COMP_CODE    = @COMP_CODE
		                            AND     EX_DATE     &gt;= @FR_DATE
		                            AND     INPUT_PATH   = '71'
		                            AND     MOD_DIVI    IS NULL
		                            )         B                ON B.COMP_CODE       = A.COMP_CODE
		                                                      AND B.EX_DATE         = A.EX_DATE
		                                                      AND B.EX_NUM          = A.EX_NUM
		                LEFT  JOIN  AFS100T   C1 WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
		                                                      AND REPLACE(uniLITE.fnCipherDecrypt(C1.BANK_ACCOUNT, ''), '-', '') = REPLACE(uniLITE.fnCipherDecrypt(A.ACCOUNT_NUM, ''), '-', '')
		                LEFT  JOIN  BCM100T   C2 WITH (NOLOCK) ON C2.COMP_CODE      = A.COMP_CODE
		                                                      AND C2.CUSTOM_CODE    = C1.BANK_CODE
		                LEFT  JOIN  BCM100T   C3 WITH (NOLOCK) ON C3.COMP_CODE      = A.COMP_CODE
		                                                      AND C3.CUSTOM_CODE    = A.CUSTOM_CODE
		                LEFT  JOIN  BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE      = A.COMP_CODE
		                                                      AND M1.MAIN_CODE      = N'A020'
		                                                      AND M1.SUB_CODE       = CASE WHEN ISNULL(A.IN_REFT_NO, '') != '' THEN 'Y'
		                                                                                   ELSE 'N'
		                                                                              END
		                LEFT  JOIN  ABA400T   D WITH (NOLOCK)  ON D.COMP_CODE       = A.COMP_CODE
                                                              AND D.ACCNT           = A.ACCNT
		        WHERE   A.COMP_CODE          =         @COMP_CODE
		        AND     A.INOUT_DATE     &gt;=         @FR_DATE
		        AND     A.INOUT_DATE     &lt;=         @TO_DATE
		        AND     A.INOUT_DIVI         =         '1'
		        AND   ((C1.SAVE_CODE     LIKE       ISNULL(@SAVE_CODE, '')  + '%'   AND ISNULL(@SAVE_CODE, '')  != '') OR (ISNULL(@SAVE_CODE, '')   = ''))
		        AND   ((C1.SAVE_NAME     LIKE '%' + ISNULL(@SAVE_NAME, '')  + '%'   AND ISNULL(@SAVE_NAME, '')  != '') OR (ISNULL(@SAVE_NAME, '')   = ''))
		        AND   ((B.AP_STS           =        ISNULL(@AP_STS, '')             AND ISNULL(@AP_STS, '')     != '') OR (ISNULL(@AP_STS, '')      = ''))
		        AND   ((ISNULL(A.EX_DATE, '')    =   ''                  AND 
		                ISNULL(A.EX_NUM , 0 )    =   0                   AND ISNULL(@PROC_FLAG, '')       = 'PROC')
		        OR     (ISNULL(A.EX_DATE, '')   !=  ''                   AND ISNULL(@PROC_FLAG, '')       = 'CANC')
		        OR     (ISNULL(@PROC_FLAG, '')   = ''))
		    
		      /*  2. 합계 데이터 생성 */
		        INSERT  INTO T_ABH300UKR1 ( TYPE_KEY, TYPE_FLAG, COMP_CODE, SEQ, BANK_NAME, INOUT_AMT_I, EX_NUM )
		        SELECT 
		                @TypeKey                                                                                    AS TYPE_KEY
		              , '2'                                                                                         AS TYPE_FLAG
		              , COMP_CODE                                                                                   AS COMP_CODE
		              , NULL                                                                                        AS SEQ
		              , '9999'                                                                                      AS BANK_NAME
		              , SUM(ISNULL(INOUT_AMT_I, 0))                                                                 AS INOUT_AMT_I
		              , NULL                                                                                        AS EX_NUM
		        FROM    T_ABH300UKR1 WITH (NOLOCK)
		        WHERE   TYPE_KEY    = @TypeKey
		        AND     TYPE_FLAG   = '1'
		        GROUP BY COMP_CODE
		    
		  /*   [ 데이터 조회 ] --------------------------------------------------------------------------------------------------- */
		        SELECT 
		                A.SEQ
		              , CONVERT(BIT, 0)             AS CHOICE
		              , A.BANK_NAME
		              , A.SAVE_CODE
		              , A.SAVE_NAME
		              , A.BANK_ACCOUNT
		              , A.INOUT_DATE
		              , A.INOUT_AMT_I
		              , A.REMARK
		              , A.CUSTOM_CODE
		              , A.CUSTOM_NAME
		              , A.REMARK2
		              , A.IN_GUBUN
		              , A.EX_DATE
		              , A.EX_NUM
		              , A.EX_INFO
		              , A.AP_STS
		              , M1.CODE_NAME                AS AP_STS_NM
		              , A.IN_REFT_NO
		              , A.REFER_PATH
		              , A.TYPE_FLAG
		              , A.AUTO_NUM
		              , A.COMP_CODE
		              , A.DIV_CODE
		              , A.ACCNT
		              , A.ACCNT_NAME
                      , A.DEPT_CODE
                      , A.DEPT_NAME
                      , A.MONEY_UNIT
		        FROM                T_ABH300UKR1   A  WITH (NOLOCK)
		                LEFT JOIN   BSA100T        M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
		                                                           AND M1.MAIN_CODE  = 'A014'
		                                                           AND M1.SUB_CODE   = A.AP_STS
		        WHERE   A.TYPE_KEY = @TypeKey
		        ORDER   BY A.TYPE_FLAG, A.INOUT_DATE, A.SAVE_CODE
		    END
    </select>
	
	<update id="abh300ukrServiceImpl.updateDetail" parameterType="Map">	
	/* --abh300ukr.Cabh300ukr[fnAbh300Save] Query02 */
		UPDATE ABH300T
		   SET CUSTOM_CODE = #{CUSTOM_CODE}
		     , ACCNT       = #{ACCNT}
		     , REMARK2     = #{REMARK2}
		     , IN_GUBUN    = #{IN_GUBUN}
		     , DEPT_CODE   = #{DEPT_CODE}
             , DEPT_NAME   = #{DEPT_NAME}
		     
		 WHERE AUTO_NUM    = #{AUTO_NUM}
		   AND COMP_CODE   = #{S_COMP_CODE}
  	</update>
	
	<update id="abh300ukrServiceImpl.deleteDetail" parameterType="Map">
	/* --abh300ukr.Cabh300ukr[fnAbh300Save] Query01" */
		DELETE  FROM ABH300T
		 WHERE  COMP_CODE   = #{S_COMP_CODE}
		  AND   AUTO_NUM    = #{AUTO_NUM}
		  AND   ISNULL(#{EX_DATE},		'') = ''
		  AND   ISNULL(#{IN_REFT_NO},	'') = ''
  	</update>
  	
  	

	<!-- 자동기표 -->
	<!-- SP 실행을 위한 LOG table에 data insert -->
	<update id="abh300ukrServiceImpl.insertLogTable" parameterType="Map">     
	    INSERT INTO L_ABH300T
	           (
				  KEY_VALUE
				, OPR_FLAG 
				, AUTO_NUM 
				, PROC_TYPE
				, COMP_CODE
				, DIV_CODE 
				, PROC_DATE
				, INSERT_DB_USER
				, INSERT_DB_TIME     
	           )
	     VALUES
	           ( 
	              #{KEY_VALUE}
				, #{OPR_FLAG}         
				, #{AUTO_NUM}
				, #{PROC_TYPE}
				, #{COMP_CODE}
				, #{DIV_CODE}
				, #{PROC_DATE}
				, #{S_USER_ID}
				, GETDATE()         
	           ) 
	</update>
	
	<!-- 자동기표 SP호출 -->
	<update id="runAutoSlip" parameterType="Map" statementType="CALLABLE">
	    {call USP_ACCNT_AutoSlip71 (
	        #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{USER_ID,       mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{LANG_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{EBYN_MESSAGE,  mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>

	<!-- 기표취소 SP 호출 -->
	<update id="cancelSlip" parameterType="Map" statementType="CALLABLE">
	    {call USP_ACCNT_AutoSlip71Cancel (
	        #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{USER_ID,       mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{LANG_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>



	
	<!-- INTERFACE -->
	<!-- 인터페이스 로그테이블에 데이터 INSERT -->
	<update id="abh300ukrServiceImpl.insertInterfaceLog" parameterType="Map">
		 INSERT INTO L_ABH_IF
              (
                KEY_VALUE
		      , COMP_CODE 
		      , APP_ID  
		      , INDEX_NUM 
		      , AC_DATE  
		      , SLIP_NUM 
		      , SLIP_SEQ 
		      , AMT_I  
		      , BANK_CODE 
		      , ACCOUNT_NUM 
		      , REMARK  
		      , INSERT_DB_USER
		      , INSERT_DB_TIME
		      )
		 SELECT  #{KEY_VALUE}
               , #{S_COMP_CODE}  
               , A.IN_GUBUN
               , A.AUTO_SLIP_NUM
               , C.AC_DATE
               , C.SLIP_NUM
               , C.SLIP_SEQ
               , A.INOUT_AMT_I 
               , B.BANK_CODE
               , UNILITE.FNCIPHERDECRYPT(A.ACCOUNT_NUM, '') 
               , A.REMARK
               , #{S_USER_ID}       
               , GETDATE() 
           FROM      ABH300T AS A WITH (NOLOCK)
	       LEFT JOIN AFS100T AS B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                           AND UNILITE.FNCIPHERDECRYPT(B.BANK_ACCOUNT, '') = UNILITE.FNCIPHERDECRYPT(A.ACCOUNT_NUM, '')
	       LEFT JOIN (SELECT COMP_CODE
	                       , AC_DATE
	                       , SLIP_NUM
	                       , SLIP_SEQ
	                       , AUTO_SLIP_NUM
	                    FROM AGJ110T WITH (NOLOCK)
	                   WHERE COMP_CODE = #{S_COMP_CODE}
	                     AND ISNULL(MOD_DIVI, '') = ''
	                     AND DR_CR  = '2'
				         AND AP_STS = '2'
				         AND ISNULL(AUTO_SLIP_NUM, '') != ''
	                 )       AS C              ON C.COMP_CODE     = A.COMP_CODE
	                                          AND C.AUTO_SLIP_NUM = A.AUTO_SLIP_NUM
		  WHERE   A.COMP_CODE        = #{S_COMP_CODE}
		    AND   A.AUTO_NUM         = #{AUTO_NUM}
            AND   A.SEND_YN          = 'N'
            AND   A.IN_GUBUN         IN ('S', 'A', 'P')
	</update>

	<!-- 인터페이스 정보 조회1 -->
	<select id="abh300ukrServiceImpl.getInfoIF" parameterType="Map" resultType="rMap">
      /* abh300ukrServiceImpl.getInfoIF */
		SELECT A.CODE_NAME 	AS action_url
		  FROM BSA100T AS A                 WITH (NOLOCK)
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.MAIN_CODE	 = 'B610'
		   AND A.SUB_CODE	!= '$'
		   AND A.SUB_CODE	 = 'action_url'
	</select>
	
	<!-- 인터페이스 정보 조회2 -->
	<select id="abh300ukrServiceImpl.getInfoIF2" parameterType="Map" resultType="rMap">
    /* abh300ukrServiceImpl.getInfoIF2  */
		SELECT *
		FROM   L_ABH_IF       WITH (NOLOCK)
	   WHERE   KEY_VALUE = #{KEY_VALUE}
	</select>
    
    <update id="abh300ukrServiceImpl.updateFlag" parameterType="Map">
    /* abh300ukrServiceImpl.updateFlag  */
         UPDATE ABH300T SET
                SEND_YN           = #{SEND_YN}
              , RET_CODE          = #{RET_CODE}
              , ERR_MSG           = #{ERR_MSG}
              , UPDATE_DB_USER    = #{S_USER_ID}
              , UPDATE_DB_TIME    = GETDATE() 
          WHERE   COMP_CODE        = #{COMP_CODE}
            AND   AUTO_SLIP_NUM    = #{AUTO_SLIP_NUM}
    </update>

    <update id="abh300ukrServiceImpl.updateOriginal" parameterType="Map">
         UPDATE ABH300T SET
                INOUT_AMT_I       = #{INOUT_AMT_I_ORIGINAL}  
              , REMARK            = #{REMARK_ORIGINAL}       
              
              , UPDATE_DB_USER    = #{S_USER_ID}
              , UPDATE_DB_TIME    = GETDATE() 
          WHERE   COMP_CODE       = #{S_COMP_CODE}
            AND   AUTO_NUM        = #{AUTO_NUM}
    </update>
    
    <insert id="abh300ukrServiceImpl.insertDivision" parameterType="Map">
    	INSERT INTO ABH300T
    	(
    	   COMP_CODE,
    	   ACCOUNT_NUM,        
    	   MONEY_UNIT,
    	   INOUT_DATE,     
    	   
    	   
    	   INOUT_DIVI,
    	   INOUT_AMT_I,    
    	   REMARK,         
    	   ACCNT,          
    	   CUSTOM_CODE,
    	   PROJECT_NO,
    	   IN_SAVE_CODE,
    	   DIV_CODE,
    	   DEPT_CODE,      
    	   DEPT_NAME,      
    	   INSERT_DB_USER,
    	   INSERT_DB_TIME,
    	   UPDATE_DB_USER,
    	   UPDATE_DB_TIME
    	   
    	   
    	)VALUES(
    	   #{S_COMP_CODE},
           #{BANK_ACCOUNT},        
           #{MONEY_UNIT},
           #{INOUT_DATE_DIVISION},     
           
           '1',
           #{INOUT_AMT_I_DIVISION},    
           #{REMARK_DIVISION},         
           #{ACCNT_DIVISION},          
           #{CUSTOM_CODE},
           #{PROJECT_NO},
           #{SAVE_CODE},   
           #{DIV_CODE},
           #{DEPT_CODE_DIVISION},      
           #{DEPT_NAME_DIVISION},      
           #{S_USER_ID},
           GETDATE(),
           #{S_USER_ID},
           GETDATE()
    	) 
    </insert>
    
    

</mapper>