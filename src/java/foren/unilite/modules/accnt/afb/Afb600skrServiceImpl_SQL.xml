<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb600skrServiceImpl">
<select id="afb600skrServiceImpl.selectBudgName" parameterType="Map" resultType="rMap">		/* BUDG_NAME 컬럼수*/
--UAccntPopupKrv.CAccntPopupKR[fnGetBudgCode] Query02
BEGIN
    DECLARE         @COMP_CODE          NVARCHAR(08)

--  [ 변수 값 할당 ] ------------------------------------------------------------------------------------------
    SET @COMP_CODE  = #{S_COMP_CODE}

--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
    SELECT  CODE_NAME
    FROM    uniLITE.fnGetBudgLevelName(@COMP_CODE, '')
END	
</select>	
	
<select id="afb600skrServiceImpl.selectList" parameterType="Map" resultType="rMap">		/* 메인*/
--afb600skr.Cafb600skr[fnAfb600Qstd] QUERY03
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE         @COMP_CODE          NVARCHAR(08)
                  , @DRAFT_NO           NVARCHAR(20)

--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
    SET @COMP_CODE    = #{S_COMP_CODE}
    SET @DRAFT_NO     = #{DRAFT_NO}

--  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
    DECLARE         @DateFormat         NVARCHAR(10)

    SELECT TOP 1 @DateFormat = M1.CODE_NAME
    FROM   BSA100T M1 WITH (NOLOCK)
    WHERE  M1.COMP_CODE = @COMP_CODE
    AND    M1.MAIN_CODE = 'B044'
    AND    M1.REF_CODE1 = 'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')

--  [ 그룹웨어 연동여부 설정 ] ----------------------------------------------------------------------------------------
    DECLARE         @LinkedGW           NVARCHAR(01)
                  , @ConfirmButton  NVARCHAR(01)

    SELECT TOP 1 @LinkedGW = M1.REF_CODE1
    FROM   BSA100T M1 WITH (NOLOCK)
    WHERE  M1.COMP_CODE = @COMP_CODE
    AND    M1.MAIN_CODE = 'A169'
    AND    M1.SUB_CODE  = '22'

    SET @LinkedGW = ISNULL(@LinkedGW, '')

--  [ 비연계확정 버튼 사용여부 ] ------------------------------------------------------------------------------------------
    SELECT @ConfirmButton = REF_CODE1
    FROM   BSA100T WITH (NOLOCK)
    WHERE  COMP_CODE    = @COMP_CODE
    AND    MAIN_CODE    = 'A169'
    AND    SUB_CODE     = '23'

    SET @ConfirmButton = ISNULL(@ConfirmButton, '')

--  [ 임시 테이블 처리 ] ----------------------------------------------------------------------------------------------
    DECLARE     @TypeKey                NVARCHAR(20)

    SET @TypeKey  = REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(30), GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '')

    IF NOT EXISTS   (
                    SELECT TOP 1 1
                    FROM   T_AFB600SKR1 WITH (NOLOCK)
                    WHERE  TYPE_KEY LIKE LEFT(@TypeKey, 8) + '%'
                    )
    BEGIN
        TRUNCATE TABLE T_AFB600SKR1
    END

--  [ 데이터 생성 ] ---------------------------------------------------------------------------------------------------
    -- 1. 상세내역 데이터 생성
    INSERT  INTO T_AFB600SKR1(TYPE_KEY, TYPE_FLAG, COMP_CODE, ORDER_SEQ, STATUS, DRAFT_NO, SEQ, DRAFT_DATE, TITLE, TOTAL_AMT_I
                            , BUDG_CODE, BUDG_NAME, PJT_CODE, PJT_NAME, BUDG_GUBUN, BUDG_AMT, EXPEN_REQ_AMT, PAY_DRAFT_AMT, DRAFT_REMIND_AMT, REMARK
                            , CLOSE_YN, CLOSE_YN_NM, CONFIRM_YN_NM, AGREE_YN_NM, CLOSE_DATE, DRAFTER, PAY_USER, DEPT_CODE, DEPT_NAME, DIV_CODE, DIV_NAME, GWIF_ID
                            , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME)
    SELECT  
            @TypeKey                                                                    AS TYPE_KEY
          , '0'                                                                        AS TYPE_FLAG
          , A.COMP_CODE                                                                 AS COMP_CODE
          , ROW_NUMBER() OVER (ORDER BY A.DRAFT_DATE, A.DRAFT_NO, B.DRAFT_SEQ)          AS ORDER_SEQ
          , M5.CODE_NAME                                                                AS STATUS
          , A.DRAFT_NO                                                                  AS DRAFT_NO
          , B.DRAFT_SEQ                                                                 AS SEQ
          , A.DRAFT_DATE                                                                AS DRAFT_DATE
          , A.TITLE                                                                     AS TITLE
          , B1.TOT_BUDG_AMT                                                             AS TOTAL_AMT_I
          , B.BUDG_CODE                                                                 AS BUDG_CODE
          , D.BUDG_NAME                                                                 AS BUDG_NAME
          , B.PJT_CODE                                                                  AS PJT_CODE
          , D1.PJT_NAME                                                                 AS PJT_NAME
          , M1.CODE_NAME                                                                AS BUDG_GUBUN
          , B.BUDG_AMT                                                                  AS BUDG_AMT
          , B.EXPEN_REQ_AMT                                                             AS EXPEN_REQ_AMT
          , B.PAY_DRAFT_AMT                                                             AS PAY_DRAFT_AMT
          , B.DRAFT_REMIND_AMT                                                          AS DRAFT_REMIND_AMT
          , B.REMARK                                                                    AS REMARK
          , B.CLOSE_YN                                                                  AS CLOSE_YN
          , M2.CODE_NAME                                                                AS CLOSE_YN_NM
          , M3.CODE_NAME                                                                AS CONFIRM_YN_NM
          , M4.CODE_NAME                                                                AS AGREE_YN_NM
          , CASE WHEN B.CLOSE_YN = 'Y' THEN ISNULL(B.CLOSE_DATE, A.DRAFT_DATE)
                 ELSE ''
            END                                                                         AS CLOSE_DATE
          , D2.NAME                                                                     AS DRAFTER
          , D3.NAME                                                                     AS PAY_USER
          , A.DEPT_CODE                                                                 AS DEPT_CODE
          , D5.TREE_NAME                                                                AS DEPT_NAME
          , A.DIV_CODE                                                                  AS DIV_CODE
          , D4.DIV_NAME                                                                 AS DIV_NAME
          , CASE WHEN ISNULL(C.GW_STATUS, '0') = '0' THEN '' ELSE C.GWIF_ID END         AS GWIF_ID
          , B.INSERT_DB_USER
          , B.INSERT_DB_TIME
          , B.UPDATE_DB_USER
          , B.UPDATE_DB_TIME
    FROM                AFB600T   A  WITH (NOLOCK)
            INNER JOIN  AFB610T   B  WITH (NOLOCK) ON B.COMP_CODE           = A.COMP_CODE
                                                  AND B.DRAFT_NO            = A.DRAFT_NO
            LEFT  JOIN  T_GWIF    C  WITH (NOLOCK) ON C.GWIF_KEY1           = A.COMP_CODE
                                                  AND C.GWIF_KEY2           = '3'
                                                  AND C.GWIF_KEY3           = A.DRAFT_NO
            INNER JOIN  (SELECT 
                                COMP_CODE
                              , DRAFT_NO
                              , SUM(ISNULL(BUDG_AMT, 0)) AS TOT_BUDG_AMT
                         FROM   AFB610T WITH (NOLOCK)
                         WHERE  COMP_CODE  = #{S_COMP_CODE}
                         GROUP  BY COMP_CODE, DRAFT_NO
                        )         B1              ON B1.COMP_CODE           = A.COMP_CODE
                                                 AND B1.DRAFT_NO            = A.DRAFT_NO
            LEFT  JOIN  AFB400T   D  WITH (NOLOCK) ON D.COMP_CODE           = B.COMP_CODE
                                                  AND D.AC_YYYY             = uniLITE.fnGetBudgAcYyyy(A.COMP_CODE, A.DRAFT_DATE)
                                                  AND D.BUDG_CODE           = B.BUDG_CODE
            LEFT  JOIN  BCM600T   D1 WITH (NOLOCK) ON D1.COMP_CODE          = B.COMP_CODE
                                                  AND D1.PJT_CODE           = B.PJT_CODE
            LEFT  JOIN  HUM100T   D2 WITH (NOLOCK) ON D2.COMP_CODE          = A.COMP_CODE
                                                  AND D2.PERSON_NUMB        = A.DRAFTER
            LEFT  JOIN  HUM100T   D3 WITH (NOLOCK) ON D3.COMP_CODE          = A.COMP_CODE
                                                  AND D3.PERSON_NUMB        = A.PAY_USER
            LEFT  JOIN  BOR120T   D4 WITH (NOLOCK) ON D4.COMP_CODE          = A.COMP_CODE
                                                  AND D4.DIV_CODE           = A.DIV_CODE
            LEFT  JOIN  BSA210T   D5 WITH (NOLOCK) ON D5.COMP_CODE          = A.COMP_CODE
                                                  AND D5.TREE_CODE          = A.DEPT_CODE
            LEFT  JOIN  BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE          = B.COMP_CODE
                                                  AND M1.MAIN_CODE          = 'A170'
                                                  AND M1.SUB_CODE           = B.BUDG_GUBUN
            LEFT  JOIN  BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE          = B.COMP_CODE
                                                  AND M2.MAIN_CODE          = 'B219'
                                                  AND M2.SUB_CODE           = B.CLOSE_YN
            LEFT  JOIN  BSA100T   M3 WITH (NOLOCK) ON M3.COMP_CODE          = B.COMP_CODE
                                                  AND M3.MAIN_CODE          = 'A207'
                                                  AND M3.SUB_CODE           = A.CONFIRM_YN
            LEFT  JOIN  BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE          = B.COMP_CODE
                                                  AND M4.MAIN_CODE          = 'B219'
                                                  AND M4.SUB_CODE           = A.AGREE_YN
            LEFT  JOIN  BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE          = A.COMP_CODE
                                                  AND M5.MAIN_CODE          = 'A134'
                                                  AND M5.SUB_CODE           = CASE WHEN A.STATUS != '0' THEN A.STATUS
                                                                                    ELSE ISNULL(C.GW_STATUS, A.STATUS)
                                                                              END
    WHERE   A.COMP_CODE         = #{S_COMP_CODE}
    AND     A.DRAFT_DATE    &gt;= #{DRAFT_DATE_FR}
    AND     A.DRAFT_DATE    &lt;= #{DRAFT_DATE_TO}
    <if test="@foren.Ognl@isNotEmpty(DRAFTER)">
    AND     A.DRAFTER       LIKE #{DRAFTER}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DRAFT_NAME)">
    AND     D2.NAME         LIKE #{DRAFT_NAME}
    </if>
    <if test="@foren.Ognl@isNotEmpty(TITLE)">
    AND     A.TITLE         LIKE #{TITLE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
    AND     A.DIV_CODE IN
		<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
		 #{item}
		</foreach>									
 	</if>
    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
    AND     A.DEPT_CODE     LIKE #{DEPT_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
    AND     D5.TREE_NAME    LIKE #{DEPT_NAME}
    </if>
    <if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
    AND     B.PJT_CODE      LIKE #{PJT_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(PJT_NAME)">
    AND     D1.PJT_NAME     LIKE #{PJT_NAME}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DRAFT_NO)">
    AND     A.DRAFT_NO      LIKE #{DRAFT_NO}
    </if>
    <if test="@foren.Ognl@isNotEmpty(BUDG_CODE)">
    AND     D.BUDG_CODE     LIKE #{BUDG_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(BUDG_NAME)">
    AND     D.BUDG_NAME     LIKE #{BUDG_NAME}
    </if>
    <if test="CLOSE_YN == &quot;Y&quot;">
    AND     B.CLOSE_YN          = #{CLOSE_YN}
    </if>
    <if test="CLOSE_YN == &quot;N&quot;">
    AND     B.CLOSE_YN          = #{CLOSE_YN}
    </if>
    <if test="STATUS == &quot;0&quot;">
    AND     CASE WHEN A.STATUS != '0' THEN A.STATUS ELSE ISNULL(C.GW_STATUS, A.STATUS) END = #{STATUS}
    </if>
    <if test="STATUS == &quot;1&quot;">
    AND     CASE WHEN A.STATUS != '0' THEN A.STATUS ELSE ISNULL(C.GW_STATUS, A.STATUS) END = #{STATUS}
    </if>
    <if test="STATUS == &quot;5&quot;">
    AND     CASE WHEN A.STATUS != '0' THEN A.STATUS ELSE ISNULL(C.GW_STATUS, A.STATUS) END = #{STATUS}
    </if>
    <if test="STATUS == &quot;9&quot;">
    AND     CASE WHEN A.STATUS != '0' THEN A.STATUS ELSE ISNULL(C.GW_STATUS, A.STATUS) END = #{STATUS}
    </if>
    <if test="STOP_CHECK == &quot;1&quot;">
    AND     CASE WHEN A.STATUS != '0' THEN A.STATUS ELSE ISNULL(C.GW_STATUS, A.STATUS) END != '5'   -- 반려제외
    </if>
    ORDER BY A.DRAFT_DATE, A.DRAFT_NO, B.DRAFT_SEQ

    

--  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
    SELECT  A.TYPE_FLAG
          , A.ORDER_SEQ
          , CONVERT(BIT, 0)                                                                                 AS CHOICE
          , A.COMP_CODE
          , A.STATUS
          , A.DRAFT_NO
          , A.SEQ
          , CASE WHEN ISNULL(A.DRAFT_DATE, '') = '' THEN ''
                 ELSE REPLACE(
                      REPLACE(
                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.DRAFT_DATE , 1, 4))
                                         , 'MM'  , SUBSTRING(A.DRAFT_DATE , 5, 2))
                                         , 'DD'  , SUBSTRING(A.DRAFT_DATE , 7, 2))
            END                                                                                             AS DRAFT_DATE
          , A.TITLE
          , A.TOTAL_AMT_I
          , A.BUDG_CODE
          <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
          , C${index+1}.BUDG_NAME                                                                        AS BUDG_NAME_${index+1}
          </foreach>
          , A.PJT_CODE
          , A.PJT_NAME
          , A.BUDG_GUBUN
          , A.BUDG_AMT
          , A.EXPEN_REQ_AMT
          , A.PAY_DRAFT_AMT
          , A.DRAFT_REMIND_AMT
          , A.REMARK
          , A.CLOSE_YN
          , A.CLOSE_YN_NM
          , A.CONFIRM_YN_NM
          , A.AGREE_YN_NM
          , CASE WHEN ISNULL(A.CLOSE_DATE, '') = '' THEN ''
                 ELSE REPLACE(
                      REPLACE(
                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.CLOSE_DATE , 1, 4))
                                         , 'MM'  , SUBSTRING(A.CLOSE_DATE , 5, 2))
                                         , 'DD'  , SUBSTRING(A.CLOSE_DATE , 7, 2))
            END                                                                                             AS CLOSE_DATE
          , A.DRAFTER
          , A.PAY_USER
          , A.DEPT_CODE
          , A.DEPT_NAME
          , A.DIV_CODE
          , A.DIV_NAME
          , A.GWIF_ID
    FROM                T_AFB600SKR1   A  WITH (NOLOCK)
    		-- 레코드count
            LEFT  JOIN  AFB400T   C${budgNameInfoList.size} ON C${budgNameInfoList.size}.COMP_CODE  = A.COMP_CODE
                                                  						 AND C${budgNameInfoList.size}.AC_YYYY    = uniLITE.fnGetBudgAcYyyy(A.COMP_CODE, A.DRAFT_DATE)
                                              	  						 AND C${budgNameInfoList.size}.BUDG_CODE  = A.BUDG_CODE
            -- 레코드index-1
            <foreach collection="budgNameInfoList" item="budgNameInfo" index="index">
           		<if test="index+1 &lt; budgNameInfoList.size">
            	LEFT  JOIN  AFB400T   C${budgNameInfoList.size-(index+1)}  ON C${budgNameInfoList.size-(index+1)}.COMP_CODE  = C${budgNameInfoList.size-(index)}.COMP_CODE    
	                                                           						   AND C${budgNameInfoList.size-(index+1)}.AC_YYYY    = C${budgNameInfoList.size-(index)}.AC_YYYY      
	                                                           						   AND C${budgNameInfoList.size-(index+1)}.BUDG_CODE  = C${budgNameInfoList.size-(index)}.TREE_LEVEL 
            	</if>
            </foreach>
    WHERE   A.TYPE_KEY    = @TypeKey
    ORDER BY A.TYPE_FLAG, A.ORDER_SEQ

    SET NOCOUNT OFF
    SET ARITHABORT OFF
END	
</select>

<insert id="afb600skrServiceImpl.insertLogAfb600tc" parameterType="Map">		/* LOG저장 */
INSERT INTO L_AFB600TC
     ( KEY_VALUE      
	 , OPR_FLAG
	 , COMP_CODE
     , DRAFT_NO
     , DRAFT_SEQ
     , CLOSE_YN
     , INSERT_DB_USER
     , INSERT_DB_TIME
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     ) 
VALUES
     ( #{KEY_VALUE}                                                   
     , #{OPR_FLAG}
     , #{S_COMP_CODE}
     , #{DRAFT_NO}
     , #{SEQ}
     , #{CLOSE_YN}
     , #{S_USER_ID}
     , GETDATE()
     , #{S_USER_ID}
     , GETDATE()
     )
</insert>

<update id="afb600skrServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
{call USP_ACCNT_AFB600SKR_Close (
	#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	#{UserId, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
	#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
)}
</update>
</mapper>