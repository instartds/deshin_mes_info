<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb120ukrServiceImpl">
	
<select id="afb120ukrServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">
DECLARE  @COMP_CODE       NVARCHAR(08)   --(필수) 법인코드 
       , @AC_YYYY         NVARCHAR(04)   --(필수) 예산년도
       , @DEPT_CODE       NVARCHAR(08)   --(필수) 부서코드
	   , @DEPT_NAME       NVARCHAR(99)   --(필수) 부서코드
	   , @FnDate          NVARCHAR(02)   -- 회계시작년월(월)
       , @sFrMonth        NVARCHAR(08)   
       , @sToMonth        NVARCHAR(08)   

	SET  @COMP_CODE    = #{S_COMP_CODE}
	SET  @AC_YYYY      = #{AC_YYYY}
	SET  @DEPT_CODE    = #{DEPT_CODE}
	SET  @DEPT_NAME    = #{DEPT_NAME}
	SET  @sFrMonth 	  = #{sFrMonth}
	SET  @sToMonth 	  = #{sToMonth}

	SELECT 
		 A.AC_YYYY
		,A.DEPT_CODE
		,A.DEPT_NAME
		,A.ACCNT
		,A.ACCNT_NAME
		,ISNULL(B.BUDGET_I,0) AS BUDGET_I
		,CASE WHEN ISNULL(B.BUDGET_I,0) > 0 THEN B.BUDGET_I
			  ELSE ISNULL(B.BUDGET_OLD,0) END AS BUDGET_OLD
	--	,ISNULL(B.BUDGET_OLD,0) AS BUDGET_OLD
		,A.EDIT_YN
	  FROM(
			SELECT CONVERT(NVARCHAR(6), @AC_YYYY) AS AC_YYYY
			 	 , CONVERT(NVARCHAR(16), @DEPT_CODE) AS DEPT_CODE
			 	 , CONVERT(NVARCHAR(60), @DEPT_NAME) AS DEPT_NAME
			     , CONVERT(NUMERIC(25,4), 0) AS BUDGET_OLD
			 	 , A.ACCNT
			 	 , A.ACCNT_NAME
			 	 , CONVERT(NUMERIC(25,4), 0) AS BUDGET_I
			 	 , CASE WHEN ISNULL(SLIP_SW,'') = 'N' OR ISNULL(GROUP_YN,'') = 'Y' 
						THEN 'N'
						ELSE 'Y' 
						END AS EDIT_YN
		 	  FROM ABA400T A WITH (NOLOCK)
			 WHERE A.COMP_CODE = @COMP_CODE
		  	   AND A.BUDG_YN = 'Y'
		) A
 LEFT JOIN (
				SELECT A.ACCNT
					 , ISNULL(SUM(A.BUDGET_I), 0) AS BUDGET_I
					 , ISNULL(SUM(A.BUDGET_OLD), 0) AS BUDGET_OLD 
				  FROM (
					SELECT A.ACCNT
						 , CASE WHEN ISNULL(SUM(ISNULL(A.BUDG_CONF_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_CONV_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_ASGN_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_SUPP_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_IWALL_I, 0)), 0) - 
			               ISNULL(SUM(ISNULL(A.EX_AMT_I, 0)), 0) - 
			               ISNULL(SUM(ISNULL(A.AC_AMT_I, 0)), 0) &gt; 0 THEN
			               ISNULL(SUM(ISNULL(A.BUDG_CONF_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_CONV_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_ASGN_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_SUPP_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_IWALL_I, 0)), 0) - 
			               ISNULL(SUM(ISNULL(A.EX_AMT_I, 0)), 0) - 
			               ISNULL(SUM(ISNULL(A.AC_AMT_I, 0)), 0) ELSE
			               0 END AS BUDGET_I
			             , CASE WHEN ISNULL(SUM(ISNULL(A.BUDG_CONF_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_CONV_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_ASGN_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_SUPP_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_IWALL_I, 0)), 0) - 
			               ISNULL(SUM(ISNULL(A.EX_AMT_I, 0)), 0) - 
			               ISNULL(SUM(ISNULL(A.AC_AMT_I, 0)), 0) &gt; 0 THEN
			               ISNULL(SUM(ISNULL(A.BUDG_CONF_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_CONV_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_ASGN_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_SUPP_I, 0)), 0) + 
			               ISNULL(SUM(ISNULL(A.BUDG_IWALL_I, 0)), 0) - 
			               ISNULL(SUM(ISNULL(A.EX_AMT_I, 0)), 0) - 
			               ISNULL(SUM(ISNULL(A.AC_AMT_I, 0)), 0) ELSE
			               0 END AS BUDGET_OLD
			          FROM AFB110T A  WITH (NOLOCK)
			         WHERE A.COMP_CODE = @COMP_CODE
			           AND A.ACCNT IS NOT NULL
			           AND A.DEPT_CODE = @DEPT_CODE
			           AND A.BUDG_YYYYMM BETWEEN @sFrMonth AND @sToMonth
			         GROUP BY A.ACCNT
			
			         UNION ALL
			
			        SELECT A.ACCNT
			             , 0 AS BUDGET_I
			             , ISNULL(SUM(ISNULL(A.DIVERT_BUDG_I, 0)), 0) AS BUDGET_OLD
			          FROM AFB120T A  WITH (NOLOCK)
			         WHERE A.COMP_CODE = @COMP_CODE
			           AND A.ACCNT IS NOT NULL
			           AND A.DEPT_CODE = @DEPT_CODE
			           AND A.DIVERT_YYYYMM BETWEEN @sFrMonth AND @sToMonth
			         GROUP BY A.ACCNT
			       ) A
				GROUP BY A.ACCNT
			  ) B ON B.ACCNT = A.ACCNT
	ORDER BY A.ACCNT ASC
</select>
	<select id="afb120ukrServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		--UAfb01KR.Cafb120UKR[fnCreateRecordSet]Query13
		DECLARE  @COMP_CODE       NVARCHAR(08)  
		       , @AC_YYYY         NVARCHAR(04)  
		       , @DEPT_CODE       NVARCHAR(08)   
			   , @ACCNT       	  NVARCHAR(08)   
		       , @sFrMonth        NVARCHAR(08)   
		       , @sToMonth        NVARCHAR(08)   
		
			SET  @COMP_CODE    = #{S_COMP_CODE}
			SET  @AC_YYYY      = #{AC_YYYY}
			SET  @DEPT_CODE    = #{DEPT_CODE}
			SET  @ACCNT    	   = #{ACCNT}
			SET  @sFrMonth 	   = #{sFrMonth}
			SET  @sToMonth 	   = #{sToMonth}
				
		SELECT A.AC_YYYY
		     , A.ACCNT
		     , ISNULL((SELECT ACCNT_NAME 
		                 FROM ABA400T    WITH (NOLOCK)
		                WHERE COMP_CODE = A.COMP_CODE
		                  AND ACCNT     = A.ACCNT ), '') AS ACCNT_NAME
		     , A.DEPT_CODE
		     , A.DEPT_NAME
		     , A.UPDATE_DB_USER
		     , A.UPDATE_DB_TIME
		  	, A.BUDG_YYYYMM
		  	, A.DIVERT_DIVI
		    , A.DIVERT_YYYYMM
		     , A.DIVERT_ACCNT
		     , ISNULL((SELECT ACCNT_NAME 
		                 FROM ABA400T    WITH (NOLOCK)
		                WHERE COMP_CODE = A.COMP_CODE
		                  AND ACCNT     = A.DIVERT_ACCNT ), '') AS DIVERT_ACCNT_NAME
		     , A.DIVERT_DEPT_CODE
		     , ISNULL((SELECT TREE_NAME 
		                 FROM BSA210T   WITH (NOLOCK)
		                WHERE COMP_CODE = A.COMP_CODE
		                  AND TREE_CODE = A.DIVERT_DEPT_CODE), '') AS DIVERT_DEPT_NAME
		     , ISNULL(A.DIVERT_BUDG_I, 0) AS DIVERT_BUDG_I
		     , A.REMARK
		     , CASE WHEN ISNULL(B.SLIP_SW,'') = 'N' OR ISNULL(B.GROUP_YN,'') = 'Y'
		                 THEN 'N' 
		                 ELSE 'Y'
		        END AS EDIT_YN
		     , A.COMP_CODE
		   FROM AFB120T A  WITH (NOLOCK)
		 INNER JOIN ABA400T B  WITH (NOLOCK)  ON A.COMP_CODE = B.COMP_CODE
											  AND A.ACCNT = B.ACCNT
		 WHERE A.COMP_CODE = @COMP_CODE
		--   AND A.AC_YYYY   = @AC_YYYY
		   AND A.BUDG_YYYYMM BETWEEN @sFrMonth AND @sToMonth
		   AND A.DEPT_CODE = @DEPT_CODE
		   AND A.ACCNT     = @ACCNT 
	</select>
	<select id="afb120ukrServiceImpl.fnGetResultRate" parameterType="Map" resultType="rMap">
		--UAfb01KR.CAfb100UKR[fnGetResultRate]Query9
	SELECT SUBSTRING(A.AC_DATE, 5, 2) AS AC_DATE
	    , CASE (SELECT JAN_DIVI
	    FROM ABA400T  WITH (NOLOCK)
	    WHERE COMP_CODE = #{S_COMP_CODE}
	    AND ACCNT     = A.ACCNT )
	                WHEN '1' THEN ISNULL(SUM(ISNULL(A.DR_AMT_I, 0)), 0)
	                WHEN '2' THEN ISNULL(SUM(ISNULL(A.DR_AMT_I, 0)), 0)
	                ELSE 0
	            END AS ACTUAL_I
	      FROM AGB100T A  WITH (NOLOCK)
	     WHERE A.COMP_CODE = #{S_COMP_CODE}
	       AND A.ACCNT     = #{ACCNT}
	       AND A.DEPT_CODE = #{DEPT_CODE}
	       AND SUBSTRING(A.AC_DATE, 1, 6) BETWEEN #{FR_DATE} AND #{TO_DATE}
	     GROUP BY A.ACCNT, SUBSTRING(A.AC_DATE, 5, 2)
	     ORDER BY 1 ASC
		
	</select>
	
	<insert id="afb120ukrServiceImpl.insertLogDetail" parameterType="Map">    	
 	INSERT INTO L_AFB120T
           ( KEY_VALUE			,OPR_FLAG			,COMP_CODE			,AC_YYYY			,ACCNT
			,ACCNT_NAME			,DEPT_CODE			,BUDG_YYYYMM		,DIVERT_YYYYMM		,DIVERT_DIVI
			,DIVERT_ACCNT		,DIVERT_ACCNT_NAME	,DIVERT_DEPT_CODE	,DEPT_NAME			,DIVERT_DEPT_NAME
			,DIVERT_BUDG_I		,SEQ
			,REMARK				,INSERT_DB_USER		,INSERT_DB_TIME		,UPDATE_DB_USER		
			,UPDATE_DB_TIME		,TEMPC_01			,TEMPC_02			,TEMPC_03			,TEMPN_01			
			,TEMPN_02			,TEMPN_03

          )
    VALUES
		  (   #{KEY_VALUE}			,#{OPR_FLAG}			,#{COMP_CODE}			,#{AC_YYYY}				,#{ACCNT}                             
		     ,#{ACCNT_NAME}			,#{DEPT_CODE}			,#{BUDG_YYYYMM}			,#{DIVERT_YYYYMM}		,#{DIVERT_DIVI}                       
		     ,#{DIVERT_ACCNT}		,#{DIVERT_ACCNT_NAME}	,#{DIVERT_DEPT_CODE}	,#{DEPT_NAME}			,#{DIVERT_DEPT_NAME}                  
		     ,#{DIVERT_BUDG_I}		,#{SEQ}
		     ,#{REMARK}				,#{S_USER_ID}			,GETDATE()				,#{S_USER_ID}		
		     ,GETDATE()     		,NULL					,NULL					,NULL					,NULL			
		     ,NULL					,NULL
		  )     

	</insert>	
	
	<update id="spUspAccntAfb120ukr" parameterType="Map" statementType="CALLABLE">
		{call USP_ACCNT_AFB120UKR (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{UserId, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{FR_MONTH, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{TO_MONTH, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>	 
	
	<insert id="afb120ukrServiceImpl.insertDetail" parameterType="Map">
		
	</insert>
	
	<update id="afb120ukrServiceImpl.updateDetail" parameterType="Map">		

			
	</update>
	
	<update id="afb120ukrServiceImpl.deleteDetail" parameterType="Map">
		
	</update>
</mapper>