<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb130ukrServiceImpl">
	
<select id="afb130ukrServiceImpl.selectChargeInfo" parameterType="Map" resultType="rMap">	/* 사용자ID로부터 회계담당자 코드, 담당자명, 사용부서, 사번 정보 가져오기*/	
--zfa_popupZ.fnGetChargeInfo 
SELECT  A.SUB_CODE      AS CHARGE_CODE  
     ,  A.CODE_NAME     AS CHARGE_NAME  
     ,  A.REF_CODE2     AS CHARGE_DIVI  
     ,  C.PERSON_NUMB   AS CHARGE_PNUMB 
     ,  C.NAME          AS CHARGE_PNAME 
  FROM              BSA100T   A  WITH (NOLOCK)  
         LEFT  JOIN  BSA300T   B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE   
                                               AND B.USER_ID     = A.REF_CODE1   
         LEFT  JOIN  HUM100T   C  WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE   
                                               AND C.PERSON_NUMB = B.PERSON_NUMB 

 WHERE  A.COMP_CODE = #{S_COMP_CODE}
   AND  A.MAIN_CODE = N'A009'   
   AND  A.REF_CODE1 = #{S_USER_ID}  
</select>

<select id="afb130ukrServiceImpl.selectList1" parameterType="Map" resultType="rMap">	
--UAfb01Krv.CAfb130UKR[fnCreateRecordSet]Query9
SELECT A.BUDG_YYYYMM
     , A.CHOICE
     , A.ACCNT
     , A.ACCNT_NAME
     , A.BUDG_TOT_I
     , A.IWALL_YYYYMM
     , A.BUDG_AMT_I
     , 'N' AS EDIT_YN
     , #{S_COMP_CODE} COMP_CODE
  FROM (SELECT ISNULL(A.BUDG_YYYYMM, '') AS BUDG_YYYYMM
             , CAST(0 AS BIT) AS CHOICE
             , A.ACCNT
             , ISNULL((SELECT ACCNT_NAME 
                         FROM ABA400T   WITH (NOLOCK)
                        WHERE COMP_CODE = A.COMP_CODE
                          AND ACCNT     = A.ACCNT ), '') AS ACCNT_NAME
             , (SUM(ISNULL(A.BUDG_CONF_I , 0)) +
                SUM(ISNULL(A.BUDG_CONV_I , 0)) +
                SUM(ISNULL(A.BUDG_ASGN_I , 0)) +
                SUM(ISNULL(A.BUDG_SUPP_I , 0)) +
                SUM(ISNULL(A.BUDG_IWALL_I, 0)) -
                SUM(ISNULL(A.EX_AMT_I, 0)) - 
                SUM(ISNULL(A.AC_AMT_I, 0)) - 
                SUM(ISNULL(C.IWALL_AMT_I, 0))) AS BUDG_TOT_I
             , unilite.fnGetUserTypeDate(A.COMP_CODE, CONVERT(NVARCHAR(7), ''), 'M') AS IWALL_YYYYMM
             , (SUM(ISNULL(A.BUDG_CONF_I , 0)) +
                SUM(ISNULL(A.BUDG_CONV_I , 0)) +
                SUM(ISNULL(A.BUDG_ASGN_I , 0)) +
                SUM(ISNULL(A.BUDG_SUPP_I , 0)) +
                SUM(ISNULL(A.BUDG_IWALL_I, 0)) -
                SUM(ISNULL(A.EX_AMT_I, 0)) - 
                SUM(ISNULL(A.AC_AMT_I, 0)) - 
                SUM(ISNULL(C.IWALL_AMT_I, 0))) AS BUDG_AMT_I
          FROM AFB110T A  WITH (NOLOCK)
                       LEFT OUTER JOIN ABA400T B   WITH (NOLOCK)
                                    ON A.COMP_CODE   = B.COMP_CODE
                                   AND A.ACCNT       = B.ACCNT
                       LEFT OUTER JOIN AFB130T C   WITH (NOLOCK)
                                    ON A.COMP_CODE   = C.COMP_CODE
                                   AND A.ACCNT       = C.ACCNT
                                   AND A.BUDG_YYYYMM = C.BUDG_YYYYMM
                                   AND A.DEPT_CODE   = C.DEPT_CODE
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
           AND B.BUDG_YN     = 'Y'
           AND A.BUDG_YYYYMM = ''
           AND A.DEPT_CODE   = ''
         GROUP BY A.COMP_CODE, A.ACCNT, A.BUDG_YYYYMM, A.DEPT_CODE
       ) A
 WHERE A.BUDG_TOT_I > 0 
</select>
	
<select id="afb130ukrServiceImpl.selectList2" parameterType="Map" resultType="rMap">		
--UAfb01Krv.CAfb130UKR[fnCreateRecordSet]Query10
SELECT A.BUDG_YYYYMM
     , A.DEPT_CODE
     , A.DEPT_NAME
     , A.USER_CODE
     , A.UPDATE_DB_USER
     , A.UPDATE_DB_TIME
     , A.ACCNT
     , ISNULL((SELECT ACCNT_NAME
                 FROM ABA400T   WITH (NOLOCK)
                WHERE COMP_CODE = A.COMP_CODE
                  AND ACCNT     = A.ACCNT ), '') AS ACCNT_NAME
     , CASE ISNULL(A.IWALL_YYYYMM, '') 
            WHEN '' THEN ''
            ELSE unilite.fnGetUserTypeDate(A.COMP_CODE, A.IWALL_YYYYMM, 'M') 
        END AS IWALL_YYYYMM
     , ISNULL(A.IWALL_AMT_I, 0) AS IWALL_AMT_I
     , CASE ISNULL(A.IWALL_DATE, '') 
            WHEN '' THEN ''
            ELSE unilite.fnGetUserDateComp(A.COMP_CODE, A.IWALL_DATE)
        END AS IWALL_DATE
     , ISNULL(( SELECT CODE_NAME 
                  FROM BSA100T   WITH (NOLOCK)
                 WHERE COMP_CODE   = A.COMP_CODE
                   AND MAIN_CODE   = 'A009' 
                   AND A.USER_CODE = SUB_CODE ), '') AS USER_NAME
     , #{S_COMP_CODE} COMP_CODE
  FROM AFB130T A   WITH (NOLOCK)
               LEFT OUTER JOIN ABA400T B  WITH (NOLOCK)
                            ON A.COMP_CODE   = B.COMP_CODE
                           AND A.ACCNT       = B.ACCNT
 WHERE A.COMP_CODE   = #{S_COMP_CODE}
   AND B.BUDG_YN     = 'Y'
   AND A.BUDG_YYYYMM = #{BUDG_YYYYMM}
   AND A.DEPT_CODE   = #{DEPT_CODE}
   <if test="@foren.Ognl@isEmpty(ST_DATE)">
   AND A.ACCNT IS NULL	
   </if>
   <if test="@foren.Ognl@isEmpty(DEPT_CODE)">
   AND A.ACCNT IS NULL	
   </if>
   ORDER BY A.ACCNT ASC, A.IWALL_YYYYMM
</select>	

<select id="afb130ukrServiceImpl.selectList3" parameterType="Map" resultType="rMap">	/* 참조 */	
--UAfb01Krv.CAfb130UKR[fnCreateRecordSet]Query11
SELECT A.BUDG_YYYYMM
     , A.CHOICE
     , A.ACCNT
     , A.ACCNT_NAME
     , A.BUDG_TOT_I
     , A.IWALL_YYYYMM
     , A.BUDG_AMT_I
     , CASE WHEN ISNULL(B.SLIP_SW,'') = 'N' OR ISNULL(B.GROUP_YN,'') = 'Y'
                 THEN 'N'
                 ELSE 'Y'
        END EDIT_YN
     , #{S_COMP_CODE} COMP_CODE
  FROM (
        SELECT ISNULL(A.BUDG_YYYYMM, '') AS BUDG_YYYYMM
             , CAST(0 AS BIT) AS CHOICE
             , A.ACCNT, ISNULL((SELECT ACCNT_NAME 
                                  FROM ABA400T   WITH (NOLOCK)
                                 WHERE COMP_CODE   = A.COMP_CODE
                                   AND ACCNT       = A.ACCNT ), '') AS ACCNT_NAME
             , CASE WHEN (SUM(ISNULL(A.EX_AMT_I, 0)) + SUM(ISNULL(A.AC_AMT_I, 0))) &lt; 0 THEN SUM(ISNULL(A.BUDG_CONF_I, 0)) + SUM(ISNULL(A.BUDG_CONV_I, 0)) + SUM(ISNULL(A.BUDG_ASGN_I, 0)) + SUM(ISNULL(A.BUDG_SUPP_I, 0)) + SUM(ISNULL(A.BUDG_IWALL_I, 0))
                         ELSE SUM(ISNULL(A.BUDG_CONF_I, 0)) + SUM(ISNULL(A.BUDG_CONV_I, 0)) + SUM(ISNULL(A.BUDG_ASGN_I, 0)) + SUM(ISNULL(A.BUDG_SUPP_I, 0)) + SUM(ISNULL(A.BUDG_IWALL_I, 0)) - SUM(ISNULL(A.EX_AMT_I, 0)) - SUM(ISNULL(A.AC_AMT_I, 0))
                END AS BUDG_TOT_I
        <if test="sNxtMonth &gt; sToMonth">
                 , unilite.fnGetUserTypeDate(A.COMP_CODE, '','M') AS IWALL_YYYYMM
        </if>
		<if test="sNxtMonth &lt;= sToMonth">
                 , CASE ISNULL(#{sNxtMonth}, '') 
                        WHEN '' THEN ''
                        ELSE unilite.fnGetUserTypeDateComp(A.COMP_CODE, #{sNxtMonth},'M')  
                    END AS IWALL_YYYYMM
        </if>
             , CASE WHEN (SUM(ISNULL(A.EX_AMT_I, 0)) + SUM(ISNULL(A.AC_AMT_I, 0))) &lt; 0 THEN SUM(ISNULL(A.BUDG_CONF_I, 0)) + SUM(ISNULL(A.BUDG_CONV_I, 0)) + SUM(ISNULL(A.BUDG_ASGN_I, 0)) + SUM(ISNULL(A.BUDG_SUPP_I, 0)) + SUM(ISNULL(A.BUDG_IWALL_I, 0))
                         ELSE SUM(ISNULL(A.BUDG_CONF_I, 0)) + SUM(ISNULL(A.BUDG_CONV_I, 0)) + SUM(ISNULL(A.BUDG_ASGN_I, 0)) + SUM(ISNULL(A.BUDG_SUPP_I, 0)) + SUM(ISNULL(A.BUDG_IWALL_I, 0)) - SUM(ISNULL(A.EX_AMT_I, 0)) - SUM(ISNULL(A.AC_AMT_I, 0))
                END AS BUDG_AMT_I
          FROM AFB110T A   WITH (NOLOCK)
                       LEFT OUTER JOIN ABA400T B   WITH (NOLOCK)
                                    ON A.COMP_CODE   = B.COMP_CODE
                                   AND A.ACCNT       = B.ACCNT
                       LEFT OUTER JOIN AFB130T C  WITH (NOLOCK)
                                    ON A.COMP_CODE   = C.COMP_CODE
                                   AND A.ACCNT       = C.ACCNT
                                   AND A.BUDG_YYYYMM = C.BUDG_YYYYMM
                                   AND A.DEPT_CODE   = C.DEPT_CODE
         WHERE A.COMP_CODE   = #{S_COMP_CODE}
           AND B.BUDG_YN     = 'Y'
           AND A.BUDG_YYYYMM = #{BUDG_YYYYMM}
           AND A.DEPT_CODE   = #{DEPT_CODE}
         GROUP BY A.COMP_CODE, A.ACCNT, A.BUDG_YYYYMM, A.DEPT_CODE
       ) A
     , ABA400T B WITH (NOLOCK)
 WHERE B.COMP_CODE  = #{S_COMP_CODE}
   AND A.BUDG_TOT_I &gt; 0
   AND A.ACCNT      = B.ACCNT
   <if test="@foren.Ognl@isNotEmpty(ACCOUNT_CODE_FR)">
   AND A.ACCNT &gt;= #{ACCOUNT_CODE_FR}
   </if>
   <if test="@foren.Ognl@isNotEmpty(ACCOUNT_CODE_TO)">
   AND A.ACCNT &lt;= #{ACCOUNT_CODE_TO}
   </if>
</select>

<select id="afb130ukrServiceImpl.selectFnDate" parameterType="Map" resultType="rMap">		
--UAfb01Krv.CAfb130UKR[fnAfb130q]Query1
SELECT SUBSTRING(FN_DATE,1,6) AS FN_DATE 
  FROM BOR100T  WITH (NOLOCK)
 WHERE COMP_CODE = #{S_COMP_CODE}
</select>	

<insert id="afb130ukrServiceImpl.insertLogAfb130t" parameterType="Map">						/* LOG저장 */
--afb530ukr.CAfb530UKR[fnBalancing] Query1-2
INSERT INTO L_AFB130T
     ( KEY_VALUE      
	 , OPR_FLAG
	 , COMP_CODE
	 , ACCNT
	 , DEPT_CODE
	 , DEPT_NAME
     , IWALL_YYYYMM
     , BUDG_YYYYMM
     , IWALL_AMT_I
     , IWALL_DATE
     , USER_CODE
     , INSERT_DB_USER
     , INSERT_DB_TIME
     ) 
VALUES
     ( #{KEY_VALUE}      
	 , #{OPR_FLAG}
	 , #{S_COMP_CODE}
	 , #{ACCNT}
	 , #{DEPT_CODE}
	 , #{DEPT_NAME}
     , #{IWALL_YYYYMM}
     , #{BUDG_YYYYMM}
     , #{IWALL_AMT_I}
     , #{IWALL_DATE}
     , #{USER_CODE}
     , #{S_USER_ID}
     , GETDATE()
     )
</insert>

<update id="afb130ukrServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
	{call USP_ACCNT_AFB130UKR (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{UserId, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{FR_MONTH, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{TO_MONTH, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
</update>
</mapper>