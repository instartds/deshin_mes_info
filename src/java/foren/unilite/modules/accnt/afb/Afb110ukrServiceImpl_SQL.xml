<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb110ukrServiceImpl">
	<select id="afb110ukrServiceImpl.spAccntGetPossibleBudgAmt110_1" parameterType="Map" resultType="rMap">
        DECLARE @COMP_CODE      NVARCHAR(08)              --(필수)법인코드
              , @BUDG_YYYYMM    NVARCHAR(06)              --(필수)예산년월
              , @ACCNT          NVARCHAR(16)              --(필수)계정과목
              , @DEPT_CODE      NVARCHAR(08)              --(필수)예산부서
              , @BALN_I         NUMERIC(30, 6)            --(결과)사용가능한 예산금액 (잔액)
              , @BUDG_I         NUMERIC(30, 6)            --(결과)예산총액 (확정예산+전용예산+배정예산+추경예산+이월예산)
              , @ACTUAL_I       NUMERIC(30, 6)            --(결과)실적금액
        
        SET @COMP_CODE   = #{S_COMP_CODE}  
        SET @BUDG_YYYYMM = #{BUDG_YYYYMM}
        SET @ACCNT       = #{ACCNT}
        SET @DEPT_CODE   = #{DEPT_CODE}

        EXEC uniLITE.SP_ACCNT_GetPossibleBudgAmt110 @COMP_CODE, @BUDG_YYYYMM, @ACCNT, @DEPT_CODE, @BALN_I OUTPUT, @BUDG_I OUTPUT, @ACTUAL_I OUTPUT 
      
        SELECT @BALN_I AS BALN_I, @BUDG_I AS BUDG_I, @ACTUAL_I AS ACTUAL_I
    </select>   
	
	<select id="afb110ukrServiceImpl.checkSelect" parameterType="Map" resultType="rMap">	
		--afb110ukr.Cafb110UKR[fnAfb110q]Query2
        SELECT A.*
          FROM AFB110T A WITH(NOLOCK)
         WHERE A.COMP_CODE = #{S_COMP_CODE}
           AND A.ACCNT IN (SELECT ACCNT
                             FROM ABA400T WITH(NOLOCK)
                            WHERE COMP_CODE = A.COMP_CODE
                              AND BUDG_YN   = 'Y')
           AND A.DEPT_CODE = #{DEPT_CODE}
           AND A.BUDG_YYYYMM BETWEEN #{sFrMonth} AND #{sToMonth}  
	</select>	
	
	<select id="afb110ukrServiceImpl.selectNewList" parameterType="Map" resultType="rMap">
		 DECLARE @COMP_CODE       NVARCHAR(08)   --(필수) 법인코드 
		       , @AC_YYYY         NVARCHAR(04)   --(필수) 예산년도
		       , @DEPT_CODE       NVARCHAR(08)   --(필수) 부서코드
			   , @DEPT_NAME       NVARCHAR(99)   --(필수) 부서코드
		       , @sFrMonth        NVARCHAR(08)   
		       , @sToMonth        NVARCHAR(08)   
			   , @sFrMonthTemp	  NVARCHAR(08)   
			   , @sTrMonthTemp    NVARCHAR(08)   
		
		SET @COMP_CODE    = #{S_COMP_CODE}  
		SET @AC_YYYY      = #{AC_YYYY}      
		SET @DEPT_CODE    = #{DEPT_CODE}    
		SET @DEPT_NAME    = #{DEPT_NAME}    
		SET @sFrMonth 	  = #{sFrMonth}     
		SET @sToMonth 	  = #{sToMonth}     
		SET @sFrMonthTemp = #{sFrMonthTemp} 
		SET @sTrMonthTemp = #{sTrMonthTemp} 
		
		SELECT 'NEW' AS LOADFLAG 
			 , A.GBNCD
			 , A.DEPT_CODE
			 , A.DEPT_NAME
			 , A.AC_YYYY
		     , A.ACCNT
			 , A.ACCNT_NAME
			 , ISNULL(C.ACTUAL_I,0) AS ACTUAL_I
			 , ISNULL((B.BUDG_01 + B.BUDG_02 + B.BUDG_03 + B.BUDG_04 + B.BUDG_05 + B.BUDG_06 + B.BUDG_07 + B.BUDG_08 + B.BUDG_09 + B.BUDG_10 + B.BUDG_11 + B.BUDG_12),0) AS BUDGET_I
			 , ISNULL(B.CAL_DIVI, ISNULL(A.CAL_DIVI2,'1')) AS CAL_DIVI
			 , A.EDIT_YN
			 , ACCNT_CD
			 , A.COMP_CODE
			 , A.BUDG_YN
			 , A.GROUP_YN
			 , CASE WHEN ISNULL(C.ACTUAL_I,0) = 0
			        THEN 0
			 		ELSE ISNULL((B.BUDG_01 + B.BUDG_02 + B.BUDG_03 + B.BUDG_04 + B.BUDG_05 + B.BUDG_06 + B.BUDG_07 + B.BUDG_08 + B.BUDG_09 + B.BUDG_10 + B.BUDG_11 + B.BUDG_12),0) / ISNULL(C.ACTUAL_I,0) * 100
		        END AS RATIO_R
			 , ISNULL(B.BUDG_01,0) AS '01'
			 , ISNULL(B.BUDG_02,0) AS '02'
			 , ISNULL(B.BUDG_03,0) AS '03'
			 , ISNULL(B.BUDG_04,0) AS '04'
			 , ISNULL(B.BUDG_05,0) AS '05'
			 , ISNULL(B.BUDG_06,0) AS '06'
			 , ISNULL(B.BUDG_07,0) AS '07'
			 , ISNULL(B.BUDG_08,0) AS '08'
			 , ISNULL(B.BUDG_09,0) AS '09'
			 , ISNULL(B.BUDG_10,0) AS '10'
			 , ISNULL(B.BUDG_11,0) AS '11'
			 , ISNULL(B.BUDG_12,0) AS '12'
		  FROM (SELECT CONVERT(NUMERIC, 1) AS GBNCD
				     , CONVERT(NVARCHAR(6) , @AC_YYYY)   AS AC_YYYY
				     , CONVERT(NVARCHAR(16), @DEPT_CODE) AS DEPT_CODE
				     , CONVERT(NVARCHAR(60), @DEPT_NAME) AS DEPT_NAME
				     , A.ACCNT
				     , A.ACCNT_NAME
				     , CONVERT(NUMERIC(25,4), 0) AS ACTUAL_I
				     , CONVERT(NUMERIC(25,4), 0) AS RATIO_R
				     , CONVERT(NUMERIC(25,4), 0) AS BUDGET_I
				     , CASE A.COST_DIVI WHEN '1' THEN '1' WHEN '2' THEN '3' ELSE '1' END AS CAL_DIVI2
				     , CONVERT(NUMERIC(25,4), 0) AS JAN
				     , CONVERT(NUMERIC(25,4), 0) AS FEB
				     , CONVERT(NUMERIC(25,4), 0) AS MAR
				     , CONVERT(NUMERIC(25,4), 0) AS APR
				     , CONVERT(NUMERIC(25,4), 0) AS MAY
				     , CONVERT(NUMERIC(25,4), 0) AS JUN
				     , CONVERT(NUMERIC(25,4), 0) AS JUL
				     , CONVERT(NUMERIC(25,4), 0) AS AUG
				     , CONVERT(NUMERIC(25,4), 0) AS SEP
				     , CONVERT(NUMERIC(25,4), 0) AS OCT
				     , CONVERT(NUMERIC(25,4), 0) AS NOV
				     , CONVERT(NUMERIC(25,4), 0) AS DEC
				     , CASE WHEN ISNULL(SLIP_SW,'') = 'N' OR ISNULL(GROUP_YN,'') = 'Y' THEN 'N' ELSE 'Y' END AS EDIT_YN
  				     , ACCNT_CD
				     , A.COMP_CODE
				     , A.BUDG_YN
				     , A.GROUP_YN
 			      FROM ABA400T A WITH(NOLOCK)
			     WHERE A.COMP_CODE = @COMP_CODE
			       AND A.SLIP_SW   = 'Y'
			       AND A.BUDG_YN   = 'Y'
			       AND A.GROUP_YN  = 'N') A
		       LEFT  JOIN (SELECT A.COMP_CODE
		                        , A.ACCNT
				                , A.AC_YYYY
					            , A.CAL_DIVI
					            , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '01' THEN A.BUDG_I ELSE 0 END) AS BUDG_01
					            , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '02' THEN A.BUDG_I ELSE 0 END) AS BUDG_02
					            , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '03' THEN A.BUDG_I ELSE 0 END) AS BUDG_03
					            , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '04' THEN A.BUDG_I ELSE 0 END) AS BUDG_04
					            , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '05' THEN A.BUDG_I ELSE 0 END) AS BUDG_05
					            , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '06' THEN A.BUDG_I ELSE 0 END) AS BUDG_06
					            , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '07' THEN A.BUDG_I ELSE 0 END) AS BUDG_07
					            , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '08' THEN A.BUDG_I ELSE 0 END) AS BUDG_08
					            , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '09' THEN A.BUDG_I ELSE 0 END) AS BUDG_09
					            , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '10' THEN A.BUDG_I ELSE 0 END) AS BUDG_10
					            , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '11' THEN A.BUDG_I ELSE 0 END) AS BUDG_11
					            , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '12' THEN A.BUDG_I ELSE 0 END) AS BUDG_12
				             FROM AFB100T A WITH(NOLOCK)
				            WHERE A.COMP_CODE = @COMP_CODE
				              AND A.ACCNT IS NOT NULL
				              AND A.AC_YYYY   = @AC_YYYY
				              AND A.DEPT_CODE = @DEPT_CODE
				              AND A.BUDG_YYYYMM BETWEEN @sFrMonth AND @sToMonth
				            GROUP BY COMP_CODE, ACCNT, AC_YYYY, CAL_DIVI) B ON B.COMP_CODE = A.COMP_CODE
			                                                               AND B.AC_YYYY   = A.AC_YYYY
			                                                               AND B.ACCNT     = A.ACCNT
		       LEFT  JOIN (SELECT A.COMP_CODE
		                        , A.ACCNT
					            , CASE (SELECT JAN_DIVI 
							              FROM ABA400T  WITH(NOLOCK)
							             WHERE COMP_CODE = @COMP_CODE
								           AND ACCNT     = A.ACCNT )
							           WHEN '1' THEN SUM(A.DR_AMT_I) 
							           WHEN '2' THEN SUM(A.CR_AMT_I) 
							                    ELSE 0 
						           END AS ACTUAL_I
				             FROM AGB100T A WITH(NOLOCK)
				            WHERE A.COMP_CODE = @COMP_CODE
				              AND A.ACCNT IS NOT NULL
				              AND A.DEPT_CODE = @DEPT_CODE
				              AND A.AC_DATE BETWEEN @sFrMonthTemp AND @sTrMonthTemp
				            GROUP BY A.COMP_CODE, A.ACCNT) C ON C.COMP_CODE = A.COMP_CODE
				                                            AND C.ACCNT     = A.ACCNT
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
         WHERE A.ACCNT = #{ACCNT_CODE}
        </if>
		 ORDER BY A.ACCNT 
	</select>
	
	<select id="afb110ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">	
		DECLARE @COMP_CODE       NVARCHAR(08)   --(필수) 법인코드 
		      , @AC_YYYY         NVARCHAR(04)   --(필수) 예산년도
		      , @DEPT_CODE       NVARCHAR(08)   --(필수) 부서코드
		      , @DEPT_NAME       NVARCHAR(99)   --(필수) 부서코드
		      , @FnDate          NVARCHAR(02)   -- 회계시작년월(월)
		      , @sFrMonth        NVARCHAR(08)   
		      , @sToMonth        NVARCHAR(08)   
			  , @sFrMonthTemp	  NVARCHAR(08)   
			  , @sTrMonthTemp    NVARCHAR(08)   
		
		SET @COMP_CODE    = #{S_COMP_CODE}   
		SET @AC_YYYY      = #{AC_YYYY}       
		SET @DEPT_CODE    = #{DEPT_CODE}     
		SET @DEPT_NAME    = #{DEPT_NAME}     
		SET @sFrMonth 	  = #{sFrMonth}      
		SET @sToMonth 	  = #{sToMonth}      
		SET @sFrMonthTemp = #{sFrMonthTemp}  
		SET @sTrMonthTemp = #{sTrMonthTemp}  
		
		SELECT 'OLD' AS LOADFLAG 
			 , A.GBNCD
			 , A.DEPT_CODE
			 , A.DEPT_NAME
			 , A.AC_YYYY
		     , A.ACCNT
			 , A.ACCNT_NAME
			 , ISNULL(C.ACTUAL_I,0) AS ACTUAL_I
			 , ISNULL((B.BUDG_01 + B.BUDG_02 + B.BUDG_03 + B.BUDG_04 + B.BUDG_05 + B.BUDG_06 + B.BUDG_07 + B.BUDG_08 + B.BUDG_09 + B.BUDG_10 + B.BUDG_11 + B.BUDG_12),0) AS BUDGET_I
			 , ISNULL(B.CAL_DIVI,ISNULL(A.CAL_DIVI2,'1')) AS CAL_DIVI
			 , A.EDIT_YN
			 , ACCNT_CD
			 , A.COMP_CODE
			 , A.BUDG_YN
			 , A.GROUP_YN
			 , CASE WHEN ISNULL(C.ACTUAL_I,0) = 0
			        THEN 0
			 		ELSE ISNULL((B.BUDG_01 + B.BUDG_02 + B.BUDG_03 + B.BUDG_04 + B.BUDG_05 + B.BUDG_06 + B.BUDG_07 + B.BUDG_08 + B.BUDG_09 + B.BUDG_10 + B.BUDG_11 + B.BUDG_12),0) / ISNULL(C.ACTUAL_I,0) * 100
				END AS RATIO_R
			 , ISNULL(B.BUDG_01,0) AS '01'
			 , ISNULL(B.BUDG_02,0) AS '02'
			 , ISNULL(B.BUDG_03,0) AS '03'
			 , ISNULL(B.BUDG_04,0) AS '04'
			 , ISNULL(B.BUDG_05,0) AS '05'
			 , ISNULL(B.BUDG_06,0) AS '06'
			 , ISNULL(B.BUDG_07,0) AS '07'
			 , ISNULL(B.BUDG_08,0) AS '08'
			 , ISNULL(B.BUDG_09,0) AS '09'
			 , ISNULL(B.BUDG_10,0) AS '10'
			 , ISNULL(B.BUDG_11,0) AS '11'
			 , ISNULL(B.BUDG_12,0) AS '12'
		  FROM (SELECT CONVERT(NUMERIC, 1) AS GBNCD
				     , CONVERT(NVARCHAR(6), @AC_YYYY)     AS AC_YYYY
				     , CONVERT(NVARCHAR(16), @DEPT_CODE) AS DEPT_CODE
				     , CONVERT(NVARCHAR(60), @DEPT_NAME) AS DEPT_NAME
				     , A.ACCNT
				     , A.ACCNT_NAME
				     , CONVERT(NUMERIC(25,4), 0) AS ACTUAL_I
				     , CONVERT(NUMERIC(25,4), 0) AS RATIO_R
				     , CONVERT(NUMERIC(25,4), 0) AS BUDGET_I
				     , CASE A.COST_DIVI WHEN '1' THEN '1' WHEN '2' THEN '3' ELSE '1' END AS CAL_DIVI2
				     , CONVERT(NUMERIC(25,4), 0) AS JAN
				     , CONVERT(NUMERIC(25,4), 0) AS FEB
				     , CONVERT(NUMERIC(25,4), 0) AS MAR
				     , CONVERT(NUMERIC(25,4), 0) AS APR
				     , CONVERT(NUMERIC(25,4), 0) AS MAY
				     , CONVERT(NUMERIC(25,4), 0) AS JUN
				     , CONVERT(NUMERIC(25,4), 0) AS JUL
				     , CONVERT(NUMERIC(25,4), 0) AS AUG
				     , CONVERT(NUMERIC(25,4), 0) AS SEP
				     , CONVERT(NUMERIC(25,4), 0) AS OCT
				     , CONVERT(NUMERIC(25,4), 0) AS NOV
				     , CONVERT(NUMERIC(25,4), 0) AS DEC
				     , CASE WHEN ISNULL(SLIP_SW,'') = 'N' OR ISNULL(GROUP_YN,'') = 'Y' THEN 'N' ELSE 'Y' END AS EDIT_YN
				     , ACCNT_CD
				     , A.COMP_CODE
				     , A.BUDG_YN
				     , A.GROUP_YN
			      FROM ABA400T A WITH(NOLOCK)
			     WHERE A.COMP_CODE = @COMP_CODE
			       AND A.SLIP_SW   = 'Y'
                   AND A.BUDG_YN   = 'Y'
                   AND A.GROUP_YN  = 'N') A
		       LEFT JOIN (SELECT A.COMP_CODE
		                       , A.ACCNT
				               , A.AC_YYYY
					           , A.CAL_DIVI
					           , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '01' THEN A.BUDG_CONF_I ELSE 0 END) AS BUDG_01
					           , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '02' THEN A.BUDG_CONF_I ELSE 0 END) AS BUDG_02
					           , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '03' THEN A.BUDG_CONF_I ELSE 0 END) AS BUDG_03
					           , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '04' THEN A.BUDG_CONF_I ELSE 0 END) AS BUDG_04
					           , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '05' THEN A.BUDG_CONF_I ELSE 0 END) AS BUDG_05
					           , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '06' THEN A.BUDG_CONF_I ELSE 0 END) AS BUDG_06
					           , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '07' THEN A.BUDG_CONF_I ELSE 0 END) AS BUDG_07
					           , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '08' THEN A.BUDG_CONF_I ELSE 0 END) AS BUDG_08
					           , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '09' THEN A.BUDG_CONF_I ELSE 0 END) AS BUDG_09
					           , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '10' THEN A.BUDG_CONF_I ELSE 0 END) AS BUDG_10
					           , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '11' THEN A.BUDG_CONF_I ELSE 0 END) AS BUDG_11
					           , SUM(CASE WHEN RIGHT(A.BUDG_YYYYMM, 2) = '12' THEN A.BUDG_CONF_I ELSE 0 END) AS BUDG_12
				            FROM AFB110T A WITH(NOLOCK)
				           WHERE A.COMP_CODE = @COMP_CODE
				             AND A.ACCNT IS NOT NULL
				           --AND A.AC_YYYY   = @AC_YYYY
				             AND A.DEPT_CODE = @DEPT_CODE
				             AND A.BUDG_YYYYMM BETWEEN @sFrMonth AND @sToMonth
				           GROUP BY COMP_CODE, ACCNT, AC_YYYY, CAL_DIVI) B ON B.COMP_CODE = A.COMP_CODE
				                                                        AND B.ACCNT     = A.ACCNT
		       LEFT JOIN (SELECT A.COMP_CODE
		                       , A.ACCNT
					           , CASE (SELECT JAN_DIVI 
						    	         FROM ABA400T WITH(NOLOCK)
							            WHERE COMP_CODE = @COMP_CODE
								          AND ACCNT     = A.ACCNT )
							          WHEN '1' THEN SUM(A.DR_AMT_I) 
							          WHEN '2' THEN SUM(A.CR_AMT_I) 
							                   ELSE 0 
						          END AS ACTUAL_I
				            FROM AGB100T A WITH(NOLOCK)
				           WHERE A.COMP_CODE = @COMP_CODE
				             AND A.ACCNT IS NOT NULL
				             AND A.DEPT_CODE = @DEPT_CODE
				             AND A.AC_DATE BETWEEN @sFrMonthTemp AND @sTrMonthTemp
				           GROUP BY A.COMP_CODE, A.ACCNT) C ON C.COMP_CODE = A.COMP_CODE
				                                           AND C.ACCNT     = A.ACCNT
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
		 WHERE A.ACCNT = #{ACCNT_CODE}
		</if>
		ORDER BY A.ACCNT 
	</select>	
	
	<select id="afb110ukrServiceImpl.fnGetResultRate" parameterType="Map" resultType="rMap">
		--UAfb01KR.CAfb100UKR[fnGetResultRate]Query9
		 SELECT SUBSTRING(A.AC_DATE, 5, 2) AS AC_DATE
		      , CASE (SELECT JAN_DIVI
		                FROM ABA400T WITH(NOLOCK)
		               WHERE COMP_CODE = #{S_COMP_CODE}
		                 AND ACCNT     = A.ACCNT )
		             WHEN '1' THEN ISNULL(SUM(ISNULL(A.DR_AMT_I, 0)), 0)
		             WHEN '2' THEN ISNULL(SUM(ISNULL(A.DR_AMT_I, 0)), 0)
		                      ELSE 0
		         END AS ACTUAL_I
		   FROM AGB100T A WITH(NOLOCK)
		  WHERE A.COMP_CODE = #{S_COMP_CODE}
		    AND A.ACCNT     = #{ACCNT}
		    AND A.DEPT_CODE = #{DEPT_CODE}
		    AND SUBSTRING(A.AC_DATE, 1, 6) BETWEEN #{FR_MONTH} AND #{TO_MONTH}
		  GROUP BY A.ACCNT, SUBSTRING(A.AC_DATE, 5, 2)
		  ORDER BY 1 ASC
	</select>
	
	<select id="afb110ukrServiceImpl.beforeSave" parameterType="Map" resultType="rMap">
		--UAfb01KR.Cafb110UKR[fnSaveData]Query5
		SELECT (ISNULL(EX_AMT_I,0) + ISNULL(AC_AMT_I,0)) AS AC_AMT_I 
		     , (ISNULL(BUDG_CONF_I,0) + ISNULL(BUDG_CONV_I,0) +
		        ISNULL(BUDG_ASGN_I,0) + ISNULL(BUDG_SUPP_I,0) + ISNULL(BUDG_IWALL_I,0)) AS BUDG_I
		  FROM AFB110T WITH(NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND DEPT_CODE   = #{DEPT_CODE}
		   AND BUDG_YYYYMM = #{BUDG_YYYYMM}
		   AND ACCNT       = #{ACCNT}
	</select>
	
	<insert id="afb110ukrServiceImpl.insertDetail" parameterType="Map">
		
	</insert>
	
	<update id="afb110ukrServiceImpl.updateDetail" parameterType="Map">		
		--afb110ukr.Cafb110UKR[fnSaveData]Query6
		IF EXISTS (SELECT *
		             FROM AFB110T WITH(NOLOCK) 
		            WHERE COMP_CODE   = #{S_COMP_CODE}
		              AND DEPT_CODE   = #{DEPT_CODE}  
		              AND BUDG_YYYYMM = #{BUDG_YYYYMM}
		              AND ACCNT       = #{ACCNT})
		   UPDATE AFB110T 
		      SET BUDG_CONF_I    = #{BUDG_CONF_I}
		        , DEPT_NAME      = #{DEPT_NAME}
		        , CAL_DIVI       = #{CAL_DIVI}
		        , UPDATE_DB_USER = #{S_USER_ID}
		        , UPDATE_DB_TIME = GETDATE()
		    WHERE COMP_CODE   = #{S_COMP_CODE}
		      AND ACCNT       = #{ACCNT}  
		      AND DEPT_CODE   = #{DEPT_CODE}
		      AND BUDG_YYYYMM = #{BUDG_YYYYMM}
		ELSE
		   INSERT INTO AFB110T 
		        ( COMP_CODE
		        , BUDG_YYYYMM
		        , DEPT_CODE
		        , DEPT_NAME
		        , ACCNT
		        , BUDG_I
		        , BUDG_CONF_I
		        , BUDG_CONV_I
		        , BUDG_ASGN_I
		        , BUDG_SUPP_I
		        , BUDG_IWALL_I
		        , CAL_DIVI
		        , UPDATE_DB_USER
		        , UPDATE_DB_TIME )
		   VALUES
		        ( #{S_COMP_CODE}
		        , #{BUDG_YYYYMM}
		        , #{DEPT_CODE}
		        , #{DEPT_NAME}
		        , #{ACCNT}
		        , 0
		        , #{BUDG_CONF_I}
		        , 0
		        , 0
		        , 0
		        , 0
		        , #{CAL_DIVI}
		        , #{S_USER_ID}
		        , GETDATE() )
	</update>
	
	<update id="afb110ukrServiceImpl.deleteDetail" parameterType="Map">
		--UAfb01KR.Cafb110UKR[fnSaveData]Query7
		DELETE FROM AFB110T 
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND DEPT_CODE   = #{DEPT_CODE}  
		   AND BUDG_YYYYMM = #{BUDG_YYYYMM}
		   AND ACCNT       = #{ACCNT}      
	</update>
	
	<update id="afb110ukrServiceImpl.deleteReset" parameterType="Map">	
		DELETE AFB110T
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND ACCNT IN (SELECT ACCNT 
		                   FROM ABA400T WITH (NOLOCK)
		                  WHERE COMP_CODE = #{S_COMP_CODE}
		                    AND BUDG_YN   = 'Y' )
		   AND DEPT_CODE = #{DEPT_CODE}  
		   AND ISNULL(EX_AMT_I, 0) = 0
		   AND ISNULL(AC_AMT_I, 0) = 0
	</update>
		
	<update id="afb110ukrServiceImpl.updateReset" parameterType="Map">		
		--UAfb01KR.Cafb110UKR[fnAfb110set]Query4
		UPDATE AFB110T SET BUDG_CONF_I = 0
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND ACCNT IN (SELECT ACCNT
		                   FROM ABA400T WITH (NOLOCK)
		                  WHERE COMP_CODE = #{S_COMP_CODE}
		                    AND BUDG_YN   = 'Y' )
		   AND DEPT_CODE = #{DEPT_CODE}  
		   AND ISNULL(EX_AMT_I, 0) = 0
		   AND ISNULL(AC_AMT_I, 0) = 0
	</update>
    
	<insert id="afb110ukrServiceImpl.insertExcelafb110upload" parameterType="Map">
		INSERT INTO AFB110T_XLS 
		(          
		    _EXCEL_JOBID 
		    ,_EXCEL_ROWNUM 
		    ,_EXCEL_HAS_ERROR 
		    ,_EXCEL_ERROR_MSG           
		    ,COMP_CODE
		    ,ACCNT
		    ,ACCNT_NAME
		    ,DEPT_CODE
		    ,DEPT_NAME
		    <if test="@foren.Ognl@isNotEmpty(M1)"> 
		    ,M1
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M2)"> 
		    ,M2
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M3)"> 
		    ,M3
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M4)"> 
		    ,M4
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M5)"> 
		    ,M5
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M6)"> 
		    ,M6
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M7)"> 
		    ,M7
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M8)"> 
		    ,M8
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M9)"> 
		    ,M9
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M10)"> 
		    ,M10
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M11)"> 
		    ,M11
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M12)"> 
		    ,M12
		    </if>
		    ,AC_YYYY
		    ,INSERT_DB_USER
		    ,INSERT_DB_TIME
		)                    
		VALUES ( 
		     #{_EXCEL_JOBID} 
		    ,#{_EXCEL_ROWNUM} 
		    ,#{_EXCEL_HAS_ERROR ,jdbcType=VARCHAR} 
		    ,#{_EXCEL_ERROR     ,jdbcType=VARCHAR}              
		    ,#{S_COMP_CODE}   
		    ,#{ACCNT}       
		    ,#{ACCNT_NAME}  
		    ,#{DEPT_CODE}   
		    ,#{DEPT_NAME}   
		    <if test="@foren.Ognl@isNotEmpty(M1)">  
		    ,#{M1}     
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M2)">      
		    ,#{M2}          
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M3)"> 
		    ,#{M3}          
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M4)"> 
		    ,#{M4}          
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M5)"> 
		    ,#{M5}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M6)"> 
		    ,#{M6}          
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M7)"> 
		    ,#{M7}          
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M8)"> 
		    ,#{M8}          
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M9)"> 
		    ,#{M9}          
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M10)"> 
		    ,#{M10}         
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M11)"> 
		    ,#{M11}        
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(M12)"> 
		    ,#{M12}         
		    </if>
		    
		    ,#{AC_YYYY}  
		    ,#{S_USER_ID}
		    ,GETDATE()   
		)
	</insert>

	<select id="afb110ukrServiceImpl.beforeExcelCheck" parameterType="Map" resultType="rMap">
	    SELECT * FROM AFB110T_XLS
	            WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
    </select>

	<update id="afb110ukrServiceImpl.excelValidate">
        IF EXISTS (SELECT *
                     FROM AFB110T 
                    WHERE COMP_CODE   = #{S_COMP_CODE}
                      AND DEPT_CODE   = #{DEPT_CODE}  
                      AND BUDG_YYYYMM = #{BUDG_YYYYMM}
                      AND ACCNT       = #{ACCNT}      
                   )
        
           UPDATE AFB110T  
              SET BUDG_CONF_I    = #{BUDG_CONF_I}
 
                , CAL_DIVI  = #{CAL_DIVI}
                , UPDATE_DB_USER = #{S_USER_ID}
                , UPDATE_DB_TIME = GETDATE()
                
                
             FROM       AFB110T A WITH(NOLOCK) 
     
        INNER JOIN      AFB110T_XLS B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                  AND B.ACCNT     = A.ACCNT
                                                  AND B.DEPT_CODE = A.DEPT_CODE
                                                  AND A.BUDG_YYYYMM = #{BUDG_YYYYMM}
                                                  AND B._EXCEL_JOBID = #{_EXCEL_JOBID}
                                                  AND A.ACCNT       = #{ACCNT}       
                
        
        ELSE
        
        INSERT INTO AFB110T 
            ( COMP_CODE
            , BUDG_YYYYMM
            , DEPT_CODE
            , DEPT_NAME
            , ACCNT
            , BUDG_CONF_I
            , CAL_DIVI
            , UPDATE_DB_USER
            , UPDATE_DB_TIME 
        )
        SELECT 
             A.COMP_CODE
            ,#{BUDG_YYYYMM}
            ,A.DEPT_CODE
            ,ISNULL(B.TREE_NAME,'') 
            ,A.ACCNT
            ,#{BUDG_CONF_I}
            ,#{CAL_DIVI}
            ,#{S_USER_ID}   
            ,GETDATE()      
            
        FROM        AFB110T_XLS  A WITH(NOLOCK)
            LEFT JOIN   BSA210T  B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                               AND B.TREE_CODE = A.DEPT_CODE
    
        WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
          AND A._EXCEL_ROWNUM = #{ROWNUM}
   
    </update>   
    
</mapper>