<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb200skrServiceImpl">
	<select id="afb200skrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		--UArpt08KR.CAfb200SKR[fnAfb200nq] Query1 (부서별)
		SET NOCOUNT ON 
		
		DECLARE @COMP_CODE      NVARCHAR(08)
		      , @BUDG_YYYYMM    NVARCHAR(06)
		      , @DEPT_CODE_FR   NVARCHAR(08)
		      , @DEPT_CODE_TO   NVARCHAR(08)
		      , @ACCNT_FR       NVARCHAR(16)
		      , @ACCNT_TO       NVARCHAR(16)
		      , @GUBUN          NVARCHAR(01)
		      , @ACCNT_DIVI     NVARCHAR(01)
		
		SET @COMP_CODE      = #{S_COMP_CODE}
		SET @BUDG_YYYYMM    = #{BUDG_YYYYMM}
		SET @DEPT_CODE_FR   = #{DEPT_CODE_FR}
		SET @DEPT_CODE_TO   = #{DEPT_CODE_TO}
		SET @ACCNT_FR       = #{ACCNT_FR}
		SET @ACCNT_TO       = #{ACCNT_TO}
		SET @ACCNT_DIVI     = #{ACCNT_DIVI}
	
		<if test="ACCNT_DIVI == &quot;1&quot;"> 
		/*  IF ACCNT_DIVI = '1' 부서별 과목 */
        SELECT B.DEPT_CODE  AS DEPT_CODE  
             , B.DEPT_NAME  AS DEPT_NAME
             , B.ACCNT_CD   AS ACCNT
             , C.ACCNT_NAME AS ACCNT_NAME
             , SUM(ISNULL(B.BUDG_I,0))    BUDG_I
             , SUM(ISNULL(B.EX_AMT_I,0))  EX_AMT_I
             , SUM(ISNULL(B.AC_AMT_I,0))  AC_AMT_I
             , SUM(ISNULL(B.CHA_AMT,0))   CHA_AMT
             , CASE WHEN SUM(ISNULL(B.BUDG_I,0)) = 0
                    THEN 0
                    ELSE SUM(ISNULL(B.EX_AMT_I,0) + ISNULL(B.AC_AMT_I,0)) / SUM(ISNULL(B.BUDG_I,0)) * 100
                END AS ACHIEVE_RATE
             , '1' AS SUBJECT_DIVI
          FROM ABA400T A WITH (NOLOCK)
               RIGHT JOIN (SELECT B.DEPT_CODE  AS DEPT_CODE  
                                , B.DEPT_NAME  AS DEPT_NAME  
                                , A.ACCNT_NAME AS ACCNT_NAME
                                , A.ACCNT_CD   AS ACCNT_CD
                                , B.ACCNT      AS ACCNT
                                , A.COMP_CODE  AS COMP_CODE
                                , (SUM(ISNULL(B.BUDG_CONF_I,0)) + SUM(ISNULL(B.BUDG_CONV_I,0)) + SUM(ISNULL(B.BUDG_ASGN_I,0)) + SUM(ISNULL(B.BUDG_SUPP_I,0)) + SUM(ISNULL(B.BUDG_IWALL_I,0)) ) AS BUDG_I
                                , SUM(ISNULL(B.EX_AMT_I,0))  EX_AMT_I
                                , SUM(ISNULL(B.AC_AMT_I,0))  AC_AMT_I
                                , ISNULL(SUM(ISNULL(B.BUDG_CONF_I,0)) + SUM(ISNULL(B.BUDG_CONV_I,0)) + SUM(ISNULL(B.BUDG_ASGN_I,0)) + SUM(ISNULL(B.BUDG_SUPP_I,0)) + SUM(ISNULL(B.BUDG_IWALL_I,0)) - 
                                         SUM(ISNULL(B.EX_AMT_I,0)) - 
                                         SUM(ISNULL(B.AC_AMT_I,0)) -
                                         SUM(ISNULL(C.DIVERT_BUDG_I, 0)), 0) AS CHA_AMT
                                , A.SUBJECT_DIVI  AS SUBJECT_DIVI
                             FROM           ABA400T A WITH (NOLOCK)
                                  LEFT JOIN AFB110T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                                  AND A.ACCNT     = B.ACCNT
                                  LEFT JOIN (SELECT X.COMP_CODE
                                                  , X.ACCNT
                                                  , X.DEPT_CODE
                                                  , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                               FROM AFB121T X WITH (NOLOCK)
                                              WHERE X.COMP_CODE    = @COMP_CODE
                                                AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                                AND X.DIVERT_DIVI IN ('1', '3')
                                                AND X.BUDG_YYYYMM &gt;= @BUDG_YYYYMM
                                                AND X.BUDG_YYYYMM &lt;= @BUDG_YYYYMM
                                              GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM) C ON C.COMP_CODE = B.COMP_CODE
                                                                                                          AND C.DEPT_CODE = B.DEPT_CODE
                                                                                                          AND C.ACCNT     = B.ACCNT
                            WHERE A.COMP_CODE   = @COMP_CODE
                              AND B.BUDG_YYYYMM = @BUDG_YYYYMM
                              AND ((@ACCNT_FR       = '') OR (@ACCNT_FR     != '' AND A.ACCNT_CD  &gt;= @ACCNT_FR))
                              AND ((@ACCNT_TO       = '') OR (@ACCNT_TO     != '' AND A.ACCNT_CD  &lt;= @ACCNT_TO))
                              AND ((@DEPT_CODE_FR   = '') OR (@DEPT_CODE_FR != '' AND B.DEPT_CODE &gt;= @DEPT_CODE_FR))
                              AND ((@DEPT_CODE_TO   = '') OR (@DEPT_CODE_TO != '' AND B.DEPT_CODE &lt;= @DEPT_CODE_TO))
                            GROUP BY A.COMP_CODE, B.DEPT_CODE, B.DEPT_NAME, B.ACCNT, A.ACCNT_CD, A.ACCNT_NAME, A.SUBJECT_DIVI) B ON B.COMP_CODE = A.COMP_CODE
                                                                                                                                AND B.ACCNT     = A.ACCNT
               INNER JOIN (SELECT ACCNT_CD
                                , ACCNT_NAME
                                , COMP_CODE
                             FROM ABA400T WITH (NOLOCK)
                            WHERE ACCNT_CD = ACCNT) C ON C.COMP_CODE = B.COMP_CODE
                                                     AND C.ACCNT_CD  = B.ACCNT_CD
                               
         WHERE A.COMP_CODE    = @COMP_CODE
         GROUP BY B.DEPT_CODE, B.DEPT_NAME, B.ACCNT_CD, C.ACCNT_NAME
         ORDER BY 1 ASC, 2 DESC
		</if>

		<if test="ACCNT_DIVI == &quot;2&quot;"> 
		/* ELSE	부서별 세목 */
	    SELECT X.DEPT_CODE
	         , X.DEPT_NAME
	         , X.ACCNT
	         , X.ACCNT_NAME
	         , X.BUDG_I
	         , X.EX_AMT_I
	         , X.AC_AMT_I
	         , X.CHA_AMT
	         , X.ACHIEVE_RATE
	         , X.SUBJECT_DIVI
	      FROM (SELECT B.DEPT_CODE  AS DEPT_CODE  
	                 , B.DEPT_NAME  AS DEPT_NAME  
	                 , B.ACCNT_CD   AS ACCNT
	                 , C.ACCNT_NAME AS ACCNT_NAME
	                 , SUM(ISNULL(B.BUDG_I,0))    AS BUDG_I
	                 , SUM(ISNULL(B.EX_AMT_I,0))  AS EX_AMT_I
	                 , SUM(ISNULL(B.AC_AMT_I,0))  AS AC_AMT_I
	                 , SUM(ISNULL(B.CHA_AMT,0))   AS CHA_AMT
	                 , CASE WHEN SUM(ISNULL(B.BUDG_I,0)) = 0 
	                        THEN 0
	                        ELSE SUM(ISNULL(B.EX_AMT_I,0) + ISNULL(B.AC_AMT_I,0)) / SUM(ISNULL(B.BUDG_I,0)) * 100
	                    END AS ACHIEVE_RATE
	                 , '1' AS SUBJECT_DIVI
	              FROM ABA400T A WITH(NOLOCK)
	                   RIGHT JOIN (SELECT B.DEPT_CODE  AS DEPT_CODE  
	                                    , B.DEPT_NAME  AS DEPT_NAME  
	                                    , A.ACCNT_NAME AS ACCNT_NAME
	                                    , A.ACCNT_CD   AS ACCNT_CD
	                                    , B.ACCNT      AS ACCNT
	                                    , A.COMP_CODE  AS COMP_CODE
	                                    , (ISNULL(B.BUDG_CONF_I,0) + ISNULL(B.BUDG_CONV_I,0) + ISNULL(B.BUDG_ASGN_I,0) + ISNULL(B.BUDG_SUPP_I,0) + ISNULL(B.BUDG_IWALL_I,0))    AS BUDG_I
	                                    , ISNULL(B.EX_AMT_I,0)  AS EX_AMT_I
	                                    , ISNULL(B.AC_AMT_I,0)  AS AC_AMT_I
	                                    , (ISNULL(B.BUDG_CONF_I,0) + ISNULL(B.BUDG_CONV_I,0) + ISNULL(B.BUDG_ASGN_I,0) + ISNULL(B.BUDG_SUPP_I,0) + ISNULL(B.BUDG_IWALL_I,0) - 
	                                       ISNULL(B.EX_AMT_I,0)- 
	                                       ISNULL(B.AC_AMT_I,0)-
	                                       ISNULL(C.DIVERT_BUDG_I, 0)) AS CHA_AMT
	                                    , A.SUBJECT_DIVI  AS SUBJECT_DIVI
	                                 FROM           ABA400T A WITH (NOLOCK)
	                                      LEFT JOIN AFB110T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
	                                                                       AND A.ACCNT     = B.ACCNT
	                                      LEFT JOIN (SELECT X.COMP_CODE
	                                                      , X.ACCNT
	                                                      , X.DEPT_CODE
	                                                      , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
	                                                   FROM AFB121T X WITH (NOLOCK)
	                                                  WHERE X.COMP_CODE    = @COMP_CODE
	                                                    AND X.DOC_STATUS  IN ('10', '15', '20', '30')
  	                                                    AND X.DIVERT_DIVI IN ('1', '3')
	                                                    AND X.BUDG_YYYYMM &gt;= @BUDG_YYYYMM
	                                                    AND X.BUDG_YYYYMM &lt;= @BUDG_YYYYMM
	                                                  GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM) C ON C.COMP_CODE = B.COMP_CODE
	                                                                                                              AND C.DEPT_CODE = B.DEPT_CODE
	                                                                                                              AND C.ACCNT     = B.ACCNT
	                                WHERE A.COMP_CODE   = @COMP_CODE
	                                  AND B.BUDG_YYYYMM = @BUDG_YYYYMM  
	                                  AND ((@ACCNT_FR     = '') OR (@ACCNT_FR     != '' AND A.ACCNT_CD  &gt;= @ACCNT_FR) OR (@ACCNT_FR != '' AND B.ACCNT &gt;= @ACCNT_FR))
	                                  AND ((@ACCNT_TO     = '') OR (@ACCNT_TO     != '' AND A.ACCNT_CD  &lt;= @ACCNT_TO) OR (@ACCNT_TO != '' AND B.ACCNT &lt;= @ACCNT_TO))
	                                  AND ((@DEPT_CODE_FR = '') OR (@DEPT_CODE_FR != '' AND B.DEPT_CODE &gt;= @DEPT_CODE_FR))
	                                  AND ((@DEPT_CODE_TO = '') OR (@DEPT_CODE_TO != '' AND B.DEPT_CODE &lt;= @DEPT_CODE_TO))) B ON B.COMP_CODE = A.COMP_CODE
	                                                                                                                            AND B.ACCNT     = A.ACCNT
	                   INNER JOIN (SELECT ACCNT_CD
	                                    , ACCNT_NAME
	                                    , COMP_CODE
	                                 FROM ABA400T WITH (NOLOCK)
	                                WHERE ACCNT_CD = ACCNT) C ON C.COMP_CODE = B.COMP_CODE
	                                                         AND C.ACCNT_CD  = B.ACCNT_CD
	             WHERE A.COMP_CODE    = @COMP_CODE
	             GROUP BY B.DEPT_CODE, B.DEPT_NAME, B.ACCNT_CD, C.ACCNT_NAME
	
	            UNION ALL
	
	            SELECT B.DEPT_CODE  AS DEPT_CODE  
	                 , B.DEPT_NAME  AS DEPT_NAME
	                 , B.ACCNT      AS ACCNT
	                 , A.ACCNT_NAME AS ACCNT_NAME
	                 , (ISNULL(B.BUDG_CONF_I,0) + ISNULL(B.BUDG_CONV_I,0) + ISNULL(B.BUDG_ASGN_I,0) + ISNULL(B.BUDG_SUPP_I,0) + ISNULL(B.BUDG_IWALL_I,0))    AS BUDG_I
	                 , ISNULL(B.EX_AMT_I,0)  AS EX_AMT_I
	                 , ISNULL(B.AC_AMT_I,0)  AS AC_AMT_I
	                 , (ISNULL(B.BUDG_CONF_I,0) + ISNULL(B.BUDG_CONV_I,0) + ISNULL(B.BUDG_ASGN_I,0) + ISNULL(B.BUDG_SUPP_I,0) + ISNULL(B.BUDG_IWALL_I,0) - 
	                    ISNULL(B.EX_AMT_I,0)- 
	                    ISNULL(B.AC_AMT_I,0)-
	                    ISNULL(C.DIVERT_BUDG_I, 0))  AS CHA_AMT
	                 , CASE WHEN ISNULL(B.BUDG_CONF_I,0) + ISNULL(B.BUDG_CONV_I,0) + ISNULL(B.BUDG_ASGN_I,0) + ISNULL(B.BUDG_SUPP_I,0) + ISNULL(B.BUDG_IWALL_I,0) = 0 
	                        THEN 0
	                        ELSE (ISNULL(B.EX_AMT_I,0)+ISNULL(B.AC_AMT_I,0))/(ISNULL(B.BUDG_CONF_I,0) + ISNULL(B.BUDG_CONV_I,0) + ISNULL(B.BUDG_ASGN_I,0) + ISNULL(B.BUDG_SUPP_I,0) + ISNULL(B.BUDG_IWALL_I,0)) *100
	                    END AS ACHIEVE_RATE
	                 , A.SUBJECT_DIVI  AS SUBJECT_DIVI
	              FROM           ABA400T A WITH(NOLOCK)
	                   LEFT JOIN AFB110T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
	                                                   AND A.ACCNT     = B.ACCNT
	                   LEFT JOIN (SELECT X.COMP_CODE
	                                   , X.ACCNT
	                                   , X.DEPT_CODE
	                                   , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
	                                FROM AFB121T X WITH (NOLOCK)
	                               WHERE X.COMP_CODE    = @COMP_CODE
	                                 AND X.DOC_STATUS  IN ('10', '15', '20', '30')
	                                 AND X.DIVERT_DIVI IN ('1', '3')
	                                 AND X.BUDG_YYYYMM &gt;= @BUDG_YYYYMM
	                                 AND X.BUDG_YYYYMM &lt;= @BUDG_YYYYMM
	                               GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM) C ON C.COMP_CODE = B.COMP_CODE
                                                                                               AND C.DEPT_CODE = B.DEPT_CODE
	                                                                                           AND C.ACCNT     = B.ACCNT
	             WHERE A.COMP_CODE    = @COMP_CODE
	               AND B.BUDG_YYYYMM  = @BUDG_YYYYMM
	               AND A.SUBJECT_DIVI = '2'
	               AND ((@ACCNT_FR     = '') OR (@ACCNT_FR     != '' AND A.ACCNT_CD &gt;= @ACCNT_FR) OR (@ACCNT_FR != '' AND B.ACCNT &gt;= @ACCNT_FR))
	               AND ((@ACCNT_TO     = '') OR (@ACCNT_TO     != '' AND A.ACCNT_CD &lt;= @ACCNT_TO) OR (@ACCNT_TO != '' AND B.ACCNT &lt;= @ACCNT_TO))
	               AND ((@DEPT_CODE_FR = '') OR (@DEPT_CODE_FR != '' AND B.DEPT_CODE &gt;= @DEPT_CODE_FR))
	               AND ((@DEPT_CODE_TO = '') OR (@DEPT_CODE_TO != '' AND B.DEPT_CODE &lt;= @DEPT_CODE_TO))) X
	        WHERE X.SUBJECT_DIVI IN ('2', '1', '0')
	        ORDER BY X.DEPT_CODE,  X.DEPT_NAME, X.ACCNT
		</if>
		SET NOCOUNT OFF
	</select>

	<select id="afb200skrServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		--UArpt08KR.CAfb200SKR[fnAfb200nq] Query2 (계정과목별)
		SET NOCOUNT ON 
		
		DECLARE @COMP_CODE      NVARCHAR(08)
		      , @BUDG_YYYYMM    NVARCHAR(06)
		      , @DEPT_CODE_FR   NVARCHAR(08)
		      , @DEPT_CODE_TO   NVARCHAR(08)
		      , @ACCNT_FR       NVARCHAR(16)
		      , @ACCNT_TO       NVARCHAR(16)
		      , @GUBUN          NVARCHAR(01)
		
		SET @COMP_CODE      = #{S_COMP_CODE}
		SET @BUDG_YYYYMM    = #{BUDG_YYYYMM}
		SET @DEPT_CODE_FR   = #{DEPT_CODE_FR}
		SET @DEPT_CODE_TO   = #{DEPT_CODE_TO}
		SET @ACCNT_FR       = #{ACCNT_FR}
		SET @ACCNT_TO       = #{ACCNT_TO}
	
		<if test="ACCNT_DIVI == &quot;1&quot;"> 
	    /* IF ACCNT_DIVI = '1' 계정과목별 과목 */
        SELECT B.ACCNT_CD   AS ACCNT
             , C.ACCNT_NAME AS ACCNT_NAME
             , B.DEPT_CODE  AS DEPT_CODE  
             , B.DEPT_NAME  AS DEPT_NAME
             , SUM(ISNULL(B.BUDG_I,0))    BUDG_I
             , SUM(ISNULL(B.EX_AMT_I,0))  EX_AMT_I
             , SUM(ISNULL(B.AC_AMT_I,0))  AC_AMT_I
             , SUM(ISNULL(B.CHA_AMT,0))   CHA_AMT
             , CASE WHEN SUM(ISNULL(B.BUDG_I,0)) = 0 
                    THEN 0
                    ELSE  SUM(ISNULL(B.EX_AMT_I,0)+ISNULL(B.AC_AMT_I,0))/SUM(ISNULL(B.BUDG_I,0))*100
                END AS ACHIEVE_RATE
             , '1' AS SUBJECT_DIVI
          FROM ABA400T A WITH(NOLOCK)
               RIGHT JOIN (SELECT B.DEPT_CODE  AS DEPT_CODE  
                                , B.DEPT_NAME  AS DEPT_NAME  
                                , A.ACCNT_NAME AS ACCNT_NAME
                                , A.ACCNT_CD   AS ACCNT_CD
                                , B.ACCNT      AS ACCNT
                                , A.COMP_CODE  AS COMP_CODE
                                , (SUM(ISNULL(B.BUDG_CONF_I,0)) + SUM(ISNULL(B.BUDG_CONV_I,0)) + SUM(ISNULL(B.BUDG_ASGN_I,0)) + SUM(ISNULL(B.BUDG_SUPP_I,0)) + SUM(ISNULL(B.BUDG_IWALL_I,0))) AS    BUDG_I
                                , SUM(ISNULL(B.EX_AMT_I,0))  EX_AMT_I
                                , SUM(ISNULL(B.AC_AMT_I,0))  AC_AMT_I
                                , ISNULL(SUM(ISNULL(B.BUDG_CONF_I,0)) + SUM(ISNULL(B.BUDG_CONV_I,0)) + SUM(ISNULL(B.BUDG_ASGN_I,0)) + SUM(ISNULL(B.BUDG_SUPP_I,0)) + SUM(ISNULL(B.BUDG_IWALL_I,0)) - 
                                         SUM(ISNULL(B.EX_AMT_I,0)) - 
                                         SUM(ISNULL(B.AC_AMT_I,0)) -
                                         SUM(ISNULL(C.DIVERT_BUDG_I, 0)),0)  CHA_AMT
                                , A.SUBJECT_DIVI  AS SUBJECT_DIVI
                             FROM           ABA400T A WITH (NOLOCK)
                                  LEFT JOIN AFB110T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                                   AND A.ACCNT     = B.ACCNT
                                  LEFT JOIN (SELECT X.COMP_CODE
                                                  , X.ACCNT
                                                  , X.DEPT_CODE
                                                  , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                               FROM AFB121T X WITH (NOLOCK)
                                              WHERE X.COMP_CODE    = @COMP_CODE
                                                AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                                AND X.DIVERT_DIVI IN ('1', '3')
                                                AND X.BUDG_YYYYMM &gt;= @BUDG_YYYYMM
                                                AND X.BUDG_YYYYMM &lt;= @BUDG_YYYYMM
                                              GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM) C ON C.COMP_CODE = B.COMP_CODE
                                                                                                          AND C.DEPT_CODE = B.DEPT_CODE
                                                                                                          AND C.ACCNT     = B.ACCNT
                            WHERE A.COMP_CODE   = @COMP_CODE
                              AND B.BUDG_YYYYMM = @BUDG_YYYYMM
                              AND ((@ACCNT_FR     = '') OR (@ACCNT_FR     != '' AND A.ACCNT_CD  &gt;= @ACCNT_FR))
                              AND ((@ACCNT_TO     = '') OR (@ACCNT_TO     != '' AND A.ACCNT_CD  &lt;= @ACCNT_TO))
                              AND ((@DEPT_CODE_FR = '') OR (@DEPT_CODE_FR != '' AND B.DEPT_CODE &gt;= @DEPT_CODE_FR))
                              AND ((@DEPT_CODE_TO = '') OR (@DEPT_CODE_TO != '' AND B.DEPT_CODE &lt;= @DEPT_CODE_TO))
                            GROUP BY A.COMP_CODE, B.ACCNT, A.ACCNT_CD, A.ACCNT_NAME, B.DEPT_CODE, B.DEPT_NAME,  A.SUBJECT_DIVI) B ON B.COMP_CODE = A.COMP_CODE
                                                                                                                                 AND B.ACCNT     = A.ACCNT
               INNER JOIN (SELECT ACCNT_CD
                                , ACCNT_NAME
                                , COMP_CODE
                             FROM ABA400T WITH (NOLOCK)
                            WHERE ACCNT_CD = ACCNT) C ON C.COMP_CODE = B.COMP_CODE
                                                     AND C.ACCNT_CD  = B.ACCNT_CD
         WHERE A.COMP_CODE    = @COMP_CODE
         GROUP BY B.ACCNT_CD, C.ACCNT_NAME, B.DEPT_CODE, B.DEPT_NAME
		</if>
	
		<if test="ACCNT_DIVI == &quot;2&quot;"> 
		/* ELSE	계정과목별세목 */
        SELECT X.ACCNT
             , X.ACCNT_NAME
             , X.DEPT_CODE
             , X.DEPT_NAME
             , X.BUDG_I
             , X.EX_AMT_I
             , X.AC_AMT_I
             , X.CHA_AMT
             , X.ACHIEVE_RATE
             , X.SUBJECT_DIVI
          FROM (SELECT B.DEPT_CODE  AS DEPT_CODE  
                     , B.DEPT_NAME  AS DEPT_NAME  
                     , B.ACCNT_CD   AS ACCNT
                     , C.ACCNT_NAME AS ACCNT_NAME
                     , SUM(ISNULL(B.BUDG_I,0))    AS BUDG_I
                     , SUM(ISNULL(B.EX_AMT_I,0))  AS EX_AMT_I
                     , SUM(ISNULL(B.AC_AMT_I,0))  AS AC_AMT_I
                     , SUM(ISNULL(B.CHA_AMT,0))   AS CHA_AMT
                     , CASE SUM(ISNULL(B.BUDG_I,0)) 
                            WHEN 0 THEN 0
                            ELSE SUM(ISNULL(B.EX_AMT_I,0)+ISNULL(B.AC_AMT_I,0))/SUM(ISNULL(B.BUDG_I,0))*100
                        END AS ACHIEVE_RATE
                     , '1' AS SUBJECT_DIVI
                  FROM ABA400T A WITH(NOLOCK)
                       RIGHT JOIN (SELECT B.DEPT_CODE  AS DEPT_CODE  
                                        , B.DEPT_NAME  AS DEPT_NAME  
                                        , A.ACCNT_NAME AS ACCNT_NAME
                                        , A.ACCNT_CD   AS ACCNT_CD
                                        , B.ACCNT      AS ACCNT
                                        , A.COMP_CODE  AS COMP_CODE
                                        , (ISNULL(B.BUDG_CONF_I,0) + ISNULL(B.BUDG_CONV_I,0) + ISNULL(B.BUDG_ASGN_I,0) + ISNULL(B.BUDG_SUPP_I,0) + ISNULL(B.BUDG_IWALL_I,0))    AS BUDG_I
                                        , ISNULL(B.EX_AMT_I,0)  AS EX_AMT_I
                                        , ISNULL(B.AC_AMT_I,0)  AS AC_AMT_I
                                        , (ISNULL(B.BUDG_CONF_I,0) + ISNULL(B.BUDG_CONV_I,0) + ISNULL(B.BUDG_ASGN_I,0) + ISNULL(B.BUDG_SUPP_I,0) + ISNULL(B.BUDG_IWALL_I,0) - 
                                           ISNULL(B.EX_AMT_I,0)- 
                                           ISNULL(B.AC_AMT_I,0)-
                                           ISNULL(C.DIVERT_BUDG_I, 0))  AS CHA_AMT
                                        , A.SUBJECT_DIVI  AS SUBJECT_DIVI
                                     FROM ABA400T A WITH (NOLOCK)
                                          LEFT JOIN AFB110T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                                          AND A.ACCNT     = B.ACCNT
                                          LEFT JOIN (SELECT X.COMP_CODE
                                                          , X.ACCNT
                                                          , X.DEPT_CODE
                                                          , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                                       FROM AFB121T X WITH (NOLOCK)
                                                      WHERE X.COMP_CODE    = @COMP_CODE
                                                        AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                                        AND X.DIVERT_DIVI IN ('1', '3')
                                                        AND X.BUDG_YYYYMM &gt;= @BUDG_YYYYMM
                                                        AND X.BUDG_YYYYMM &lt;= @BUDG_YYYYMM
                                                      GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM) C ON C.COMP_CODE = B.COMP_CODE
                                                                                                                  AND C.DEPT_CODE = B.DEPT_CODE
                                                                                                                  AND C.ACCNT     = B.ACCNT
                                    WHERE A.COMP_CODE   = @COMP_CODE
                                      AND B.BUDG_YYYYMM = @BUDG_YYYYMM   
                                      AND ((@ACCNT_FR     = '') OR (@ACCNT_FR     != '' AND A.ACCNT_CD &gt;= @ACCNT_FR) OR (@ACCNT_FR != '' AND B.ACCNT &gt;= @ACCNT_FR))
                                      AND ((@ACCNT_TO     = '') OR (@ACCNT_TO     != '' AND A.ACCNT_CD &lt;= @ACCNT_TO) OR (@ACCNT_TO != '' AND B.ACCNT &lt;= @ACCNT_TO))
                                      AND ((@DEPT_CODE_FR = '') OR (@DEPT_CODE_FR != '' AND B.DEPT_CODE &gt;= @DEPT_CODE_FR))
                                      AND ((@DEPT_CODE_TO = '') OR (@DEPT_CODE_TO != '' AND B.DEPT_CODE &lt;= @DEPT_CODE_TO))) B ON B.COMP_CODE = A.COMP_CODE
                                                                                                                                AND B.ACCNT     = A.ACCNT
                       INNER JOIN (SELECT ACCNT_CD
                                        , ACCNT_NAME
                                        , COMP_CODE
                                     FROM ABA400T WITH (NOLOCK)
                                   WHERE ACCNT_CD = ACCNT) C ON C.COMP_CODE = B.COMP_CODE
                                                            AND C.ACCNT_CD  = B.ACCNT_CD
                WHERE A.COMP_CODE    = @COMP_CODE
                GROUP BY B.ACCNT_CD, C.ACCNT_NAME, B.DEPT_CODE, B.DEPT_NAME 

                UNION ALL

               SELECT B.DEPT_CODE  AS DEPT_CODE  
                    , B.DEPT_NAME  AS DEPT_NAME
                    , B.ACCNT      AS ACCNT
                    , A.ACCNT_NAME AS ACCNT_NAME
                    , (ISNULL(B.BUDG_CONF_I,0) + ISNULL(B.BUDG_CONV_I,0) + ISNULL(B.BUDG_ASGN_I,0) + ISNULL(B.BUDG_SUPP_I,0) + ISNULL(B.BUDG_IWALL_I,0))    AS BUDG_I
                    , ISNULL(B.EX_AMT_I,0)  AS EX_AMT_I
                    , ISNULL(B.AC_AMT_I,0)  AS AC_AMT_I
                    , (ISNULL(B.BUDG_CONF_I,0) + ISNULL(B.BUDG_CONV_I,0) + ISNULL(B.BUDG_ASGN_I,0) + ISNULL(B.BUDG_SUPP_I,0) + ISNULL(B.BUDG_IWALL_I,0) - 
                       ISNULL(B.EX_AMT_I,0)- 
                       ISNULL(B.AC_AMT_I,0)-
                       ISNULL(C.DIVERT_BUDG_I, 0))  AS CHA_AMT
                    , CASE WHEN ISNULL(B.BUDG_CONF_I,0) + ISNULL(B.BUDG_CONV_I,0) + ISNULL(B.BUDG_ASGN_I,0) + ISNULL(B.BUDG_SUPP_I,0) + ISNULL(B.BUDG_IWALL_I,0) = 0 
                           THEN 0
                           ELSE (ISNULL(B.EX_AMT_I,0)+ISNULL(B.AC_AMT_I,0))/(ISNULL(B.BUDG_CONF_I,0) + ISNULL(B.BUDG_CONV_I,0) + ISNULL(B.BUDG_ASGN_I,0) + ISNULL(B.BUDG_SUPP_I,0) + ISNULL(B.BUDG_IWALL_I,0)) *100
                       END AS ACHIEVE_RATE
                    , A.SUBJECT_DIVI  AS SUBJECT_DIVI
                 FROM           ABA400T A WITH (NOLOCK)
                      LEFT JOIN AFB110T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                                                       AND A.ACCNT     = B.ACCNT
                      LEFT JOIN (SELECT X.COMP_CODE
                                      , X.ACCNT
                                      , X.DEPT_CODE
                                      , ISNULL(SUM(X.DIVERT_BUDG_I), 0) AS DIVERT_BUDG_I
                                   FROM AFB121T X WITH (NOLOCK)
                                  WHERE X.COMP_CODE    = @COMP_CODE
                                    AND X.DOC_STATUS  IN ('10', '15', '20', '30')
                                    AND X.DIVERT_DIVI IN ('1', '3')
                                    AND X.BUDG_YYYYMM &gt;= @BUDG_YYYYMM
                                    AND X.BUDG_YYYYMM &lt;= @BUDG_YYYYMM
                                  GROUP BY X.COMP_CODE, X.ACCNT, X.DEPT_CODE, X.BUDG_YYYYMM) C ON C.COMP_CODE = B.COMP_CODE
                                                                                              AND C.DEPT_CODE = B.DEPT_CODE
                                                                                              AND C.ACCNT     = B.ACCNT
                WHERE A.COMP_CODE    = @COMP_CODE
                  AND B.BUDG_YYYYMM  = @BUDG_YYYYMM
                  AND A.SUBJECT_DIVI = '2'
                  AND ((@ACCNT_FR     = '') OR (@ACCNT_FR     != '' AND A.ACCNT_CD &gt;= @ACCNT_FR) OR (@ACCNT_FR != '' AND B.ACCNT &gt;= @ACCNT_FR))
                  AND ((@ACCNT_TO     = '') OR (@ACCNT_TO     != '' AND A.ACCNT_CD &lt;= @ACCNT_TO) OR (@ACCNT_TO != '' AND B.ACCNT &lt;= @ACCNT_TO))
                  AND ((@DEPT_CODE_FR = '') OR (@DEPT_CODE_FR != '' AND B.DEPT_CODE &gt;= @DEPT_CODE_FR))
                  AND ((@DEPT_CODE_TO = '') OR (@DEPT_CODE_TO != '' AND B.DEPT_CODE &lt;= @DEPT_CODE_TO))) X
         ORDER BY X.ACCNT, X.DEPT_CODE, X.DEPT_NAME
		</if>

		SET NOCOUNT OFF
	</select>
</mapper>