<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agd500ukrServiceImpl">
	<select id="agd500ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		DECLARE	@COMP_CODE		NVARCHAR(08),
				@DIV_CODE		NVARCHAR(08),
				@CRDT_CODE		NVARCHAR(20),
				@CRDT_NUM		NVARCHAR(20),
				@DATE_FR		NVARCHAR(08),
				@DATE_TO		NVARCHAR(08),
				@IN_DEPT_CODE	NVARCHAR(20),
				@CHARGE_CODE	NVARCHAR(10)

		SET @COMP_CODE		= #{S_COMP_CODE}
		SET @DIV_CODE		= #{IN_DIV_CODE}
		SET @CRDT_CODE		= #{CREDIT_NO_CODE}
		SET @CRDT_NUM		= #{CREDIT_NUM}
		SET @DATE_FR		= #{EX_DATE_FR}
		SET @DATE_TO		= #{EX_DATE_TO}
		SET @IN_DEPT_CODE	= #{IN_DEPT_CODE}
		SET @CHARGE_CODE	= #{CHARGE_CODE}
		SET @DIV_CODE		= ISNULL(NULLIF(@DIV_CODE, ''), '%')

		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.BILL_DIV_CODE
			 , A.CREDIT_NUM
			 , A.SEQ
			 , A.PUB_DATE
			 , A.STATUS
			 , A.IN_DIV_CODE
			 , A.IN_DEPT_CODE
			 , A.IN_DEPT_NAME
			 , A.DEPT_CODE
			 , A.DEPT_NAME
			 , A.CUSTOM_CODE
			 , A.CUSTOM_NAME
			 , A.COMPANY_NUM
			 , A.PROOF_KIND
			 , A.SUPPLY_AMT_I
			 , A.TAX_AMT_I
			 , A.TOT_AMT_I
			 , A.P_ACCNT
			 , B.ACCNT_NAME		AS P_ACCNT_NAME
			 , A.REMARK
			 , A.EX_DATE
			 , A.EX_NUM
			 , A.AGREE_YN
		  FROM AGD500T A WITH(NOLOCK)
			LEFT OUTER JOIN	ABA400T B WITH(NOLOCK) ON A.COMP_CODE  = B.COMP_CODE
			                                      AND A.P_ACCNT    = B.ACCNT
			LEFT OUTER JOIN	ABA500T C WITH(NOLOCK) ON A.COMP_CODE  = A.COMP_CODE
			                                      AND REPLACE(A.CREDIT_NUM, '-', '') = REPLACE(unilite.fnCipherDecrypt(C.CRDT_FULL_NUM, ''), '-', '')
		 WHERE A.COMP_CODE   = @COMP_CODE
		   AND A.DIV_CODE    LIKE @DIV_CODE
		   AND A.PUB_DATE BETWEEN @DATE_FR	AND @DATE_TO
		   AND ((ISNULL(@CRDT_CODE   , '') = '') OR (C.CRDT_NUM     = @CRDT_CODE))
		   AND ((ISNULL(@CRDT_NUM    , '') = '') OR (A.CREDIT_NUM   = @CRDT_NUM))
		   AND ((ISNULL(@IN_DEPT_CODE, '') = '') OR (A.IN_DEPT_CODE = @IN_DEPT_CODE))
		<if test="@foren.Ognl@isNotEmpty(SEQ)">
		   AND A.SEQ         = #{SEQ}
		</if>
		<if test="SLIP_YN == &quot;Y&quot;">
			AND ISNULL(A.EX_DATE, '') != ''
		</if>
		<if test="SLIP_YN == &quot;N&quot;">
			AND ISNULL(A.EX_DATE, '')  = ''
		</if>
	</select>
	
	<update id="agd500ukrServiceImpl.deleteMaster" parameterType="Map">
		BEGIN
			DELETE
			  FROM AGD500T
			 WHERE COMP_CODE		= #{S_COMP_CODE}
			   AND DIV_CODE			= #{DIV_CODE}
			   AND CREDIT_NUM		= #{CREDIT_NUM}
			   AND SEQ				= #{SEQ}
		END
	</update>
	
	<update id="agd500ukrServiceImpl.insertMaster" parameterType="Map">
		BEGIN
			UPDATE AGD500T
			   SET CUSTOM_CODE		= #{CUSTOM_CODE}
				 , CUSTOM_NAME		= #{CUSTOM_NAME}
				 , PROOF_KIND		= #{PROOF_KIND}
				 , SUPPLY_AMT_I		= ${SUPPLY_AMT_I}
				 , TAX_AMT_I		= ${TAX_AMT_I}
				 , TOT_AMT_I		= ${TOT_AMT_I}
				 , P_ACCNT			= #{P_ACCNT}
				 , UPDATE_DB_USER	= #{S_USER_ID}
				 , UPDATE_DB_TIME	= GETDATE()
			
			 WHERE COMP_CODE		= #{S_COMP_CODE}
			   AND DIV_CODE			= #{DIV_CODE}
			   AND CREDIT_NUM		= #{CRDT_NUM}
			   AND SEQ				= #{SEQ}
		END
	</update>
	
	<update id="agd500ukrServiceImpl.updateMaster" parameterType="Map">
		BEGIN
			UPDATE AGD500T
			   SET CUSTOM_CODE		= #{CUSTOM_CODE}
				 , CUSTOM_NAME		= #{CUSTOM_NAME}
				 , PROOF_KIND		= #{PROOF_KIND}
				 , SUPPLY_AMT_I		= ${SUPPLY_AMT_I}
				 , TAX_AMT_I		= ${TAX_AMT_I}
				 , TOT_AMT_I		= ${TOT_AMT_I}
				 , P_ACCNT			= #{P_ACCNT}
				 , UPDATE_DB_USER	= #{S_USER_ID}
				 , UPDATE_DB_TIME	= GETDATE()
			
			 WHERE COMP_CODE		= #{S_COMP_CODE}
			   AND DIV_CODE			= #{DIV_CODE}
			   AND CREDIT_NUM		= #{CREDIT_NUM}
			   AND SEQ				= #{SEQ}
		END
	</update>

	<insert id="agd500ukrServiceImpl.insertExcelAgd500t" parameterType="Map">		/* 엑셀insert */
		INSERT INTO AGD500T_EXCEL
			 ( _EXCEL_JOBID
			 , _EXCEL_ROWNUM
			 , _EXCEL_HAS_ERROR
			 , _EXCEL_ERROR_MSG
			 , COMP_CODE
			 , DIV_CODE
			 , BILL_DIV_CODE
			 , CREDIT_NUM
			 , PUB_DATE
			 , IN_DEPT_CODE
			 , IN_DEPT_NAME
			 , CUSTOM_NAME
			 , COMPANY_NUM
			 , SUPPLY_AMT_I
			 , TAX_AMT_I
			 , TOT_AMT_I
			 , P_ACCNT
			 , REMARK
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME	)
		VALUES
			 ( #{_EXCEL_JOBID}
			 , #{_EXCEL_ROWNUM}
			 , #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}
			 , #{_EXCEL_ERROR,jdbcType=VARCHAR}
			 , #{COMP_CODE}
			 , #{DIV_CODE}
			 , #{BILL_DIV_CODE}
			 , #{CREDIT_NUM}
			 , REPLACE(#{PUB_DATE}, '-', '')
			 , #{IN_DEPT_CODE}
			 , #{IN_DEPT_NAME}
			 , #{CUSTOM_NAME}
			 , #{COMPANY_NUM}
			 , #{SUPPLY_AMT_I}
			 , #{TAX_AMT_I}
			 , #{TOT_AMT_I}
			 , #{P_ACCNT}
			 , #{REMARK}
			 , #{S_USER_ID}
			 , GETDATE()
			 , #{S_USER_ID}
			 , GETDATE()	)
	</insert>

	<select id="agd500ukrServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">	/* 엑셀업로드 버튼 / 조회 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
			
			/* 데이터 조회 */
			SELECT _EXCEL_JOBID
				 , _EXCEL_ROWNUM
				 , _EXCEL_HAS_ERROR
				 , _EXCEL_ERROR_MSG
				 , COMP_CODE
				 , DIV_CODE
				 , BILL_DIV_CODE
				 , CREDIT_NUM
				 , ISNULL(uniLITE.fnGetUserDateComp(COMP_CODE, PUB_DATE), '')	AS PUB_DATE
				 , IN_DEPT_CODE
				 , IN_DEPT_NAME
				 , CUSTOM_NAME
				 , COMPANY_NUM
				 , ISNULL(SUPPLY_AMT_I, 0)	AS SUPPLY_AMT_I
				 , ISNULL(TAX_AMT_I, 0)		AS TAX_AMT_I
				 , ISNULL(TOT_AMT_I, 0)		AS TOT_AMT_I
				 , P_ACCNT
				 , REMARK
			  FROM AGD500T_EXCEL WITH (NOLOCK)
			 WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
			 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
			 
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

	<update id="excelValidate">
	</update>

	<update id="agd500ukrServiceImpl.deleteAll" parameterType="Map">
		BEGIN
			DELETE
			  FROM AGD500T_EXCEL
		END
	</update>

	<select id="agd500ukrServiceImpl.applyAll" parameterType="Map"  resultType="rMap">
		BEGIN
			DECLARE	@JOBID		NVARCHAR(32)	= #{_EXCEL_JOBID}
				  , @COMP_CODE	NVARCHAR(08)	= ''
				  , @DIV_CODE	NVARCHAR(08)	= ''
				  , @CREDIT_NUM	NVARCHAR(20)	= ''
				  , @MAX_SEQ	NUMERIC(05)		= 0
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE CUR_CARD CURSOR FOR
				SELECT A.COMP_CODE
					 , A.DIV_CODE
					 , REPLACE(REPLACE(A.CREDIT_NUM, '-', ''), ' ', '')	AS CREDIT_NUM
					 , ISNULL(MAX(B.SEQ), 0)							AS MAX_SEQ
				  FROM AGD500T_EXCEL A WITH (NOLOCK)
						LEFT OUTER JOIN	AGD500T B WITH (NOLOCK)
									 ON A.COMP_CODE		= B.COMP_CODE
									AND A.DIV_CODE		= B.DIV_CODE
									AND REPLACE(REPLACE(A.CREDIT_NUM, '-', ''), ' ', '')	= REPLACE(REPLACE(B.CREDIT_NUM, '-', ''), ' ', '')
				 WHERE _EXCEL_JOBID = @JOBID
				 GROUP BY A.COMP_CODE
					 , A.DIV_CODE
					 , REPLACE(REPLACE(A.CREDIT_NUM, '-', ''), ' ', '')

			OPEN CUR_CARD
			FETCH NEXT FROM CUR_CARD INTO @COMP_CODE
										, @DIV_CODE
										, @CREDIT_NUM
										, @MAX_SEQ
			BEGIN
				INSERT INTO AGD500T
				SELECT A.COMP_CODE
					 , A.DIV_CODE
					 , REPLACE(REPLACE(A.CREDIT_NUM	, '-', ''), ' ', '')		AS CREDIT_NUM
					 , @MAX_SEQ + A._EXCEL_ROWNUM								AS SEQ
					 , A.BILL_DIV_CODE
					 , REPLACE(REPLACE(A.PUB_DATE	, '.', ''), ' ', '')		AS PUB_DATE
					 , 'B'														AS STATUS
					 , A.DIV_CODE												AS IN_DIV_CODE
					 , A.IN_DEPT_CODE
					 , A.IN_DEPT_NAME
					 , ISNULL(B.DEPT_CODE, A.IN_DEPT_CODE)						AS DEPT_CODE
					 , ISNULL(B.DEPT_NAME, A.IN_DEPT_NAME)						AS DEPT_NAME
					 , C.CUSTOM_CODE
					 , ISNULL(C.CUSTOM_NAME, A.CUSTOM_NAME)						AS CUSTOM_NAME
					 , REPLACE(REPLACE(A.COMPANY_NUM, '-', ''), ' ', '')		AS COMPANY_NUM
					 , '53'														AS PROOF_KIND
					 , A.SUPPLY_AMT_I
					 , A.TAX_AMT_I
					 , A.TOT_AMT_I
					 , A.P_ACCNT
					 , A.REMARK
					 , '1'														AS SALE_DIVI
					 , '99'														AS BUSI_TYPE
					 , ''														AS EX_DATE
					 , 0														AS EX_NUM
					 , 'N'														AS AGREE_YN
					 , A.INSERT_DB_USER
					 , A.INSERT_DB_TIME
					 , A.UPDATE_DB_USER
					 , A.UPDATE_DB_TIME
					 , NULL														AS TEMPC_01
					 , NULL														AS TEMPC_02
					 , NULL														AS TEMPC_03
					 , NULL														AS TEMPN_01
					 , NULL														AS TEMPN_02
					 , NULL														AS TEMPN_03
				  FROM AGD500T_EXCEL A WITH (NOLOCK)
						LEFT OUTER JOIN (
											SELECT B1.COMP_CODE
												 , REPLACE(uniLITE.fnCipherDecrypt(B1.CRDT_FULL_NUM, ''), '-', '')	AS CREDIT_NUM
												 , B1.CRDT_NUM
												 , B2.DEPT_CODE
												 , B2.DEPT_NAME
											  FROM ABA500T B1 WITH (NOLOCK)
													LEFT OUTER JOIN HUM100T B2 WITH (NOLOCK)
																 ON B1.COMP_CODE	= B2.COMP_CODE
																AND B1.PERSON_NUMB	= B2.PERSON_NUMB
											 WHERE B1.COMP_CODE	= @COMP_CODE
											   AND REPLACE(uniLITE.fnCipherDecrypt(B1.CRDT_FULL_NUM, ''), '-', '') = @CREDIT_NUM
										) B
									 ON A.COMP_CODE		= B.COMP_CODE
						LEFT OUTER JOIN BCM100T C
									 ON A.COMP_CODE		= C.COMP_CODE
									AND REPLACE(REPLACE(A.COMPANY_NUM, '-', ''), ' ', '')	= C.COMPANY_NUM
				 WHERE A._EXCEL_JOBID	= @JOBID
				   AND REPLACE(REPLACE(A.CREDIT_NUM	, '-', ''), ' ', '')	= @CREDIT_NUM
				
				FETCH NEXT FROM CUR_CARD INTO @COMP_CODE
											, @DIV_CODE
											, @CREDIT_NUM
											, @MAX_SEQ
			END
		
			CLOSE CUR_CARD
			DEALLOCATE CUR_CARD
		
			DECLARE @MIN_PUB_DATE NVARCHAR(8) ,
					@MAX_PUB_DATE NVARCHAR(8) 
			SELECT @MIN_PUB_DATE = MIN(PUB_DATE),@MAX_PUB_DATE = MAX(PUB_DATE) FROM AGD500T_EXCEL WHERE _EXCEL_JOBID = @JOBID

			SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , A.BILL_DIV_CODE
			 , A.CREDIT_NUM
			 , A.SEQ
			 , A.PUB_DATE
			 , A.STATUS
			 , A.IN_DIV_CODE
			 , A.IN_DEPT_CODE
			 , A.IN_DEPT_NAME
			 , A.DEPT_CODE
			 , A.DEPT_NAME
			 , A.CUSTOM_CODE
			 , A.CUSTOM_NAME
			 , A.COMPANY_NUM
			 , A.PROOF_KIND
			 , A.SUPPLY_AMT_I
			 , A.TAX_AMT_I
			 , A.TOT_AMT_I
			 , A.P_ACCNT
			 , B.ACCNT_NAME		AS P_ACCNT_NAME
			 , A.REMARK
			 , A.EX_DATE
			 , A.EX_NUM
			 , A.AGREE_YN
		  FROM (
			SELECT	*
				 , MAX(SEQ) OVER (PARTITION BY COMP_CODE , DIV_CODE, REPLACE(REPLACE(CREDIT_NUM, '-', ''), ' ', '')) AS MAX_ROWNUM
			 FROM AGD500T
			 WHERE COMP_CODE = @COMP_CODE
			   AND DIV_CODE = @DIV_CODE
			   AND PUB_DATE BETWEEN @MIN_PUB_DATE	AND @MAX_PUB_DATE
		  )  AS A
		  INNER JOIN AGD500T_EXCEL C ON C._EXCEL_JOBID	= @JOBID 
								     AND A.COMP_CODE	= C.COMP_CODE
								     AND A.DIV_CODE		= C.DIV_CODE
									 AND REPLACE(REPLACE(A.CREDIT_NUM, '-', ''), ' ', '')	= REPLACE(REPLACE(C.CREDIT_NUM, '-', ''), ' ', '')
									 AND MAX_ROWNUM -_EXCEL_ROWNUM  = C._EXCEL_ROWNUM
		  LEFT OUTER JOIN	ABA400T B
							 ON A.COMP_CODE	= B.COMP_CODE
							AND A.P_ACCNT	= B.ACCNT
		
		  
			
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>
</mapper>