<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agd320ukrServiceImpl">
	<select id="agd320ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		--agd320ukr.Cagd320ukr[fnagd320QStd] QUERY01
		BEGIN
		    SET NOCOUNT    ON
		    SET ARITHABORT ON
		
		---- I. 준비 ---------------------------------------------------------------------------------------------------------------------- 
		
		    /*------------------------------------------------------------------------*/
		    /* 1.1. (파라메터)변수 선언                                               */
		    /*------------------------------------------------------------------------*/
		    DECLARE @COMP_CODE              NVARCHAR(08)        --(필수) 법인코드
		          , @FR_ACQ_DATE            NVARCHAR(08)        --(필수) FROM 취득일
		          , @TO_ACQ_DATE            NVARCHAR(08)        --(필수) TO   취득일
		          , @DIV_CODE               NVARCHAR(08)        --(선택) 사업장
		          , @FR_INSERT_DATE         NVARCHAR(08)        --(선택) FROM 입력일
		          , @TO_INSERT_DATE         NVARCHAR(08)        --(선택) TO   입력일
		          , @ACCNT                  NVARCHAR(15)        --(선택) 계정코드
		          , @ASST                   NVARCHAR(15)        --(선택) 자산코드
		          , @AP_STS                 NVARCHAR(01)        --(선택) 전표승인여부
		          , @PROC_DATE              NVARCHAR(08)        --(선택) 실행일
		          , @DATE_OPTION            NVARCHAR(04)        --(필수) 실행구분
		          , @WORK                   NVARCHAR(04)        --(필수) 작업구분
		          , @INPUT_USER_ID          NVARCHAR(100)        --(필수) 로그인사용자ID
		
		    /*------------------------------------------------------------------------*/
		    /* 2.1. 변수값 정의                                                       */
		    /*------------------------------------------------------------------------*/
		    SET     @COMP_CODE              = #{S_COMP_CODE}
		    SET     @FR_ACQ_DATE            = #{FR_ACQ_DATE}
		    SET     @TO_ACQ_DATE            = #{TO_ACQ_DATE}
		    SET     @DIV_CODE               = #{DIV_CODE}
		    SET     @ACCNT                  = #{ACCNT_CODE}
		    SET     @ASST                   = #{ASSET_CODE}
		    SET     @AP_STS                 = #{AP_STS}
		    SET     @PROC_DATE              = #{PROC_DATE}
		    SET     @DATE_OPTION            = #{DATE_OPTION}              --1:계산서일, 2:실행일
		    SET     @WORK                   = #{WORK}       --Proc:자동기표, Canc:기표취소
		    SET     @FR_INSERT_DATE         = #{FR_INSERT_DATE}
		    SET     @TO_INSERT_DATE         = #{TO_INSERT_DATE}
		    SET     @INPUT_USER_ID          = #{S_USER_ID}		    
		
		    /*------------------------------------------------------------------------*/
		    /* 3.1. 자동기표대상 데이터 조회                                          */
		    /*------------------------------------------------------------------------*/
		    SELECT  DISTINCT
		            CONVERT(BIT, 0)                                             AS CHOICE    
		         ,  A.COMP_CODE
		         ,  A.DIV_CODE
		         ,  A.ASST
		         ,  A.ASST_NAME
		         ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.ACQ_DATE)          AS ACQ_DATE
		         ,  A.ACCNT
		         ,  D.ACCNT_NAME
		         ,  ISNULL(A.ACQ_AMT_I  , 0)                                    AS ACQ_AMT_I
		         ,  A.SET_TYPE
		         ,  A.PROOF_KIND
		         ,  ISNULL(A.AC_CUSTOM_CODE, '')                                AS CUSTOM_CODE
		         ,  ISNULL(B.CUSTOM_NAME, '')                                   AS CUSTOM_NAME
		         ,  A.DEPT_CODE
		         ,  A.DEPT_NAME
		         ,  ISNULL(A.SUPPLY_AMT_I  , 0)                                 AS SUPPLY_AMT_I
		         ,  ISNULL(A.TAX_AMT_I  , 0)                                    AS TAX_AMT_I
		         ,  ISNULL(A.SUPPLY_AMT_I  , 0) + ISNULL(A.TAX_AMT_I  , 0)      AS TOTAL_AMT_I
		         ,  uniLITE.fnGetUserDateComp(A.COMP_CODE, A.EX_DATE)           AS EX_DATE
		         ,  CASE WHEN A.EX_NUM = 0 THEN NULL ELSE A.EX_NUM END          AS EX_NUM
		         ,  ISNULL(C.AP_STS     , '')                                   AS AP_STS
		         ,  A.SAVE_CODE
		         ,  E.SAVE_NAME
		         ,  A.CRDT_NUM
		         ,  F.CRDT_NAME
		         ,  A.REASON_CODE
		         ,  A.PAY_DATE
		         ,  A.EB_YN
		         ,  A.INSERT_DB_USER
		         ,  A.INSERT_DB_TIME
		         ,  A.UPDATE_DB_USER
		         ,  A.UPDATE_DB_TIME
		    FROM           ASS300T  AS A  WITH (NOLOCK) 
		        LEFT  JOIN BCM100T  AS B  WITH (NOLOCK) ON  B.COMP_CODE    = A.COMP_CODE
		                                                AND B.CUSTOM_CODE  = A.AC_CUSTOM_CODE
			    LEFT  JOIN (SELECT COMP_CODE
                                 , EX_DATE
                                 , EX_NUM
                                 , AP_STS
                              FROM AGJ110T WITH (NOLOCK)
                             WHERE COMP_CODE = @COMP_CODE
                               AND (MOD_DIVI IS NULL OR MOD_DIVI = '')
                             GROUP BY COMP_CODE, EX_DATE, EX_NUM, AP_STS) C ON C.COMP_CODE    = A.COMP_CODE
			                                                               AND C.EX_DATE      = A.EX_DATE
			                                                               AND C.EX_NUM       = A.EX_NUM
   		        LEFT  JOIN ABA400T  AS D  WITH (NOLOCK) ON  D.COMP_CODE    = A.COMP_CODE
		                                                AND D.ACCNT        = A.ACCNT
		        LEFT  JOIN AFS100T  AS E  WITH (NOLOCK) ON  E.COMP_CODE    = A.COMP_CODE
		                                                AND E.SAVE_CODE    = A.SAVE_CODE
		        LEFT  JOIN ABA500T  AS F  WITH (NOLOCK) ON  F.COMP_CODE    = A.COMP_CODE
		                                                AND F.CRDT_NUM     = A.CRDT_NUM
		    WHERE A.COMP_CODE               =       @COMP_CODE
		    AND   A.ACQ_DATE                BETWEEN @FR_ACQ_DATE AND @TO_ACQ_DATE
		    AND   ((ISNULL(A.EX_DATE , '')  =       ''                      AND
		            ISNULL(A.EX_NUM  , 0 )  =       0                       AND @WORK = 'PROC')
		    OR     (ISNULL(A.EX_DATE , '') !=       ''                      AND @WORK = 'CANC'))
		    AND   ((C.AP_STS                =       @AP_STS                 AND @AP_STS           != '') OR (@AP_STS           = ''))
		    AND   ((A.DIV_CODE              =       @DIV_CODE               AND @DIV_CODE         != '') OR (@DIV_CODE         = ''))
		    AND   ((A.ACCNT                 =       @ACCNT                  AND @ACCNT            != '') OR (@ACCNT            = ''))
		    AND   ((A.ASST                  =       @ASST                   AND @ASST             != '') OR (@ASST             = ''))
		    AND   ((CONVERT(NVARCHAR(8), A.INSERT_DB_TIME,112) &gt;= @FR_INSERT_DATE AND @FR_INSERT_DATE != '') OR (@FR_INSERT_DATE = ''))
		    AND   ((CONVERT(NVARCHAR(8), A.INSERT_DB_TIME,112) &lt;= @TO_INSERT_DATE AND @TO_INSERT_DATE != '') OR (@TO_INSERT_DATE = ''))
		
		    SET NOCOUNT    OFF
		    SET ARITHABORT OFF
		END
	</select>
	
	<update id="agd320ukrServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call SP_SALES_BalanceClosing (
			#{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},			
			#{DIV_CODE,  mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},         /*사업장*/
			#{END_DATE,  mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},         /*최종마감년월*/
			#{WORK_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},         /*이월작업년월*/
			#{BASIS_DATE,mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},   		/*기초잔액반영일*/
			#{CLOSED_YN, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},         /*작업구분*/
			#{USER_ID,   mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},           
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}       
		)}
	</update>
	
</mapper>