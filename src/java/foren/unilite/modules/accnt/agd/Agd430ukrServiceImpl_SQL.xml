<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agd430ukrServiceImpl">
	<!-- select 쿼리 (완) -->
	<select id="agd430ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		SELECT A.COMP_CODE
			 , A.AC_DATE                 AS ORG_AC_DATE
			 , A.SLIP_NUM                AS ORG_SLIP_NUM
			 , A.SLIP_SEQ                AS ORG_SLIP_SEQ
			 , C.ACCNT
			 , D.ACCNT_NAME
			 , ISNULL(F.ACCNT, '')       AS E2_ACCNT
			 , ISNULL(G.ACCNT_NAME, '')  AS E2_ACCNT_NAME
			 , C.AMT_I
			 , CASE ISNULL(A.REASON_CODE, '') WHEN '15' THEN ISNULL(E.TAXFREE_RATE, 0) 
			                                            ELSE 100
			                                  END                                        AS TAXFREE_RATE
			 , CASE ISNULL(A.REASON_CODE, '') WHEN '15' THEN C.AMT_I * (ISNULL(E.TAXFREE_RATE, 0) / 100)    
                                                        ELSE C.AMT_I       
                                              END                                        AS NONDED_AMT_I
			 , F.AC_CODE1
			 , F.AC_CODE2
			 , F.AC_CODE3
			 , F.AC_CODE4
			 , F.AC_CODE5
			 , F.AC_CODE6
			 , F.AC_DATA1
			 , F.AC_DATA2
			 , F.AC_DATA3
			 , F.AC_DATA4
			 , F.AC_DATA5
			 , F.AC_DATA6
			 , F.AC_DATA_NAME1
			 , F.AC_DATA_NAME2
			 , F.AC_DATA_NAME3
			 , F.AC_DATA_NAME4
			 , F.AC_DATA_NAME5
			 , F.AC_DATA_NAME6
			 , C.PROOF_KIND
			 , F.BILL_DIV_CODE
			 , F.DIV_CODE
			 , F.DEPT_CODE
			 , F.DEPT_NAME
		<if test="WORK_DIVI == &quot;1&quot;"> 					
		/* 자동기표일 때, 조회 로직 */
			 , '' 											  AS AC_DATE
			 , NULL											  AS SLIP_NUM
		</if>
		<if test="WORK_DIVI == &quot;2&quot;"> 					
		/* 기표취소일 때, 조회 로직 */
			 , A.AC_DATE 									  AS AC_DATE
			 , A.SLIP_NUM									  AS SLIP_NUM
		</if>

		  FROM ATX100T A WITH(NOLOCK)
			   INNER JOIN BSA100T B WITH(NOLOCK)
			                         ON B.MAIN_CODE             = 'A022'
									AND ISNULL(B.REF_CODE5, '') = 'Y'
									AND B.COMP_CODE             = A.COMP_CODE
									AND ISNULL(B.SUB_CODE, '')  = ISNULL(A.PROOF_KIND, '')

			   INNER JOIN AGJ210T C WITH(NOLOCK)
			                         ON C.COMP_CODE             = A.COMP_CODE
									AND C.AC_DATE               = A.AC_DATE
									AND C.SLIP_NUM              = A.SLIP_NUM
									AND C.SLIP_SEQ              = A.SLIP_SEQ

			   LEFT  JOIN ABA400T D WITH(NOLOCK)
			                         ON D.COMP_CODE             = A.COMP_CODE
									AND D.ACCNT                 = C.ACCNT

			   LEFT  JOIN (SELECT TOP 1 * FROM ATX453T  WITH(NOLOCK)) E
									 ON E.COMP_CODE             = A.COMP_CODE
									AND E.BILL_DIV_CODE         = C.BILL_DIV_CODE
									AND E.FR_PUB_DATE       &lt;= A.AC_DATE
									AND E.TO_PUB_DATE       &gt;= A.AC_DATE

			   LEFT  JOIN AGJ210T F WITH(NOLOCK)
			                         ON F.COMP_CODE             = A.COMP_CODE
									AND F.AC_DATE               = A.AC_DATE
									AND F.SLIP_NUM              = A.SLIP_NUM
									AND F.DR_CR                 = C.DR_CR
									AND F.ACCNT                 = CASE 'E2' WHEN C.AC_CODE1 THEN C.AC_DATA1
																			WHEN C.AC_CODE2 THEN C.AC_DATA2
																			WHEN C.AC_CODE3 THEN C.AC_DATA3
																			WHEN C.AC_CODE4 THEN C.AC_DATA4
																			WHEN C.AC_CODE5 THEN C.AC_DATA5
																			WHEN C.AC_CODE6 THEN C.AC_DATA6
																			ELSE '' 
																  END

			   LEFT  JOIN ABA400T G WITH(NOLOCK)
			                         ON G.COMP_CODE             = F.COMP_CODE
									AND G.ACCNT                 = F.ACCNT

		<if test="WORK_DIVI == &quot;1&quot;"> 					
		/* 자동기표일 때, 조회 로직 */
			   LEFT JOIN AGD430T H WITH (NOLOCK)
									ON H.COMP_CODE				=	A.COMP_CODE
								   AND H.ORG_AC_DATE			=	A.AC_DATE
								   AND H.ORG_SLIP_NUM			=	A.SLIP_NUM
								   AND H.ORG_SLIP_SEQ			=	A.SLIP_SEQ
		</if>
		<if test="WORK_DIVI == &quot;2&quot;"> 					
		/* 기표취소일 때, 조회 로직 */
			  INNER JOIN AGD430T H WITH (NOLOCK)
									ON H.COMP_CODE				=	A.COMP_CODE
								   AND H.ORG_AC_DATE			=	A.AC_DATE
								   AND H.ORG_SLIP_NUM			=	A.SLIP_NUM
								   AND H.ORG_SLIP_SEQ			=	A.SLIP_SEQ
		</if>
		
		WHERE A.COMP_CODE   			 = #{S_COMP_CODE}
		  AND A.AC_DATE				 &gt;= #{AC_DATE_FR}
		  AND A.AC_DATE				 &lt;= #{AC_DATE_TO}
--		  AND ISNULL(A.REASON_CODE, '')  = '15'
		  AND ISNULL(F.ACCNT, '')       != ''
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">     
		  AND A.DIV_CODE IN
			<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
				#{item}
			</foreach>         
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">     
		  AND C.DEPT_CODE				 = #{DEPT_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">     
		  AND C.ACCNT					 = #{ACCNT_CODE}
		</if>

		<if test="WORK_DIVI == &quot;1&quot;"> 					
		/* 자동기표일 때, 조회 로직 */
	      AND ISNULL(A.EX_DATE,'')		 = ''						/* 기표가 안 된 데이터 */
	      AND H.COMP_CODE IS NULL									/* AGD430T에는 없는 데이터만 조회 */
		</if>
		<if test="WORK_DIVI == &quot;2&quot;"> 					
		/* 기표취소일 때, 조회 로직 */
	      AND ISNULL(A.EX_DATE,'')	    != ''						/* 기표가 된 데이터 */
		</if>

		ORDER BY A.AC_DATE, A.SLIP_NUM, A.SLIP_SEQ
	</select>
	
	
	<!-- INSERT AGD430T (완) -->
	<insert id="agd430ukrServiceImpl.insertAgd390" parameterType="Map">     
	    INSERT INTO AGD430T
	           (
			     COMP_CODE     
			   , ORG_AC_DATE   
			   , ORG_SLIP_NUM  
			   , ORG_SLIP_SEQ  
			   , ACCNT         
			   , AMT_I         
			   , TAXFREE_RATE      
			   , TOT_NONTAX_AMT        
			   , AC_CODE1         
			   , AC_CODE2         
			   , AC_CODE3         
			   , AC_CODE4         
			   , AC_CODE5         
			   , AC_CODE6         
			   , A.AC_DATA1
			   , A.AC_DATA2
			   , A.AC_DATA3
			   , A.AC_DATA4
			   , A.AC_DATA5
			   , A.AC_DATA6
			   , A.AC_DATA_NAME1
			   , A.AC_DATA_NAME2
			   , A.AC_DATA_NAME3
			   , A.AC_DATA_NAME4
			   , A.AC_DATA_NAME5
			   , A.AC_DATA_NAME6
			   , DIV_CODE      
			   , DEPT_CODE     
			   , DEPT_NAME     
			   , AC_DATE       
			   , SLIP_NUM      
			   , INSERT_DB_USER
			   , INSERT_DB_TIME
	           )
	     VALUES
	           ( 
			     #{S_COMP_CODE}     
			   , #{ORG_AC_DATE}   
			   , #{ORG_SLIP_NUM}
			   , #{ORG_SLIP_SEQ} 
			   , #{ACCNT} 
			   , #{AMT_I}        
			   , #{TAXFREE_RATE}      
			   , #{TOT_NONTAX_AMT}
			   , #{AC_CODE1}
			   , #{AC_CODE2}         
			   , #{AC_CODE3}        
			   , #{AC_CODE4}        
			   , #{AC_CODE5}        
			   , #{AC_CODE6}         
			   , #{AC_DATA1}
			   , #{AC_DATA2}         
			   , #{AC_DATA3}        
			   , #{AC_DATA4}        
			   , #{AC_DATA5}        
			   , #{AC_DATA6}         
			   , #{A.AC_DATA_NAME1}
			   , #{A.AC_DATA_NAME2}
			   , #{A.AC_DATA_NAME3}
			   , #{A.AC_DATA_NAME4}
			   , #{A.AC_DATA_NAME5}
			   , #{A.AC_DATA_NAME6}
			   , #{DIV_CODE}      
			   , #{DEPT_CODE}     
			   , #{DEPT_NAME}
			   , #{AC_DATE}
			   , #{SLIP_NUM}      
	           , #{S_USER_ID}       
	           , GETDATE()         
	           ) 
	</insert>
	
	<!-- INSERT LOG TABLE (로그테이블 미정) -->
	<insert id="agd430ukrServiceImpl.insertLogTable" parameterType="Map">     
	    INSERT INTO L_AGD430T
	           (
	             KEY_VALUE
       		   , OPR_FLAG
       		   , DOC_ID
			   , COMP_CODE     
			   , ORG_AC_DATE   
			   , ORG_SLIP_NUM  
			   , ORG_SLIP_SEQ  
			   , ACCNT         
			   , AC_DATE       
			   , SLIP_NUM      
			   , RE_AC_DATE    
			   , RE_SLIP_NUM   
			   , INSERT_DB_USER
			   , INSERT_DB_TIME
	           )
	     VALUES
	           ( 
	             #{KEY_VALUE}
       		   , #{OPR_FLAG}
       		   ,(
       		     SELECT DOC_ID 
       		       FROM AGD430T  WITH (NOLOCK)
       		      WHERE COMP_CODE		= #{S_COMP_CODE}
       		        AND ORG_AC_DATE		= #{ORG_AC_DATE}
       		        AND ORG_SLIP_NUM	= #{ORG_SLIP_NUM}
       		        AND ORG_SLIP_SEQ	= #{ORG_SLIP_SEQ}
       		    )
			   , #{S_COMP_CODE}     
			   , #{ORG_AC_DATE}   
			   , #{ORG_SLIP_NUM}
			   , #{ORG_SLIP_SEQ} 
			   , #{ACCNT} 
			   , #{AC_DATE}
			   , #{SLIP_NUM}      
			   , #{RE_AC_DATE}    
			   , #{RE_SLIP_NUM}   
	           , #{S_USER_ID}       
	           , GETDATE()         
	           ) 
	</insert>
	
	<!-- 기표취소 SP 호출 (SP 미정) -->
	<update id="cancelSlip" parameterType="Map" statementType="CALLABLE">
	    {call USP_ACCNT_AutoSlip430_CANCEL(
	        #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{PROC_DATE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{LANG_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{INPUT_USER_ID, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>
	  
	<!-- 자동기표 SP 호출 (SP 미정) -->
	<update id="runAutoSlip" parameterType="Map" statementType="CALLABLE">
	    {call USP_ACCNT_AutoSlip430(
	        #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{PROC_DATE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{LANG_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{INPUT_USER_ID, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>
</mapper>