<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agd340ukrServiceImpl">
	
	<select id="agd340ukrServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
	--agd340ukr.Cagd340ukr[fnAgd340Qstd] QUERY01
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE         @COMP_CODE          NVARCHAR(08)                --(필수) 법인코드
                  , @FR_DATE            NVARCHAR(08)                --(필수) FROM 자금이체일
                  , @TO_DATE            NVARCHAR(08)                --(필수) TO   자금이체일
                  , @DIV_CODE           NVARCHAR(08)                --(선택) 사업장코드
                  , @DIV_NAME           NVARCHAR(30)                --(선택) 사업장명
                  , @INPUT_GUBUN        NVARCHAR(01)                --(선택) 이체지급구분
                  , @CUSTOM_CODE        NVARCHAR(08)                --(선택) 거래처코드
                  , @CUSTOM_NAME        NVARCHAR(50)                --(선택) 거래처명
                  , @AP_STS             NVARCHAR(01)                --(선택) 승인상태
                  , @PROC_FLAG          NVARCHAR(04)                --(필수) 실행구분
                    --
                  , @USER_ID            NVARCHAR(100)                --(필수) 사용자ID
                  , @INPUT_DATE         NVARCHAR(10)                --(필수) 입력일자

--  [ 변수 값 할당 ] ---------------------------------------------------------------------------------------------------
    SET @COMP_CODE      = #{S_COMP_CODE}
    SET @FR_DATE        = #{FR_DATE}
    SET @TO_DATE        = #{TO_DATE}

    SET @INPUT_GUBUN    = #{INPUT_GUBUN}
    SET @CUSTOM_CODE    = #{CUSTOM_CODE}
    SET @CUSTOM_NAME    = #{CUSTOM_NAME}
    SET @AP_STS         = #{AP_STS}
    SET @PROC_FLAG      = #{WORK}               --Proc:자동기표, Canc:기표취소
    SET @USER_ID        = #{S_USER_ID}
    SET @INPUT_DATE     = GETDATE()

--  [ 초기화 ] ---------------------------------------------------------------------------------------------------------
    IF ( @FR_DATE = '*' OR @FR_DATE IS NULL )
    BEGIN
        SELECT  TOP 0
                CONVERT(BIGINT, 0)                                      AS SEQ
              , CONVERT(BIT, 0)                                         AS CHOICE
              , CONVERT(NVARCHAR(10) , '')                              AS TRANS_DATE
              , CONVERT(NVARCHAR(20) , '')                              AS PROV_DRAFT_NO
              , CONVERT(NVARCHAR(100), '')                              AS REMARK
              , CONVERT(NVARCHAR(30) , '')                              AS INPUT_GUBUN
              , CONVERT(NUMERIC(30, 6), 0)                              AS REAL_AMT_I
              , CONVERT(NVARCHAR(20) , '')                              AS TRANS_KEY
              , CONVERT(NVARCHAR(10) , '')                              AS EX_DATE
              , CONVERT(NUMERIC(07, 0), 0)                              AS EX_NUM
              , CONVERT(NVARCHAR(20) , '')                              AS EX_INFO
              , CONVERT(NVARCHAR(01) , '')                              AS AP_STS
              , CONVERT(NVARCHAR(30) , '')                              AS AP_STS_NM
              , CONVERT(NVARCHAR(08) , '')                              AS COMP_CODE
              , CONVERT(NVARCHAR(08) , '')                              AS DIV_CODE

        RETURN
    END

--  [ 명칭 참조 유형 ] ------------------------------------------------------------------------------------------------
    DECLARE         @RefItem            NVARCHAR(01)

    SELECT TOP 1 @RefItem = REF_ITEM
    FROM   BSA300T WITH (NOLOCK)
    WHERE  USER_ID = @USER_ID

    SET @RefItem = ISNULL(@RefItem, N'0')

--  [ 날짜 포맷 유형 설정 ] --------------------------------------------------------------------------------------------
    DECLARE         @DateFormat         NVARCHAR(10)

    SELECT  TOP 1 @DateFormat = CODE_NAME
    FROM    BSA100T WITH (NOLOCK)
    WHERE   COMP_CODE = @COMP_CODE
    AND     MAIN_CODE = N'B044'
    AND     REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')

--  [ 데이터 조회 ] ----------------------------------------------------------------------------------------------------
    SELECT  
            ROW_NUMBER() OVER (ORDER BY GT.TRANS_DATE, GT.TRANS_KEY)                        AS SEQ
          , CONVERT(BIT, 0)                                                                 AS CHOICE
          , GT.TRANS_DATE
          , GT.PROV_DRAFT_NO
          , GT.REMARK
          , GT.INPUT_GUBUN
          , SUM(GT.REAL_AMT_I)                                                              AS REAL_AMT_I
          , GT.TRANS_KEY
          , GT.EX_DATE
          , GT.EX_NUM
          , GT.EX_DATE + '.' + RIGHT('0000000' + CONVERT(NVARCHAR, GT.EX_NUM), 7)           AS EX_INFO
          , GT.AP_STS
          , GT.AP_STS_NM
          , GT.COMP_CODE
          , GT.DIV_CODE
    FROM    (
            SELECT  CASE WHEN ISNULL(A.TRANS_DATE, '') = '' THEN ''
                         ELSE REPLACE(
                              REPLACE(
                              REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.TRANS_DATE, 1, 4))
                                                 , 'MM'  , SUBSTRING(A.TRANS_DATE, 5, 2))
                                                 , 'DD'  , SUBSTRING(A.TRANS_DATE, 7, 2))
                    END                                                                             AS TRANS_DATE
                  , A.PROV_DRAFT_NO                                                                 AS PROV_DRAFT_NO
                  , A.REMARK                                                                        AS REMARK
                  , M1.CODE_NAME                                                                    AS INPUT_GUBUN
                  , A.TOT_AMT_I                                                                     AS REAL_AMT_I
                  , CASE WHEN A.INPUT_GUBUN = '1' THEN A.PROV_DRAFT_NO
                         WHEN A.INPUT_GUBUN = '2' THEN CONVERT(NVARCHAR(20), A.TRANS_SEQ)
                    END                                                                             AS TRANS_KEY
                  , CASE WHEN ISNULL(A.EX_DATE, '') = '' THEN ''
                         ELSE REPLACE(
                              REPLACE(
                              REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.EX_DATE, 1, 4))
                                                 , 'MM'  , SUBSTRING(A.EX_DATE, 5, 2))
                                                 , 'DD'  , SUBSTRING(A.EX_DATE, 7, 2))
                    END                                                                             AS EX_DATE
                  , A.EX_NUM                                                                        AS EX_NUM
                  , ISNULL(D.AP_STS, '1')                                                           AS AP_STS
                  , M2.CODE_NAME                                                                    AS AP_STS_NM
                  , A.COMP_CODE                                                                     AS COMP_CODE
                  , A.DIV_CODE                                                                      AS DIV_CODE
            FROM                AFB900T   A  WITH (NOLOCK)
                    LEFT  JOIN  BOR120T   B  WITH (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
                                                          AND B.DIV_CODE        = A.DIV_CODE
                    LEFT  JOIN  BCM100T   C1 WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
                                                          AND C1.CUSTOM_CODE    = A.CUSTOM_CODE
                    LEFT  JOIN  (
                                SELECT  COMP_CODE, EX_DATE, EX_NUM, AP_STS
                                FROM    AGJ110T WITH (NOLOCK)
                                WHERE   COMP_CODE    = @COMP_CODE
                                AND     EX_DATE     &gt;= @FR_DATE
                                AND     INPUT_PATH   = '70'
                                AND    (MOD_DIVI IS NULL OR MOD_DIVI = '')
                                GROUP   BY COMP_CODE, EX_DATE, EX_NUM, AP_STS
                                )         D                ON D.COMP_CODE       = A.COMP_CODE
                                                          AND D.EX_DATE         = A.EX_DATE
                                                          AND D.EX_NUM          = A.EX_NUM
                    LEFT  JOIN  BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE      = A.COMP_CODE
                                                          AND M1.MAIN_CODE      = 'A180'
                                                          AND M1.SUB_CODE       = A.INPUT_GUBUN
                    LEFT  JOIN  BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE      = D.COMP_CODE
                                                          AND M2.MAIN_CODE      = 'A014'
                                                          AND M2.SUB_CODE       = D.AP_STS
                    LEFT  JOIN  BSA100T   M3 WITH (NOLOCK) ON M3.COMP_CODE      = A.COMP_CODE
                                                          AND M3.MAIN_CODE      = 'A172'
                                                          AND M3.SUB_CODE       = A.PAY_DIVI
                                                          AND M3.REF_CODE6      = 'Y'
            WHERE   A.COMP_CODE        =        @COMP_CODE
            AND     A.TRANS_DATE      &gt;=        @FR_DATE
            AND     A.TRANS_DATE      &lt;=        @TO_DATE
            AND   ((A.INPUT_GUBUN      =        @INPUT_GUBUN        AND @INPUT_GUBUN    != '') OR (@INPUT_GUBUN = ''))
            AND   ((A.CUSTOM_CODE   LIKE        @CUSTOM_CODE + '%'  AND @CUSTOM_CODE    != '') OR (@CUSTOM_CODE = ''))
            AND   ((C1.CUSTOM_NAME  LIKE N'%' + @CUSTOM_NAME + '%'  AND @CUSTOM_NAME    != '') OR (@CUSTOM_NAME = ''))
            AND   ((D.AP_STS           =        @AP_STS             AND @AP_STS         != '') OR (@AP_sTS      = ''))
            AND   ((ISNULL(A.EX_DATE, '')   =   ''                  AND 
                    ISNULL(A.EX_NUM , 0 )   =   0                   AND @PROC_FLAG       = 'PROC')
            OR     (ISNULL(A.EX_DATE, '')   !=  ''                  AND @PROC_FLAG       = 'CANC'))
            
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">					
			AND     A.DIV_CODE IN
				<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
				 #{item}
				</foreach>									
			</if>
             
            AND     M3.COMP_CODE IS NULL
            )   GT
    GROUP   BY  GT.TRANS_DATE, GT.PROV_DRAFT_NO, GT.REMARK, GT.INPUT_GUBUN, GT.TRANS_KEY
              , GT.EX_DATE, GT.EX_NUM, GT.AP_STS, GT.AP_STS_NM, GT.COMP_CODE, GT.DIV_CODE

    SET NOCOUNT OFF
    SET ARITHABORT OFF
END
	</select>
	
	
<insert id="agd340ukrServiceImpl.insertLogDetail" parameterType="Map">   
	INSERT INTO L_AGD340T
           (KEY_VALUE           ,OPR_FLAG           
           ,COMP_CODE           ,TRANS_KEY          ,TRANS_DATE          ,PROV_DRAFT_NO       ,INPUT_GUBUN        
           ,PROC_TYPE           ,PROC_DATE          ,EX_DATE             ,EX_NUM              ,AP_STS
           ,INSERT_DB_USER      ,INSERT_DB_TIME     ,UPDATE_DB_USER      ,UPDATE_DB_TIME      ,TEMPC_01           
           ,TEMPC_02            ,TEMPC_03           ,TEMPN_01            ,TEMPN_02            ,TEMPN_03
           )
     VALUES
          (#{KEY_VALUE}		  ,#{OPR_FLAG}	  
          ,#{COMP_CODE}		  ,#{TRANS_KEY}		  ,#{TRANS_DATE} 	  ,#{PROV_DRAFT_NO}	  ,#{INPUT_GUBUN}	  
          ,#{PROC_TYPE}		  ,#{PROC_DATE}		  ,#{EX_DATE}         ,#{EX_NUM}		  ,#{AP_STS}		
          ,#{S_USER_ID}		  ,GETDATE()		  ,#{S_USER_ID}		  ,GETDATE()		  ,NULL	
          ,NULL		  		  ,NULL		  		  ,NULL		  		  ,NULL      		  ,NULL
		  )     
</insert>

<update id="spUspAccntAutoSlip70P" parameterType="Map" statementType="CALLABLE">

{call USP_ACCNT_AutoSlip70P (
		#{CompCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{UserId, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
</update>	

<update id="spUspAccntAutoSlip70CancelP" parameterType="Map" statementType="CALLABLE">

{call USP_ACCNT_AutoSlip70CancelP (
		#{CompCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{UserId, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
</update>	
</mapper>