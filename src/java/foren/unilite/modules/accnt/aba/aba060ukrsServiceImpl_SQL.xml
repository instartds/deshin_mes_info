<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aba060ukrsService">
	<select id="aba060ukrsService.checkCount" parameterType="Map" resultType="rMap">  
	/* aba060ukrsService.checkCount   */ 
		SELECT COUNT(*) CNT
	      FROM AGA110T  WITH (NOLOCK)
	     WHERE COMP_CODE = #{S_COMP_CODE}
	       AND DIVI      = #{DIVI}
	     <if test="@foren.Ognl@isNotEmpty(SALE_DIVI)">				
	  	   AND SALE_DIVI = #{SALE_DIVI}
	  	 </if>
	</select>
	
	<select id="aba060ukrsService.getExportYnKind" parameterType="Map" resultType="comboItem">  
	/* aba060ukrsService.getExportYnKind   */ 
	-- 부가세 관련
		<if test="EXPORT_YN == &quot;1&quot;">
			-- 국내
			SELECT SUB_CODE AS 'value'                         
			     , CODE_NAME AS 'text'
				 , '' AS search
				 , '' AS 'option'
			  FROM BSA100T WITH (NOLOCK)             
			 WHERE COMP_CODE = #{S_COMP_CODE}   
			   AND MAIN_CODE = 'S024'
			   AND SUB_CODE != '$'      
			 ORDER BY SORT_SEQ, SUB_CODE 
		</if>
		
		<if test="EXPORT_YN == &quot;2&quot;">     
		-- 해외
			SELECT SUB_CODE AS 'value'                         
			     , CODE_NAME AS 'text'
				 , '' AS search
				 , '' AS 'option'
			  FROM BSA100T WITH (NOLOCK)             
			 WHERE COMP_CODE = #{S_COMP_CODE}   
			   AND MAIN_CODE = 'A082'
			   AND SUB_CODE != '$'      
			 ORDER BY SORT_SEQ, SUB_CODE 
		</if> 
	</select>
	
	
	<select id="aba060ukrsService.getTradeDivKind" parameterType="Map" resultType="comboItem">  
	/* aba060ukrsService.getTradeDivKind   */ 
	-- 무역경비 관련
		<if test="TRADE_DIV == &quot;E&quot;">     
			SELECT SUB_CODE AS 'value'                         
			     , CODE_NAME AS 'text'
				 , '' AS search
				 , '' AS 'option'
			  FROM BSA100T WITH (NOLOCK)             
			 WHERE COMP_CODE = #{S_COMP_CODE}   
			   AND MAIN_CODE = 'T070'
			   AND SUB_CODE != '$'      
			 ORDER BY SORT_SEQ, SUB_CODE 
		</if>
		
		<if test="TRADE_DIV == &quot;I&quot;">     
			SELECT SUB_CODE AS 'value'                         
			     , CODE_NAME AS 'text'
				 , '' AS search
				 , '' AS 'option'
			  FROM BSA100T WITH (NOLOCK)             
			 WHERE COMP_CODE = #{S_COMP_CODE}   
			   AND MAIN_CODE = 'T071'
			   AND SUB_CODE != '$'      
			 ORDER BY SORT_SEQ, SUB_CODE 
		</if> 
	</select>
	
	
	<select id="aba060ukrsService.selectForm" parameterType="Map" resultType="rMap">
    /* aba060ukrsService.selectForm   */ 
		SELECT A.JOB_CODE               
				     , B.CODE_NAME  AS JOB_NAME  
				     , A.FORMAT_QTY            
				     , A.FORMAT_PRICE          
				     , A.FORMAT_IN             
				     , A.FORMAT_OUT            
				     , A.FORMAT_RATE         
				  FROM BSA110T A    WITH (NOLOCK)         
				     , BSA100T B    WITH (NOLOCK)              
				 WHERE A.COMP_CODE = B.COMP_CODE
				   AND A.JOB_CODE  = B.SUB_CODE 
				   AND A.JOB_CODE  = '13'       
				   AND B.MAIN_CODE = 'B007'     
				   AND A.COMP_CODE = #{S_COMP_CODE}
    </select>
    
    <update id="aba060ukrsService.updateForm" parameterType="Map">	
	UPDATE BSA110T 
	       SET FORMAT_QTY    = #{FORMAT_QTY}
	         , FORMAT_PRICE  = #{FORMAT_PRICE}
	         , FORMAT_IN     = #{FORMAT_IN}
	         , FORMAT_OUT    = #{FORMAT_OUT}
	         , FORMAT_RATE   = #{FORMAT_RATE}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME =  GETDATE()
	     WHERE COMP_CODE      = #{S_COMP_CODE}
	       AND JOB_CODE		 = '13'
			
	</update>
	
	
	<select id="aba060ukrsService.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
	
	
	
	
	<select id="aba060ukrsService.selectList1" parameterType="Map" resultType="rMap">

    </select>
    
	<insert id="aba060ukrsService.insertDetail1" parameterType="Map">    /* 추가 */

	</insert>
	
	<update id="aba060ukrsService.updateDetail1" parameterType="Map">		/* 수정 */
	
	</update>
	
	<delete id="aba060ukrsService.deleteDetail1" parameterType="Map">		/* 삭제 */

	</delete>
	
	
	
	
	
	
	
	
	<select id="aba060ukrsService.selectList2" parameterType="Map" resultType="rMap">
		--UAga01Krv.Caga100UKR Setaga100[fnaga100q] Query1
		    SELECT A.SALE_DIVI AS SALE_DIVI 
		         , A.BUSI_TYPE AS BUSI_TYPE 
		   --    , (SELECT CODE_NAME 
		   --           FROM BSA100T 
		   --          WHERE COMP_CODE = A.COMP_CODE 
		   --            AND SUB_CODE  = A.BUSI_TYPE 
		   --            AND MAIN_CODE ='A012' 
		   --            AND SUB_CODE !='$') 				AS CODE_NAME 
		         , A.SLIP_DIVI AS SLIP_DIVI 
		         , A.ACCNT     AS ACCNT 
		         , (SELECT ACCNT_NAME 
		              FROM ABA400T WITH (NOLOCK)
		             WHERE COMP_CODE = A.COMP_CODE 
		               AND ACCNT     = A.ACCNT) 			AS ACCNT_NAME 
		         , A.DEPT_CODE 
		         , (SELECT TREE_NAME 
		              FROM BSA210T WITH (NOLOCK)
					 WHERE COMP_CODE = A.COMP_CODE
					   AND TREE_CODE = A.DEPT_CODE)			AS DEPT_NAME
		         , A.ITEM_CODE	
		         , (SELECT ITEM_NAME 
		              FROM BPR100T WITH (NOLOCK)
					 WHERE COMP_CODE = A.COMP_CODE
					   AND ITEM_CODE = A.ITEM_CODE)			AS DEPT_NAME
		         , A.PERSON_NUMB
		         , (SELECT NAME 
		              FROM HUM100T WITH (NOLOCK)
					 WHERE COMP_CODE   = A.COMP_CODE
					   AND PERSON_NUMB = A.PERSON_NUMB)		AS NAME
		         , A.BANK_CODE
		         , (SELECT CUSTOM_NAME                                                    
			    	  FROM BCM100T WITH (NOLOCK)                                               
			   		 WHERE COMP_CODE   = A.COMP_CODE   
			   		   AND CUSTOM_CODE = A.BANK_CODE                             
			    	   AND CUSTOM_TYPE = '4'
			     	   AND START_DATE                    &lt;= CONVERT(VARChar(8), GETDATE(), 112)
			    	   AND ISNULL(STOP_DATE, '99999999') &gt;= CONVERT(VARCHAR(8), GETDATE(), 112)
			    	   AND USE_YN = N'Y')					AS BANK_NAME
		         , A.SAVE_CODE
		         , (SELECT SAVE_NAME
					  FROM AFS100T WITH (NOLOCK)
					 WHERE COMP_CODE   = A.COMP_CODE 
					   AND SAVE_CODE   = A.SAVE_CODE)		AS SAVE_NAME
		         , A.BIZ_GUBUN	
		         , (SELECT AC_NAME
					  FROM ABA210T WITH (NOLOCK)                       
					 WHERE COMP_CODE    = A.COMP_CODE
					   AND AC_CD        = 'E3'			
					   AND AC_DATA		= A.BIZ_GUBUN)		AS BIZ_GUBUN_NAME
		         , A.PJT_CODE
		         , (SELECT PJT_NAME
					  FROM BCM600T WITH (NOLOCK)
					 WHERE COMP_CODE = A.COMP_CODE
					   AND PJT_CODE  = A.PJT_CODE)		AS PJT_NAME
		         , A.UPDATE_DB_USER AS UPDATE_DB_USER 
		         , A.UPDATE_DB_TIME AS UPDATE_DB_TIME 
		         , A.COMP_CODE 
		      FROM AGA100T A WITH (NOLOCK)
		     WHERE A.COMP_CODE = #{S_COMP_CODE}    
		  	   AND A.SALE_DIVI = #{SALE_DIVI}
            ORDER BY A.SALE_DIVI,A.BUSI_TYPE,A.SLIP_DIVI,A.ACCNT      
    </select>
    
	
	<insert id="aba060ukrsService.insertDetail2" parameterType="Map">    /* 입력 */
		--UAga01Krv.Caga100UKR Setaga100[fnaga100q] Query3 N/U
		INSERT INTO AGA100T
		     ( SALE_DIVI
		     , BUSI_TYPE
		     , SLIP_DIVI
		     , ACCNT
	         , A.DEPT_CODE 
	         , A.ITEM_CODE	
	         , A.PERSON_NUMB
	         , A.BANK_CODE	
	         , A.SAVE_CODE	
	         , A.BIZ_GUBUN	
	         , A.PJT_CODE
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     ) 
		VALUES
		     ( #{SALE_DIVI}
		     , #{BUSI_TYPE}
		     , #{SLIP_DIVI}
		     , #{ACCNT}
	         , #{DEPT_CODE}
	         , #{ITEM_CODE}
	         , #{PERSON_NUMB}
	         , #{BANK_CODE}
	         , #{SAVE_CODE}
	         , #{BIZ_GUBUN}
	         , #{PJT_CODE}
		     , #{S_USER_ID}
		     , getDate()
		     , #{S_COMP_CODE}
		     )
	</insert>
	
	<update id="aba060ukrsService.updateDetail2" parameterType="Map">    /* 추가 */
		UPDATE AGA100T
		   SET DEPT_CODE     	= #{DEPT_CODE}
	         , ITEM_CODE	   	= #{ITEM_CODE}	
	         , PERSON_NUMB   	= #{PERSON_NUMB}
	         , BANK_CODE	   	= #{BANK_CODE}
	         , SAVE_CODE	   	= #{SAVE_CODE}	
	         , BIZ_GUBUN	   	= #{BIZ_GUBUN}	
	         , PJT_CODE      	= #{PJT_CODE}
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND SALE_DIVI		= #{SALE_DIVI}
		   AND BUSI_TYPE		= #{BUSI_TYPE}
		   AND SLIP_DIVI		= #{SLIP_DIVI}
		   AND ACCNT			= #{ACCNT}
	</update>
	
	<delete id="aba060ukrsService.deleteDetail2" parameterType="Map">	 /* 삭제 */
		--UAga01Krv.Caga100UKR Setaga100[fnaga100q] Query2 D
		DELETE FROM AGA100T 
		 WHERE SALE_DIVI = #{SALE_DIVI}
		   AND BUSI_TYPE = #{BUSI_TYPE}
		   AND SLIP_DIVI = #{SLIP_DIVI}
		   AND ACCNT     = #{ACCNT}
		   AND COMP_CODE = #{S_COMP_CODE}
	</delete>
	
	
	
	
	<select id="aba060ukrsService.selectList3" parameterType="Map" resultType="rMap">
--정규
		<if test="ALL_COPY == &quot;C&quot;">       
	        <if test="DIVI == &quot;1&quot;"> 
	           --UAga01Krv.Caga110UKR Setaga110[fnaga110q] Query01
	           --전체복사 급여계정
	            SELECT #{DIVI} AS DIVI
	                 , A.PAY_GUBUN
	                 , A.DIVI AS ALLOW_TAG_A043
	                 , A.SUB_CODE AS ALLOW_CODE 
	                 , A.CODE_NAME AS ALLOW_NAME
	                 , B.SALE_DIVI 
	                 , '' AS EMPLOY_DIVI
	                 , CAST('' AS NVARCHAR(10)) UPDATE_DB_USER
	                 , CAST(NULL AS SMALLDATETIME) UPDATE_DB_TIME 
	                 , #{S_COMP_CODE} AS COMP_CODE 
	              FROM (SELECT '2' AS DIVI
	                         , '1' AS PAY_GUBUN
	                         , SUB_CODE
	                         , CODE_NAME 
	                      FROM BSA100T   WITH (NOLOCK)
	                     WHERE COMP_CODE = #{S_COMP_CODE}
	                       AND MAIN_CODE = N'H034' 
	                       AND SUB_CODE != N'$'
	            
	                    UNION ALL
	            
	                    SELECT '1' AS DIVI
	                         , '1' AS PAY_GUBUN
	                         , WAGES_CODE
	                         , WAGES_NAME 
	                      FROM HBS300T   WITH (NOLOCK)
	                     WHERE COMP_CODE = #{S_COMP_CODE}
	                       AND CODE_TYPE = N'1' 
	                   ) A
	                 , (SELECT SUB_CODE AS SALE_DIVI 
	                      FROM BSA100T   WITH (NOLOCK)
	                     WHERE COMP_CODE = #{S_COMP_CODE}
	                       AND MAIN_CODE = N'B027' 
	                       AND SUB_CODE != N'$' 
	                       AND USE_YN    = N'Y'
	                   ) B
	             ORDER BY PAY_GUBUN, ALLOW_TAG_A043,  A.SUB_CODE ASC 
	        </if>
	        
	        <if test="DIVI == &quot;2&quot;">    
	            --UAga01Krv.Caga110UKR Setaga110[fnaga110q] Query02
	            SELECT DIVI
	                 , PAY_GUBUN
	                 , ALLOW_TAG_A066
	                 , ALLOW_CODE
	                 , ALLOW_NAME
	                 , SALE_DIVI
	                 , '' AS EMPLOY_DIVI
	                 , CAST('' AS NVARCHAR(10)) UPDATE_DB_USER
	                 , CAST(NULL AS SMALLDATETIME) UPDATE_DB_TIME 
	                 , #{S_COMP_CODE} AS COMP_CODE 
	              FROM (
	                    SELECT '2' AS DIVI
	                         , '1' AS PAY_GUBUN
	                         , '1' AS ALLOW_TAG_A066
	                         , '*' ALLOW_CODE
	                         , '' ALLOW_NAME
	            
	                     UNION ALL
	            
	                    SELECT '2' AS DIVI
	                         , '1' AS PAY_GUBUN
	                         , '2' AS ALLOW_TAG_A066
	                         , SUB_CODE AS ALLOW_CODE
	                         , CODE_NAME AS ALLOW_NAME
	                      FROM BSA100T  WITH (NOLOCK)
	                     WHERE COMP_CODE = #{S_COMP_CODE}
	                       AND MAIN_CODE = N'H034'
	                       AND SUB_CODE != N'$'
	                   ) A 
	                 , (SELECT SUB_CODE AS SALE_DIVI 
	                      FROM BSA100T   WITH (NOLOCK)
	                     WHERE COMP_CODE = #{S_COMP_CODE}
	                       AND MAIN_CODE = N'B027' 
	                       AND SUB_CODE != N'$' 
	                       AND USE_YN    = N'Y'
	                   ) B
	        </if>
	        
		</if>
		<if test="ALL_COPY != &quot;C&quot;">
			<if test="DIVI == &quot;1&quot;">
		     --UAga01Krv.Caga110UKR Setaga110[fnaga110q] Query03
		     --전체복사가 아닐때
		        SELECT A.DIVI
		             , A.PAY_GUBUN
		             , A.ALLOW_TAG AS ALLOW_TAG_A043
		             , A.ALLOW_CODE
		             , (SELECT B.CODE_NAME 
		                  FROM (SELECT '2' AS DIVI
		                             , SUB_CODE
		                             , CODE_NAME 
		                          FROM BSA100T   WITH (NOLOCK)
		                         WHERE COMP_CODE = #{S_COMP_CODE}
		                           AND MAIN_CODE = N'H034' 
		                           AND SUB_CODE != N'$'
		        
		                         UNION ALL 
		        
		                        SELECT '1' AS DIVI
		                             , WAGES_CODE
		                             , WAGES_NAME 
		                          FROM HBS300T   WITH (NOLOCK)
		                         WHERE COMP_CODE = #{S_COMP_CODE}
		                           AND CODE_TYPE = N'1'
		                       ) B 
		                 WHERE B.SUB_CODE = A.ALLOW_CODE
		                   AND B.DIVI     = A.ALLOW_TAG) AS ALLOW_NAME
		             , A.SALE_DIVI
		             , A.EMPLOY_DIVI
		             , A.ACCNT
		             , (SELECT B.ACCNT_NAME 
		                  FROM ABA400T B   WITH (NOLOCK)
		                 WHERE COMP_CODE = A.COMP_CODE
		                   AND B.ACCNT   = A.ACCNT ) AS ACCNT_NAME
		             , UPDATE_DB_USER
		             , UPDATE_DB_TIME
		             , COMP_CODE
		          FROM AGA110T A WITH (NOLOCK)
		         WHERE COMP_CODE = #{S_COMP_CODE}
		           AND A.DIVI    = #{DIVI}
		
		        <if test="@foren.Ognl@isNotEmpty(SALE_DIVI)">
		           AND A.SALE_DIVI = #{SALE_DIVI}
		        </if>
		         ORDER BY A.DIVI, A.PAY_GUBUN, A.ALLOW_TAG, A.ALLOW_CODE, A.SALE_DIVI
			</if>
			<if test="DIVI == &quot;2&quot;">
		     --UAga01Krv.Caga110UKR Setaga110[fnaga110q] Query03
		     --전체복사가 아닐때
		        SELECT A.DIVI
		             , A.PAY_GUBUN
		             , A.ALLOW_TAG AS ALLOW_TAG_A066
		             , A.ALLOW_CODE
		             , (SELECT B.CODE_NAME 
		                  FROM (SELECT '2' AS DIVI
		                             , SUB_CODE
		                             , CODE_NAME 
		                          FROM BSA100T   WITH (NOLOCK)
		                         WHERE COMP_CODE = #{S_COMP_CODE}
		                           AND MAIN_CODE = N'H034' 
		                           AND SUB_CODE != N'$'
		        
		                         UNION ALL 
		        
		                        SELECT '1' AS DIVI
		                             , WAGES_CODE
		                             , WAGES_NAME 
		                          FROM HBS300T   WITH (NOLOCK)
		                         WHERE COMP_CODE = #{S_COMP_CODE}
		                           AND CODE_TYPE = N'1'
		                       ) B 
		                 WHERE B.SUB_CODE = A.ALLOW_CODE
		                   AND B.DIVI     = A.ALLOW_TAG) AS ALLOW_NAME
		             , A.SALE_DIVI
		             , A.EMPLOY_DIVI
		             , A.ACCNT
		             , (SELECT B.ACCNT_NAME 
		                  FROM ABA400T B   WITH (NOLOCK)
		                 WHERE COMP_CODE = A.COMP_CODE
		                   AND B.ACCNT   = A.ACCNT ) AS ACCNT_NAME
		             , UPDATE_DB_USER
		             , UPDATE_DB_TIME
		             , COMP_CODE
		          FROM AGA110T A WITH (NOLOCK)
		         WHERE COMP_CODE = #{S_COMP_CODE}
		           AND A.DIVI    = #{DIVI}
		
		        <if test="@foren.Ognl@isNotEmpty(SALE_DIVI)">
		           AND A.SALE_DIVI = #{SALE_DIVI}
		        </if>
		         ORDER BY A.DIVI, A.PAY_GUBUN, A.ALLOW_TAG, A.ALLOW_CODE, A.SALE_DIVI
			</if> 
		</if>
		
		
    </select>
    
    
	<select id="aba060ukrsService.selectList3_JS" parameterType="Map" resultType="rMap">
--조인스용
        <if test="ALL_COPY == &quot;C&quot;">       
            <if test="DIVI == &quot;00001&quot;"> 
               --UAga01Krv.Caga110UKR Setaga110[fnaga110q] Query01    
               --전체복사 급여계정
                SELECT #{DIVI} AS DIVI
                     , A.PAY_GUBUN
                     , A.DIVI AS ALLOW_TAG_A043
                     , A.SUB_CODE AS ALLOW_CODE 
                     , A.CODE_NAME AS ALLOW_NAME
                     , B.SALE_DIVI 
                     , CAST('' AS NVARCHAR(10)) UPDATE_DB_USER
                     , CAST(NULL AS SMALLDATETIME) UPDATE_DB_TIME 
                     , #{S_COMP_CODE} AS COMP_CODE 
                  FROM (
                      SELECT 
                              '2' AS DIVI
                            , '1' AS PAY_GUBUN
                            , WAGES_CODE    AS SUB_CODE
                            , WAGES_NAME    AS CODE_NAME
                        FROM S_HBS300T_JS   WITH (NOLOCK)
                        WHERE COMP_CODE = #{S_COMP_CODE}
                          AND CODE_TYPE = N'2'
                        
                        UNION ALL
                        
                        SELECT
                              '1' AS DIVI
                            , '1' AS PAY_GUBUN
                            , WAGES_CODE
                            , WAGES_NAME 
                        FROM S_HBS300T_JS   WITH (NOLOCK)
                        WHERE COMP_CODE = #{S_COMP_CODE}
                          AND CODE_TYPE = N'1'
                       ) A
                     , (SELECT SUB_CODE AS SALE_DIVI 
                          FROM BSA100T   WITH (NOLOCK)
                         WHERE COMP_CODE = #{S_COMP_CODE}
                           AND MAIN_CODE = N'B027' 
                           AND SUB_CODE != N'$' 
                           AND USE_YN    = N'Y'
                       ) B
                 ORDER BY PAY_GUBUN, ALLOW_TAG_A043,  A.SUB_CODE ASC 
            </if>
            
            <if test="DIVI == &quot;00002&quot;">    
                --UAga01Krv.Caga110UKR Setaga110[fnaga110q] Query02
                SELECT DIVI
                     , PAY_GUBUN
                     , ALLOW_TAG_A066
                     , ALLOW_CODE
                     , ALLOW_NAME
                     , SALE_DIVI
                     , CAST('' AS NVARCHAR(10)) UPDATE_DB_USER
                     , CAST(NULL AS SMALLDATETIME) UPDATE_DB_TIME 
                     , #{S_COMP_CODE} AS COMP_CODE 
                  FROM (
                        SELECT '2' AS DIVI
                             , '1' AS PAY_GUBUN
                             , '1' AS ALLOW_TAG_A066
                             , '*' ALLOW_CODE
                             , '' ALLOW_NAME
                
                         UNION ALL
                
                        SELECT '2' AS DIVI
                             , '1' AS PAY_GUBUN
                             , '2' AS ALLOW_TAG_A066
                             , WAGES_CODE   AS ALLOW_CODE
                             , WAGES_NAME   AS ALLOW_NAME
                        FROM S_HBS300T_JS   WITH (NOLOCK)
                        WHERE COMP_CODE = #{S_COMP_CODE}
                       ) A 
                     , (SELECT SUB_CODE AS SALE_DIVI 
                          FROM BSA100T   WITH (NOLOCK)
                         WHERE COMP_CODE = #{S_COMP_CODE}
                           AND MAIN_CODE = N'B027' 
                           AND SUB_CODE != N'$' 
                           AND USE_YN    = N'Y'
                       ) B
            </if>
            
        </if>
        <if test="ALL_COPY != &quot;C&quot;">
            <if test="DIVI == &quot;00001&quot;">
             --UAga01Krv.Caga110UKR Setaga110[fnaga110q] Query03
             --전체복사가 아닐때
                SELECT A.DIVI
                     , A.PAY_GUBUN
                     , A.ALLOW_TAG AS ALLOW_TAG_A043
                     , A.ALLOW_CODE
                     , (SELECT B.CODE_NAME 
                          FROM (
                              SELECT 
                                     '2' AS DIVI
                                    , WAGES_CODE    AS SUB_CODE
                                    , WAGES_NAME    AS CODE_NAME
                                FROM S_HBS300T_JS   WITH (NOLOCK)
                                WHERE COMP_CODE = #{S_COMP_CODE}
                                  AND CODE_TYPE = N'2'
                                
                                UNION ALL
                                
                                SELECT
                                     '1' AS DIVI
                                    , WAGES_CODE
                                    , WAGES_NAME 
                                FROM S_HBS300T_JS   WITH (NOLOCK)
                                WHERE COMP_CODE = #{S_COMP_CODE}
                                  AND CODE_TYPE = N'1'
                                   
                               ) B 
                         WHERE B.SUB_CODE = A.ALLOW_CODE
                           AND B.DIVI     = A.ALLOW_TAG) AS ALLOW_NAME
                     , A.SALE_DIVI
                     , A.ACCNT
                     , (SELECT B.ACCNT_NAME 
                          FROM ABA400T B   WITH (NOLOCK)
                         WHERE COMP_CODE = A.COMP_CODE
                           AND B.ACCNT   = A.ACCNT ) AS ACCNT_NAME
                     , UPDATE_DB_USER
                     , UPDATE_DB_TIME
                     , COMP_CODE
                  FROM AGA110T A WITH (NOLOCK)
                 WHERE COMP_CODE = #{S_COMP_CODE}
                   AND A.DIVI    = #{DIVI}
        
                <if test="@foren.Ognl@isNotEmpty(SALE_DIVI)">
                   AND A.SALE_DIVI = #{SALE_DIVI}
                </if>
                 ORDER BY A.DIVI, A.PAY_GUBUN, A.ALLOW_TAG, A.ALLOW_CODE, A.SALE_DIVI
            </if>
            <if test="DIVI == &quot;00002&quot;">
             --UAga01Krv.Caga110UKR Setaga110[fnaga110q] Query03
             --전체복사가 아닐때
                SELECT A.DIVI
                     , A.PAY_GUBUN
                     , A.ALLOW_TAG AS ALLOW_TAG_A066
                     , A.ALLOW_CODE
                     , (SELECT B.CODE_NAME 
                          FROM (
                               SELECT 
                                      '2' AS DIVI
                                    , WAGES_CODE    AS SUB_CODE
                                    , WAGES_NAME    AS CODE_NAME
                                FROM S_HBS300T_JS   WITH (NOLOCK)
                                WHERE COMP_CODE = #{S_COMP_CODE}
                                  AND CODE_TYPE = N'2'
                                
                                UNION ALL
                                
                                SELECT
                                      '1' AS DIVI
                                    , WAGES_CODE
                                    , WAGES_NAME 
                                FROM S_HBS300T_JS   WITH (NOLOCK)
                                WHERE COMP_CODE = #{S_COMP_CODE}
                                  AND CODE_TYPE = N'1'
                               ) B 
                         WHERE B.SUB_CODE = A.ALLOW_CODE
                           AND B.DIVI     = A.ALLOW_TAG) AS ALLOW_NAME
                     , A.SALE_DIVI
                     , A.ACCNT
                     , (SELECT B.ACCNT_NAME 
                          FROM ABA400T B   WITH (NOLOCK)
                         WHERE COMP_CODE = A.COMP_CODE
                           AND B.ACCNT   = A.ACCNT ) AS ACCNT_NAME
                     , UPDATE_DB_USER
                     , UPDATE_DB_TIME
                     , COMP_CODE
                  FROM AGA110T A WITH (NOLOCK)
                 WHERE COMP_CODE = #{S_COMP_CODE}
                   AND A.DIVI    = #{DIVI}
        
                <if test="@foren.Ognl@isNotEmpty(SALE_DIVI)">
                   AND A.SALE_DIVI = #{SALE_DIVI}
                </if>
                 ORDER BY A.DIVI, A.PAY_GUBUN, A.ALLOW_TAG, A.ALLOW_CODE, A.SALE_DIVI
            </if> 
        </if>
        
        
    </select>
	
	
	
	<insert id="aba060ukrsService.insertDetail3" parameterType="Map">    /* 입력 */
		--UAga01Krv.Caga110UKR Setaga110[fnaga110set] Query7 N/U
		INSERT INTO AGA110T
		     ( DIVI
		     , PAY_GUBUN
		     , ALLOW_TAG
		     , ALLOW_CODE
		     , SALE_DIVI
		     , EMPLOY_DIVI
		     , ACCNT
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     ) 
		VALUES
		     ( #{DIVI}
		     , #{PAY_GUBUN}
		     <if test="DIVI == &quot;1&quot;">
		     , #{ALLOW_TAG_A043}
		     </if>
		     <if test="DIVI == &quot;2&quot;">
		     ,	#{ALLOW_TAG_A066}
		     </if>
		     , #{ALLOW_CODE}
		     , #{SALE_DIVI}
		     , #{EMPLOY_DIVI}
		     , #{ACCNT}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE}
		     )

	</insert>
	
	<update id="aba060ukrsService.updateDetail3" parameterType="Map">    /* 추가 */
		--UAga01Krv.Caga110UKR Setaga110[fnaga110set] Query7 N/U
		UPDATE AGA110T
		   SET ACCNT          = #{ACCNT}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     
		 WHERE DIVI           = #{DIVI}
		   AND PAY_GUBUN      = #{PAY_GUBUN}
		   <if test="DIVI == &quot;1&quot;">
	       AND ALLOW_TAG     = #{ALLOW_TAG_A043}
	       </if>
	       <if test="DIVI == &quot;2&quot;">
	       AND ALLOW_TAG     = #{ALLOW_TAG_A066}
	       </if>
		   AND ALLOW_CODE     = #{ALLOW_CODE}
		   AND SALE_DIVI      = #{SALE_DIVI}
		   AND COMP_CODE      = #{S_COMP_CODE}
  		   AND EMPLOY_DIVI    = #{EMPLOY_DIVI} 
	</update>
	
	<delete id="aba060ukrsService.deleteDetail3" parameterType="Map">	 /* 삭제 */
		--UAga01Krv.Caga110UKR Setaga110[fnaga110set] Query6 D
		DELETE FROM AGA110T 
		 WHERE DIVI       = #{DIVI}
		   AND PAY_GUBUN  = #{PAY_GUBUN}
		   <if test="DIVI == &quot;1&quot;">
	       AND ALLOW_TAG     = #{ALLOW_TAG_A043}
	       </if>
	       <if test="DIVI == &quot;2&quot;">
	       AND ALLOW_TAG     = #{ALLOW_TAG_A066}
	       </if>
		   AND ALLOW_CODE = #{ALLOW_CODE}
		   AND SALE_DIVI  = #{SALE_DIVI}
		   AND COMP_CODE  = #{S_COMP_CODE}
  
	</delete>
	
	<select id="aba060ukrsService.selectList4" parameterType="Map" resultType="rMap">	<!--기타소득-->
		  --UAga01Krv.Caga230UKR Setaga230[fnaga230QStd] Query01
		    DECLARE @COMP_CODE  NVARCHAR(8)
		          , @INCOM_TYPE NVARCHAR(2)
		    
		    SET @COMP_CODE  = #{S_COMP_CODE}
		    
		    SELECT 
		           A.COMP_CODE,
		           A.INCOM_TYPE,
		           A.ETC_INCOM_TYPE,
		           A.DR_CR,
		           A.PAY_TYPE,
		           A.ACCNT,
		           B.ACCNT_NAME,
		           A.CUSTOM_CODE,
		           CASE M1.REF_ITEM
						WHEN '0' THEN C.CUSTOM_NAME
						WHEN '1' THEN C.CUSTOM_NAME1
						WHEN '2' THEN C.CUSTOM_NAME2
						ELSE C.CUSTOM_NAME
					END								AS CUSTOM_NAME,
		           A.UPDATE_DB_USER,
		           A.UPDATE_DB_TIME 
		    FROM            AGA230T A  WITH (NOLOCK)
		         LEFT  JOIN ABA400T B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                             AND B.ACCNT     = A.ACCNT
		         LEFT OUTER JOIN BCM100T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE AND C.CUSTOM_CODE = A.CUSTOM_CODE
				 LEFT OUTER JOIN BSA300T M1 WITH (NOLOCK) ON M1.COMP_CODE = C.COMP_CODE AND M1.USER_ID = #{S_USER_ID}
		     WHERE A.COMP_CODE = @COMP_CODE
		      <if test="@foren.Ognl@isNotEmpty(INCOM_TYPE)">
		       AND A.INCOM_TYPE = #{INCOM_TYPE}
		      </if>
    </select>
	
	<insert id="aba060ukrsService.insertDetail4" parameterType="Map">    /* 입력 */
		INSERT INTO AGA230T
             (     
                   COMP_CODE            ,INCOM_TYPE          ,ETC_INCOM_TYPE
                  ,DR_CR                ,PAY_TYPE            ,ACCNT
                  ,CUSTOM_CODE
                  ,UPDATE_DB_USER       ,UPDATE_DB_TIME
             ) 
             VALUES
             (
                   #{S_COMP_CODE}		,#{INCOM_TYPE}        ,#{ETC_INCOM_TYPE}
                  ,#{DR_CR}				,#{PAY_TYPE}          ,#{ACCNT}
                  ,#{CUSTOM_CODE}
                  ,#{S_USER_ID}			,GETDATE()      
             )
	</insert>
	
	<update id="aba060ukrsService.updateDetail4" parameterType="Map">    <!--2021.07.27 추가 --> /* 수정 */
		UPDATE AGA230T
		SET   CUSTOM_CODE = #{CUSTOM_CODE}
        WHERE COMP_CODE      = #{S_COMP_CODE}
          AND INCOM_TYPE     = #{INCOM_TYPE}
          AND ETC_INCOM_TYPE = #{ETC_INCOM_TYPE}
          AND DR_CR          = #{DR_CR}
          AND PAY_TYPE       = #{PAY_TYPE}
          AND ACCNT          = #{ACCNT}
	</update>
	
	<delete id="aba060ukrsService.deleteDetail4" parameterType="Map">	 /* 삭제 */
			 DELETE  AGA230T
             WHERE COMP_CODE      = #{S_COMP_CODE}
               AND INCOM_TYPE     = #{INCOM_TYPE}
               AND ETC_INCOM_TYPE = #{ETC_INCOM_TYPE}
               AND DR_CR          = #{DR_CR}
               AND PAY_TYPE       = #{PAY_TYPE}
               AND ACCNT          = #{ACCNT}
	</delete>




	
	<select id="aba060ukrsService.selectList5" parameterType="Map" resultType="rMap">
		--UAga01Krv.Caga120UKR Setaga120[fnaga120q] Query01
		<if test="EXPORT_YN == &quot;1&quot;">
		
	    SELECT A.EXPORT_YN 
	         , A.SALE_TYPE  AS SALE_TYPE_S024
	         , A.DETAIL_TYPE 
	         , A.DR_CR 
	         , A.ITEM_ACCNT 
	         , A.ACCNT 
	         , (SELECT B.ACCNT_NAME 
	              FROM ABA400T B  WITH (NOLOCK)
	             WHERE B.COMP_CODE = A.COMP_CODE
	               AND B.ACCNT     = A.ACCNT ) AS ACCNT_NAME 
	         , UPDATE_DB_USER
	         , UPDATE_DB_TIME 
	         , COMP_CODE 
	      FROM AGA120T A   WITH (NOLOCK)
	     WHERE COMP_CODE = #{S_COMP_CODE} 
	    	<if test="@foren.Ognl@isNotEmpty(EXPORT_YN)">
		       AND A.EXPORT_YN = #{EXPORT_YN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SALE_TYPE)">
		       AND A.SALE_TYPE = #{SALE_TYPE}
		    </if>  
	     Order by A.EXPORT_YN, A.SALE_TYPE, A.DETAIL_TYPE, A.DR_CR, A.ITEM_ACCNT, A.ACCNT
	     
		</if>
		<if test="EXPORT_YN == &quot;2&quot;">
			SELECT A.EXPORT_YN 
	         , A.SALE_TYPE  AS SALE_TYPE_A082
	         , A.DETAIL_TYPE 
	         , A.DR_CR 
	         , A.ITEM_ACCNT 
	         , A.ACCNT 
	         , (SELECT B.ACCNT_NAME 
	              FROM ABA400T B  WITH (NOLOCK)
	             WHERE B.COMP_CODE = A.COMP_CODE
	               AND B.ACCNT     = A.ACCNT ) AS ACCNT_NAME 
	         , UPDATE_DB_USER
	         , UPDATE_DB_TIME 
	         , COMP_CODE 
	      FROM AGA120T A   WITH (NOLOCK)
	     WHERE COMP_CODE = #{S_COMP_CODE} 
	    	<if test="@foren.Ognl@isNotEmpty(EXPORT_YN)">
		       AND A.EXPORT_YN = #{EXPORT_YN}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SALE_TYPE)">
		       AND A.SALE_TYPE = #{SALE_TYPE}
		    </if>  
	     Order by A.EXPORT_YN, A.SALE_TYPE, A.DETAIL_TYPE, A.DR_CR, A.ITEM_ACCNT, A.ACCNT
		</if>  
	     
    </select>
	
	<insert id="aba060ukrsService.insertDetail5" parameterType="Map">    /* 입력 */
		--UAga01Krv.Caga120UKR Setaga120[fnaga120set] Query3 N/U
		INSERT INTO AGA120T
		     ( EXPORT_YN
		     , SALE_TYPE
		     , DETAIL_TYPE
		     , DR_CR
		     , ITEM_ACCNT
		     , ACCNT
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     ) 
		VALUES
		     ( #{EXPORT_YN}
		     <if test="EXPORT_YN == &quot;1&quot;">
		     , #{SALE_TYPE_S024}
		     </if>
		     <if test="EXPORT_YN == &quot;2&quot;">
		     ,	#{SALE_TYPE_A082}
		     </if>
		     , #{DETAIL_TYPE}
		     , #{DR_CR}
		     , #{ITEM_ACCNT}
		     , #{ACCNT}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE} 
		     )
				
		
	</insert>
	
	<update id="aba060ukrsService.updateDetail5" parameterType="Map">    /* 추가 */
		--UAga01Krv.Caga120UKR Setaga120[fnaga120set] Query3 N/U
			UPDATE AGA120T
			   SET ACCNT          = #{ACCNT}
			     , UPDATE_DB_USER = #{S_USER_ID}
			     , UPDATE_DB_TIME = GETDATE()
			     
			 WHERE EXPORT_YN      = #{EXPORT_YN}
			  <if test="EXPORT_YN == &quot;1&quot;">
		      AND SALE_TYPE       = #{SALE_TYPE_S024}
		      </if>
		      <if test="EXPORT_YN == &quot;2&quot;">
		      AND SALE_TYPE     = #{SALE_TYPE_A082}
		      </if>	
			   AND DETAIL_TYPE    = #{DETAIL_TYPE}
			   AND DR_CR          = #{DR_CR}
			   AND ITEM_ACCNT     = #{ITEM_ACCNT}
			   AND COMP_CODE      = #{S_COMP_CODE}
  
	</update>
	
	<delete id="aba060ukrsService.deleteDetail5" parameterType="Map">	 /* 삭제 */
		--UAga01Krv.Caga120UKR Setaga120[fnaga120set] Query2 D
		DELETE FROM AGA120T 
		 WHERE EXPORT_YN   = #{EXPORT_YN}
		  <if test="EXPORT_YN == &quot;1&quot;">
	      AND SALE_TYPE       = #{SALE_TYPE_S024}
	      </if>
	      <if test="EXPORT_YN == &quot;2&quot;">
	      AND SALE_TYPE     = #{SALE_TYPE_A082}
	      </if>
		   AND DETAIL_TYPE = #{DETAIL_TYPE}
		   AND DR_CR       = #{DR_CR}
		   AND ITEM_ACCNT  = #{ITEM_ACCNT}
		   AND COMP_CODE   = #{S_COMP_CODE}
	</delete>
	
	
	
	
	
	<select id="aba060ukrsService.selectList6" parameterType="Map" resultType="rMap">
		 --UAga01Krv.Caga130UKR Setaga130[fnaga130q] Query01
	    SELECT A.EXPORT_YN 
	         , A.COLLECT_TYPE 
	         , A.DR_CR 
	         , A.ACCNT 
	         , (SELECT B.ACCNT_NAME 
	              FROM ABA400T B  WITH (NOLOCK)
	             WHERE B.COMP_CODE = A.COMP_CODE 
	               AND B.ACCNT     = A.ACCNT ) AS ACCNT_NAME 
	         , UPDATE_DB_USER
	         , UPDATE_DB_TIME 
	         , COMP_CODE 
	      FROM AGA130T A   WITH (NOLOCK)
	     WHERE COMP_CODE = #{S_COMP_CODE}
	     <if test="@foren.Ognl@isNotEmpty(EXPORT_YN)">
	       AND A.EXPORT_YN = #{EXPORT_YN}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(SALE_DIVI)">
	       AND A.COLLECT_TYPE = #{SALE_DIVI}
	     </if>
	     ORDER BY A.EXPORT_YN, A.COLLECT_TYPE, A.DR_CR, A.ACCNT 
    </select>
	
	<insert id="aba060ukrsService.insertDetail6" parameterType="Map">    /* 입력 */
		--UAga01Krv.Caga130UKR Setaga130[fnaga130set] Query3 N/U
		INSERT INTO AGA130T
		     ( EXPORT_YN
		     , COLLECT_TYPE
		     , DR_CR
		     , ACCNT
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     ) 
		VALUES
		     ( #{EXPORT_YN}
		     , #{COLLECT_TYPE}
		     , #{DR_CR}
		     , #{ACCNT}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE}
		     )
	</insert>
	
	<update id="aba060ukrsService.updateDetail6" parameterType="Map">    /* 추가 */
		--UAga01Krv.Caga130UKR Setaga130[fnaga130set] Query3 N/U
		UPDATE AGA130T
		   SET ACCNT          = #{ACCNT}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     
		 WHERE EXPORT_YN      = #{EXPORT_YN}
		   AND COLLECT_TYPE   = #{COLLECT_TYPE}
		   AND DR_CR          = #{DR_CR}
		   AND COMP_CODE      = #{S_COMP_CODE}
  
	</update>
	
	<delete id="aba060ukrsService.deleteDetail6" parameterType="Map">	 /* 삭제 */
		--UAga01Krv.Caga130UKR Setaga130[fnaga130set] Query2 D
		DELETE FROM AGA130T 
		 WHERE EXPORT_YN    = #{EXPORT_YN}
		   AND COLLECT_TYPE = #{COLLECT_TYPE}
		   AND DR_CR        = #{DR_CR}
		   AND COMP_CODE    = #{S_COMP_CODE}
  
	</delete>
	
	
	
	
	
	
	<select id="aba060ukrsService.selectList7" parameterType="Map" resultType="rMap">
		--UAga01Krv.Caga140UKR Setaga140[fnaga140q] Query01
	    SELECT A.ORD_TYPE 
	         , A.PURCHASE_TYPE 
	         , A.DR_CR 
	         , A.ITEM_ACCNT 
	         , A.ACCNT 
	         , (SELECT B.ACCNT_NAME 
	              FROM ABA400T B  WITH (NOLOCK)
	             WHERE B.COMP_CODE = A.COMP_CODE 
	               AND B.ACCNT     = A.ACCNT ) AS ACCNT_NAME 
	         , UPDATE_DB_USER
	         , UPDATE_DB_TIME 
	         , COMP_CODE 
	      FROM AGA140T A  WITH (NOLOCK)
	     WHERE COMP_CODE = #{S_COMP_CODE} 
	     <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
	       AND A.ORD_TYPE = #{ORDER_TYPE}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(PURCHASE_TYPE)">
	       AND A.PURCHASE_TYPE = #{PURCHASE_TYPE}
	     </if>
	    
	     ORDER BY A.ORD_TYPE, A.PURCHASE_TYPE, A.DR_CR, A.ITEM_ACCNT, A.ACCNT 
    </select>
	
	<insert id="aba060ukrsService.insertDetail7" parameterType="Map">    /* 입력 */
		--UAga01Krv.Caga140UKR Setaga140[fnaga140set] Query3 N/U
		INSERT INTO AGA140T
		     ( ORD_TYPE
		     , PURCHASE_TYPE
		     , DR_CR
		     , ITEM_ACCNT
		     , ACCNT
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     ) 
		VALUES
		     ( #{ORD_TYPE}
		     , #{PURCHASE_TYPE}
		     , #{DR_CR}
		     , #{ITEM_ACCNT}
		     , #{ACCNT}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE}
		     )
	</insert>
	
	<update id="aba060ukrsService.updateDetail7" parameterType="Map">    /* 추가 */
		--UAga01Krv.Caga140UKR Setaga140[fnaga140set] Query3 N/U
		UPDATE AGA140T
		   SET ACCNT          = #{ACCNT}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     
		 WHERE ORD_TYPE       = #{ORD_TYPE}
		   AND PURCHASE_TYPE  = #{PURCHASE_TYPE}
		   AND DR_CR          = #{DR_CR}
		   AND ITEM_ACCNT     = #{ITEM_ACCNT}
		   AND COMP_CODE      = #{S_COMP_CODE}
  
	</update>
	
	<delete id="aba060ukrsService.deleteDetail7" parameterType="Map">	 /* 삭제 */
		DELETE FROM AGA140T 
		 WHERE ORD_TYPE      = #{ORD_TYPE}
		   AND PURCHASE_TYPE = #{PURCHASE_TYPE}
		   AND DR_CR         = #{DR_CR}
		   AND ITEM_ACCNT    = #{ITEM_ACCNT}
		   AND COMP_CODE     = #{S_COMP_CODE}
	</delete>
	
	
	
	
	
	<select id="aba060ukrsService.selectList8" parameterType="Map" resultType="rMap">
		 --UAga01Krv.Caga220UKR Setaga220[fnaga220q] Query01
		<if test="TRADE_DIV == &quot;E&quot;">
	     SELECT A.TRADE_DIV  
	        , A.CHARGE_TYPE   AS CHARGE_TYPE_E
	        , A.CHARGE_CODE
	        , B.CHARGE_NAME
	        , A.PAY_TYPE
	        , A.COST_DIV
	        , A.DR_CR 
	        , A.ACCNT 
	        , (SELECT C.ACCNT_NAME 
	             FROM ABA400T C  WITH (NOLOCK)
	            WHERE C.COMP_CODE = A.COMP_CODE 
	              AND C.ACCNT     = A.ACCNT ) AS ACCNT_NAME 
	        , A.UPDATE_DB_USER
	        , A.UPDATE_DB_TIME 
	        , A.COMP_CODE 
	     FROM            AGA220T A  WITH (NOLOCK)
	          LEFT  JOIN TAA010T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
	                                             AND B.TRADE_DIV   = A.TRADE_DIV
	                                             AND B.CHARGE_TYPE = A.CHARGE_TYPE
	                                             AND B.CHARGE_CODE = A.CHARGE_CODE
	          LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
	                                             AND M1.MAIN_CODE  = 'T070'
	                                             AND M1.SUB_CODE   = A.CHARGE_TYPE
	          LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE  = A.COMP_CODE
	                                             AND M2.MAIN_CODE  = 'T071'
	                                             AND M2.SUB_CODE   = A.CHARGE_TYPE
	    WHERE A.COMP_CODE   = #{S_COMP_CODE}
	    <if test="@foren.Ognl@isNotEmpty(TRADE_DIV)">
	      AND A.TRADE_DIV = #{TRADE_DIV}
	    </if>
	    <if test="@foren.Ognl@isNotEmpty(CHARGE_TYPE)">
	      AND A.CHARGE_TYPE = #{CHARGE_TYPE}
	    </if>
	
	    Order by A.TRADE_DIV, A.CHARGE_TYPE, A.CHARGE_CODE, A.PAY_TYPE, A.COST_DIV, A.DR_CR, A.ACCNT
	     
		</if> 
		 
		 
	   <if test="TRADE_DIV == &quot;I&quot;"> 
		   SELECT A.TRADE_DIV  
		        , A.CHARGE_TYPE AS CHARGE_TYPE_I
		        , A.CHARGE_CODE
		        , B.CHARGE_NAME
		        , A.PAY_TYPE
		        , A.COST_DIV
		        , A.DR_CR 
		        , A.ACCNT 
		        , (SELECT C.ACCNT_NAME 
		             FROM ABA400T C  WITH (NOLOCK)
		            WHERE C.COMP_CODE = A.COMP_CODE 
		              AND C.ACCNT     = A.ACCNT ) AS ACCNT_NAME 
		        , A.UPDATE_DB_USER
		        , A.UPDATE_DB_TIME 
		        , A.COMP_CODE 
		     FROM            AGA220T A  WITH (NOLOCK)
		          LEFT  JOIN TAA010T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                             AND B.TRADE_DIV   = A.TRADE_DIV
		                                             AND B.CHARGE_TYPE = A.CHARGE_TYPE
		                                             AND B.CHARGE_CODE = A.CHARGE_CODE
		          LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE  = A.COMP_CODE
		                                             AND M1.MAIN_CODE  = 'T070'
		                                             AND M1.SUB_CODE   = A.CHARGE_TYPE
		          LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE  = A.COMP_CODE
		                                             AND M2.MAIN_CODE  = 'T071'
		                                             AND M2.SUB_CODE   = A.CHARGE_TYPE
		    WHERE A.COMP_CODE   = #{S_COMP_CODE}
		    <if test="@foren.Ognl@isNotEmpty(TRADE_DIV)">
		      AND A.TRADE_DIV = #{TRADE_DIV}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(CHARGE_TYPE)">
		      AND A.CHARGE_TYPE = #{CHARGE_TYPE}
		    </if>
		
		    Order by A.TRADE_DIV, A.CHARGE_TYPE, A.CHARGE_CODE, A.PAY_TYPE, A.COST_DIV, A.DR_CR, A.ACCNT
	   </if>
    </select>
	
	<insert id="aba060ukrsService.insertDetail8" parameterType="Map">    /* 입력 */
		--UAga01Krv.Caga220UKR Setaga220[fnaga220set] Query3 N/U
		INSERT INTO AGA220T
		     ( TRADE_DIV
		     , CHARGE_TYPE
		     , CHARGE_CODE
		     , PAY_TYPE
		     , COST_DIV
		     , DR_CR
		     , ACCNT
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     ) 
		VALUES
		     ( #{TRADE_DIV}
		     <if test="TRADE_DIV == &quot;E&quot;">
		     , #{CHARGE_TYPE_E}
		     </if>
		     <if test="TRADE_DIV == &quot;I&quot;">
		     , #{CHARGE_TYPE_I}
		     </if>
		     , #{CHARGE_CODE}
		     , #{PAY_TYPE}
		     , #{COST_DIV}
		     , #{DR_CR}
		     , #{ACCNT}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE}
		     )
	</insert>
	
	<update id="aba060ukrsService.updateDetail8" parameterType="Map">    /* 추가 */
		--UAga01Krv.Caga220UKR Setaga220[fnaga220set] Query3 N/U
		UPDATE AGA220T
		   SET ACCNT          = #{ACCNT}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     
		 WHERE TRADE_DIV      = #{TRADE_DIV}
		   <if test="TRADE_DIV == &quot;E&quot;">
	       AND CHARGE_TYPE     = #{CHARGE_TYPE_E}
	       </if>
	       <if test="TRADE_DIV == &quot;I&quot;">
	       AND CHARGE_TYPE     = #{CHARGE_TYPE_I}
	       </if>
		   AND CHARGE_CODE    = #{CHARGE_CODE}
		   AND PAY_TYPE       = #{PAY_TYPE}
		   AND COST_DIV       = #{COST_DIV}
		   AND DR_CR          = #{DR_CR}
		   AND COMP_CODE      = #{S_COMP_CODE}
  
	</update>
	
	<delete id="aba060ukrsService.deleteDetail8" parameterType="Map">	 /* 삭제 */
		--UAga01Krv.Caga220UKR Setaga220[fnaga220set] Query2 D
		DELETE FROM AGA220T 
		 WHERE TRADE_DIV   = #{TRADE_DIV}
		  <if test="TRADE_DIV == &quot;E&quot;">
	      AND CHARGE_TYPE     = #{CHARGE_TYPE_E}
	      </if>
	      <if test="TRADE_DIV == &quot;I&quot;">
	      AND CHARGE_TYPE     = #{CHARGE_TYPE_I}
	      </if>
		   AND CHARGE_CODE = #{CHARGE_CODE}
		   AND PAY_TYPE    = #{PAY_TYPE}
		   AND COST_DIV    = #{COST_DIV}
		   AND DR_CR       = #{DR_CR}
		   AND COMP_CODE   = #{S_COMP_CODE}
  
	</delete>
	
	
	
	
	
	
	<select id="aba060ukrsService.selectList9" parameterType="Map" resultType="rMap">
		SELECT  
			 A.COMP_CODE                          	 --법인코드                     
         ,   A.PAY_TYPE                              --결제유형                     
         ,   A.DR_CR                                 --차대구분                     
         ,   A.ACCNT                                 --계정코드                     
         ,   B.ACCNT_NAME                            --계정명                        
         ,   A.INSERT_DB_USER                        --입력자                       
         ,   A.INSERT_DB_TIME                        --입력일                       
         ,   A.UPDATE_DB_USER                        --수정자                       
         ,   A.UPDATE_DB_TIME                        --수정일                       
     From AGA320T A WITH (NOLOCK)
            LEFT OUTER JOIN ABA400T B WITH (NOLOCK)                                 
             ON A.COMP_CODE     = B.COMP_CODE                                       
            AND A.ACCNT         = B.ACCNT
     WHERE A.COMP_CODE   = #{S_COMP_CODE}
    	<if test="@foren.Ognl@isNotEmpty(PAY_TYPE)">
	      AND A.PAY_TYPE = #{PAY_TYPE}
	    </if>        
     ORDER BY A.PAY_TYPE, A.DR_CR, A.ACCNT
    </select>
	
	<insert id="aba060ukrsService.insertDetail9" parameterType="Map">    /* 입력 */
		--aga320ukr.Caga320ukr[fnaga320Save] QueryNU
		INSERT INTO AGA320T
		     ( COMP_CODE
		     , PAY_TYPE
		     , DR_CR
		     , ACCNT
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     ) 
		VALUES
		     ( #{S_COMP_CODE}
		     , #{PAY_TYPE}
		     , #{DR_CR}
		     , #{ACCNT}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		     )
	</insert>
	
	<update id="aba060ukrsService.updateDetail9" parameterType="Map">    /* 추가 */

	</update>
	
	<delete id="aba060ukrsService.deleteDetail9" parameterType="Map">	 /* 삭제 */
		--aga320ukr.Caga320ukr[fnaga320Save] QueryD
		DELETE FROM AGA320T 
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND PAY_TYPE  = #{PAY_TYPE}
		   AND DR_CR     = #{DR_CR}
	</delete>
	
	
	
	<select id="aba060ukrsService.selectList10" parameterType="Map" resultType="rMap">
		 --UAga01Krv.Caga210UKR Setaga210[fnaga210q] Query1
	    SELECT A.DEPT_DIVI 
	         , A.ACCNT 
	         , (SELECT B.ACCNT_NAME 
	              FROM ABA400T B  WITH (NOLOCK)
	             WHERE B.COMP_CODE = A.COMP_CODE
	               AND B.ACCNT     = A.ACCNT ) AS ACCNT_NAME 
	         , A.DEP_ACCNT 
	         , (SELECT B.ACCNT_NAME 
	              FROM ABA400T B  WITH (NOLOCK)
	             WHERE B.COMP_CODE = A.COMP_CODE
	               AND B.ACCNT     = A.DEP_ACCNT ) AS DEP_ACCNT_NAME 
	         , A.APP_ACCNT 
	         , (SELECT B.ACCNT_NAME 
	              FROM ABA400T B  WITH (NOLOCK)
	             WHERE B.COMP_CODE = A.COMP_CODE
	               AND B.ACCNT     = A.APP_ACCNT ) AS APP_ACCNT_NAME 
	         , UPDATE_DB_USER
	         , UPDATE_DB_TIME 
	         , COMP_CODE 
	      FROM AGA210T A  WITH (NOLOCK)
	     WHERE COMP_CODE = #{S_COMP_CODE}
	     <if test="@foren.Ognl@isNotEmpty(DEPT_DIVI)">
	      AND A.DEPT_DIVI = #{DEPT_DIVI}
	     </if> 
	    
	     ORDER BY A.DEPT_DIVI, A.ACCNT, A.DEP_ACCNT, A.APP_ACCNT 
    </select>
	
	<insert id="aba060ukrsService.insertDetail10" parameterType="Map">    /* 입력 */
		--UAga01Krv.Caga210UKR Setaga210[fnaga210set] Query3 N/U
		INSERT INTO AGA210T
		     ( DEPT_DIVI
		     , ACCNT
		     , DEP_ACCNT
		     , APP_ACCNT
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     ) 
		VALUES
		     ( #{DEPT_DIVI}
		     , #{ACCNT}
		     , #{DEP_ACCNT}
		     , #{APP_ACCNT}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE}
		     )
	</insert>
	
	<update id="aba060ukrsService.updateDetail10" parameterType="Map">    /* 추가 */
		--UAga01Krv.Caga210UKR Setaga210[fnaga210set] Query3 N/U
		UPDATE AGA210T
		   SET DEP_ACCNT      = #{DEP_ACCNT}
		     , APP_ACCNT      = #{APP_ACCNT}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     
		 WHERE DEPT_DIVI      = #{DEPT_DIVI}
		   AND ACCNT          = #{ACCNT}
		   AND COMP_CODE      = #{S_COMP_CODE}
	</update>
	
	<delete id="aba060ukrsService.deleteDetail10" parameterType="Map">	 /* 삭제 */
		--UAga01Krv.Caga210UKR Setaga210[fnaga210set] Query2 D
		DELETE FROM AGA210T 
		 WHERE DEPT_DIVI = #{DEPT_DIVI}
		   AND ACCNT     = #{ACCNT}
		   AND COMP_CODE = #{S_COMP_CODE}
  
	</delete>
	
	
	
	<select id="aba060ukrsService.selectList11" parameterType="Map" resultType="rMap">
		 --aga250ukr.Caga250ukr[fnaga250QStd] Query01
    
        SELECT  A.COMP_CODE                             -- 법인코드
             ,  A.ITEM_ACCNT                            -- 품목계정
             ,  A.DR_CR                                 -- 차대구분
             ,  A.ACCNT                                 -- 계정코드
             ,  B.ACCNT_NAME                            -- 계정명
             ,  A.INSERT_DB_USER                        -- 입력자
             ,  A.INSERT_DB_TIME                        -- 입력일
             ,  A.UPDATE_DB_USER                        -- 수정자
             ,  A.UPDATE_DB_TIME                        -- 수정일
        FROM               AGA250T A WITH (NOLOCK)
                LEFT  JOIN ABA400T B WITH (NOLOCK) ON  B.COMP_CODE = A.COMP_CODE
                                                   AND B.ACCNT     = A.ACCNT
        WHERE   A.COMP_CODE = #{S_COMP_CODE}
        ORDER BY A.ITEM_ACCNT, A.DR_CR, A.ACCNT

    </select>
	
	<insert id="aba060ukrsService.insertDetail11" parameterType="Map">    /* 입력 */
		INSERT INTO AGA250T
	     ( COMP_CODE
	     , ITEM_ACCNT
	     , DR_CR
	     , ACCNT
	     , INSERT_DB_USER
	     , INSERT_DB_TIME
	     , UPDATE_DB_USER
	     , UPDATE_DB_TIME
	     ) 
	VALUES
	     ( #{S_COMP_CODE}
	     , #{ITEM_ACCNT}
	     , #{DR_CR}
	     , #{ACCNT}
	     , #{S_USER_ID}
	     , GETDATE()
	     , #{S_USER_ID}
	     , GETDATE()
	     )
	</insert>
	
	<update id="aba060ukrsService.updateDetail11" parameterType="Map">    /* 추가 */
		UPDATE AGA250T
		   SET ACCNT          = #{ACCNT}
		     , INSERT_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     
		 WHERE COMP_CODE      = #{S_COMP_CODE}
		   AND ITEM_ACCNT     = #{ITEM_ACCNT}
		   AND DR_CR          = #{DR_CR}
  
	</update>
	
	<delete id="aba060ukrsService.deleteDetail11" parameterType="Map">	 /* 삭제 */
		DELETE FROM AGA250T 
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND ITEM_ACCNT = #{ITEM_ACCNT}
		   AND DR_CR      = #{DR_CR}
	</delete>
	
	<select id="aba060ukrsService.fnGetBaseData" parameterType="Map" resultType="rMap">
	--aba100ukr.Caba100ukr[fnAba100QStd] Query01
		SELECT A.BASE_CODE
		     , ISNULL(A.SLIP_NUM1,'1')       AS SLIP_NUM1
		     , ISNULL(A.SLIP_NUM2,'1')       AS SLIP_NUM2
		     , ISNULL(A.PROD_ACCNT,'1')      AS PROD_ACCNT
		     , ISNULL(A.CIRCUL_ACCNT,'0')    AS CIRCUL_ACCNT
		     , ISNULL(A.CONT_ACCNT,'0')      AS CONT_ACCNT
		     , ISNULL(A.SELL_ACCNT,'0')      AS SELL_ACCNT
		     , ISNULL(A.AMT_POINT,'1')       AS AMT_POINT
		     , ISNULL(A.BUDG_YN,'1')         AS BUDG_YN
		     , ISNULL(A.BUDG_BASE,'1')       AS BUDG_BASE
		     , ISNULL(A.REPAY_BASE,'1')      AS REPAY_BASE
		     , ISNULL(A.REPAY_METHOD,'1')    AS REPAY_METHOD
		     , ISNULL(A.REPAY_COMPUTE,'1')   AS REPAY_COMPUTE
		     , ISNULL(A.SALE_BASE,'2')       AS SALE_BASE
		     , ISNULL(A.SALE_METHOD,'1')     AS SALE_METHOD
		     , ISNULL(A.EXCHG_BASE,'2')      AS EXCHG_BASE
		     , ISNULL(A.PEND_YN, '2')        AS PEND_YN
		     , ISNULL(A.DEL_DATE,'')         AS DEL_DATE
		     , ISNULL(A.TAX_BASE,'0')        AS TAX_BASE
		     , ISNULL(A.BILL_DIV_CODE,'')    AS BILL_DIV_CODE
		     , ISNULL(A.UPDATE_DB_USER,'')   AS UPDATE_DB_USER
		     , ISNULL(A.UPDATE_DB_TIME,'')   AS UPDATE_DB_TIME
		     , ISNULL(A.RETURN_YN,'')        AS RETURN_YN
		     , ISNULL(A.SLIP_PRINT,'')       AS SLIP_PRINT
		     , ISNULL(A.PRINT_LINE,'')       AS PRINT_LINE
		     , ISNULL(A.APP_NUM,'')          AS APP_NUM
		     , ISNULL(A.MATRL_YN,'')         AS MATRL_YN
		     , ISNULL(A.ASST_QTY_YN,'1')     AS ASST_QTY_YN
		     , ISNULL(A.IWOL_DIVI_YN,'1')    AS IWOL_DIVI_YN
		     , ISNULL(A.SLIP_MSG, '1')       AS SLIP_MSG
		     , ISNULL(A.ASST_PRICE_YN, '1')  AS ASST_PRICE_YN
		     , ISNULL(A.BUDG_PRO_BASE, '1')  AS BUDG_PRO_BASE
		     , ISNULL(A.ASST_AUTOCD, '2')    AS ASST_AUTOCD
		     
		     , ISNULL(A.PAY_TYPE, '2')       AS PAY_TYPE
		     , ISNULL(A.PJT_CODE_ESS, '2')   AS PJT_CODE_ESS 
		     , ISNULL(A.ITEM_CODE_ESS, '2')  AS ITEM_CODE_ESS
		     , ISNULL(A.PAY_AP_BASE, '2')    AS PAY_AP_BASE
		     , ISNULL(A.GOV_GRANT_CONT, '2') AS GOV_GRANT_CONT
		     , ISNULL(A.BASE_BALANCE_DATE_YN, '2') AS BASE_BALANCE_DATE_YN
		  FROM ABA100T   A WITH (NOLOCK)
		 WHERE A.COMP_CODE = #{S_COMP_CODE}  
	</select>

	<update id="aba060ukrsService.saveBaseData" parameterType="Map">    /* 추가 */
	--aba100ukr.Caba100ukr[fnAba100QStd] Query02
		UPDATE ABA100T
		   SET SLIP_NUM1      = #{SLIP_NUM1}
		     , SLIP_NUM2      = #{SLIP_NUM2}
		     , PROD_ACCNT     = #{PROD_ACCNT}
		     , CIRCUL_ACCNT   = #{CIRCUL_ACCNT}
		     , CONT_ACCNT     = #{CONT_ACCNT}
		     , SELL_ACCNT     = #{SELL_ACCNT}
		     , AMT_POINT      = #{AMT_POINT}
		     , BUDG_YN        = #{BUDG_YN}
		     , BUDG_BASE      = #{BUDG_BASE}
		     , REPAY_BASE     = #{REPAY_BASE}
		     , REPAY_METHOD   = #{REPAY_METHOD}
		     , REPAY_COMPUTE  = #{REPAY_COMPUTE}
		     , SALE_BASE      = #{SALE_BASE}
		     , SALE_METHOD    = #{SALE_METHOD}
		     , EXCHG_BASE     = #{EXCHG_BASE}
		     , PEND_YN        = #{PEND_YN}
		     , DEL_DATE       = #{DEL_DATE}
		     , TAX_BASE       = #{TAX_BASE}
		     , BILL_DIV_CODE  = #{BILL_DIV_CODE}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     , RETURN_YN      = #{RETURN_YN}
		     , SLIP_PRINT     = #{SLIP_PRINT}
		     , PRINT_LINE     = #{PRINT_LINE}
		     , APP_NUM        = #{APP_NUM}
		     , MATRL_YN       = #{MATRL_YN}
		     , ASST_QTY_YN    = #{ASST_QTY_YN}
		     , IWOL_DIVI_YN   = #{IWOL_DIVI_YN}
		     , SLIP_MSG       = #{SLIP_MSG}
		     , ASST_PRICE_YN  = #{ASST_PRICE_YN}
		     , BUDG_PRO_BASE  = #{BUDG_PRO_BASE}
		     , ASST_AUTOCD    = #{ASST_AUTOCD}
		     , PAY_TYPE       = #{PAY_TYPE}
             , PJT_CODE_ESS   = #{PJT_CODE_ESS}
             , ITEM_CODE_ESS  = #{ITEM_CODE_ESS}
             , PAY_AP_BASE    = #{PAY_AP_BASE}
             , GOV_GRANT_CONT = #{GOV_GRANT_CONT}
             , BASE_BALANCE_DATE_YN  = #{BASE_BALANCE_DATE_YN}
		 WHERE BASE_CODE      = #{BASE_CODE}
		   AND COMP_CODE      = #{S_COMP_CODE}
	</update>
	
	<select id="aba060ukrsService.selectList12" parameterType="Map" resultType="rMap">
		SELECT  A.COMP_CODE					
			  , A.ACCNT	
			  , (SELECT ACCNT_NAME 
			  	   FROM ABA400T WITH (NOLOCK)
			  	  WHERE COMP_CODE = #{S_COMP_CODE} 
			  	    AND ACCNT = A.ACCNT
			    )										AS ACCNT_NAME
			  , A.GUBUN									AS GUBUN			
			  , A.EXG_ACCNT	
			  , (SELECT ACCNT_NAME 
			  	   FROM ABA400T WITH (NOLOCK)
			  	  WHERE COMP_CODE = #{S_COMP_CODE} 
			  	    AND ACCNT = A.EXG_ACCNT
			    )										AS EXG_NAME
			  , A.INSERT_DB_USER
			  , A.INSERT_DB_TIME
			  , A.UPDATE_DB_USER
			  , A.UPDATE_DB_TIME
			  , A.TEMPC_01
			  , A.TEMPC_02
			  , A.TEMPC_03
			  , A.TEMPN_01
			  , A.TEMPN_02
			  , A.TEMPN_03
        FROM		AGA260T	AS A WITH (NOLOCK)
        WHERE   A.COMP_CODE = #{S_COMP_CODE}
        ORDER BY ACCNT, GUBUN
	</select>
  
	<insert id="aba060ukrsService.insertDetail12" parameterType="Map"> 
		INSERT INTO AGA260T
	     ( COMP_CODE         /* 법인                  	*/
	     , ACCNT             /* 외화계정코드       	*/
	     , GUBUN             /* 구분(A215)   	*/
	     , EXG_ACCNT         /* 외화환산계정코드 	*/
	     , INSERT_DB_USER
	     , INSERT_DB_TIME
	     , UPDATE_DB_USER
	     , UPDATE_DB_TIME
	     ) 
	VALUES
	     ( #{S_COMP_CODE}
	     , #{ACCNT}
	     , #{GUBUN}
	     , #{EXG_ACCNT}
	     , #{S_USER_ID}
	     , GETDATE()
	     , #{S_USER_ID}
	     , GETDATE()
	     )
	</insert>

	<delete id="aba060ukrsService.deleteDetail12" parameterType="Map">	
		DELETE FROM AGA260T 
		 WHERE COMP_CODE 	= #{S_COMP_CODE}
		   AND ACCNT		= #{ACCNT}
		   AND GUBUN		= #{GUBUN}
	</delete>
	
	<select id="aba060ukrsService.selectList16" parameterType="Map" resultType="rMap">
	    SELECT A.PAY_METHD 
	         , A.DR_CR 
	         , A.ITEM_ACCNT 
	         , A.ACCNT 
	         , (SELECT B.ACCNT_NAME 
	              FROM ABA400T B  WITH (NOLOCK)
	             WHERE B.COMP_CODE = A.COMP_CODE 
	               AND B.ACCNT     = A.ACCNT ) AS ACCNT_NAME 
	         , UPDATE_DB_USER
	         , UPDATE_DB_TIME 
	         , COMP_CODE 
	      FROM AGA245T A  WITH (NOLOCK)
	     WHERE COMP_CODE = #{S_COMP_CODE} 
	     <if test="@foren.Ognl@isNotEmpty(PAY_METHD)">
	       AND A.PAY_METHD = #{PAY_METHD}
	     </if>
	     ORDER BY A.PAY_METHD, A.DR_CR, A.ITEM_ACCNT, A.ACCNT 
    </select>
	
	<insert id="aba060ukrsService.insertDetail16" parameterType="Map">    /* 입력 */
		INSERT INTO AGA245T
		     ( PAY_METHD
		     , DR_CR
		     , ITEM_ACCNT
		     , ACCNT
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     , COMP_CODE
		     ) 
		VALUES
		     ( #{PAY_METHD}
		     , #{DR_CR}
		     , #{ITEM_ACCNT}
		     , #{ACCNT}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_COMP_CODE}
		     )
	</insert>
	
	<update id="aba060ukrsService.updateDetail16" parameterType="Map">    /* 추가 */
		UPDATE AGA245T
		   SET ACCNT          = #{ACCNT}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     
		 WHERE PAY_METHD     = #{PAY_METHD}
		   AND DR_CR          = #{DR_CR}
		   AND ITEM_ACCNT     = #{ITEM_ACCNT}
		   AND COMP_CODE      = #{S_COMP_CODE}
  
	</update>
	
	<delete id="aba060ukrsService.deleteDetail16" parameterType="Map">	 /* 삭제 */
		DELETE FROM AGA245T 
		 WHERE PAY_METHD    = #{PAY_METHD}
		   AND DR_CR         = #{DR_CR}
		   AND ITEM_ACCNT    = #{ITEM_ACCNT}
		   AND COMP_CODE     = #{S_COMP_CODE}
	</delete>
	
	<select id="aba060ukrsService.selectList17" parameterType="Map" resultType="rMap">
		--UAga01Krv.Caga100UKR Setaga100[fnaga100q] Query1
		    SELECT A.GUBUN 
		         , A.ACCNT    
		         , (SELECT ACCNT_NAME 
		              FROM ABA400T WITH (NOLOCK)
		             WHERE COMP_CODE = A.COMP_CODE 
		               AND ACCNT     = A.ACCNT) 				AS ACCNT_NAME 
		         , A.ACCNT_GAIN     
		         , (SELECT ACCNT_NAME 
		              FROM ABA400T WITH (NOLOCK)
		             WHERE COMP_CODE = A.COMP_CODE 
		               AND ACCNT     = A.ACCNT_GAIN) 			AS ACCNT_GAIN_NAME 
		          , A.ACCNT_LOSS     
		         , (SELECT ACCNT_NAME 
		              FROM ABA400T WITH (NOLOCK)
		             WHERE COMP_CODE = A.COMP_CODE 
		               AND ACCNT     = A.ACCNT_LOSS) 			AS ACCNT_LOSS_NAME       
		         , A.UPDATE_DB_USER AS UPDATE_DB_USER 
		         , A.UPDATE_DB_TIME AS UPDATE_DB_TIME 
		         , A.COMP_CODE 
		      FROM AGA400T A WITH (NOLOCK)
		     WHERE A.COMP_CODE = #{S_COMP_CODE}    
		      <if test="@foren.Ognl@isNotEmpty(GUBUN_17)">
		  	   AND A.GUBUN = #{GUBUN_17}
		  	  </if>
            ORDER BY A.GUBUN, A.ACCNT      
    </select>
    <select id="aba060ukrsService.selectCount17" parameterType="Map" resultType="rMap">
           SELECT COUNT(*) OVER (PARTITION BY A.COMP_CODE, A.GUBUN, A.ACCNT) AS CNT
                 , M1.CODE_NAME AS GUBUN
		         , A.ACCNT     AS ACCNT 
		      FROM AGA400T A WITH (NOLOCK)
		      LEFT JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE = A.COMP_CODE
		                                        AND M1.MAIN_CODE = 'A242'
		                                        AND M1.USE_YN = 'Y'
		                                        AND M1.SUB_CODE  = A.GUBUN                             
		    WHERE A.COMP_CODE = #{S_COMP_CODE}
		      AND A.GUBUN     = #{GUBUN}
		      AND A.ACCNT     = #{ACCNT} 
    </select>
	<insert id="aba060ukrsService.insertDetail17" parameterType="Map">    /* 입력 */
		INSERT INTO AGA400T
		     ( COMP_CODE
		     , GUBUN
		     , ACCNT
		     , ACCNT_GAIN
		     , ACCNT_LOSS
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     ) 
		VALUES
		     ( #{S_COMP_CODE}
		     , #{GUBUN}
		     , #{ACCNT}
		     , #{ACCNT_GAIN}
		     , #{ACCNT_LOSS}
		     , #{S_USER_ID}
		     , getDate()
		     , #{S_USER_ID}
		     , getDate()
		     )
	</insert>
	<insert id="aba060ukrsService.updateDetail17" parameterType="Map">    /* 입력 */
		UPDATE AGA400T
		   SET ACCNT_GAIN      = #{ACCNT_GAIN}
		     , ACCNT_LOSS      = #{ACCNT_LOSS}
		     , UPDATE_DB_USER  = #{S_USER_ID}
		     , UPDATE_DB_TIME  = getDate()
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND GUBUN = #{GUBUN}
		   AND ACCNT = #{ACCNT}  
	</insert>
	<delete id="aba060ukrsService.deleteDetail17" parameterType="Map">	 /* 삭제 */
		DELETE FROM AGA400T 
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND GUBUN     = #{GUBUN}
		   AND ACCNT     = #{ACCNT}
	</delete>
	
	<select id="aba060ukrsService.selectList18" parameterType="Map" resultType="rMap">
	    SELECT A.COMP_CODE
		     , A.GUBUN
		     , A.PAY_DIVI
		     , A.PAY_TYPE
		     , A.MAKE_SALE
		     , A.DR_CR
		     , A.AMT_DIVI
		     , A.ACCNT
		     , B.ACCNT_NAME
		     , A.REMARK
		  FROM           AGA350T  A WITH (NOLOCK)
		       LEFT JOIN ABA400T  B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                         AND B.ACCNT     = A.ACCNT
	     WHERE A.COMP_CODE = #{S_COMP_CODE} 
	     <if test="@foren.Ognl@isNotEmpty(PAY_DIVI)">
	       AND A.PAY_DIVI = #{PAY_DIVI}
	     </if>
	     <if test="@foren.Ognl@isNotEmpty(PAY_TYPE)">
	       AND A.PAY_TYPE = #{PAY_TYPE}
	     </if>
	     ORDER BY A.GUBUN, A.PAY_DIVI, PAY_TYPE, MAKE_SALE, AMT_DIVI
    </select>
	
	<insert id="aba060ukrsService.insertDetail18" parameterType="Map">    /* 입력 */
		INSERT INTO AGA350T
		     ( 	  COMP_CODE
		     	, GUBUN
		     	, PAY_DIVI
		     	, PAY_TYPE
		    	, MAKE_SALE
		     	, DR_CR
		     	, AMT_DIVI
         	 	, ACCNT
         	 	, REMARK
         	 	, INSERT_DB_USER
         	 	, INSERT_DB_TIME
         	 	, UPDATE_DB_USER
         	 	, UPDATE_DB_TIME
		     ) 
		VALUES
		     ( 	  #{S_COMP_CODE}
		     	, #{GUBUN}
				, #{PAY_DIVI}
				, #{PAY_TYPE}
				, #{MAKE_SALE}
				, #{DR_CR}
				, #{AMT_DIVI}
				, #{ACCNT}
				, #{REMARK}
		     	, #{S_USER_ID}
		     	, GETDATE()
		     	, #{S_USER_ID}
		     	, GETDATE()
		     )
	</insert>
	
	<update id="aba060ukrsService.updateDetail18" parameterType="Map">    /* 추가 */
		UPDATE AGA350T
		   SET REMARK          = #{REMARK}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		WHERE COMP_CODE       = #{S_COMP_CODE}
          AND GUBUN           = #{GUBUN}
          AND PAY_DIVI        = #{PAY_DIVI} 
          AND PAY_TYPE        = #{PAY_TYPE}
          AND MAKE_SALE       = #{MAKE_SALE} 
          AND DR_CR           = #{DR_CR} 
          AND AMT_DIVI        = #{AMT_DIVI} 
          AND ACCNT           = #{ACCNT} 
  
	</update>
	
	<delete id="aba060ukrsService.deleteDetail18" parameterType="Map">	 /* 삭제 */
		DELETE FROM AGA350T 
		 WHERE COMP_CODE       = #{S_COMP_CODE}
           AND GUBUN           = #{GUBUN}
           AND PAY_DIVI        = #{PAY_DIVI} 
           AND PAY_TYPE        = #{PAY_TYPE}
           AND MAKE_SALE       = #{MAKE_SALE} 
           AND DR_CR           = #{DR_CR} 
           AND AMT_DIVI        = #{AMT_DIVI} 
           AND ACCNT           = #{ACCNT} 
	</delete>
</mapper>