<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aba800ukrServiceImpl">
	<select id="aba800ukrServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">
		--aba800ukr.Caba800ukr[fnAba800QMst] Query02
		DECLARE @COMP_CODE      NVARCHAR(08)        -- (필수) 법인코드
		      , @AUTO_GUBUN     NVARCHAR(02)        -- (선택) 분개구분
		      , @USER_ID        NVARCHAR(100)        -- (선택) 사용자ID
		      , @DEPT_CODE      NVARCHAR(08)        -- (선택) 부서코드
		      , @DEPT_NAME      NVARCHAR(30)        -- (선택) 부서명
		      , @DIV_CODE       NVARCHAR(08)        -- (선택) 사업장코드
		
		SET @COMP_CODE      = #{S_COMP_CODE}
		SET @AUTO_GUBUN     = #{AUTO_GUBUN}
		<if test="@foren.Ognl@isNotEmpty(USER_ID)">
		SET @USER_ID        = #{USER_ID}
		</if>
		<if test="@foren.Ognl@isEmpty(USER_ID)">
		SET @USER_ID        = '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
		SET @DEPT_CODE      = #{DEPT_CODE}
		</if>
		<if test="@foren.Ognl@isEmpty(DEPT_CODE)">
		SET @DEPT_CODE        = '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
		SET @DEPT_NAME      = #{DEPT_NAME}
		</if>
		<if test="@foren.Ognl@isEmpty(DEPT_NAME)">
		SET @DEPT_NAME        = '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		SET @DIV_CODE       = #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isEmpty(DIV_CODE)">
		SET @DIV_CODE        = '%'
		</if>
		
		SELECT  
		        A.AUTO_CD
		      , A.AUTO_NM
		      , A.AUTO_GUBUN
		      , A.AUTO_DATA
		      , CASE WHEN A.AUTO_GUBUN = '01' THEN C1.USER_NAME
		             WHEN A.AUTO_GUBUN = '02' THEN C2.TREE_NAME
		             WHEN A.AUTO_GUBUN = '03' THEN C3.DIV_NAME
		             ELSE ''
		        END                                                 AS AUTO_DATA_NAME
		      , C1.USER_ID 
		      , C2.TREE_CODE AS DEPT_CODE
		      , C2.TREE_NAME AS DEPT_NAME
		      , C3.DIV_CODE
		      , A.COMP_CODE
		      , A.AUTO_CD + A.AUTO_GUBUN                            AS KEY_STRING
		FROM                ABA800T AS A  WITH (NOLOCK)
		        LEFT  JOIN  BSA300T AS C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
		                                               AND C1.USER_ID   = A.AUTO_DATA
		        LEFT  JOIN  BSA210T AS C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
		                                               AND C2.TREE_CODE = A.AUTO_DATA
		        LEFT  JOIN  BOR120T AS C3 WITH (NOLOCK) ON C3.COMP_CODE = A.COMP_CODE
		                                               AND C3.DIV_CODE  = A.AUTO_DATA
		WHERE   A.COMP_CODE        =       @COMP_CODE
		<if test="@foren.Ognl@isNotEmpty(AUTO_GUBUN)">
		  AND	A.AUTO_GUBUN       =       @AUTO_GUBUN
		</if>
		<if test="@foren.Ognl@isNotEmpty(USER_ID)">
		  AND	A.AUTO_DATA    =       @USER_ID   
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
		  AND	A.AUTO_DATA    =       @DEPT_CODE   
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
		  AND	C2.TREE_NAME    LIKE '%' + @DEPT_NAME + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		  AND	A.AUTO_DATA    =       @DIV_CODE   
		</if>
		ORDER   BY A.AUTO_GUBUN, A.AUTO_CD
	</select>

	<select id="aba800ukrServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		--aba800ukr.Caba800ukr[fnAba800QStd] Query02
		DECLARE @COMP_CODE      NVARCHAR(08)
		      , @AUTO_CD        NVARCHAR(04)
		      , @AUTO_GUBUN     NVARCHAR(02)
		
		SET @COMP_CODE  = #{S_COMP_CODE}
		SET @AUTO_CD    = #{AUTO_CD}
		SET @AUTO_GUBUN = #{AUTO_GUBUN}
		
		SELECT  
		        B.AUTO_CD
		      , B.SEQ
		      , B.SLIP_DIVI
		      , B.ACCNT
		      , M1.ACCNT_NAME
		      , ISNULL(B.CUSTOM_CODE,'') AS CUSTOM_CODE
		      , ISNULL(B.CUSTOM_NAME,'') AS CUSTOM_NAME
		      , B.AMT_I
		      , ISNULL(B.REMARK,'')      AS REMARK
		      , M2.CODE_NAME             AS PROOF_KIND_NM
		      , ISNULL(B.DEPT_CODE,'')   AS DEPT_CODE
		      , M3.TREE_NAME             AS DEPT_NAME
		      , ISNULL(B.DIV_CODE,'')    AS DIV_CODE
		      , ISNULL(B.PROOF_KIND, '') AS PROOF_KIND
		      , B.DR_CR
		      , M1.SPEC_DIVI
		      , ISNULL(B.AC_CODE1     ,'') AC_CODE1
		      , ISNULL(B.AC_CODE2     ,'') AC_CODE2
		      , ISNULL(B.AC_CODE3     ,'') AC_CODE3
		      , ISNULL(B.AC_CODE4     ,'') AC_CODE4
		      , ISNULL(B.AC_CODE5     ,'') AC_CODE5
		      , ISNULL(B.AC_CODE6     ,'') AC_CODE6
		      , ISNULL(B.AC_DATA1     ,'') AC_DATA1
		      , ISNULL(B.AC_DATA2     ,'') AC_DATA2
		      , ISNULL(B.AC_DATA3     ,'') AC_DATA3
		      , ISNULL(B.AC_DATA4     ,'') AC_DATA4
		      , ISNULL(B.AC_DATA5     ,'') AC_DATA5
		      , ISNULL(B.AC_DATA6     ,'') AC_DATA6
		      , ISNULL(B.AC_DATA_NAME1,'') AC_DATA_NAME1
		      , ISNULL(B.AC_DATA_NAME2,'') AC_DATA_NAME2
		      , ISNULL(B.AC_DATA_NAME3,'') AC_DATA_NAME3
		      , ISNULL(B.AC_DATA_NAME4,'') AC_DATA_NAME4
		      , ISNULL(B.AC_DATA_NAME5,'') AC_DATA_NAME5
		      , ISNULL(B.AC_DATA_NAME6,'') AC_DATA_NAME6
		      , ISNULL((SELECT AC_NAME  FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE1), '') AC_NAME1
		      , ISNULL((SELECT AC_NAME  FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE2), '') AC_NAME2
		      , ISNULL((SELECT AC_NAME  FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE3), '') AC_NAME3
		      , ISNULL((SELECT AC_NAME  FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE4), '') AC_NAME4
		      , ISNULL((SELECT AC_NAME  FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE5), '') AC_NAME5
		      , ISNULL((SELECT AC_NAME  FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE6), '') AC_NAME6
		      , ISNULL((SELECT DT_TYPE  FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE1), 0 ) AC_TYPE1
		      , ISNULL((SELECT DT_TYPE  FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE2), 0 ) AC_TYPE2
		      , ISNULL((SELECT DT_TYPE  FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE3), 0 ) AC_TYPE3
		      , ISNULL((SELECT DT_TYPE  FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE4), 0 ) AC_TYPE4
		      , ISNULL((SELECT DT_TYPE  FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE5), 0 ) AC_TYPE5
		      , ISNULL((SELECT DT_TYPE  FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE6), 0 ) AC_TYPE6
		      , ISNULL((SELECT DT_LEN   FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE1), 0 ) AC_LEN1
		      , ISNULL((SELECT DT_LEN   FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE2), 0 ) AC_LEN2
		      , ISNULL((SELECT DT_LEN   FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE3), 0 ) AC_LEN3
		      , ISNULL((SELECT DT_LEN   FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE4), 0 ) AC_LEN4
		      , ISNULL((SELECT DT_LEN   FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE5), 0 ) AC_LEN5
		      , ISNULL((SELECT DT_LEN   FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE6), 0 ) AC_LEN6
		      , ISNULL((SELECT DT_POPUP FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE1),'N') AC_POPUP1
		      , ISNULL((SELECT DT_POPUP FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE2),'N') AC_POPUP2
		      , ISNULL((SELECT DT_POPUP FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE3),'N') AC_POPUP3
		      , ISNULL((SELECT DT_POPUP FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE4),'N') AC_POPUP4
		      , ISNULL((SELECT DT_POPUP FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE5),'N') AC_POPUP5
		      , ISNULL((SELECT DT_POPUP FROM ABA200T WITH (NOLOCK) WHERE COMP_CODE = B.COMP_CODE AND AC_CD = B.AC_CODE6),'N') AC_POPUP6
		      , B.COMP_CODE
		FROM                ABA800T AS A  WITH (NOLOCK)
		        INNER JOIN  ABA810T AS B  WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
		                                               AND B.AUTO_CD    = A.AUTO_CD
		        INNER JOIN  ABA400T AS M1 WITH (NOLOCK) ON M1.COMP_CODE = B.COMP_CODE
		                                               AND M1.ACCNT     = B.ACCNT
		        LEFT  JOIN  BSA100T AS M2 WITH (NOLOCK) ON M2.COMP_CODE = B.COMP_CODE
		                                               AND M2.MAIN_CODE = 'A022' 
		                                               AND M2.SUB_CODE  = B.PROOF_KIND
		        LEFT  JOIN  BSA210T AS M3 WITH (NOLOCK) ON M3.COMP_CODE = B.COMP_CODE
		                                               AND M3.TREE_CODE = B.DEPT_CODE
		WHERE   A.COMP_CODE     = @COMP_CODE
		AND   ((A.AUTO_CD       = @AUTO_CD              AND @AUTO_CD    != '') OR (@AUTO_CD    = ''))
		AND   ((A.AUTO_GUBUN    = @AUTO_GUBUN           AND @AUTO_GUBUN != '') OR (@AUTO_GUBUN = ''))
		ORDER   BY B.SEQ
	</select>

	<select  id="aba800ukrServiceImpl.maxAutoCd" parameterType="Map" resultType="rMap">
		-- 자동분개코드 생성
		DECLARE         @MaxAutoCd          NUMERIC(4)
		DECLARE         @AUTO_CD          	NVARCHAR(4)

		SELECT @MaxAutoCd = MAX(CONVERT(NUMERIC,AUTO_CD))
		  FROM ABA800T WITH (NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND ISNUMERIC(AUTO_CD) = 1

		SET @MaxAutoCd  = ISNULL(@MaxAutoCd, 0) + 1
		SET @AUTO_CD    = RIGHT('0000' + CONVERT(NVARCHAR, @MaxAutoCd), 4)

		SELECT @AUTO_CD AS AUTO_CD
	</select>



	<update id="aba800ukrServiceImpl.insertDetail1" parameterType="Map">
		    INSERT  INTO ABA810T
		    (
		            COMP_CODE       
		          , AUTO_CD      
		          , AUTO_GUBUN    
		          , SEQ
		          , SLIP_DIVI       
		          , DR_CR         
		          , ACCNT         
		          , AMT_I
		          , REMARK          
		          , PROOF_KIND    
		          , DEPT_CODE     
		          , DIV_CODE
		          , AC_CODE1        
		          , AC_CODE2      
		          , AC_CODE3
		          , AC_CODE4        
		          , AC_CODE5      
		          , AC_CODE6
		          , AC_DATA1        
		          , AC_DATA2      
		          , AC_DATA3
		          , AC_DATA4        
		          , AC_DATA5      
		          , AC_DATA6
		          , AC_DATA_NAME1   
		          , AC_DATA_NAME2 
		          , AC_DATA_NAME3
		          , AC_DATA_NAME4   
		          , AC_DATA_NAME5 
		          , AC_DATA_NAME6
		          , CUSTOM_CODE     
		          , CUSTOM_NAME
		          , INSERT_DB_USER
		          , INSERT_DB_TIME
		          , UPDATE_DB_USER  
		          , UPDATE_DB_TIME
		    )
		    VALUES
		    (
		            #{S_COMP_CODE}
		          , #{AUTO_CD}	
		          , #{AUTO_GUBUN}
		          , #{SEQ}          
		          , #{SLIP_DIVI}    
		          , #{DR_CR}        
		          , #{ACCNT}        
		          , #{AMT_I}        
		          , #{REMARK}       
		          , #{PROOF_KIND}   
		          , #{DEPT_CODE}    
		          , #{DIV_CODE}     
		          , #{AC_CODE1}     
		          , #{AC_CODE2}     
		          , #{AC_CODE3}     
		          , #{AC_CODE4}     
		          , #{AC_CODE5}     
		          , #{AC_CODE6}     
		          , #{AC_DATA1}     
		          , #{AC_DATA2}     
		          , #{AC_DATA3}     
		          , #{AC_DATA4}     
		          , #{AC_DATA5}     
		          , #{AC_DATA6}     
		          , #{AC_DATA_NAME1}
		          , #{AC_DATA_NAME2}
		          , #{AC_DATA_NAME3}
		          , #{AC_DATA_NAME4}
		          , #{AC_DATA_NAME5}
		          , #{AC_DATA_NAME6}
		          , #{CUSTOM_CODE}  
		          , #{CUSTOM_NAME}
		          , #{S_USER_ID}
		          , GETDATE()  
		          , #{S_USER_ID}
		          , GETDATE()
		    )
	</update>
	<update id="aba800ukrServiceImpl.insertMaster" parameterType="Map">
		--aba800ukr.Caba800ukr[fnAba800Save] Query04
		
		    INSERT  INTO ABA800T
		    (
		            COMP_CODE   , AUTO_CD   , AUTO_NM
		          , AUTO_GUBUN  , AUTO_DATA
		    )
		    VALUES
		    (
		       #{S_COMP_CODE}
		     , #{AUTO_CD}
		     , #{AUTO_NM}
		     , #{AUTO_GUBUN}
		     , #{AUTO_DATA}
		    )
	</update>

	<update id="aba800ukrServiceImpl.updateMaster" parameterType="Map">
		UPDATE ABA800T
		   SET  AUTO_NM= #{AUTO_NM}
		 	   ,AUTO_DATA =  #{AUTO_DATA}
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND AUTO_CD = #{AUTO_CD}
		   AND AUTO_GUBUN = #{AUTO_GUBUN}
	</update>
	<update id="aba800ukrServiceImpl.updateDetail" parameterType="Map">
		UPDATE ABA810T
			SET
				 SLIP_DIVI         =	#{SLIP_DIVI}     
				,DR_CR             =    #{DR_CR}         
				,ACCNT             =    #{ACCNT}         
				,AMT_I             =    #{AMT_I}         
				,REMARK            =    #{REMARK}        
				,PROOF_KIND        =    #{PROOF_KIND}    
				,DEPT_CODE         =    #{DEPT_CODE}     
				,DIV_CODE          =    #{DIV_CODE}      
				,AC_CODE1          =    #{AC_CODE1}      
				,AC_CODE2          =    #{AC_CODE2}      
				,AC_CODE3          =    #{AC_CODE3}      
				,AC_CODE4          =    #{AC_CODE4}      
				,AC_CODE5          =    #{AC_CODE5}      
				,AC_CODE6          =    #{AC_CODE6}      
				,AC_DATA1          =    #{AC_DATA1}      
				,AC_DATA2          =    #{AC_DATA2}      
				,AC_DATA3          =    #{AC_DATA3}      
				,AC_DATA4          =    #{AC_DATA4}      
				,AC_DATA5          =    #{AC_DATA5}      
				,AC_DATA6          =    #{AC_DATA6}      
				,AC_DATA_NAME1     =    #{AC_DATA_NAME1} 
				,AC_DATA_NAME2     =    #{AC_DATA_NAME2} 
				,AC_DATA_NAME3     =    #{AC_DATA_NAME3} 
				,AC_DATA_NAME4     =    #{AC_DATA_NAME4} 
				,AC_DATA_NAME5     =    #{AC_DATA_NAME5} 
				,AC_DATA_NAME6     =    #{AC_DATA_NAME6} 
				,CUSTOM_CODE       =    #{CUSTOM_CODE}   
				,CUSTOM_NAME       =    #{CUSTOM_NAME}   
				,AUTO_CD	 	   =	#{AUTO_CD}	
				,UPDATE_DB_USER    =    #{S_USER_ID}
				,UPDATE_DB_TIME    =    GETDATE()
		 WHERE  COMP_CODE = #{S_COMP_CODE}
		  AND	AUTO_CD = #{AUTO_CD}
		  AND   AUTO_GUBUN		   = 	#{AUTO_GUBUN}
		  AND 	SEQ = #{SEQ}
	</update>

	<select id="aba800ukrServiceImpl.checkDetailCount" parameterType="Map" resultType="rMap">
		SELECT	COUNT(SEQ)	AS CNT
		FROM   ABA810T  WITH (NOLOCK)
		WHERE  COMP_CODE = #{S_COMP_CODE}
		  AND  AUTO_CD = #{AUTO_CD}
	</select>
	<delete id="aba800ukrServiceImpl.deleteDetail" parameterType="Map">
		DELETE FROM ABA810T
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND AUTO_CD    = #{AUTO_CD}
		   AND SEQ = #{SEQ}
	</delete>
	<delete id="aba800ukrServiceImpl.deleteMaster" parameterType="Map">
		DELETE FROM ABA800T
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND AUTO_CD    = #{AUTO_CD}
	</delete>



<!-- 분개구분 시, 저장로직 - 20200813 추가 -->
	<select id="aba800ukrServiceImpl.insertExtraM" parameterType="Map" resultType="rMap">
		--aba800ukr.Caba800ukr[fnAba800Save] Query04
		-- 자동분개코드 생성
		DECLARE         @MaxAutoCd          NUMERIC(4)
		DECLARE         @AUTO_CD          	NVARCHAR(4)

		SELECT @MaxAutoCd = MAX(CONVERT(NUMERIC,AUTO_CD))
		  FROM ABA800T WITH (NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND ISNUMERIC(AUTO_CD) = 1

		SET @MaxAutoCd  = ISNULL(@MaxAutoCd, 0) + 1
		SET @AUTO_CD    = RIGHT('0000' + CONVERT(NVARCHAR, @MaxAutoCd), 4)

		INSERT INTO ABA800T (
		       COMP_CODE
		     , AUTO_CD
		     , AUTO_NM
		     , AUTO_GUBUN
		     , AUTO_DATA
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		) VALUES (
		       #{S_COMP_CODE}
		     , @AUTO_CD
		     , #{AUTO_NM}
		     , #{AUTO_GUBUN}
		     , #{AUTO_DATA}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		)

		SELECT @AUTO_CD AS AUTO_CD_NEW
	</select>
	<update id="aba800ukrServiceImpl.insertExtraD" parameterType="Map">
		INSERT  INTO ABA810T (
		        COMP_CODE
		      , AUTO_CD
		      , AUTO_GUBUN
		      , SEQ
		      , SLIP_DIVI
		      , DR_CR
		      , ACCNT
		      , AMT_I
		      , REMARK
		      , PROOF_KIND
		      , DEPT_CODE
		      , DIV_CODE
		      , AC_CODE1
		      , AC_CODE2
		      , AC_CODE3
		      , AC_CODE4
		      , AC_CODE5
		      , AC_CODE6
		      , AC_DATA1
		      , AC_DATA2
		      , AC_DATA3
		      , AC_DATA4
		      , AC_DATA5
		      , AC_DATA6
		      , AC_DATA_NAME1
		      , AC_DATA_NAME2
		      , AC_DATA_NAME3
		      , AC_DATA_NAME4
		      , AC_DATA_NAME5
		      , AC_DATA_NAME6
		      , CUSTOM_CODE
		      , CUSTOM_NAME
		      , INSERT_DB_USER
		      , INSERT_DB_TIME
		      , UPDATE_DB_USER
		      , UPDATE_DB_TIME
		) VALUES (
		        #{S_COMP_CODE}
		      , #{AUTO_CD}	
		      , #{AUTO_GUBUN}
		      , #{SEQ}
		      , #{SLIP_DIVI}
		      , #{DR_CR}
		      , #{ACCNT}
		      , #{AMT_I}
		      , #{REMARK}
		      , #{PROOF_KIND}
		      , #{DEPT_CODE}
		      , #{DIV_CODE}
		      , #{AC_CODE1}
		      , #{AC_CODE2}
		      , #{AC_CODE3}
		      , #{AC_CODE4}
		      , #{AC_CODE5}
		      , #{AC_CODE6}
		      , #{AC_DATA1}
		      , #{AC_DATA2}
		      , #{AC_DATA3}
		      , #{AC_DATA4}
		      , #{AC_DATA5}
		      , #{AC_DATA6}
		      , #{AC_DATA_NAME1}
		      , #{AC_DATA_NAME2}
		      , #{AC_DATA_NAME3}
		      , #{AC_DATA_NAME4}
		      , #{AC_DATA_NAME5}
		      , #{AC_DATA_NAME6}
		      , #{CUSTOM_CODE}
		      , #{CUSTOM_NAME}
		      , #{S_USER_ID}
		      , GETDATE()
		      , #{S_USER_ID}
		      , GETDATE()
		)
	</update>
</mapper>