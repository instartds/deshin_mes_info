<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="accntCommonService">
	
	<select id="accntCommonService.fnSetFormTitle" parameterType="Map" resultType="rMap">	
	-- 재무제표 title 
	SELECT SUB_CODE
	     , CODE_NAME
	     , USE_YN
	FROM   BSA100T WITH (NOLOCK)
	WHERE  COMP_CODE  = #{S_COMP_CODE}
	AND    MAIN_CODE  = N'A054'
	AND    SUB_CODE  IN ('10','20','30','31','32','40','35','45')
	</select>
	
	<select id="accntCommonService.fnGetProfitCode" parameterType="Map" resultType="rMap">
	    <if test="DIVI == &quot;20&quot;">
	     	--손익계산서    
	     	--zfa_popupZ.fnGetProfitCode 
	     		SELECT MAX(ACCNT_CD) AS ACCNT_CD                
		        	FROM ABA120T WITH (NOLOCK)                  
		        	WHERE COMP_CODE = #{S_COMP_CODE}
		        	  AND DIVI      = #{DIVI}              
		              AND ISNULL(OPT_DIVI,'') = #{OPT_DIVI}
	    </if>
	    <if test="DIVI == &quot;40&quot; or DIVI == &quot;45&quot;">
	        --이익잉여금처분계산서, 결손금처리계산서    
	        --zfa_popupZ.fnGetProfitCode 
	          SELECT MAX(A.ACCNT_CD) AS ACCNT_CD
		          FROM ABA120T A WITH (NOLOCK)
		          WHERE A.COMP_CODE = #{S_COMP_CODE}
		          AND A.DIVI      = #{DIVI}
		          AND ISNULL(A.OPT_DIVI,'') = #{OPT_DIVI}
		          AND ISNULL((SELECT MAX(REFER)
	                        FROM ABA130T WITH (NOLOCK)
	                        WHERE COMP_CODE = A.COMP_CODE
	                          AND DIVI      = A.DIVI 
	                          AND ACCNT_CD  = A.ACCNT_CD),'') != ''
	    </if>
	    <if test="DIVI == &quot;60&quot;">
	        --현금흐름표(간접법)    
	        --zfa_popupZ.fnGetProfitCode 
		        SELECT MAX(A.ACCNT_CD) AS ACCNT_CD
		          FROM ABA120T A WITH (NOLOCK)    
		         WHERE A.COMP_CODE = #{S_COMP_CODE}
		           AND A.DIVI      = #{DIVI}
		           AND ISNULL(A.OPT_DIVI,'') = #{OPT_DIVI}
		           AND ISNULL((SELECT MAX(REFER) 
		                         FROM ABA130T WITH (NOLOCK)
		                        WHERE COMP_CODE = A.COMP_CODE
		                          AND DIVI      = A.DIVI  
		                          AND ACCNT_CD  = A.ACCNT_CD),'') != ''
	    </if>
	</select>
	<select id="accntCommonService.fnGetPrintSetting" parameterType="Map" resultType="rMap">
    /* accntCommonService.fnGetPrintSetting */
	SELECT RETURN_YN
		 , SLIP_PRINT
		 , PRINT_LINE
	  FROM ABA100T WITH (NOLOCK)   
	 WHERE COMP_CODE = #{S_COMP_CODE}
	</select>

	<select id="accntCommonService.fnGetTermDivi" parameterType="Map" resultType="rMap">
	--zfa_popupZ.fnGetTermDivi /* 분기 */
		SELECT SUB_CODE                       
	  FROM BSA100T WITH (NOLOCK)          
	 WHERE COMP_CODE = #{S_COMP_CODE}
       AND MAIN_CODE = 'A074'
	   AND SUB_CODE != N'$'                
	   AND #{DATE}  BETWEEN ISNULL(REF_CODE1,'') AND ISNULL(REF_CODE2,'')		/*DATE 자리에 날짜 "YYYYMMDD" 의 4,6값 입력 */ 
	</select>
	
	<select id="accntCommonService.fnGetSession" parameterType="Map" resultType="rMap">
	--zfa_popupZ.fnGetSession /* 기수 */
	SELECT ISNULL(SESSION,1) AS SESSION 
	  FROM BOR100T WITH (NOLOCK)     
	 WHERE COMP_CODE = #{S_COMP_CODE}
	</select>
	
	<select id="accntCommonService.fnGetStDt" parameterType="Map" resultType="rMap">
	/* zfa_popupZ.fnGetStDt 당기시작년월 */
	SELECT FN_DATE AS STDT, TO_DATE AS TODT 
	  FROM BOR100T WITH (NOLOCK)          
	 WHERE COMP_CODE = #{S_COMP_CODE}
	</select>
	
	<select id="accntCommonService.fnGetToDt" parameterType="Map" resultType="rMap">
	/* zfa_popupZ.fnGetToDt 당기종료년월 */
	SELECT SUBSTRING(TO_DATE,1,6) AS STDT 
	  FROM BOR100T WITH (NOLOCK)   
	 WHERE COMP_CODE = #{S_COMP_CODE}
	</select>

	<select id="accntCommonService.fnGetChargeCode" parameterType="Map" resultType="rMap">
	/* zfa_popupZ.fnGetChargeCode */
	/* accntCommonService.fnGetChargeCode */
	SELECT SUB_CODE                      
	  FROM BSA100T WITH (NOLOCK)         
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND MAIN_CODE = N'A009'            
	   AND REF_CODE1 = #{S_USER_ID}
	</select>
	
	<select id="accntCommonService.getUseColList" parameterType="Map" resultType="rMap">
	/*UBsaExKrv.CBsaExSKr[fnSheetHiddenYn] Query01*/
	/* accntCommonService.getUseColList */
    SELECT REF_CODE3
         , CASE WHEN ISNULL(REF_CODE4, 'Y') = 'N' THEN 'False'
                                                  ELSE 'True'
           END                                                 AS REF_CODE4
      FROM BSA100T WITH(NOLOCK)
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND MAIN_CODE = 'B114'
       AND REF_CODE1 = #{PGM_ID}
       AND REF_CODE2 = #{SHEET_ID}
     ORDER BY REF_CODE2
	</select>
	
	<select id="accntCommonService.fnGetAcCode" parameterType="Map" resultType="rMap">
	/* UAccntPopUpKrv.CAccntPopupKR[GetAcCode] */
	/* accntCommonService.fnGetAcCode */
	SELECT A.AC_CD
	     , A.AC_NAME
	     , UPPER(ISNULL(A.DT_TYPE, 'A'))  AS DT_TYPE
	     , ISNULL(A.DT_LEN, 0)            AS DT_LEN
	     , UPPER(ISNULL(A.DT_POPUP, 'N')) AS DT_POPUP
	     , UPPER(ISNULL(A.DT_FMT, 'N'))	  AS DT_FMT
	  FROM ABA200T A WITH (NOLOCK)
	 WHERE A.COMP_CODE = #{S_COMP_CODE}
	   AND AC_CD       = #{AC_CD}
	 ORDER BY A.AC_CD 
	</select>
	
	<select id="accntCommonService.fnGetAccntInfo" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnGetAccntInfo]
		DECLARE @COMP_CODE      NVARCHAR(08)
		      , @ACCNT          NVARCHAR(16)
		      , @BudgProBase    NVARCHAR(01)
		
		SET @COMP_CODE = #{S_COMP_CODE}
		SET @ACCNT     = #{ACCNT_CD}
		
		--회계업무설정에서 사용하는 예산프로세스 가져오기
		SELECT @BudgProBase = BUDG_PRO_BASE
		  FROM ABA100T WITH (NOLOCK)
		 WHERE COMP_CODE = @COMP_CODE
		
		SET @BudgProBase = ISNULL(@BudgProBase, '1')
		
		--계정정보 가져오기
		SELECT ACCNT
		     , ISNULL(ACCNT_NAME  , '')     AS ACCNT_NAME
		     , ISNULL(AC_FULL_NAME, '')     AS AC_FULL_NAME
		     , ISNULL(ACCNT_NAME2 , '')     AS ACCNT_NAME2
		     , ISNULL(ACCNT_NAME3 , '')     AS ACCNT_NAME3
		     , ISNULL(AC_CODE1    , '')     AS AC_CODE1
		     , ISNULL(AC_CODE2    , '')     AS AC_CODE2
		     , ISNULL(AC_CODE3    , '')     AS AC_CODE3
		     , ISNULL(AC_CODE4    , '')     AS AC_CODE4
		     , ISNULL(AC_CODE5    , '')     AS AC_CODE5
		     , ISNULL(AC_CODE6    , '')     AS AC_CODE6
		     , ISNULL(C1.AC_NAME  , '')     AS AC_NAME1
		     , ISNULL(C2.AC_NAME  , '')     AS AC_NAME2
		     , ISNULL(C3.AC_NAME  , '')     AS AC_NAME3
		     , ISNULL(C4.AC_NAME  , '')     AS AC_NAME4
		     , ISNULL(C5.AC_NAME  , '')     AS AC_NAME5
		     , ISNULL(C6.AC_NAME  , '')     AS AC_NAME6
		     , ISNULL(DR_CTL1     ,'N')     AS DR_CTL1
		     , ISNULL(DR_CTL2     ,'N')     AS DR_CTL2
		     , ISNULL(DR_CTL3     ,'N')     AS DR_CTL3
		     , ISNULL(DR_CTL4     ,'N')     AS DR_CTL4
		     , ISNULL(DR_CTL5     ,'N')     AS DR_CTL5
		     , ISNULL(DR_CTL6     ,'N')     AS DR_CTL6
		     , ISNULL(CR_CTL1     ,'N')     AS CR_CTL1
		     , ISNULL(CR_CTL2     ,'N')     AS CR_CTL2
		     , ISNULL(CR_CTL3     ,'N')     AS CR_CTL3
		     , ISNULL(CR_CTL4     ,'N')     AS CR_CTL4
		     , ISNULL(CR_CTL5     ,'N')     AS CR_CTL5
		     , ISNULL(CR_CTL6     ,'N')     AS CR_CTL6
		     , ISNULL(BOOK_CODE1  , '')     AS BOOK_CODE1
		     , ISNULL(BOOK_CODE2  , '')     AS BOOK_CODE2
		     , ISNULL(D1.AC_NAME  , '')     AS BOOK_NAME1
		     , ISNULL(D2.AC_NAME  , '')     AS BOOK_NAME2
		     , ISNULL(ACCNT_SPEC  , '')     AS ACCNT_SPEC
		     , ISNULL(SPEC_DIVI   , '')     AS SPEC_DIVI
		     , ISNULL(PROFIT_DIVI , '')     AS PROFIT_DIVI
		     , ISNULL(PEND_YN     ,'N')     AS PEND_YN
		     , ISNULL(PEND_CODE   , '')     AS PEND_CODE
		     , ISNULL(BUDG_YN     ,'N')     AS BUDG_YN
		     , ISNULL(BUDGCTL_YN  ,'N')     AS BUDGCTL_YN
		     , ISNULL(DR_FUND     , '')     AS DR_FUND
		     , ISNULL(CR_FUND     , '')     AS CR_FUND
		     , ISNULL(COST_DIVI   , '')     AS COST_DIVI
		     , ISNULL(FOR_YN      ,'N')     AS FOR_YN
		     , ISNULL(ACCNT_DIVI  , '')     AS ACCNT_DIVI
		     , ISNULL(JAN_DIVI    , '')     AS JAN_DIVI
		     , ISNULL(GROUP_YN    ,'N')     AS GROUP_YN
		     , ISNULL(SLIP_SW     ,'N')     AS SLIP_SW
		     , ISNULL(A.SYSTEM_YN ,'N')     AS SYSTEM_YN
		     , ISNULL(C1.DT_TYPE  , '')     AS AC_TYPE1
		     , ISNULL(C2.DT_TYPE  , '')     AS AC_TYPE2
		     , ISNULL(C3.DT_TYPE  , '')     AS AC_TYPE3
		     , ISNULL(C4.DT_TYPE  , '')     AS AC_TYPE4
		     , ISNULL(C5.DT_TYPE  , '')     AS AC_TYPE5
		     , ISNULL(C6.DT_TYPE  , '')     AS AC_TYPE6
		     , ISNULL(C1.DT_LEN   , 0 )     AS AC_LEN1
		     , ISNULL(C2.DT_LEN   , 0 )     AS AC_LEN2
		     , ISNULL(C3.DT_LEN   , 0 )     AS AC_LEN3
		     , ISNULL(C4.DT_LEN   , 0 )     AS AC_LEN4
		     , ISNULL(C5.DT_LEN   , 0 )     AS AC_LEN5
		     , ISNULL(C6.DT_LEN   , 0 )     AS AC_LEN6
		     , CASE WHEN A.AC_CODE1 = 'A7' AND @BudgProBase = '1' 
		            THEN 'N'
		            ELSE ISNULL(C1.DT_POPUP,'N')
		        END AC_POPUP1
		     , CASE WHEN A.AC_CODE2 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C2.DT_POPUP,'N')
		        END AC_POPUP2
		     , CASE WHEN A.AC_CODE3 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C3.DT_POPUP,'N')
		        END AC_POPUP3
		     , CASE WHEN A.AC_CODE4 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C4.DT_POPUP,'N')
		        END AC_POPUP4
		     , CASE WHEN A.AC_CODE5 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C5.DT_POPUP,'N')
		        END AC_POPUP5
		     , CASE WHEN A.AC_CODE6 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C6.DT_POPUP,'N')
		        END AC_POPUP6
		     , ISNULL(B.AC_NAME   , '')     AS PEND_NAME
		     , ISNULL(B.DT_TYPE   , '')     AS PEND_TYPE
		     , ISNULL(B.DT_LEN    ,'0')     AS PEND_LEN
		     , ISNULL(B.DT_POPUP  ,'N')     AS PEND_POPUP
		     , A.COMP_CODE
		     ,  ISNULL(C1.DT_FMT  , 0 )     AS AC_FORMAT1
		     ,  ISNULL(C2.DT_FMT  , 0 )     AS AC_FORMAT2
		     ,  ISNULL(C3.DT_FMT  , 0 )     AS AC_FORMAT3
		     ,  ISNULL(C4.DT_FMT  , 0 )     AS AC_FORMAT4
		     ,  ISNULL(C5.DT_FMT  , 0 )     AS AC_FORMAT5
		     ,  ISNULL(C6.DT_FMT  , 0 )     AS AC_FORMAT6
		  FROM            ABA400T AS A  WITH (NOLOCK)
		       LEFT  JOIN ABA200T AS B  WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE AND B.AC_CD  = A.PEND_CODE
		
		       LEFT  JOIN ABA200T AS C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE AND C1.AC_CD = A.AC_CODE1
		       LEFT  JOIN ABA200T AS C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE AND C2.AC_CD = A.AC_CODE2
		       LEFT  JOIN ABA200T AS C3 WITH (NOLOCK) ON C3.COMP_CODE = A.COMP_CODE AND C3.AC_CD = A.AC_CODE3
		       LEFT  JOIN ABA200T AS C4 WITH (NOLOCK) ON C4.COMP_CODE = A.COMP_CODE AND C4.AC_CD = A.AC_CODE4
		       LEFT  JOIN ABA200T AS C5 WITH (NOLOCK) ON C5.COMP_CODE = A.COMP_CODE AND C5.AC_CD = A.AC_CODE5
		       LEFT  JOIN ABA200T AS C6 WITH (NOLOCK) ON C6.COMP_CODE = A.COMP_CODE AND C6.AC_CD = A.AC_CODE6
		
		       LEFT  JOIN ABA200T AS D1 WITH (NOLOCK) ON D1.COMP_CODE = A.COMP_CODE AND D1.AC_CD = A.BOOK_CODE1
		       LEFT  JOIN ABA200T AS D2 WITH (NOLOCK) ON D2.COMP_CODE = A.COMP_CODE AND D2.AC_CD = A.BOOK_CODE2
		 WHERE A.COMP_CODE = @COMP_CODE
		   AND A.ACCNT     = @ACCNT
	</select>
	<select id="accntCommonService.getAcInfo" parameterType="Map" resultType="rMap">
	--UAccntPopupKrv.CAccntPopupKR[GetAcInfo]
    SELECT AC_CD 
    	 , AC_NAME
         , DT_TYPE
         , DT_LEN
         , DT_POPUP
         , DT_FMT
      FROM ABA200T WITH (NOLOCK)
     WHERE COMP_CODE = #{S_COMP_CODE} 
	<if test="@foren.Ognl@isNotEmpty(AC_CD)"> 
       AND AC_CD    IN 
	<foreach collection="AC_CD" item="item" separator="," close=")" open="(">
                  #{item}
    </foreach>
	</if>
	<if test="@foren.Ognl@isNotEmpty(USE_YN)"> 
		ISNULL(USE_YN, 'N') = #{USE_YN}
	</if>
     ORDER BY AC_CD
	</select>
	<select id="accntCommonService.getBookCombo" parameterType="Map" resultType="rMap">
	--UAccntPopUpKrv.CAccntPopupKR[fnGetBookCombo]
	SELECT BOOK_CODE1
	     , ISNULL(B.AC_NAME,'') BOOK_NAME1
	  FROM            ABA400T A WITH (NOLOCK)
	       LEFT  JOIN ABA200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                         AND B.AC_CD     = A.BOOK_CODE1
	 WHERE A.COMP_CODE = #{S_COMP_CODE}
	   AND A.ACCNT     = #{ACCNT_CD}
	 
	 UNION ALL
	 
	 SELECT BOOK_CODE2
	      , ISNULL(B.AC_NAME,'') BOOK_NAME2
	   FROM            ABA400T A WITH (NOLOCK)
	        LEFT  JOIN ABA200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                          AND B.AC_CD     = A.BOOK_CODE2
	  WHERE A.COMP_CODE = #{S_COMP_CODE}
	    AND A.ACCNT     = #{ACCNT_CD}
	</select>
	<select id="accntCommonService.fnGetTaxRate" parameterType="Map" resultType="rMap">
	 /* zfa_popupZ.fnGetTaxRate */
	SELECT ISNULL(REF_CODE2, 0) AS TAX_RATE 
		FROM BSA100T WITH (NOLOCK)            
		WHERE COMP_CODE = #{S_COMP_CODE}
		  AND MAIN_CODE = N'A022'               
		  AND SUB_CODE  = #{PROOF_KIND}
	</select>
	
	<select id="accntCommonService.fnGetAccntBasicInfo" parameterType="Map" resultType="rMap">
	--zfa_popupZ.fnGetAccntBasicInfo 
	SELECT ISNULL(AMT_POINT,'') 	AS AMT_POINT
	      ,ISNULL(ASST_AUTOCD,'')   AS ASST_AUTOCD    --1:자동채번, 2:수동채번
	      ,ISNULL(GOV_GRANT_CONT,'2') AS GOV_GRANT_CONT  -- 국고보조금관리 1:예  2:아니오
	  FROM ABA100T WITH (NOLOCK)   
	 WHERE COMP_CODE = #{S_COMP_CODE}
	</select>
	
	<select id="accntCommonService.fnGetDprRate" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnGetDrbYear 
		SELECT ISNULL((SELECT CODE_NAME                                    
		                 FROM BSA100T WITH (NOLOCK)                        
		                WHERE COMP_CODE = #{S_COMP_CODE}
		                  AND MAIN_CODE = (CASE B.DEP_CTL                  
		                                        WHEN '1' THEN 'A033'       
		                                        WHEN '2' THEN 'A034'       
		                                    END)                           
		                  AND SUB_CODE = #{DRB_YEAR} ), 0) 	AS DPR_RATE        
		  FROM ASS100T AS B WITH (NOLOCK)                                  
		 WHERE B.COMP_CODE = #{S_COMP_CODE}
		   AND B.ACCNT     = #{ACCNT}
	</select>
	
	<select id="accntCommonService.fnGetDprInfoByAccnt" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnGetDprInfoByAccnt 
		SELECT DEP_CTL      
		     , ISNULL(GAAP_DRB_YEAR, 0) AS GAAP_DRB_YEAR  
		     , ISNULL(IFRS_DRB_YEAR, 0) AS IFRS_DRB_YEAR  
		     , JAN_RATE     
		  FROM ASS100T AS B WITH (NOLOCK) 
		 WHERE B.COMP_CODE = #{S_COMP_CODE}
		   AND B.ACCNT     = #{ACCNT}
	</select>
	
	<select id="accntCommonService.fnExchgRateO" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnExchgRateO 
		BEGIN    
		    SET NOCOUNT ON    
		    SET ARITHABORT ON    
		    
		    DECLARE @COMP_CODE              NVARCHAR(20)        --(필수) 법인코드
		          , @AC_DATE                NVARCHAR(20)        --(필수) 기준일자/기준월
		          , @MONEY_UNIT             NVARCHAR(20)        --(필수) 화폐단위
		          
		    SET @COMP_CODE       = #{S_COMP_CODE}
		    SET @AC_DATE         = #{AC_DATE}
		    SET @MONEY_UNIT      = #{MONEY_UNIT}
		
		    SELECT CASE WHEN A.EXCHG_BASE = '1' THEN ISNULL(B.BASE_EXCHG, 1)
		                WHEN A.EXCHG_BASE = '2' THEN ISNULL(C.BASE_EXCHG, 1)
		                                        ELSE 1
		            END AS BASE_EXCHG
		      FROM           ABA100T AS A WITH(NOLOCK)
		           LEFT JOIN (
		                      SELECT B.COMP_CODE
		                           , B.BASE_EXCHG
		                        FROM BCM510T AS B WITH (NOLOCK)
		                       WHERE B.COMP_CODE  = @COMP_CODE
		                         AND B.AC_DATE    = @AC_DATE
		                         AND B.MONEY_UNIT = @MONEY_UNIT
		                     ) AS B ON B.COMP_CODE = A.COMP_CODE
		           LEFT JOIN (
		                      SELECT C.COMP_CODE
		                           , C.BASE_EXCHG
		                        FROM BCM510T AS C WITH (NOLOCK)
		                       WHERE C.COMP_CODE  = @COMP_CODE
		                         AND C.AC_DATE    = SUBSTRING(@AC_DATE, 1, 6)
		                         AND C.MONEY_UNIT = @MONEY_UNIT
		                     ) AS C ON C.COMP_CODE = A.COMP_CODE
		     WHERE A.COMP_CODE = @COMP_CODE
		     
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	
	<select id="accntCommonService.fnGetRefCodes" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnGetRefCode 
		SELECT TOP 1 ${ADD_QUERY1}                
		  FROM BSA100T WITH (NOLOCK)            
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = #{MAIN_CODE}  
		   AND SUB_CODE != N'$'                  
	     <if test="@foren.Ognl@isNotEmpty(SUB_CODE)"> 
		   AND SUB_CODE  = #{SUB_CODE}
		 </if>
	     <if test="@foren.Ognl@isNotEmpty(ADD_QUERY2)"> 
		   AND #{ADD_QUERY2} 
		 </if>
	</select>
	
	<select id="accntCommonService.fnGetExistSlipNum" parameterType="Map" resultType="rMap">
		/*agj100ukrServiceImpl.checkSlipNum*/
		/* 존재하는 전표번호인지 체크하기  */
		<if test="GUBUN == &quot;1&quot;">
			/*회계전표*/
			SELECT COUNT(*) AS CNT                    
			  FROM AGJ210T WITH (NOLOCK)      
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND ISNULL(MOD_DIVI,'') = ''   
			   AND SLIP_NUM =  #{SNUM}
			   <if test="S_LANG_CODE == &quot;CN&quot;">
				   <if test="NUMBERING_RULE == &quot;1&quot;">
				   	AND AC_DATE    = #{SDATE}
				   </if>
				   <if test="NUMBERING_RULE == &quot;2&quot;">
				   	AND  AC_DATE LIKE   LEFT(#{SDATE},6)='%'
				   </if>
				   <if test="NUMBERING_RULE == &quot;3&quot;">
				   	AND  AC_DATE LIKE   LEFT(#{SDATE},6)+'%'
				   	AND  SLIP_TYPE  = #{SLIP_TYPE}
				   </if>
			   </if>
			   <if test="S_LANG_CODE != &quot;CN&quot;">
			   		AND AC_DATE    = #{SDATE}
			   </if>
		</if>   
		<if test="GUBUN != &quot;1&quot;">
			/*결의전표*/
			SELECT COUNT(*)  AS CNT                
			  FROM AGJ110T WITH (NOLOCK)     
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND ISNULL(MOD_DIVI,'') = ''  
			   AND EX_NUM  = #{SNUM}   
			   <if test="S_LANG_CODE == &quot;CN&quot;">
				   <if test="NUMBERING_RULE == &quot;1&quot;">
				   	/*일별자동  */
				   	AND EX_DATE    = #{SDATE}
				   </if>
				   <if test="NUMBERING_RULE == &quot;2&quot;">
				   	/*월별자동  */
				   	AND  EX_DATE LIKE   LEFT(#{SDATE},6)='%'
				   </if>
				   <if test="NUMBERING_RULE == &quot;3&quot;">
				   	/*월별 and 유형별자동  */
				   	AND  AC_DATE LIKE   LEFT(#{SDATE},6)+'%'
				   	AND  SLIP_TYPE  = #(SLIP_TYPE)
				   </if>
			   </if>
			   <if test="S_LANG_CODE != &quot;CN&quot;">
			   		AND EX_DATE    = #{SDATE}
			   </if>
			   
		</if>
	</select>
	<select id="accntCommonService.fnGetAccntBasicInfo_a"  parameterType="Map" resultType="rMap">
		 SELECT ISNULL(${COL},'')  AS "OPTION"
		  FROM ABA100T WITH (NOLOCK)   
		 WHERE COMP_CODE = #{S_COMP_CODE}		
	</select>
	<select id="accntCommonService.fnIsCostAccnt"  parameterType="Map" resultType="rMap">
		 --zfa_popupZ.fnIsCostAccnt"
		 DECLARE @MESSAGE 	NVARCHAR(100),
		 		 @SLIP_MSG 	NVARCHAR(100),
		 		 @CNT		NUMERIC(18,0)
		 	SET @SLIP_MSG = ''
		 	SET @MESSAGE=''
		 	
    		SELECT @SLIP_MSG = ISNULL(SLIP_MSG,'1') 
    		  FROM ABA100T WITH (NOLOCK) 
    		 WHERE COMP_CODE = #{S_COMP_CODE}
			
			IF @SLIP_MSG != '' 
				BEGIN
					--zfa_popupZ.fnIsCostAccnt 
					IF @SLIP_MSG = '1' 
						BEGIN
				     		SELECT @CNT = COUNT(ACCNT_CD)     
				    		  FROM ABA120T WITH (NOLOCK) 
				     		 WHERE COMP_CODE = #{S_COMP_CODE}
			         		   AND DIVI      = N'50'    
				     		   AND ACCNT_CD IN (N'4300', N'5200', N'5300')
				     		   AND #{ACCNT_CD} BETWEEN START_ACCNT AND START_ACCNT
				     		
				     		 IF @CNT = 0 
				     		 BEGIN
				     		 	SET @MESSAGE ='비용계정은 차변에 입력해야 합니다. 계정코드를 다시 확인하십시오.'
				     		 	SELECT @MESSAGE AS MSG
				     		 END				     		
				     		 ELSE 
				     		 BEGIN
					     		 SELECT ACCNT_CD
					     		 		,START_ACCNT
					     		 		,END_ACCNT
					    		  FROM ABA120T WITH (NOLOCK) 
					     		 WHERE COMP_CODE = #{S_COMP_CODE}
				         		   AND DIVI      = N'50'    
					     		   AND ACCNT_CD IN (N'4300', N'5200', N'5300')
					     		   AND #{ACCNT_CD} BETWEEN START_ACCNT AND START_ACCNT
				     		 END
			     		 END
						
					ELSE
						BEGIN
							SET @MESSAGE ='오류가 발생하였습니다.'
							SELECT @MESSAGE AS MSG
						END
			END
	</select>
	<select  id="accntCommonService.fnGetNoteAmt"  parameterType="Map" resultType="rMap">
	   SELECT ISNULL(OC_AMT_I, 0.0) AS OC_AMT_I 
	     	  ,ISNULL(J_AMT_I , 0.0) AS J_AMT_I   
		 FROM AFN100T WITH (NOLOCK)            
	 	WHERE COMP_CODE = #{S_COMP_CODE}
       	  AND NOTE_NUM  = #{NOTE_NUM}
	</select>
	<select  id="accntCommonService.fnGetBillDivCode"  parameterType="Map" resultType="rMap">
	    --zfa_popupZ.fnGetBillDivCode "
    	SELECT BILL_DIV_CODE                
    	  FROM BOR120T WITH (NOLOCK)        
    	 WHERE DIV_CODE  = #{DIV_CODE}
    	   AND COMP_CODE = #{S_COMP_CODE}
	</select>
		<select  id="accntCommonService.getTaxBase"  parameterType="Map" resultType="rMap">
	    
		 SELECT TAX_BASE
		      , BILL_DIV_CODE 
		      , (SELECT BILL_DIV_CODE 
		           FROM BOR120T
		          WHERE COMP_CODE = #{S_COMP_CODE}
		            AND DIV_CODE  = (SELECT DIV_CODE 
		                               FROM BSA300T 
		                              WHERE COMP_CODE    = #{S_COMP_CODE}
		                                AND USER_ID      = #{S_USER_ID})) AS DIV_CODE 
		  FROM ABA100T
		 WHERE COMP_CODE = #{S_COMP_CODE}
	</select>
	<select  id="accntCommonService.fnGetChargeInfo"  parameterType="Map" resultType="rMap">
	   --zfa_popupZ.fnGetChargeInfo 
		SELECT TOP 1 A.SUB_CODE      AS CHARGE_CODE  
		     ,  A.CODE_NAME     AS CHARGE_NAME  
		     ,  A.REF_CODE2     AS CHARGE_DIVI  
	         ,  C.PERSON_NUMB   AS CHARGE_PNUMB 
	         ,  C.NAME          AS CHARGE_PNAME 
		  FROM              BSA100T   A  WITH (NOLOCK)  
	            LEFT  JOIN  BSA300T   B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE   
	                                                  AND B.USER_ID     = A.REF_CODE1   
	                                                  AND B.USE_YN      = 'Y'
	            LEFT  JOIN  HUM100T   C  WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE   
	                                                  AND C.PERSON_NUMB = B.PERSON_NUMB 
	
		 WHERE  A.COMP_CODE = #{S_COMP_CODE}
		   AND  A.MAIN_CODE = N'A009'   
		   AND  A.REF_CODE1 = #{S_USER_ID}  
	</select>
	
	<select  id="accntCommonService.getLicenseeInform"  parameterType="Map" resultType="rMap">	
		--UAtx01Krv.CATX460UKR[FNATX460Q] QUERY2
	SELECT A.TAX_BASE
	     , A.APP_NUM
	     , CASE WHEN A.TAX_BASE != '0'
	            THEN A.BILL_DIV_CODE
	            ELSE '' 
	        END BILL_DIV_CODE
	     , CASE WHEN A.TAX_BASE = '5' 
	            THEN SUBSTRING(B.COMPANY_NUM,1,3) + '-' + SUBSTRING(B.COMPANY_NUM,4,2) + '-' + SUBSTRING(B.COMPANY_NUM,6,5) 
	            ELSE '' 
	        END COMPANY_NUM      
	  FROM ABA100T A
	               LEFT OUTER JOIN BOR120T B
	                            ON A.COMP_CODE     = B.COMP_CODE
	                           AND A.BILL_DIV_CODE = B.DIV_CODE
	 WHERE A.COMP_CODE   = #{S_COMP_CODE}

	
	</select>
	<select id="accntCommonService.fnGetAutoMethod" parameterType="Map" resultType="rMap">
		/*  매입매출 방법 등록 조회와 계정정보 Merge */
		--UAccntPopUpKrv.CAccntPopupKR[fnGetAccntInfo]
		DECLARE  @BudgProBase    NVARCHAR(01)
		
	
		
		--회계업무설정에서 사용하는 예산프로세스 가져오기
		SELECT @BudgProBase = BUDG_PRO_BASE
		  FROM ABA100T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		
		SET @BudgProBase = ISNULL(@BudgProBase, '1')
		
		--계정정보 가져오기
		SELECT
			   SLIP_DIVI
			 , ACCNT
		     , ISNULL(ACCNT_NAME  , '')     AS ACCNT_NAME
		     , ISNULL(AC_FULL_NAME, '')     AS AC_FULL_NAME
		     , ISNULL(ACCNT_NAME2 , '')     AS ACCNT_NAME2
		     , ISNULL(ACCNT_NAME3 , '')     AS ACCNT_NAME3
		     , ISNULL(AC_CODE1    , '')     AS AC_CODE1
		     , ISNULL(AC_CODE2    , '')     AS AC_CODE2
		     , ISNULL(AC_CODE3    , '')     AS AC_CODE3
		     , ISNULL(AC_CODE4    , '')     AS AC_CODE4
		     , ISNULL(AC_CODE5    , '')     AS AC_CODE5
		     , ISNULL(AC_CODE6    , '')     AS AC_CODE6
		     , ISNULL(C1.AC_NAME  , '')     AS AC_NAME1
		     , ISNULL(C2.AC_NAME  , '')     AS AC_NAME2
		     , ISNULL(C3.AC_NAME  , '')     AS AC_NAME3
		     , ISNULL(C4.AC_NAME  , '')     AS AC_NAME4
		     , ISNULL(C5.AC_NAME  , '')     AS AC_NAME5
		     , ISNULL(C6.AC_NAME  , '')     AS AC_NAME6
		     , ISNULL(DR_CTL1     ,'N')     AS DR_CTL1
		     , ISNULL(DR_CTL2     ,'N')     AS DR_CTL2
		     , ISNULL(DR_CTL3     ,'N')     AS DR_CTL3
		     , ISNULL(DR_CTL4     ,'N')     AS DR_CTL4
		     , ISNULL(DR_CTL5     ,'N')     AS DR_CTL5
		     , ISNULL(DR_CTL6     ,'N')     AS DR_CTL6
		     , ISNULL(CR_CTL1     ,'N')     AS CR_CTL1
		     , ISNULL(CR_CTL2     ,'N')     AS CR_CTL2
		     , ISNULL(CR_CTL3     ,'N')     AS CR_CTL3
		     , ISNULL(CR_CTL4     ,'N')     AS CR_CTL4
		     , ISNULL(CR_CTL5     ,'N')     AS CR_CTL5
		     , ISNULL(CR_CTL6     ,'N')     AS CR_CTL6
		     , ISNULL(BOOK_CODE1  , '')     AS BOOK_CODE1
		     , ISNULL(BOOK_CODE2  , '')     AS BOOK_CODE2
		     , ISNULL(D1.AC_NAME  , '')     AS BOOK_NAME1
		     , ISNULL(D2.AC_NAME  , '')     AS BOOK_NAME2
		     , ISNULL(ACCNT_SPEC  , '')     AS ACCNT_SPEC
		     , ISNULL(SPEC_DIVI   , '')     AS SPEC_DIVI
		     , ISNULL(PROFIT_DIVI , '')     AS PROFIT_DIVI
		     , ISNULL(PEND_YN     ,'N')     AS PEND_YN
		     , ISNULL(PEND_CODE   , '')     AS PEND_CODE
		     , ISNULL(BUDG_YN     ,'N')     AS BUDG_YN
		     , ISNULL(BUDGCTL_YN  ,'N')     AS BUDGCTL_YN
		     , ISNULL(DR_FUND     , '')     AS DR_FUND
		     , ISNULL(CR_FUND     , '')     AS CR_FUND
		     , ISNULL(COST_DIVI   , '')     AS COST_DIVI
		     , ISNULL(FOR_YN      ,'N')     AS FOR_YN
		     , ISNULL(ACCNT_DIVI  , '')     AS ACCNT_DIVI
		     , ISNULL(JAN_DIVI    , '')     AS JAN_DIVI
		     , ISNULL(GROUP_YN    ,'N')     AS GROUP_YN
		     , ISNULL(SLIP_SW     ,'N')     AS SLIP_SW
		     , ISNULL(A.SYSTEM_YN ,'N')     AS SYSTEM_YN
		     , ISNULL(C1.DT_TYPE  , '')     AS AC_TYPE1
		     , ISNULL(C2.DT_TYPE  , '')     AS AC_TYPE2
		     , ISNULL(C3.DT_TYPE  , '')     AS AC_TYPE3
		     , ISNULL(C4.DT_TYPE  , '')     AS AC_TYPE4
		     , ISNULL(C5.DT_TYPE  , '')     AS AC_TYPE5
		     , ISNULL(C6.DT_TYPE  , '')     AS AC_TYPE6
		     , ISNULL(C1.DT_LEN   , 0 )     AS AC_LEN1
		     , ISNULL(C2.DT_LEN   , 0 )     AS AC_LEN2
		     , ISNULL(C3.DT_LEN   , 0 )     AS AC_LEN3
		     , ISNULL(C4.DT_LEN   , 0 )     AS AC_LEN4
		     , ISNULL(C5.DT_LEN   , 0 )     AS AC_LEN5
		     , ISNULL(C6.DT_LEN   , 0 )     AS AC_LEN6
		     , CASE WHEN A.AC_CODE1 = 'A7' AND @BudgProBase = '1' 
		            THEN 'N'
		            ELSE ISNULL(C1.DT_POPUP,'N')
		        END AC_POPUP1
		     , CASE WHEN A.AC_CODE2 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C2.DT_POPUP,'N')
		        END AC_POPUP2
		     , CASE WHEN A.AC_CODE3 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C3.DT_POPUP,'N')
		        END AC_POPUP3
		     , CASE WHEN A.AC_CODE4 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C4.DT_POPUP,'N')
		        END AC_POPUP4
		     , CASE WHEN A.AC_CODE5 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C5.DT_POPUP,'N')
		        END AC_POPUP5
		     , CASE WHEN A.AC_CODE6 = 'A7' AND @BudgProBase = '1'
		            THEN 'N'
		            ELSE ISNULL(C6.DT_POPUP,'N')
		        END AC_POPUP6
		     , ISNULL(B.AC_NAME   , '')     AS PEND_NAME
		     , ISNULL(B.DT_TYPE   , '')     AS PEND_TYPE
		     , ISNULL(B.DT_LEN    ,'0')     AS PEND_LEN
		     , ISNULL(B.DT_POPUP  ,'N')     AS PEND_POPUP
		     , A.COMP_CODE
		     ,  ISNULL(C1.DT_FMT  , 0 )     AS AC_FORMAT1
		     ,  ISNULL(C2.DT_FMT  , 0 )     AS AC_FORMAT2
		     ,  ISNULL(C3.DT_FMT  , 0 )     AS AC_FORMAT3
		     ,  ISNULL(C4.DT_FMT  , 0 )     AS AC_FORMAT4
		     ,  ISNULL(C5.DT_FMT  , 0 )     AS AC_FORMAT5
		     ,  ISNULL(C6.DT_FMT  , 0 )     AS AC_FORMAT6
		  FROM (
				SELECT CASE SUBSTRING(ISNULL(B.SPEC_DIVI,''),1,1)
							WHEN 'F' THEN '2'
							ELSE          '1'
						END AS SEQ
					 , A.SLIP_DIVI
					 , B.*
				  FROM             AGA100T  AS A WITH (NOLOCK)
						INNER JOIN ABA400T  AS B WITH (NOLOCK)  ON  B.COMP_CODE = A.COMP_CODE
																AND B.ACCNT     = A.ACCNT
				 WHERE A.COMP_CODE = #{S_COMP_CODE}
				   AND A.SALE_DIVI = #{SALE_DIVI}
				   AND A.BUSI_TYPE = #{BUSI_TYPE}
		    
				<if test="PROOF_KIND == &quot;56&quot;">
					   AND NOT (A.SLIP_DIVI = '1'
					   AND      'F' != SUBSTRING(ISNULL(B.SPEC_DIVI,''),1,1))
				</if>
				)   			  AS A 
		       LEFT  JOIN ABA200T AS B  WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE AND B.AC_CD  = A.PEND_CODE
		
		       LEFT  JOIN ABA200T AS C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE AND C1.AC_CD = A.AC_CODE1
		       LEFT  JOIN ABA200T AS C2 WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE AND C2.AC_CD = A.AC_CODE2
		       LEFT  JOIN ABA200T AS C3 WITH (NOLOCK) ON C3.COMP_CODE = A.COMP_CODE AND C3.AC_CD = A.AC_CODE3
		       LEFT  JOIN ABA200T AS C4 WITH (NOLOCK) ON C4.COMP_CODE = A.COMP_CODE AND C4.AC_CD = A.AC_CODE4
		       LEFT  JOIN ABA200T AS C5 WITH (NOLOCK) ON C5.COMP_CODE = A.COMP_CODE AND C5.AC_CD = A.AC_CODE5
		       LEFT  JOIN ABA200T AS C6 WITH (NOLOCK) ON C6.COMP_CODE = A.COMP_CODE AND C6.AC_CD = A.AC_CODE6
		
		       LEFT  JOIN ABA200T AS D1 WITH (NOLOCK) ON D1.COMP_CODE = A.COMP_CODE AND D1.AC_CD = A.BOOK_CODE1
		       LEFT  JOIN ABA200T AS D2 WITH (NOLOCK) ON D2.COMP_CODE = A.COMP_CODE AND D2.AC_CD = A.BOOK_CODE2
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		 ORDER BY A.SLIP_DIVI, A.SEQ, A.ACCNT 
	</select>
	<select id="accntCommonService.selectBudgName" parameterType="Map" resultType="rMap">	/* 예산과목명(CODE_NAME) */
		BEGIN
	    DECLARE         @COMP_CODE          NVARCHAR(08)
	
	--  [ 변수 값 할당 ] ------------------------------------------------------------------------------------------
	    SET @COMP_CODE  = #{S_COMP_CODE}
	
	--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
	    SELECT  CODE_NAME
	    FROM    uniLITE.fnGetBudgLevelName(@COMP_CODE, '')
	END
	</select>
	<select id="accntCommonService.fnCustInfo" parameterType="Map" resultType="rMap">	
		--zfa_popupZ.fnCustInfo 			/* 거래처 정보 관련 */
	SELECT A.CUSTOM_CODE 
	     , A.CUSTOM_NAME 
	     , SUBSTRING(A.COMPANY_NUM,1,3) + '-' + 
	       SUBSTRING(A.COMPANY_NUM,4,2) + '-' + 
	       SUBSTRING(A.COMPANY_NUM,6,5)					AS COMPANY_NUM 
	     , A.TOP_NAME          
	     , A.BUSINESS_TYPE     
	     , A.COMP_CLASS        
	     , A.COMP_TYPE         
	     , A.ADDR1             
	     , A.ADDR2             
	     , A.TELEPHON          
	     , A.FAX_NUM           
	     , A.MAIL_ID           
	     , A.WON_CALC_BAS      
	     , A.TO_ADDRESS        
	     , A.TAX_CALC_TYPE     
	     , A.TRANS_CLOSE_DAY   
	     , A.RECEIPT_DAY       
	     , A.TAX_TYPE          
	     , A.VAT_RATE          
	     , A.MONEY_UNIT        
	     , A.BILL_TYPE         
	     , A.SET_METH          
	     , A.CUSTOM_FULL_NAME  
	     , uniLITE.fnCipherDecrypt(A.TOP_NUM     , 'R') AS TOP_NUM 
	     , ISNULL(A.BANK_CODE    , '')					AS BANK_CODE
	     , ISNULL(B.CUSTOM_NAME  , '')                  AS BANK_NAME
	     , uniLITE.fnCipherDecrypt(A.BANKBOOK_NUM, 'B') AS BANKBOOK_NUM 
	     , ISNULL(A.BANKBOOK_NAME, '')					AS BANKBOOK_NAME
	     , ISNULL(A.AGENT_TYPE   , '')					AS AGENT_TYPE
	  FROM           BCM100T AS A WITH (NOLOCK)     
	       LEFT JOIN BCM100T AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE 
	                                           AND B.CUSTOM_TYPE = N'4' 
	                                           AND B.CUSTOM_CODE = A.BANK_CODE 
	 WHERE A.COMP_CODE   = #{S_COMP_CODE}
	   AND A.CUSTOM_CODE = #{CUSTOM_CODE}
	</select>
	<select id="accntCommonService.fnGetBudgetPossAmt" parameterType="Map" resultType="rMap">	
	--zfa_popupZ.fnGetBudgetPossAmt	/* 예산사용가능금액 관련 */
	BEGIN
		DECLARE			@COMP_CODE			NVARCHAR(08)
			          , @BUDG_YYYYMM		NVARCHAR(06)
			          , @DEPT_CODE			NVARCHAR(08)
			          , @BUDG_CODE			NVARCHAR(30)
			          , @BUDG_GUBUN			NVARCHAR(01)
					  , @DRAFT_NO			NVARCHAR(20)
					  , @DRAFT_SEQ			NUMERIC(5, 0)
	
		SET @COMP_CODE		= #{S_COMP_CODE}
		SET @BUDG_YYYYMM	= #{BUDG_YYYYMM}
		SET @DEPT_CODE		= #{DEPT_CODE}
		SET @BUDG_CODE		= #{BUDG_CODE}
		SET @BUDG_GUBUN		= #{BUDG_GUBUN}
		SET	@DRAFT_NO		= #{DRAFT_NO}
		SET @DRAFT_SEQ		= #{DRAFT_SEQ}
	
		IF ( @DRAFT_NO = '' )
			BEGIN
				-- 예산확정정보 참조
				SELECT	uniLITE.fnPossibleBudgAmt(@COMP_CODE, @BUDG_YYYYMM, @DEPT_CODE, @BUDG_CODE, @BUDG_GUBUN) AS BUDG_POSS_AMT
			END
		ELSE
			BEGIN
				-- 예산기안정보 참조
				SELECT	ISNULL(DRAFT_REMIND_AMT, 0) BUDG_POSS_AMT
				FROM	AFB610T WITH (NOLOCK)
				WHERE	COMP_CODE	= @COMP_CODE
				AND		DRAFT_NO	= @DRAFT_NO
				AND		DRAFT_SEQ	= @DRAFT_SEQ
			END
	END
	</select>
	<select id="accntCommonService.fnGetSaveCodeofProject" parameterType="Map" resultType="rMap">		
	--zfa_popupZ.fnGetSaveCodeofProject
BEGIN
	SELECT	ISNULL(A.SAVE_CODE  , '')						AS SAVE_CODE
		  , ISNULL(B.SAVE_NAME  , '')						AS SAVE_NAME
		  , uniLITE.fnCipherDecrypt(B.BANK_ACCOUNT, 'B')	AS BANK_ACCOUNT
		  , ISNULL(B.BANK_CODE  , '')						AS BANK_CODE
		  , ISNULL(C.CUSTOM_NAME, '')						AS BANK_NAME
	FROM	            BCM600T   A  WITH (NOLOCK)
			LEFT  JOIN	AFS100T   B  WITH (NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
												  AND B.SAVE_CODE	= A.SAVE_CODE
			LEFT  JOIN  BCM100T   C  WITH (NOLOCK) ON C.COMP_CODE	= B.COMP_CODE
												  AND C.CUSTOM_CODE	= B.BANK_CODE
	WHERE	A.COMP_CODE	= #{S_COMP_CODE}
	AND		A.PJT_CODE	= #{PJT_CODE}
END
	</select>	
	<select id="accntCommonService.fnGetRefCode" parameterType="Map" resultType="rMap">
		--zfa_popupZ.fnGetRefCode 
		SELECT ISNULL( ${ADD_QUERY1} ,'')               
		  FROM BSA100T WITH (NOLOCK)            
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = #{MAIN_CODE}  
		   AND SUB_CODE != N'$'                  
		   AND SUB_CODE  = #{SUB_CODE}
	     <if test="@foren.Ognl@isNotEmpty(ADD_QUERY2)"> 
		   AND #{ADD_QUERY2} 
		 </if>
	</select>
	<select id="accntCommonService.fnGetExchgRateQ1" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKr[fnGetExchgRate] Query1
	    SELECT ISNULL(EXCHG_BASE,'1') EXCHG_BASE
	      FROM ABA100T WITH (NOLOCK)
	     WHERE COMP_CODE = #{S_COMP_CODE}
	</select>
	<select id="accntCommonService.fnGetExchgRateQ2" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKr[fnGetExchgRate] Query2"
    SELECT ISNULL(BASE_EXCHG,0.0) BASE_EXCHG
      FROM BCM510T WITH (NOLOCK)
     WHERE COMP_CODE  = #{S_COMP_CODE}
       AND AC_YYYYMM  = LEFT(#{AC_DATE},4)
       AND MONEY_UNIT = #{MONEY_UNIT}
       AND EXCHG_DIVI = #{EXCHG_DIVI}
       AND AC_DATE    = #{AC_DATE}
       AND ISNULL(BASE_EXCHG,0.0) != 0
	</select>
	<select id="accntCommonService.fnGetExchgRateQ3" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKr[fnGetExchgRate]
        SELECT ISNULL(BASE_EXCHG,0.0) BASE_EXCHG
          FROM BCM510T WITH (NOLOCK)
         WHERE COMP_CODE  = #{S_COMP_CODE}
           AND AC_YYYYMM  = LEFT(#{AC_DATE},4)
           AND MONEY_UNIT = #{MONEY_UNIT}
           AND EXCHG_DIVI = #{EXCHG_DIVI}
           AND AC_DATE IN (
                           SELECT MAX(AC_DATE)
                             FROM BCM510T WITH (NOLOCK)
                            WHERE COMP_CODE  = #{S_COMP_CODE}
                              AND AC_YYYYMM  = LEFT(#{AC_DATE},4)
                              AND MONEY_UNIT = #{MONEY_UNIT}
                              AND EXCHG_DIVI = #{EXCHG_DIVI}
                              AND AC_DATE    &lt; #{AC_DATE}
                              AND ISNULL(BASE_EXCHG,0.0) != 0
                           )
	</select>
	
	<select id="accntCommonService.fnGetAmtPoint" parameterType="Map" resultType="rMap">
		SELECT  ISNULL(AMT_POINT,'') as AMT_POINT
		  FROM ABA100T WITH (NOLOCK)   
		 WHERE COMP_CODE = #{S_COMP_CODE}
	</select>
	
	<select id="accntCommonService.fnGetCommon" parameterType="Map" resultType="rMap">
		--popupZ.vbs[fnGetCommon]
		SELECT ISNULL(${aParam0}, '') AS EXCEPTION_JUMP
		  FROM BSA100T WITH(NOLOCK)
		 WHERE MAIN_CODE = #{aParam1}
		   AND SUB_CODE	!= '$'
		   AND SUB_CODE  = #{aParam2}
		<if test="@foren.Ognl@isNotEmpty(aParam3)">
		   AND aParam3
		</if>
		<if test="@foren.Ognl@isNotEmpty(aParam4)">
		   AND COMP_CODE = #{aParam4}
		</if>
	</select>
	
	<select id="accntCommonService.getPersonName" parameterType="Map" resultType="rMap">
	   SELECT ISNULL(NAME,'') AS PERSON_NAME 
         FROM HUM100T WITH(NOLOCK)
        WHERE COMP_CODE   = #{S_COMP_CODE} 
          AND PERSON_NUMB = #{S_PERSON_NUMB}
	</select>
	<select id="accntCommonService.selectGroupAccntCodes" parameterType="Map" resultType="rMap">
	   SELECT ACCNT
           ,ACCNT_NAME
           ,GROUP_YN
         FROM ABA400T WITH(NOLOCK)
        WHERE COMP_CODE   = #{S_COMP_CODE} 
          AND GROUP_YN = 'Y'
	</select>	
	
	<select id="accntCommonService.setMakeSale_J" parameterType="Map" resultType="Map">
		/* JBILL  */
       SELECT MAKE_SALE 
         FROM BSA210T 
        WHERE COMP_CODE = #{S_COMP_CODE}
          AND TREE_CODE = #{COST_DEPT_CD}
    </select>
        
	<select id="accntCommonService.fnGetDocNo" parameterType="Map" resultType="rMap">
		--KOCIS  
        SELECT 
            ISNULL(MAX(DOC_NO),0) + 1 AS DOC_NO
          FROM ${PG_ID}
         WHERE COMP_CODE = #{S_COMP_CODE} 
           AND DEPT_CODE = #{S_DEPT_CODE}
    </select>
    
    
    <select id="accntCommonService.fnGetBudgetPossAmt_Kocis" parameterType="Map" resultType="rMap">   
/* 예산사용가능금액 관련 KOCIS */
    BEGIN
        DECLARE         @COMP_CODE          NVARCHAR(08)
                      , @BUDG_YYYYMM        NVARCHAR(06)
                      , @DEPT_CODE          NVARCHAR(08)
                      , @BUDG_CODE          NVARCHAR(30)
                      , @BUDG_GUBUN         NVARCHAR(01)
                      , @ACCT_NO            NVARCHAR(10)
                      , @DRAFT_NO           NVARCHAR(20)
                      , @DRAFT_SEQ          NUMERIC(5, 0)
    
        SET @COMP_CODE      = #{S_COMP_CODE}
        SET @BUDG_YYYYMM    = #{BUDG_YYYYMM}
        SET @DEPT_CODE      = #{DEPT_CODE}
        SET @BUDG_CODE      = #{BUDG_CODE}
        SET @BUDG_GUBUN     = #{BUDG_GUBUN}
        SET @ACCT_NO        = #{ACCT_NO}
        SET @DRAFT_NO       = #{DRAFT_NO}
        SET @DRAFT_SEQ      = #{DRAFT_SEQ}
    
        IF ( @DRAFT_NO = '' )
            BEGIN
                -- 예산확정정보 참조
                SELECT  uniLITE.fnGetBudgetPossAmt_Kocis(@COMP_CODE, @BUDG_YYYYMM, @DEPT_CODE, @BUDG_CODE, @BUDG_GUBUN, @ACCT_NO) AS BUDG_POSS_AMT
            END
        ELSE
            BEGIN
                -- 예산기안정보 참조
                SELECT  ISNULL(DRAFT_REMIND_AMT, 0) BUDG_POSS_AMT
                FROM    AFB610T WITH (NOLOCK)
                WHERE   COMP_CODE   = @COMP_CODE
                AND     DRAFT_NO    = @DRAFT_NO
                AND     DRAFT_SEQ   = @DRAFT_SEQ
            END
    END
    </select>
    
    <select id="accntCommonService.fnGWUseYN" parameterType="Map" resultType="rMap">   
    -- 그룹웨어 사용여부
    SELECT ISNULL(SUB_CODE, '00') AS SUB_CODE
      FROM BSA100T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND MAIN_CODE = 'A099'
       AND REF_CODE1 = 'Y'
    </select>
    
    <select id="accntCommonService.fnGWUrl" parameterType="Map" resultType="rMap">   
    -- 그룹웨어 결재상신경로
    SELECT ISNULL(SUB_CODE, '')  AS SUB_CODE
         , ISNULL(REF_CODE1, '') AS REF_CODE1
      FROM BSA100T
     WHERE COMP_CODE  = #{S_COMP_CODE}
       AND MAIN_CODE  = 'A198'
       AND SUB_CODE  != '$'
    </select>
    <select id="accntCommonService.getForeignProfit" parameterType="Map" resultType="rMap">
        SELECT ACCNT AS ACCNT_CD           
          FROM ABA400T WITH (NOLOCK) 
         WHERE COMP_CODE  = #{S_COMP_CODE}
           AND PROFIT_DIVI =#{PROFIT_DIVI}
           AND SLIP_SW    = N'Y'
     </select>
     
    <select id="accntCommonService.fnGetDeptcodeCode" parameterType="Map" resultType="rMap">
    	-- 접속자 기본 부서 세팅용 쿼리		 
		 IF  EXISTS (
		       SELECT TOP 1 TREE_CODE
		         FROM      BSA300T A
		        INNER JOIN BSA210T B ON B.COMP_CODE = A.COMP_CODE
		                            AND B.TREE_CODE = A.DEPT_CODE
		         WHERE A.COMP_CODE = #{S_COMP_CODE}
		           AND A.USER_ID   = #{S_USER_ID}
			  )
			BEGIN
			  	SELECT B.TREE_CODE
					 , B.TREE_NAME
			   	  FROM      BSA300T A
			     INNER JOIN BSA210T B ON B.COMP_CODE = A.COMP_CODE
				  				     AND B.TREE_CODE = A.DEPT_CODE
			     WHERE A.COMP_CODE = #{S_COMP_CODE}
				   AND A.USER_ID   = #{S_USER_ID}
			END
		ELSE
			BEGIN 
				SELECT TOP 1 TREE_CODE
				           , TREE_NAME
				  FROM BSA210T WITH (NOLOCK)
				 WHERE COMP_CODE = #{S_COMP_CODE}
				 ORDER BY TREE_CODE
			END

     </select>
    
</mapper>