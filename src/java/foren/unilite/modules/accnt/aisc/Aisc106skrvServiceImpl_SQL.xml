<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aisc106skrvServiceImpl">
	<select id="aisc106skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	--aisc106skrv
    BEGIN
        DECLARE @COMP_CODE      NVARCHAR(08)        --(필수) 법인코드
              , @FR_YYMM        NVARCHAR(06)        --(필수) FROM 상각년월
              , @TO_YYMM        NVARCHAR(06)        --(필수) TO   상각년월
              , @ACCNT          NVARCHAR(16)        --(선택) 계정코드
              , @ACCNT_NAME     NVARCHAR(50)        --(선택) 계정명
              , @DPR_STS2       NVARCHAR(01)        --(선택) 상각완료여부
              , @FR_ASST        NVARCHAR(15)        --(선택) FROM 자산코드
              , @TO_ASST        NVARCHAR(15)        --(선택) TO   자산코드
              , @FR_PJT_CODE    NVARCHAR(20)        --(선택) FROM 프로젝트코드
              , @TO_PJT_CODE    NVARCHAR(20)        --(선택) TO   프로젝트코드
              , @FR_DEPT_CODE   NVARCHAR(08)        --(선택) FROM 부서코드
              , @TO_DEPT_CODE   NVARCHAR(08)        --(선택) TO   부서코드
    
              , @AsstDivi       NVARCHAR(01)        --자산구분(1:고정자산, 2:부외자산)
    
        SET     @COMP_CODE      = #{S_COMP_CODE}  
        SET     @FR_YYMM        = #{DVRY_DATE_FR} 
        SET     @TO_YYMM        = #{DVRY_DATE_TO} 
        SET     @ACCNT          = #{ACCNT}        
        SET     @ACCNT_NAME     = #{ACCNT_NAME}   
        SET     @DPR_STS2       = #{DPR_STS}      
        SET     @FR_ASST        = #{ASSET_CODE_FR}
        SET     @TO_ASST        = #{ASSET_CODE_TO}
        SET     @FR_PJT_CODE    = #{PJT_CODE_FR}  
        SET     @TO_PJT_CODE    = #{PJT_CODE_TO}  
        SET     @FR_DEPT_CODE   = #{DEPT_CODE_FR} 
        SET     @TO_DEPT_CODE   = #{DEPT_CODE_TO} 
    
        SET     @AsstDivi       = N'1'
    
        SET     NOCOUNT    ON
        SET     ARITHABORT ON
    
        --0. 임시테이블 삭제
        IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id=object_id('tempdb..#AISC106'))
            DROP TABLE #AISC106
    
        --1. 감가상각비명세 목록
        SELECT 
                T.COMP_CODE
             ,  T.ACCNT
             ,  T.ACCNT_NAME
             ,  T.ASST
             ,  T.ASST_NAME
             ,  T.ACQ_AMT_I
             ,  M1.CODE_NAME                        AS DEP_CTL
             ,  T.DRB_YEAR
             ,  M2.CODE_NAME                        AS DPR_STS2
             ,  T.ACQ_Q
             ,  T.ACQ_DATE
             ,  T.BA_BALN_I         * T.MULTIPLY    AS BA_BALN_I            --취득가액
             ,  T.CT_INCREASE_I     * T.MULTIPLY    AS CT_INCREASE_I        --당기증가액
             ,  T.CT_REDUCE_I       * T.MULTIPLY    AS CT_REDUCE_I          --당기감소액
             ,  T.ASST_VARI_AMT_I   * T.MULTIPLY    AS ASST_VARI_AMT_I      --재평가후자산증감
             ,  T.PT_DPR_TOT_I      * T.MULTIPLY    AS PT_DPR_TOT_I         --충당금누계액(전기말상각누계액)
             ,  T.PT_DMGLOS_TOT_I   * T.MULTIPLY    AS PT_DMGLOS_TOT_I      --손상차손누계액(전기말손상차손누계액)
             ,  T.CT_BALN_I         * T.MULTIPLY    AS CT_BALN_I            --미상각잔액

             ,  T.CT_DPR_I          * T.MULTIPLY    AS CT_DPR_I             --당기상각액
             ,  T.CT_DPR_TOT_I      * T.MULTIPLY    AS CT_DPR_TOT_I         --당기말상각누계액
             ,  T.CT_DMGLOS_TOT_I   * T.MULTIPLY    AS CT_DMGLOS_TOT_I      --당기말손상차손누계액
             ,  T.FL_BALN_I         * T.MULTIPLY    AS FL_BALN_I            --차기이월액
             ,  T.COST_POOL_NAME
             ,  T.COST_DIRECT
             ,  T.ITEMLEVEL1_NAME
             ,  T.ITEMLEVEL2_NAME
             ,  T.ITEMLEVEL3_NAME
             ,  '' AS REMARK
        INTO    #AISC106
        FROM    (
                SELECT  A.COMP_CODE
                     ,  A.ACCNT
                     ,  N1.ACCNT_NAME
                     ,  A.ASST
                     ,  A.ASST_NAME
                     ,  A.ACQ_AMT_I
                     ,  CASE WHEN N1.ACCNT_SPEC = 'E' THEN (-1) ELSE 1 END  AS MULTIPLY            --계정특성('E'이면 국고보조금차감 처리)
                     ,  A.DEP_CTL
                     ,  A.DRB_YEAR
                     ,  CASE WHEN ISNULL(A.DPR_STS2,'N') = 'Y' AND ISNULL(A.DPR_YYYYMM,'999999') &lt;= @TO_YYMM
                             THEN 'Y' 
                             ELSE 'N'
                        END AS DPR_STS2
                     ,  A.ACQ_Q
                     ,  A.ACQ_DATE
                    ---------------------------------------------------------------------------------
                    --  상각대상금액 : 취득가액(a)
                    ---------------------------------------------------------------------------------
                     ,  ISNULL(A.ACQ_AMT_I, 0)
                        + (ISNULL(A.FI_CAPI_TOT_I    , 0) - ISNULL(S1.TM_CPT_I     , 0))
                        - (ISNULL(A.FI_SALE_TOT_I    , 0) - ISNULL(S1.TM_SALE_I    , 0))
                        - (ISNULL(A.FI_SALE_DPR_TOT_I, 0) - ISNULL(S1.TM_REDUCE_I  , 0))
                        - (CASE WHEN ISNULL(S4.ASST_VARI_AMT_I, 0) != 0
                                THEN ISNULL(A.ACQ_AMT_I, 0) - ISNULL(A.FI_REVAL_TOT_I, 0) - ISNULL(S1.ASST_VARI_AMT_I, 0)
                                ELSE 0
                           END)  AS BA_BALN_I
                    ---------------------------------------------------------------------------------
                    --  상각대상금액 : 당기증가액(b)
                    ---------------------------------------------------------------------------------
                     ,  ISNULL(S2.TM_CPT_I, 0) AS CT_INCREASE_I
                    ---------------------------------------------------------------------------------
                    --  상각대상금액 : 당기감소액(c)
                    ---------------------------------------------------------------------------------
                     ,  ISNULL(S2.TM_SALE_I, 0) + ISNULL(S2.TM_REDUCE_I, 0) AS CT_REDUCE_I
                    ---------------------------------------------------------------------------------
                    --  상각대상금액 : 재평가후자산증감
                    ---------------------------------------------------------------------------------
                     ,  ISNULL(S2.ASST_VARI_AMT_I, 0)   AS ASST_VARI_AMT_I
                    ---------------------------------------------------------------------------------
                    --  상각대상금액 : 충당금누계액(전기말상각누계액)(d)
                    ---------------------------------------------------------------------------------
                     ,  CASE WHEN ISNULL(WASTE_SW,'N') = 'Y' AND ISNULL(WASTE_YYYYMM,'999999') &lt;= @FR_YYMM
                             THEN 0
                             ELSE ISNULL(A.FI_DPR_TOT_I,0) - (ISNULL(S1.TM_DPR_I, 0) - ISNULL(S1.TM_REDUCE_I, 0) - ISNULL(S1.REVAL_REDUCE_I, 0))
                        END AS PT_DPR_TOT_I
                    ---------------------------------------------------------------------------------
                    --  상각대상금액 : 손상차손누계액(전기말손상차손누계액)(e)
                    ---------------------------------------------------------------------------------
                     ,  CASE WHEN ISNULL(WASTE_SW,'N') = 'Y' AND ISNULL(WASTE_YYYYMM,'999999') &lt;= @FR_YYMM
                             THEN 0
                             ELSE ISNULL(A.FI_DMGLOS_TOT_I, 0) - (ISNULL(S1.DMGLOS_EX_I, 0) - ISNULL(S1.DMGLOS_IN_I, 0))
                        END AS PT_DMGLOS_TOT_I
                    ---------------------------------------------------------------------------------
                    --  상각대상금액 : 미상각액(f=a+b-c-d-e)
                    ---------------------------------------------------------------------------------
                     ,  CONVERT(NUMERIC(30, 6), 0)      AS CT_BALN_I
                    ---------------------------------------------------------------------------------
                    --  상각액 : 당기상각액(g)
                    ---------------------------------------------------------------------------------
                     ,  ISNULL(S2.TM_DPR_I, 0)  AS CT_DPR_I
                    ---------------------------------------------------------------------------------
                    --  상각액 : 당기말충당금(당기말상각누계액)(h= d+g)
                    ---------------------------------------------------------------------------------
                     ,  CASE WHEN ISNULL(WASTE_SW,'N') = 'Y' AND ISNULL(WASTE_YYYYMM,'999999') &lt;= @TO_YYMM
                             THEN 0
                             ELSE ISNULL(A.FI_DPR_TOT_I   , 0) - (ISNULL(S1.TM_DPR_I, 0) - ISNULL(S1.TM_REDUCE_I, 0) - ISNULL(S1.REVAL_REDUCE_I, 0))
                                  + ISNULL(S2.TM_DPR_I    , 0)
                                  - (ISNULL(S2.TM_REDUCE_I, 0) + ISNULL(S2.REVAL_REDUCE_I, 0))
                        END AS CT_DPR_TOT_I
                    -------------------------------------------------------------------
                    --  상각액 : 당기말손상차손(누계액)(i)
                    -------------------------------------------------------------------
                     ,  CASE WHEN ISNULL(WASTE_SW,'N') = 'Y' AND ISNULL(WASTE_YYYYMM,'999999') &lt;= @TO_YYMM
                             THEN 0
                             ELSE ISNULL(A.FI_DMGLOS_TOT_I, 0) - (ISNULL(S1.DMGLOS_EX_I, 0) - ISNULL(S1.DMGLOS_IN_I, 0))
                                  + (ISNULL(S2.DMGLOS_EX_I, 0) - ISNULL(S2.DMGLOS_IN_I, 0))
                        END AS CT_DMGLOS_TOT_I
                    ---------------------------------------------------------------------------------
                    --  상각액 : 차기이월액(취득가액 + 당기증가액 - 당기감소액 - 당기말충당금 - 당기말손상차손)(j=a+b-c-h-i)
                    ---------------------------------------------------------------------------------
                     ,  CONVERT(NUMERIC(30, 6), 0)   AS FL_BALN_I
                     ,  N3.COST_POOL_NAME
                     ,  CASE WHEN ISNULL(A.COST_DIRECT, '') = 'Y' THEN N4.CODE_NAME
                            ELSE ''
                        END                          AS COST_DIRECT
                     ,  M1.LEVEL_NAME                AS ITEMLEVEL1_NAME
                     ,  M2.LEVEL_NAME                AS ITEMLEVEL2_NAME
                     ,  M3.LEVEL_NAME                AS ITEMLEVEL3_NAME
                FROM           AISS300T AS A  WITH (NOLOCK)
                    LEFT  JOIN AISS500T AS C  WITH (NOLOCK) ON  C.COMP_CODE          = A.COMP_CODE
                                                            AND C.ASST               = A.ASST
                                                            AND C.ALTER_DIVI         = '8'  --분할
                                                            AND C.ALTER_DATE        &gt;= @FR_YYMM
                    LEFT  JOIN (SELECT  COMP_CODE
                                     ,  ASST
                                     ,  SUM(ISNULL(TM_DPR_I       , 0)) AS TM_DPR_I
                                     ,  SUM(ISNULL(TM_CPT_I       , 0)) AS TM_CPT_I
                                     ,  SUM(ISNULL(TM_SALE_I      , 0)) AS TM_SALE_I
                                     ,  SUM(ISNULL(TM_REDUCE_I    , 0)) AS TM_REDUCE_I
                                     ,  SUM(ISNULL(REVAL_REDUCE_I , 0)) AS REVAL_REDUCE_I
                                     ,  SUM(ISNULL(ASST_VARI_AMT_I, 0)) AS ASST_VARI_AMT_I
                                     ,  SUM(ISNULL(DMGLOS_EX_I    , 0)) AS DMGLOS_EX_I
                                     ,  SUM(ISNULL(DMGLOS_IN_I    , 0)) AS DMGLOS_IN_I
                                FROM  AISC100T WITH (NOLOCK)
                                WHERE COMP_CODE = @COMP_CODE
                                AND   DPR_YYMM &gt;= @FR_YYMM
                                AND   ((ASST   &gt;= @FR_ASST  AND @FR_ASST != '') OR (@FR_ASST = ''))
                                AND   ((ASST   &lt;= @TO_ASST  AND @TO_ASST != '') OR (@TO_ASST = ''))
                                GROUP BY COMP_CODE, ASST
                               )        AS S1               ON  S1.COMP_CODE         = A.COMP_CODE
                                                            AND S1.ASST              = A.ASST
                    LEFT  JOIN (SELECT  COMP_CODE
                                     ,  ASST
                                     ,  SUM(ISNULL(TM_DPR_I       , 0)) AS TM_DPR_I
                                     ,  SUM(ISNULL(TM_CPT_I       , 0)) AS TM_CPT_I
                                     ,  SUM(ISNULL(TM_SALE_I      , 0)) AS TM_SALE_I
                                     ,  SUM(ISNULL(TM_REDUCE_I    , 0)) AS TM_REDUCE_I
                                     ,  SUM(ISNULL(ASST_VARI_AMT_I, 0)) AS ASST_VARI_AMT_I
                                     ,  SUM(ISNULL(REVAL_REDUCE_I , 0)) AS REVAL_REDUCE_I
                                     ,  SUM(ISNULL(DMGLOS_EX_I    , 0)) AS DMGLOS_EX_I
                                     ,  SUM(ISNULL(DMGLOS_IN_I    , 0)) AS DMGLOS_IN_I
                                FROM  AISC100T WITH (NOLOCK)
                                WHERE COMP_CODE = @COMP_CODE
                                AND   DPR_YYMM &gt;= @FR_YYMM
                                AND   DPR_YYMM &lt;= @TO_YYMM
                                AND   ((ASST   &gt;= @FR_ASST  AND @FR_ASST != '') OR (@FR_ASST = ''))
                                AND   ((ASST   &lt;= @TO_ASST  AND @TO_ASST != '') OR (@TO_ASST = ''))
                                GROUP BY COMP_CODE, ASST
                               )        AS S2               ON  S2.COMP_CODE         = A.COMP_CODE
                                                            AND S2.ASST              = A.ASST
                    LEFT  JOIN (SELECT  COMP_CODE
                                     ,  ASST
                                     ,  SUM(ISNULL(ALTER_AMT_I, 0)) AS ALTER_AMT_I
                                FROM  AISS500T WITH (NOLOCK)
                                WHERE COMP_CODE   = @COMP_CODE
                                AND   ALTER_DIVI  = '2'
                                AND   ALTER_DATE &gt;= @FR_YYMM + '01'
                                AND   ALTER_DATE &lt;= @TO_YYMM + '31'
                                AND   ((ASST     &gt;= @FR_ASST  AND @FR_ASST != '') OR (@FR_ASST = ''))
                                AND   ((ASST     &lt;= @TO_ASST  AND @TO_ASST != '') OR (@TO_ASST = ''))
                                GROUP BY COMP_CODE, ASST
                               )        AS S3               ON  S3.COMP_CODE         = A.COMP_CODE
                                                            AND S3.ASST              = A.ASST
                    LEFT  JOIN (SELECT  COMP_CODE
                                     ,  ASST
                                     ,  SUM(ISNULL(ASST_VARI_AMT_I, 0)) AS ASST_VARI_AMT_I
                                FROM  AISC100T WITH (NOLOCK)
                                WHERE COMP_CODE = @COMP_CODE
                                AND   DPR_YYMM  &lt; @FR_YYMM
                                GROUP BY COMP_CODE, ASST
                               )        AS S4               ON  S4.COMP_CODE         = A.COMP_CODE
                                                            AND S4.ASST              = A.ASST
                    LEFT  JOIN ABA400T  AS N1 WITH (NOLOCK) ON  N1.COMP_CODE         = A.COMP_CODE
                                                            AND N1.ACCNT             = A.ACCNT
                    LEFT  JOIN BOR120T  AS N2 WITH (NOLOCK) ON  N2.COMP_CODE         = A.COMP_CODE
                                                            AND N2.DIV_CODE          = A.DIV_CODE
                    LEFT  JOIN CBM600T  AS N3 WITH (NOLOCK) ON  N3.COMP_CODE         = A.COMP_CODE
                                                            AND N3.COST_POOL_CODE    = A.COST_POOL_CODE
                    LEFT  JOIN BSA100T  AS N4 WITH (NOLOCK) ON  N4.COMP_CODE         = A.COMP_CODE
                                                            AND N4.MAIN_CODE         = N'B010'
                                                            AND N4.SUB_CODE          = A.COST_DIRECT
                    LEFT  JOIN BPR000T  AS M1 WITH (NOLOCK) ON  M1.COMP_CODE         = A.COMP_CODE
                                                            AND M1.LEVEL1           != '*'
                                                            AND M1.LEVEL1            = A.ITEM_LEVEL1
                                                            AND M1.LEVEL2            = '*'
                                                            AND M1.LEVEL3            = '*'
                    LEFT  JOIN BPR000T  AS M2 WITH (NOLOCK) ON  M2.COMP_CODE         = A.COMP_CODE
                                                            AND M2.LEVEL1           != '*'
                                                            AND M2.LEVEL1            = A.ITEM_LEVEL1
                                                            AND M2.LEVEL2           != '*'
                                                            AND M2.LEVEL2            = A.ITEM_LEVEL2
                                                            AND M2.LEVEL3            = '*'
                    LEFT  JOIN BPR000T  AS M3 WITH (NOLOCK) ON  M3.COMP_CODE         = A.COMP_CODE
                                                            AND M3.LEVEL1           != '*'
                                                            AND M3.LEVEL1            = A.ITEM_LEVEL1
                                                            AND M3.LEVEL2           != '*'
                                                            AND M3.LEVEL2            = A.ITEM_LEVEL2
                                                            AND M3.LEVEL3           != '*'
                                                            AND M3.LEVEL3            = A.ITEM_LEVEL3
                WHERE A.COMP_CODE          = @COMP_CODE
                AND   A.ASST_DIVI          = @AsstDivi
                AND   A.DPR_STS           != '5'  -- 명세제외는 안나오도록 함
                <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">     
                    AND A.DIV_CODE IN
                    <foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
                        #{item}
                    </foreach>         
                </if>
                AND   ((A.ACCNT         LIKE       @ACCNT      + '%' AND @ACCNT        != '') OR (@ACCNT        = ''))
                AND   ((N1.ACCNT_NAME   LIKE '%' + @ACCNT_NAME + '%' AND @ACCNT_NAME   != '') OR (@ACCNT_NAME   = ''))
                AND   ((A.DPR_STS2         = @DPR_STS2               AND @DPR_STS2     != '') OR (@DPR_STS2     = ''))
                AND   ((A.ASST            &gt;= @FR_ASST                AND @FR_ASST      != '') OR (@FR_ASST      = ''))
                AND   ((A.ASST            &lt;= @TO_ASST                AND @TO_ASST      != '') OR (@TO_ASST      = ''))
                AND   ((A.PJT_CODE        &gt;= @FR_PJT_CODE            AND @FR_PJT_CODE  != '') OR (@FR_PJT_CODE  = ''))
                AND   ((A.PJT_CODE        &lt;= @TO_PJT_CODE            AND @TO_PJT_CODE  != '') OR (@TO_PJT_CODE  = ''))
                AND   ((A.DEPT_CODE       &gt;= @FR_DEPT_CODE           AND @FR_DEPT_CODE != '') OR (@FR_DEPT_CODE = ''))
                AND   ((A.DEPT_CODE       &lt;= @TO_DEPT_CODE           AND @TO_DEPT_CODE != '') OR (@TO_DEPT_CODE = ''))
    
                AND   LEFT(A.USE_DATE, 6)          &lt;= @TO_YYMM
                AND   (ISNULL(A.WASTE_YYYYMM, '' )  = ''       OR A.WASTE_YYYYMM &gt;= @FR_YYMM)
                AND   (ISNULL(A.PAT_YN      , 'N') != 'Y'      OR C.ASST         IS NULL)
                ) T
                LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE   = T.COMP_CODE
                                                     AND M1.MAIN_CODE   = 'A036'
                                                     AND M1.SUB_CODE    = T.DEP_CTL
                LEFT  JOIN BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE   = T.COMP_CODE
                                                     AND M2.MAIN_CODE   = 'A035'
                                                     AND M2.SUB_CODE    = T.DPR_STS2
        ORDER BY T.ACCNT, T.ASST
    
        --2. 미상각잔액, 차기이월액 계산
        DECLARE @CTBalnI    NUMERIC(30, 6)
              , @FLBalnI    NUMERIC(30, 6)
        SET     @CTBalnI = 0
        SET     @FLBalnI = 0
    
        UPDATE #AISC106
        SET     @CTBalnI  = ISNULL(BA_BALN_I, 0) + ISNULL(CT_INCREASE_I, 0) - ISNULL(CT_REDUCE_I, 0) - ISNULL(PT_DPR_TOT_I, 0) - ISNULL(PT_DMGLOS_TOT_I, 0)
          ,     @FLBalnI  = ISNULL(BA_BALN_I, 0) + ISNULL(CT_INCREASE_I, 0) - ISNULL(CT_REDUCE_I, 0) - ISNULL(CT_DPR_TOT_I, 0) - ISNULL(CT_DMGLOS_TOT_I, 0)
          ,     CT_BALN_I = @CTBalnI
          ,     FL_BALN_I = @FLBalnI
    
        SET     NOCOUNT OFF
        SET     ARITHABORT OFF
    
        --3. 조회결과 자료 리턴
        SELECT 
                COMP_CODE
             ,  ACCNT
             ,  ACCNT_NAME
             ,  ASST
             ,  ASST_NAME
             ,  ACQ_AMT_I       --취득가액
             ,  DEP_CTL
             ,  DRB_YEAR
             ,  DPR_STS2
             ,  ACQ_Q
             ,  ACQ_DATE
             ,  BA_BALN_I        --상각대상금액 : 취득가액(a)
             ,  CT_INCREASE_I    --상각대상금액 : 당기증가액(b)
             ,  CT_REDUCE_I      --상각대상금액 : 당기감소액(c)
             ,  ASST_VARI_AMT_I  --재평가후자산증감
             ,  PT_DPR_TOT_I     --상각대상금액 : 충당금누계액(전기말상각누계액)(d)
             ,  PT_DMGLOS_TOT_I  --상각대상금액 : 손상차손누계액(전기말손상차손누계액)(e)
             ,  CT_BALN_I        --미상각액(f=a+b-c-d-e)
             ,  CT_DPR_I         --당기상각액(g)
             ,  CT_DPR_TOT_I     --당기말충당금(당기말상각누계액)(h= d+g)
             ,  CT_DMGLOS_TOT_I  --당기말손상차손(누계액)(i)
             ,  FL_BALN_I        --차기이월액(취득가액 + 당기증가액 - 당기감소액 - 당기말충당금 - 당기말손상차손)(j=a+b-c-h-i)
             --,  COST_POOL_NAME
             --,  COST_DIRECT
             --,  ITEMLEVEL1_NAME
             --,  ITEMLEVEL2_NAME
             --,  ITEMLEVEL3_NAME
             --,  REMARK
          FROM  #AISC106 WITH (NOLOCK)
         ORDER  BY ACCNT, ASST
    END 

	</select>
</mapper>