<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agb140skrService">
	
	<select id="agb140skrService.swhere1" parameterType="Map" resultType="rMap">
		/* 거래합계 미출력 where */
		<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
				  AND     A.DIV_CODE IN
				<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
				 #{item}
				</foreach>									
  		</if>
  		<if test="@foren.Ognl@isNotEmpty(BOOK_CODE1)">
					  AND BOOK_DATA1      = #{BOOK_CODE1}
  		</if>
	  	<if test="@foren.Ognl@isNotEmpty(BOOK_CODE2)">
					  AND BOOK_DATA2      = #{BOOK_CODE2}
  		</if>
  		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
					  AND DEPT_CODE      &gt;= #{DEPT_CODE_FR}
  		</if>
  		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
					  AND DEPT_CODE      &lt;= #{DEPT_CODE_FR}
  		</if>	
	</select>
	
	
	<select id="agb140skrService.swhere2" parameterType="Map" resultType="rMap">
		/* 거래합계 출력 where */
		<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
				  AND     A.DIV_CODE IN
				<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
				 #{item}
				</foreach>									
  		</if>
  		<if test="@foren.Ognl@isNotEmpty(BOOK_CODE1)">
					  AND BOOK_DATA1      = #{BOOK_CODE1}
  		</if>
	  	<if test="@foren.Ognl@isNotEmpty(BOOK_CODE2)">
					  AND BOOK_DATA2      = #{BOOK_CODE2}
  		</if>
  		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
					  AND DEPT_CODE      &gt;= #{DEPT_CODE_FR}
  		</if>
  		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
					  AND DEPT_CODE      &lt;= #{DEPT_CODE_FR}
  		</if>
	</select>
	
	
	<select id="agb140skrService.selectList" parameterType="Map" resultType="rMap">
		<if test="SUM == &quot;1&quot;">
			/* 거래합계 미출력 */
			
			--UArpt02Krv.CAGB140SKR, [FNAGB140Q] Query3
			    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
			    SELECT * FROM (SELECT 
			    					  ACCNT
			                        , BOOK_DATA1
			                        , (SELECT AC_NAME 
			                             FROM ABA200TV  WITH (NOLOCK)
			                            WHERE COMP_CODE = #{S_COMP_CODE}
			                              AND AC_CODE   = A.BOOK_CODE1
			                              AND AC_DATA   = A.BOOK_DATA1) AS BOOK_NAME1
			                        , BOOK_DATA2
			                        , (SELECT AC_NAME 
			                             FROM ABA200TV  WITH (NOLOCK)
			                            WHERE COMP_CODE = #{S_COMP_CODE}
			                              AND AC_CODE   = A.BOOK_CODE2 
			                              AND AC_DATA   = A.BOOK_DATA2) AS BOOK_NAME2
			                        , SUM(CASE WHEN A.AC_DATE &gt;= #{START_DATE} AND AC_DATE &lt; #{FR_DATE}
			                                   THEN CASE A.JAN_DIVI
			                                             WHEN '1' THEN ISNULL(A.DR_AMT_I,0) - ISNULL(A.CR_AMT_I,0)
			                                             WHEN '2' THEN ISNULL(A.CR_AMT_I,0) - ISNULL(A.DR_AMT_I,0)
			                                              END
			                                        ELSE 0 
			                               END) AS IWAL_AMT_I
			                        , SUM(CASE WHEN A.AC_DATE BETWEEN #{FR_DATE} AND #{TO_DATE}
			                                   THEN ISNULL(A.DR_AMT_I,0)
			                                   ELSE 0 
			                               END) AS DR_AMT_I
			                        , SUM(CASE WHEN A.AC_DATE BETWEEN #{FR_DATE} AND #{TO_DATE}
			                                   THEN ISNULL(A.CR_AMT_I,0)
			                                   ELSE 0 
			                               END) AS CR_AMT_I
			                        , SUM(CASE WHEN A.AC_DATE BETWEEN #{START_DATE} AND #{TO_DATE}
			                                   THEN CASE A.JAN_DIVI 
			                                             WHEN '1' THEN ISNULL(A.DR_AMT_I,0) - ISNULL(A.CR_AMT_I,0)
			                                             WHEN '2' THEN ISNULL(A.CR_AMT_I,0) - ISNULL(A.DR_AMT_I,0)
			                                         END
			                                   ELSE 0 
			                               END) AS JAN_AMT_I
			                     FROM AGB200TV A  WITH (NOLOCK)
			                        , BOR120T  B  WITH (NOLOCK)
			                    WHERE A.COMP_CODE   = #{S_COMP_CODE}
			                      AND B.COMP_CODE   = #{S_COMP_CODE}
			                      AND A.AC_DATE    &gt;= #{START_DATE}
			                      AND A.AC_DATE    &lt;= #{TO_DATE}
			                      AND A.ACCNT       = #{ACCNT_CODE}
			                      AND A.DIV_CODE    = B.DIV_CODE
			                      AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
			    <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
				  AND     A.DIV_CODE IN
				<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
				 #{item}
				</foreach>									
		  		</if>
		  		<if test="@foren.Ognl@isNotEmpty(BOOK_CODE1)">
							  AND BOOK_DATA1      = #{BOOK_CODE1}
		  		</if>
			  	<if test="@foren.Ognl@isNotEmpty(BOOK_CODE2)">
							  AND BOOK_DATA2      = #{BOOK_CODE2}
		  		</if>
		  		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
							  AND DEPT_CODE      &gt;= #{DEPT_CODE_FR}
		  		</if>
		  		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
							  AND DEPT_CODE      &lt;= #{DEPT_CODE_FR}
		  		</if>
                              --AND NOT ( LEN(A.AC_DATE) = 6 AND A.AC_DATE &lt;&gt; {START_DATE})
                              AND ((A.INPUT_PATH != '10') OR (A.INPUT_PATH = '10' AND A.AC_DATE &lt; #{FR_DATE}))
	                    GROUP BY  ACCNT, BOOK_DATA1, BOOK_DATA2, BOOK_CODE1, BOOK_CODE2) T
			    <if test="JAN == &quot;Y&quot;">
			     WHERE T.IWAL_AMT_I != 0 Or T.DR_AMT_I != 0 Or T.CR_AMT_I != 0
			    </if>
			    <if test="JAN == &quot;N&quot;">
			     WHERE (T.IWAL_AMT_I != 0 Or T.DR_AMT_I != 0 Or T.cr_amt_i != 0) and T.jan_amt_i != 0
			    </if>
			    
                ORDER BY BOOK_DATA1,BOOK_DATA2 
			
			
		</if>
		
		<if test="SUM == &quot;2&quot;">
			/* 거래합계 출력 */
			
			
			--UArpt02Krv.CAGB140SKR[FNAGB141Q] Query6
		    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		    SELECT * 
		      FROM (SELECT 
		      			   ACCNT
		                 , BOOK_DATA1
		                 , (SELECT AC_NAME 
		                      FROM ABA200TV  WITH (NOLOCK)
		                     WHERE COMP_CODE = #{S_COMP_CODE}
		                       AND AC_CODE   = A.BOOK_CODE1
		                       AND AC_DATA   = A.BOOK_DATA1) AS BOOK_NAME1
		                 , BOOK_DATA2
		                 , (SELECT AC_NAME 
		                      FROM ABA200TV  WITH (NOLOCK)
		                     WHERE COMP_CODE = #{S_COMP_CODE}
		                       AND AC_CODE   = A.BOOK_CODE2
		                       AND AC_DATA   = A.BOOK_DATA2) AS BOOK_NAME2
		                 , SUM(CASE WHEN A.AC_DATE &gt;= #{START_DATE} AND AC_DATE &lt; #{FR_DATE}
		                                 THEN CASE A.JAN_DIVI WHEN '1' THEN ISNULL(A.DR_AMT_I,0) - ISNULL(A.CR_AMT_I,0)
		                                                      WHEN '2' THEN ISNULL(A.CR_AMT_I,0) - ISNULL(A.DR_AMT_I,0) 
		                                       END
		                                 ELSE 0 
		                        END) AS IWAL_AMT_I
		                 , SUM(CASE WHEN A.INPUT_PATH='A1' AND A.AC_DATE BETWEEN #{FR_DATE} AND #{TO_DATE}
		                                 THEN CASE A.JAN_DIVI
		                                           WHEN '1' THEN ISNULL(A.DR_AMT_I,0) - ISNULL(A.CR_AMT_I,0)
		                                           WHEN '2' THEN ISNULL(A.CR_AMT_I,0) - ISNULL(A.DR_AMT_I,0) 
		                                       END
		                                 ELSE 0
		                        END) AS BUSI_AMT_I
		                 , SUM(CASE WHEN A.INPUT_PATH !='A1' AND A.AC_DATE BETWEEN #{FR_DATE} AND #{TO_DATE}
		                            THEN ISNULL(A.DR_AMT_I,0)
		                            ELSE 0 
		                        END) AS DR_AMT_I
		                 , SUM(CASE WHEN A.INPUT_PATH != 'A1' AND A.AC_DATE BETWEEN #{FR_DATE} AND #{TO_DATE}
		                            THEN ISNULL(A.CR_AMT_I,0)
		                            ELSE 0 
		                        END) AS CR_AMT_I
		                 , SUM(CASE WHEN A.AC_DATE BETWEEN #{START_DATE} AND #{TO_DATE}
		                            THEN CASE A.JAN_DIVI WHEN '1' THEN ISNULL(A.DR_AMT_I,0) - ISNULL(A.CR_AMT_I,0)
		                                                 WHEN '2' THEN ISNULL(A.CR_AMT_I,0) - ISNULL(A.DR_AMT_I,0)
		                                       END
		                                 ELSE 0 
		                        END) AS JAN_AMT_I
		              FROM AGB200TV A  WITH (NOLOCK)
		                 , BOR120T  B  WITH (NOLOCK)
		             WHERE A.COMP_CODE     = #{S_COMP_CODE}
		               AND B.COMP_CODE 	   = #{S_COMP_CODE}
		               AND A.AC_DATE   &gt;= #{START_DATE}
		               AND A.AC_DATE   &lt;= #{TO_DATE}
		               AND A.ACCNT     	   = #{ACCNT_CODE}
		               AND A.DIV_CODE      = B.DIV_CODE
		               AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
			    <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
					   AND     A.DIV_CODE IN
					 <foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					  #{item}
					 </foreach>									
	  			</if>
		  		<if test="@foren.Ognl@isNotEmpty(BOOK_CODE1)">
					   AND BOOK_DATA1      = #{BOOK_CODE1}
		  		</if>
			  	<if test="@foren.Ognl@isNotEmpty(BOOK_CODE2)">
					   AND BOOK_DATA2      = #{BOOK_CODE2}
		  		</if>
		  		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
					   AND DEPT_CODE      &gt;= #{DEPT_CODE_FR}
		  		</if>
		  		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
					   AND DEPT_CODE      &lt;= #{DEPT_CODE_FR}
		  		</if>
                       --AND NOT ( LEN(A.AC_DATE) = 6 AND A.AC_DATE &lt;&gt; {START_DATE}) 
                       AND ((A.INPUT_PATH != '10') OR (A.INPUT_PATH = '10' AND A.AC_DATE &lt; #{FR_DATE}))
		             GROUP BY ACCNT, BOOK_DATA1, BOOK_DATA2, BOOK_CODE1, BOOK_CODE2
		    
		     ) T 
		    <if test="JAN == &quot;Y&quot;">
		     WHERE T.IWAL_AMT_I != 0 Or T.BUSI_AMT_I != 0 Or T.DR_AMT_I != 0 Or T.CR_AMT_I != 0
		    </if>
		    <if test="JAN == &quot;N&quot;">
		     WHERE (T.IWAL_AMT_I != 0 Or T.BUSI_AMT_I != 0 Or T.DR_AMT_I != 0 Or T.CR_AMT_I != 0) and T.JAN_AMT_I != 0
		    </if>
		</if>
		
	</select>
	
	<select id="agb140skrService.fnDiffJanAmt" parameterType="Map" resultType="rMap">
		<if test="SUM == &quot;1&quot;">
		/* 거래합계 미출력 일때 */
		--UArpt02Krv.CAGB140SKR, [FNAGB140Q] Query2
		
		    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		    SELECT ISNULL(SUM(JAN_AMT_I),0.0) AS JAN_DIS_AMT_I
		      FROM (SELECT CASE JAN_DIVI 
		                        WHEN '1' THEN SUM(DR_AMT_I) - SUM(CR_AMT_I)
		                        WHEN '2' THEN SUM(CR_AMT_I) - SUM(DR_AMT_I)
		                    END AS JAN_AMT_I
		              FROM AGB100TV A  WITH (NOLOCK)
		                 , BOR120T  B  WITH (NOLOCK)
		             WHERE A.COMP_CODE      = #{S_COMP_CODE}
		               AND B.COMP_CODE      = #{S_COMP_CODE}
		               AND A.AC_DATE    &gt;= #{START_DATE}
		               AND A.DIV_CODE       = B.DIV_CODE
		               AND A.AC_DATE    &lt;= #{TO_DATE}
		               AND NOT (A.AC_DATE &gt; #{START_DATE} AND LEN(AC_DATE) &lt; 8)
		               AND A.ACCNT          = #{ACCNT_CODE}
		               AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		    <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
    				  AND     A.DIV_CODE IN
					<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					 #{item}
					</foreach>									
	  		</if>
			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
					  AND DEPT_CODE      &gt;= #{DEPT_CODE_FR}
	  		</if>
	  		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
					  AND DEPT_CODE      &lt;= #{DEPT_CODE_TO}
	  		</if>
		             GROUP BY JAN_DIVI
		     
		         UNION ALL
		     
		        SELECT (CASE JAN_DIVI 
		                     WHEN '1' THEN SUM(DR_AMT_I) - SUM(CR_AMT_I)
		                     WHEN '2' THEN SUM(CR_AMT_I) - SUM(DR_AMT_I) 
		                 END) * -1 AS JAN_AMT_I
		          FROM AGB200TV A  WITH (NOLOCK)
		             , BOR120T  B  WITH (NOLOCK)
		         WHERE A.COMP_CODE      = #{S_COMP_CODE}
		           AND B.COMP_CODE      = #{S_COMP_CODE}
		           AND A.AC_DATE    &gt;= #{START_DATE}
		           AND A.DIV_CODE       = B.DIV_CODE
		           AND A.AC_DATE    &lt;= #{TO_DATE}
		           AND NOT (A.AC_DATE &gt; #{START_DATE} AND LEN(AC_DATE) &lt; 8)
		           AND A.ACCNT          = #{ACCNT_CODE}
		           AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		     <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
    				  AND     A.DIV_CODE IN
					<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					 #{item}
					</foreach>									
	  		</if>
		    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
					  AND DEPT_CODE      &gt;= #{DEPT_CODE_FR}
	  		</if>
	  		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
					  AND DEPT_CODE      &lt;= #{DEPT_CODE_TO}
	  		</if>
		    
		         GROUP BY JAN_DIVI) T1
		</if>
		
		
		
		<if test="SUM == &quot;2&quot;">
			
		/* 거래합계 출력 일때 */	
			
		--UArpt02Krv.CAGB140SKR, [FNAGB141Q] Query5
		    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		    SELECT ISNULL(SUM(JAN_AMT_I),0.0) AS JAN_DIS_AMT_I
		      FROM (SELECT CASE JAN_DIVI 
		                        WHEN '1' THEN SUM(DR_AMT_I) - SUM(CR_AMT_I)
		                        WHEN '2' THEN SUM(CR_AMT_I) - SUM(DR_AMT_I)
		                    END AS JAN_AMT_I
		              FROM AGB100TV A  WITH (NOLOCK)
		                 , BOR120T  B  WITH (NOLOCK)
		             WHERE A.COMP_CODE 		= #{S_COMP_CODE}
		               AND B.COMP_CODE 		= #{S_COMP_CODE}
		               AND A.AC_DATE  	&gt;= #{START_DATE}
		               AND A.DIV_CODE  		= B.DIV_CODE
		               AND A.AC_DATE  	&lt;= #{TO_DATE}
		               AND NOT (A.AC_DATE &gt; #{START_DATE} AND LEN(AC_DATE) &lt; 8)
		               AND A.ACCNT     = #{ACCNT_CODE}
		               AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		    <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
    				  AND     A.DIV_CODE IN
					<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					 #{item}
					</foreach>									
	  		</if>
			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
					  AND DEPT_CODE      &gt;= #{DEPT_CODE_FR}
	  		</if>
	  		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
					  AND DEPT_CODE      &lt;= #{DEPT_CODE_TO}
	  		</if>
		             GROUP BY JAN_DIVI
		     
		         UNION ALL
		     
		        SELECT (CASE JAN_DIVI WHEN '1' THEN SUM(DR_AMT_I) - SUM(CR_AMT_I)
		                              WHEN '2' THEN SUM(CR_AMT_I) - SUM(DR_AMT_I)
		                 END) * -1 JAN_AMT_I
		          FROM AGB200TV A  WITH (NOLOCK)
		             , BOR120T  B  WITH (NOLOCK)
		         WHERE A.COMP_CODE   	= #{S_COMP_CODE}
		           AND B.COMP_CODE   	= #{S_COMP_CODE}
		           AND A.AC_DATE    &gt;= #{START_DATE}
		           AND A.DIV_CODE = B.DIV_CODE
		           AND A.AC_DATE    &lt;= #{TO_DATE}
		           AND NOT (A.AC_DATE &gt; #{START_DATE} AND LEN(AC_DATE) &lt; 8)
		           AND A.ACCNT       	= #{ACCNT_CODE}
		           AND uniLITE.fnCheckCompDivAuth(A.COMP_CODE, A.DIV_CODE, #{S_USER_ID}) = 'Y'
		    <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
    				  AND     A.DIV_CODE IN
					<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					 #{item}
					</foreach>									
	  		</if>
			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
					  AND DEPT_CODE      &gt;= #{DEPT_CODE_FR}
	  		</if>
	  		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
					  AND DEPT_CODE      &lt;= #{DEPT_CODE_TO}
	  		</if>
		    
		         GROUP BY JAN_DIVI) T1
			
		</if>
		
	</select>
	
</mapper>