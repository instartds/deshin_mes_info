<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agb130skrServiceImpl">
	<select id="agb130skrServiceImpl.selectList" parameterType="Map" resultType="rMap">
	--agb130skrServiceImpl.selectList - QUERY01
	BEGIN
	
	    SET     NOCOUNT    ON
	    SET     ARITHABORT ON
	
	    ------- 1. 변수 선언
	    DECLARE @COMP_CODE      NVARCHAR(08)
	          , @FR_DATE        NVARCHAR(08)
	          , @TO_DATE        NVARCHAR(08)
	          , @ACCNT          NVARCHAR(16)
	          , @P_ACCNT        NVARCHAR(16)
	          , @P_ACCNT_NAME   NVARCHAR(50)
	
	          , @DIV_CODE       NVARCHAR(100)
	          , @DIV_NAME       NVARCHAR(40)
	          , @BOOK_DATA1     NVARCHAR(30)
	          , @BOOK_NAME1     NVARCHAR(40)
	          , @BOOK_DATA2     NVARCHAR(30)
	          , @BOOK_NAME2     NVARCHAR(40)
	
	          , @SHOW_MOD_DATA  NVARCHAR(01)
	          , @POSTIT_YN      NVARCHAR(01)
	          , @ST_DATE        NVARCHAR(06)
	          , @FR_AMT_I       NUMERIC(30, 6)
	          , @TO_AMT_I       NUMERIC(30, 6)
	          , @FR_FOR_AMT_I   NUMERIC(30, 6)
	          , @TO_FOR_AMT_I   NUMERIC(30, 6)
	
	          , @POSTIT         NVARCHAR(100)
	          , @CHARGE_CODE    NVARCHAR(10)
	          , @CHARGE_NAME    NVARCHAR(50)
	          , @REMARK         NVARCHAR(100)
	          , @FR_DEPT_CODE   NVARCHAR(08)
	          , @TO_DEPT_CODE   NVARCHAR(08)
	          , @MONEY_UNIT     NVARCHAR(03)
	
	    ------- 2.1 변수값 설정
	    SET     @COMP_CODE      = #{S_COMP_CODE}
	    SET     @FR_DATE        = #{AC_DATE_FR}
	    SET     @TO_DATE        = #{AC_DATE_TO}
	    SET     @ACCNT          = #{ACCNT_CODE}
	    SET     @P_ACCNT        = #{P_ACCNT_CD}
	    SET     @P_ACCNT_NAME   = #{P_ACCNT_NM}
	    SET     @BOOK_DATA1     = #{BOOK_DATA1}
	    SET     @BOOK_NAME1     = #{BOOK_NAME1}
	    SET     @BOOK_DATA2     = #{BOOK_DATA2}
	    SET     @BOOK_NAME2     = #{BOOK_NAME2}
	    SET     @SHOW_MOD_DATA  = #{CHECK_DELETE}
	    SET     @POSTIT_YN      = #{CHECK_POST_IT}
	    SET     @ST_DATE        = #{START_DATE}
	    SET     @FR_AMT_I       = NULLIF(#{AMT_FR}, '')
	    SET     @TO_AMT_I       = NULLIF(#{AMT_TO}, '')
	    SET     @FR_FOR_AMT_I   = NULLIF(#{FOR_AMT_FR}, '')
	    SET     @TO_FOR_AMT_I   = NULLIF(#{FOR_AMT_TO}, '')
	    SET     @POSTIT         = #{POST_IT}
	    SET     @CHARGE_CODE    = #{CHARGE_CODE}
	    SET     @CHARGE_NAME    = #{CHARGE_NAME}
	    SET     @REMARK         = #{REMARK}
	    SET     @FR_DEPT_CODE   = #{DEPT_CODE_FR}
	    SET     @TO_DEPT_CODE   = #{DEPT_CODE_TO}
	
	    ------- 2.2 날짜 포맷 유형 설정
	    DECLARE         @DateFormat         NVARCHAR(10)
	
	    SELECT TOP 1 @DateFormat = M1.CODE_NAME
	    FROM   BSA100T M1 WITH (NOLOCK)
	    WHERE  M1.COMP_CODE = @COMP_CODE
	    AND    M1.MAIN_CODE = N'B044'
	    AND    M1.REF_CODE1 = N'Y'
	
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
	
	    ------- 3. 임시테이블 선언(전표거래내역 및 소계,누계 계산용)
	    IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects   WHERE id=object_id('tempdb..#AGJ210T_160621'))
	        DROP TABLE #AGJ210T_160621
	
	    CREATE TABLE #AGJ210T_160621 (  AC_DATE         NVARCHAR(10)
	                                  , SLIP_NUM        NUMERIC(07, 0)
	                                  , SLIP_SEQ        NUMERIC(05, 0)
	                                  , REMARK          NVARCHAR(100)
	                                  , CUSTOM_NAME     NVARCHAR(30)
	                                  , P_ACCNT_NAME    NVARCHAR(50)
	                                  , DR_AMT_I        NUMERIC(30, 6)
	                                  , CR_AMT_I        NUMERIC(30, 6)
	                                  , JAN_AMT_I       NUMERIC(30, 6)
	                                  , MONEY_UNIT      NVARCHAR(03)
	                                  , EXCHG_RATE      NUMERIC(30, 6)
	                                  , FOR_AMT_I       NUMERIC(30, 6)
	                                  , JAN_DIVI        NVARCHAR(01)
	                                  , DEPT_CODE       NVARCHAR(08)
	                                  , DEPT_NAME       NVARCHAR(30)
	                                  , AC_DATA1        NVARCHAR(30)
	                                  , AC_DATA_NAME1   NVARCHAR(40)
	                                  , AC_DATA2        NVARCHAR(30)
	                                  , AC_DATA_NAME2   NVARCHAR(40)
	                                  , AC_DATA3        NVARCHAR(30)
	                                  , AC_DATA_NAME3   NVARCHAR(40)
	                                  , AC_DATA4        NVARCHAR(30)
	                                  , AC_DATA_NAME4   NVARCHAR(40)
	                                  , AC_DATA5        NVARCHAR(30)
	                                  , AC_DATA_NAME5   NVARCHAR(40)
	                                  , AC_DATA6        NVARCHAR(30)
	                                  , AC_DATA_NAME6   NVARCHAR(40)
	                                  , GUBUN           NVARCHAR(01)
	                                  , AUTO_NUM        BIGINT
	                                  , POSTIT_YN       NVARCHAR(01)
	                                  , POSTIT          NVARCHAR(80)
	                                  , POSTIT_USER_ID  NVARCHAR(10)
	                                  , INPUT_PATH      NVARCHAR(02)
	                                  , MOD_DIVI        NVARCHAR(01)
	                                  , INPUT_DIVI      NVARCHAR(02)
	                                  , DIV_CODE        NVARCHAR(08)
	                                  , CHR_SLIP_NUM    NVARCHAR(07)
	                                  , CHR_SLIP_SEQ    NVARCHAR(05)
	                                  , KEY_STRING      AS RTRIM(AC_DATE) + RTRIM(GUBUN) + RTRIM(CHR_SLIP_NUM) + RTRIM(CHR_SLIP_SEQ)
	                                  )
	   CREATE INDEX AGJ210T_160621_IDX01 ON #AGJ210T_160621(KEY_STRING, GUBUN)
	
	    ------- 4. 데이터 조회
	    ------- 4.1. 이월금액
	    IF ( ISNULL(@BOOK_DATA1, '') != '' OR ISNULL(@BOOK_DATA2, '') != '' OR ISNULL(@BOOK_NAME1, '') != '' OR ISNULL(@BOOK_NAME2, '') != '' )
	    ------- 4.1.1. 계정명세 대상
	        BEGIN
	            INSERT INTO #AGJ210T_160621( AC_DATE   , REMARK    , GUBUN       , DR_AMT_I    , CR_AMT_I     , JAN_AMT_I
	                                       , MONEY_UNIT, EXCHG_RATE, FOR_AMT_I   , JAN_DIVI    , CHR_SLIP_NUM, CHR_SLIP_SEQ)
	               SELECT  REPLACE(
	                    REPLACE(
	                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(@FR_DATE, 1, 4))
	                                       , 'MM'  , SUBSTRING(@FR_DATE, 5, 2))
	                                       , 'DD'  , SUBSTRING(@FR_DATE, 7, 2))       AS AC_DATE
	                 ,  N'이월금액'  AS REMARK
	                 ,  '0'                         AS GUBUN
	                 ,  SUM(ISNULL(A.DR_AMT_I,0.0)) AS DR_AMT_I
	                 ,  SUM(ISNULL(A.CR_AMT_I,0.0)) AS CR_AMT_I
	                 ,  CASE WHEN C.JAN_DIVI= '1'
	                        THEN SUM(ISNULL(A.DR_AMT_I,0.0)) - SUM(ISNULL(A.CR_AMT_I,0.0))
	                        ELSE SUM(ISNULL(A.CR_AMT_I,0.0)) - SUM(ISNULL(A.DR_AMT_I,0.0))
	                    END AS JAN_AMT_I
	                 ,  @MONEY_UNIT AS MONEY_UNIT
	                 ,  0           AS EXCHG_RATE
	                 ,  0           AS FOR_AMT_I
	                 ,  C.JAN_DIVI
	                 ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 0))) + (CONVERT(NVARCHAR(7), 0)) AS CHR_SLIP_NUM
	                 ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 0))) + (CONVERT(NVARCHAR(5), 0)) AS CHR_SLIP_SEQ
	            FROM           AGB200T  AS A  WITH (NOLOCK)
	                INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
	                                                        AND B.DIV_CODE   = A.DIV_CODE
	                LEFT  JOIN ABA400T  AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
	                                                        AND C.ACCNT      = A.ACCNT
	                LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE = A.COMP_CODE
	                                                        AND C3.ACCNT     = A.P_ACCNT
	                LEFT  JOIN ABA200TV AS N1 WITH (NOLOCK) ON  N1.COMP_CODE = A.COMP_CODE
	                                                        AND N1.AC_CODE   = A.BOOK_CODE1
	                                                        AND N1.AC_DATA   = A.BOOK_DATA1
	                LEFT  JOIN ABA200TV AS N2 WITH (NOLOCK) ON  N2.COMP_CODE = A.COMP_CODE
	                                                        AND N2.AC_CODE   = A.BOOK_CODE2
	                                                        AND N2.AC_DATA   = A.BOOK_DATA2
	            WHERE A.COMP_CODE        = @COMP_CODE
	            AND   A.AC_DATE         &gt;= @ST_DATE
	            AND   A.AC_DATE         &lt;  @FR_DATE
	            AND   ((A.ACCNT          = @ACCNT                    AND @ACCNT        != '') OR
	                   (C.ACCNT_CD       = @ACCNT                    AND @ACCNT        != '') OR
	                   (@ACCNT           = ''))
	            AND   ((A.P_ACCNT     LIKE       @P_ACCNT      + '%' AND @P_ACCNT      != '') OR (@P_ACCNT      = ''))
	            AND   ((C3.ACCNT_NAME LIKE '%' + @P_ACCNT_NAME + '%' AND @P_ACCNT_NAME != '') OR (@P_ACCNT_NAME = ''))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">    
			   AND A.DIV_CODE IN
				<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>
	            AND   ((A.BOOK_DATA1  LIKE       ISNULL(@BOOK_DATA1, '')   + '%' AND ISNULL(@BOOK_DATA1, '')   != '') OR (ISNULL(@BOOK_DATA1, '')   = ''))
	            AND   ((N1.AC_NAME    LIKE '%' + ISNULL(@BOOK_NAME1, '')   + '%' AND ISNULL(@BOOK_NAME1, '')   != '') OR (ISNULL(@BOOK_NAME1, '')   = ''))
	            AND   ((A.BOOK_DATA2  LIKE       ISNULL(@BOOK_DATA2, '')   + '%' AND ISNULL(@BOOK_DATA2, '')   != '') OR (ISNULL(@BOOK_DATA2, '')   = ''))
	            AND   ((N2.AC_NAME    LIKE '%' + ISNULL(@BOOK_NAME2, '')   + '%' AND ISNULL(@BOOK_NAME2, '')   != '') OR (ISNULL(@BOOK_NAME2, '')   = ''))
	            AND   ((A.DEPT_CODE     &gt;= @FR_DEPT_CODE             AND @FR_DEPT_CODE != '') OR (@FR_DEPT_CODE = ''))
	            AND   ((A.DEPT_CODE     &lt;= @TO_DEPT_CODE             AND @TO_DEPT_CODE != '') OR (@TO_DEPT_CODE = ''))
	            GROUP BY C.JAN_DIVI
	
	            --거래합계
	            INSERT INTO #AGJ210T_160621( AC_DATE   , REMARK    , GUBUN       , DR_AMT_I    , CR_AMT_I     , JAN_AMT_I
	                                       , MONEY_UNIT, EXCHG_RATE, FOR_AMT_I   , JAN_DIVI    , CHR_SLIP_NUM, CHR_SLIP_SEQ)
	             SELECT  REPLACE(
	                    REPLACE(
	                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(@FR_DATE, 1, 4))
	                                       , 'MM'  , SUBSTRING(@FR_DATE, 5, 2))
	                                       , 'DD'  , SUBSTRING(@FR_DATE, 7, 2))       AS AC_DATE
	                 ,  N'거래합계'  AS REMARK
	                 ,  '0'                         AS GUBUN
	                 ,  SUM(ISNULL(A.DR_AMT_I,0.0)) AS DR_AMT_I
	                 ,  SUM(ISNULL(A.CR_AMT_I,0.0)) AS CR_AMT_I
	                 ,  CASE WHEN C.JAN_DIVI = '1'
	                         THEN SUM(ISNULL(A.DR_AMT_I,0.0)) - SUM(ISNULL(A.CR_AMT_I,0.0))
	                         ELSE SUM(ISNULL(A.CR_AMT_I,0.0)) - SUM(ISNULL(A.DR_AMT_I,0.0))
	                    END AS JAN_AMT_I
	                 ,  @MONEY_UNIT AS MONEY_UNIT
	                 ,  0           AS EXCHG_RATE
	                 ,  0           AS FOR_AMT_I
	                 ,  C.JAN_DIVI
	                 ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 0))) + (CONVERT(NVARCHAR(7), 0)) AS CHR_SLIP_NUM
	                 ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 0))) + (CONVERT(NVARCHAR(5), 0)) AS CHR_SLIP_SEQ
	            FROM           AGB200T  AS A  WITH (NOLOCK)
	                INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
	                                                        AND B.DIV_CODE   = A.DIV_CODE
	                LEFT  JOIN ABA400T  AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
	                                                        AND C.ACCNT      = A.ACCNT
	                LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE = A.COMP_CODE
	                                                        AND C3.ACCNT     = A.P_ACCNT
	                LEFT  JOIN ABA200TV AS N1 WITH (NOLOCK) ON  N1.COMP_CODE = A.COMP_CODE
	                                                        AND N1.AC_CODE   = A.BOOK_CODE1
	                                                        AND N1.AC_DATA   = A.BOOK_DATA1
	                LEFT  JOIN ABA200TV AS N2 WITH (NOLOCK) ON  N2.COMP_CODE = A.COMP_CODE
	                                                        AND N2.AC_CODE   = A.BOOK_CODE2
	                                                        AND N2.AC_DATA   = A.BOOK_DATA2
	
	            WHERE A.COMP_CODE        = @COMP_CODE
	            AND   A.AC_DATE         &gt;= @FR_DATE
	            AND   A.AC_DATE         &lt;= @TO_DATE
	            AND   LEN(A.AC_DATE)     = 6
	            AND   A.INPUT_PATH       = 'A1'
	            AND   ((A.ACCNT          = @ACCNT                    AND @ACCNT        != '') OR
	                   (C.ACCNT_CD       = @ACCNT                    AND @ACCNT        != '') OR
	                   (@ACCNT           = ''))
	            AND   ((A.P_ACCNT     LIKE       @P_ACCNT      + '%' AND @P_ACCNT      != '') OR (@P_ACCNT      = ''))
	            AND   ((C3.ACCNT_NAME LIKE '%' + @P_ACCNT_NAME + '%' AND @P_ACCNT_NAME != '') OR (@P_ACCNT_NAME = ''))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">    
			   AND A.DIV_CODE IN
				<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>
	            AND   ((A.BOOK_DATA1  LIKE       ISNULL(@BOOK_DATA1, '')   + '%' AND ISNULL(@BOOK_DATA1, '')   != '') OR (ISNULL(@BOOK_DATA1, '')   = ''))
	            AND   ((N1.AC_NAME    LIKE '%' + ISNULL(@BOOK_NAME1, '')   + '%' AND ISNULL(@BOOK_NAME1, '')   != '') OR (ISNULL(@BOOK_NAME1, '')   = ''))
	            AND   ((A.BOOK_DATA2  LIKE       ISNULL(@BOOK_DATA2, '')   + '%' AND ISNULL(@BOOK_DATA2, '')   != '') OR (ISNULL(@BOOK_DATA2, '')   = ''))
	            AND   ((N2.AC_NAME    LIKE '%' + ISNULL(@BOOK_NAME2, '')   + '%' AND ISNULL(@BOOK_NAME2, '')   != '') OR (ISNULL(@BOOK_NAME2, '')   = ''))
	            AND   ((A.DEPT_CODE     &gt;= @FR_DEPT_CODE             AND @FR_DEPT_CODE != '') OR (@FR_DEPT_CODE = ''))
	            AND   ((A.DEPT_CODE     &lt;= @TO_DEPT_CODE             AND @TO_DEPT_CODE != '') OR (@TO_DEPT_CODE = ''))
	            GROUP BY C.JAN_DIVI
	            HAVING SUM(ISNULL(A.DR_AMT_I,0.0)) != 0 OR SUM(ISNULL(A.CR_AMT_I,0.0)) !=  0
	        END
	
	    ELSE
	    ------- 4.1.2. 총계정원장 대상
	        BEGIN
	            INSERT INTO #AGJ210T_160621( AC_DATE   , REMARK    , GUBUN       , DR_AMT_I    , CR_AMT_I     , JAN_AMT_I
	                                       , MONEY_UNIT, EXCHG_RATE, FOR_AMT_I   , JAN_DIVI    , CHR_SLIP_NUM, CHR_SLIP_SEQ)
	            SELECT  REPLACE(
	                    REPLACE(
	                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(@FR_DATE, 1, 4))
	                                       , 'MM'  , SUBSTRING(@FR_DATE, 5, 2))
	                                       , 'DD'  , SUBSTRING(@FR_DATE, 7, 2))       AS AC_DATE
	                 ,  N'이월금액'  AS REMARK
	                 ,  '0'                         AS GUBUN
	                 ,  SUM(ISNULL(A.DR_AMT_I,0.0)) AS DR_AMT_I
	                 ,  SUM(ISNULL(A.CR_AMT_I,0.0)) AS CR_AMT_I
	                 ,  CASE WHEN C.JAN_DIVI = '1'
	                         THEN SUM(ISNULL(A.DR_AMT_I,0)) - SUM(ISNULL(A.CR_AMT_I,0))
	                         ELSE SUM(ISNULL(A.CR_AMT_I,0)) - SUM(ISNULl(A.DR_AMT_I,0))
	                    END                         AS JAN_AMT_I
	                 ,  @MONEY_UNIT                 AS MONEY_UNIT
	                 ,  0                           AS EXCHG_RATE
	                 ,  0                           AS FOR_AMT_I
	                 ,  C.JAN_DIVI
	                 ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 0))) + (CONVERT(NVARCHAR(7), 0)) AS CHR_SLIP_NUM
	                 ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 0))) + (CONVERT(NVARCHAR(5), 0)) AS CHR_SLIP_SEQ
	            FROM           AGB100TV AS A  WITH (NOLOCK)
	                INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
	                                                        AND B.DIV_CODE   = A.DIV_CODE
	                LEFT  JOIN ABA400T  AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
	                                                        AND C.ACCNT      = A.ACCNT
	                LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE = A.COMP_CODE
	                                                        AND C3.ACCNT     = A.P_ACCNT
	            WHERE A.COMP_CODE        = @COMP_CODE
	            AND   A.AC_DATE         &gt;= @ST_DATE
	            AND   A.AC_DATE         &lt;  @FR_DATE
	            AND   ((A.ACCNT          = @ACCNT                    AND @ACCNT        != '') OR
	                   (C.ACCNT_CD       = @ACCNT                    AND @ACCNT        != '') OR
	                   (@ACCNT           = ''))
	            AND   ((A.P_ACCNT     LIKE       @P_ACCNT      + '%' AND @P_ACCNT      != '') OR (@P_ACCNT      = ''))
	            AND   ((C3.ACCNT_NAME LIKE '%' + @P_ACCNT_NAME + '%' AND @P_ACCNT_NAME != '') OR (@P_ACCNT_NAME = ''))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">    
			   AND A.DIV_CODE IN
				<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>
	            AND   ((A.DEPT_CODE     &gt;= @FR_DEPT_CODE             AND @FR_DEPT_CODE != '') OR (@FR_DEPT_CODE = ''))
	            AND   ((A.DEPT_CODE     &lt;= @TO_DEPT_CODE             AND @TO_DEPT_CODE != '') OR (@TO_DEPT_CODE = ''))
	            GROUP BY C.JAN_DIVI
	
	            --거래합계
	            INSERT INTO #AGJ210T_160621( AC_DATE   , REMARK    , GUBUN       , DR_AMT_I    , CR_AMT_I       , JAN_AMT_I
	                                       , MONEY_UNIT, EXCHG_RATE, FOR_AMT_I   , JAN_DIVI )
	            SELECT  REPLACE(
	                    REPLACE(
	                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(@FR_DATE, 1, 4))
	                                       , 'MM'  , SUBSTRING(@FR_DATE, 5, 2))
	                                       , 'DD'  , SUBSTRING(@FR_DATE, 7, 2))       AS AC_DATE
	                 ,  N'거래합계'  AS REMARK
	                 ,  '0'                         AS GUBUN
	                 ,  SUM(ISNULL(A.DR_AMT_I,0.0)) AS DR_AMT_I
	                 ,  SUM(ISNULL(A.CR_AMT_I,0.0)) AS CR_AMT_I
	                 ,  CASE WHEN C.JAN_DIVI = '1'
	                         THEN SUM(ISNULL(A.DR_AMT_I,0.0)) - SUM(ISNULL(A.CR_AMT_I,0.0))
	                         ELSE SUM(ISNULL(A.CR_AMT_I,0.0)) - SUM(ISNULL(A.DR_AMT_I,0.0))
	                    END AS JAN_AMT_I
	                 ,  @MONEY_UNIT AS MONEY_UNIT
	                 ,  0           AS EXCHG_RATE
	                 ,  0           AS FOR_AMT_I
	                 ,  C.JAN_DIVI
	            FROM           AGB100T  AS A  WITH (NOLOCK)
	                INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
	                                                        AND B.DIV_CODE   = A.DIV_CODE 
	                LEFT  JOIN ABA400T  AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
	                                                        AND C.ACCNT      = A.ACCNT
	                LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE = A.COMP_CODE
	                                                        AND C3.ACCNT     = A.P_ACCNT
	            WHERE A.COMP_CODE       = @COMP_CODE
	            AND   A.AC_DATE        &gt;= @FR_DATE
	            AND   A.AC_DATE        &lt;= @TO_DATE
	            AND   LEN(A.AC_DATE)    = 6
	            AND   A.INPUT_PATH      = 'A1'
	            AND   ((A.ACCNT         = @ACCNT                     AND @ACCNT        != '') OR
	                   (C.ACCNT_CD      = @ACCNT                     AND @ACCNT        != '') OR
	                   (@ACCNT          = ''))
	            AND   ((A.P_ACCNT     LIKE       @P_ACCNT      + '%' AND @P_ACCNT      != '') OR (@P_ACCNT      = ''))
	            AND   ((C3.ACCNT_NAME LIKE '%' + @P_ACCNT_NAME + '%' AND @P_ACCNT_NAME != '') OR (@P_ACCNT_NAME = ''))
			<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">    
			   AND A.DIV_CODE IN
				<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>
	            AND   ((A.DEPT_CODE     &gt;= @FR_DEPT_CODE             AND @FR_DEPT_CODE != '') OR (@FR_DEPT_CODE = ''))
	            AND   ((A.DEPT_CODE     &lt;= @TO_DEPT_CODE             AND @TO_DEPT_CODE != '') OR (@TO_DEPT_CODE = ''))
	            GROUP BY C.JAN_DIVI
	            HAVING SUM(ISNULL(A.DR_AMT_I, 0)) != 0 OR SUM(ISNULL(A.CR_AMT_I, 0)) !=  0
	        END
	
	    ------- 4.2. 전표거래내역
	    INSERT INTO #AGJ210T_160621
	    SELECT  REPLACE(
	            REPLACE(
	            REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.AC_DATE, 1, 4))
	                               , 'MM'  , SUBSTRING(A.AC_DATE, 5, 2))
	                               , 'DD'  , SUBSTRING(A.AC_DATE, 7, 2))       AS AC_DATE
	
	         ,  A.SLIP_NUM
	         ,  A.SLIP_SEQ
	         ,  ISNULL(A.REMARK,'') AS REMARK
	         ,  CASE WHEN ISNULL(A.CUSTOM_NAME,'') = ''
	                 THEN C1.CUSTOM_NAME
	                 ELSE A.CUSTOM_NAME
	            END AS CUSTOM_NAME
	         ,  ISNULL(C3.ACCNT_NAME,'') AS P_ACCNT_NAME
	         ,  CASE WHEN A.DR_CR = '1'
	                 THEN A.AMT_I
	                 ELSE 0.0
	            END AS DR_AMT_I
	         ,  CASE WHEN A.DR_CR = '1'
	                 THEN 0.0
	                 ELSE A.AMT_I
	            END AS CR_AMT_I
	         ,  CASE WHEN C2.JAN_DIVI = A.DR_CR
	                 THEN A.AMT_I
	                 ELSE A.AMT_I * (-1)
	            END AS JAN_AMT_I
	         ,  A.MONEY_UNIT
	         ,  A.EXCHG_RATE_O AS EXCHG_RATE
	         ,  A.FOR_AMT_I
	         ,  C2.JAN_DIVI
	         ,  A.DEPT_CODE
	         ,  F7.TREE_NAME AS DEPT_NAME
	         ,  CASE WHEN ISNULL(A.AC_DATA1,'') = ''
	                 THEN NULL
	                 ELSE (CASE F1.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA1)
	                            ELSE A.AC_DATA1
	                        END)
	            END AS AC_DATA1
	         ,  A.AC_DATA_NAME1
	         ,  CASE WHEN ISNULL(A.AC_DATA2,'') = '' THEN NULL
	                 ELSE (CASE F2.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA2)
	                            ELSE A.AC_DATA2
	                        END)
	            END AS AC_DATA2
	         ,  A.AC_DATA_NAME2
	         ,  CASE WHEN ISNULL(A.AC_DATA3,'') = '' THEN NULL
	                 ELSE (CASE F3.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA3)
	                            ELSE A.AC_DATA3
	                        END)
	            END AS AC_DATA3
	         ,  A.AC_DATA_NAME3
	         ,  CASE WHEN ISNULL(A.AC_DATA4,'') = '' THEN NULL
	                 ELSE (CASE F4.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA4)
	                            ELSE A.AC_DATA4
	                        END)
	            END AS AC_DATA4
	         ,  A.AC_DATA_NAME4
	         ,  CASE WHEN ISNULL(A.AC_DATA5,'') = '' THEN NULL
	                 ELSE (CASE F5.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA5)
	                            ELSE A.AC_DATA5
	                        END)
	            END AS AC_DATA5
	         ,  A.AC_DATA_NAME5
	         ,  CASE WHEN ISNULL(A.AC_DATA6,'') = '' THEN NULL
	                 ELSE (CASE F6.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA6)
	                            ELSE A.AC_DATA6
	                        END)
	            END AS AC_DATA6
	         ,  A.AC_DATA_NAME6
	         ,  N'1'                            AS GUBUN
	         ,  A.AUTO_NUM
	         ,  ISNULL(A.POSTIT_YN     , 'N')   AS POSTIT_YN
	         ,  ISNULL(A.POSTIT        , '' )   AS POSTIT
	         ,  ISNULL(A.POSTIT_USER_ID, '' )   AS POSTIT_USER_ID
	         ,  A.INPUT_PATH
	         ,  ISNULL(A.MOD_DIVI      , '' )   AS MOD_DIVI
	         ,  A.INPUT_DIVI
	         ,  A.DIV_CODE
	         ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), A.SLIP_NUM))) + (CONVERT(NVARCHAR(7), A.SLIP_NUM)) AS CHR_SLIP_NUM
	         ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), A.SLIP_SEQ))) + (CONVERT(NVARCHAR(5), A.SLIP_SEQ)) AS CHR_SLIP_SEQ
	    FROM           AGJ210T  AS A  WITH (NOLOCK)
	        INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE    = A.COMP_CODE
	                                                AND B.DIV_CODE     = A.DIV_CODE
	        LEFT  JOIN BCM100T  AS C1 WITH (NOLOCK) ON  C1.COMP_CODE   = A.COMP_CODE
	                                                AND C1.CUSTOM_CODE = A.CUSTOM_CODE
	        LEFT  JOIN ABA400T  AS C2 WITH (NOLOCK) ON  C2.COMP_CODE   = A.COMP_CODE
	                                                AND C2.ACCNT       = A.ACCNT
	        LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE   = A.COMP_CODE
	                                                AND C3.ACCNT       = A.P_ACCNT
	        LEFT  JOIN ABA200T  AS F1 WITH (NOLOCK) ON  F1.COMP_CODE   = A.COMP_CODE
	                                                AND F1.AC_CD       = A.AC_CODE1
	        LEFT  JOIN ABA200T  AS F2 WITH (NOLOCK) ON  F2.COMP_CODE   = A.COMP_CODE
	                                                AND F2.AC_CD       = A.AC_CODE2
	        LEFT  JOIN ABA200T  AS F3 WITH (NOLOCK) ON  F3.COMP_CODE   = A.COMP_CODE
	                                                AND F3.AC_CD       = A.AC_CODE3
	        LEFT  JOIN ABA200T  AS F4 WITH (NOLOCK) ON  F4.COMP_CODE   = A.COMP_CODE
	                                                AND F4.AC_CD       = A.AC_CODE4
	        LEFT  JOIN ABA200T  AS F5 WITH (NOLOCK) ON  F5.COMP_CODE   = A.COMP_CODE
	                                                AND F5.AC_CD       = A.AC_CODE5
	        LEFT  JOIN ABA200T  AS F6 WITH (NOLOCK) ON  F6.COMP_CODE   = A.COMP_CODE
	                                                AND F6.AC_CD       = A.AC_CODE6
	        LEFT  JOIN BSA210T  AS F7 WITH (NOLOCK) ON  F7.COMP_CODE   = A.COMP_CODE
	                                                AND F7.TREE_CODE   = A.DEPT_CODE
	        LEFT  JOIN BSA100T  AS M1 WITH (NOLOCK) ON  M1.COMP_CODE   = A.COMP_CODE
	                                                AND M1.MAIN_CODE   = 'A009'
	                                                AND M1.SUB_CODE    = A.CHARGE_CODE
	    WHERE A.COMP_CODE = @COMP_CODE
	    AND   A.AC_DATE  &gt;= @FR_DATE
	    AND   A.AC_DATE  &lt;= @TO_DATE
	    AND   ((A.ACCNT                  = @ACCNT                    AND @ACCNT        != '') OR
	           (C2.ACCNT_CD              = @ACCNT                    AND @ACCNT        != '') OR
	           (@ACCNT                   = ''))
	    AND   ((A.P_ACCNT             LIKE       @P_ACCNT      + '%' AND @P_ACCNT      != '') OR (@P_ACCNT         = ''))
	    AND   ((C3.ACCNT_NAME         LIKE '%' + @P_ACCNT_NAME + '%' AND @P_ACCNT_NAME != '') OR (@P_ACCNT_NAME    = ''))
	
	<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">    
	   AND A.DIV_CODE IN
		<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
			#{item}
		</foreach>         
	</if>
	
	    AND   ((A.BOOK_DATA1             = ISNULL(@BOOK_DATA1, '')               AND ISNULL(@BOOK_DATA1, '')   != '' AND ISNULL(@BOOK_NAME1, '') != '') OR
	           (A.BOOK_DATA1          LIKE '%' + ISNULL(@BOOK_DATA1, '')  + '%'  AND ISNULL(@BOOK_DATA1, '')   != '' AND ISNULL(@BOOK_NAME1, '')  = '') OR
	           (A.BOOK_DATA_NAME1     LIKE '%' + ISNULL(@BOOK_NAME1, '')  + '%'  AND ISNULL(@BOOK_DATA1, '')    = '' AND ISNULL(@BOOK_NAME1, '') != '') OR
	           (ISNULL(@BOOK_DATA1, '')              = ''                        AND ISNULL(@BOOK_NAME1, '')    = ''))
	
	    AND   ((A.BOOK_DATA2             = ISNULL(@BOOK_DATA2, '')               AND ISNULL(@BOOK_DATA2, '')   != '' AND ISNULL(@BOOK_NAME2, '') != '') OR
	           (A.BOOK_DATA2          LIKE '%' + ISNULL(@BOOK_DATA2, '')  + '%'  AND ISNULL(@BOOK_DATA2, '')   != '' AND ISNULL(@BOOK_NAME2, '')  = '') OR
	           (A.BOOK_DATA_NAME2     LIKE '%' + ISNULL(@BOOK_NAME2, '')  + '%'  AND ISNULL(@BOOK_DATA2, '')    = '' AND ISNULL(@BOOK_NAME2, '') != '') OR
	           (ISNULL(@BOOK_DATA2, '')              = ''                        AND ISNULL(@BOOK_NAME2, '')    = ''))
	
	    AND   ((ISNULL(A.MOD_DIVI,'')    = ''                        AND @SHOW_MOD_DATA = 'N') OR (@SHOW_MOD_DATA  = 'Y'))
	    AND   ((A.POSTIT_YN              = ISNULL(@POSTIT_YN, '')                AND ISNULL(@POSTIT_YN, '')    != '' ) OR (ISNULL(@POSTIT_YN, '')      = ''))
	
	    AND   ((ISNULL(A.AMT_I,0.0)     &gt;= @FR_AMT_I                 AND @FR_AMT_I     IS NOT NULL) OR (@FR_AMT_I     IS NULL))
	    AND   ((ISNULL(A.AMT_I,0.0)     &lt;= @TO_AMT_I                 AND @TO_AMT_I     IS NOT NULL) OR (@TO_AMT_I     IS NULL))
	    AND   ((ISNULL(A.FOR_AMT_I,0.0) &gt;= @FR_FOR_AMT_I             AND @FR_FOR_AMT_I IS NOT NULL) OR (@FR_FOR_AMT_I IS NULL))
	    AND   ((ISNULL(A.FOR_AMT_I,0.0) &lt;= @TO_FOR_AMT_I             AND @TO_FOR_AMT_I IS NOT NULL) OR (@TO_FOR_AMT_I IS NULL))
	
	    AND   ((A.POSTIT              LIKE '%' + @POSTIT + '%'       AND @POSTIT       != '') OR (@POSTIT       = ''))
	    AND   ((A.CHARGE_CODE         LIKE '%' + @CHARGE_CODE + '%'  AND @CHARGE_CODE  != '') OR (@CHARGE_CODE  = ''))
	    AND   ((M1.CODE_NAME          LIKE '%' + @CHARGE_NAME + '%'  AND @CHARGE_NAME  != '') OR (@CHARGE_NAME  = ''))
	    AND   ((A.REMARK              LIKE '%' + ISNULL(@REMARK, '') + '%'       AND ISNULL(@REMARK, '')       != '') OR (ISNULL(@REMARK, '')       = ''))
	    AND   ((A.DEPT_CODE             &gt;= @FR_DEPT_CODE             AND @FR_DEPT_CODE != '') OR (@FR_DEPT_CODE = ''))
	    AND   ((A.DEPT_CODE             &lt;= @TO_DEPT_CODE             AND @TO_DEPT_CODE != '') OR (@TO_DEPT_CODE = ''))
	
	    ------- 4.2.3 잔액 계산하여 UPDATE
	    DECLARE         @AccrueI            NUMERIC(30,6)               -- 잔액
	
	    SET @AccrueI   = 0
	
	    UPDATE  A
	    SET     @AccrueI        = CASE WHEN A.JAN_DIVI = '1' THEN ISNULL(@AccrueI, 0) + A.DR_AMT_I - A.CR_AMT_I
	                                   ELSE ISNULL(@AccrueI, 0) + A.CR_AMT_I - A.DR_AMT_I
	                              END
	         ,  A.JAN_AMT_I     = @AccrueI
	    FROM    #AGJ210T_160621 A WITH (NOLOCK, INDEX(AGJ210T_160621_IDX01))
	    WHERE   (A.GUBUN = '0' OR A.GUBUN = '1')
	
	    ------- 4.3.1 소계(일)
	    INSERT INTO #AGJ210T_160621 (AC_DATE, REMARK, DR_AMT_I, CR_AMT_I, GUBUN)
	    SELECT  ISNULL(A.AC_DATE      , '')         AS AC_DATE
	         ,  N'소계(일)'          AS REMARK
	         ,  SUM(ISNULL(A.DR_AMT_I     , 0 ))    AS DR_AMT_I
	         ,  SUM(ISNULL(A.CR_AMT_I     , 0 ))    AS CR_AMT_I
	         ,  N'2'                                AS GUBUN
	    FROM  #AGJ210T_160621 A WITH (NOLOCK)
	    WHERE A.GUBUN    = '1'
	    AND   ISNULL(A.MOD_DIVI, '') = ''
	    GROUP BY A.AC_DATE
	
	    ------- 4.3.2 소계(월)
	    INSERT INTO #AGJ210T_160621 (AC_DATE, REMARK, DR_AMT_I, CR_AMT_I, GUBUN)
	    SELECT  MAX(ISNULL(A.AC_DATE      , ''))    AS AC_DATE
	         ,  N'소계(월)'          AS REMARK
	         ,  SUM(ISNULL(A.DR_AMT_I     , 0 ))    AS DR_AMT_I
	         ,  SUM(ISNULL(A.CR_AMT_I     , 0 ))    AS CR_AMT_I
	         ,  N'3'                                AS GUBUN
	    FROM  #AGJ210T_160621 A WITH (NOLOCK)
	    WHERE A.GUBUN    = '1'
	    AND   ISNULL(A.MOD_DIVI, '') = ''
	    GROUP BY SUBSTRING(A.AC_DATE, 1, 7)
	
	    ------- 4.4. 누계
	    INSERT INTO #AGJ210T_160621 (AC_DATE, REMARK, DR_AMT_I, CR_AMT_I, JAN_AMT_I, JAN_DIVI, GUBUN, CHR_SLIP_NUM, CHR_SLIP_SEQ)
	    SELECT  MAX(ISNULL(A.AC_DATE      , ''))    AS AC_DATE
	         ,  N'누     계'          AS REMARK
	         ,  SUM(ISNULL(A.DR_AMT_I     , 0 ))    AS DR_AMT_I
	         ,  SUM(ISNULL(A.CR_AMT_I     , 0 ))    AS CR_AMT_I
	         ,  CASE WHEN A.JAN_DIVI = '1' THEN SUM(ISNULL(A.DR_AMT_I, 0 ) - ISNULL(A.CR_AMT_I, 0 ))
	                 ELSE SUM(ISNULL(A.CR_AMT_I, 0 ) - ISNULL(A.DR_AMT_I, 0 ))
	            END                                 AS JAN_AMT_I
	         ,  A.JAN_DIVI
	         ,  N'4'                                 AS GUBUN
	         ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 9999999))) + (CONVERT(NVARCHAR(7), 9999999)) AS CHR_SLIP_NUM
	         ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 99999)))   + (CONVERT(NVARCHAR(5), 99999))   AS CHR_SLIP_SEQ
	    FROM  #AGJ210T_160621 A WITH (NOLOCK)
	    WHERE A.GUBUN = '1'
	    AND   ISNULL(A.MOD_DIVI, '') = ''
	    GROUP BY SUBSTRING(A.AC_DATE, 1, 7), A.JAN_DIVI
	
	    ------- 4.4.1 누계차변계, 대변계, 잔액 계산하여 UPDATE
	    DECLARE         @4_AccrueI      NUMERIC(30,6)               -- 잔액
	                  , @4_DrAmtI       NUMERIC(30,6)               -- 누계차변의 누적금액
	                  , @4_CrAmtI       NUMERIC(30,6)               -- 누계대변의 누적금액
	
	    SET @4_AccrueI   = 0
	    SET @4_DrAmtI    = 0
	    SET @4_CrAmtI    = 0
	
	    UPDATE  A
	    SET     @4_AccrueI      = CASE WHEN A.JAN_DIVI = '1' THEN ISNULL(@4_AccrueI, 0) + A.DR_AMT_I - A.CR_AMT_I
	                                   ELSE                       ISNULL(@4_AccrueI, 0) + A.CR_AMT_I - A.DR_AMT_I
	                              END
	         ,  A.JAN_AMT_I     = @4_AccrueI
	         ,  @4_DrAmtI       = ISNULL(@4_DrAmtI, 0)  + A.DR_AMT_I
	         ,  @4_CrAmtI       = ISNULL(@4_CrAmtI, 0)  + A.CR_AMT_I
	         ,  A.DR_AMT_I      = @4_DrAmtI
	         ,  A.CR_AMT_I      = @4_CrAmtI
	    FROM    #AGJ210T_160621 A WITH (NOLOCK, INDEX(AGJ210T_160621_IDX01))
	    WHERE (A.GUBUN = '0' OR A.GUBUN = '4')
	
	    ------- 5. 리턴 데이터
	    SELECT  CASE WHEN A.GUBUN IN ('0', '2', '3', '4') THEN NULL ELSE A.AC_DATE END AS AC_DATE
	         ,  A.SLIP_NUM
	         ,  A.SLIP_SEQ
	         ,  ISNULL(A.REMARK        , '')   AS REMARK
	         ,  ISNULL(A.P_ACCNT_NAME  , '')   AS P_ACCNT_NAME
	         ,  ISNULL(A.DR_AMT_I , 0 )        AS DR_AMT_I
	         ,  ISNULL(A.CR_AMT_I , 0 )        AS CR_AMT_I
	         ,  ISNULL(A.JAN_AMT_I, 0 )        AS JAN_AMT_I
	         ,  A.MONEY_UNIT
	         ,  ISNULL(A.EXCHG_RATE, 0)        AS EXCHG_RATE
	         ,  ISNULL(A.FOR_AMT_I , 0 )       AS FOR_AMT_I
	         ,  A.GUBUN
	         ,  A.AUTO_NUM
	         ,  ISNULL(A.POSTIT_YN     ,'N')   AS POSTIT_YN
	         ,  ISNULL(A.POSTIT        , '')   AS POSTIT
	         ,  ISNULL(A.POSTIT_USER_ID, '')   AS POSTIT_USER_ID
	         ,  ISNULL(A.INPUT_PATH    , '')   AS INPUT_PATH
	         ,  ISNULL(A.MOD_DIVI      , '')   AS MOD_DIVI
	         ,  ISNULL(A.INPUT_DIVI    , '')   AS INPUT_DIVI
	         ,  ISNULL(A.DIV_CODE      , '')   AS DIV_CODE
	    FROM           #AGJ210T_160621 AS A  WITH (NOLOCK)
	    ORDER BY A.AC_DATE, A.GUBUN, A.SLIP_NUM, A.SLIP_SEQ, A.AUTO_NUM
	
	    SET     NOCOUNT    OFF
	    SET     ARITHABORT OFF
	
	END
	</select>	
	
	<select id="Keep_sSqlWhere" parameterType="Map" resultType="rMap">
		<if test="@foren.Ognl@isNotEmpty(P_ACCNT_CD)">
		   AND A.P_ACCNT = #{P_ACCNT_CD}
		</if>
	
		<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">    
		   AND A.DIV_CODE IN
			<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
				#{item}
			</foreach>         
		</if>
	        
		<if test="@foren.Ognl@isNotEmpty(BOOK_DATA1)">
	        AND BOOK_DATA1 = #{BOOK_DATA1}
		</if>
	    
		<if test="@foren.Ognl@isNotEmpty(BOOK_DATA2)">
	        AND BOOK_DATA1 = #{BOOK_DATA2}
		</if>
	    
		<if test="CHECK_DELETE == &quot;N&quot;"> 
	        AND ISNULL(MOD_DIVI,'') = ''
		</if>
	
		<if test="CHECK_POST_IT == &quot;Y&quot;"> 
	        AND POSTIT_YN = 'Y'
		</if>
	
		<if test="@foren.Ognl@isNotEmpty(POST_IT)">
	            AND POSTIT LIKE #{POST_IT} + '%'
		</if>
	
		<if test="@foren.Ognl@isNotEmpty(AMT_FR)">
	        AND ISNULL(AMT_I,0.0) &gt;= #{AMT_FR}
		</if>
	
		<if test="@foren.Ognl@isNotEmpty(AMT_TO)">
	        AND ISNULL(AMT_I,0.0) &lt;= #{AMT_TO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(FOR_AMT_FR)">
	        AND ISNULL(AMT_I,0.0) &gt;= #{FOR_AMT_FR}
		</if>
	
		<if test="@foren.Ognl@isNotEmpty(FOR_AMT_TO)">
	        AND ISNULL(AMT_I,0.0) &lt;= #{FOR_AMT_TO}
		</if>
	    
		<if test="@foren.Ognl@isNotEmpty(CHARGE_CODE)">
	        AND CHARGE_CODE = #{CHARGE_CODE}
		</if>
	    
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
	        AND REMARK LIKE #{REMARK} + '%'
		</if>
	    
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_FR)">
		   AND A.DEPT_CODE &gt;= #{DEPT_CODE_FR}
		</if>
				    
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE_TO)">
		   AND A.DEPT_CODE &lt;= #{DEPT_CODE_TO}
		</if>
	</select>	

	<select id="agb130skrServiceImpl.getPostIt" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnGetPostIt] Query01
		BEGIN
		   SET NOCOUNT ON
		   SET ARITHABORT ON
		
		   DECLARE @SLIP_DIVI   NVARCHAR(01)   -- 전표구분
		
		   SET     @SLIP_DIVI = #{SLIP_DIVI}
		
		   IF (@SLIP_DIVI = '2')
		      BEGIN
		         SELECT POSTIT
		           FROM AGJ110T  WITH (NOLOCK)
		          WHERE COMP_CODE = #{S_COMP_CODE}
		            AND AUTO_NUM  = #{AUTO_NUM}
		            AND EX_NUM    = #{EX_NUM} 
		            AND EX_SEQ    = #{EX_SEQ}
		            AND EX_DATE   = #{EX_DATE}
		      END
		   ELSE
		      BEGIN
		         SELECT POSTIT
		           FROM AGJ210T  WITH (NOLOCK)
		          WHERE COMP_CODE = #{S_COMP_CODE}
		            AND AUTO_NUM  = #{AUTO_NUM}
		            AND SLIP_NUM  = #{SLIP_NUM} 
		            AND SLIP_SEQ  = #{SLIP_SEQ}
		            AND AC_DATE   = #{EX_DATE}
		      END
		   SET ARITHABORT OFF
		   SET NOCOUNT OFF
		END
	</select>	

	<select id="agb130skrServiceImpl.updatePostIt" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnUpdatePostIt] Query 02
		BEGIN
		   DECLARE @SLIP_DIVI   NVARCHAR(01)   -- 전표구분
		
		   SET     @SLIP_DIVI = #{SLIP_DIVI}
		
		   IF (@SLIP_DIVI = '2')
		      BEGIN
		         UPDATE AGJ110T
		            SET POSTIT_YN      = 'Y'
		              , POSTIT         = #{POSTIT}
		              , POSTIT_USER_ID = #{S_USER_ID}
		          WHERE COMP_CODE = #{S_COMP_CODE}
		            AND AUTO_NUM  = #{AUTO_NUM}
		            AND EX_NUM    = #{EX_NUM} 
		            AND EX_SEQ    = #{EX_SEQ}
		            AND EX_DATE   = #{EX_DATE}
		      END
		   ELSE
		      BEGIN
		         UPDATE AGJ210T
		            SET POSTIT_YN      = 'Y'
		              , POSTIT         = #{POSTIT}
		              , POSTIT_USER_ID = #{S_USER_ID}
		          WHERE COMP_CODE = #{S_COMP_CODE}
		            AND AUTO_NUM  = #{AUTO_NUM}
		            AND SLIP_NUM  = #{SLIP_NUM} 
		            AND SLIP_SEQ  = #{SLIP_SEQ}
		            AND AC_DATE   = #{EX_DATE}
		      END
		END
	</select>
	
	<select id="agb130skrServiceImpl.deletePostIt" parameterType="Map" resultType="rMap">
		--UAccntPopUpKrv.CAccntPopupKR[fnUpdatePostIt] Query 02
		BEGIN
		   DECLARE @SLIP_DIVI   NVARCHAR(01)   -- 전표구분
		
		   SET     @SLIP_DIVI = #{SLIP_DIVI}
		
		   IF (@SLIP_DIVI = '2')
		      BEGIN
		         UPDATE AGJ110T
		            SET POSTIT_YN      = 'N'
		              , POSTIT         = ''
		              , POSTIT_USER_ID = ''
		          WHERE COMP_CODE = #{S_COMP_CODE}
		            AND AUTO_NUM  = #{AUTO_NUM}
		            AND EX_NUM    = #{EX_NUM} 
		            AND EX_SEQ    = #{EX_SEQ}
		            AND EX_DATE   = #{EX_DATE}
		      END
		   ELSE
		      BEGIN
		         UPDATE AGJ210T
		            SET POSTIT_YN      = 'N'
		              , POSTIT         = ''
		              , POSTIT_USER_ID = ''
		          WHERE COMP_CODE = #{S_COMP_CODE}
		            AND AUTO_NUM  = #{AUTO_NUM}
		            AND SLIP_NUM  = #{SLIP_NUM} 
		            AND SLIP_SEQ  = #{SLIP_SEQ}
		            AND AC_DATE   = #{EX_DATE}
		      END
		END
	</select>
	
	<select id="agb130skrServiceImpl.selectPrintList" parameterType="Map" resultType="rMap">
	--agb130skrServiceImpl.selectPrintList - QUERY01
	    SET     NOCOUNT    ON
	    SET     ARITHABORT ON
	
	    ------- 1. 변수 선언
	    DECLARE @COMP_CODE      NVARCHAR(08)
	          , @FR_DATE        NVARCHAR(08)
	          , @TO_DATE        NVARCHAR(08)
	          , @ACCNT          NVARCHAR(16)
	          , @P_ACCNT        NVARCHAR(16)
	          , @P_ACCNT_NAME   NVARCHAR(50)
	
	          , @DIV_CODE       NVARCHAR(100)
	          , @DIV_NAME       NVARCHAR(40)
	          , @BOOK_DATA1     NVARCHAR(30)
	          , @BOOK_NAME1     NVARCHAR(40)
	          , @BOOK_DATA2     NVARCHAR(30)
	          , @BOOK_NAME2     NVARCHAR(40)
	
	          , @SHOW_MOD_DATA  NVARCHAR(01)
	          , @POSTIT_YN      NVARCHAR(01)
	          , @ST_DATE        NVARCHAR(06)
	          , @FR_AMT_I       NUMERIC(30, 6)
	          , @TO_AMT_I       NUMERIC(30, 6)
	          , @FR_FOR_AMT_I   NUMERIC(30, 6)
	          , @TO_FOR_AMT_I   NUMERIC(30, 6)
	
	          , @POSTIT         NVARCHAR(100)
	          , @CHARGE_CODE    NVARCHAR(10)
	          , @CHARGE_NAME    NVARCHAR(50)
	          , @REMARK         NVARCHAR(100)
	          , @FR_DEPT_CODE   NVARCHAR(08)
	          , @TO_DEPT_CODE   NVARCHAR(08)
	          , @MONEY_UNIT     NVARCHAR(03)
	
	    ------- 2.1 변수값 설정
	    SET     @COMP_CODE      = #{S_COMP_CODE}
	    SET     @FR_DATE        = #{AC_DATE_FR}
	    SET     @TO_DATE        = #{AC_DATE_TO}
	    SET     @ACCNT          = #{ACCNT_CODE}
	    SET     @P_ACCNT        = #{P_ACCNT_CD}
	    SET     @P_ACCNT_NAME   = #{P_ACCNT_NM}
	    SET     @BOOK_DATA1     = #{BOOK_DATA1}
	    SET     @BOOK_NAME1     = #{BOOK_NAME1}
	    SET     @BOOK_DATA2     = #{BOOK_DATA2}
	    SET     @BOOK_NAME2     = #{BOOK_NAME2}
	    SET     @SHOW_MOD_DATA  = #{CHECK_DELETE}
	    SET     @POSTIT_YN      = #{CHECK_POST_IT}
	    SET     @ST_DATE        = #{START_DATE}
	    SET     @FR_AMT_I       = #{AMT_FR}
	    SET     @TO_AMT_I       = #{AMT_TO}
	    SET     @FR_FOR_AMT_I   = #{FOR_AMT_FR}
	    SET     @TO_FOR_AMT_I   = #{FOR_AMT_TO}
	    SET     @POSTIT         = #{POST_IT}
	    SET     @CHARGE_CODE    = #{CHARGE_CODE}
	    SET     @CHARGE_NAME    = #{CHARGE_NAME}
	    SET     @REMARK         = #{REMARK}
	    SET     @FR_DEPT_CODE   = #{DEPT_CODE_FR}
	    SET     @TO_DEPT_CODE   = #{DEPT_CODE_TO}
	
	    ------- 2.2 날짜 포맷 유형 설정
	    DECLARE         @DateFormat         NVARCHAR(10)
	
	    SELECT TOP 1 @DateFormat = M1.CODE_NAME
	    FROM   BSA100T M1 WITH (NOLOCK)
	    WHERE  M1.COMP_CODE = @COMP_CODE
	    AND    M1.MAIN_CODE = N'B044'
	    AND    M1.REF_CODE1 = N'Y'
	
	    SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
	
	    ------- 3. 임시테이블 선언(전표거래내역 및 소계,누계 계산용)
	    IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects   WHERE id=object_id('tempdb..#AGJ210T_160621'))
	        DROP TABLE #AGJ210T_160621
	
	    CREATE TABLE #AGJ210T_160621 (  AC_DATE         NVARCHAR(10)
	                                  , SLIP_NUM        NUMERIC(07, 0)
	                                  , SLIP_SEQ        NUMERIC(05, 0)
	                                  , REMARK          NVARCHAR(100)
	                                  , CUSTOM_NAME     NVARCHAR(30)
	                                  , P_ACCNT_NAME    NVARCHAR(50)
	                                  , DR_AMT_I        NUMERIC(30, 6)
	                                  , CR_AMT_I        NUMERIC(30, 6)
	                                  , JAN_AMT_I       NUMERIC(30, 6)
	                                  , MONEY_UNIT      NVARCHAR(03)
	                                  , EXCHG_RATE      NUMERIC(30, 6)
	                                  , FOR_AMT_I       NUMERIC(30, 6)
	                                  , JAN_DIVI        NVARCHAR(01)
	                                  , DEPT_CODE       NVARCHAR(08)
	                                  , DEPT_NAME       NVARCHAR(30)
	                                  , AC_DATA1        NVARCHAR(30)
	                                  , AC_DATA_NAME1   NVARCHAR(40)
	                                  , AC_DATA2        NVARCHAR(30)
	                                  , AC_DATA_NAME2   NVARCHAR(40)
	                                  , AC_DATA3        NVARCHAR(30)
	                                  , AC_DATA_NAME3   NVARCHAR(40)
	                                  , AC_DATA4        NVARCHAR(30)
	                                  , AC_DATA_NAME4   NVARCHAR(40)
	                                  , AC_DATA5        NVARCHAR(30)
	                                  , AC_DATA_NAME5   NVARCHAR(40)
	                                  , AC_DATA6        NVARCHAR(30)
	                                  , AC_DATA_NAME6   NVARCHAR(40)
	                                  , GUBUN           NVARCHAR(01)
	                                  , AUTO_NUM        BIGINT
	                                  , POSTIT_YN       NVARCHAR(01)
	                                  , POSTIT          NVARCHAR(80)
	                                  , POSTIT_USER_ID  NVARCHAR(10)
	                                  , INPUT_PATH      NVARCHAR(02)
	                                  , MOD_DIVI        NVARCHAR(01)
	                                  , INPUT_DIVI      NVARCHAR(02)
	                                  , DIV_CODE        NVARCHAR(08)
	                                  , CHR_SLIP_NUM    NVARCHAR(07)
	                                  , CHR_SLIP_SEQ    NVARCHAR(05)
	                                  , KEY_STRING      AS RTRIM(AC_DATE) + RTRIM(GUBUN) + RTRIM(CHR_SLIP_NUM) + RTRIM(CHR_SLIP_SEQ)
	                                  )
	   CREATE INDEX AGJ210T_160621_IDX01 ON #AGJ210T_160621(KEY_STRING, GUBUN)
	
	    ------- 4. 데이터 조회
	    ------- 4.1. 이월금액
	    IF ( ISNULL(@BOOK_DATA1, '') != '' OR ISNULL(@BOOK_DATA2, '') != '' OR ISNULL(@BOOK_NAME1, '') != '' OR ISNULL(@BOOK_NAME2, '') != '' )
	    ------- 4.1.1. 계정명세 대상
	        BEGIN
	            INSERT INTO #AGJ210T_160621( AC_DATE   , REMARK    , GUBUN       , DR_AMT_I    , CR_AMT_I     , JAN_AMT_I
	                                       , MONEY_UNIT, EXCHG_RATE, FOR_AMT_I   , JAN_DIVI    , CHR_SLIP_NUM, CHR_SLIP_SEQ)
	               SELECT  REPLACE(
	                    REPLACE(
	                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(@FR_DATE, 1, 4))
	                                       , 'MM'  , SUBSTRING(@FR_DATE, 5, 2))
	                                       , 'DD'  , SUBSTRING(@FR_DATE, 7, 2))       AS AC_DATE
	                 ,  N'이월금액'  AS REMARK
	                 ,  '0'                         AS GUBUN
	                 ,  SUM(ISNULL(A.DR_AMT_I,0.0)) AS DR_AMT_I
	                 ,  SUM(ISNULL(A.CR_AMT_I,0.0)) AS CR_AMT_I
	                 ,  CASE WHEN C.JAN_DIVI= '1'
	                        THEN SUM(ISNULL(A.DR_AMT_I,0.0)) - SUM(ISNULL(A.CR_AMT_I,0.0))
	                        ELSE SUM(ISNULL(A.CR_AMT_I,0.0)) - SUM(ISNULL(A.DR_AMT_I,0.0))
	                    END AS JAN_AMT_I
	                 ,  @MONEY_UNIT AS MONEY_UNIT
	                 ,  0           AS EXCHG_RATE
	                 ,  0           AS FOR_AMT_I
	                 ,  C.JAN_DIVI
	                 ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 0))) + (CONVERT(NVARCHAR(7), 0)) AS CHR_SLIP_NUM
	                 ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 0))) + (CONVERT(NVARCHAR(5), 0)) AS CHR_SLIP_SEQ
	            FROM           AGB200T  AS A  WITH (NOLOCK)
	                INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
	                                                        AND B.DIV_CODE   = A.DIV_CODE
	                INNER JOIN ABA400T  AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
	                                                        AND C.ACCNT      = A.ACCNT
	                                                        AND C.SPEC_DIVI  = 'A'
	                LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE = A.COMP_CODE
	                                                        AND C3.ACCNT     = A.P_ACCNT
	                LEFT  JOIN ABA200TV AS N1 WITH (NOLOCK) ON  N1.COMP_CODE = A.COMP_CODE
	                                                        AND N1.AC_CODE   = A.BOOK_CODE1
	                                                        AND N1.AC_DATA   = A.BOOK_DATA1
	                LEFT  JOIN ABA200TV AS N2 WITH (NOLOCK) ON  N2.COMP_CODE = A.COMP_CODE
	                                                        AND N2.AC_CODE   = A.BOOK_CODE2
	                                                        AND N2.AC_DATA   = A.BOOK_DATA2
	            WHERE A.COMP_CODE        = @COMP_CODE
	            AND   A.AC_DATE         &gt;= @ST_DATE
	            AND   A.AC_DATE         &lt;  @FR_DATE
	            AND   ((A.ACCNT       LIKE       ISNULL(@ACCNT  , '')      + '%' AND ISNULL(@ACCNT  , '')      != '') OR (ISNULL(@ACCNT  , '')      = ''))
	            AND   ((A.P_ACCNT     LIKE       ISNULL(@P_ACCNT, '')      + '%' AND ISNULL(@P_ACCNT, '')      != '') OR (ISNULL(@P_ACCNT, '')      = ''))
	            AND   ((C3.ACCNT_NAME LIKE '%' + ISNULL(@P_ACCNT_NAME, '') + '%' AND ISNULL(@P_ACCNT_NAME, '') != '') OR (ISNULL(@P_ACCNT_NAME, '') = ''))
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">    
			   AND A.DIV_CODE IN
				<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>
	            AND   ((A.BOOK_DATA1  LIKE       ISNULL(@BOOK_DATA1, '')   + '%' AND ISNULL(@BOOK_DATA1, '')   != '') OR (ISNULL(@BOOK_DATA1, '')   = ''))
	            AND   ((N1.AC_NAME    LIKE '%' + ISNULL(@BOOK_NAME1, '')   + '%' AND ISNULL(@BOOK_NAME1, '')   != '') OR (ISNULL(@BOOK_NAME1, '')   = ''))
	            AND   ((A.BOOK_DATA2  LIKE       ISNULL(@BOOK_DATA2, '')   + '%' AND ISNULL(@BOOK_DATA2, '')   != '') OR (ISNULL(@BOOK_DATA2, '')   = ''))
	            AND   ((N2.AC_NAME    LIKE '%' + ISNULL(@BOOK_NAME2, '')   + '%' AND ISNULL(@BOOK_NAME2, '')   != '') OR (ISNULL(@BOOK_NAME2, '')   = ''))
	            AND   ((A.DEPT_CODE     &gt;= ISNULL(@FR_DEPT_CODE, '')          AND ISNULL(@FR_DEPT_CODE, '') != '') OR (ISNULL(@FR_DEPT_CODE, '') = ''))
	            AND   ((A.DEPT_CODE     &lt;= ISNULL(@TO_DEPT_CODE, '')          AND ISNULL(@TO_DEPT_CODE, '') != '') OR (ISNULL(@TO_DEPT_CODE, '') = ''))
	            GROUP BY C.JAN_DIVI
	
	            --거래합계
	            INSERT INTO #AGJ210T_160621( AC_DATE   , REMARK    , GUBUN       , DR_AMT_I    , CR_AMT_I     , JAN_AMT_I
	                                       , MONEY_UNIT, EXCHG_RATE, FOR_AMT_I   , JAN_DIVI    , CHR_SLIP_NUM, CHR_SLIP_SEQ)
	             SELECT  REPLACE(
	                    REPLACE(
	                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(@FR_DATE, 1, 4))
	                                       , 'MM'  , SUBSTRING(@FR_DATE, 5, 2))
	                                       , 'DD'  , SUBSTRING(@FR_DATE, 7, 2))       AS AC_DATE
	                 ,  N'거래합계'  AS REMARK
	                 ,  '0'                         AS GUBUN
	                 ,  SUM(ISNULL(A.DR_AMT_I,0.0)) AS DR_AMT_I
	                 ,  SUM(ISNULL(A.CR_AMT_I,0.0)) AS CR_AMT_I
	                 ,  CASE WHEN C.JAN_DIVI = '1'
	                         THEN SUM(ISNULL(A.DR_AMT_I,0.0)) - SUM(ISNULL(A.CR_AMT_I,0.0))
	                         ELSE SUM(ISNULL(A.CR_AMT_I,0.0)) - SUM(ISNULL(A.DR_AMT_I,0.0))
	                    END AS JAN_AMT_I
	                 ,  @MONEY_UNIT AS MONEY_UNIT
	                 ,  0           AS EXCHG_RATE
	                 ,  0           AS FOR_AMT_I
	                 ,  C.JAN_DIVI
	                 ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 0))) + (CONVERT(NVARCHAR(7), 0)) AS CHR_SLIP_NUM
	                 ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 0))) + (CONVERT(NVARCHAR(5), 0)) AS CHR_SLIP_SEQ
	            FROM           AGB200T  AS A  WITH (NOLOCK)
	                INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
	                                                        AND B.DIV_CODE   = A.DIV_CODE
	                INNER JOIN ABA400T  AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
	                                                        AND C.ACCNT      = A.ACCNT
	                                                        AND C.SPEC_DIVI  = 'A'
	                LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE = A.COMP_CODE
	                                                        AND C3.ACCNT     = A.P_ACCNT
	                LEFT  JOIN ABA200TV AS N1 WITH (NOLOCK) ON  N1.COMP_CODE = A.COMP_CODE
	                                                        AND N1.AC_CODE   = A.BOOK_CODE1
	                                                        AND N1.AC_DATA   = A.BOOK_DATA1
	                LEFT  JOIN ABA200TV AS N2 WITH (NOLOCK) ON  N2.COMP_CODE = A.COMP_CODE
	                                                        AND N2.AC_CODE   = A.BOOK_CODE2
	                                                        AND N2.AC_DATA   = A.BOOK_DATA2
	
	            WHERE A.COMP_CODE        = @COMP_CODE
	            AND   A.AC_DATE         &gt;= @FR_DATE
	            AND   A.AC_DATE         &lt;= @TO_DATE
	            AND   LEN(A.AC_DATE)     = 6
	            AND   A.INPUT_PATH       = 'A1'
	            AND   ((A.ACCNT       LIKE       ISNULL(@ACCNT  , '')      + '%' AND ISNULL(@ACCNT  , '')      != '') OR (ISNULL(@ACCNT  , '')      = ''))
	            AND   ((A.P_ACCNT     LIKE       ISNULL(@P_ACCNT, '')      + '%' AND ISNULL(@P_ACCNT, '')      != '') OR (ISNULL(@P_ACCNT, '')      = ''))
	            AND   ((C3.ACCNT_NAME LIKE '%' + ISNULL(@P_ACCNT_NAME, '') + '%' AND ISNULL(@P_ACCNT_NAME, '') != '') OR (ISNULL(@P_ACCNT_NAME, '') = ''))
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">    
			   AND A.DIV_CODE IN
				<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>
	            AND   ((A.BOOK_DATA1  LIKE       ISNULL(@BOOK_DATA1, '')   + '%' AND ISNULL(@BOOK_DATA1, '')   != '') OR (ISNULL(@BOOK_DATA1, '')   = ''))
	            AND   ((N1.AC_NAME    LIKE '%' + ISNULL(@BOOK_NAME1, '')   + '%' AND ISNULL(@BOOK_NAME1, '')   != '') OR (ISNULL(@BOOK_NAME1, '')   = ''))
	            AND   ((A.BOOK_DATA2  LIKE       ISNULL(@BOOK_DATA2, '')   + '%' AND ISNULL(@BOOK_DATA2, '')   != '') OR (ISNULL(@BOOK_DATA2, '')   = ''))
	            AND   ((N2.AC_NAME    LIKE '%' + ISNULL(@BOOK_NAME2, '')   + '%' AND ISNULL(@BOOK_NAME2, '')   != '') OR (ISNULL(@BOOK_NAME2, '')   = ''))
	            AND   ((A.DEPT_CODE     &gt;= ISNULL(@FR_DEPT_CODE, '')          AND ISNULL(@FR_DEPT_CODE, '') != '') OR (ISNULL(@FR_DEPT_CODE, '') = ''))
	            AND   ((A.DEPT_CODE     &lt;= ISNULL(@TO_DEPT_CODE, '')          AND ISNULL(@TO_DEPT_CODE, '') != '') OR (ISNULL(@TO_DEPT_CODE, '') = ''))
	            GROUP BY C.JAN_DIVI
	            HAVING SUM(ISNULL(A.DR_AMT_I,0.0)) != 0 OR SUM(ISNULL(A.CR_AMT_I,0.0)) !=  0
	        END
	
	    ELSE
	    ------- 4.1.2. 총계정원장 대상
	        BEGIN
	            INSERT INTO #AGJ210T_160621( AC_DATE   , REMARK    , GUBUN       , DR_AMT_I    , CR_AMT_I     , JAN_AMT_I
	                                       , MONEY_UNIT, EXCHG_RATE, FOR_AMT_I   , JAN_DIVI    , CHR_SLIP_NUM, CHR_SLIP_SEQ)
	            SELECT  REPLACE(
	                    REPLACE(
	                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(@FR_DATE, 1, 4))
	                                       , 'MM'  , SUBSTRING(@FR_DATE, 5, 2))
	                                       , 'DD'  , SUBSTRING(@FR_DATE, 7, 2))       AS AC_DATE
	                 ,  N'이월금액'  AS REMARK
	                 ,  '0'                         AS GUBUN
	                 ,  SUM(ISNULL(A.DR_AMT_I,0.0)) AS DR_AMT_I
	                 ,  SUM(ISNULL(A.CR_AMT_I,0.0)) AS CR_AMT_I
	                 ,  CASE WHEN C.JAN_DIVI = '1'
	                         THEN SUM(ISNULL(A.DR_AMT_I,0)) - SUM(ISNULL(A.CR_AMT_I,0))
	                         ELSE SUM(ISNULL(A.CR_AMT_I,0)) - SUM(ISNULl(A.DR_AMT_I,0))
	                    END                         AS JAN_AMT_I
	                 ,  @MONEY_UNIT                 AS MONEY_UNIT
	                 ,  0                           AS EXCHG_RATE
	                 ,  0                           AS FOR_AMT_I
	                 ,  C.JAN_DIVI
	                 ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 0))) + (CONVERT(NVARCHAR(7), 0)) AS CHR_SLIP_NUM
	                 ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 0))) + (CONVERT(NVARCHAR(5), 0)) AS CHR_SLIP_SEQ
	            FROM           AGB100T  AS A  WITH (NOLOCK)
	                INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
	                                                        AND B.DIV_CODE   = A.DIV_CODE
	                INNER JOIN ABA400T  AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
	                                                        AND C.ACCNT      = A.ACCNT
	                                                        AND C.SPEC_DIVI  = 'A'
	                LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE = A.COMP_CODE
	                                                        AND C3.ACCNT     = A.P_ACCNT
	            WHERE A.COMP_CODE        = @COMP_CODE
	            AND   A.AC_DATE         &gt;= @ST_DATE
	            AND   A.AC_DATE         &lt;  @FR_DATE
	            AND   ((A.ACCNT       LIKE       ISNULL(@ACCNT  , '')      + '%' AND ISNULL(@ACCNT  , '')      != '') OR (ISNULL(@ACCNT  , '')      = ''))
	            AND   ((A.P_ACCNT     LIKE       ISNULL(@P_ACCNT, '')      + '%' AND ISNULL(@P_ACCNT, '')      != '') OR (ISNULL(@P_ACCNT, '')      = ''))
	            AND   ((C3.ACCNT_NAME LIKE '%' + ISNULL(@P_ACCNT_NAME, '') + '%' AND ISNULL(@P_ACCNT_NAME, '') != '') OR (ISNULL(@P_ACCNT_NAME, '') = ''))
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">    
			   AND A.DIV_CODE IN
				<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>
	            AND   ((A.DEPT_CODE     &gt;= ISNULL(@FR_DEPT_CODE, '')          AND ISNULL(@FR_DEPT_CODE, '') != '') OR (ISNULL(@FR_DEPT_CODE, '') = ''))
	            AND   ((A.DEPT_CODE     &lt;= ISNULL(@TO_DEPT_CODE, '')          AND ISNULL(@TO_DEPT_CODE, '') != '') OR (ISNULL(@TO_DEPT_CODE, '') = ''))
	            GROUP BY C.JAN_DIVI
	
	            --거래합계
	            INSERT INTO #AGJ210T_160621( AC_DATE   , REMARK    , GUBUN       , DR_AMT_I    , CR_AMT_I       , JAN_AMT_I
	                                       , MONEY_UNIT, EXCHG_RATE, FOR_AMT_I   , JAN_DIVI )
	            SELECT  REPLACE(
	                    REPLACE(
	                    REPLACE(@DateFormat, 'YYYY', SUBSTRING(@FR_DATE, 1, 4))
	                                       , 'MM'  , SUBSTRING(@FR_DATE, 5, 2))
	                                       , 'DD'  , SUBSTRING(@FR_DATE, 7, 2))       AS AC_DATE
	                 ,  N'거래합계'  AS REMARK
	                 ,  '0'                         AS GUBUN
	                 ,  SUM(ISNULL(A.DR_AMT_I,0.0)) AS DR_AMT_I
	                 ,  SUM(ISNULL(A.CR_AMT_I,0.0)) AS CR_AMT_I
	                 ,  CASE WHEN C.JAN_DIVI = '1'
	                         THEN SUM(ISNULL(A.DR_AMT_I,0.0)) - SUM(ISNULL(A.CR_AMT_I,0.0))
	                         ELSE SUM(ISNULL(A.CR_AMT_I,0.0)) - SUM(ISNULL(A.DR_AMT_I,0.0))
	                    END AS JAN_AMT_I
	                 ,  @MONEY_UNIT AS MONEY_UNIT
	                 ,  0           AS EXCHG_RATE
	                 ,  0           AS FOR_AMT_I
	                 ,  C.JAN_DIVI
	            FROM           AGB100T  AS A  WITH (NOLOCK)
	                INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
	                                                        AND B.DIV_CODE   = A.DIV_CODE 
	                INNER JOIN ABA400T  AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
	                                                        AND C.ACCNT      = A.ACCNT
	                                                        AND C.SPEC_DIVI  = 'A'
	                LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE = A.COMP_CODE
	                                                        AND C3.ACCNT     = A.P_ACCNT
	            WHERE A.COMP_CODE       = @COMP_CODE
	            AND   A.AC_DATE        &gt;= @FR_DATE
	            AND   A.AC_DATE        &lt;= @TO_DATE
	            AND   LEN(A.AC_DATE)    = 6
	            AND   A.INPUT_PATH      = 'A1'
	            AND   ((A.ACCNT       LIKE       ISNULL(@ACCNT  , '')      + '%' AND ISNULL(@ACCNT  , '')      != '') OR (ISNULL(@ACCNT  , '')      = ''))
	            AND   ((A.P_ACCNT     LIKE       ISNULL(@P_ACCNT, '')      + '%' AND ISNULL(@P_ACCNT, '')      != '') OR (ISNULL(@P_ACCNT, '')      = ''))
	            AND   ((C3.ACCNT_NAME LIKE '%' + ISNULL(@P_ACCNT_NAME, '') + '%' AND ISNULL(@P_ACCNT_NAME, '') != '') OR (ISNULL(@P_ACCNT_NAME, '') = ''))
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">    
			   AND A.DIV_CODE IN
				<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
					#{item}
				</foreach>         
			</if>
	            AND   ((A.DEPT_CODE     &gt;= ISNULL(@FR_DEPT_CODE, '')          AND ISNULL(@FR_DEPT_CODE, '') != '') OR (ISNULL(@FR_DEPT_CODE, '') = ''))
	            AND   ((A.DEPT_CODE     &lt;= ISNULL(@TO_DEPT_CODE, '')          AND ISNULL(@TO_DEPT_CODE, '') != '') OR (ISNULL(@TO_DEPT_CODE, '') = ''))
	            GROUP BY C.JAN_DIVI
	            HAVING SUM(ISNULL(A.DR_AMT_I, 0)) != 0 OR SUM(ISNULL(A.CR_AMT_I, 0)) !=  0
	        END
	
	    ------- 4.2. 전표거래내역
	    INSERT INTO #AGJ210T_160621
	    SELECT  REPLACE(
	            REPLACE(
	            REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.AC_DATE, 1, 4))
	                               , 'MM'  , SUBSTRING(A.AC_DATE, 5, 2))
	                               , 'DD'  , SUBSTRING(A.AC_DATE, 7, 2))       AS AC_DATE
	
	         ,  A.SLIP_NUM
	         ,  A.SLIP_SEQ
	         ,  ISNULL(A.REMARK,'') AS REMARK
	         ,  CASE WHEN ISNULL(A.CUSTOM_NAME,'') = ''
	                 THEN C1.CUSTOM_NAME
	                 ELSE A.CUSTOM_NAME
	            END AS CUSTOM_NAME
	         ,  ISNULL(C3.ACCNT_NAME,'') AS P_ACCNT_NAME
	         ,  CASE WHEN A.DR_CR = '1'
	                 THEN A.AMT_I
	                 ELSE 0.0
	            END AS DR_AMT_I
	         ,  CASE WHEN A.DR_CR = '1'
	                 THEN 0.0
	                 ELSE A.AMT_I
	            END AS CR_AMT_I
	         ,  CASE WHEN C2.JAN_DIVI = A.DR_CR
	                 THEN A.AMT_I
	                 ELSE A.AMT_I * (-1)
	            END AS JAN_AMT_I
	         ,  A.MONEY_UNIT
	         ,  A.EXCHG_RATE_O AS EXCHG_RATE
	         ,  A.FOR_AMT_I
	         ,  C2.JAN_DIVI
	         ,  A.DEPT_CODE
	         ,  F7.TREE_NAME AS DEPT_NAME
	         ,  CASE WHEN ISNULL(A.AC_DATA1,'') = ''
	                 THEN NULL
	                 ELSE (CASE F1.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA1)
	                            ELSE A.AC_DATA1
	                        END)
	            END AS AC_DATA1
	         ,  A.AC_DATA_NAME1
	         ,  CASE WHEN ISNULL(A.AC_DATA2,'') = '' THEN NULL
	                 ELSE (CASE F2.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA2)
	                            ELSE A.AC_DATA2
	                        END)
	            END AS AC_DATA2
	         ,  A.AC_DATA_NAME2
	         ,  CASE WHEN ISNULL(A.AC_DATA3,'') = '' THEN NULL
	                 ELSE (CASE F3.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA3)
	                            ELSE A.AC_DATA3
	                        END)
	            END AS AC_DATA3
	         ,  A.AC_DATA_NAME3
	         ,  CASE WHEN ISNULL(A.AC_DATA4,'') = '' THEN NULL
	                 ELSE (CASE F4.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA4)
	                            ELSE A.AC_DATA4
	                        END)
	            END AS AC_DATA4
	         ,  A.AC_DATA_NAME4
	         ,  CASE WHEN ISNULL(A.AC_DATA5,'') = '' THEN NULL
	                 ELSE (CASE F5.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA5)
	                            ELSE A.AC_DATA5
	                        END)
	            END AS AC_DATA5
	         ,  A.AC_DATA_NAME5
	         ,  CASE WHEN ISNULL(A.AC_DATA6,'') = '' THEN NULL
	                 ELSE (CASE F6.DT_TYPE
	                            WHEN 'D' THEN uniLITE.fnGetUserDateComp(A.COMP_CODE, A.AC_DATA6)
	                            ELSE A.AC_DATA6
	                        END)
	            END AS AC_DATA6
	         ,  A.AC_DATA_NAME6
	         ,  N'1'                            AS GUBUN
	         ,  A.AUTO_NUM
	         ,  ISNULL(A.POSTIT_YN     , 'N')   AS POSTIT_YN
	         ,  ISNULL(A.POSTIT        , '' )   AS POSTIT
	         ,  ISNULL(A.POSTIT_USER_ID, '' )   AS POSTIT_USER_ID
	         ,  A.INPUT_PATH
	         ,  ISNULL(A.MOD_DIVI      , '' )   AS MOD_DIVI
	         ,  A.INPUT_DIVI
	         ,  A.DIV_CODE
	         ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), A.SLIP_NUM))) + (CONVERT(NVARCHAR(7), A.SLIP_NUM)) AS CHR_SLIP_NUM
	         ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), A.SLIP_SEQ))) + (CONVERT(NVARCHAR(5), A.SLIP_SEQ)) AS CHR_SLIP_SEQ
	    FROM           AGJ210T  AS A  WITH (NOLOCK)
	        INNER JOIN BOR120T  AS B  WITH (NOLOCK) ON  B.COMP_CODE    = A.COMP_CODE
	                                                AND B.DIV_CODE     = A.DIV_CODE
	        LEFT  JOIN BCM100T  AS C1 WITH (NOLOCK) ON  C1.COMP_CODE   = A.COMP_CODE
	                                                AND C1.CUSTOM_CODE = A.CUSTOM_CODE
            INNER JOIN ABA400T  AS C2 WITH (NOLOCK) ON  C2.COMP_CODE   = A.COMP_CODE
                                                    AND C2.ACCNT       = A.ACCNT
                                                    AND C2.SPEC_DIVI   = 'A'
	        LEFT  JOIN ABA400T  AS C3 WITH (NOLOCK) ON  C3.COMP_CODE   = A.COMP_CODE
	                                                AND C3.ACCNT       = A.P_ACCNT
	        LEFT  JOIN ABA200T  AS F1 WITH (NOLOCK) ON  F1.COMP_CODE   = A.COMP_CODE
	                                                AND F1.AC_CD       = A.AC_CODE1
	        LEFT  JOIN ABA200T  AS F2 WITH (NOLOCK) ON  F2.COMP_CODE   = A.COMP_CODE
	                                                AND F2.AC_CD       = A.AC_CODE2
	        LEFT  JOIN ABA200T  AS F3 WITH (NOLOCK) ON  F3.COMP_CODE   = A.COMP_CODE
	                                                AND F3.AC_CD       = A.AC_CODE3
	        LEFT  JOIN ABA200T  AS F4 WITH (NOLOCK) ON  F4.COMP_CODE   = A.COMP_CODE
	                                                AND F4.AC_CD       = A.AC_CODE4
	        LEFT  JOIN ABA200T  AS F5 WITH (NOLOCK) ON  F5.COMP_CODE   = A.COMP_CODE
	                                                AND F5.AC_CD       = A.AC_CODE5
	        LEFT  JOIN ABA200T  AS F6 WITH (NOLOCK) ON  F6.COMP_CODE   = A.COMP_CODE
	                                                AND F6.AC_CD       = A.AC_CODE6
	        LEFT  JOIN BSA210T  AS F7 WITH (NOLOCK) ON  F7.COMP_CODE   = A.COMP_CODE
	                                                AND F7.TREE_CODE   = A.DEPT_CODE
	        LEFT  JOIN BSA100T  AS M1 WITH (NOLOCK) ON  M1.COMP_CODE   = A.COMP_CODE
	                                                AND M1.MAIN_CODE   = 'A009'
	                                                AND M1.SUB_CODE    = A.CHARGE_CODE
	    WHERE A.COMP_CODE = @COMP_CODE
	    AND   A.AC_DATE  &gt;= @FR_DATE
	    AND   A.AC_DATE  &lt;= @TO_DATE
	    AND   ((A.ACCNT       LIKE       ISNULL(@ACCNT  , '')      + '%' AND ISNULL(@ACCNT  , '')      != '') OR (ISNULL(@ACCNT  , '')      = ''))
	    AND   ((A.P_ACCNT     LIKE       ISNULL(@P_ACCNT, '')      + '%' AND ISNULL(@P_ACCNT, '')      != '') OR (ISNULL(@P_ACCNT, '')      = ''))
	    AND   ((C3.ACCNT_NAME LIKE '%' + ISNULL(@P_ACCNT_NAME, '') + '%' AND ISNULL(@P_ACCNT_NAME, '') != '') OR (ISNULL(@P_ACCNT_NAME, '') = ''))
	
	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">    
	   AND A.DIV_CODE IN
		<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
			#{item}
		</foreach>         
	</if>
	
	    AND   ((A.BOOK_DATA1             = ISNULL(@BOOK_DATA1, '')               AND ISNULL(@BOOK_DATA1, '')   != '' AND ISNULL(@BOOK_NAME1, '') != '') OR
	           (A.BOOK_DATA1          LIKE '%' + ISNULL(@BOOK_DATA1, '')  + '%'  AND ISNULL(@BOOK_DATA1, '')   != '' AND ISNULL(@BOOK_NAME1, '')  = '') OR
	           (A.BOOK_DATA_NAME1     LIKE '%' + ISNULL(@BOOK_NAME1, '')  + '%'  AND ISNULL(@BOOK_DATA1, '')    = '' AND ISNULL(@BOOK_NAME1, '') != '') OR
	           (ISNULL(@BOOK_DATA1, '')              = ''                        AND ISNULL(@BOOK_NAME1, '')    = ''))
	
	    AND   ((A.BOOK_DATA2             = ISNULL(@BOOK_DATA2, '')               AND ISNULL(@BOOK_DATA2, '')   != '' AND ISNULL(@BOOK_NAME2, '') != '') OR
	           (A.BOOK_DATA2          LIKE '%' + ISNULL(@BOOK_DATA2, '')  + '%'  AND ISNULL(@BOOK_DATA2, '')   != '' AND ISNULL(@BOOK_NAME2, '')  = '') OR
	           (A.BOOK_DATA_NAME2     LIKE '%' + ISNULL(@BOOK_NAME2, '')  + '%'  AND ISNULL(@BOOK_DATA2, '')    = '' AND ISNULL(@BOOK_NAME2, '') != '') OR
	           (ISNULL(@BOOK_DATA2, '')              = ''                        AND ISNULL(@BOOK_NAME2, '')    = ''))
	
	    AND   ((ISNULL(A.MOD_DIVI,'')    = ''                        AND @SHOW_MOD_DATA = 'N') OR (@SHOW_MOD_DATA  = 'Y'))
	    AND   ((A.POSTIT_YN              = ISNULL(@POSTIT_YN, '')                AND ISNULL(@POSTIT_YN, '')    != '' ) OR (ISNULL(@POSTIT_YN, '')      = ''))
	
	    AND   ((ISNULL(A.AMT_I,0.0)     &gt;= @FR_AMT_I                 AND @FR_AMT_I     IS NOT NULL) OR (@FR_AMT_I     IS NULL))
	    AND   ((ISNULL(A.AMT_I,0.0)     &lt;= @TO_AMT_I                 AND @TO_AMT_I     IS NOT NULL) OR (@TO_AMT_I     IS NULL))
	    AND   ((ISNULL(A.FOR_AMT_I,0.0) &gt;= @FR_FOR_AMT_I             AND @FR_FOR_AMT_I IS NOT NULL) OR (@FR_FOR_AMT_I IS NULL))
	    AND   ((ISNULL(A.FOR_AMT_I,0.0) &lt;= @TO_FOR_AMT_I             AND @TO_FOR_AMT_I IS NOT NULL) OR (@TO_FOR_AMT_I IS NULL))
	
	    AND   ((A.POSTIT              LIKE '%' + ISNULL(@POSTIT, '') 	 + '%'  AND ISNULL(@POSTIT, '') 	  	 != '') OR (ISNULL(@POSTIT, '') 	     = ''))
	    AND   ((A.CHARGE_CODE         LIKE '%' + ISNULL(@CHARGE_CODE, '') + '%'  AND ISNULL(@CHARGE_CODE, '')  != '') OR (ISNULL(@CHARGE_CODE, '')  = ''))
	    AND   ((M1.CODE_NAME          LIKE '%' + ISNULL(@CHARGE_NAME, '') + '%'  AND ISNULL(@CHARGE_NAME, '')  != '') OR (ISNULL(@CHARGE_NAME, '')  = ''))
	    AND   ((A.REMARK              LIKE '%' + ISNULL(@REMARK, '') + '%'       AND ISNULL(@REMARK, '')       != '') OR (ISNULL(@REMARK, '')       = ''))
        AND   ((A.DEPT_CODE     &gt;= ISNULL(@FR_DEPT_CODE, '')          AND ISNULL(@FR_DEPT_CODE, '') != '') OR (ISNULL(@FR_DEPT_CODE, '') = ''))
        AND   ((A.DEPT_CODE     &lt;= ISNULL(@TO_DEPT_CODE, '')          AND ISNULL(@TO_DEPT_CODE, '') != '') OR (ISNULL(@TO_DEPT_CODE, '') = ''))
	
	    ------- 4.2.3 잔액 계산하여 UPDATE
	    DECLARE         @AccrueI            NUMERIC(30,6)               -- 잔액
	
	    SET @AccrueI   = 0
	
	    UPDATE  A
	    SET     @AccrueI        = CASE WHEN A.JAN_DIVI = '1' THEN ISNULL(@AccrueI, 0) + A.DR_AMT_I - A.CR_AMT_I
	                                   ELSE ISNULL(@AccrueI, 0) + A.CR_AMT_I - A.DR_AMT_I
	                              END
	         ,  A.JAN_AMT_I     = @AccrueI
	    FROM    #AGJ210T_160621 A WITH (NOLOCK, INDEX(AGJ210T_160621_IDX01))
	    WHERE   (A.GUBUN = '0' OR A.GUBUN = '1')
	
	    ------- 4.3.1 소계(일)
	    INSERT INTO #AGJ210T_160621 (AC_DATE, REMARK, DR_AMT_I, CR_AMT_I, GUBUN)
	    SELECT  ISNULL(A.AC_DATE      , '')         AS AC_DATE
	         ,  N'소계(일)'          AS REMARK
	         ,  SUM(ISNULL(A.DR_AMT_I     , 0 ))    AS DR_AMT_I
	         ,  SUM(ISNULL(A.CR_AMT_I     , 0 ))    AS CR_AMT_I
	         ,  N'2'                                AS GUBUN
	    FROM  #AGJ210T_160621 A WITH (NOLOCK)
	    WHERE A.GUBUN    = '1'
	    AND   ISNULL(A.MOD_DIVI, '') = ''
	    GROUP BY A.AC_DATE
	
	    ------- 4.3.2 소계(월)
	    INSERT INTO #AGJ210T_160621 (AC_DATE, REMARK, DR_AMT_I, CR_AMT_I, GUBUN)
	    SELECT  MAX(ISNULL(A.AC_DATE      , ''))    AS AC_DATE
	         ,  N'소계(월)'          AS REMARK
	         ,  SUM(ISNULL(A.DR_AMT_I     , 0 ))    AS DR_AMT_I
	         ,  SUM(ISNULL(A.CR_AMT_I     , 0 ))    AS CR_AMT_I
	         ,  N'3'                                AS GUBUN
	    FROM  #AGJ210T_160621 A WITH (NOLOCK)
	    WHERE A.GUBUN    = '1'
	    AND   ISNULL(A.MOD_DIVI, '') = ''
	    GROUP BY SUBSTRING(A.AC_DATE, 1, 7)
	
	    ------- 4.4. 누계
	    INSERT INTO #AGJ210T_160621 (AC_DATE, REMARK, DR_AMT_I, CR_AMT_I, JAN_AMT_I, JAN_DIVI, GUBUN, CHR_SLIP_NUM, CHR_SLIP_SEQ)
	    SELECT  MAX(ISNULL(A.AC_DATE      , ''))    AS AC_DATE
	         ,  N'누     계'          AS REMARK
	         ,  SUM(ISNULL(A.DR_AMT_I     , 0 ))    AS DR_AMT_I
	         ,  SUM(ISNULL(A.CR_AMT_I     , 0 ))    AS CR_AMT_I
	         ,  CASE WHEN A.JAN_DIVI = '1' THEN SUM(ISNULL(A.DR_AMT_I, 0 ) - ISNULL(A.CR_AMT_I, 0 ))
	                 ELSE SUM(ISNULL(A.CR_AMT_I, 0 ) - ISNULL(A.DR_AMT_I, 0 ))
	            END                                 AS JAN_AMT_I
	         ,  A.JAN_DIVI
	         ,  N'4'                                 AS GUBUN
	         ,  REPLICATE('0', 7 - LEN(CONVERT(NVARCHAR(7), 9999999))) + (CONVERT(NVARCHAR(7), 9999999)) AS CHR_SLIP_NUM
	         ,  REPLICATE('0', 5 - LEN(CONVERT(NVARCHAR(5), 99999)))   + (CONVERT(NVARCHAR(5), 99999))   AS CHR_SLIP_SEQ
	    FROM  #AGJ210T_160621 A WITH (NOLOCK)
	    WHERE A.GUBUN = '1'
	    AND   ISNULL(A.MOD_DIVI, '') = ''
	    GROUP BY SUBSTRING(A.AC_DATE, 1, 7), A.JAN_DIVI
	
	    ------- 4.4.1 누계차변계, 대변계, 잔액 계산하여 UPDATE
	    DECLARE         @4_AccrueI      NUMERIC(30,6)               -- 잔액
	                  , @4_DrAmtI       NUMERIC(30,6)               -- 누계차변의 누적금액
	                  , @4_CrAmtI       NUMERIC(30,6)               -- 누계대변의 누적금액
	
	    SET @4_AccrueI   = 0
	    SET @4_DrAmtI    = 0
	    SET @4_CrAmtI    = 0
	
	    UPDATE  A
	    SET     @4_AccrueI      = CASE WHEN A.JAN_DIVI = '1' THEN ISNULL(@4_AccrueI, 0) + A.DR_AMT_I - A.CR_AMT_I
	                                   ELSE                       ISNULL(@4_AccrueI, 0) + A.CR_AMT_I - A.DR_AMT_I
	                              END
	         ,  A.JAN_AMT_I     = @4_AccrueI
	         ,  @4_DrAmtI       = ISNULL(@4_DrAmtI, 0)  + A.DR_AMT_I
	         ,  @4_CrAmtI       = ISNULL(@4_CrAmtI, 0)  + A.CR_AMT_I
	         ,  A.DR_AMT_I      = @4_DrAmtI
	         ,  A.CR_AMT_I      = @4_CrAmtI
	    FROM    #AGJ210T_160621 A WITH (NOLOCK, INDEX(AGJ210T_160621_IDX01))
	    WHERE (A.GUBUN = '0' OR A.GUBUN = '4')
	
	    ------- 5. 리턴 데이터
	    SELECT  CASE WHEN A.GUBUN IN ('0', '2', '3', '4') THEN NULL ELSE A.AC_DATE END AS AC_DATE
	         ,  A.SLIP_NUM
	         ,  A.SLIP_SEQ
	         ,  ISNULL(A.REMARK        , '')   AS REMARK
	         ,  ISNULL(A.P_ACCNT_NAME  , '')   AS P_ACCNT_NAME
	         ,  ISNULL(A.DR_AMT_I , 0 )        AS DR_AMT_I
	         ,  ISNULL(A.CR_AMT_I , 0 )        AS CR_AMT_I
	         ,  ISNULL(A.JAN_AMT_I, 0 )        AS JAN_AMT_I
	         ,  A.MONEY_UNIT
	         ,  ISNULL(A.EXCHG_RATE, 0)        AS EXCHG_RATE
	         ,  ISNULL(A.FOR_AMT_I , 0 )       AS FOR_AMT_I
	         ,  A.GUBUN
	         ,  A.AUTO_NUM
	         ,  ISNULL(A.POSTIT_YN     ,'N')   AS POSTIT_YN
	         ,  ISNULL(A.POSTIT        , '')   AS POSTIT
	         ,  ISNULL(A.POSTIT_USER_ID, '')   AS POSTIT_USER_ID
	         ,  ISNULL(A.INPUT_PATH    , '')   AS INPUT_PATH
	         ,  ISNULL(A.MOD_DIVI      , '')   AS MOD_DIVI
	         ,  ISNULL(A.INPUT_DIVI    , '')   AS INPUT_DIVI
	         ,  ISNULL(A.DIV_CODE      , '')   AS DIV_CODE
	    FROM           #AGJ210T_160621 AS A  WITH (NOLOCK)
	    ORDER BY A.AC_DATE, A.GUBUN, A.SLIP_NUM, A.SLIP_SEQ, A.AUTO_NUM
	
	    SET     NOCOUNT    OFF
	    SET     ARITHABORT OFF
	</select>
	
	
	<select id="agb130skrServiceImpl.fnAgb130Init" parameterType="Map" resultType="rMap">	
	    SELECT   PT_TITLENAME 		 
				,PT_COMPANY_YN 		 
				,PT_SANCTION_YN 	 
				,PT_PAGENUM_YN 		 
				,PT_OUTPUTDATE_YN 	
		FROM BSA310T  WITH (NOLOCK)  			
		WHERE COMP_CODE = #{S_COMP_CODE}
			AND PGM_ID  = 'agb130rkr'
			AND USER_ID = #{S_USER_ID} 
	</select>
	
	<select id="agb130skrServiceImpl.selectDivCode" parameterType="Map" resultType="rMap">
		SELECT A.DIV_CODE
          , A.DIV_NAME
          , (CASE WHEN ISNULL(A.COMPANY_NUM,'') = ''
                       THEN ''
                       ELSE (SUBSTRING(A.COMPANY_NUM,1,3) + '-' + 
                             SUBSTRING(A.COMPANY_NUM,4,2) + '-' + 
                             SUBSTRING(A.COMPANY_NUM,6,5))
              END) COMPANY_NUM
          , A.REPRE_NAME
          , unilite.fnCipherDecrypt(A.REPRE_NO, 'A') AS REPRE_NO
          , A.COMP_CLASS
          , A.COMP_TYPE
          , A.ZIP_CODE
          , A.ADDR
          , A.TELEPHON
          , A.FAX_NUM
          , A.SAFFER_TAX
          , A.SAFFER_TAX_NM
          , A.BILL_DIV_CODE
          , (SELECT DIV_NAME
               FROM BOR120T B WITH(NOLOCK)
              WHERE B.COMP_CODE = A.COMP_CODE
                AND B.DIV_CODE  = A.BILL_DIV_CODE) AS BILL_DIV_NAME
          , A.TAX_NAME
          , (CASE WHEN ISNULL(A.TAX_NUM,'') = ''
                       THEN ''
                       ELSE (SUBSTRING(A.TAX_NUM,1,3) + '-' +
                             SUBSTRING(A.TAX_NUM,4,2) + '-' +
                             SUBSTRING(A.TAX_NUM,6,5))
              END) TAX_NUM
          , A.TAX_TEL
          , A.HANDPHONE
          , A.DIV_FULL_NAME
          , A.EMAIL
          , A.COMP_CODE
          , A.SUB_DIV_NUM
          , A.HOMETAX_ID   -- remark by chenaibo  20161026   ERROR OCCUR in OMEGAPLUS_DEV
          , A.TAX_ADDR
          , A.BANK_CODE
          , ( SELECT CUSTOM_NAME AS BANK_NAME
				FROM BCM100T WITH (NOLOCK)
			   WHERE COMP_CODE = A.COMP_CODE
			     AND CUSTOM_TYPE = '4'
			     AND CUSTOM_CODE = A.BANK_CODE
			 )															AS BANK_NAME
          , unilite.fnCipherDecrypt(A.BANK_BOOK_NUM, 'RB')
          , M1.CUSTOM_NAME AS BANK_NAME
          , unilite.fnCipherDecrypt(A.BANK_BOOK_NUM, '') AS BANK_BOOK_NUM
     FROM           BOR120T A  WITH(NOLOCK)
          LEFT JOIN BCM100T M1 WITH(NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
                                           AND M1.CUSTOM_CODE = A.BANK_CODE
                                           AND M1.CUSTOM_TYPE ='4'
     WHERE A.COMP_CODE = #{S_COMP_CODE}
	<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">    
	   AND A.DIV_CODE IN
		<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
			#{item}
		</foreach>         
	</if>
	</select>
</mapper>