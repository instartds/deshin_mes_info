<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agb150skrServiceImpl">
	
	<select id="agb150skrServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects   WHERE ID=OBJECT_ID('tempdb..#MONEY'))
	       DROP TABLE #MONEY
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects  WHERE ID=OBJECT_ID('tempdb..#AGB150'))
	       DROP TABLE #AGB150
		
		--UUArpt02KRv.Cagb150SKR[fnagb150q] Query1
		<if test="RDO1 == &quot;1&quot;">		--고정환율
		SELECT MONEY_UNIT
		     , ISNULL(BASE_EXCHG,0) EXCHG_RATE
		  INTO #MONEY
		  FROM BCM510T  WITH (NOLOCK)
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND EXCHG_DIVI = 1
		   AND AC_DATE    = #{AC_DATE_TO_M}
		</if>
		<if test="RDO1 == &quot;3&quot;">		--전표평균환율
		SELECT MONEY_UNIT
		     , AVG(EXCHG_RATE) EXCHG_RATE
		  INTO #MONEY 
		  FROM (
		        SELECT MONEY_UNIT
		             , CASE B.JAN_DIVI 
		                    WHEN '1'
		                         THEN ABS(SUM(DR_AMT_I - CR_AMT_I) / ( CASE WHEN SUM(DR_FOR_AMT_I - CR_FOR_AMT_I) = 0 
		                                                                         THEN 1 
		                                                                              ELSE SUM(DR_FOR_AMT_I - CR_FOR_AMT_I) 
		                                                               END))
		                    WHEN '2' 
		                         THEN ABS(SUM(CR_AMT_I - DR_AMT_I) / ( CASE WHEN SUM(CR_FOR_AMT_I - DR_FOR_AMT_I) = 0 
		                                                                         THEN 1 
		                                                                              ELSE SUM(CR_FOR_AMT_I - DR_FOR_AMT_I) 
		                                                                END)) 
		                END EXCHG_RATE
		             , B.JAN_DIVI
		          FROM AGB100T A  WITH (NOLOCK) 
		                       INNER JOIN ABA400T B   WITH (NOLOCK)
		                               ON A.ACCNT     = B.ACCNT
		                              AND A.COMP_CODE = B.COMP_CODE
		         WHERE A.COMP_CODE  = #{S_COMP_CODE}
		           <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">     
						AND DIV_CODE IN
						<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
							#{item}
						</foreach>         
					</if>
		           AND AC_DATE &gt;= #{AC_DATE_FR_M}
		           AND AC_DATE &lt;= #{AC_DATE_TO}
		           AND ISNULL(B.FOR_YN,'') = 'Y'
		         GROUP BY MONEY_UNIT , B.JAN_DIVI   
		       ) T
		 GROUP BY MONEY_UNIT
		</if>
		<if test="RDO1 == &quot;4&quot;">		--평가환율
			SELECT #{MONEY_UNIT} MONEY_UNIT
				<if test="@foren.Ognl@isNotEmpty(TEMP)">
			     , ${TEMP} EXCHG_RATE
				</if>
				<if test="@foren.Ognl@isEmpty(TEMP)">
				 , 0 EXCHG_RATE
				</if>
			  INTO #MONEY
		</if>
		--UUArpt02KRv.Cagb150SKR[fnagb150q] Query2
		DECLARE @POINT NVARCHAR(1)
		SELECT @POINT = AMT_POINT FROM ABA100T  WITH (NOLOCK) WHERE COMP_CODE = N'MASTER'
		SELECT
			DIV_CODE 
			,ACCNT
		     , ACCNT_NAME
		     , MONEY_UNIT 
		     , BOOK_DATA1
		     , BOOK_NAME1
		     , BOOK_DATA2
		     , BOOK_NAME2
		     , IWAL_FOR_AMT_I
		     , DR_FOR_AMT_I
		     , CR_FOR_AMT_I
		     , JAN_FOR_AMT_I
		     , IWAL_AMT_I
		     , DR_AMT_I
		     , CR_AMT_I
		     , JAN_AMT_I
		     , EXCHG_RATE
		     , CASE @POINT WHEN '1' 
		                        THEN FLOOR(IWAL_AMT_UNIT)
		                   WHEN '2'
		                        THEN CEILING(IWAL_AMT_UNIT)
		                        ELSE ROUND(IWAL_AMT_UNIT,0) 
		        END AS IWAL_AMT_UNIT
		     , CASE @POINT WHEN '1'
		                        THEN FLOOR(DR_AMT_UNIT)
		                   WHEN '2' 
		                        THEN CEILING(DR_AMT_UNIT)
		                        ELSE ROUND(DR_AMT_UNIT,0) 
		        END AS DR_AMT_UNIT
		     , CASE @POINT WHEN '1'
		                        THEN FLOOR(CR_AMT_UNIT)
		                   WHEN '2'
		                        THEN CEILING(CR_AMT_UNIT)
		                        ELSE ROUND(CR_AMT_UNIT,0) 
		        END AS CR_AMT_UNIT
		     , CASE @POINT WHEN '1' 
		                        THEN FLOOR(JAN_AMT_UNIT)
		                   WHEN '2'
		                        THEN CEILING(JAN_AMT_UNIT)
		                        ELSE ROUND(JAN_AMT_UNIT,0)
		        END AS JAN_AMT_UNIT
		  INTO #AGB150
		  FROM (
		        SELECT
		        	A.DIV_CODE 
		        	,ACCNT
		             , ACCNT_NAME
		             , A.MONEY_UNIT
		             , CASE WHEN ISNULL(BOOK_CODE1, '') = '' THEN '' ELSE ISNULL(BOOK_DATA1,'') END	AS BOOK_DATA1
		             , ISNULL((SELECT AC_NAME 
		                         FROM ABA200TV   WITH (NOLOCK)
		                        WHERE COMP_CODE = A.COMP_CODE
		                          AND AC_CODE   = A.BOOK_CODE1 
		                          AND AC_DATA   = CASE WHEN ISNULL(BOOK_CODE1, '') = '' THEN '' ELSE ISNULL(BOOK_DATA1,'') END),'') BOOK_NAME1
		             , CASE WHEN ISNULL(BOOK_CODE2, '') = '' THEN '' ELSE ISNULL(BOOK_DATA2,'') END	AS BOOK_DATA2
		             , ISNULL((SELECT AC_NAME 
		                         FROM ABA200TV   WITH (NOLOCK)
		                        WHERE COMP_CODE = A.COMP_CODE
		                          AND AC_CODE   = A.BOOK_CODE2 
		                          AND AC_DATA   = CASE WHEN ISNULL(BOOK_CODE2, '') = '' THEN '' ELSE ISNULL(BOOK_DATA2,'') END),'') BOOK_NAME2
		             , SUM(CASE WHEN A.AC_DATE &gt;= #{START_DATE} AND AC_DATE &lt; #{AC_DATE_FR}
		                             THEN CASE A.JAN_DIVI
		                                       WHEN '1'
		                                            THEN ISNULL(A.DR_FOR_AMT_I,0) - ISNULL(A.CR_FOR_AMT_I,0)
		                                       WHEN '2' 
		                                            THEN ISNULL(A.CR_FOR_AMT_I,0) - ISNULL(A.DR_FOR_AMT_I,0) 
		                                   END
		                             ELSE 0 
		                    END) IWAL_FOR_AMT_I
		             , SUM(CASE WHEN A.AC_DATE BETWEEN #{AC_DATE_FR} AND #{AC_DATE_TO}
		                             THEN ISNULL(A.DR_FOR_AMT_I,0)
		                             ELSE 0 
		                    END) DR_FOR_AMT_I
		             , SUM(CASE WHEN A.AC_DATE BETWEEN #{AC_DATE_FR} AND #{AC_DATE_TO}
		                             THEN ISNULL(A.CR_FOR_AMT_I,0)
		                             ELSE 0 
		                    END) CR_FOR_AMT_I
		             , SUM(CASE WHEN A.AC_DATE BETWEEN #{START_DATE} AND #{AC_DATE_TO}
		                             THEN CASE A.JAN_DIVI
		                                       WHEN '1'
		                                            THEN ISNULL(A.DR_FOR_AMT_I,0) - ISNULL(A.CR_FOR_AMT_I,0)
		                                       WHEN '2' 
		                                            THEN ISNULL(A.CR_FOR_AMT_I,0) - ISNULL(A.DR_FOR_AMT_I,0)
		                                   END
		                             ELSE 0 
		                    END) JAN_FOR_AMT_I
		             , SUM(CASE WHEN A.AC_DATE &gt;= #{START_DATE} AND AC_DATE &lt; #{AC_DATE_FR}
		                             THEN CASE A.JAN_DIVI
		                                       WHEN '1'
		                                            THEN ISNULL(A.DR_AMT_I,0) - ISNULL(A.CR_AMT_I,0)
		                                       WHEN '2'
		                                            THEN ISNULL(A.CR_AMT_I,0) - ISNULL(A.DR_AMT_I,0)
		                                   END
		                             ELSE 0 
		                    END) IWAL_AMT_I
		             , SUM(CASE WHEN A.AC_DATE BETWEEN #{AC_DATE_FR} AND #{AC_DATE_TO}
		                             THEN ISNULL(A.DR_AMT_I,0)
		                             ELSE 0 
		                    END) DR_AMT_I
		             , SUM(CASE WHEN A.AC_DATE BETWEEN #{AC_DATE_FR} AND #{AC_DATE_TO}
		                             THEN ISNULL(A.CR_AMT_I,0)
		                             ELSE 0 
		                    END) CR_AMT_I
		             , SUM(CASE WHEN A.AC_DATE BETWEEN #{START_DATE} AND #{AC_DATE_TO}
		                             THEN CASE A.JAN_DIVI
		                                       WHEN '1'
		                                            THEN ISNULL(A.DR_AMT_I,0) - ISNULL(A.CR_AMT_I,0)
		                                       WHEN '2' 
		                                            THEN ISNULL(A.CR_AMT_I,0) - ISNULL(A.DR_AMT_I,0)
		                                   END
		                             ELSE 0
		                    END) JAN_AMT_I
		             , ISNULL(C.EXCHG_RATE, 0) EXCHG_RATE
		             , SUM(CASE WHEN A.AC_DATE &gt;= #{START_DATE} AND AC_DATE &lt; #{AC_DATE_FR}
		                             THEN CASE A.JAN_DIVI
		                                       WHEN '1'
		                                            THEN ISNULL(A.DR_FOR_AMT_I,0) - ISNULL(A.CR_FOR_AMT_I,0)
		                                       WHEN '2'
		                                            THEN ISNULL(A.CR_FOR_AMT_I,0) - ISNULL(A.DR_FOR_AMT_I,0)
		                                   END
		                               ELSE 0
		                    END) * ISNULL(C.EXCHG_RATE, 0) AS IWAL_AMT_UNIT
		             , SUM(CASE WHEN A.AC_DATE BETWEEN #{AC_DATE_FR} AND #{AC_DATE_TO}
		                             THEN ISNULL(A.DR_FOR_AMT_I,0)
		                             ELSE 0 
		                    END) * ISNULL(C.EXCHG_RATE, 0) AS DR_AMT_UNIT
		             , SUM(CASE WHEN A.AC_DATE BETWEEN #{AC_DATE_FR} AND #{AC_DATE_TO}
		                             THEN ISNULL(A.CR_FOR_AMT_I,0)
		                             ELSE 0
		                    END) * ISNULL(C.EXCHG_RATE, 0) AS CR_AMT_UNIT
		             , SUM(CASE WHEN A.AC_DATE BETWEEN #{START_DATE} AND #{AC_DATE_TO}
		                             THEN CASE A.JAN_DIVI
		                                       WHEN '1'
		                                            THEN ISNULL(A.DR_FOR_AMT_I,0) - ISNULL(A.CR_FOR_AMT_I,0)
		                                       WHEN '2'
		                                            THEN ISNULL(A.CR_FOR_AMT_I,0) - ISNULL(A.DR_FOR_AMT_I,0)
		                                   END
		                             ELSE 0 
		                    END) * ISNULL(C.EXCHG_RATE, 0) AS JAN_AMT_UNIT
		          FROM AGB110TV A   WITH (NOLOCK)
		                        INNER JOIN BOR120T B   WITH (NOLOCK)
		                                ON A.DIV_CODE  = B.DIV_CODE
		                               AND A.COMP_CODE = B.COMP_CODE
		                   LEFT OUTER JOIN #MONEY C 
		                                ON A.MONEY_UNIT = C.MONEY_UNIT
		         WHERE A.COMP_CODE = #{S_COMP_CODE}
		           AND A.AC_DATE &gt;= #{START_DATE}
		           AND A.AC_DATE &lt;= #{AC_DATE_TO}
		           AND A.FOR_YN   = 'Y'
		          <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">					
			       AND A.DIV_CODE IN
						<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
						 #{item}
						</foreach>									
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)"> 
				   	AND A.ACCNT = #{ACCNT_CODE}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)"> 
				    AND ACCNT_NAME LIKE '%' + #{ACCNT_NAME} + '%'
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)"> 
				    AND A.MONEY_UNIT = #{MONEY_UNIT}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(BOOK_CODE1)"> 
				    AND BOOK_DATA1 = #{BOOK_CODE1}
				  </if>
				  <if test="@foren.Ognl@isNotEmpty(BOOK_CODE2)"> 
				    AND BOOK_DATA2 = #{BOOK_CODE2}
				  </if>
				   
		         GROUP BY A.COMP_CODE,A.DIV_CODE, ACCNT, ACCNT_NAME, A.MONEY_UNIT
						, CASE WHEN ISNULL(BOOK_CODE1, '') = '' THEN '' ELSE ISNULL(BOOK_DATA1,'') END
						, CASE WHEN ISNULL(BOOK_CODE2, '') = '' THEN '' ELSE ISNULL(BOOK_DATA2,'') END
		                , BOOK_CODE1, BOOK_CODE2, C.EXCHG_RATE
		       ) T 
		 <if test="RDO2 == &quot;Y&quot;">		--금액기준(발생)
		 WHERE T.IWAL_FOR_AMT_I != 0 Or T.DR_FOR_AMT_I != 0 Or T.CR_FOR_AMT_I != 0 Or T.DR_AMT_I != 0 Or T.CR_AMT_I != 0
		 </if>
		 <if test="RDO2 != &quot;Y&quot;">		--금액기준(잔액)
		 WHERE (T.IWAL_FOR_AMT_I != 0 Or T.DR_FOR_AMT_I != 0 Or T.CR_FOR_AMT_I != 0 Or T.DR_AMT_I != 0 Or T.CR_AMT_I != 0) and (T.JAN_FOR_AMT_I != 0 Or T.JAN_AMT_I != 0)
		 </if>
		 ORDER BY ACCNT, MONEY_UNIT, BOOK_DATA1, BOOK_DATA2  
		
		--UUArpt02KRv.Cagb150SKR[fnagb150q] Query3
		SELECT
			DIV_CODE 
			,ACCNT
		     , ACCNT_NAME
		     , MONEY_UNIT 
		     , BOOK_DATA1
		     , BOOK_NAME1
		     , BOOK_DATA2
		     , BOOK_NAME2
		     , IWAL_FOR_AMT_I
		     , DR_FOR_AMT_I
		     , CR_FOR_AMT_I
		     , JAN_FOR_AMT_I
		     , IWAL_AMT_I
		     , DR_AMT_I
		     , CR_AMT_I
		     , JAN_AMT_I
		     , CONVERT(NUMERIC(18,6), EXCHG_RATE) AS EXCHG_RATE
		     , IWAL_AMT_UNIT
		     , DR_AMT_UNIT
		     , CR_AMT_UNIT
		     , JAN_AMT_UNIT
		     , GBN
		  FROM (
		        SELECT A.*, '1' GBN
		          FROM #AGB150 A  WITH (NOLOCK)
		
		         UNION ALL
		
		        SELECT
		        	DIV_CODE 
		        	,ACCNT
		             , ACCNT_NAME + CONVERT(NVARCHAR(20), ' 계') AS ACCNT_NAME
		             , MONEY_UNIT
		             , '' , '', '', ''   
		             , SUM(IWAL_FOR_AMT_I)
		             , SUM(DR_FOR_AMT_I)
		             , SUM(CR_FOR_AMT_I)
		             , SUM(JAN_FOR_AMT_I)
		             , SUM(IWAL_AMT_I)
		             , SUM(DR_AMT_I)
		             , SUM(CR_AMT_I)
		             , SUM(JAN_AMT_I)
		             , CONVERT(NUMERIC(18,6), 0.0) AS EXCHG_RATE
		             , SUM(IWAL_AMT_UNIT)
		             , SUM(DR_AMT_UNIT)
		             , SUM(CR_AMT_UNIT)
		             , SUM(JAN_AMT_UNIT)
		             , '2' GBN
		          FROM  #AGB150  WITH (NOLOCK)
		         GROUP BY DIV_CODE, ACCNT, ACCNT_NAME, MONEY_UNIT
		       ) Z
		 ORDER BY ACCNT, MONEY_UNIT, GBN, BOOK_DATA1, BOOK_DATA2
	
	</select>	
	
</mapper>