<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agb160skrServiceImpl">
	<select id="agb160skrServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">
		BEGIN
		   SET NOCOUNT ON
		   SET ARITHABORT ON
		
		   -- 1. 날짜 포맷 유형 설정 ------------------------------------------------------------------------------------------
		   DECLARE @DateFormat         NVARCHAR(01)
		         , @TimeFormat         NVARCHAR(01)    
		
		   SELECT TOP 1 @DateFormat = SUBSTRING(CODE_NAME, 5, 1)
		   FROM   BSA100T WITH (NOLOCK)
		   WHERE  COMP_CODE  = #{S_COMP_CODE}
		   AND    MAIN_CODE  = N'B044'
		   AND    REF_CODE1  = N'Y'
		
		   SET @DateFormat = ISNULL(@DateFormat, '.')
		   SET @TimeFormat = ISNULL(@TimeFormat, ':')
		
		   -- 2. 임시테이블 선언 ------------------------------------------------------------------------------------------
		   IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects  WHERE id=object_id('tempdb..#AGB160SKR'))
		       DROP TABLE #AGB160SKR
		
		   CREATE TABLE #AGB160SKR        ( GUBUN            NVARCHAR(01)
		                                  , DIVI             NVARCHAR(01)
		                                  , ORG_AC_DATE      NVARCHAR(10)
		                                  , ORG_SLIP_NUM     NUMERIC(7,0)
		                                  , ORG_SLIP_SEQ     NUMERIC(5,0)
		                                  , ACCNT            NVARCHAR(16)
		                                  , ACCNT_NAME       NVARCHAR(100)
		                                  , AC_NAME          NVARCHAR(50)
		                                  , PEND_DATA_CODE   NVARCHAR(30)
		                                  , PEND_DATA_NAME   NVARCHAR(100)
		                                  , PEND_SLIP_NO     NVARCHAR(20)
		                                  , ORG_AMT_I        NUMERIC(30, 6)
		                                  , J_AMT_I          NUMERIC(30, 6)
		                                  , BLN_I            NUMERIC(30, 6)
		                                  , REMARK           NVARCHAR(100)
		                                  , MONEY_UNIT       NVARCHAR(03)
		                                  , EXCHG_RATE_O     NUMERIC(30, 6)
		                                  , FOR_ORG_AMT_I    NUMERIC(30, 6)
		                                  , FOR_J_AMT_I      NUMERIC(30, 6)
		                                  , FOR_BLN_I        NUMERIC(30, 6)
		                                  , EXPECT_DATE      NVARCHAR(10)
		                                  , INPUT_PATH       NVARCHAR(02)
		                                  , AP_STS           NVARCHAR(01)
		                                  , DIV_CODE         NVARCHAR(08)
		                                  , INPUT_DIVI       NVARCHAR(02)
		                                  , DEPT_CODE        NVARCHAR(08)
		                                  , DEPT_NAME        NVARCHAR(30)
		                                  , AC_DATA1         NVARCHAR(30)
		                                  , AC_DATA_NAME1    NVARCHAR(80)
		                                  , AC_DATA2         NVARCHAR(30)
		                                  , AC_DATA_NAME2    NVARCHAR(80)
		                                  , AC_DATA3         NVARCHAR(30)
		                                  , AC_DATA_NAME3    NVARCHAR(80)
		                                  , AC_DATA4         NVARCHAR(30)
		                                  , AC_DATA_NAME4    NVARCHAR(80)
		                                  , AC_DATA5         NVARCHAR(30)
		                                  , AC_DATA_NAME5    NVARCHAR(80)
		                                  , AC_DATA6         NVARCHAR(30)
		                                  , AC_DATA_NAME6    NVARCHAR(80)
		                                  )
		
		   -- 3.1 미결현황 INSERT ------------------------------------------------------------------------------------------
		INSERT INTO #AGB160SKR
		SELECT DISTINCT 
		       '1' AS GUBUN
		     , DIVI
		     , CASE WHEN ISNULL(ORG_AC_DATE, '') = '' THEN NULL
		            ELSE CASE WHEN LEN(ORG_AC_DATE) = '6' THEN SUBSTRING(ORG_AC_DATE, 1, 4) + @DateFormat + 
		                                                       SUBSTRING(ORG_AC_DATE, 5, 2)
		                 ELSE SUBSTRING(ORG_AC_DATE, 1, 4) + @DateFormat + 
		                      SUBSTRING(ORG_AC_DATE, 5, 2) + @DateFormat + 
		                      SUBSTRING(ORG_AC_DATE, 7, 2)
		                  END
		        END                                       AS ORG_AC_DATE
		     , ORG_SLIP_NUM
		     , ORG_SLIP_SEQ
		     , ACCNT
		     , ACCNT_NAME
		     , AC_NAME
		     , PEND_DATA_CODE
		     , PEND_DATA_NAME
		     , J_DATE PEND_SLIP_NO
		     , ORG_AMT_I
		     , J_AMT_I
		     , CASE WHEN J_DATE = ''
		                 THEN ORG_AMT_I - J_AMT_I
		                 ELSE BLN_I 
		        END BLN_I
		     , REMARK
		     , MONEY_UNIT
		     , EXCHG_RATE_O
		     , FOR_ORG_AMT_I
		     , FOR_J_AMT_I
		     , CASE WHEN J_DATE = ''
		                 THEN FOR_ORG_AMT_I - FOR_J_AMT_I 
		                 ELSE FOR_BLN_I 
		        END FOR_BLN_I
		     , EXPECT_DATE
		     , INPUT_PATH
		     , AP_STS
		     , DIV_CODE
		     , INPUT_DIVI
		     , DEPT_CODE
		     , DEPT_NAME
		     , AC_DATA1
		     , AC_DATA_NAME1
		     , AC_DATA2
		     , AC_DATA_NAME2
		     , AC_DATA3
		     , AC_DATA_NAME3
		     , AC_DATA4
		     , AC_DATA_NAME4
		     , AC_DATA5
		     , AC_DATA_NAME5
		     , AC_DATA6
		     , AC_DATA_NAME6
		  FROM (
		        SELECT A.COMP_CODE
		             , '1' AS DIVI
		             , A.ORG_AC_DATE
		             , A.ORG_SLIP_NUM
		             , A.ORG_SLIP_SEQ
		             , A.ACCNT
		             , D.ACCNT_NAME
		             , E.AC_NAME
		             , A.PEND_DATA_CODE
		             , C.AC_NAME PEND_DATA_NAME
		             , '' J_DATE
		             , A.ORG_AMT_I
					 <if test="CHK_JAN == &quot;Y&quot;">
					   , ISNULL(G.J_AMT_I    , 0)   AS J_AMT_I
		               , ISNULL(G.BLN_I      , 0)   AS BLN_I
		               , ISNULL(G.FOR_J_AMT_I, 0)   AS FOR_J_AMT_I
		               , ISNULL(G.FOR_BLN_I  , 0)   AS FOR_BLN_I
					 </if>
					 <if test="CHK_JAN != &quot;Y&quot;">
			           , A.J_AMT_I
			           , A.BLN_I
			           , A.FOR_J_AMT_I
			           , A.FOR_BLN_I
				     </if>
		             , REPLACE(REPLACE(REPLACE(F.REMARK, char(10), ' '), char(13), ' '), char(9), ' ') AS REMARK
		             , A.MONEY_UNIT
		             , A.EXCHG_RATE_O 
		             , A.FOR_ORG_AMT_I
		             , CASE WHEN (F.AC_CODE1 = 'L3' OR F.AC_CODE1 = 'L2') THEN UNILITE.fnGetUserDateComp(A.COMP_CODE, F.AC_DATA1)
		                    WHEN (F.AC_CODE2 = 'L3' OR F.AC_CODE2 = 'L2') THEN UNILITE.fnGetUserDateComp(A.COMP_CODE, F.AC_DATA2)
		                    WHEN (F.AC_CODE3 = 'L3' OR F.AC_CODE3 = 'L2') THEN UNILITE.fnGetUserDateComp(A.COMP_CODE, F.AC_DATA3)
		                    WHEN (F.AC_CODE4 = 'L3' OR F.AC_CODE4 = 'L2') THEN UNILITE.fnGetUserDateComp(A.COMP_CODE, F.AC_DATA4)
		                    WHEN (F.AC_CODE5 = 'L3' OR F.AC_CODE5 = 'L2') THEN UNILITE.fnGetUserDateComp(A.COMP_CODE, F.AC_DATA5)
		                    WHEN (F.AC_CODE6 = 'L3' OR F.AC_CODE6 = 'L2') THEN UNILITE.fnGetUserDateComp(A.COMP_CODE, F.AC_DATA6)
		                    ELSE ''
		                END EXPECT_DATE
		             , A.INPUT_PATH
		             , '2' AS AP_STS
		             , A.DIV_CODE
		             , F.INPUT_DIVI
		             , A.DEPT_CODE
		             , A.DEPT_NAME
		             , ISNULL(F.AC_DATA1, '')      AS AC_DATA1
		             , ISNULL(F.AC_DATA_NAME1, '') AS AC_DATA_NAME1
		             , ISNULL(F.AC_DATA2, '')      AS AC_DATA2
		             , ISNULL(F.AC_DATA_NAME2, '') AS AC_DATA_NAME2
		             , ISNULL(F.AC_DATA3, '')      AS AC_DATA3
		             , ISNULL(F.AC_DATA_NAME3, '') AS AC_DATA_NAME3
		             , ISNULL(F.AC_DATA4, '')      AS AC_DATA4
		             , ISNULL(F.AC_DATA_NAME4, '') AS AC_DATA_NAME4
		             , ISNULL(F.AC_DATA5, '')      AS AC_DATA5
		             , ISNULL(F.AC_DATA_NAME5, '') AS AC_DATA_NAME5
		             , ISNULL(F.AC_DATA6, '')      AS AC_DATA6
		             , ISNULL(F.AC_DATA_NAME6, '') AS AC_DATA_NAME6
		          FROM             AGB300T  A WITH (NOLOCK)
		                LEFT  JOIN (SELECT COMP_CODE, ACCNT, ORG_AC_DATE, ORG_SLIP_NUM, ORG_SLIP_SEQ
		                                 , SUM(ISNULL(J_AMT_I    , 0))  AS J_AMT_I
		                                 , 0                            AS BLN_I
		                                 , SUM(ISNULL(FOR_J_AMT_I, 0))  AS FOR_J_AMT_I
		                                 , 0                            AS FOR_BLN_I
		                              FROM AGB310T WITH (NOLOCK)
		                             WHERE COMP_CODE    = #{S_COMP_CODE}
		                               AND ORG_AC_DATE &gt;= #{FR_DATE}
		                               AND ORG_AC_DATE &lt;= #{TO_DATE}
		                               AND J_DATE      &lt;= #{TO_DATE}
									<if test="@foren.Ognl@isNotEmpty(J_DATE_FR)">
									   AND J_DATE      &gt;= #{J_DATE_FR}
									</if>
									<if test="@foren.Ognl@isNotEmpty(J_DATE_TO)">
									   AND J_DATE      &lt;= #{J_DATE_TO}
									</if>
		                             GROUP BY COMP_CODE, ACCNT, ORG_AC_DATE, ORG_SLIP_NUM, ORG_SLIP_SEQ
		                           )        G               ON G.COMP_CODE    = A.COMP_CODE
		                                                   AND G.ACCNT        = A.ACCNT
		                                                   AND G.ORG_AC_DATE  = A.ORG_AC_DATE
		                                                   AND G.ORG_SLIP_NUM = A.ORG_SLIP_NUM
		                                                   AND G.ORG_SLIP_SEQ = A.ORG_SLIP_SEQ
		                LEFT  JOIN ABA200TV C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                                   AND C.AC_CODE      = A.PEND_CODE
		                                                   AND C.AC_DATA      = A.PEND_DATA_CODE
		                INNER JOIN BOR120T  B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                   AND B.DIV_CODE     = A.DIV_CODE
		                INNER JOIN ABA400T  D WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                                   AND D.ACCNT        = A.ACCNT
		                LEFT JOIN ABA200T  E WITH (NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
		                                                   AND E.AC_CD        = A.PEND_CODE
		                LEFT  JOIN AGJ210T  F WITH (NOLOCK) ON F.COMP_CODE    = A.COMP_CODE
		                                                   AND F.AC_DATE      = A.ORG_AC_DATE
		                                                   AND F.SLIP_NUM     = A.ORG_SLIP_NUM
		                                                   AND F.SLIP_SEQ     = A.ORG_SLIP_SEQ
		                                                   AND ISNULL(F.MOD_DIVI, '') = ''
		         WHERE A.COMP_CODE    = #{S_COMP_CODE}
		           AND A.ORG_AC_DATE &gt;= #{FR_DATE}
		           AND A.ORG_AC_DATE &lt;= #{TO_DATE}
		          <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
			        AND     A.DIV_CODE IN
						<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
						 #{item}
						</foreach>									
				  </if>	
		           <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
				       AND  A.ACCNT   = #{ACCNT_CODE}
				    </if>
		           <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
				       AND  D.ACCNT_NAME  LIKE #{ACCNT_NAME} + '%'
				    </if>
		           <if test="@foren.Ognl@isNotEmpty(PEND_CODE)">
	 				   AND  A.PEND_DATA_CODE  = #{PEND_CODE}
	 			    </if>
		           <if test="@foren.Ognl@isNotEmpty(PEND_NAME)">
					   AND  C.AC_NAME      LIKE '%' + #{PEND_NAME} + '%'
	 			    </if>
				    <if test="PEND_YN == &quot;1&quot;">
				       AND (A.BLN_I != 0 OR A.FOR_BLN_I != 0) 
				    </if>
				    <if test="PEND_YN == &quot;2&quot;">
				       AND (A.BLN_I = 0 AND A.FOR_BLN_I = 0)   
				    </if>
		           <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					   AND A.DEPT_CODE &gt;= #{DEPT_CODE}
					</if>
					<if test="@foren.Ognl@isNotEmpty(PEND_DEPT_CODE)">
					   AND A.DEPT_CODE &lt;= #{PEND_DEPT_CODE}
					</if>

		       ) X
/*		
		-- 3.2 발생과 잔액의 합계 INSERT
		INSERT INTO #AGB160SKR
		SELECT 
		       '2' AS GUBUN
		     , ''  AS DIVI
		     , '합계'  AS ORG_AC_DATE
		     , NULL AS ORG_SLIP_NUM
		     , NULL AS ORG_SLIP_SEQ
		     , ''  AS ACCNT
		     , ''  AS ACCNT_NAME
		     , ''  AS AC_NAME
		     , ''  AS PEND_DATA_CODE
		     , ''  AS PEND_DATA_NAME
		     , ''  AS PEND_SLIP_NO
		     , SUM(ISNULL(ORG_AMT_I, 0)) AS ORG_AMT_I
		     , SUM(ISNULL(J_AMT_I, 0))   AS J_AMT_I
		     , SUM(BLN_I)     AS BLN_I
		     , ''  AS REMARK
		     , ''  AS MONEY_UNIT
		     , 0   AS EXCHG_RATE_O
		     , SUM(ISNULL(FOR_ORG_AMT_I, 0)) AS FOR_ORG_AMT_I
		     , SUM(ISNULL(FOR_J_AMT_I, 0))   AS FOR_J_AMT_I
		     , SUM(ISNULL(FOR_BLN_I, 0))     AS FOR_BLN_I
		     , ''  AS EXPECT_DATE
		     , ''  AS INPUT_PATH
		     , ''  AS AP_STS
		     , ''  AS DIV_CODE
		     , ''  AS INPUT_DIVI
		     , ''  AS DEPT_CODE
		     , ''  AS DEPT_NAME
		     , ''  AS AC_DATA1
		     , ''  AS AC_DATA_NAME1
		     , ''  AS AC_DATA2
		     , ''  AS AC_DATA_NAME2
		     , ''  AS AC_DATA3
		     , ''  AS AC_DATA_NAME3
		     , ''  AS AC_DATA4
		     , ''  AS AC_DATA_NAME4
		     , ''  AS AC_DATA5
		     , ''  AS AC_DATA_NAME5
		     , ''  AS AC_DATA6
		     , ''  AS AC_DATA_NAME6
		  FROM #AGB160SKR  WITH (NOLOCK)
		 WHERE DIVI = '1'
*/
		   -- 3.3 ROW수가 없는 경우 합계 삭제 --------------------------------------------------------------------------
		   DECLARE @COUNT   NVARCHAR(5)
		
		   SELECT @COUNT = COUNT(*)
		     FROM #AGB160SKR WITH (NOLOCK)
		    WHERE GUBUN = '1'
		
		   IF (@COUNT = 0)
		      DELETE FROM #AGB160SKR  WHERE GUBUN = '2'
		
		-- 4. 쿼리
		SELECT 
		       GUBUN
		     , ORG_AC_DATE
		     , ORG_SLIP_NUM
		     , ORG_SLIP_SEQ
		     , ACCNT
		     , ACCNT_NAME
		     , AC_NAME
		     , PEND_DATA_CODE
		     , PEND_DATA_NAME
		     , ORG_AMT_I
		     , J_AMT_I
		     , BLN_I
		     , REMARK
		     , MONEY_UNIT
		     , EXCHG_RATE_O
		     , FOR_ORG_AMT_I
		     , FOR_J_AMT_I
		     , FOR_BLN_I
		     , EXPECT_DATE
		     , INPUT_PATH
		     , AP_STS
		     , DIV_CODE
		  FROM #AGB160SKR  WITH (NOLOCK)
		 ORDER BY GUBUN, ORG_AC_DATE, ORG_SLIP_NUM, ORG_SLIP_SEQ, ACCNT, PEND_SLIP_NO
		
		SET ARITHABORT OFF
		SET NOCOUNT OFF
		
		END
		
		DROP TABLE #AGB160SKR
	</select>	

	<select id="agb160skrServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
	--agb160skr.Cagb160skr[fnAgb160QDtl] Query01
	SELECT unilite.fnGetUserDateComp(A.COMP_CODE, A.J_DATE) AS J_DATE
	     , A.J_SLIP_NUM
	     , A.J_SLIP_SEQ
	     , A.J_AMT_I
	     , A.FOR_J_AMT_I
	     , A.MONEY_UNIT
	     , A.EXCHG_RATE_O
	     , A.INPUT_PATH
	     , CONVERT(NVARCHAR(01), '2')                       AS AP_STS
	     , A.DIV_CODE
	  FROM AGB310T A WITH (NOLOCK)
	 WHERE A.COMP_CODE     = #{S_COMP_CODE}
	   AND A.ACCNT         = #{ACCNT_TEMP}
	   AND A.ORG_AC_DATE   = #{ORG_AC_DATE_TEMP}
	   AND A.ORG_SLIP_NUM  = #{ORG_SLIP_NUM_TEMP}
	   AND A.ORG_SLIP_SEQ  = #{ORG_SLIP_SEQ_TEMP}
	 <if test="@foren.Ognl@isNotEmpty(PEND_DATA_CODE_TEMP)">
	   AND A.PEND_DATA_CODE = #{PEND_DATA_CODE_TEMP}
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(J_DATE_FR_TEMP)">
	   AND A.J_DATE        &gt;= #{J_DATE_FR_TEMP}
	 </if>
	 <if test="@foren.Ognl@isNotEmpty(J_DATE_TO_TEMP)">
	   AND A.J_DATE        &lt;= #{J_DATE_TO_TEMP}
	 </if>
	 ORDER BY A.J_DATE, A.J_SLIP_NUM, A.J_SLIP_SEQ	
	</select>

	<select id="agb160skrServiceImpl.fnAgb160QRpt" parameterType="Map" resultType="rMap">
	--agb160skr.Cagb160skr[fnAgb160QRpt] Query4
	SELECT CASE WHEN #{CHK_JAN} = 'Y' THEN unilite.fnGetUserDateComp(A.COMP_CODE, A.ORG_AC_DATE) + A.ACCNT
	            ELSE A.ACCNT
	       END                                                      AS GROUP_CODE
	     , unilite.fnGetUserDateComp(A.COMP_CODE, A.ORG_AC_DATE)    AS ORG_AC_DATE
	     , A.ORG_SLIP_NUM
	     , A.ORG_SLIP_SEQ
	     , A.ACCNT
	     , E.ACCNT_NAME
	     , F.AC_NAME
	     , A.PEND_DATA_CODE
	     , C.AC_NAME                                                AS PEND_DATA_NAME
	     , SUBSTRING(ISNULL(D.REMARK, ''), 1, 24)                   AS REMARK
	     , A.ORG_AMT_I
	     , A.J_AMT_I
	     , A.BLN_I
	     , A.MONEY_UNIT
	     , A.EXCHG_RATE_O
	     , A.FOR_ORG_AMT_I
	     , A.FOR_J_AMT_I
	     , A.FOR_BLN_I
	     , unilite.fnGetUserDateComp(A.COMP_CODE, B.J_DATE)         AS J_DATE
	     , B.J_SLIP_NUM
	     , B.J_SLIP_SEQ
	     , B.J_AMT_I                                                AS 'J_AMT_I_2'
	     , B.FOR_J_AMT_I                                            AS 'FOR_J_AMTI_2'
	     , B.MONEY_UNIT                                             AS J_MONEY_UNIT
	     , B.EXCHG_RATE_O                                           AS J_EXCHG_RATE_O
	  FROM             AGB300T  A WITH (NOLOCK)
	        LEFT  JOIN AGB310T  B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                           AND B.ACCNT        = A.ACCNT
	                                           AND B.ORG_AC_DATE  = A.ORG_AC_DATE
	                                           AND B.ORG_SLIP_NUM = A.ORG_SLIP_NUM
	                                           AND B.ORG_SLIP_SEQ = A.ORG_SLIP_SEQ
	        LEFT  JOIN AGJ210T  D WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
	                                           AND D.AC_DATE      = A.ORG_AC_DATE
	                                           AND D.SLIP_NUM     = A.ORG_SLIP_NUM
	                                           AND D.SLIP_SEQ     = A.ORG_SLIP_SEQ
	                                           AND ISNULL(D.MOD_DIVI, '') = ''
	        LEFT  JOIN ABA200TV C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
	                                           AND C.AC_CODE      = A.PEND_CODE
	                                           AND C.AC_DATA      = A.PEND_DATA_CODE
	        LEFT  JOIN ABA400T  E WITH (NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
	                                           AND E.ACCNT        = A.ACCNT
	        LEFT  JOIN ABA200T  F WITH (NOLOCK) ON F.COMP_CODE    = A.COMP_cODE
	                                           AND F.AC_CD        = A.PEND_CODE
	        LEFT  JOIN BOR120T  H WITH (NOLOCK) ON H.COMP_CODE    = A.COMP_CODE
	                                           AND H.DIV_CODE     = A.DIV_CODE
	 WHERE A.COMP_CODE    = #{S_COMP_CODE}
	       AND A.ORG_AC_DATE &gt;= #{FR_DATE}
	       AND A.ORG_AC_DATE &lt;= #{TO_DATE}
	  
	   <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
	       AND  A.ACCNT          = #{ACCNT_CODE}
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
	      <!-- AND  E.ACCNT_NAME  LIKE #{ACCNT_NAME} -->
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(PEND_CODE)">
	       AND  A.PEND_DATA_CODE = #{PEND_CODE}
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(PEND_NAME)">
	       <!-- AND  C.AC_NAME     LIKE  #{PEND_NAME} + '%' -->
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">
			 AND     A.DIV_CODE IN
				<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
				 #{item}
				</foreach>
	   </if> 
	   <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
	       AND A.DEPT_CODE      &gt;= #{DEPT_CODE}
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(PEND_DEPT_CODE)">
	       AND A.DEPT_CODE      &lt;= #{PEND_DEPT_CODE}
	   </if>
	   <if test="PEND_YN == &quot;1&quot;">
	       AND (A.BLN_I != 0  OR A.FOR_BLN_I != 0)
	   </if>
       <if test="PEND_YN == &quot;2&quot;">
	       AND (A.BLN_I  = 0 AND A.FOR_BLN_I  = 0)
       </if>
	   <if test="@foren.Ognl@isNotEmpty(J_DATE_FR)">
	       AND B.J_DATE         &gt;= #{J_DATE_FR}
	   </if>
	   <if test="@foren.Ognl@isNotEmpty(J_DATE_TO)">
	       AND B.J_DATE         &lt;= #{J_DATE_TO}
	   </if>
	   <if test="CHK_JAN == &quot;N&quot;">
	     ORDER BY A.ACCNT, A.ORG_AC_DATE, A.ORG_SLIP_NUM, A.ORG_SLIP_SEQ, B.J_DATE, B.J_SLIP_NUM, B.J_SLIP_SEQ
	   </if>
	   <if test="CHK_JAN == &quot;Y&quot;">
	     ORDER BY A.ORG_AC_DATE, A.ORG_SLIP_NUM, A.ORG_SLIP_SEQ, B.J_DATE, B.J_SLIP_NUM, B.J_SLIP_SEQ
	   </if>
	</select>

	<select id="agb160skrServiceImpl.fnAgb160Init" parameterType="Map" resultType="rMap">
		SELECT *
		  FROM BSA310T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND (USER_ID  = #{S_USER_ID} OR USER_ID = '$')
		   AND (PGM_ID   = #{PGM_ID} OR PGM_ID  = '$')
	</select>



	
	<select id="agb160skrServiceImpl.temp" parameterType="Map" resultType="rMap">
		--master조회의  ") X" 앞에 있던 부분
		       UNION ALL
		  
		        SELECT A.COMP_CODE
		             , '2' AS DIVI
		             , A.ORG_AC_DATE
		             , A.ORG_SLIP_NUM
		             , A.ORG_SLIP_SEQ
		             , G.ACCNT
		             , D.ACCNT_NAME
		             , '' AC_NAME
		             , '' PEND_DATA_CODE
		             , '' PEND_DATA_NAME
		             , ISNULL(G.J_DATE,'') + '-' + (CASE WHEN ISNULL(G.J_SLIP_NUM, 0) = 0 THEN ''
		                                                 ELSE CONVERT(NVARCHAR(7), G.J_SLIP_NUM) 
		                                             END)
		                                   + '-' + (CASE WHEN ISNULL(G.J_SLIP_SEQ, 0) = 0 THEN '' 
		                                                 ELSE CONVERT(NVARCHAR(5), G.J_SLIP_SEQ) 
		                                             END)
		             , 0 ORG_AMT_I
		             , G.J_AMT_I 
		             , 0 BLN_I
		             , G.FOR_J_AMT_I I
		             , 0 FOR_BLN_I
		             , REPLACE(REPLACE(REPLACE(F.REMARK, char(10), ' '), char(13), ' '), char(9), ' ') AS REMARK
		             , G.MONEY_UNIT
		             , G.EXCHG_RATE_O
		             , 0 FOR_ORG_AMT_I
		             , '' EXPECT_DATE
		             , F.INPUT_PATH
		             , '2' AS AP_STS
		             , A.DIV_CODE
		             , '' INPUT_DIVI
		             , A.DEPT_CODE
		             , A.DEPT_NAME
		             , ISNULL(F.AC_DATA1, '')      AS AC_DATA1
		             , ISNULL(F.AC_DATA_NAME1, '') AS AC_DATA_NAME1
		             , ISNULL(F.AC_DATA2, '')      AS AC_DATA2
		             , ISNULL(F.AC_DATA_NAME2, '') AS AC_DATA_NAME2
		             , ISNULL(F.AC_DATA3, '')      AS AC_DATA3
		             , ISNULL(F.AC_DATA_NAME3, '') AS AC_DATA_NAME3
		             , ISNULL(F.AC_DATA4, '')      AS AC_DATA4
		             , ISNULL(F.AC_DATA_NAME4, '') AS AC_DATA_NAME4
		             , ISNULL(F.AC_DATA5, '')      AS AC_DATA5
		             , ISNULL(F.AC_DATA_NAME5, '') AS AC_DATA_NAME5
		             , ISNULL(F.AC_DATA6, '')      AS AC_DATA6
		             , ISNULL(F.AC_DATA_NAME6, '') AS AC_DATA_NAME6
		          FROM             AGB300T  A WITH (NOLOCK)
		                INNER JOIN AGB310T  G WITH (NOLOCK) ON G.COMP_CODE    = A.COMP_CODE
		                                                   AND G.ORG_AC_DATE  = A.ORG_AC_DATE 
		                                                   AND G.ORG_SLIP_NUM = A.ORG_SLIP_NUM 
		                                                   AND G.ORG_SLIP_SEQ = A.ORG_SLIP_SEQ 
		                                                   AND G.ACCNT        = A.ACCNT
		                LEFT  JOIN ABA200TV C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                                   AND C.AC_CODE      = A.PEND_CODE
		                                                   AND C.AC_DATA      = A.PEND_DATA_CODE
		                LEFT  JOIN BOR120T  B WITH (NOLOCK) ON B.COMP_CODE    = G.COMP_CODE
		                                                   AND B.DIV_CODE     = G.DIV_CODE
		                INNER JOIN ABA400T  D WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                                   AND D.ACCNT        = A.ACCNT
		                LEFT  JOIN AGJ210T  F WITH (NOLOCK) ON F.COMP_CODE    = G.COMP_CODE
		                                                   AND F.AC_DATE      = G.J_DATE
		                                                   AND F.SLIP_NUM     = G.J_SLIP_NUM
		                                                   AND F.SLIP_SEQ     = G.J_SLIP_SEQ
		                                                   AND ISNULL(F.MOD_DIVI, '') = ''
		         WHERE A.COMP_CODE    = #{S_COMP_CODE}
		           AND A.ORG_AC_DATE &gt;= #{FR_DATE}
		           AND A.ORG_AC_DATE &lt;= #{TO_DATE}
		           <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
			        AND     A.DIV_CODE IN
						<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
						 #{item}
						</foreach>									
				  </if>	
		           <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
				       AND  A.ACCNT          =  #{ACCNT_CODE}
				    </if>
		           <if test="@foren.Ognl@isNotEmpty(ACCNT_NAME)">
				       AND  D.ACCNT_NAME  LIKE #{ACCNT_NAME} + '%'
				    </if>
		           <if test="@foren.Ognl@isNotEmpty(PEND_CODE)">
	 				   AND  A.PEND_DATA_CODE  = #{PEND_CODE}
	 			    </if>
		           <if test="@foren.Ognl@isNotEmpty(PEND_NAME)">
					   AND  C.AC_NAME      LIKE '%' + #{PEND_NAME} + '%'
	 			    </if>
				    <if test="PEND_YN == &quot;1&quot;">
				       AND (A.BLN_I != 0 OR A.FOR_BLN_I != 0)
				    </if>
				    <if test="PEND_YN == &quot;2&quot;">
				       AND (A.BLN_I = 0 AND A.FOR_BLN_I = 0)  
				    </if>
		           <if test="@foren.Ognl@isNotEmpty(J_DATE_FR)">
	 				   AND G.J_DATE  &gt;= #{J_DATE_FR}
	 			    </if>
		           <if test="@foren.Ognl@isNotEmpty(J_DATE_TO)">
					   AND G.J_DATE  &lt;= #{J_DATE_TO}
	 			    </if>
		           <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
					   AND A.DEPT_CODE &gt;= #{DEPT_CODE}
					</if>
					<if test="@foren.Ognl@isNotEmpty(PEND_DEPT_CODE)">
					   AND A.DEPT_CODE &lt;= #{PEND_DEPT_CODE}
					</if>
					 <if test="CHK_JAN == &quot;Y&quot;">
					   AND G.J_DATE    &lt;= #{TO_DATE}
					 </if>
	</select>
</mapper>