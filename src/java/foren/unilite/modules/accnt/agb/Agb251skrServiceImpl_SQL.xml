<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agb251skrServiceImpl">
	
	<select id="agb251skrServiceImpl.selectList" parameterType="Map" resultType="rMap">
	--agb251skrServiceImpl.selectList
	BEGIN
	    SET NOCOUNT ON
	    SET ARITHABORT ON
		
		SELECT A.COMP_CODE
			 , A.DIV_CODE
			 , B.DIV_NAME
			 , ISNULL(C.AGENT_TYPE, '1')							AS AGENT_TYPE
			 , D.CODE_NAME											AS AGENT_TYPE_NAME
			 , A.CUSTOM_CODE
			 , C.CUSTOM_NAME
			 <![CDATA[
			 , SUM(A.BLN_I)		AS AMT_TOT
			 , SUM(CASE WHEN				 A.TERM <=  1 THEN A.BLN_I ELSE 0 END)	AS AMT_01
			 , SUM(CASE WHEN A.TERM >  1 AND A.TERM <=  2 THEN A.BLN_I ELSE 0 END)	AS AMT_02
			 , SUM(CASE WHEN A.TERM >  2 AND A.TERM <=  3 THEN A.BLN_I ELSE 0 END)	AS AMT_03
			 , SUM(CASE WHEN A.TERM >  3 AND A.TERM <=  4 THEN A.BLN_I ELSE 0 END)	AS AMT_04
			 , SUM(CASE WHEN A.TERM >  4 AND A.TERM <=  5 THEN A.BLN_I ELSE 0 END)	AS AMT_05
			 , SUM(CASE WHEN A.TERM >  5 AND A.TERM <=  6 THEN A.BLN_I ELSE 0 END)	AS AMT_06
			 , SUM(CASE WHEN A.TERM >  6 AND A.TERM <=  7 THEN A.BLN_I ELSE 0 END)	AS AMT_07
			 , SUM(CASE WHEN A.TERM >  7 AND A.TERM <=  8 THEN A.BLN_I ELSE 0 END)	AS AMT_08
			 , SUM(CASE WHEN A.TERM >  8 AND A.TERM <=  9 THEN A.BLN_I ELSE 0 END)	AS AMT_09
			 , SUM(CASE WHEN A.TERM >  9 AND A.TERM <= 10 THEN A.BLN_I ELSE 0 END)	AS AMT_10
			 , SUM(CASE WHEN A.TERM > 10 AND A.TERM <= 11 THEN A.BLN_I ELSE 0 END)	AS AMT_11
			 , SUM(CASE WHEN A.TERM > 11 AND A.TERM <= 12 THEN A.BLN_I ELSE 0 END)	AS AMT_12
			 , SUM(CASE WHEN				 A.TERM <= 12 THEN A.BLN_I ELSE 0 END)	AS AMT_13
			 , SUM(CASE WHEN A.TERM > 12 AND A.TERM <= 13 THEN A.BLN_I ELSE 0 END)	AS AMT_14
			 , SUM(CASE WHEN A.TERM > 13 AND A.TERM <= 14 THEN A.BLN_I ELSE 0 END)	AS AMT_15
			 , SUM(CASE WHEN A.TERM > 14 AND A.TERM <= 15 THEN A.BLN_I ELSE 0 END)	AS AMT_16
			 , SUM(CASE WHEN A.TERM > 15 AND A.TERM <= 16 THEN A.BLN_I ELSE 0 END)	AS AMT_17
			 , SUM(CASE WHEN A.TERM > 16 AND A.TERM <= 17 THEN A.BLN_I ELSE 0 END)	AS AMT_18
			 , SUM(CASE WHEN A.TERM > 17 AND A.TERM <= 18 THEN A.BLN_I ELSE 0 END)	AS AMT_19
			 , SUM(CASE WHEN A.TERM > 18 AND A.TERM <= 19 THEN A.BLN_I ELSE 0 END)	AS AMT_20
			 , SUM(CASE WHEN A.TERM > 19 AND A.TERM <= 20 THEN A.BLN_I ELSE 0 END)	AS AMT_21
			 , SUM(CASE WHEN A.TERM > 20 AND A.TERM <= 21 THEN A.BLN_I ELSE 0 END)	AS AMT_22
			 , SUM(CASE WHEN A.TERM > 21 AND A.TERM <= 22 THEN A.BLN_I ELSE 0 END)	AS AMT_23
			 , SUM(CASE WHEN A.TERM > 22 AND A.TERM <= 23 THEN A.BLN_I ELSE 0 END)	AS AMT_24
			 , SUM(CASE WHEN A.TERM > 23 AND A.TERM <= 24 THEN A.BLN_I ELSE 0 END)	AS AMT_25
			 , SUM(CASE WHEN A.TERM > 12 AND A.TERM <= 24 THEN A.BLN_I ELSE 0 END)	AS AMT_26
			 , SUM(CASE WHEN A.TERM > 24 AND A.TERM <= 25 THEN A.BLN_I ELSE 0 END)	AS AMT_27
			 , SUM(CASE WHEN A.TERM > 25 AND A.TERM <= 26 THEN A.BLN_I ELSE 0 END)	AS AMT_28
			 , SUM(CASE WHEN A.TERM > 26 AND A.TERM <= 27 THEN A.BLN_I ELSE 0 END)	AS AMT_29
			 , SUM(CASE WHEN A.TERM > 27 AND A.TERM <= 28 THEN A.BLN_I ELSE 0 END)	AS AMT_30
			 , SUM(CASE WHEN A.TERM > 28 AND A.TERM <= 29 THEN A.BLN_I ELSE 0 END)	AS AMT_31
			 , SUM(CASE WHEN A.TERM > 29 AND A.TERM <= 30 THEN A.BLN_I ELSE 0 END)	AS AMT_32
			 , SUM(CASE WHEN A.TERM > 30 AND A.TERM <= 31 THEN A.BLN_I ELSE 0 END)	AS AMT_33
			 , SUM(CASE WHEN A.TERM > 31 AND A.TERM <= 32 THEN A.BLN_I ELSE 0 END)	AS AMT_34
			 , SUM(CASE WHEN A.TERM > 32 AND A.TERM <= 33 THEN A.BLN_I ELSE 0 END)	AS AMT_35
			 , SUM(CASE WHEN A.TERM > 33 AND A.TERM <= 34 THEN A.BLN_I ELSE 0 END)	AS AMT_36
			 , SUM(CASE WHEN A.TERM > 34 AND A.TERM <= 35 THEN A.BLN_I ELSE 0 END)	AS AMT_37
			 , SUM(CASE WHEN A.TERM > 35 AND A.TERM <= 36 THEN A.BLN_I ELSE 0 END)	AS AMT_38
			 , SUM(CASE WHEN A.TERM > 24 AND A.TERM <= 36 THEN A.BLN_I ELSE 0 END)	AS AMT_39
			 , SUM(CASE WHEN A.TERM > 36				  THEN A.BLN_I ELSE 0 END)	AS AMT_40
			 ]]>
		  FROM (
				SELECT A.COMP_CODE
					 , A.DIV_CODE
					 , A.ORG_AC_DATE
					 , DATEDIFF(MONTH, SUBSTRING(A.ORG_AC_DATE, 1, 6) + '01', DATEADD(MONTH, 1, #{AC_DATE}))	AS TERM
					 , A.PEND_DATA_CODE	AS CUSTOM_CODE
					 , A.ACCNT
					 , A.ORG_AMT_I - ISNULL(C.J_AMT_I, 0)	AS BLN_I
				  FROM AGB300T A
						INNER JOIN		ABA400T B
									 ON A.COMP_CODE	 = B.COMP_CODE
									AND A.ACCNT		 = B.ACCNT
									AND B.SPEC_DIVI	IN ('D1', 'G1')
						LEFT OUTER JOIN (
											SELECT C.COMP_CODE
												 , C.DIV_CODE
												 , C.ORG_AC_DATE
												 , C.ORG_SLIP_NUM
												 , C.ORG_SLIP_SEQ
												 , SUM(C.J_AMT_I)	AS J_AMT_I
											  FROM AGB320T C
											 WHERE C.COMP_CODE		 = #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
											   AND C.DIV_CODE IN
													<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
														#{item}
													</foreach>
		</if>
											   AND C.PEND_CODE		 = 'A4'
											   AND C.J_EX_DATE		&lt;= #{AC_DATE}
		<if test="@foren.Ognl@isNotEmpty(ACCOUNT_CODE_FR)">
											   AND C.ACCNT			&gt;= #{ACCOUNT_CODE_FR}  								
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCOUNT_CODE_TO)">
											   AND C.ACCNT			&lt;= #{ACCOUNT_CODE_TO}  								
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUST_CODE_FR)">
											   AND C.PEND_DATA_CODE	&gt;= #{CUST_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUST_CODE_TO)">
											   AND C.PEND_DATA_CODE	&lt;= #{CUST_CODE_TO}
		</if>			
											 GROUP BY C.COMP_CODE
												 , C.DIV_CODE
												 , C.ORG_AC_DATE
												 , C.ORG_SLIP_NUM
												 , C.ORG_SLIP_SEQ
										) C
									 ON A.COMP_CODE		= C.COMP_CODE
									AND A.DIV_CODE		= C.DIV_CODE
									AND A.ORG_AC_DATE	= C.ORG_AC_DATE
									AND A.ORG_SLIP_NUM	= C.ORG_SLIP_NUM
									AND A.ORG_SLIP_SEQ	= C.ORG_SLIP_SEQ
				 WHERE A.COMP_CODE		 = #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
				   AND A.DIV_CODE IN
						<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
							#{item}
						</foreach>
		</if>
				   AND A.PEND_CODE		 = 'A4'
				   AND A.ORG_AC_DATE	&lt;= #{AC_DATE}
		<if test="@foren.Ognl@isNotEmpty(ACCOUNT_CODE_FR)">
				   AND A.ACCNT			&gt;= #{ACCOUNT_CODE_FR}  								
		</if>
		<if test="@foren.Ognl@isNotEmpty(ACCOUNT_CODE_TO)">
				   AND A.ACCNT			&lt;= #{ACCOUNT_CODE_TO}  								
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUST_CODE_FR)">
				   AND A.PEND_DATA_CODE	&gt;= #{CUST_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUST_CODE_TO)">
				   AND A.PEND_DATA_CODE	&lt;= #{CUST_CODE_TO}
		</if>
				   AND A.ORG_AMT_I - ISNULL(C.J_AMT_I, 0)	!= 0
			  ) A
				INNER JOIN		BOR120T B
							 ON A.COMP_CODE		= B.COMP_CODE
							AND A.DIV_CODE		= B.DIV_CODE
				LEFT OUTER JOIN BCM100T C
							 ON A.COMP_CODE		= C.COMP_CODE
							AND A.CUSTOM_CODE	= C.CUSTOM_CODE
				LEFT OUTER JOIN BSA100T D
							 ON C.COMP_CODE		= D.COMP_CODE
							AND D.MAIN_CODE		= 'B055'
							AND D.SUB_CODE		= ISNULL(C.AGENT_TYPE, '1')
		 WHERE 1 = 1
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
		   AND ISNULL(C.AGENT_TYPE, '1')	= #{AGENT_TYPE}   								
		</if>
    	<if test="@foren.Ognl@isEmpty(CUST_CODE_FR) and @foren.Ognl@isNotEmpty(CUSTOM_NAME_FR)">
			AND C.CUSTOM_NAME &gt;= #{CUSTOM_NAME_FR}
		</if>
    	<if test="@foren.Ognl@isEmpty(CUST_CODE_TO) and @foren.Ognl@isNotEmpty(CUSTOM_NAME_TO)">
			AND C.CUSTOM_NAME &lt;= #{CUSTOM_NAME_TO}
		</if>		
		 GROUP BY A.COMP_CODE
			 , A.DIV_CODE
			 , B.DIV_NAME
			 , ISNULL(C.AGENT_TYPE, '1')
			 , D.CODE_NAME
			 , A.CUSTOM_CODE
			 , C.CUSTOM_NAME
		HAVING SUM(A.BLN_I) != 0
		 ORDER BY A.COMP_CODE
			 , A.DIV_CODE
			 , ISNULL(C.AGENT_TYPE, '1')
			 , A.CUSTOM_CODE
		
	END
	</select>	

</mapper>