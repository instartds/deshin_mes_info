<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aiss500ukrvService">	

	<select id="aiss500ukrvService.fnAiss500Proc" parameterType="Map" resultType="rMap">
		--aiss500ukrv.Caiss500ukr[fnAiss500Proc] Query01
    BEGIN
        DECLARE @COMP_CODE          NVARCHAR(08)
              , @ASST               NVARCHAR(15)
              , @ALTER_DIVI         NVARCHAR(01)
              , @ALTER_DATE         NVARCHAR(08)
              , @INPUT_USER_ID      NVARCHAR(100)
    
              , @ERR_DESC           NVARCHAR(4000)            --에러메세지
              , @ExistYN            NUMERIC(04, 0)
              , @PatYN              NVARCHAR(01)
    
        SET NOCOUNT    ON
        SET ARITHABORT ON
    
        SET     @COMP_CODE          = #{S_COMP_CODE}    --(필수) 법인코드
        SET     @ASST               = #{ASST}    		--(필수) 자산코드
        SET     @ALTER_DIVI         = '8'               --(필수) 변동구분
        SET     @ALTER_DATE         = #{ALTER_DATE}     --(필수) 변동일
        SET     @INPUT_USER_ID      = #{S_USER_ID}	    --(필수) 로그인사용자ID
    
        --작업대상자산 조회
        SET     @ExistYN = 0
        SET     @PatYN   = ''
        SELECT  @ExistYN = 1
             ,  @PatYN   = ISNULL(A.PAT_YN, '')
        FROM  AISS300T AS A  WITH (NOLOCK)
        WHERE A.COMP_CODE  = @COMP_CODE
        AND   A.ASST       = @ASST
    
        IF ( @ExistYN = 0 )
        BEGIN
            --작업할 자료가 존재하지 않습니다.
            SET @ERR_DESC = '54361;A0195:' + @ASST
            GOTO ERROR_HANDLER
        END
    
        IF ( @PatYN = 'Y' )
        BEGIN
            --이미 분할처리된 자료입니다.
            SET @ERR_DESC = '55381;A0195:' + @ASST
            GOTO ERROR_HANDLER
        END
    
        --작업대상자산 상세정보 조회
        DECLARE @OrgAsst            NVARCHAR(15)
              , @Seq                NUMERIC(04, 0)
              , @PatAsst            NVARCHAR(15)
              , @PatAsstName        NVARCHAR(60)
    
        DECLARE CUR_PROC CURSOR FOR
        SELECT  B.ASST                  AS ORG_ASST
             ,  ISNULL(B.SEQ     , 0 )  AS SEQ
             ,  ISNULL(B.PAT_ASST, '')  AS PAT_ASST
        FROM           AISS300T AS A  WITH (NOLOCK)
            INNER JOIN AISS500T AS B  WITH (NOLOCK)    ON  B.COMP_CODE  = A.COMP_CODE
                                                       AND B.ASST       = A.ASST
                                                       AND B.ALTER_DIVI = @ALTER_DIVI
        WHERE A.COMP_CODE  = @COMP_CODE
        AND   A.ASST       = @ASST
    
        OPEN CUR_PROC
    
        FETCH NEXT FROM CUR_PROC
        INTO @OrgAsst, @Seq, @PatAsst
    
        WHILE ( @@FETCH_STATUS = 0 )
        BEGIN
            IF ( @PatAsst = '' )
            BEGIN
                SET @PatAsst = @OrgAsst + '-' + RIGHT(CONVERT(NVARCHAR(05), 10000 + @Seq), 2)
            END
    
            --분할자산코드의 중복 체크
            SET     @ExistYN     = 0
            SET     @PatAsstName = ''
            SELECT  @ExistYN     = 1
                 ,  @PatAsstName = ISNULL(ASST_NAME, '')
            FROM  AISS300T  WITH (NOLOCK)
            WHERE COMP_CODE = @COMP_CODE
            AND   ASST      = @PatAsst
    
            IF ( @ExistYN > 0 )
            BEGIN
                --분할자산코드가 중복되었습니다. 분할자산코드를 확인 후 다시 실행하십시오.
                SET @ERR_DESC = '55392;A0195:' + @PatAsst + ' ' + @PatAsstName
                GOTO ERROR_HANDLER
            END
    
            --변동내역에 분할자산코드, 분할여부 저장
            UPDATE AISS500T
            SET PAT_ASST = @PatAsst
              , PAT_YN   = 'Y'
            WHERE COMP_CODE  = @COMP_CODE
            AND   ASST       = @OrgAsst
            AND   ALTER_DIVI = @ALTER_DIVI
            AND   SEQ        = @Seq
    
            --분할자산정보 생성(AISS300T에 저장)
            INSERT INTO AISS300T( COMP_CODE       , ASST          , ASST_NAME
                                , SPEC            , ACCNT         , ASST_DIVI
                                , DIV_CODE        , DEPT_CODE     , DEPT_NAME
                                , PJT_CODE        , DEP_CTL       , DRB_YEAR
                                , MONEY_UNIT      , EXCHG_RATE_O  , FOR_ACQ_AMT_I
                                , ACQ_AMT_I       , ACQ_Q         , STOCK_Q
                                , QTY_UNIT        , ACQ_DATE      , USE_DATE
                                , CUSTOM_CODE     , PERSON_NUMB   , PLACE_INFO
                                , SERIAL_NO       , BAR_CODE      , REMARK
                                , DPR_STS         , ASST_STS
                                , SALE_MANAGE_COST, PRODUCE_COST  , SALE_COST
                                , PAT_YN          , DMG_OJ_YN     , WDAMT_MTD, CGU_CODE
                                , FI_CAPI_TOT_I   , FI_SALE_TOT_I , FI_SALE_DPR_TOT_I
                                , FI_REVAL_TOT_I  , FI_DPR_TOT_I  , FI_DMGLOS_TOT_I
                                , FL_BALN_I       , FL_ACQ_AMT_I
                                , WASTE_YYYYMM    , WASTE_SW
                                , DPR_YYYYMM      , DPR_STS2
                                , INSERT_DB_USER  , INSERT_DB_TIME
                                , UPDATE_DB_USER  , UPDATE_DB_TIME )
            SELECT  A.COMP_CODE
                 ,  @PatAsst                    AS ASST
                 ,  A.ASST_NAME
                 ,  A.SPEC
                 ,  A.ACCNT
                 ,  A.ASST_DIVI
                 ,  A.DIV_CODE
                 ,  A.DEPT_CODE
                 ,  A.DEPT_NAME
                 ,  A.PJT_CODE
                 ,  A.DEP_CTL
                 ,  A.DRB_YEAR
                 ,  A.MONEY_UNIT
                 ,  CONVERT(NUMERIC(30, 6), 0)  AS EXCHG_RATE_O
                 ,  CONVERT(NUMERIC(30, 6), 0)  AS FOR_ACQ_AMT_I
                 ,  B.PAT_ACQ_AMT_I
                 ,  B.ALTER_Q                   AS ACQ_Q
                 ,  B.ALTER_Q                   AS STOCK_Q
                 ,  A.QTY_UNIT
                 ,  A.ACQ_DATE
                 ,  A.USE_DATE
                 ,  A.CUSTOM_CODE
                 ,  A.PERSON_NUMB
                 ,  A.PLACE_INFO
                 ,  A.SERIAL_NO
                 ,  A.BAR_CODE
                 ,  A.REMARK
                 ,  A.DPR_STS
                 ,  A.ASST_STS
                 ,  A.SALE_MANAGE_COST
                 ,  A.PRODUCE_COST
                 ,  A.SALE_COST
                 ,  CONVERT(NVARCHAR(01), 'N')  AS PAT_YN
                 ,  A.DMG_OJ_YN
                 ,  A.WDAMT_MTD
                 ,  A.CGU_CODE
                 ,  B.PAT_FI_CAPI_TOT_I         AS FI_CAPI_TOT_I
                 ,  B.PAT_FI_SALE_TOT_I         AS FI_SALE_TOT_I
                 ,  B.PAT_FI_SALE_DPR_TOT_I     AS FI_SALE_DPR_TOT_I
                 ,  B.PAT_FI_REVAL_TOT_I        AS FI_REVAL_TOT_I
                 ,  B.PAT_FI_DPR_TOT_I          AS FI_DPR_TOT_I
                 ,  B.PAT_FI_DMGLOS_TOT_I       AS FI_DMGLOS_TOT_I
                 ,  B.PAT_FL_BALN_I             AS FL_BALN_I
                 ,  B.PAT_FL_ACQ_AMT_I          AS FL_ACQ_AMT_I
                 ,  A.WASTE_YYYYMM
                 ,  A.WASTE_SW
                 ,  A.DPR_YYYYMM
                 ,  A.DPR_STS2
                 ,  @INPUT_USER_ID
                 ,  GETDATE()
                 ,  @INPUT_USER_ID
                 ,  GETDATE()
            FROM           AISS300T AS A  WITH (NOLOCK)
                INNER JOIN AISS500T AS B  WITH (NOLOCK)    ON  B.COMP_CODE  = A.COMP_CODE
                                            AND B.ASST       = A.ASST
                                            AND B.ALTER_DIVI = @ALTER_DIVI
                                            AND B.SEQ        = @Seq
            WHERE A.COMP_CODE = @COMP_CODE
            AND   A.ASST      = @OrgAsst
    
            FETCH NEXT FROM CUR_PROC
            INTO @OrgAsst, @Seq, @PatAsst
        END
    
        CLOSE CUR_PROC
        DEALLOCATE CUR_PROC
    
        --원자산의 분할여부 저장
        UPDATE AISS300T
        SET PAT_YN = 'Y'
        WHERE COMP_CODE = @COMP_CODE
        AND   ASST      = @ASST
    
    ERROR_HANDLER:
        SET NOCOUNT    OFF
        SET ARITHABORT OFF
    
        IF CHARINDEX(';', @ERR_DESC) > 0
            SELECT  SUBSTRING(@ERR_DESC, 1, CHARINDEX(';', @ERR_DESC) - 1)              AS ERROR_CODE
                 ,  SUBSTRING(@ERR_DESC, CHARINDEX(';', @ERR_DESC) + 1, LEN(@ERR_DESC)) AS ERROR_DESC
        ELSE
            SELECT  TOP 1 '' ERROR_CODE, '' ERROR_DESC
    END
	</select>
	
	<select id="aiss500ukrvService.fnAiss500Canc" parameterType="Map" resultType="rMap">
	--aiss500ukrv.Caiss500ukr[fnAiss500Canc] Query01
    BEGIN
        DECLARE @COMP_CODE          NVARCHAR(08)
              , @ASST               NVARCHAR(15)
              , @ALTER_DIVI         NVARCHAR(01)
              , @ALTER_DATE         NVARCHAR(08)
              , @INPUT_USER_ID      NVARCHAR(100)
    
              , @ERR_DESC           NVARCHAR(4000)            --에러메세지
              , @ExistYN            NUMERIC(04, 0)
              , @AlterName          NVARCHAR(20)
    
        SET NOCOUNT    ON
        SET ARITHABORT ON
    
        SET     @COMP_CODE          = #{S_COMP_CODE}    --(필수) 법인코드
        SET     @ASST               = #{ASST}    		--(필수) 자산코드
        SET     @ALTER_DIVI         = '8'               --(필수) 변동구분
        SET     @ALTER_DATE         = #{ALTER_DATE}     --(필수) 변동일
        SET     @INPUT_USER_ID      = #{S_USER_ID}	    --(필수) 로그인사용자ID
    
        --작업대상자산 조회
        SET     @ExistYN = 0
        IF EXISTS ( SELECT  TOP 1 1
                    FROM  AISS300T AS A  WITH (NOLOCK)
                    WHERE A.COMP_CODE  = @COMP_CODE
                    AND   A.ASST       = @ASST )
            SET @ExistYN = 1
    
        IF ( @ExistYN = 0 )
        BEGIN
            --작업할 자료가 존재하지 않습니다.
            SET @ERR_DESC = '54361;A0195:' + @ASST
            GOTO ERROR_HANDLER
        END
    
        --작업대상자산 상세정보 조회
        DECLARE @OrgAsst            NVARCHAR(15)
              , @Seq                NUMERIC(04, 0)
              , @PatAsst            NVARCHAR(15)
              , @PatAsstName        NVARCHAR(60)
              , @DprYyMm            NVARCHAR(07)
    
        DECLARE CUR_PROC CURSOR FOR
        SELECT  B.ASST                  AS ORG_ASST
             ,  ISNULL(B.SEQ     , 0 )  AS SEQ
             ,  ISNULL(B.PAT_ASST, '')  AS PAT_ASST
        FROM           AISS300T AS A  WITH (NOLOCK)
            INNER JOIN AISS500T AS B  WITH (NOLOCK)    ON  B.COMP_CODE  = A.COMP_CODE
                                        AND B.ASST       = A.ASST
                                        AND B.ALTER_DIVI = @ALTER_DIVI
        WHERE A.COMP_CODE  = @COMP_CODE
        AND   A.ASST       = @ASST
    
        OPEN CUR_PROC
    
        FETCH NEXT FROM CUR_PROC
        INTO @OrgAsst, @Seq, @PatAsst
    
        WHILE ( @@FETCH_STATUS = 0 )
        BEGIN
            --분할자산의 존재 확인
            SET     @ExistYN     = 0
            SET     @PatAsstName = ''
            SELECT  @ExistYN     = 1
                 ,  @PatAsstName = ISNULL(ASST_NAME, '')
            FROM  AISS300T AS A  WITH (NOLOCK)
            WHERE A.COMP_CODE = @COMP_CODE
            AND   A.ASST      = @PatAsst
    
            IF ( @ExistYN = 0 )
            BEGIN
                --작업할 자료가 존재하지 않습니다.
                SET @ERR_DESC = '54361;A0195:' + @PatAsst
                GOTO ERROR_HANDLER
            END
    
            --분할자산의 상각여부 확인
            SET     @ExistYN = 0
            SET     @DprYyMm = ''
            SELECT  @ExistYN = COUNT(1)
                 ,  @DprYyMm = MIN(uniLITE.fnGetUserDate(A.COMP_CODE, ISNULL(A.DPR_YYMM, '')))
            FROM  AISC100T AS A  WITH (NOLOCK)
            WHERE A.COMP_CODE = @COMP_CODE
            AND   A.ASST      = @PatAsst
            AND   A.DPR_YYMM >= LEFT(@ALTER_DATE, 6)
    
            SET     @ExistYN = ISNULL(@ExistYN, 0 )
            SET     @DprYyMm = ISNULL(@DprYyMm, '')
    
            IF ( @ExistYN > 0 )
            BEGIN
                --이미 상각되었습니다.
                SET @ERR_DESC = '55301;A0195:' + @PatAsst + ' ' + @PatAsstName + ',A0196:' + @DprYyMm
                GOTO ERROR_HANDLER
            END
    
            --분할자산의 변동내역존재여부 확인
            SET     @ExistYN   = 0
            SET     @AlterName = ''
            SELECT  @ExistYN   = COUNT(1)
                 ,  @AlterName = MIN(ISNULL(M1.CODE_NAME, ''))
            FROM           AISS500T AS A  WITH (NOLOCK)
                LEFT  JOIN BSA100T  AS M1 WITH (NOLOCK) ON  M1.COMP_CODE = A.COMP_CODE
                                                        AND M1.MAIN_CODE = 'A141'
                                                        AND M1.SUB_CODE  = A.ALTER_DIVI
            WHERE A.COMP_CODE = @COMP_CODE
            AND   A.ASST      = @PatAsst
    
            SET     @ExistYN   = ISNULL(@ExistYN  , 0 )
            SET     @AlterName = ISNULL(@AlterName, '')
    
            IF ( @ExistYN > 0 )
            BEGIN
                --분할자산의 변동내역이 존재합니다. 분할자산의 변동내역을 먼저 삭제한 후 분할취소를 실행하십시오.
                SET @ERR_DESC = '55384;A0195:' + @PatAsst + ' ' + @PatAsstName + ',A0222:' + @AlterName
                GOTO ERROR_HANDLER
            END
    
            --변동내역에 분할자산코드, 분할여부 Reset
            UPDATE AISS500T
            SET   PAT_YN   = 'N'
            WHERE COMP_CODE  = @COMP_CODE
            AND   ASST       = @OrgAsst
            AND   ALTER_DIVI = @ALTER_DIVI
            AND   SEQ        = @Seq
    
            --분할자산 삭제
            DELETE FROM AISS300T
            WHERE COMP_CODE = @COMP_CODE
            AND   ASST      = @PatAsst
    
            FETCH NEXT FROM CUR_PROC
            INTO @OrgAsst, @Seq, @PatAsst
        END
    
        CLOSE CUR_PROC
        DEALLOCATE CUR_PROC
    
        --원자산의 분할여부 Reset
        UPDATE AISS300T
        SET   PAT_YN = 'N'
        WHERE COMP_CODE = @COMP_CODE
        AND   ASST      = @ASST
    
    ERROR_HANDLER:
        SET NOCOUNT    OFF
        SET ARITHABORT OFF
    
        IF CHARINDEX(';', @ERR_DESC) > 0
            SELECT  SUBSTRING(@ERR_DESC, 1, CHARINDEX(';', @ERR_DESC) - 1)              AS ERROR_CODE
                 ,  SUBSTRING(@ERR_DESC, CHARINDEX(';', @ERR_DESC) + 1, LEN(@ERR_DESC)) AS ERROR_DESC
        ELSE
            SELECT  TOP 1 '' ERROR_CODE, '' ERROR_DESC
    END
	</select>
	
	<select id="aiss500ukrvService.selectMasterList" parameterType="Map" resultType="rMap">
		--aiss500ukrv.Caiss500ukr[fnAiss500QStd] QUERY01
		    SET NOCOUNT ON
		    
		    SELECT  T.COMP_CODE
		         ,  T.ASST_DIVI
		         ,  T.ASST
		         ,  T.ASST_NAME
		         ,  MAX(ISNULL(T.SPEC             , ''))    AS SPEC
		         ,  MAX(ISNULL(T.DIV_CODE         , ''))    AS DIV_CODE
		         ,  MAX(ISNULL(T.PJT_NAME         , ''))    AS PJT_NAME
		         ,  MAX(ISNULL(T.ACCNT_NAME       , ''))    AS ACCNT_NAME
		         ,  MAX(ISNULL(T.ACQ_DATE         , ''))    AS ACQ_DATE
		         ,  MAX(ISNULL(T.USE_DATE         , ''))    AS USE_DATE
		         ,  MAX(ISNULL(T.ACQ_Q            , 0 ))    AS ACQ_Q
		         ,  MAX(ISNULL(T.ACQ_AMT_I        , 0 ))    AS ACQ_AMT_I
		         ,  MAX(ISNULL(T.PAT_YN           , 'N'))   AS PAT_YN
		         ,  MAX(ISNULL(T.DPR_YYMM         , ''))    AS DPR_YYMM
		         ,  MAX(ISNULL(T.STOCK_Q          , 0 ))    AS STOCK_Q
		         ,  MAX(ISNULL(T.DRB_YEAR         , 0 ))    AS DRB_YEAR
		         ,  MAX(ISNULL(T.DEP_CTL          , ''))    AS DEP_CTL
		         ,  MAX(ISNULL(T.DEPT_CODE        , ''))    AS DEPT_CODE
		         ,  MAX(ISNULL(T.DEPT_NAME        , ''))    AS DEPT_NAME
		         ,  MAX(ISNULL(T.FI_CAPI_TOT_I    , 0 ))    AS FI_CAPI_TOT_I
		         ,  MAX(ISNULL(T.FI_SALE_TOT_I    , 0 ))    AS FI_SALE_TOT_I
		         ,  MAX(ISNULL(T.FI_SALE_DPR_TOT_I, 0 ))    AS FI_SALE_DPR_TOT_I
		         ,  MAX(ISNULL(T.FI_REVAL_TOT_I   , 0 ))    AS FI_REVAL_TOT_I
		         ,  MAX(ISNULL(T.FI_DPR_TOT_I     , 0 ))    AS FI_DPR_TOT_I
		         ,  MAX(ISNULL(T.FI_DMGLOS_TOT_I  , 0 ))    AS FI_DMGLOS_TOT_I
		         ,  MAX(ISNULL(T.FL_BALN_I        , 0 ))    AS FL_BALN_I
		         ,  MAX(ISNULL(T.FL_ACQ_AMT_I     , 0 ))    AS FL_ACQ_AMT_I
		    FROM (
		
		            SELECT  
		                    A.COMP_CODE
		                 ,  A.ASST_DIVI
		                 ,  A.ASST
		                 ,  A.ASST_NAME
		                 ,  A.SPEC
		                 ,  A.DIV_CODE
		                 ,  N1.PJT_NAME
		                 ,  N2.ACCNT_NAME
		                 ,  uniLITE.fnGetUserDate(A.COMP_CODE, A.ACQ_DATE)  AS ACQ_DATE
		                 ,  uniLITE.fnGetUserDate(A.COMP_CODE, A.USE_DATE)  AS USE_DATE
		                 ,  A.ACQ_Q
		                 ,  A.ACQ_AMT_I
		                 ,  A.STOCK_Q
		                 ,  A.DRB_YEAR
		                 ,  A.DEP_CTL
		                 ,  A.DEPT_CODE
		                 ,  A.DEPT_NAME
		                 ,  A.FI_CAPI_TOT_I
		                 ,  A.FI_SALE_TOT_I
		                 ,  A.FI_SALE_DPR_TOT_I
		                 ,  A.FI_REVAL_TOT_I
		                 ,  A.FI_DPR_TOT_I
		                 ,  A.FI_DMGLOS_TOT_I
		                 ,  A.FL_BALN_I
		                 ,  A.FL_ACQ_AMT_I
		    
		                 ,  CASE WHEN ISNULL(B.ALTER_DIVI, '') = '1' THEN 'Y'                       ELSE 'N' END  AS CAPI_YN
		                 ,  CASE WHEN ISNULL(B.ALTER_DIVI, '') = '1' THEN ISNULL(B.ALTER_DATE, '')  ELSE ''  END  AS CAPI_DATE
		                 ,  CASE WHEN ISNULL(B.ALTER_DIVI, '') = '2' THEN 'Y'                       ELSE 'N' END  AS WASTE_SW
		                 ,  CASE WHEN ISNULL(B.ALTER_DIVI, '') = '2' THEN ISNULL(B.ALTER_DATE, '')  ELSE ''  END  AS WASTE_DATE
		                 ,  CASE WHEN ISNULL(B.ALTER_DIVI, '') = '5' THEN 'Y'                       ELSE 'N' END  AS CHG_DRB_YEAR_YN
		                 ,  CASE WHEN ISNULL(B.ALTER_DIVI, '') = '5' THEN ISNULL(B.ALTER_DATE, '')  ELSE ''  END  AS CHG_DRB_YEAR_DATE
		                 ,  CASE WHEN ISNULL(B.ALTER_DIVI, '') = '6' THEN 'Y'                       ELSE 'N' END  AS CHG_DEP_CTL_YN
		                 ,  CASE WHEN ISNULL(B.ALTER_DIVI, '') = '6' THEN ISNULL(B.ALTER_DATE, '')  ELSE ''  END  AS CHG_DEP_CTL_DATE
		                 ,  CASE WHEN ISNULL(B.ALTER_DIVI, '') = '7' THEN 'Y'                       ELSE 'N' END  AS MOVE_YN
		                 ,  CASE WHEN ISNULL(B.ALTER_DIVI, '') = '7' THEN ISNULL(B.ALTER_DATE, '')  ELSE ''  END  AS MOVE_DATE
		                 ,  CASE WHEN ISNULL(B.ALTER_DIVI, '') = '8' THEN ISNULL(B.PAT_YN    , '')  ELSE 'N' END  AS PAT_YN
		                 ,  CASE WHEN ISNULL(B.ALTER_DIVI, '') = '8' THEN ISNULL(B.ALTER_DATE, '')  ELSE ''  END  AS PAT_DATE
		    
		                 ,  uniLITE.fnGetUserDate(A.COMP_CODE, ISNULL(C.DPR_YYMM, ''))  AS DPR_YYMM
		            FROM           AISS300T AS A  WITH (NOLOCK)
		                LEFT  JOIN AISS500T AS B  WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
		                                                        AND B.ASST       = A.ASST
		                LEFT  JOIN AISC100T AS C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
		                                                        AND C.ASST       = A.ASST
		                LEFT  JOIN BCM600T  AS N1 WITH (NOLOCK) ON  N1.COMP_CODE = A.COMP_CODE
		                                                        AND N1.PJT_CODE  = A.PJT_CODE
		                LEFT  JOIN ABA400T  AS N2 WITH (NOLOCK) ON  N2.COMP_CODE = A.COMP_CODE
		                                                        AND N2.ACCNT     = A.ACCNT
		                LEFT  JOIN BOR120T  AS N3 WITH (NOLOCK) ON  N3.COMP_CODE = A.COMP_CODE
		                                                        AND N3.DIV_CODE  = A.DIV_CODE
		            WHERE A.COMP_CODE        = #{S_COMP_CODE}
		            <if test="@foren.Ognl@isNotEmpty(FR_ASST_CODE)">
					  AND A.ASST &gt;= #{FR_ASST_CODE}				-- FROM 자산코드
					</if>
					<if test="@foren.Ognl@isNotEmpty(TO_ASST_CODE)">
					  AND A.ASST &lt;= #{TO_ASST_CODE}				-- TO   자산코드
					</if>
					<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">     
					  AND A.DIV_CODE IN
						<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
							#{item}
						</foreach>         
					</if>
					<if test="@foren.Ognl@isNotEmpty(ASST_DIVI)">  
				   	   AND A.ASST_DIVI = #{ASST_DIVI} 				-- 자산구분
				 	</if>
				 	<if test="@foren.Ognl@isNotEmpty(FR_ACCNT_CODE)">
					   AND A.ACCNT &gt;= #{FR_ACCNT_CODE}			-- FROM 계정과목
					</if>
					<if test="@foren.Ognl@isNotEmpty(TO_ACCNT_CODE)">
					   AND A.ACCNT &lt;= #{TO_ACCNT_CODE}			-- TO   계정과목
					</if>
					<if test="@foren.Ognl@isNotEmpty(FR_DEPT_CODE)">
					   AND A.DEPT_CODE &gt;= #{FR_DEPT_CODE}		-- FROM  부서
					</if>
					<if test="@foren.Ognl@isNotEmpty(TO_DEPT_CODE)">
					   AND A.DEPT_CODE &lt;= #{TO_DEPT_CODE}		-- TO    부서
					</if>
					<if test="@foren.Ognl@isNotEmpty(FR_PJT_CODE)">
					   AND A.PJT_CODE &gt;= #{FR_PJT_CODE}			-- FROM  프로젝트
					</if>
					<if test="@foren.Ognl@isNotEmpty(TO_PJT_CODE)">
					   AND A.PJT_CODE &lt;= #{TO_PJT_CODE}			-- TO    프로젝트
					</if>
					<if test="@foren.Ognl@isNotEmpty(DPR_STS2)">  
				   	   AND A.DPR_STS2 = #{DPR_STS2} 				-- 상각완료여부
				 	</if>
					<if test="@foren.Ognl@isNotEmpty(FR_DRB_YEAR)">
					   AND A.DRB_YEAR &gt;= #{FR_DRB_YEAR}			-- FROM  내용년수
					</if>
					<if test="@foren.Ognl@isNotEmpty(TO_DRB_YEAR)">
					   AND A.DRB_YEAR &lt;= #{TO_DRB_YEAR}			-- TO    내용년수
					</if>	
					<if test="@foren.Ognl@isNotEmpty(FR_ACQ_DATE)">
					   AND A.ACQ_DATE &gt;= #{FR_ACQ_DATE}			-- FROM  취득일
					</if>
					<if test="@foren.Ognl@isNotEmpty(TO_ACQ_DATE)">
					   AND A.ACQ_DATE &lt;= #{TO_ACQ_DATE}			-- TO    취득일
					</if>
		         ) AS T
		    WHERE 1 = 1
		    <if test="@foren.Ognl@isNotEmpty(CAPI_YN)">  
		   	   AND T.CAPI_YN = #{CAPI_YN} 								-- 자본적지출여부
		 	</if>
		 	<if test="@foren.Ognl@isNotEmpty(WASTE_SW)">  
		   	   AND T.WASTE_SW = #{WASTE_SW} 							-- 매각폐기여부
		 	</if>
		 	<if test="@foren.Ognl@isNotEmpty(CHG_DRB_YEAR_YN)">  
		   	   AND T.CHG_DRB_YEAR_YN = #{CHG_DRB_YEAR_YN} 				-- 내용년수변경여부
		 	</if>
		 	<if test="@foren.Ognl@isNotEmpty(CHG_DEP_CTL_YN)">  
		   	   AND T.CHG_DEP_CTL_YN = #{CHG_DEP_CTL_YN} 				-- 삼각방법변경여부
		 	</if>
		 	<if test="@foren.Ognl@isNotEmpty(MOVE_YN)">  
		   	   AND T.MOVE_YN = #{MOVE_YN} 								-- 이동여부
		 	</if>
		 	<if test="@foren.Ognl@isNotEmpty(CHG_DEP_CTL_YN)">  
		   	   AND T.CHG_DEP_CTL_YN = #{CHG_DEP_CTL_YN} 				-- 분할여부
		 	</if>

			<if test="@foren.Ognl@isNotEmpty(FR_CAPI_DATE)">
			   AND T.CAPI_DATE &gt;= #{FR_CAPI_DATE}					-- FROM  취득일
			</if>
			<if test="@foren.Ognl@isNotEmpty(TO_CAPI_DATE)">
			   AND T.CAPI_DATE &lt;= #{TO_CAPI_DATE}					-- TO    취득일
			</if>
			<if test="@foren.Ognl@isNotEmpty(FR_WASTE_DATE)">
			   AND T.WASTE_DATE &gt;= #{FR_WASTE_DATE}					-- FROM  매각/폐기일
			</if>
			<if test="@foren.Ognl@isNotEmpty(TO_WASTE_DATE)">
			   AND T.WASTE_DATE &lt;= #{TO_WASTE_DATE}					-- TO    매각/폐기일
			</if>
			<if test="@foren.Ognl@isNotEmpty(FR_CHG_DRB_YEAR_DATE)">
			   AND T.CHG_DRB_YEAR_DATE &gt;= #{FR_CHG_DRB_YEAR_DATE}	-- FROM 내용년수변경일
			</if>
			<if test="@foren.Ognl@isNotEmpty(TO_CHG_DRB_YEAR_DATE)">
			   AND T.CHG_DRB_YEAR_DATE &lt;= #{TO_CHG_DRB_YEAR_DATE}	-- TO   내용년수변경일
			</if>
			<if test="@foren.Ognl@isNotEmpty(FR_CHG_DEP_CTL_DATE)">
			   AND T.CHG_DEP_CTL_DATE &gt;= #{FR_CHG_DEP_CTL_DATE}		-- FROM 삼각방법변경일
			</if>
			<if test="@foren.Ognl@isNotEmpty(TO_CHG_DEP_CTL_DATE)">
			   AND T.CHG_DEP_CTL_DATE &lt;= #{TO_CHG_DEP_CTL_DATE}		-- TO   삼각방법변경일
			</if>
			<if test="@foren.Ognl@isNotEmpty(FR_MOVE_DATE)">
			   AND T.MOVE_DATE &gt;= #{FR_MOVE_DATE}					-- FROM 이동일
			</if>
			<if test="@foren.Ognl@isNotEmpty(TO_MOVE_DATE)">
			   AND T.MOVE_DATE &lt;= #{TO_MOVE_DATE}					-- TO   이동일
			</if>
			<if test="@foren.Ognl@isNotEmpty(FR_PAT_DATE)">
			   AND T.PAT_DATE &gt;= #{FR_PAT_DATE}						-- FROM 분할일
			</if>
			<if test="@foren.Ognl@isNotEmpty(TO_PAT_DATE)">
			   AND T.PAT_DATE &lt;= #{TO_PAT_DATE}						-- TO   분할일
			</if>
		    GROUP BY T.COMP_CODE, T.ASST_DIVI, T.ASST, T.ASST_NAME
		    ORDER BY T.ASST
	</select>
	
	
	
	<select id="aiss500ukrvService.selectDetailList1" parameterType="Map" resultType="rMap">
		-- 자본적지출내역 조회
		--aiss500ukrv.Caiss500ukr[fnAiss500QDtl1] QUERY01
	    SELECT 
	            A.COMP_CODE
	         ,  A.ASST
	         ,  A.ALTER_DIVI
	         ,  A.SEQ 
	         ,  LEFT(A.ALTER_DATE, 6)                               AS ALTER_YYMM
	         ,  uniLITE.fnGetUserDate(A.COMP_CODE, A.ALTER_DATE)    AS ALTER_DATE
	         ,  A.MONEY_UNIT
	         ,  A.EXCHG_RATE_O
	         ,  A.FOR_ALTER_AMT_I
	         ,  A.ALTER_AMT_I
	         ,  A.ALTER_REASON
	         ,  A.SET_TYPE
	         ,  A.PROOF_KIND
	         ,  A.SUPPLY_AMT_I
	         ,  A.TAX_AMT_I
	         ,  A.CUSTOM_CODE
	         ,  N1.CUSTOM_NAME
	         ,  A.SAVE_CODE
	         ,  N2.SAVE_NAME
	         ,  A.CREDIT_NUM
	         ,  N3.CRDT_NAME                                        AS CREDIT_NAME
	         ,  A.REASON_CODE
	         ,  uniLITE.fnGetUserDate(A.COMP_CODE, A.PAY_SCD_DATE)  AS PAY_SCD_DATE
	         ,  A.EB_YN
	         ,  uniLITE.fnGetUserDate(A.COMP_CODE, A.EX_DATE)       AS EX_DATE
	         ,  A.EX_NUM
	    
	         ,  A.INSERT_DB_USER
	         ,  A.INSERT_DB_TIME
	         ,  A.UPDATE_DB_USER
	         ,  A.UPDATE_DB_TIME 
	    FROM           AISS500T AS A  WITH (NOLOCK)
	        LEFT  JOIN BCM100T  AS N1 WITH (NOLOCK) ON  N1.COMP_CODE   = A.COMP_CODE
	                                                AND N1.CUSTOM_CODE = A.CUSTOM_CODE
	        LEFT  JOIN AFS100T  AS N2 WITH (NOLOCK) ON  N2.COMP_CODE   = A.COMP_CODE
	                                                AND N2.SAVE_CODE   = A.SAVE_CODE
	        LEFT  JOIN ABA500T  AS N3 WITH (NOLOCK) ON  N3.COMP_CODE   = A.COMP_CODE
	                                                AND N3.CRDT_NUM    = A.CREDIT_NUM
	    WHERE A.COMP_CODE  = #{S_COMP_CODE}
	    AND   A.ASST       = #{ASST}		 --(필수)자산코드
	    AND   A.ALTER_DIVI = #{ALTER_DIVI}   --(필수)변동구분(1:자본적지출, 2:매각/폐기, 5:내용년수변경, 6:상각방법변경, 7:이동, 8:분할)
	    ORDER BY A.SEQ
	</select>
	
	<select id="aiss500ukrvService.selectDetailList2" parameterType="Map" resultType="rMap">
		-- 매각/폐기내역 조회
		--aiss500ukrv.Caiss500ukr[fnAiss500QDtl2] QUERY01
	    SELECT 
	            A.COMP_CODE
	         ,  A.ASST
	         ,  A.ALTER_DIVI
	         ,  A.SEQ
	    
	         ,  A.WASTE_DIVI
	         ,  LEFT(A.ALTER_DATE, 6)                                   AS ALTER_YYMM
	         ,  uniLITE.fnGetUserDate(A.COMP_CODE, A.ALTER_DATE)        AS ALTER_DATE
	         ,  A.ALTER_Q
	         ,  A.MONEY_UNIT
	         ,  A.EXCHG_RATE_O
	         ,  A.FOR_ALTER_AMT_I
	         ,  A.ALTER_AMT_I
	         ,  A.ALTER_REASON
	         ,  A.SET_TYPE
	         ,  A.PROOF_KIND
	         ,  A.SUPPLY_AMT_I
	         ,  A.TAX_AMT_I
	         ,  A.CUSTOM_CODE
	         ,  N1.CUSTOM_NAME
	         ,  A.SAVE_CODE
	         ,  N2.SAVE_NAME
	         ,  uniLITE.fnGetUserDatE(A.COMP_CODE, A.PAY_SCD_DATE)      AS PAY_SCD_DATE
	         ,  A.EB_YN
	         ,  ISNULL(A.ALTER_AMT_I, 0) - ISNULL(A.SALE_AMT_I, 0)      AS ALTER_PROFIT
	         ,  uniLITE.fnGetUseRDate(A.COMP_CODE, A.EX_DATE)           AS EX_DATE
	         ,  A.EX_NUM
	    	 ,  A.SALE_ACQ_AMT_I
	         ,  A.INSERT_DB_USER
	         ,  A.INSERT_DB_TIME
	         ,  A.UPDATE_DB_USER
	         ,  A.UPDATE_DB_TIME 
	    FROM           AISS500T AS A  WITH (NOLOCK)
	        LEFT  JOIN BCM100T  AS N1 WITH (NOLOCK) ON  N1.COMP_CODE   = A.COMP_CODE
	                                                AND N1.CUSTOM_CODE = A.CUSTOM_CODE
	        LEFT  JOIN AFS100T  AS N2 WITH (NOLOCK) ON  N2.COMP_CODE   = A.COMP_CODE
	                                                AND N2.SAVE_CODE   = A.SAVE_CODE
	    WHERE A.COMP_CODE  = #{S_COMP_CODE}
	    AND   A.ASST       = #{ASST}		 --(필수)자산코드
	    AND   A.ALTER_DIVI = #{ALTER_DIVI}   --(필수)변동구분(1:자본적지출, 2:매각/폐기, 5:내용년수변경, 6:상각방법변경, 7:이동, 8:분할)
	    ORDER BY A.SEQ

	</select>
	
	<select id="aiss500ukrvService.selectDetailList3" parameterType="Map" resultType="rMap">
		-- 내용년수변경내역 조회
		--aiss500ukrv.Caiss500ukr[fnAiss500QDtl3] QUERY01
	    SELECT
	            A.COMP_CODE
	         ,  A.ASST
	         ,  A.ALTER_DIVI
	         ,  A.SEQ
	    
	         ,  LEFT(A.ALTER_DATE, 6)                               AS ALTER_YYMM
	         ,  uniLITE.fnGetUserDate(A.COMP_CODE, A.ALTER_DATE)    AS ALTER_DATE
	         ,  A.BF_DRB_YEAR
	         ,  A.AF_DRB_YEAR
	         ,  A.ALTER_REASON
	    
	         ,  A.INSERT_DB_USER
	         ,  A.INSERT_DB_TIME
	         ,  A.UPDATE_DB_USER
	         ,  A.UPDATE_DB_TIME 
	    FROM  AISS500T AS A  WITH (NOLOCK)
	    WHERE A.COMP_CODE  = #{S_COMP_CODE}
	    AND   A.ASST       = #{ASST}		 --(필수)자산코드
	    AND   A.ALTER_DIVI = #{ALTER_DIVI}   --(필수)변동구분(1:자본적지출, 2:매각/폐기, 5:내용년수변경, 6:상각방법변경, 7:이동, 8:분할)
	    ORDER BY A.SEQ
	</select>
	
	<select id="aiss500ukrvService.selectDetailList4" parameterType="Map" resultType="rMap">
		-- 상각방법변경내역 조회
		--aiss500ukrv.Caiss500ukr[fnAiss500QDtl4] QUERY01
    
	    SELECT
	            A.COMP_CODE
	         ,  A.ASST
	         ,  A.ALTER_DIVI
	         ,  A.SEQ
	    
	         ,  LEFT(A.ALTER_DATE, 6)                               AS ALTER_YYMM
	         ,  uniLITE.fnGetUserDate(A.COMP_CODE, A.ALTER_DATE)    AS ALTER_DATE
	         ,  A.BF_DEP_CTL
	         ,  A.AF_DEP_CTL
	         ,  A.ALTER_REASON
	    
	         ,  A.INSERT_DB_USER
	         ,  A.INSERT_DB_TIME
	         ,  A.UPDATE_DB_USER
	         ,  A.UPDATE_DB_TIME 
	    FROM  AISS500T AS A  WITH (NOLOCK)
	    WHERE A.COMP_CODE  = #{S_COMP_CODE}
	    AND   A.ASST       = #{ASST}		 --(필수)자산코드
	    AND   A.ALTER_DIVI = #{ALTER_DIVI}   --(필수)변동구분(1:자본적지출, 2:매각/폐기, 5:내용년수변경, 6:상각방법변경, 7:이동, 8:분할)
    ORDER BY A.SEQ
	</select>
	
	<select id="aiss500ukrvService.selectDetailList5" parameterType="Map" resultType="rMap">
		-- 이동내역 조회
		--aiss500ukrv.Caiss500ukr[fnAiss500QDtl5] QUERY01
    
	    SELECT
	            A.COMP_CODE
	         ,  A.ASST
	         ,  A.ALTER_DIVI
	         ,  A.SEQ
	    
	         ,  LEFT(A.ALTER_DATE, 6)                               AS ALTER_YYMM
	         ,  uniLITE.fnGetUserDate(A.COMP_CODE, A.ALTER_DATE)    AS ALTER_DATE
	         ,  A.BF_DEPT_CODE
	         ,  A.BF_DEPT_NAME
	         ,  A.BF_DIV_CODE 
	         ,  A.AF_DEPT_CODE
	         ,  A.AF_DEPT_NAME
	         ,  A.AF_DIV_CODE
	         ,  A.ALTER_REASON
	    
	         ,  A.INSERT_DB_USER
	         ,  A.INSERT_DB_TIME
	         ,  A.UPDATE_DB_USER
	         ,  A.UPDATE_DB_TIME 
	    FROM  AISS500T AS A  WITH (NOLOCK)
	    WHERE A.COMP_CODE  = #{S_COMP_CODE}
	    AND   A.ASST       = #{ASST}		 --(필수)자산코드
	    AND   A.ALTER_DIVI = #{ALTER_DIVI}   --(필수)변동구분(1:자본적지출, 2:매각/폐기, 5:내용년수변경, 6:상각방법변경, 7:이동, 8:분할)
	    ORDER BY A.SEQ
	</select>
	
	<select id="aiss500ukrvService.selectDetailList6" parameterType="Map" resultType="rMap">
		-- 분할내역 조회
		--aiss500ukrv.Caiss500ukr[fnAiss500QDtl6] QUERY01
		
	    SELECT
	            A.COMP_CODE
	         ,  A.ASST
	         ,  A.ALTER_DIVI
	         ,  A.SEQ
	    
	         ,  LEFT(A.ALTER_DATE, 6)                               AS ALTER_YYMM
	         ,  uniLITE.fnGetUserDate(A.COMP_CODE, A.ALTER_DATE)    AS ALTER_DATE
	         ,  A.PAT_ASST
	         ,  A.ALTER_Q
	         ,  A.PAT_ACQ_AMT_I
	         ,  A.PAT_FI_CAPI_TOT_I
	         ,  A.PAT_FI_SALE_TOT_I
	         ,  A.PAT_FI_SALE_DPR_TOT_I
	         ,  A.PAT_FI_REVAL_TOT_I
	         ,  A.PAT_FI_DPR_TOT_I
	         ,  A.PAT_FI_DMGLOS_TOT_I
	         ,  A.PAT_FL_BALN_I
	         ,  A.PAT_FL_ACQ_AMT_I
	         ,  A.ALTER_REASON
	         ,  A.PAT_YN
	    
	         ,  A.INSERT_DB_USER
	         ,  A.INSERT_DB_TIME
	         ,  A.UPDATE_DB_USER
	         ,  A.UPDATE_DB_TIME 
	    FROM           AISS500T AS A  WITH (NOLOCK)
	        LEFT  JOIN BCM100T  AS N1 WITH (NOLOCK) ON  N1.COMP_CODE   = A.COMP_CODE
	                                                AND N1.CUSTOM_CODE = A.CUSTOM_CODE
	        LEFT  JOIN AFS100T  AS N2 WITH (NOLOCK) ON  N2.COMP_CODE   = A.COMP_CODE
	                                                AND N2.SAVE_CODE   = A.SAVE_CODE
	        LEFT  JOIN ABA500T  AS N3 WITH (NOLOCK) ON  N3.COMP_CODE   = A.COMP_CODE
	                                                AND N3.CRDT_NUM    = A.CREDIT_NUM
	    WHERE A.COMP_CODE  = #{S_COMP_CODE}
	    AND   A.ASST       = #{ASST}		 --(필수)자산코드
	    AND   A.ALTER_DIVI = #{ALTER_DIVI}   --(필수)변동구분(1:자본적지출, 2:매각/폐기, 5:내용년수변경, 6:상각방법변경, 7:이동, 8:분할)
    ORDER BY A.SEQ
	</select>
	
	<select id="aiss500ukrvService.checkValidator" parameterType="Map" resultType="rMap">
		--aiss500ukrv.Caiss500ukr[fnAiss500Save] Query03
        BEGIN
            SET NOCOUNT    ON
            SET ARITHABORT ON
        
            --1. 변수선언
            DECLARE @COMP_CODE      NVARCHAR(08)
                  , @ASST           NVARCHAR(15)
                  , @ALTER_DIVI     NVARCHAR(01)
                  , @SEQ            NUMERIC(04, 0)
                  , @ALTER_DATE     NVARCHAR(08)
        
                  , @AF_DEPT_CODE   NVARCHAR(08)
                  , @AF_DEPT_NAME   NVARCHAR(30)
                  , @AF_DIV_CODE    NVARCHAR(08)
        
                  , @WORK_FLAG      NVARCHAR(01)
                  , @ERR_DESC       NVARCHAR(4000)
        
                  , @ExistYN        NUMERIC(04, 0)
                  , @PatYN          NVARCHAR(01)
                  , @AsstName       NVARCHAR(30)
                  , @DprYyMm        NVARCHAR(07)
                  , @DprEndSts      NVARCHAR(01)
        
                  , @AcFnDate       NVARCHAR(10)
                  , @AcToDate       NVARCHAR(10)
                  , @AlterDate      NVARCHAR(10)
        
            --2. 변수값 설정
            SET     @COMP_CODE      = #{S_COMP_CODE}
            SET     @ASST           = #{ASST}
            SET     @ALTER_DIVI     = #{ALTER_DIVI}
            SET     @SEQ            = CASE WHEN #{SEQ} = '' THEN '0' ELSE #{SEQ} END
            SET     @ALTER_DATE     = #{ALTER_DATE}
        
            SET     @AF_DEPT_CODE   = #{AF_DEPT_CODE}
            SET     @AF_DEPT_NAME   = #{AF_DEPT_NAME}
            SET     @AF_DIV_CODE    = #{AF_DIV_CODE}
        
            SET     @WORK_FLAG      = #{WORK_FLAG}
        
            --3. 자산마스터 조회
            SET     @ExistYN    = 0
            SET     @PatYN      = ''
            SET     @AsstName   = ''
            SET     @DprEndSts  = ''
            SELECT  @ExistYN    = 1
                 ,  @PatYN      = ISNULL(PAT_YN   , '')
                 ,  @AsstName   = ISNULL(ASST_NAME, '')
                 ,  @DprEndSts  = ISNULL(DPR_STS2 , '')
            FROM    AISS300T WITH (NOLOCK)
            WHERE   COMP_CODE = @COMP_CODE
            AND     ASST      = @ASST
        
            --3-1. 자산마스터 존재여부 체크
            IF ( @ExistYN = 0 )
            BEGIN
                --작업할 자료가 존재하지 않습니다.
                SET @ERR_DESC = '54361;A0195:' + @ASST
                GOTO ERROR_HANDLER
            END
        
            --3-2. 자산의 분할여부 체크
            IF ( @PatYN = 'Y' )
            BEGIN
                --분할된 자산은 수정 또는 삭제할 수 없습니다.
                SET @ERR_DESC = '55380;A0195:' + @ASST + ' ' + @AsstName
                GOTO ERROR_HANDLER
            END
        
            --4. 변동일이 회계기간 내에 속하는지 체크
            SELECT  @AcFnDate  = uniLITE.fnGetUserDate(COMP_CODE, FN_DATE)
                 ,  @AcToDate  = uniLITE.fnGetUserDate(COMP_CODE, TO_DATE)
                 ,  @AlterDate = uniLITE.fnGetUserDate(COMP_CODE, @ALTER_DATE)
            FROM    BOR100T WITH (NOLOCK)
            WHERE   COMP_CODE  = @COMP_CODE
        
            IF ( @AlterDate &lt; @AcFnDate OR @AlterDate &gt; @AcToDate )
            BEGIN
                --발생일은 회사정보에 등록된 회계기간에 속해야 합니다.
                SET @ERR_DESC = '55390;A0285:' + @AcFnDate + ' ~ ' + @AcToDate + '|#A0221:' + @AlterDate
                GOTO ERROR_HANDLER
            END
        
            --5. 동일한 월에 변동내역이 이미 등록되어 있는지 체크('자본적지출','분할' 제외)
                -- 자본적지출: 한달에 여러번 발생 가능
                -- 분할      : 한달에 한번만 분할이 가능하되, 분할시 서로 다른 분할코드로 입력될 수 있음.
            IF ( @ALTER_DIVI != '1' AND @ALTER_DIVI != '8' )
            BEGIN
                SET     @ExistYN   = 0
                SET     @AlterDate = ''
                SELECT  @ExistYN   = COUNT(1)
                     ,  @AlterDate = MAX(uniLITE.fnGetUserDate(COMP_CODE, ISNULL(ALTER_DATE, '')))
                FROM    AISS500T WITH (NOLOCK)
                WHERE   COMP_CODE     = @COMP_CODE
                AND     ASST          = @ASST
                AND     ALTER_DIVI    = @ALTER_DIVI
                AND     ((SEQ        != @SEQ        AND @WORK_FLAG = 'U') OR (@WORK_FLAG = 'N'))
                AND     ALTER_DATE LIKE LEFT(@ALTER_DATE, 6) + '%'
        
                SET     @ExistYN   = ISNULL(@ExistYN  , 0 )
                SET     @AlterDate = ISNULL(@AlterDate, '')
        
                IF ( @ExistYN != 0 )
                BEGIN
                    --자산의 변동내역은 월에 한번만 등록이 가능합니다.
                    SET @ERR_DESC = '55391;A0195:' + @ASST + ' ' + @AsstName + '|#A0221:' + @AlterDate
                    GOTO ERROR_HANDLER
                END
            END
        
            --6. 상각내역 조회
            SET     @DprYyMm  = ''
            SET     @ExistYN  = 0
            SELECT  @DprYyMm  = MIN(uniLITE.fnGetUserDate(COMP_CODE, ISNULL(DPR_YYMM, '')))
                 ,  @ExistYN  = COUNT(1)
            FROM    AISC100T WITH (NOLOCK)
            WHERE   COMP_CODE = @COMP_CODE
            AND     ASST      = @ASST
            AND     DPR_YYMM &gt;= LEFT(@ALTER_DATE, 6)
        
            SET     @DprYyMm  = ISNULL(@DprYyMm , '')
            SET     @ExistYN  = ISNULL(@ExistYN , 0 )
        
            --6-1. 변동월의 상각처리여부 체크
            IF ( @ExistYN != 0 )
            BEGIN
                --이미 자산의 변동내역이 적용되어 상각처리되었습니다. 상각자료를 취소한 후 다시 실행하십시오.
                SET @ERR_DESC = '55349;A0195:' + @ASST + ' ' + @AsstName + '|#A0196:' + @DprYyMm
                GOTO ERROR_HANDLER
            END
        
            --6-2. 상각최종월과 변동월의 비교
            IF ( @ALTER_DIVI = '5' OR @ALTER_DIVI = '6' OR @ALTER_DIVI = '7' OR @ALTER_DIVI = '8' )
            BEGIN
                DECLARE @lastDprYyMm    NVARCHAR(08)
                      , @reqDprYyMm     NVARCHAR(08)
        
                SELECT  @lastDprYyMm    = uniLITE.fnGetUserDate(COMP_CODE, MAX(ISNULL(DPR_YYMM, '')))
                     ,  @reqDprYyMm     = uniLITE.fnGetUserDate(COMP_CODE, CONVERT(NVARCHAR(06), DATEADD(MM, -1, @ALTER_DATE), 112))
                FROM    AISC100T WITH (NOLOCK)
                WHERE   COMP_CODE   = @COMP_CODE
                AND     ASST        = @ASST
                AND     DPR_YYMM   &lt;= LEFT(@ALTER_DATE, 6)
                GROUP BY COMP_CODE
        
                SET     @lastDprYyMm    = ISNULL(@lastDprYyMm, '')
                SET     @reqDprYyMm     = ISNULL(@reqDprYyMm , '')
        
                IF ( @lastDprYyMm != @reqDprYyMm )
                BEGIN
                    IF ( @ALTER_DIVI != '5' OR ( @ALTER_DIVI = '5' AND @DprEndSts != 'Y' ))
                    BEGIN
                        SET @ERR_DESC = '55395;:' + uniLITE.fnGetErrorMsg(55395, @lastDprYyMm)
                        GOTO ERROR_HANDLER
                    END
                END
            END
        
            --7. 순번채번
            IF ( @WORK_FLAG = 'N' )
            BEGIN
                SELECT  @SEQ = MAX(ISNULL(SEQ, 0))
                FROM    AISS500T  WITH (NOLOCK)
                WHERE   COMP_CODE  = @COMP_CODE
                AND     ASST       = @ASST
                AND     ALTER_DIVI = @ALTER_DIVI
        
                SET     @SEQ = ISNULL(@SEQ, 0) + 1
            END
        
        ERROR_HANDLER:
            SET NOCOUNT    OFF
            SET ARITHABORT OFF
        
            IF CHARINDEX(';', @ERR_DESC) &gt; 0
                SELECT  SUBSTRING(@ERR_DESC, 1, CHARINDEX(';', @ERR_DESC) - 1)              AS ERROR_CODE
                     ,  SUBSTRING(@ERR_DESC, CHARINDEX(';', @ERR_DESC) + 1, LEN(@ERR_DESC)) AS ERROR_DESC
                     ,  @SEQ                                                                AS SEQ
            ELSE
                SELECT  TOP 1 '' ERROR_CODE, '' ERROR_DESC, @SEQ SEQ
        END
	</select>	
	
	<select id="aiss500ukrvService.delValidator" parameterType="Map" resultType="rMap">
        --aiss500ukrv.Caiss500ukr[fnAiss500Save] Query01
        BEGIN
            SET NOCOUNT    ON
            SET ARITHABORT ON
        
            --1. 변수선언
            DECLARE @COMP_CODE      NVARCHAR(08)
                  , @ASST           NVARCHAR(15)
                  , @ALTER_DIVI     NVARCHAR(01)
                  , @ALTER_DATE     NVARCHAR(08)
        
                  , @BF_DEPT_CODE   NVARCHAR(08)
                  , @BF_DEPT_NAME   NVARCHAR(30)
                  , @BF_DIV_CODE    NVARCHAR(08)
        
                  , @ERR_DESC       NVARCHAR(4000)
        
                  , @ExistYN        NUMERIC(04, 0)
                  , @PatYN          NVARCHAR(01)
                  , @AsstName       NVARCHAR(30)
                  , @DprYyMm        NVARCHAR(07)
        
            --2. 변수값 설정
            SET     @COMP_CODE      = #{S_COMP_CODE}
            SET     @ASST           = #{ASST}
            SET     @ALTER_DIVI     = #{ALTER_DIVI}
            SET     @ALTER_DATE     = #{ALTER_DATE}
        
            SET     @BF_DEPT_CODE   = #{BF_DEPT_CODE}
            SET     @BF_DEPT_NAME   = #{BF_DEPT_NAME}
            SET     @BF_DIV_CODE    = #{BF_DIV_CODE}
        
            --3. 자산마스터 조회
            SET     @ExistYN  = 0
            SET     @PatYN    = ''
            SET     @AsstName = ''
            SELECT  @ExistYN  = 1
                 ,  @PatYN    = ISNULL(PAT_YN   , '')
                 ,  @AsstName = ISNULL(ASST_NAME, '')
            FROM    AISS300T WITH (NOLOCK)
            WHERE   COMP_CODE = @COMP_CODE
            AND     ASST      = @ASST
        
            --3-1. 자산마스터 존재여부 체크
            IF ( @ExistYN = 0 )
            BEGIN
                --작업할 자료가 존재하지 않습니다.
                SET @ERR_DESC = '54361;A0195:' + @ASST
                GOTO ERROR_HANDLER
            END
        
            --3-2. 자산의 분할여부 체크
            IF ( @PatYN = 'Y' )
            BEGIN
                --분할된 자산은 수정 또는 삭제할 수 없습니다.
                SET @ERR_DESC = '55380;A0195:' + @ASST + ' ' + @AsstName
                GOTO ERROR_HANDLER
            END
        
            --4. 상각내역 조회
            SET     @DprYyMm  = ''
            SET     @ExistYN  = 0
            SELECT  @DprYyMm  = MIN(uniLITE.fnGetUserDate(COMP_CODE, ISNULL(DPR_YYMM, '')))
                 ,  @ExistYN  = COUNT(1)
            FROM    AISC100T WITH (NOLOCK)
            WHERE   COMP_CODE = @COMP_CODE
            AND     ASST      = @ASST
            AND     DPR_YYMM &gt;= LEFT(@ALTER_DATE, 6)
        
            SET     @DprYyMm  = ISNULL(@DprYyMm , '')
            SET     @ExistYN  = ISNULL(@ExistYN , 0 )
        
            --4-1. 변동월의 상각처리여부 체크
            IF ( @ExistYN != 0 )
            BEGIN
                --이미 자산의 변동내역이 적용되어 상각처리되었습니다. 상각자료를 취소한 후 다시 실행하십시오.
                SET @ERR_DESC = '55349;A0195:' + @ASST + ' ' + @AsstName + ',A0196:' + @DprYyMm
                GOTO ERROR_HANDLER
            END
        
        ERROR_HANDLER:
            SET NOCOUNT    OFF
            SET ARITHABORT OFF
        
            IF CHARINDEX(';', @ERR_DESC) &gt; 0
                SELECT  SUBSTRING(@ERR_DESC, 1, CHARINDEX(';', @ERR_DESC) - 1)              AS ERROR_CODE
                     ,  SUBSTRING(@ERR_DESC, CHARINDEX(';', @ERR_DESC) + 1, LEN(@ERR_DESC)) AS ERROR_DESC
            ELSE
                SELECT  TOP 1 '' ERROR_CODE, '' ERROR_DESC
        END
    </select>
    
    
	<update id="aiss500ukrvService.insertDetail1" parameterType="Map">
		--자본적지출 insert
		--aiss500ukrv.Caiss500ukr[fnAiss500Save] Query04
        INSERT INTO AISS500T
             ( COMP_CODE
             , ASST
             , ALTER_DIVI
             , SEQ
             , ALTER_DATE
             , MONEY_UNIT
             , EXCHG_RATE_O
             , FOR_ALTER_AMT_I
             , ALTER_AMT_I
             , ALTER_REASON
             , SET_TYPE
             , PROOF_KIND
             , SUPPLY_AMT_I
             , TAX_AMT_I
             , CUSTOM_CODE
             , SAVE_CODE
             , CREDIT_NUM
             , REASON_CODE
             , PAY_SCD_DATE
             , EB_YN
             , INSERT_DB_USER
             , INSERT_DB_TIME
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             ) 
        VALUES
             ( #{COMP_CODE}      
             , #{ASST}           
             , #{ALTER_DIVI}     
             , #{SEQ}            
             , #{ALTER_DATE}     
             , #{MONEY_UNIT}     
             , #{EXCHG_RATE_O}   
             , #{FOR_ALTER_AMT_I}
             , #{ALTER_AMT_I}    
             , #{ALTER_REASON}   
             , #{SET_TYPE}       
             , #{PROOF_KIND}     
             , #{SUPPLY_AMT_I}   
             , #{TAX_AMT_I}      
             , #{CUSTOM_CODE}    
             , #{SAVE_CODE}      
             , #{CREDIT_NUM}     
             , #{REASON_CODE}    
             , #{PAY_SCD_DATE}   
             , #{EB_YN}          
             , #{S_USER_ID}
             , GETDATE()
             , #{S_USER_ID}
             , GETDATE()
             ) 
    </update>       
    
    <update id="aiss500ukrvService.insertDetail2" parameterType="Map">      
        --매각/폐기 insert
        --aiss500ukrv.Caiss500ukr[fnAiss500Save] Query04
        INSERT INTO AISS500T
             ( COMP_CODE
             , ASST
             , ALTER_DIVI
             , SEQ
             , WASTE_DIVI
             , ALTER_DATE
             , ALTER_Q
             , MONEY_UNIT
             , EXCHG_RATE_O
             , FOR_ALTER_AMT_I
             , ALTER_AMT_I
             , ALTER_REASON
             , SET_TYPE
             , PROOF_KIND
             , SUPPLY_AMT_I
             , TAX_AMT_I
             , CUSTOM_CODE
             , SAVE_CODE
             , PAY_SCD_DATE
             , EB_YN
             , SALE_ACQ_AMT_I
             , INSERT_DB_USER
             , INSERT_DB_TIME
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             ) 
        VALUES
             ( #{COMP_CODE}      
             , #{ASST}           
             , #{ALTER_DIVI}     
             , #{SEQ}            
             , #{WASTE_DIVI}     
             , #{ALTER_DATE}     
             , #{ALTER_Q}        
             , #{MONEY_UNIT}     
             , #{EXCHG_RATE_O}   
             , #{FOR_ALTER_AMT_I}
             , #{ALTER_AMT_I}    
             , #{ALTER_REASON}   
             , #{SET_TYPE}       
             , #{PROOF_KIND}     
             , #{SUPPLY_AMT_I}   
             , #{TAX_AMT_I}      
             , #{CUSTOM_CODE}    
             , #{SAVE_CODE}      
             , #{PAY_SCD_DATE}   
             , #{EB_YN}     
             , #{SALE_ACQ_AMT_I}     
             , #{S_USER_ID}
             , GETDATE()
             , #{S_USER_ID}
             , GETDATE()
             )
    </update>       
    
    <update id="aiss500ukrvService.insertDetail3" parameterType="Map">
        --내용년수변경 insert
        --aiss500ukrv.Caiss500ukr[fnAiss500Save] Query04
        INSERT INTO AISS500T
             ( COMP_CODE
             , ASST
             , ALTER_DIVI
             , SEQ
             , ALTER_DATE
             , BF_DRB_YEAR
             , AF_DRB_YEAR
             , ALTER_REASON
             , INSERT_DB_USER
             , INSERT_DB_TIME
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             ) 
        VALUES
             ( #{S_COMP_CODE}
             , #{ASST}
             , #{ALTER_DIVI}
             , #{SEQ}
             , #{ALTER_DATE}
             , #{BF_DRB_YEAR}
             , #{AF_DRB_YEAR}
             , #{ALTER_REASON}
             , #{S_USER_ID}
             , GETDATE()
             , #{S_USER_ID}
             , GETDATE()
             )   	      
    </update>       
    
    <update id="aiss500ukrvService.insertDetail4" parameterType="Map">      
        --상각방법 변경   insert
        --aiss500ukrv.Caiss500ukr[fnAiss500Save] Query04
        INSERT INTO AISS500T
             ( COMP_CODE
             , ASST
             , ALTER_DIVI
             , SEQ
             , ALTER_DATE
             , BF_DEP_CTL
             , AF_DEP_CTL
             , ALTER_REASON
             , INSERT_DB_USER
             , INSERT_DB_TIME
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             ) 
        VALUES
             ( #{S_COMP_CODE}
             , #{ASST}
             , #{ALTER_DIVI}
             , #{SEQ}
             , #{ALTER_DATE}
             , #{BF_DEP_CTL}
             , #{AF_DEP_CTL}
             , #{ALTER_REASON}
             , #{S_USER_ID}
             , GETDATE()
             , #{S_USER_ID}
             , GETDATE()
             )
    </update>       
    
    <update id="aiss500ukrvService.insertDetail5" parameterType="Map">      
        --이동 insert
        --aiss500ukrv.Caiss500ukr[fnAiss500Save] Query04
        INSERT INTO AISS500T
             ( COMP_CODE
             , ASST
             , ALTER_DIVI
             , SEQ
             , ALTER_DATE
             , BF_DEPT_CODE
             , BF_DEPT_NAME
             , BF_DIV_CODE
             , AF_DEPT_CODE
             , AF_DEPT_NAME
             , AF_DIV_CODE
             , ALTER_REASON
             , INSERT_DB_USER
             , INSERT_DB_TIME
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             ) 
        VALUES
             ( #{S_COMP_CODE}
             , #{ASST}
             , #{ALTER_DIVI}
             , #{SEQ}
             , #{ALTER_DATE}
             , #{BF_DEPT_CODE}
             , #{BF_DEPT_NAME}
             , #{BF_DIV_CODE}
             , #{AF_DEPT_CODE}
             , #{AF_DEPT_NAME}
             , #{AF_DIV_CODE}
             , #{ALTER_REASON}
             , #{S_USER_ID}
             , GETDATE()
             , #{S_USER_ID}
             , GETDATE()
             )
    </update>       
    
    <update id="aiss500ukrvService.insertDetail6" parameterType="Map">      
        --분할 insert
        --aiss500ukrv.Caiss500ukr[fnAiss500Save] Query04
        INSERT INTO AISS500T
             ( COMP_CODE
             , ASST
             , ALTER_DIVI
             , SEQ
             , ALTER_DATE
             , PAT_ASST
             , ALTER_Q
             , PAT_ACQ_AMT_I
             , PAT_FI_CAPI_TOT_I
             , PAT_FI_SALE_TOT_I
             , PAT_FI_SALE_DPR_TOT_I
             , PAT_FI_REVAL_TOT_I
             , PAT_FI_DPR_TOT_I
             , PAT_FI_DMGLOS_TOT_I
             , PAT_FL_BALN_I
             , PAT_FL_ACQ_AMT_I
             , PAT_YN
             , INSERT_DB_USER
             , INSERT_DB_TIME
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             ) 
        VALUES
             ( #{S_COMP_CODE}
             , #{ASST}
             , #{ALTER_DIVI}
             , #{SEQ}
             , #{ALTER_DATE}
             , #{PAT_ASST}
             , #{ALTER_Q}
             , #{PAT_ACQ_AMT_I}
             , #{PAT_FI_CAPI_TOT_I}
             , #{PAT_FI_SALE_TOT_I}
             , #{PAT_FI_SALE_DPR_TOT_I}
             , #{PAT_FI_REVAL_TOT_I}
             , #{PAT_FI_DPR_TOT_I}
             , #{PAT_FI_DMGLOS_TOT_I}
             , #{PAT_FL_BALN_I}
             , #{PAT_FL_ACQ_AMT_I}
             , #{PAT_YN}
             , #{S_USER_ID}
             , GETDATE()
             , #{S_USER_ID}
             , GETDATE()
             )
    </update>
    
    <update id="aiss500ukrvService.updateDetail1" parameterType="Map">
    	--aiss500ukrv.Caiss500ukr[fnAiss500Save] Query04
        UPDATE AISS500T
           SET ALTER_DATE      = #{ALTER_DATE}     
             , MONEY_UNIT      = #{MONEY_UNIT}     
             , EXCHG_RATE_O    = #{EXCHG_RATE_O}   
             , FOR_ALTER_AMT_I = #{FOR_ALTER_AMT_I}
             , ALTER_AMT_I     = #{ALTER_AMT_I}    
             , ALTER_REASON    = #{ALTER_REASON}   
             , SET_TYPE        = #{SET_TYPE}       
             , PROOF_KIND      = #{PROOF_KIND}     
             , SUPPLY_AMT_I    = #{SUPPLY_AMT_I}   
             , TAX_AMT_I       = #{TAX_AMT_I}      
             , CUSTOM_CODE     = #{CUSTOM_CODE}    
             , SAVE_CODE       = #{SAVE_CODE}      
             , CREDIT_NUM      = #{CREDIT_NUM}     
             , REASON_CODE     = #{REASON_CODE}    
             , PAY_SCD_DATE    = #{PAY_SCD_DATE}   
             , EB_YN           = #{EB_YN}          
             , EX_DATE         = #{EX_DATE}        
             , EX_NUM          = CASE WHEN #{EX_NUM} IN ('', 'null') THEN NULL ELSE #{EX_NUM} END
             , INSERT_DB_USER  = #{S_USER_ID}
             , UPDATE_DB_USER  = #{S_USER_ID}
             , UPDATE_DB_TIME  = GETDATE()
             
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND ASST            = #{ASST}
           AND ALTER_DIVI      = #{ALTER_DIVI}
           AND SEQ             = #{SEQ}
               
    </update>       
    
    <update id="aiss500ukrvService.updateDetail2" parameterType="Map">      
        --aiss500ukrv.Caiss500ukr[fnAiss500Save] Query04
        UPDATE AISS500T
           SET WASTE_DIVI      = #{WASTE_DIVI}     
             , ALTER_DATE      = #{ALTER_DATE}     
             , ALTER_Q         = #{ALTER_Q}        
             , MONEY_UNIT      = #{MONEY_UNIT}     
             , EXCHG_RATE_O    = #{EXCHG_RATE_O}   
             , FOR_ALTER_AMT_I = #{FOR_ALTER_AMT_I}
             , ALTER_AMT_I     = #{ALTER_AMT_I}    
             , ALTER_REASON    = #{ALTER_REASON}   
             , SET_TYPE        = #{SET_TYPE}       
             , PROOF_KIND      = #{PROOF_KIND}     
             , SUPPLY_AMT_I    = #{SUPPLY_AMT_I}   
             , TAX_AMT_I       = #{TAX_AMT_I}      
             , CUSTOM_CODE     = #{CUSTOM_CODE}    
             , SAVE_CODE       = #{SAVE_CODE}      
             , PAY_SCD_DATE    = #{PAY_SCD_DATE}   
             , EB_YN           = #{EB_YN}          
             , EX_DATE         = #{EX_DATE}        
             , EX_NUM          = CASE WHEN #{EX_NUM} IN ('', 'null') THEN NULL ELSE #{EX_NUM} END
             , SALE_ACQ_AMT_I  = #{SALE_ACQ_AMT_I}
             , INSERT_DB_USER  = #{S_USER_ID}
             , UPDATE_DB_USER  = #{S_USER_ID}
             , UPDATE_DB_TIME  = GETDATE()
             
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND ASST            = #{ASST}
           AND ALTER_DIVI      = #{ALTER_DIVI}
           AND SEQ             = #{SEQ}
          
    </update>       
    
    <update id="aiss500ukrvService.updateDetail3" parameterType="Map">      
        --aiss500ukrv.Caiss500ukr[fnAiss500Save] Query04
        UPDATE AISS500T
           SET ALTER_DATE     = #{ALTER_DATE}
             , BF_DRB_YEAR    = #{BF_DRB_YEAR}
             , AF_DRB_YEAR    = #{AF_DRB_YEAR}
             , ALTER_REASON   = #{ALTER_REASON}
             , INSERT_DB_USER = #{S_USER_ID}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
             
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND ASST            = #{ASST}
           AND ALTER_DIVI      = #{ALTER_DIVI}
           AND SEQ             = #{SEQ}
          
    </update>       
    
    <update id="aiss500ukrvService.updateDetail4" parameterType="Map">      
        --aiss500ukrv.Caiss500ukr[fnAiss500Save] Query04
        UPDATE AISS500T
           SET ALTER_DATE     = #{ALTER_DATE}
             , BF_DEP_CTL     = #{BF_DEP_CTL}
             , AF_DEP_CTL     = #{AF_DEP_CTL}
             , ALTER_REASON   = #{ALTER_REASON}
             , INSERT_DB_USER = #{S_USER_ID}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
             
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND ASST            = #{ASST}
           AND ALTER_DIVI      = #{ALTER_DIVI}
           AND SEQ             = #{SEQ}
          
    </update>       
    
    <update id="aiss500ukrvService.updateDetail5" parameterType="Map">      
        --aiss500ukrv.Caiss500ukr[fnAiss500Save] Query04
        UPDATE AISS500T
           SET ALTER_DATE     = #{ALTER_DATE}  
             , BF_DEPT_CODE   = #{BF_DEPT_CODE}
             , BF_DEPT_NAME   = #{BF_DEPT_NAME}
             , BF_DIV_CODE    = #{BF_DIV_CODE} 
             , AF_DEPT_CODE   = #{AF_DEPT_CODE}
             , AF_DEPT_NAME   = #{AF_DEPT_NAME}
             , AF_DIV_CODE    = #{AF_DIV_CODE} 
             , ALTER_REASON   = #{ALTER_REASON}
             , INSERT_DB_USER = #{S_USER_ID}
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GETDATE()
             
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND ASST            = #{ASST}
           AND ALTER_DIVI      = #{ALTER_DIVI}
           AND SEQ             = #{SEQ}
          
    </update>       
    
    <update id="aiss500ukrvService.updateDetail6" parameterType="Map">      
        --aiss500ukrv.Caiss500ukr[fnAiss500Save] Query04
        UPDATE AISS500T
           SET ALTER_DATE            = #{ALTER_DATE}           
             , PAT_ASST              = #{PAT_ASST}             
             , ALTER_Q               = #{ALTER_Q}              
             , PAT_ACQ_AMT_I         = #{PAT_ACQ_AMT_I}        
             , PAT_FI_CAPI_TOT_I     = #{PAT_FI_CAPI_TOT_I}    
             , PAT_FI_SALE_TOT_I     = #{PAT_FI_SALE_TOT_I}    
             , PAT_FI_SALE_DPR_TOT_I = #{PAT_FI_SALE_DPR_TOT_I}
             , PAT_FI_REVAL_TOT_I    = #{PAT_FI_REVAL_TOT_I}   
             , PAT_FI_DPR_TOT_I      = #{PAT_FI_DPR_TOT_I}     
             , PAT_FI_DMGLOS_TOT_I   = #{PAT_FI_DMGLOS_TOT_I}  
             , PAT_FL_BALN_I         = #{PAT_FL_BALN_I}        
             , PAT_FL_ACQ_AMT_I      = #{PAT_FL_ACQ_AMT_I}     
             , ALTER_REASON          = #{ALTER_REASON}         
             , PAT_YN                = #{PAT_YN}               
             , INSERT_DB_USER        = #{S_USER_ID}
             , UPDATE_DB_USER        = #{S_USER_ID}
             , UPDATE_DB_TIME        = GETDATE()
             
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND ASST            = #{ASST}
           AND ALTER_DIVI      = #{ALTER_DIVI}
           AND SEQ             = #{SEQ}         
    </update>
    
    <delete id="aiss500ukrvService.deleteDetail" parameterType="Map" >
        --aiss500ukrv.Caiss500ukr[fnAiss500Save] Query02
        DELETE FROM AISS500T 
         WHERE COMP_CODE  = #{S_COMP_CODE}
           AND ASST       = #{ASST}
           AND ALTER_DIVI = #{ALTER_DIVI}
           AND SEQ        = #{SEQ}          
    </delete>
    
</mapper>