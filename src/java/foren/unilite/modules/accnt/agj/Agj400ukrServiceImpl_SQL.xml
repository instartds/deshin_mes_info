<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agj400ukrServiceImpl">
	<select id="agj400ukrServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
		 DECLARE       @COMP_CODE              NVARCHAR(08)
		 --   변수 값 할당
		 SET @COMP_CODE    = #{S_COMP_CODE}
		 
		 --   날짜 포맷 유형 설정 
	     DECLARE         @DateFormat         NVARCHAR(10)
	 
	     SELECT TOP 1 @DateFormat = M1.CODE_NAME
	     FROM   BSA100T M1 WITH (NOLOCK)
	     WHERE  M1.COMP_CODE = @COMP_CODE
	     AND    M1.MAIN_CODE = N'B044'
	     AND    M1.REF_CODE1 = N'Y'
	 
	     SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
		 
		 --   그룹웨어 연동여부 설정  
	     DECLARE         @LinkedGW           NVARCHAR(01)
	 
	     SELECT TOP 1 @LinkedGW = M1.REF_CODE1
	     FROM   BSA100T M1 WITH (NOLOCK)
	     WHERE  M1.COMP_CODE = @COMP_CODE
	     AND    M1.MAIN_CODE = N'A169'
	     AND    M1.SUB_CODE  = N'20'
	 
	    SET @LinkedGW = ISNULL(@LinkedGW, 'N')
		     
		SELECT  A.COMP_CODE
		       , A.PAY_DRAFT_NO
		       , REPLACE(
		         REPLACE(
		         REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PAY_DATE , 1, 4))
		                            , 'MM'  , SUBSTRING(A.PAY_DATE , 5, 2))
		                            , 'DD'  , SUBSTRING(A.PAY_DATE , 7, 2))      AS PAY_DATE
		       , REPLACE(
		         REPLACE(
		         REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.EX_DATE, 1, 4))
		                            , 'MM'  , SUBSTRING(A.EX_DATE, 5, 2))
		                            , 'DD'  , SUBSTRING(A.EX_DATE, 7, 2))      AS EX_DATE
		       , CASE WHEN ISNULL(A.EX_NUM, 0) = 0 THEN ''
		              ELSE CONVERT(NVARCHAR(7), A.EX_NUM)
		         END                                                             AS EX_NUM
		       , A.DRAFTER                                                       AS DRAFTER_PN
		       , D1.NAME                                                         AS DRAFTER_NM
		       , A.PAY_USER                                                      AS PAY_USER_PN
		       , D2.NAME                                                         AS PAY_USER_NM
		       , A.DEPT_CODE                                                     AS DEPT_CODE
		       , D3.TREE_NAME                                                    AS DEPT_NAME
		       , A.DIV_CODE                                                      AS DIV_CODE
		       , F1.TOT_AMT_I                                                    AS TOT_AMT_I
		       , A.TITLE                                                         AS TITLE
		       , ISNULL(A.TITLE_DESC, '')                                        AS TITLE_DESC
		       , CASE WHEN @LinkedGW = 'Y' THEN '0' --ISNULL(B.GW_STATUS, '0')
		              ELSE A.STATUS
		         END                                                             AS STATUS
		       , A.SLIP_DATE                                                     AS SLIP_DATE
		       , A.FILE_NUM
		 FROM                AGJ400T   A  WITH (NOLOCK)
		         LEFT  JOIN  HUM100T   D1 WITH (NOLOCK) ON D1.COMP_CODE      = A.COMP_CODE
		                                               AND D1.PERSON_NUMB    = A.DRAFTER
		         LEFT  JOIN  HUM100T   D2 WITH (NOLOCK) ON D2.COMP_CODE      = A.COMP_CODE
		                                               AND D2.PERSON_NUMB    = A.PAY_USER
		         LEFT  JOIN  BSA210T   D3 WITH (NOLOCK) ON D3.COMP_CODE      = A.COMP_CODE
		                                               AND D3.TREE_CODE      = A.DEPT_CODE
		         LEFT  JOIN  (
		                     SELECT  COMP_CODE
		                           , PAY_DRAFT_NO
		                           , SUM(TOT_AMT_I) AS TOT_AMT_I
		                     FROM    AGJ410T WITH (NOLOCK)
		                     WHERE   COMP_CODE = @COMP_CODE
		                     GROUP   BY  COMP_CODE, PAY_DRAFT_NO
		                     )         F1               ON F1.COMP_CODE      = A.COMP_CODE
		                                               AND F1.PAY_DRAFT_NO   = A.PAY_DRAFT_NO
		 WHERE  A.COMP_CODE      = #{S_COMP_CODE}
         AND    A.PAY_DRAFT_NO   =  #{PAY_DRAFT_NO}
	</select>
	<select id="agj400ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		DECLARE       @COMP_CODE              NVARCHAR(08)
		 --   변수 값 할당  --------------------------------------------------------------------------------------------------
		     SET @COMP_CODE          = #{S_COMP_CODE}
		 
		 --   날짜 포맷 유형 설정  -------------------------------------------------------------------------------------------
		     DECLARE         @DateFormat         NVARCHAR(10)
		 
		     SELECT TOP 1 @DateFormat = M1.CODE_NAME
		     FROM   BSA100T M1 WITH (NOLOCK)
		     WHERE  M1.COMP_CODE = @COMP_CODE
		     AND    M1.MAIN_CODE = N'B044'
		     AND    M1.REF_CODE1 = N'Y'
		 
		     SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
		 
		 --   그룹웨어 연동여부 설정  ----------------------------------------------------------------------------------------
		     DECLARE         @LinkedGW           NVARCHAR(01)
		 
		     SELECT TOP 1 @LinkedGW = M1.REF_CODE1
		     FROM   BSA100T M1 WITH (NOLOCK)
		     WHERE  M1.COMP_CODE = @COMP_CODE
		     AND    M1.MAIN_CODE = N'A169'
		     AND    M1.SUB_CODE  = N'20'
		 
		     SET @LinkedGW = ISNULL(@LinkedGW, 'N')
		 
		 --   데이터 조회  ---------------------------------------------------------------------------------------------------
		 
		 SELECT   
		         B.COMP_CODE
		       , B.PAY_DRAFT_NO
		       , B.SEQ
		       , B.GUBUN
		       , ISNULL(M4.REF_CODE1, '')                                        AS GUBUN_REF1
		       , B.PAY_DIVI
		       , ISNULL(M2.REF_CODE1, '')                                        AS PAY_DIVI_REF1
		       , ISNULL(M2.REF_CODE2, '')                                        AS PAY_DIVI_REF2
		       , ISNULL(M2.REF_CODE3, '')                                        AS PAY_DIVI_REF3
		       , ISNULL(M2.REF_CODE4, '')                                        AS PAY_DIVI_REF4
		       , B.PAY_TYPE
		       , ISNULL(M3.REF_CODE4, '')                                        AS PAY_TYPE_REF4
		       , ISNULL(M3.REF_CODE6, '')                                        AS PAY_TYPE_REF6
		       , B.MAKE_SALE
		       , B.ACCNT
		       , C2.ACCNT_NAME
		       , B.REMARK
		       , B.PROOF_DIVI
		       , ISNULL(M1.REF_CODE1, '')                                        AS PROOF_KIND
		       , ISNULL(M1.REF_CODE2, '')                                        AS REASON_ESS
		       , ISNULL(M1.REF_CODE3, '')                                        AS PROOF_TYPE
		       , ISNULL(M1.REF_CODE5, '')                                        AS CUSTOM_ESS
		       , ISNULL(M1.REF_CODE6, '')                                        AS DEFAULT_EB
		       , ISNULL(M1.REF_CODE7, '')                                        AS DEFAULT_REASON
		    
		       , B.QTY
		       , B.PRICE 
		    
		       , B.SUPPLY_AMT_I
		       , B.TAX_AMT_I
		       , B.ADD_REDUCE_AMT_I
		       , B.TOT_AMT_I
		       , B.CUSTOM_CODE                                                   AS CUSTOM_CODE
		       , CASE WHEN ISNULL(B.CUSTOM_CODE, '') = '' THEN B.CUSTOM_NAME
		              ELSE C1.CUSTOM_NAME
		         END                                                             AS CUSTOM_NAME
		       ,(SUBSTRING(C1.COMPANY_NUM,1,3) + '-' +
	             SUBSTRING(C1.COMPANY_NUM,4,2) + '-' +
	             SUBSTRING(C1.COMPANY_NUM,6,5))                                   AS COMPANY_NUM      
		       , ISNULL(B.BE_CUSTOM_CODE, '')                                    AS BE_CUSTOM_CODE
		       , ISNULL(C9.CUSTOM_NAME  , '')                                    AS BE_CUSTOM_NAME
		       , ISNULL(CASE WHEN C2.AC_CODE1 = 'A9' THEN 'Y'
		                     WHEN C2.AC_CODE2 = 'A9' THEN 'Y'
		                     WHEN C2.AC_CODE3 = 'A9' THEN 'Y'
		                     WHEN C2.AC_CODE4 = 'A9' THEN 'Y'
		                     WHEN C2.AC_CODE5 = 'A9' THEN 'Y'
		                     WHEN C2.AC_CODE6 = 'A9' THEN 'Y'
		                     ELSE 'N'
		                END, '')                                                 AS COST_POOL_YN
		       , B.COST_POOL_CODE
		       , B.EB_YN
		       , B.CRDT_NUM
		       , uniLITE.fnCipherDecrypt(C7.CRDT_FULL_NUM, '')                   AS CRDT_FULL_NUM
		       , B.APP_NUM
		       
		       , B.PJT_CODE
		       , C3.PJT_NAME
		       , B.PEND_CODE
		       , B.PAY_CUSTOM_CODE
		       , C4.PAY_CUSTOM_NAME
		       , B.REASON_CODE
		       , ISNULL(CASE WHEN D3.AC_CODE1 = 'L3' THEN 'Y'
		                     WHEN D3.AC_CODE2 = 'L3' THEN 'Y'
		                     WHEN D3.AC_CODE3 = 'L3' THEN 'Y'
		                     WHEN D3.AC_CODE4 = 'L3' THEN 'Y'
		                     WHEN D3.AC_CODE5 = 'L3' THEN 'Y'
		                     WHEN D3.AC_CODE6 = 'L3' THEN 'Y'
		                     ELSE 'N'
		                END, '')                                                 AS SEND_DATE_YN
		       , CASE WHEN ISNULL(B.SEND_DATE, '') = '' THEN NULL
		              ELSE REPLACE(
		                   REPLACE(
		                   REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.SEND_DATE, 1, 4))
		                                      , 'MM'  , SUBSTRING(B.SEND_DATE, 5, 2))
		                                      , 'DD'  , SUBSTRING(B.SEND_DATE, 7, 2))
		         END                                                             AS SEND_DATE
		       , CASE WHEN ISNULL(B.BILL_DATE, '') = '' THEN NULL
		              ELSE REPLACE(
		                   REPLACE(
		                   REPLACE(@DateFormat, 'YYYY', SUBSTRING(B.BILL_DATE, 1, 4))
		                                      , 'MM'  , SUBSTRING(B.BILL_DATE, 5, 2))
		                                      , 'DD'  , SUBSTRING(B.BILL_DATE, 7, 2))
		         END                                                             AS BILL_DATE
		       , B.DEPT_CODE
		       , B.DEPT_NAME
		       , B.DIV_CODE
		       , B.ITEM_CODE
		       , D1.ITEM_NAME
		       , D1.SPEC
		       , ISNULL(B.BILL_USER, '')                                         AS BILL_USER
		       , ISNULL(C8.NAME, '')                                             AS BILL_USER_NAME
		       , B.REFER_NUM
		       , CASE WHEN ISNULL(B.REFER_NUM, '') != '' AND ISNULL(B.SUPPLY_AMT_I, 0) &lt; 0 THEN 'Y'
		              ELSE 'N'
		         END                                                             AS CANCEL_YN
		       , B.SAVE_CODE
		       , C6.SAVE_NAME
		       , uniLITE.fnCipherDecrypt(C6.BANK_ACCOUNT, '')                    AS BANK_ACCOUNT
		       
		       , B.BOOK_CODE													 AS BOOK_CODE
			   , C10.BOOK_NAME													 AS BOOK_NAME
			   , C10.BANK_CODE													 
			   , c11.CUSTOM_NAME                                                 AS BANK_NAME
			   , C10.BANKBOOK_NAME												 
			   , uniLITE.fnCipherDecrypt(C10.BANKBOOK_NUM, '') 					 AS CUST_BOOK_ACCOUNT
			   , B.USE_DATE
			   , B.MONEY_UNIT
			   , B.EXCHG_RATE_O
			   , B.FOR_AMT_I
			   , B.INSERT_DB_USER
		       , B.INSERT_DB_TIME
		       , B.UPDATE_DB_USER
		       , B.UPDATE_DB_TIME
		 FROM                AGJ400T   A  WITH (NOLOCK)
		         INNER JOIN  AGJ410T   B  WITH (NOLOCK) ON B.COMP_CODE           = A.COMP_CODE
		                                               AND B.PAY_DRAFT_NO        = A.PAY_DRAFT_NO
		         LEFT  JOIN  BCM100T   C1 WITH (NOLOCK) ON C1.COMP_CODE          = B.COMP_CODE
		                                               AND C1.CUSTOM_CODE        = B.CUSTOM_CODE
		         LEFT  JOIN  ABA400T   C2 WITH (NOLOCK) ON C2.COMP_CODE          = B.COMP_CODE
		                                               AND C2.ACCNT              = B.ACCNT
		         LEFT  JOIN  BCM600T   C3 WITH (NOLOCK) ON C3.COMP_CODE          = B.COMP_CODE
		                                               AND C3.PJT_CODE           = B.PJT_CODE
		         LEFT  JOIN  ABH200TV  C4 WITH (NOLOCK) ON C4.COMP_CODE          = B.COMP_CODE
		                                               AND C4.PEND_CODE          = B.PEND_CODE
		                                               AND C4.PAY_CUSTOM_CODE    = B.PAY_CUSTOM_CODE
		         LEFT  JOIN  AFS100T   C6 WITH (NOLOCK) ON C6.COMP_CODE          = B.COMP_CODE
		                                               AND C6.SAVE_CODE          = B.SAVE_CODE                                      
		         LEFT  JOIN  ABA500T   C7 WITH (NOLOCK) ON C7.COMP_CODE          = B.COMP_CODE
		                                               AND C7.CRDT_NUM           = B.CRDT_NUM
		         LEFT  JOIN  HUM100T   C8 WITH (NOLOCK) ON C8.COMP_CODE          = B.COMP_CODE
		                                               AND C8.PERSON_NUMB        = B.BILL_USER
		         LEFT  JOIN  BCM100T   C9 WITH (NOLOCK) ON C9.COMP_CODE          = B.COMP_CODE
		                                               AND C9.CUSTOM_CODE        = B.BE_CUSTOM_CODE
		         LEFT  JOIN  BPR100T   D1 WITH (NOLOCK) ON D1.COMP_CODE          = B.COMP_CODE
		                                               AND D1.ITEM_CODE          = B.ITEM_CODE
		         LEFT  JOIN  (SELECT COMP_CODE
		                           , PAY_DIVI
		                           , PAY_TYPE
		                           , DR_CR
		                           , AMT_DIVI
		                           , ACCNT
		                      FROM   AGA350T WITH (NOLOCK)
		                      WHERE  COMP_CODE = @COMP_CODE
		                      AND    GUBUN     = '1'
		                      AND    DR_CR     = '2'
		                      AND    AMT_DIVI  = '90'
		                      GROUP BY COMP_CODE, PAY_DIVI, PAY_TYPE, DR_CR, AMT_DIVI, ACCNT
		                     )         D2               ON D2.COMP_CODE          = B.COMP_CODE
		                                               AND D2.PAY_DIVI           = B.PAY_DIVI
		                                               AND D2.PAY_TYPE           = B.PAY_TYPE
		         LEFT  JOIN  ABA400T   D3 WITH (NOLOCK) ON D3.COMP_CODE          = D2.COMP_CODE
		                                               AND D3.ACCNT              = D2.ACCNT
		         LEFT  JOIN  BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE          = B.COMP_CODE
		                                               AND M1.MAIN_CODE          = 'A173'
		                                               AND M1.SUB_CODE           = B.PROOF_DIVI
		         LEFT  JOIN  BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE          = B.COMP_CODE
		                                               AND M2.MAIN_CODE          = 'A172'
		                                               AND M2.SUB_CODE           = B.PAY_DIVI
		         LEFT  JOIN  BSA100T   M3 WITH (NOLOCK) ON M3.COMP_CODE          = B.COMP_CODE
		                                               AND M3.MAIN_CODE          = 'A177'
		                                               AND M3.SUB_CODE           = B.PAY_TYPE
		         LEFT  JOIN  BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE          = B.COMP_CODE
		                                               AND M4.MAIN_CODE          = 'A178'
		                                               AND M4.SUB_CODE           = B.GUBUN
		         LEFT  JOIN  BCM130T  C10 WITH (NOLOCK) ON C10.COMP_CODE         = B.COMP_CODE
		                                               AND C10.CUSTOM_CODE       = B.CUSTOM_CODE
		                                               AND C10.BOOK_CODE         = B.BOOK_CODE
		         LEFT JOIN	 BCM100T  c11 WITH (NOLOCK) ON C11.COMP_CODE   = C10.COMP_CODE
													   AND C11.CUSTOM_CODE = C10.BANK_CODE
											 		   AND C11.CUSTOM_TYPE = '4'
         WHERE   A.COMP_CODE        = #{S_COMP_CODE}
         AND     A.PAY_DRAFT_NO   =  #{PAY_DRAFT_NO}
	</select>
	<select id="agj400ukrServiceImpl.selectCheck1" parameterType="Map" resultType="rMap">
		SELECT  MAX(MAPPING) MAPPING      , MAX(GWIF) GWIF            , MAX(DRAFT_REF) DRAFT_REF     , MAX(DTL_MAX_ROWS) DTL_MAX_ROWS, MAX(CONTENTS) CONTENTS
		     ,  MAX(MULTI_CODE) MULTI_CODE, MAX(TOT_AMT_IN) TOT_AMT_IN, MAX(APP_BTN_USE) APP_BTN_USE , MAX(PEND_CODE_YN) PEND_CODE_YN
		     ,  MAX(CRDT_REF) CRDT_REF    , MAX(PAY_DTL_REF) PAY_DTL_REF
		FROM    (
		        SELECT  CASE WHEN SUB_CODE = '10' THEN UPPER(REF_CODE1) ELSE '' END    AS MAPPING      --지출수입관리 아이디와 1:1 Mapping
		              , CASE WHEN SUB_CODE = '20' THEN UPPER(REF_CODE1) ELSE '' END    AS GWIF         --지출결의_그룹웨어 연동여부
		              , CASE WHEN SUB_CODE = '40' THEN UPPER(REF_CODE1) ELSE '' END    AS DRAFT_REF    --지출결의_예산기안참조 필수여부
		              , CASE WHEN SUB_CODE = '41' THEN UPPER(REF_CODE1) ELSE '' END    AS DTL_MAX_ROWS --지출결의_입력가능행수
		              , CASE WHEN SUB_CODE = '42' THEN UPPER(REF_CODE1) ELSE '' END    AS CONTENTS     --지출결의_내용난 표시여부
		              , CASE WHEN SUB_CODE = '43' THEN UPPER(REF_CODE1) ELSE '' END    AS MULTI_CODE   --지출결의_다중예산코드 입력 허용여부
		              , CASE WHEN SUB_CODE = '44' THEN UPPER(REF_CODE1) ELSE '' END    AS TOT_AMT_IN   --지출결의_지급액 입력여부
		              , CASE WHEN SUB_CODE = '45' THEN UPPER(REF_CODE1) ELSE '' END    AS APP_BTN_USE  --지출결의_지출승인 프로세스 사용
		              , CASE WHEN SUB_CODE = '46' THEN UPPER(REF_CODE1) ELSE '' END    AS PEND_CODE_YN --지출결의_지출결의_지급처구분(pend_code) 사용
		              , CASE WHEN SUB_CODE = '50' THEN UPPER(REF_CODE1) ELSE '' END    AS CRDT_REF     --지출결의_법인카드참조 필수여부
		              , CASE WHEN SUB_CODE = '70' THEN UPPER(REF_CODE1) ELSE '' END    AS PAY_DTL_REF  --지출결의_지급명세서 참조여부
		        FROM    BSA100T WITH (NOLOCK)
		        WHERE   COMP_CODE   = #{S_COMP_CODE}
		        AND     MAIN_CODE   = N'A169'
		        AND     SUB_CODE   IN ('10', '20', '40', '41', '42', '43', '44', '45', '46', '50', '70')
	    ) T
		
	</select>
	<select id="agj400ukrServiceImpl.selectCheck3" parameterType="Map" resultType="rMap">
		SELECT  TOP 1 SUB_CODE AS CHARGE_CODE, REF_CODE2 AS CHARGE_DIVI
		FROM    BSA100T WITH (NOLOCK)
		WHERE   COMP_CODE   = #{S_COMP_CODE}
		AND     MAIN_CODE   = N'A009'
		AND     REF_CODE1   = #{S_USER_ID}
	</select>
	<select id="agj400ukrServiceImpl.selectMakeSale" parameterType="Map" resultType="rMap">
	    SELECT  MAKE_SALE
	    FROM    BSA210T  WITH(NOLOCK)
	    WHERE   COMP_CODE   = #{S_COMP_CODE}
	    AND     TREE_CODE   = #{DEPT_CODE}
    </select>
	<select id="agj400ukrServiceImpl.getDraftNo" parameterType="Map" resultType="rMap">
		DECLARE     @PAY_DRAFT_NO      NVARCHAR(20),
		            @REGDATE       NVARCHAR(8),
					@DEPT_ENGCD    NVARCHAR(10),
					@ERR_DEPT_ENGCD NVARCHAR(200)
		SET @ERR_DEPT_ENGCD = ''
		SET @REGDATE = CONVERT(NVARCHAR(8), GETDATE(), 112)
		
		SELECT @DEPT_ENGCD = ISNULL(DEPT_ENGCD, '') 
		  FROM BSA210T WITH (NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND TREE_CODE = #{DEPT_CODE} 
		
		EXEC SP_GetAutoNumComp #{S_COMP_CODE}, '01', 'AGJ400T', @DEPT_ENGCD, @REGDATE, '', @PAY_DRAFT_NO OUTPUT
		
		IF(@DEPT_ENGCD = '' ) 
		BEGIN 
			SET @ERR_DEPT_ENGCD = '부서영문코드를 등록해 주세요.'
		END
		SELECT @PAY_DRAFT_NO AS PAY_DRAFT_NO, @ERR_DEPT_ENGCD AS  ERR_DEPT_ENGCD
	</select>
	<update id="agj400ukrServiceImpl.insertMaster" parameterType="Map">
		
		INSERT INTO AGJ400T 
		(
			  COMP_CODE                               --법인
			, PAY_DRAFT_NO                            --지출결의번호
			, PAY_DATE                                --지출결의일
			, SLIP_DATE                                 --전표일
			, DRAFTER                                 --기안자
			, PAY_USER                                --사용자
			, DEPT_CODE                               --부서
			, DIV_CODE                                --사업장
			, TOT_AMT_I                               --총금액
			, TITLE                                   --제목
			, TITLE_DESC                              --지출내용
			, FILE_NUM								  --증빙서류
			, INSERT_DB_USER                          --
			, INSERT_DB_TIME                          --
			, UPDATE_DB_USER                          --
			, UPDATE_DB_TIME                          --
		) VALUES (
			  #{S_COMP_CODE}
			, #{PAY_DRAFT_NO}
			, #{PAY_DATE}
			, #{EX_DATE}
			, #{DRAFTER_PN}
			, #{PAY_USER_PN}
			, #{DEPT_CODE}
			, #{DIV_CODE}
			, #{TOT_AMT_I}
			, #{TITLE}
			, #{TITLE_DESC}
			, #{FILE_NUM}
			, #{S_USER_ID}
		    , GETDATE()
		    , #{S_USER_ID}
		    , GETDATE()
		)

	</update>
	<update id="agj400ukrServiceImpl.updateMaster" parameterType="Map">
		UPDATE AGJ400T 
		SET   PAY_DATE                       = #{PAY_DATE}
			, SLIP_DATE                      = #{EX_DATE}
			, DRAFTER                        = #{DRAFTER_PN}
			, PAY_USER                       = #{PAY_USER_PN}
			, DEPT_CODE                      = #{DEPT_CODE}
			, DIV_CODE                       = #{DIV_CODE}
			, TOT_AMT_I                      = #{TOT_AMT_I}
			, TITLE                          = #{TITLE}
			, TITLE_DESC                     = #{TITLE_DESC}
			, FILE_NUM                       = #{FILE_NUM}
			, UPDATE_DB_USER                 = #{S_USER_ID}
			, UPDATE_DB_TIME                 = GETDATE()
	   WHERE  COMP_CODE                      = #{S_COMP_CODE}
		 AND  PAY_DRAFT_NO                   = #{PAY_DRAFT_NO}
	</update>
	<delete id="agj400ukrServiceImpl.deleteMaster" parameterType="Map">
	  DELETE FROM AGJ400T 
	   WHERE  COMP_CODE                      = #{S_COMP_CODE}
		 AND  PAY_DRAFT_NO                   = #{PAY_DRAFT_NO}
	</delete>
	<select id="agj400ukrServiceImpl.getSeq" parameterType="Map" resultType="rMap">
		SELECT ISNULL(MAX(SEQ), 0) + 1 AS SEQ
		  FROM AGJ410T WITH (NOLOCK) 
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND PAY_DRAFT_NO = #{PAY_DRAFT_NO}
	</select> 	
	<update id="agj400ukrServiceImpl.insertDetail" parameterType="Map">
	   
		
		INSERT INTO AGJ410T 
		(
			  COMP_CODE                               --법인
			, PAY_DRAFT_NO                            --지출결의번호
			, SEQ                                     --순번
			, GUBUN                                   --지출구분(A178)
			, PAY_DIVI                                --결제방법(A172)
			, PAY_TYPE                                --지출유형(A177)
			, MAKE_SALE                               --제조판관구분(A006, 1:제조, 2:판관)
			, ACCNT                                   --계정코드
			, PROOF_DIVI                              --증빙구분(A173)
			, SUPPLY_AMT_I                            --공급가액
			, TAX_AMT_I                               --세액
			, ADD_REDUCE_AMT_I                        --증가/차감액
			, TOT_AMT_I                               --지급액
			, PEND_CODE                               --지급처구분코드
			, CUSTOM_CODE                             --거래처(공급처)코드
			, CUSTOM_NAME                             --거래처(공급처)명(코드가 없을 경우 입력)
			, COMPANY_NUM                             --거래처(공급처) 사업자번호(사용안함)
			, BE_CUSTOM_CODE                          --거래처(귀속)코드(사용안함)
			, PAY_CUSTOM_CODE                         --거래처(지급처)코드
			, REMARK                                  --적요
			, COST_POOL_CODE                          --Cost Pool(CBM600T)(사용안함)
			, EB_YN                                   --전자발행여부(A149)
			, CRDT_NUM                                --신용카드코드
			, APP_NUM                                 --현금영수증 승인번호
			, SAVE_CODE                               --통장코드(AFS100T.SAVE_CODE)
			, PJT_CODE                                --프로젝트코드
			, REASON_CODE                             --불공제사유
			, BILL_DATE                               --계산서일
			, SEND_DATE                               --지급예정일
			, DEPT_CODE                               --귀속부서
			, DEPT_NAME                               --귀속부서명
			, DIV_CODE                                --귀속사업장
			, BILL_USER                               --카드실사용자
			, REFER_NUM                               --법인카드승인참조번호/매입확정참조번호
			, ITEM_CODE                               --품목코드(사용안함)
			, QTY                                     --수량
			, PRICE                                   --단가
			, USE_DATE
			, BOOK_CODE
			, MONEY_UNIT
			, EXCHG_RATE_O
			, FOR_AMT_I
			, INSERT_DB_USER                          --
			, INSERT_DB_TIME                          --
			, UPDATE_DB_USER                          --
			, UPDATE_DB_TIME                          --
		) VALUES (
			  #{S_COMP_CODE}
			, #{PAY_DRAFT_NO}
			, #{SEQ}
			, #{GUBUN}
			, #{PAY_DIVI}
			, #{PAY_TYPE}
			, #{MAKE_SALE}
			, #{ACCNT}
			, #{PROOF_DIVI}
			, #{SUPPLY_AMT_I}
			, #{TAX_AMT_I}
			, #{ADD_REDUCE_AMT_I}
			, #{TOT_AMT_I}
			, #{PEND_CODE}
			, #{CUSTOM_CODE}
			, #{CUSTOM_NAME}
			, #{COMPANY_NUM}
			, #{BE_CUSTOM_CODE}
			, #{PAY_CUSTOM_CODE}
			, #{REMARK}
			, #{COST_POOL_CODE}
			, #{EB_YN}
			, #{CRDT_NUM}
			, #{APP_NUM}
			, #{SAVE_CODE}
			, #{PJT_CODE}
			, #{REASON_CODE}
			, #{BILL_DATE}
			, #{SEND_DATE}
			, #{DEPT_CODE}
			, #{DEPT_NAME}
			, #{DIV_CODE}
			, #{BILL_USER}
			, #{REFER_NUM}
			, #{ITEM_CODE}
			, #{QTY}
			, #{PRICE}
			, #{USE_DATE}
			, #{BOOK_CODE}
			, #{MONEY_UNIT}
			, #{EXCHG_RATE_O}
			, #{FOR_AMT_I}
			, #{S_USER_ID}
		    , GETDATE()
		    , #{S_USER_ID}
		    , GETDATE()
		)

	</update>
	<update id="agj400ukrServiceImpl.updateDetail" parameterType="Map">
		 UPDATE AGJ410T 
			SET   GUBUN                          = #{GUBUN}
				, PAY_DIVI                       = #{PAY_DIVI}
				, PAY_TYPE                       = #{PAY_TYPE}
				, MAKE_SALE                      = #{MAKE_SALE}
				, ACCNT                          = #{ACCNT}
				, PROOF_DIVI                     = #{PROOF_DIVI}
				, SUPPLY_AMT_I                   = #{SUPPLY_AMT_I}
				, TAX_AMT_I                      = #{TAX_AMT_I}
				, ADD_REDUCE_AMT_I               = #{ADD_REDUCE_AMT_I}
				, TOT_AMT_I                      = #{TOT_AMT_I}
				, PEND_CODE                      = #{PEND_CODE}
				, CUSTOM_CODE                    = #{CUSTOM_CODE}
				, CUSTOM_NAME                    = #{CUSTOM_NAME}
				, COMPANY_NUM                    = #{COMPANY_NUM}
				, BE_CUSTOM_CODE                 = #{BE_CUSTOM_CODE}
				, PAY_CUSTOM_CODE                = #{PAY_CUSTOM_CODE}
				, REMARK                         = #{REMARK}
				, COST_POOL_CODE                 = #{COST_POOL_CODE}
				, EB_YN                          = #{EB_YN}
				, CRDT_NUM                       = #{CRDT_NUM}
				, APP_NUM                        = #{APP_NUM}
				, SAVE_CODE                      = #{SAVE_CODE}
				, PJT_CODE                       = #{PJT_CODE}
				, REASON_CODE                    = #{REASON_CODE}
				, BILL_DATE                      = #{BILL_DATE}
				, SEND_DATE                      = #{SEND_DATE}
				, DEPT_CODE                      = #{DEPT_CODE}
				, DEPT_NAME                      = #{DEPT_NAME}
				, DIV_CODE                       = #{DIV_CODE}
				, BILL_USER                      = #{BILL_USER}
				, REFER_NUM                      = #{REFER_NUM}
				, ITEM_CODE                      = #{ITEM_CODE}
				, QTY                            = #{QTY}
				, PRICE                          = #{PRICE}			
				, USE_DATE						 = #{USE_DATE}
				, BOOK_CODE						 = #{BOOK_CODE}
				, MONEY_UNIT					 = #{MONEY_UNIT}
				, EXCHG_RATE_O					 = #{EXCHG_RATE_O}
				, FOR_AMT_I						 = #{FOR_AMT_I}
				, UPDATE_DB_USER                 = #{S_USER_ID}
				, UPDATE_DB_TIME                 = GETDATE()
		   WHERE  COMP_CODE                      = #{S_COMP_CODE}
			 AND  PAY_DRAFT_NO                   = #{PAY_DRAFT_NO}
			 AND  SEQ                            = #{SEQ}
	</update>
	<delete id="agj400ukrServiceImpl.deleteDetail" parameterType="Map">
	  DELETE FROM AGJ410T 
	   WHERE  COMP_CODE                      = #{S_COMP_CODE}
		 AND  PAY_DRAFT_NO                   = #{PAY_DRAFT_NO}
		 AND  SEQ                            = #{SEQ}
		 
	 IF NOT EXISTS (SELECT PAY_DRAFT_NO 
	                  FROM AGJ410T WITH (NOLOCK) 
	 				 WHERE COMP_CODE         = #{S_COMP_CODE}
		               AND PAY_DRAFT_NO      = #{PAY_DRAFT_NO}
	  )
	  BEGIN
	  	 DELETE FROM AGJ400T 
		   WHERE  COMP_CODE                      = #{S_COMP_CODE}
			 AND  PAY_DRAFT_NO                   = #{PAY_DRAFT_NO}
	  END
	</delete>
	<select id="agj400ukrServiceImpl.checkCnt" parameterType="Map" resultType="rMap">
	 SELECT  count(*) AS CNT
	   FROM  AGJ400T 
	   WHERE  COMP_CODE                      = #{S_COMP_CODE}
		 AND  PAY_DRAFT_NO                   = #{PAY_DRAFT_NO}
	</select>
	<select id="agj400ukrServiceImpl.selectCustBankInfo" parameterType="Map" resultType="rMap">
	 	SELECT TOP 1 
			     B.BOOK_CODE
			   , B.BOOK_NAME
			   , B.BANK_CODE
			   , C.CUSTOM_NAME      AS BANK_NAME
			   , B.BANKBOOK_NAME
			   , B.MAIN_BOOK_YN
			   , uniLITE.fnCipherDecrypt(B.BANKBOOK_NUM, '')  AS BANKBOOK_NUM
		  FROM BCM100T A WITH (NOLOCK)
		  LEFT JOIN BCM130T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                   AND B.CUSTOM_CODE = A.CUSTOM_CODE
		  LEFT JOIN	BCM100T	C WITH(NOLOCK)  ON C.COMP_CODE   = B.COMP_CODE
										   AND C.CUSTOM_CODE = B.BANK_CODE
								 		   AND C.CUSTOM_TYPE = '4'
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.CUSTOM_CODE = #{CUSTOM_CODE}
		 ORDER BY B.MAIN_BOOK_YN DESC, B.BOOK_CODE
	</select>
	<select id="agj400ukrServiceImpl.getSysDate" parameterType="Map" resultType="String">
		SELECT  CONVERT(NVARCHAR(8), GETDATE(), 112) AS INPUT_DATE
	</select>
	<update id="agj400ukrServiceImpl.runAutoSlip" parameterType="Map" statementType="CALLABLE">
		{call uniLITE.USP_ACCNT_AutoSlip80 (
			#{S_COMP_CODE, 		mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{PAY_DRAFT_NO, 	mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{KEY_VALUE, 		mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{S_USER_ID, 		mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{INPUT_DATE, 		mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LANG_TYPE, 	mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{CALL_PATH,		mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ERROR_DESC, 		mode=OUT,jdbcType=VARCHAR, javaType=java.lang.String},
			#{SLIP_KEY_VALUE, 	mode=OUT,jdbcType=VARCHAR, javaType=java.lang.String}
		)}
		
	</update> 
	<update id="agj400ukrServiceImpl.cancelSlip" parameterType="Map" statementType="CALLABLE">
		{call uniLITE.USP_ACCNT_AutoSlip80Cancel (
			#{S_COMP_CODE, 		mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{PAY_DRAFT_NO, 	mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{KEY_VALUE, 		mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{S_USER_ID, 		mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{INPUT_DATE, 		mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{LANG_TYPE, 		mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{CALL_PATH,		mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ERROR_DESC, 		mode=OUT,jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update> 
	<select id="agj400ukrServiceImpl.selectPrintMaster" parameterType="Map" resultType="rMap">
		SELECT A.PAY_DRAFT_NO                                                                   -- 지출결의번호
	         , uniLITE.fnGetUserdateComp(A.COMP_CODE, ISNULL(B.EX_DATE  ,'')) AS EX_DATE        -- 결의전표일
	         , CASE WHEN ISNULL(B.EX_NUM,0) = 0 
	                THEN ''
	                ELSE CONVERT(NVARCHAR,ISNULL(B.EX_NUM,0))
	            END                         AS EX_NUM                                           -- 결의전표번호
	         , ISNULL(D.DEPT_NAME,'')       AS DEPT_NAME                                        -- 작성부서
	         , ISNULL(D.NAME,'')            AS DRAFTER_NAME                                     -- 작성자
	         , uniLITE.fnGetUserdateComp(A.COMP_CODE, B.PAY_DATE) AS PAY_DATE                   -- 작성일자
	         , ISNULL(A.PAY_DIVI_10,0)      AS PAY_DIVI_10                                      -- 결제수단:송금(계산서정발행)
	         , ISNULL(A.PAY_DIVI_20,0)      AS PAY_DIVI_20                                      -- 결제수단:송금(계산서후발행)
	         , ISNULL(A.PAY_DIVI_30,0)      AS PAY_DIVI_30                                      -- 결제수단:송금(개인경비)
	         , ISNULL(A.PAY_DIVI_40,0)      AS PAY_DIVI_40                                      -- 결제수단:송금(외화)
	         , ISNULL(A.PAY_DIVI_50,0)      AS PAY_DIVI_50                                      -- 결제수단:송금(현금영스증)
	         , ISNULL(A.PAY_DIVI_60,0)      AS PAY_DIVI_60                                      -- 결제수단:송금(법인카드)
	         , ISNULL(A.PAY_DIVI_70,0)      AS PAY_DIVI_70                                      -- 결제수단:송금(현금)
             , ISNULL(A.PAY_DIVI_80,0)      AS PAY_DIVI_80                                      -- 결제수단:송금(지로)
             , ISNULL(A.PAY_DIVI_90,0)      AS PAY_DIVI_90                                      -- 결제수단:송금(자동이체)
	         , uniLITE.fnGetUserdateComp(A.COMP_CODE, ISNULL(A.SEND_DATE,'')) AS SEND_DATE      -- 지출요청일
	         , B.TITLE                      AS TITLE                                            -- 지출내용
	         , A.SUM_TOT_AMT_I              AS SUM_TOT_AMT_I                                    -- 사용금액(원화)
	         , A.MONEY_UNIT                 AS MONEY_UNIT                                       -- 화폐단위
	         , A.SUM_FOR_AMT_I              AS SUM_FOR_AMT_I                                    -- 사용금액(외화)
	         , A.BANK_NAME                  AS BANK_NAME                                        -- 송금계좌내역:입금은행
	         , A.BANKBOOK_NUM               AS BANKBOOK_NUM                                     -- 송금계좌내역:계좌번호
	         , A.BANKBOOK_NAME              AS BANKBOOK_NAME                                    -- 송금계좌내역:예금주
	      FROM (SELECT A.COMP_CODE
	                 , A.PAY_DRAFT_NO
	                 , SUM(CASE WHEN B.PAY_DIVI= '10' THEN 1 ELSE 0 END) AS PAY_DIVI_10
	                 , SUM(CASE WHEN B.PAY_DIVI= '20' THEN 1 ELSE 0 END) AS PAY_DIVI_20
	                 , SUM(CASE WHEN B.PAY_DIVI= '30' THEN 1 ELSE 0 END) AS PAY_DIVI_30
	                 , SUM(CASE WHEN B.PAY_DIVI= '40' THEN 1 ELSE 0 END) AS PAY_DIVI_40
	                 , SUM(CASE WHEN B.PAY_DIVI= '50' THEN 1 ELSE 0 END) AS PAY_DIVI_50
	                 , SUM(CASE WHEN B.PAY_DIVI= '60' THEN 1 ELSE 0 END) AS PAY_DIVI_60
	                 , SUM(CASE WHEN B.PAY_DIVI= '70' THEN 1 ELSE 0 END) AS PAY_DIVI_70
                     , SUM(CASE WHEN B.PAY_DIVI= '80' THEN 1 ELSE 0 END) AS PAY_DIVI_80
                     , SUM(CASE WHEN B.PAY_DIVI= '90' THEN 1 ELSE 0 END) AS PAY_DIVI_90
	                 , MIN(ISNULL(B.SEND_DATE,''))      AS SEND_DATE                                    -- 지출요청일
	                 , SUM(B.TOT_AMT_I)                 AS SUM_TOT_AMT_I                                -- 사용금액(원화)
	                 , CASE WHEN MAX(ISNULL(B.MONEY_UNIT,'')) IN ('','KRW')
	                        THEN ''
	                        ELSE MAX(ISNULL(B.MONEY_UNIT,''))
	                    END                             AS MONEY_UNIT                                   -- 화폐단위
	                 , SUM(ISNULL(B.FOR_AMT_I,0))       AS SUM_FOR_AMT_I                                -- 사용금액(외화)
	                 , MAX(ISNULL(G.CUSTOM_NAME  ,''))  AS BANK_NAME                                    -- 송금계좌내역:입금은행
	                 , MAX(uniLITE.fnCipherDecrypt(ISNULL(F.BANKBOOK_NUM ,''),'')) AS BANKBOOK_NUM      -- 송금계좌내역:계좌번호
	                 , MAX(ISNULL(F.BANKBOOK_NAME,''))  AS BANKBOOK_NAME                                -- 송금계좌내역:예금주
	              FROM            AGJ400T A WITH (NOLOCK)
	                   INNER JOIN AGJ410T B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                                     AND B.PAY_DRAFT_NO = A.PAY_DRAFT_NO
	                   LEFT  JOIN BCM130T F WITH (NOLOCK) ON F.COMP_CODE    = B.COMP_CODE
	                                                     AND F.CUSTOM_CODE  = B.CUSTOM_CODE
	                                                     AND F.BOOK_CODE    = B.BOOK_CODE
	                   LEFT  JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE    = F.COMP_CODE
	                                                     AND G.CUSTOM_CODE  = F.BANK_CODE
	             WHERE A.COMP_CODE    = #{S_COMP_CODE}
	               AND A.PAY_DRAFT_NO = #{PAY_DRAFT_NO}
	             GROUP BY A.COMP_CODE, A.PAY_DRAFT_NO) A
	           INNER JOIN AGJ400T B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                             AND B.PAY_DRAFT_NO = A.PAY_DRAFT_NO
	           LEFT  JOIN HUM100T D WITH (NOLOCK) ON D.COMP_CODE    = B.COMP_CODE
	                                             AND D.PERSON_NUMB  = B.DRAFTER
                                              
	</select> 	
	<select id="agj400ukrServiceImpl.selectPrintDetail" parameterType="Map" resultType="rMap">
		SELECT A.PAY_DRAFT_NO                                                                   -- 지출결의번호
	         , uniLITE.fnGetUserdateComp(A.COMP_CODE, ISNULL(B.USE_DATE ,'')) AS USE_DATE       -- 사용일자
	         , ISNULL(E.PJT_NAME,'')        AS PJT_NAME                                         -- 사업명(PJT명)
	         , ISNULL(C.TREE_NAME,'')       AS DEPT_NAME                                        -- 예산부서
	         , B.REMARK                     AS REMARK                                           -- 적요
	         , B.CUSTOM_NAME                AS CUSTOM_NAME                                      -- 거래처
	         , ISNULL(B.FOR_AMT_I,0)        AS FOR_AMT_I                                        -- 외화금액
	         , B.TOT_AMT_I                  AS TOT_AMT_I                                        -- 청구금액
	      FROM            AGJ400T A WITH (NOLOCK)
	           INNER JOIN AGJ410T B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                             AND B.PAY_DRAFT_NO = A.PAY_DRAFT_NO
	           LEFT  JOIN BSA210T C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
	                                             AND C.TYPE_LEVEL   = A.DIV_CODE
	                                             AND C.TREE_CODE    = A.DEPT_CODE
	           LEFT  JOIN BCM600T E WITH (NOLOCK) ON E.COMP_CODE    = B.COMP_CODE
	                                             AND E.PJT_CODE     = B.PJT_CODE
	     WHERE A.COMP_CODE = #{S_COMP_CODE}
	       AND A.PAY_DRAFT_NO = #{PAY_DRAFT_NO}
	     ORDER BY B.SEQ
	</select> 	
</mapper>