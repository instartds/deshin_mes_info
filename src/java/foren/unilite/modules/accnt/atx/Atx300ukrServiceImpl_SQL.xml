<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="atx300ukrServiceImpl">
	<select id="atx300ukrServiceImpl.selectListFirst" parameterType="Map" resultType="rMap">
	    /* atx300ukrServiceImpl.selectListFirst*/
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		SELECT ISNULL(A.AMT_1, 0)  AS AMT_1
		     , ISNULL(A.TAX_1, 0)  AS TAX_1 
		     , ISNULL(A.AMT_2, 0)  AS AMT_2
		     , ISNULL(A.TAX_2, 0)  AS TAX_2 
		     , ISNULL(A.AMT_3, 0)  AS AMT_3 
		     , ISNULL(A.AMT_4, 0)  AS AMT_4  
		     , ISNULL(A.AMT_26, 0) AS AMT_26 
		     , ISNULL(A.TAX_26, 0) AS TAX_26
		     , ISNULL(A.AMT_27, 0) AS AMT_27 
		     , ISNULL(A.TAX_27, 0) AS TAX_27
		     , ISNULL(A.AMT_28, 0) AS AMT_28 
		     , ISNULL(A.AMT_29, 0) AS AMT_29 
		     , ISNULL(A.AMT_5, 0)  AS AMT_5
		     , ISNULL(A.TAX_5, 0)  AS TAX_5 
		     , ISNULL(A.TAX_6, 0)  AS TAX_6
		     , ISNULL(A.AMT_8, 0)  AS AMT_8
		     , ISNULL(A.TAX_8, 0)  AS TAX_8 
		     , ISNULL(TAX_10_1, 0)  AS TAX_10_1
		     , ISNULL(A.AMT_9, 0)  AS AMT_9
		     , ISNULL(A.TAX_9, 0)  AS TAX_9 
		     , ISNULL(A.AMT_31, 0) AS AMT_31
		     , ISNULL(A.TAX_31, 0) AS TAX_31 
		     , ISNULL(A.AMT_32, 0) AS AMT_32 
		     , ISNULL(A.TAX_32, 0) AS TAX_32
		     , ISNULL(A.AMT_33, 0) AS AMT_33
		     , ISNULL(A.TAX_33, 0) AS TAX_33 
		     , ISNULL(A.TAX_34, 0) AS TAX_34 
		     , ISNULL(A.TAX_35, 0) AS TAX_35 
		     , ISNULL(A.AMT_10, 0) AS AMT_10
		     , ISNULL(A.TAX_10, 0) AS TAX_10 
		     , ISNULL(A.AMT_37, 0) AS AMT_37
		     , ISNULL(A.TAX_37, 0) AS TAX_37 
		     , ISNULL(A.AMT_38, 0) AS AMT_38
		     , ISNULL(A.TAX_38, 0) AS TAX_38 
		     , ISNULL(A.AMT_39, 0) AS AMT_39
		     , ISNULL(A.TAX_39, 0) AS TAX_39 
		     , ISNULL(A.PAY_TAX, 0) AS PAY_TAX 
		     , ISNULL(A.AMT_14, 0) AS AMT_14
		     , ISNULL(A.TAX_14, 0) AS TAX_14 
		     , ISNULL(A.TAX_41, 0) AS TAX_41 
		     , ISNULL(A.TAX_42, 0) AS TAX_42 
		     , ISNULL(A.TAX_15, 0) AS TAX_15 
		     , ISNULL(A.TAX_16_46, 0) AS TAX_16_46 
		     , ISNULL(A.TAX_16_47, 0) AS TAX_16_47 
		     , ISNULL(A.TAX_16_48, 0) AS TAX_16_48 
		     , ISNULL(A.TAX_17, 0) AS TAX_17 
		     , ISNULL(A.TAX_18, 0) AS TAX_18 
		     , ISNULL(A.AMT_44, 0) AS AMT_44
		     , ISNULL(A.TAX_44, 0) AS TAX_44 
		     , ISNULL(A.AMT_45, 0) AS AMT_45
		     , ISNULL(A.TAX_45, 0) AS TAX_45 
		     , ISNULL(A.AMT_46, 0) AS AMT_46
		     , ISNULL(A.TAX_46, 0) AS TAX_46 
		     , ISNULL(A.AMT_47, 0) AS AMT_47 
		     , ISNULL(A.TAX_47, 0) AS TAX_47
		     , ISNULL(A.AMT_48, 0) AS AMT_48 
		     , ISNULL(A.TAX_48, 0) AS TAX_48
		     , ISNULL(A.DIVI, '1')        AS DIVI 
	
		     , ISNULL(A.BANK_CODE, '')    AS BUSINESS_BANK_CODE	--컬럼명 확인
		     , ISNULL(B.CODE_NAME,'')     AS BUSINESS_BANK_NAME	--name추가된 이유가 있는지 확인
		     , ISNULL(A.BRANCH_NAME, '')  AS BRANCH_NAME
	
			<if test="@foren.Ognl@isEmpty(type)">
		     , ISNULL(A.BANK_ACCOUNT,'')  AS BANK_ACCOUNT		--암호화 확인 
			</if>
			<if test="@foren.Ognl@isNotEmpty(type)">
		     , uniLITE.fnCipherDecrypt(A.BANK_ACCOUNT, '')  AS BANK_ACCOUNT		--암호화 확인 
			</if>
		     , ISNULL(A.CLOSE_DATE, '')   AS CLOSE_DATE
		     , ISNULL(A.CLOSE_REASON, '') AS CLOSE_REASON 
		     , ISNULL(A.COMP_TYPE1, '')   AS COMP_TYPE1
		     , ISNULL(A.COMP_CLASS1, '')  AS COMP_CLASS1 
		     , ISNULL(A.COMP_CODE1, '')   AS COMP_CODE1
		     , ISNULL(A.COMP_AMT1, 0)     AS COMP_AMT1 
		     , ISNULL(A.COMP_TYPE2, '')   AS COMP_TYPE2
		     , ISNULL(A.COMP_CLASS2, '')  AS COMP_CLASS2 
		     , ISNULL(A.COMP_CODE2, '')   AS COMP_CODE2
		     , ISNULL(A.COMP_AMT2, 0)     AS COMP_AMT2 
		     , ISNULL(A.COMP_TYPE3, '')   AS COMP_TYPE3
		     , ISNULL(A.COMP_CLASS3, '')  AS COMP_CLASS3 
		     , ISNULL(A.COMP_CODE3, '')   AS COMP_CODE3
		     , ISNULL(A.COMP_AMT3, 0)     AS COMP_AMT3 
		     , ISNULL(A.COMP_TYPE4, '')   AS COMP_TYPE4
		     , ISNULL(A.COMP_CLASS4, '')  AS COMP_CLASS4 
		     , ISNULL(A.COMP_CODE4, '')   AS COMP_CODE4
		     , ISNULL(A.COMP_AMT4, 0)     AS COMP_AMT4 
		     , ISNULL(A.FREE_TYPE1, '')   AS FREE_TYPE1
		     , ISNULL(A.FREE_CLASS1, '')  AS FREE_CLASS1 
		     , ISNULL(A.FREE_CODE1, '')   AS FREE_CODE1
		     , ISNULL(A.FREE_AMT1, 0)     AS FREE_AMT1 
		     , ISNULL(A.FREE_TYPE2, '')   AS FREE_TYPE2
		     , ISNULL(A.FREE_CLASS2, '')  AS FREE_CLASS2 
		     , ISNULL(A.FREE_CODE2, '')   AS FREE_CODE2
		     , ISNULL(A.FREE_AMT2, 0)     AS FREE_AMT2 
		     , ISNULL(A.AMT_53, 0)        AS AMT_53 
		     , ISNULL(A.AMT_54, 0)        AS AMT_54 
		     , ISNULL(A.DECLARE_DATE,'')  AS DECLARE_DATE 
		     , ISNULL(A.AMT_10_32, 0)     AS AMT_10_32
		     , ISNULL(A.TAX_10_32, 0)     AS TAX_10_32 
		     , ISNULL(A.AMT_10_33, 0)     AS AMT_10_33
		     , ISNULL(A.TAX_10_33, 0)     AS TAX_10_33 
		     , ISNULL(A.AMT_TOT_10_34, 0) AS AMT_TOT_10_34
		     , ISNULL(A.TAX_TOT_10_34, 0) AS TAX_TOT_10_34 
		     , ISNULL(A.PRE_RE_CANCEL, '0') AS PRE_RE_CANCEL    
		     , ISNULL(A.TAX_55, 0)        AS TAX_55 
		     , ISNULL(A.AMT_56, 0)        AS AMT_56
		     , ISNULL(A.TAX_56, 0)        AS TAX_56 
		     , ISNULL(A.AMT_57, 0)        AS AMT_57
		     , ISNULL(A.TAX_57, 0)        AS TAX_57 
		     , ISNULL(A.AMT_58, 0)        AS AMT_58
		     , ISNULL(A.TAX_58, 0)        AS TAX_58
		     , ISNULL(A.TAX_59, 0)        AS TAX_59
		     , ISNULL(A.AMT_60, 0)        AS AMT_60
		     , ISNULL(A.TAX_60, 0)        AS TAX_60
		     , ISNULL(A.AMT_61, 0)        AS AMT_61
		     , ISNULL(A.TAX_61, 0)        AS TAX_61
		     , ISNULL(A.AMT_62, 0)        AS AMT_62
		     , ISNULL(A.TAX_62, 0)        AS TAX_62
		     , ISNULL(A.AMT_63, 0)        AS AMT_63
		     , ISNULL(A.TAX_63, 0)        AS TAX_63
		     , ISNULL(A.TAX_64, 0)        AS TAX_64
		     , ISNULL(A.AMT_65, 0)        AS AMT_65
		     , ISNULL(A.TAX_65, 0)        AS TAX_65
		     , ISNULL(A.AMT_66, 0)        AS AMT_66
		     , ISNULL(A.TAX_66, 0)        AS TAX_66
		     , ISNULL(A.AMT_67, 0)        AS AMT_67
		     , ISNULL(A.TAX_67, 0)        AS TAX_67
		     , ISNULL(A.TAX_68, 0)        AS TAX_68
		     , ISNULL(A.AMT_69, 0)        AS AMT_69
		     , ISNULL(A.TAX_69, 0)        AS TAX_69
		     , ISNULL(A.AMT_70, 0)        AS AMT_70
		     , ISNULL(A.TAX_70, 0)        AS TAX_70
		     , ISNULL(A.AMT_71, 0)        AS AMT_71
		     , ISNULL(A.TAX_71, 0)        AS TAX_71
		     , ISNULL(A.AMT_72, 0)        AS AMT_72
		     , ISNULL(A.TAX_72, 0)        AS TAX_72
		     , ISNULL(A.AMT_73, 0)        AS AMT_73
		     , ISNULL(A.TAX_73, 0)        AS TAX_73
		     , ISNULL(A.AMT_74, 0)        AS AMT_74
		     , ISNULL(A.TAX_74, 0)        AS TAX_74
		     , ISNULL(A.AMT_75, 0)        AS AMT_75
		     , ISNULL(A.TAX_75, 0)        AS TAX_75
		     , ISNULL(A.AMT_76, 0)        AS AMT_76
		     , ISNULL(A.TAX_76, 0)        AS TAX_76
		     , ISNULL(A.TAX_23, 0)        AS TAX_23
		     , ISNULL(A.TAX_77, 0)        AS TAX_77
		     , ISNULL(A.TAX_78, 0)        AS TAX_78
		     , ISNULL(A.TAX_14_47, 0)     AS TAX_14_47
		     , ISNULL(A.FREE_TYPE3, '')   AS FREE_TYPE3
		     , ISNULL(A.FREE_CLASS3, '')  AS FREE_CLASS3 
		     , ISNULL(A.FREE_CODE3, '')   AS FREE_CODE3
		     , ISNULL(A.FREE_AMT3, 0)     AS FREE_AMT3
	
		     , ISNULL(A.TAX_TOT_20,0)     AS TAX_TOT_20		--어디에 추가된 필드인지
		     , 'U' AS SAVE_FLAG								--어디에 추가된 필드인지
		     
		     , ISNULL(A.AMT_TOT_7, 0)        AS AMT_TOT_7
			 , ISNULL(A.TAX_TOT_7, 0)        AS TAX_TOT_7
			 , ISNULL(A.AMT_TOT_11, 0)        AS AMT_TOT_11
			 , ISNULL(A.TAX_TOT_11, 0)        AS TAX_TOT_11
			 , ISNULL(A.AMT_TOT_12, 0)        AS AMT_TOT_12
			 , ISNULL(A.TAX_TOT_12, 0)        AS TAX_TOT_12
			 , ISNULL(A.AMT_TOT_13, 0)        AS AMT_TOT_13
			 , ISNULL(A.TAX_TOT_13, 0)        AS TAX_TOT_13
			 , ISNULL(A.TAX_TOT_16, 0)        AS TAX_TOT_16
			 , ISNULL(A.TAX_TOT_19, 0)        AS TAX_TOT_19
			 , ISNULL(A.AMT_TOT_52, 0)        AS AMT_TOT_52
			 
			 -- 20210526 추가
			 , CASE WHEN (((ISNULL(A.AMT_3, 0) + ISNULL(A.AMT_4, 0)) &lt;&gt; 0 )
							AND (ISNULL(A.ZERO_TAX_RECIP1  ,'') &lt;&gt; ''))   THEN 'Y'
					ELSE 'N'
					END                       AS ZERO_TAX_YN

			 , ISNULL(A.ZERO_TAX_RECIP1  ,'') AS ZERO_TAX_RECIP1
			 , ISNULL(D.REF_CODE1        ,'') AS ZERO_TAX_RECIP_SH1
			 , ISNULL(A.ZERO_TAX_CLASS1  ,'') AS ZERO_TAX_CLASS1
			 , ISNULL(A.ZERO_TAX_CODE1   ,'') AS ZERO_TAX_CODE1
			 , ISNULL(A.ZERO_TAX_NATION1 ,'') AS ZERO_TAX_NATION1
			 , ISNULL(C1.CODE_NAME       ,'') AS ZERO_TAX_NATION_NAME1

			 , ISNULL(A.ZERO_TAX_RECIP2  ,'') AS ZERO_TAX_RECIP2
			 , ISNULL(A.ZERO_TAX_CLASS2  ,'') AS ZERO_TAX_CLASS2
			 , ISNULL(A.ZERO_TAX_CODE2   ,'') AS ZERO_TAX_CODE2
			 , ISNULL(A.ZERO_TAX_NATION2 ,'') AS ZERO_TAX_NATION2
			 , ISNULL(C2.CODE_NAME       ,'') AS ZERO_TAX_NATION_NAME2

			 , ISNULL(A.ZERO_TAX_RECIP3  ,'') AS ZERO_TAX_RECIP3
			 , ISNULL(A.ZERO_TAX_CLASS3  ,'') AS ZERO_TAX_CLASS3
			 , ISNULL(A.ZERO_TAX_CODE3   ,'') AS ZERO_TAX_CODE3
			 , ISNULL(A.ZERO_TAX_NATION3 ,'') AS ZERO_TAX_NATION3
			 , ISNULL(C3.CODE_NAME       ,'') AS ZERO_TAX_NATION_NAME3
			 , (SELECT SAFFER_TAX_NM
			      FROM BOR120T WITH(NOLOCK)
			     WHERE COMP_CODE = #{S_COMP_CODE}
			       AND DIV_CODE  = #{txtBillDivCode}) AS SAFFER_TAX_NM
		  FROM           ATX300T A  WITH (NOLOCK) 
			   LEFT JOIN BSA100T B  WITH (NOLOCK)  ON B.COMP_CODE  = A.COMP_CODE
												  AND B.MAIN_CODE  = 'A029'
												  AND B.SUB_CODE   = A.BANK_CODE
			   LEFT JOIN BSA100T C1  WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
												  AND C1.MAIN_CODE = 'B012'
												  AND C1.SUB_CODE  = A.ZERO_TAX_NATION1
			   LEFT JOIN BSA100T C2  WITH (NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
												  AND C2.MAIN_CODE = 'B012'
												  AND C2.SUB_CODE  = A.ZERO_TAX_NATION2
			   LEFT JOIN BSA100T C3  WITH (NOLOCK) ON C3.COMP_CODE = A.COMP_CODE
												  AND C3.MAIN_CODE = 'B012'
												  AND C3.SUB_CODE  = A.ZERO_TAX_NATION3
			   LEFT JOIN BSA100T D  WITH (NOLOCK)  ON D.COMP_CODE  = A.COMP_CODE
												  AND D.MAIN_CODE  = 'A246'
												  AND D.SUB_CODE   = A.ZERO_TAX_RECIP1
		 WHERE A.COMP_CODE     = #{S_COMP_CODE}
		   AND A.FR_PUB_DATE   = #{txtFrPubDate}
		   AND A.TO_PUB_DATE   = #{txtToPubDate}
		   AND A.BILL_DIV_CODE = #{txtBillDivCode}
		 ORDER BY A.BILL_DIV_CODE 
	</select>
	                    
	<select id="atx300ukrServiceImpl.selectListSecond" parameterType="Map" resultType="rMap">
	    /* atx300ukr.Catx300ukr[fnatx300q] ATX100T Query2*/
		DECLARE @DED_AMT          NUMERIC(30,6)  /* 전자세금계산서 건당 공제금액 */
		      , @DED_AMT_YEAR     NUMERIC(30,6)  /* 전자세금계산서 연간공제한도액*/
		      , @ELECDECLARE_FLAG VARCHAR(1)     /* 전자신고세액공제/불공제구분   */
		      , @ELECDEDUCT_TAX   NUMERIC(30,6)  /* 전자세금계산서 신고세액공제 */
		      , @DEDUCT_TAX       NUMERIC(30,6)  /* 전자세금계산서 공제가능세액 */
		      , @TAXSUM_FLAG      VARCHAR(1)     /* 과세매출세액계산구분     */
		      , @IM_DED_AMT       NUMERIC(30,6)  /* 원산지확인서 건당 공제금액 */
		      , @IM_DED_AMT_YEAR  NUMERIC(30,6)  /* 원산지확인서 연간공제한도액 */
		      , @IM_DEDUCT_TAX    NUMERIC(30,6)  /* 원산지확인서 공제가능세액  */
		
		SET @ELECDECLARE_FLAG = #{rdoElectric}
		SET @TAXSUM_FLAG      = #{rdoSum}
		
		 /* 1. 건당 공제금액 및 연간공제한도액*/
		 SELECT @DED_AMT         = MAX(CASE WHEN SUB_CODE = '1' THEN ISNULL(CODE_NAME, 0) ELSE 0 END)
		      , @DED_AMT_YEAR    = MAX(CASE WHEN SUB_CODE = '2' THEN ISNULL(CODE_NAME, 0) ELSE 0 END)
		      , @IM_DED_AMT      = MAX(CASE WHEN SUB_CODE = '3' THEN ISNULL(CODE_NAME, 0) ELSE 0 END)
		      , @IM_DED_AMT_YEAR = MAX(CASE WHEN SUB_CODE = '4' THEN ISNULL(CODE_NAME, 0) ELSE 0 END)
		   FROM BSA100T  WITH (NOLOCK)
		  WHERE COMP_CODE = #{S_COMP_CODE}
		    AND MAIN_CODE = 'A152'
		    AND SUB_CODE  != '$'
		
		/* 전자세금계산서 공제세액 */
		SELECT @ELECDEDUCT_TAX = CASE WHEN @ELECDECLARE_FLAG = 'A' THEN 10000 ELSE 0 END
		SELECT @DEDUCT_TAX     = 0
		
		 /* 3. 원산지확인서 공제가능세액 조회*/
		SELECT @IM_DEDUCT_TAX = CASE WHEN (COUNT(1) * @IM_DED_AMT) &gt; (@IM_DED_AMT_YEAR - MAX(ISNULL(B.TAX_68, 0))) THEN (@IM_DED_AMT_YEAR - MAX(ISNULL(B.TAX_68, 0)))
		                             WHEN (COUNT(1) * @IM_DED_AMT) &lt; (@IM_DED_AMT_YEAR - MAX(ISNULL(B.TAX_68, 0))) THEN (COUNT(1) * @IM_DED_AMT)
		                             ELSE (COUNT(1) * @IM_DED_AMT)
		                         END
		  FROM
		                (SELECT COMP_CODE, BILL_DIV_CODE, SEQ_NO
		                   FROM ATX510T WITH (NOLOCK)
		                  WHERE COMP_CODE      = #{S_COMP_CODE}
		                  
		                <if test="txtBillDivCode != &quot;00&quot;">      
		                    AND BILL_DIV_CODE  = #{txtBillDivCode}
		                </if>
		               
		                <if test="txtBillDivCode == &quot;00&quot;">    
		                    <if test="@foren.Ognl@isNotEmpty(txtBillDivCode_sub)">
		                        AND BILL_DIV_CODE IN (SELECT BILL_DIV_CODE FROM BOR120T WHERE COMP_CODE      = #{S_COMP_CODE})       
		                    </if>
		                </if>
		                    
		                    AND FR_PUB_DATE    = #{txtFrPubDate}
		                    AND TO_PUB_DATE    = #{txtToPubDate}
		                  GROUP BY COMP_CODE, BILL_DIV_CODE, SEQ_NO
		                ) A
		      LEFT JOIN (
		                 SELECT COMP_CODE, BILL_DIV_CODE, SUM(ISNULL(TAX_68, 0)) AS TAX_68
		                   FROM ATX300T WITH (NOLOCK)
		                  WHERE COMP_CODE      = #{S_COMP_CODE}
		                <if test="txtBillDivCode != &quot;00&quot;">      
		                    AND BILL_DIV_CODE  = #{txtBillDivCode}
		                </if>
		               
		                <if test="txtBillDivCode == &quot;00&quot;">    
		                    <if test="@foren.Ognl@isNotEmpty(txtBillDivCode_sub)">
		                        AND BILL_DIV_CODE IN (SELECT BILL_DIV_CODE FROM BOR120T WHERE COMP_CODE      = #{S_COMP_CODE}) 
		                    </if>
		                </if>
		                    AND LEFT(FR_PUB_DATE, 4) = LEFT(#{txtFrPubDate}, 4)
		                    AND FR_PUB_DATE          &lt; #{txtFrPubDate}
		                  GROUP BY COMP_CODE, BILL_DIV_CODE
		                ) B                     ON B.COMP_CODE     = A.COMP_CODE
		                                       AND B.BILL_DIV_CODE = A.BILL_DIV_CODE
		 WHERE 1=1
		 GROUP BY B.TAX_68
		
		-- 4. 부가세신고서 조회
		SELECT ISNULL(AMT_1, 0) AS AMT_1
		     , ISNULL(TAX_1, 0) AS TAX_1 
		     , ISNULL(AMT_2, 0) AS AMT_2
		     , ISNULL(TAX_2, 0) AS TAX_2 
		     , ISNULL(AMT_3, 0) AS AMT_3 
		     , ISNULL(AMT_4, 0) AS AMT_4 
		     , 0 AS AMT_26
		     , 0 AS TAX_26 
		     , 0 AS AMT_27
		     , 0 AS TAX_27 
		     , 0 AS AMT_28 
		     , 0 AS AMT_29 
		     , 0 AS AMT_5
		     , 0 AS TAX_5 
		     , ISNULL(TAX_6, 0) AS TAX_6 
		     , ISNULL(AMT_8, 0) AS AMT_8
		     , ISNULL(TAX_8, 0) AS TAX_8 
		     , ISNULL(TAX_10_1, 0) AS TAX_10_1
		     , ISNULL(AMT_9, 0) AS AMT_9
		     , ISNULL(TAX_9, 0) AS TAX_9
		     , ISNULL(AMT_31, 0) AS AMT_31
		     , ISNULL(TAX_31, 0) AS TAX_31 
		     , ISNULL(AMT_32, 0) AS AMT_32
		     , ISNULL(TAX_32, 0) AS TAX_32 
		     , 0 AS AMT_33
		     , 0 AS TAX_33 
		     , 0 AS TAX_34 
		     , ISNULL(TAX_35, 0) AS TAX_35 
		     , 0 AS AMT_10
		     , 0 AS TAX_10 
		     , ISNULL(AMT_37, 0) AS AMT_37
		     , ISNULL(TAX_37, 0) AS TAX_37 
		     , ISNULL(AMT_38, 0) AS AMT_38
		     , ISNULL(TAX_38, 0) AS TAX_38 
		     , 0 AS AMT_39
		     , 0 AS TAX_39 
		     , 0 AS PAY_TAX 
		     , 0 AS AMT_14
		     , 0 AS TAX_14 
		     , 0 AS TAX_41
		     , 0 AS TAX_42 
		     , (ISNULL(@DEDUCT_TAX, 0) + ISNULL(@IM_DEDUCT_TAX, 0)) AS TAX_15
		     --, ISNULL(@ELECDEDUCT_TAX,0) AS TAX_16_46 
		     , 0 AS TAX_16_46
		     , 0 AS TAX_16_47 
		     , 0 AS TAX_16_48 
		     , 0 AS TAX_17 
		     , 0 AS TAX_18 
		     , 0 AS AMT_44
		     , 0 AS TAX_44 
		     , 0 AS AMT_45
		     , 0 AS TAX_45 
		     , 0 AS AMT_46
		     , 0 AS TAX_46 
		     , 0 AS AMT_47
		     , 0 AS TAX_47 
		     , 0 AS AMT_48
		     , 0 AS TAX_48 
		     , '1' AS DIVI 
		     , ''  AS CLOSE_DATE
		     , ''  AS CLOSE_REASON 
		     , ISNULL(COMP_TYPE1,'')  AS COMP_TYPE1 
		     , ISNULL(COMP_CLASS1,'') AS COMP_CLASS1 
		     , ISNULL(COMP_CODE1,'')  AS COMP_CODE1 
		     , (ISNULL(AMT_1,0)  + ISNULL(AMT_2,0)  + ISNULL(AMT_3,0) + ISNULL(AMT_4,0) + 
		        ISNULL(AMT_57,0) + ISNULL(AMT_62,0) - ISNULL(COMP_AMT4,0)) AS COMP_AMT1
		     , ISNULL(COMP_TYPE2,'')  AS COMP_TYPE2 
		     , ISNULL(COMP_CLASS2,'') AS COMP_CLASS2 
		     , ISNULL(COMP_CODE2,'')  AS COMP_CODE2 
		     , 0                      AS COMP_AMT2 
		     , ISNULL(COMP_TYPE3,'')  AS COMP_TYPE3 
		     , ISNULL(COMP_CLASS3,'') AS COMP_CLASS3 
		     , ISNULL(COMP_CODE3,'')  AS COMP_CODE3 
		     , 0                      AS COMP_AMT3 
		     , ISNULL(COMP_TYPE4,'')  AS COMP_TYPE4 
		     , ISNULL(COMP_CLASS4,'') AS COMP_CLASS4 
		     , ISNULL(COMP_CODE4,'')  AS COMP_CODE4 
		     , ISNULL(COMP_AMT4, 0)   AS COMP_AMT4 
		     , ISNULL(FREE_TYPE1,'')  AS FREE_TYPE1 
		     , ISNULL(FREE_CLASS1,'') AS FREE_CLASS1 
		     , ISNULL(FREE_CODE1,'')  AS FREE_CODE1 
		     , ISNULL(FREE_AMT1, 0)   AS FREE_AMT1 
		     , ISNULL(FREE_TYPE2,'')  AS FREE_TYPE2 
		     , ISNULL(FREE_CLASS2,'') AS FREE_CLASS2 
		     , ISNULL(FREE_CODE2,'')  AS FREE_CODE2 
		     , 0 AS FREE_AMT2 
		     , ISNULL(AMT_53, 0) AS AMT_53 
		     , ISNULL(AMT_54, 0) AS AMT_54  
		     , '' AS DECLARE_DATE 
		     , 0  AS AMT_10_32
		     , 0  AS TAX_10_32 
		     , 0  AS AMT_10_33
		     , 0  AS TAX_10_33 
		     , 0  AS AMT_TOT_10_34
		     , 0  AS TAX_TOT_10_34 
		     , '0' AS PRE_RE_CANCEL  
		     , 0  AS TAX_55 
		     , 0  AS AMT_56
		     , 0  AS TAX_56 
		     , ISNULL(AMT_57 ,0) AS AMT_57
		     , ISNULL(TAX_57 ,0) AS TAX_57 
		     , ISNULL(AMT_58 ,0) AS AMT_58
		     , ISNULL(TAX_58 ,0) AS TAX_58
		     , 0  AS TAX_59 
		     , 0  AS AMT_60
		     , 0  AS TAX_60 
		     , 0  AS AMT_61
		     , 0  AS TAX_61 
		     , ISNULL(AMT_62 ,0) AS AMT_62
		     , ISNULL(TAX_62 ,0) AS TAX_62
		     , ISNULL(AMT_63 ,0) AS AMT_63
		     , ISNULL(TAX_63 ,0) AS TAX_63
		     , ISNULL(@DEDUCT_TAX, 0) AS TAX_64
		     , 0  AS AMT_65
		     , 0  AS TAX_65
		     , 0  AS AMT_66
		     , 0  AS TAX_66
		     , 0  AS AMT_67
		     , 0  AS TAX_67
		     , ISNULL(@IM_DEDUCT_TAX, 0) AS TAX_68  --원산지확인서 발급세액
		     , 0  AS AMT_69
		     , 0  AS TAX_69
		     , 0  AS AMT_70
		     , 0  AS TAX_70
		     , 0  AS AMT_71
		     , 0  AS TAX_71
		     , 0  AS AMT_72
		     , 0  AS TAX_72
		     , 0  AS AMT_73
		     , 0  AS TAX_73
		     , 0  AS AMT_74
		     , 0  AS TAX_74
		     , 0  AS AMT_75
		     , 0  AS TAX_75
		     , 0  AS AMT_76
		     , 0  AS TAX_76
		     , 0  AS TAX_23
		     , 0  AS TAX_77
		     , 0  AS TAX_78
		     , 0  AS TAX_14_47
		     , ISNULL(FREE_TYPE3,'')    AS FREE_TYPE3 
		     , ISNULL(FREE_CLASS3,'')   AS FREE_CLASS3 
		     , ISNULL(FREE_CODE3,'')    AS FREE_CODE3 
		     , ISNULL(FREE_AMT3, 0)     AS FREE_AMT3
		     , ISNULL(BANK_CODE, '')    AS BUSINESS_BANK_CODE
		     , ISNULL(BRANCH_NAME, '')  AS BRANCH_NAME
		     , ISNULL(BANK_ACCOUNT, '') AS BANK_ACCOUNT
		        
		     , 'N' AS SAVE_FLAG
		     
		  FROM (SELECT SUM(ISNULL(A.AMT_1,0))  AS AMT_1     
		             , CASE WHEN @TAXSUM_FLAG='1' THEN SUM(ISNULL(A.TAX_1,0)) ELSE FLOOR(SUM(ISNULL(A.AMT_1,0)) * 10/100) END AS TAX_1
		             , SUM(ISNULL(A.AMT_2,0))  AS AMT_2
		             , CASE WHEN @TAXSUM_FLAG='1' THEN SUM(ISNULL(A.TAX_2,0)) ELSE FLOOR(SUM(ISNULL(A.AMT_2,0)) * 10/100) END AS TAX_2
		             , SUM(ISNULL(A.AMT_3,0))  AS AMT_3
		             , SUM(ISNULL(A.AMT_4,0))  AS AMT_4
		             , MAX(ISNULL(C1.TAX_AMT_I, 0))  AS TAX_6
		             , SUM(ISNULL(A.AMT_8,0))  AS AMT_8
		             , SUM(ISNULL(A.TAX_8,0))  AS TAX_8
		             , SUM(ISNULL(A.TAX_10_1,0))	AS TAX_10_1
		             , SUM(ISNULL(A.AMT_9,0))  AS AMT_9
		             , SUM(ISNULL(A.TAX_9,0))  AS TAX_9
		             , SUM(ISNULL(A.AMT_31,0)) AS AMT_31
		             , SUM(ISNULL(A.TAX_31,0)) AS TAX_31
		             , MAX(ISNULL(B.BUY_AMT_TOT, 0)) AS AMT_32
		             , MAX(ISNULL(B.TAX_TOT, 0))     AS TAX_32
		             , MAX(ISNULL(C2.TAX_AMT_I, 0))  AS TAX_35
                     , MAX(ISNULL(D3.SUPPLY_AMT_I, 0)) AS AMT_37
                     , MAX(ISNULL(D3.TAX_AMT_I, 0))    AS TAX_37
		             , CASE WHEN (RIGHT(M1.REF_CODE1, 4) = RIGHT(#{txtToPubDate}, 4) OR RIGHT(M1.REF_CODE2, 4) = RIGHT(#{txtToPubDate}, 4))
		                         THEN MAX(ISNULL(D2.DEDUCT_AMT, 0) * 10)
		                    ELSE MAX(ISNULL(D1.NONTAX_AMT, 0) * 10)
		                END                    AS AMT_38
		             , CASE WHEN (RIGHT(M1.REF_CODE1, 4) = RIGHT(#{txtToPubDate}, 4) OR RIGHT(M1.REF_CODE2, 4) = RIGHT(#{txtToPubDate}, 4))
		                         THEN MAX(ISNULL(D2.DEDUCT_AMT, 0))
		                    ELSE MAX(ISNULL(D1.NONTAX_AMT, 0))
		                END                    AS TAX_38
		             , SUM(ISNULL(A.AMT_53,0)) AS AMT_53
		             , SUM(ISNULL(A.AMT_54,0)) AS AMT_54
		             , SUM(ISNULL(A.AMT_57,0)) AS AMT_57
		             , CASE WHEN @TAXSUM_FLAG='1' THEN SUM(ISNULL(A.TAX_57,0)) ELSE FLOOR(SUM(ISNULL(A.AMT_57,0)) * 10/100) END AS TAX_57
		             , SUM(ISNULL(A.AMT_58,0)) AS AMT_58
		             , SUM(ISNULL(A.TAX_58,0)) AS TAX_58
		             , CASE WHEN @TAXSUM_FLAG='1' THEN SUM(ISNULL(A.AMT_62,0)) ELSE FLOOR(SUM(ISNULL(A.AMT_62,0)+ISNULL(A.TAX_62,0)) / 1.1) END AS AMT_62       -- 공급가액기준 : 신용카드.현금영수증발행분 총액 / 1,1
		             , CASE WHEN @TAXSUM_FLAG='1' THEN SUM(ISNULL(A.TAX_62,0)) ELSE SUM(ISNULL(A.AMT_62,0)+ISNULL(A.TAX_62,0)) - FLOOR(SUM(ISNULL(A.AMT_62,0)+ISNULL(A.TAX_62,0)) / 1.1) END AS TAX_62  -- 공급가액기준 : 세액 = (총액 - 1.1로 나눈 공급가액)
		             , SUM(ISNULL(A.AMT_63,0)) AS AMT_63
		             , SUM(ISNULL(A.TAX_63,0)) AS TAX_63
		             , SUM(ISNULL(A.COMP_AMT4,0)) AS COMP_AMT4
		             , SUM(ISNULL(A.FREE_AMT1,0)) AS FREE_AMT1
		             , SUM(ISNULL(A.FREE_AMT2,0)) AS FREE_AMT2
		             , SUM(ISNULL(A.FREE_AMT3,0)) AS FREE_AMT3
		             , E2.COMP_TYPE1
		             , E2.COMP_CLASS1
		             , E2.COMP_CODE1 
		             , E2.COMP_TYPE2
		             , E2.COMP_CLASS2
		             , E2.COMP_CODE2 
		             , E2.COMP_TYPE3
		             , E2.COMP_CLASS3
		             , E2.COMP_CODE3 
		             , E2.COMP_TYPE4
		             , E2.COMP_CLASS4
		             , E2.COMP_CODE4 
		             , E2.FREE_TYPE1
		             , E2.FREE_CLASS1
		             , E2.FREE_CODE1 
		             , E2.FREE_TYPE2
		             , E2.FREE_CLASS2
		             , E2.FREE_CODE2
		             , E2.FREE_TYPE3
		             , E2.FREE_CLASS3
		             , E2.FREE_CODE3
		             , E2.BANK_CODE
		             , E2.BRANCH_NAME
		             , E2.BANK_ACCOUNT AS BANK_ACCOUNT	--암호화 확인
		          FROM (SELECT A.COMP_CODE
		                     , #{txtBillDivCode} AS BILL_DIVI_CODE 
		                     , CASE WHEN (A.PROOF_KIND = '11' OR A.PROOF_KIND = '14' OR A.PROOF_KIND = '19' OR A.PROOF_KIND = '25' OR A.PROOF_KIND = '27' OR A.PROOF_KIND = '37')
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I),0) 
		                                 ELSE 0 
		                       END                                                     AS AMT_1     -- 과세매출 - 과세(세금계산서교부분)(신용카드/현금영수증 세금계산서발행도 포함)
		                     , CASE WHEN (A.PROOF_KIND = '11' OR A.PROOF_KIND = '14' OR A.PROOF_KIND = '19' OR A.PROOF_KIND = '25' OR A.PROOF_KIND = '27' OR A.PROOF_KIND = '37')
		                                 THEN ISNULL(SUM(A.TAX_AMT_I),0) 
		                                 ELSE 0 
		                       END                                                     AS TAX_1
		                       --
		                     , CASE WHEN (A.PROOF_KIND = '22' OR A.PROOF_KIND = '23' OR A.PROOF_KIND = '24')
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I), 0)
		                                 ELSE 0
		                       END                                                     AS AMT_2     --과세매출 -과세(기타(정규영수증외매출분))(4)
		                     , CASE WHEN (A.PROOF_KIND = '22' OR A.PROOF_KIND = '23' OR A.PROOF_KIND = '24')
		                                 THEN ISNULL(SUM(A.TAX_AMT_I), 0)
		                                 ELSE 0
		                       END                                                     AS TAX_2
		                       --
		                     , CASE WHEN (A.PROOF_KIND = '12' OR A.PROOF_KIND = '35')
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I), 0)
		                                 ELSE 0
		                       END                                                     AS AMT_3     --과세매출 - 영세율(세금계산서교부분)(5)
		                     , CASE WHEN (A.PROOF_KIND = '17' OR A.PROOF_KIND = '21' OR A.PROOF_KIND = '30' OR A.PROOF_KIND = '40' OR A.PROOF_KIND = '41')
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I), 0)
		                                 ELSE 0
		                       END                                                     AS AMT_4     --과세매출 - 영세율(기타)(6)
		                       --
		                     , CASE WHEN (A.PROOF_KIND = '51' OR A.PROOF_KIND = '52' OR A.PROOF_KIND = '54' OR A.PROOF_KIND = '56' OR A.PROOF_KIND = '66')
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I),0) 
		                            WHEN (A.PROOF_KIND = '55' OR A.PROOF_KIND = '61')
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I),0) - ISNULL(SUM(A.ASST_SUPPLY_AMT_I),0) 
		                                 ELSE 0 
		                       END                                                     AS AMT_8     --세금계산서수취분(일반매입)(10)
		                     , CASE WHEN (A.PROOF_KIND = '51' OR A.PROOF_KIND = '52' OR A.PROOF_KIND = '54' OR A.PROOF_KIND = '56' OR A.PROOF_KIND = '66')
		                                 THEN ISNULL(SUM(A.TAX_AMT_I),0)  
		                           	WHEN (A.PROOF_KIND = '55' OR A.PROOF_KIND = '61')
		                                 THEN ISNULL(SUM(A.TAX_AMT_I),0) - ISNULL(SUM(A.ASST_TAX_AMT_I),0)   
		                                 ELSE 0 
		                       END                                                     AS TAX_8
		                     , CASE WHEN (A.PROOF_KIND = '66')
		                                 THEN ISNULL(SUM(A.TAX_AMT_I),0)    
		                                 ELSE 0 
		                       END                                                     AS TAX_10_1
		                     , CASE WHEN (A.PROOF_KIND = '55' OR A.PROOF_KIND = '61')
		                                 THEN ISNULL(SUM(A.ASST_SUPPLY_AMT_I),0) 
		                                 ELSE 0 
		                       END                                                     AS AMT_9     --세금계산서수취분(고정자산매입)(11)
		                     , CASE WHEN (A.PROOF_KIND = '55' OR A.PROOF_KIND = '61')
		                                 THEN ISNULL(SUM(A.ASST_TAX_AMT_I),0)    
		                                 ELSE 0 
		                       END                                                     AS TAX_9
		                     , CASE WHEN (A.PROOF_KIND = '53' OR A.PROOF_KIND = '62' OR A.PROOF_KIND = '70' OR A.PROOF_KIND = '71')
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I),0) 
		                            WHEN (A.PROOF_KIND = '68' OR A.PROOF_KIND = '69')
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I),0) - ISNULL(SUM(A.ASST_SUPPLY_AMT_I),0) 
		                                 ELSE 0 
		                       END                                                     AS AMT_31    --기타공제매입세액(신용카드수취분-일반매입)(39)
		                     , CASE WHEN (A.PROOF_KIND = '53' OR A.PROOF_KIND = '62' OR A.PROOF_KIND = '70' OR A.PROOF_KIND = '71')
		                                 THEN ISNULL(SUM(A.TAX_AMT_I),0)    
		                            WHEN (A.PROOF_KIND = '68' OR A.PROOF_KIND = '69')
		                                 THEN ISNULL(SUM(A.TAX_AMT_I),0) - ISNULL(SUM(A.ASST_TAX_AMT_I),0) 
		                                 ELSE 0 
		                       END                                                     AS TAX_31
		                     , CASE WHEN (A.PROOF_KIND = '20' OR A.PROOF_KIND = '31' OR A.PROOF_KIND = '33') 
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I),0) 
		                                 ELSE 0 
		                       END                                                     AS AMT_53    --매출계산서
		                     , CASE WHEN (A.PROOF_KIND = '57' OR A.PROOF_KIND = '63') 
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I),0) 
		                                 ELSE 0 
		                       END                                                     AS AMT_54    --매입계산서
		                     , CASE WHEN A.PROOF_KIND = '32' 
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I),0) 
		                                 ELSE 0 
		                       END                                                     AS AMT_57    --과세매입자발행세금계산서수취합계(2)
		                     , CASE WHEN A.PROOF_KIND = '32' 
		                                 THEN ISNULL(SUM(A.TAX_AMT_I),0)    
		                                 ELSE 0 
		                       END                                                     AS TAX_57
		                     , CASE WHEN A.PROOF_KIND = '65' 
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I),0) 
		                                 ELSE 0 
		                       END                                                     AS AMT_58    --매입자발행세금계산서합계(13)
		                     , CASE WHEN A.PROOF_KIND = '65' 
		                                 THEN ISNULL(SUM(A.TAX_AMT_I),0)  
		                                 ELSE 0 
		                       END                                                     AS TAX_58
		                     , CASE WHEN (A.PROOF_KIND = '13' OR A.PROOF_KIND = '18' OR A.PROOF_KIND = '26' OR A.PROOF_KIND = '36')
		                            THEN ISNULL(SUM(A.SUPPLY_AMT_I), 0) 
		                            ELSE 0
		                       END                                                     AS AMT_62    --과세매출 -과세(신용카드.현금영수증발행분)(3)
		                     , CASE WHEN (A.PROOF_KIND = '13' OR A.PROOF_KIND = '18' OR A.PROOF_KIND = '26' OR A.PROOF_KIND = '36')
		                            THEN ISNULL(SUM(A.TAX_AMT_I), 0)
		                            ELSE 0
		                       END                                                     AS TAX_62    
		                     , CASE WHEN (A.PROOF_KIND = '68' OR A.PROOF_KIND = '69')
		                                 THEN ISNULL(SUM(A.ASST_SUPPLY_AMT_I),0) 
		                                 ELSE 0 
		                       END                                                     AS AMT_63    --기타공제매입세액(신용카드수취분-고정자산매입)(40)
		                     , CASE WHEN (A.PROOF_KIND = '68' OR A.PROOF_KIND = '69')
		                                 THEN ISNULL(SUM(A.ASST_TAX_AMT_I),0)    
		                                 ELSE 0 
		                       END                                                     AS TAX_63
		                     , CASE WHEN A.PROOF_KIND = '25'
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I),0)    
		                                 ELSE 0 
		                       END                                                     AS COMP_AMT4 --매출세금계산서(수입제외)
		                     , CASE WHEN (A.PROOF_KIND = '15' OR A.PROOF_KIND = '16' OR A.PROOF_KIND = '20' OR A.PROOF_KIND = '28' OR A.PROOF_KIND = '29' OR
		                                  A.PROOF_KIND = '31' OR A.PROOF_KIND = '34' OR A.PROOF_KIND = '38' OR A.PROOF_KIND = '39')
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I),0) 
		                                 ELSE 0 
		                       END                                                     AS FREE_AMT1 --면세사업수입금액
		                     , CASE WHEN (A.PROOF_KIND = '15' OR A.PROOF_KIND = '16' OR A.PROOF_KIND = '20' OR A.PROOF_KIND = '28' OR A.PROOF_KIND = '29' OR
		                                  A.PROOF_KIND = '31' OR A.PROOF_KIND = '34' OR A.PROOF_KIND = '38' OR A.PROOF_KIND = '39')
		                                 THEN ISNULL(SUM(A.TAX_AMT_I),0)    
		                                 ELSE 0 
		                       END                                                     AS FREE_AMT2
		                     , CASE WHEN A.PROOF_KIND = '33'
		                                 THEN ISNULL(SUM(A.SUPPLY_AMT_I),0)    
		                                 ELSE 0 
		                       END                                                     AS FREE_AMT3 --매출계산서(수입제외)
		                  FROM           ATX100T A  WITH (NOLOCK)
		                 WHERE A.COMP_CODE = #{S_COMP_CODE}
		                   AND A.PUB_DATE &gt;= #{txtFrPubDate}
		                   AND A.PUB_DATE &lt;= #{txtToPubDate} 
		                   <if test="txtBillDivCode != &quot;00&quot;">      
		                    AND A.BILL_DIVI_CODE  = #{txtBillDivCode}
		                </if>
		               
		                <if test="txtBillDivCode == &quot;00&quot;">    
		                    <if test="@foren.Ognl@isNotEmpty(txtBillDivCode_sub)">
		                        AND A.BILL_DIVI_CODE IN  (SELECT BILL_DIV_CODE FROM BOR120T WHERE COMP_CODE      = #{S_COMP_CODE}) 
		                    </if>
		                </if>
		                 GROUP BY A.COMP_CODE, A.BILL_DIVI_CODE, A.PROOF_KIND, A.REASON_CODE
		               ) A
		               LEFT  JOIN (SELECT COMP_CODE
		                                , FR_PUB_DATE
		                                , TO_PUB_DATE
		                                , SUM(BUY_AMT_TOT) AS BUY_AMT_TOT
		                                , SUM(TAX_TOT)     AS TAX_TOT
		                             FROM ATX355T WITH (NOLOCK)
		                            WHERE COMP_CODE     = #{S_COMP_CODE}    
		                              AND FR_PUB_DATE   = #{txtFrPubDate}
		                              AND TO_PUB_DATE   = #{txtToPubDate}
		                              <if test="txtBillDivCode != &quot;00&quot;">      
		                                AND BILL_DIV_CODE  = #{txtBillDivCode}
		                            </if>
		                           
		                            <if test="txtBillDivCode == &quot;00&quot;">    
		                                <if test="@foren.Ognl@isNotEmpty(txtBillDivCode_sub)">
		                                    AND BILL_DIV_CODE IN (SELECT BILL_DIV_CODE FROM BOR120T WHERE COMP_CODE      = #{S_COMP_CODE}) 
		                                </if>
		                            </if>
		                            GROUP BY COMP_CODE, FR_PUB_DATE, TO_PUB_DATE
		                          ) B                      ON B.COMP_CODE      = A.COMP_CODE          --기타공제매입세액(의제매입세액)
		               LEFT  JOIN (SELECT COMP_CODE
		                                , FR_PUB_DATE
		                                , TO_PUB_DATE
		                                , SUM(TAX_AMT_I * -1) AS TAX_AMT_I
		                             FROM ATX360T WITH (NOLOCK)
		                            WHERE COMP_CODE     = #{S_COMP_CODE}    
		                              AND FR_PUB_DATE   = #{txtFrPubDate}   
		                              <if test="txtBillDivCode != &quot;00&quot;">      
		                                AND BILL_DIV_CODE  = #{txtBillDivCode}
		                            </if>
		                           
		                            <if test="txtBillDivCode == &quot;00&quot;">    
		                                <if test="@foren.Ognl@isNotEmpty(txtBillDivCode_sub)">
		                                    AND BILL_DIV_CODE IN (SELECT BILL_DIV_CODE FROM BOR120T WHERE COMP_CODE      = #{S_COMP_CODE}) 
		                                </if>
		                            </if>
		                              AND DEBT_DIVI     = '1'  -- 대손
		                            GROUP BY COMP_CODE, FR_PUB_DATE, TO_PUB_DATE
		                          ) C1                     ON C1.COMP_CODE     = A.COMP_CODE          --과세표준매출세액(대손세액가감)
		               LEFT  JOIN (SELECT COMP_CODE
		                                , FR_PUB_DATE
		                                , TO_PUB_DATE
		                                , SUM(TAX_AMT_I) AS TAX_AMT_I
		                             FROM ATX360T WITH (NOLOCK)
		                            WHERE COMP_CODE     = #{S_COMP_CODE} 
		                              AND FR_PUB_DATE   = #{txtFrPubDate}
		                              <if test="txtBillDivCode != &quot;00&quot;">      
		                                AND BILL_DIV_CODE  = #{txtBillDivCode}
		                            </if>
		                           
		                            <if test="txtBillDivCode == &quot;00&quot;">    
		                                <if test="@foren.Ognl@isNotEmpty(txtBillDivCode_sub)">
		                                    AND BILL_DIV_CODE IN (SELECT BILL_DIV_CODE FROM BOR120T WHERE COMP_CODE      = #{S_COMP_CODE}) 
		                                </if>
		                            </if>
		                              AND DEBT_DIVI     = '2'  -- 변제
		                            GROUP BY COMP_CODE, FR_PUB_DATE, TO_PUB_DATE
		                          ) C2                     ON C2.COMP_CODE     = A.COMP_CODE          --기타공제매입세액(변제대손세액)
		               LEFT  JOIN (SELECT COMP_CODE
		                                , FR_PUB_DATE
		                                , TO_PUB_DATE
		                                , SUM(NONTAX_AMT) AS NONTAX_AMT
		                             FROM ATX452T WITH (NOLOCK)
		                            WHERE COMP_CODE     = #{S_COMP_CODE} 
		                              AND FR_PUB_DATE   = #{txtFrPubDate}
		                              AND TO_PUB_DATE   = #{txtToPubDate}
		                              <if test="txtBillDivCode != &quot;00&quot;">      
		                                    AND BILL_DIV_CODE  = #{txtBillDivCode}
		                                </if>
		                               
		                                <if test="txtBillDivCode == &quot;00&quot;">    
		                                    <if test="@foren.Ognl@isNotEmpty(txtBillDivCode_sub)">
		                                        AND BILL_DIV_CODE IN (SELECT BILL_DIV_CODE FROM BOR120T WHERE COMP_CODE      = #{S_COMP_CODE}) 
		                                    </if>
		                                </if>
		                            GROUP BY COMP_CODE, FR_PUB_DATE, TO_PUB_DATE
		                          ) D1                     ON D1.COMP_CODE     = A.COMP_CODE          --공제받지못할세액(공통매입세액면세사업분-예정)
		               LEFT  JOIN (SELECT COMP_CODE
		                                , FR_PUB_DATE
		                                , TO_PUB_DATE
		                                , SUM(DEDUCT_AMT) AS DEDUCT_AMT
		                             FROM ATX453T WITH (NOLOCK)
		                            WHERE COMP_CODE     = #{S_COMP_CODE} 
		                              AND FR_PUB_DATE   = #{txtFrPubDate}
		                              AND TO_PUB_DATE   = #{txtToPubDate}
		                              <if test="txtBillDivCode != &quot;00&quot;">      
		                                    AND BILL_DIV_CODE  = #{txtBillDivCode}
		                                </if>
		                               
		                                <if test="txtBillDivCode == &quot;00&quot;">    
		                                    <if test="@foren.Ognl@isNotEmpty(txtBillDivCode_sub)">
		                                        AND BILL_DIV_CODE IN  (SELECT BILL_DIV_CODE FROM BOR120T WHERE COMP_CODE      = #{S_COMP_CODE}) 
		                                    </if>
		                                </if>
		                            GROUP BY COMP_CODE, FR_PUB_DATE, TO_PUB_DATE
		                          ) D2                     ON D2.COMP_CODE     = A.COMP_CODE          --공제받지못할세액(공통매입세액면세사업분-확정)
                       LEFT  JOIN (SELECT A.COMP_CODE
                                        , SUM(A.SUPPLY_AMT_I) AS SUPPLY_AMT_I
                                        , SUM(A.TAX_AMT_I)    AS TAX_AMT_I
                                     FROM            ATX100T A WITH (NOLOCK)
                                          INNER JOIN BSA100T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                                                            AND B.MAIN_CODE = 'A070'
                                                                            AND B.SUB_CODE != '$'
                                                                            AND ISNULL(B.REF_CODE1,'') != ''
                                                                            AND B.SUB_CODE  = A.REASON_CODE
                                    WHERE A.COMP_CODE   = #{S_COMP_CODE}
                                      AND A.PUB_DATE   &gt;= #{txtFrPubDate}
                                      AND A.PUB_DATE   &lt;= #{txtToPubDate}
                                      AND A.PROOF_KIND IN ('54', '61')
		                              <if test="txtBillDivCode != &quot;00&quot;">      
		                              AND A.BILL_DIVI_CODE  = #{txtBillDivCode}
		                              </if>
	                                  <if test="txtBillDivCode == &quot;00&quot;">    
		                              	<if test="@foren.Ognl@isNotEmpty(txtBillDivCode_sub)">
		                                	AND A.BILL_DIVI_CODE IN (SELECT BILL_DIV_CODE FROM BOR120T WHERE COMP_CODE      = #{S_COMP_CODE}) 
		                                </if>
		                              </if>
                                    GROUP BY A.COMP_CODE) D3 ON D3.COMP_CODE = A.COMP_CODE          --공제받지못할매입세액
		               LEFT  JOIN (SELECT COMP_CODE
		                                , BILL_DIV_CODE
		                                , MAX(FR_PUB_DATE) AS FR_PUB_DATE
		                                , MAX(TO_PUB_DATE) AS TO_PUB_DATE
		                             FROM ATX300T WITH (NOLOCK)
		                            WHERE COMP_CODE        = #{S_COMP_CODE}    
		                              AND FR_PUB_DATE  &lt;= #{txtFrPubDate}
		                              AND TO_PUB_DATE  &lt; #{txtToPubDate}
		                              <if test="txtBillDivCode != &quot;00&quot;">      
		                                    AND BILL_DIV_CODE  = #{txtBillDivCode}
		                                </if>
		                               
		                                <if test="txtBillDivCode == &quot;00&quot;">    
		                                    <if test="@foren.Ognl@isNotEmpty(txtBillDivCode_sub)">
		                                        AND BILL_DIV_CODE IN (SELECT BILL_DIV_CODE FROM BOR120T WHERE COMP_CODE      = #{S_COMP_CODE}) 
		                                    </if>
		                                </if>
		                            GROUP BY COMP_CODE, BILL_DIV_CODE
		                          ) E1                     ON E1.COMP_CODE     = A.COMP_CODE
		                                                  AND E1.BILL_DIV_CODE = A.BILL_DIVI_CODE
		               LEFT  JOIN ATX300T E2 WITH (NOLOCK) ON E2.COMP_CODE     = E1.COMP_CODE
		                                                  AND E2.BILL_DIV_CODE = E1.BILL_DIV_CODE
		                                                  AND E2.FR_PUB_DATE   = E1.FR_PUB_DATE
		                                                  AND E2.TO_PUB_DATE   = E1.TO_PUB_DATE
		               LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE     = A.COMP_CODE
		                                                  AND M1.MAIN_CODE     = 'A067'               -- 부가세신고구분(1:예정, 2:확정)
		                                                  AND M1.SUB_CODE      = '2'
		         GROUP BY M1.REF_CODE1, M1.REF_CODE2, E2.COMP_TYPE1, E2.COMP_CLASS1, E2.COMP_CODE1 
		                , E2.COMP_TYPE2, E2.COMP_CLASS2, E2.COMP_CODE2, E2.COMP_TYPE3, E2.COMP_CLASS3, E2.COMP_CODE3 
		                , E2.COMP_TYPE4, E2.COMP_CLASS4, E2.COMP_CODE4, E2.FREE_TYPE1, E2.FREE_CLASS1, E2.FREE_CODE1 
		                , E2.FREE_TYPE2, E2.FREE_CLASS2, E2.FREE_CODE2, E2.FREE_TYPE3, E2.FREE_CLASS3, E2.FREE_CODE3
		                , E2.BANK_CODE,  E2.BRANCH_NAME, E2.BANK_ACCOUNT	--암호화 확인
		       ) X
	</select>
	
	<insert id="atx300ukrServiceImpl.insertForm" parameterType="Map">       
		--atx300ukr.Catx300ukr[fnatx300Set] Query6
		INSERT INTO ATX300T
			 ( FR_PUB_DATE
			 , TO_PUB_DATE
			 , BILL_DIV_CODE
			 , AMT_1
			 , TAX_1
			 , AMT_2
			 , TAX_2
			 , AMT_3
			 , AMT_4
			 , AMT_26
			 , TAX_26
			 , AMT_27
			 , TAX_27
			 , AMT_28
			 , AMT_29
			 , AMT_5
			 , TAX_5
			 , TAX_6
			 , AMT_TOT_7
			 , TAX_TOT_7
			 , AMT_8
			 , TAX_8
			 , AMT_9
			 , TAX_9
			 , TAX_10_1
			 , AMT_31
			 , TAX_31
			 , AMT_32
			 , TAX_32
			 , AMT_33
			 , TAX_33
			 , TAX_34
			 , TAX_35
			 , AMT_10
			 , TAX_10
			 , AMT_TOT_11
			 , TAX_TOT_11
			 , AMT_37
			 , TAX_37
			 , AMT_38
			 , TAX_38
			 , AMT_39
			 , TAX_39
			 , AMT_TOT_12
			 , TAX_TOT_12
			 , AMT_TOT_13
			 , TAX_TOT_13
			 , PAY_TAX
			 , AMT_14
			 , TAX_14
			 , TAX_41
			 , TAX_42
			 , TAX_15
			 , TAX_TOT_16
			 , TAX_17
			 , TAX_18
			 , AMT_44
			 , TAX_44
			 , AMT_45
			 , TAX_45
			 , AMT_46
			 , TAX_46
			 , AMT_47
			 , TAX_47
			 , AMT_48
			 , TAX_48
			 , TAX_TOT_19
			 , TAX_TOT_20
			 , AMT_10_32
			 , TAX_10_32
			 , AMT_10_33
			 , TAX_10_33
			 , AMT_TOT_10_34
			 , TAX_TOT_10_34
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
			 , TAX_16_46
			 , TAX_16_47
			 , DIVI
			 , BANK_CODE
		     , BRANCH_NAME
		     , BANK_ACCOUNT
		     , CLOSE_DATE
		     , CLOSE_REASON
		     , COMP_TYPE1
		     , COMP_CLASS1
		     , COMP_CODE1
		     , COMP_AMT1
		     , COMP_TYPE2
		     , COMP_CLASS2
		     , COMP_CODE2
		     , COMP_AMT2
		     , COMP_TYPE3
		     , COMP_CLASS3
		     , COMP_CODE3
		     , COMP_AMT3
		     , COMP_CLASS4
		     , COMP_CODE4
		     , COMP_AMT4
		     , AMT_TOT_25
		     , FREE_TYPE1
		     , FREE_CLASS1
		     , FREE_CODE1
		     , FREE_AMT1
		     , FREE_TYPE2
		     , FREE_CLASS2
		     , FREE_CODE2
		     , FREE_AMT2
		     , AMT_TOT_52
		     , AMT_53
		     , AMT_54
		     , DECLARE_DATE
		     , PRE_RE_CANCEL
		     , TAX_55
		     , AMT_56
		     , TAX_56
		     , AMT_57
		     , TAX_57
		     , AMT_58
		     , TAX_58
		     , TAX_59
		  /*   , AMT_60       삭제된필드*/
		  /*   , TAX_60       삭제된필드*/ 
		     , AMT_61
		     , TAX_61
		     , COMP_CODE
		     , AMT_63
		     , TAX_63
		     , TAX_64
		     , AMT_65
		     , TAX_65
		     , FREE_CLASS3
		     , FREE_CODE3
		     , FREE_AMT3
		     , AMT_62
		     , TAX_62
		     , AMT_66
		     , TAX_66
		     , AMT_67
		     , TAX_67
		   /*  , TAX_68       삭제된필드*/
		     , AMT_69
		     , TAX_69
		     , AMT_70
		     , TAX_70
		     , AMT_71
		     , TAX_71
		     , AMT_72
		     , TAX_72
		     , AMT_73
		     , TAX_73
		     , AMT_74
		     , TAX_74
		     , AMT_75
		     , TAX_75
		     , AMT_76
		     , TAX_76
		     , TAX_23
		     , TAX_14_47
		     , TAX_77
		     , TAX_78

			 -- 20210526 추가
			 , ZERO_TAX_RECIP1
			 , ZERO_TAX_CLASS1
			 , ZERO_TAX_CODE1
			 , ZERO_TAX_NATION1
			 , ZERO_TAX_RECIP2
			 , ZERO_TAX_CLASS2
			 , ZERO_TAX_CODE2
			 , ZERO_TAX_NATION2
			 , ZERO_TAX_RECIP3
			 , ZERO_TAX_CLASS3
			 , ZERO_TAX_CODE3
			 , ZERO_TAX_NATION3
			 
		     ) 
		VALUES
			 ( #{txtFrPubDate}
			 , #{txtToPubDate}
		     , #{txtBillDivCode}
		     , #{AMT_1}
		     , #{TAX_1}
		     , #{AMT_2}
		     , #{TAX_2}
		     , #{AMT_3}
		     , #{AMT_4}
		     , #{AMT_26}
		     , #{TAX_26}
		     , #{AMT_27}
		     , #{TAX_27}
		     , #{AMT_28}
		     , #{AMT_29}
		     , #{AMT_5}
		     , #{TAX_5}
		     , #{TAX_6}
		     , #{AMT_TOT_7}
		     , #{TAX_TOT_7}
		     , #{AMT_8}
		     , #{TAX_8}
		     , #{AMT_9}
		     , #{TAX_9}
		     , #{TAX_10_1}
		     , #{AMT_31}
		     , #{TAX_31}
		     , #{AMT_32}
		     , #{TAX_32}
		     , #{AMT_33}
		     , #{TAX_33}
		     , #{TAX_34}
		     , #{TAX_35}
		     , #{AMT_10}
		     , #{TAX_10}
		     , #{AMT_TOT_11}
		     , #{TAX_TOT_11}
		     , #{AMT_37}
		     , #{TAX_37}
		     , #{AMT_38}
		     , #{TAX_38}
		     , #{AMT_39}
		     , #{TAX_39}
		     , #{AMT_TOT_12}
		     , #{TAX_TOT_12}
		     , #{AMT_TOT_13}
		     , #{TAX_TOT_13}
		     , #{PAY_TAX}
		     , #{AMT_14}
		     , #{TAX_14}
		     , #{TAX_41}
		     , #{TAX_42}
		     , #{TAX_15}
		     , #{TAX_TOT_16}
		     , #{TAX_17}
		     , #{TAX_18}
		     , #{AMT_44}
		     , #{TAX_44}
		     , #{AMT_45}
		     , #{TAX_45}
		     , #{AMT_46}
		     , #{TAX_46}
		     , #{AMT_47}
		     , #{TAX_47}
		     , #{AMT_48}
		     , #{TAX_48}
		     , #{TAX_TOT_19}
		     , #{TAX_TOT_20}
		     , #{AMT_10_32}
		     , #{TAX_10_32}
		     , #{AMT_10_33}
		     , #{TAX_10_33}
		     , #{AMT_TOT_10_34}
		     , #{TAX_TOT_10_34}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{TAX_16_46}
		     , #{TAX_16_47}
		     , #{DIVI}
		     , #{BUSINESS_BANK_CODE}
		     , #{BRANCH_NAME}
		     , #{BANK_ACCOUNT}
		     , #{CLOSE_DATE}
		     , #{CLOSE_REASON}
		     , #{COMP_TYPE1}  
		     , #{COMP_CLASS1}  
		     , #{COMP_CODE1}  
		     , #{COMP_AMT1}  
		     , #{COMP_TYPE2}  
		     , #{COMP_CLASS2}  
		     , #{COMP_CODE2}  
		     , #{COMP_AMT2}  
		     , #{COMP_TYPE3}  
		     , #{COMP_CLASS3}  
		     , #{COMP_CODE3}  
		     , #{COMP_AMT3}  
		     , #{COMP_CLASS4}  
		     , #{COMP_CODE4}  
		     , #{COMP_AMT4}  
		     , #{AMT_TOT_25}  
		     , #{FREE_TYPE1}  
		     , #{FREE_CLASS1}  
		     , #{FREE_CODE1}  
		     , #{FREE_AMT1}  
		     , #{FREE_TYPE2}  
		     , #{FREE_CLASS2}  
		     , #{FREE_CODE2}  
		     , #{FREE_AMT2}
		     , #{AMT_TOT_52}
		     , #{AMT_53}
		     , #{AMT_54}
		     , #{DECLARE_DATE}
		     , #{PRE_RE_CANCEL}
		     , #{TAX_55}
		     , #{AMT_56}
		     , #{TAX_56}
		     , #{AMT_57}
		     , #{TAX_57}
		     , #{AMT_58}
		     , #{TAX_58}
		     , #{TAX_59}
		  /*   , AMT_60       삭제된필드*/
		  /*   , TAX_60       삭제된필드*/ 
		     , #{AMT_61}
		     , #{TAX_61}
		     , #{S_COMP_CODE}
		     , #{AMT_63}
		     , #{TAX_63}
		     , #{TAX_64}
		     , #{AMT_65}
		     , #{TAX_65}
		     , #{FREE_CLASS3}
		     , #{FREE_CODE3}
		     , #{FREE_AMT3}
		     , #{AMT_62}
		     , #{TAX_62}
		     , #{AMT_66}
		     , #{TAX_66}
		     , #{AMT_67}
		     , #{TAX_67}
		   /*  , TAX_68       삭제된필드*/ 
		     , #{AMT_69}
		     , #{TAX_69}
		     , #{AMT_70}
		     , #{TAX_70}
		     , #{AMT_71}
		     , #{TAX_71}
		     , #{AMT_72}
		     , #{TAX_72}
		     , #{AMT_73}
		     , #{TAX_73}
		     , #{AMT_74}
		     , #{TAX_74}
		     , #{AMT_75}
		     , #{TAX_75}
		     , #{AMT_76}
		     , #{TAX_76}
		     , #{TAX_23}
			 , #{TAX_14_47}
			 , #{TAX_77}
			 , #{TAX_78}
			 
			 -- 20210526 추가
			 , #{ZERO_TAX_RECIP1}
			 , #{ZERO_TAX_CLASS1}
			 , #{ZERO_TAX_CODE1}
			 , #{ZERO_TAX_NATION1}
			 , #{ZERO_TAX_RECIP2}
			 , #{ZERO_TAX_CLASS2}
			 , #{ZERO_TAX_CODE2}
			 , #{ZERO_TAX_NATION2}
			 , #{ZERO_TAX_RECIP3}
			 , #{ZERO_TAX_CLASS3}
			 , #{ZERO_TAX_CODE3}
			 , #{ZERO_TAX_NATION3}
			 )
	</insert>
	    
	<update id="atx300ukrServiceImpl.updateForm" parameterType="Map">
		--atx300ukr.Catx300ukr[fnatx300Set] Query6
		UPDATE ATX300T
		   SET AMT_1          = #{AMT_1}
			 , TAX_1          = #{TAX_1}
			 , AMT_2          = #{AMT_2}
			 , TAX_2          = #{TAX_2}
			 , AMT_3          = #{AMT_3}
			 , AMT_4          = #{AMT_4}
			 , AMT_26         = #{AMT_26}
			 , TAX_26         = #{TAX_26}
			 , AMT_27         = #{AMT_27}
			 , TAX_27         = #{TAX_27}
			 , AMT_28         = #{AMT_28}
			 , AMT_29         = #{AMT_29}
			 , AMT_5          = #{AMT_5}
			 , TAX_5          = #{TAX_5}
			 , TAX_6          = #{TAX_6}
			 , AMT_TOT_7      = #{AMT_TOT_7}
			 , TAX_TOT_7      = #{TAX_TOT_7}
			 , AMT_8          = #{AMT_8}
			 , TAX_8          = #{TAX_8}
			 , AMT_9          = #{AMT_9}
		     , TAX_9          = #{TAX_9}
		     , TAX_10_1       = #{TAX_10_1} 
		     , AMT_31         = #{AMT_31} 
		     , TAX_31         = #{TAX_31} 
		     , AMT_32         = #{AMT_32} 
		     , TAX_32         = #{TAX_32} 
		     , AMT_33         = #{AMT_33} 
		     , TAX_33         = #{TAX_33} 
		     , TAX_34         = #{TAX_34} 
		     , TAX_35         = #{TAX_35} 
		     , AMT_10         = #{AMT_10} 
		     , TAX_10         = #{TAX_10} 
		     , AMT_TOT_11     = #{AMT_TOT_11} 
		     , TAX_TOT_11     = #{TAX_TOT_11} 
		     , AMT_37         = #{AMT_37} 
		     , TAX_37         = #{TAX_37} 
		     , AMT_38         = #{AMT_38} 
		     , TAX_38         = #{TAX_38} 
		     , AMT_39         = #{AMT_39} 
		     , TAX_39         = #{TAX_39} 
		     , AMT_TOT_12     = #{AMT_TOT_12} 
		     , TAX_TOT_12     = #{TAX_TOT_12} 
		     , AMT_TOT_13     = #{AMT_TOT_13} 
		     , TAX_TOT_13     = #{TAX_TOT_13} 
		     , PAY_TAX        = #{PAY_TAX} 
		     , AMT_14         = #{AMT_14} 
		     , TAX_14         = #{TAX_14} 
		     , TAX_41         = #{TAX_41} 
		     , TAX_42         = #{TAX_42} 
		     , TAX_15         = #{TAX_15} 
		     , TAX_TOT_16     = #{TAX_TOT_16} 
		     , TAX_17         = #{TAX_17} 
		     , TAX_18         = #{TAX_18} 
		     , AMT_44         = #{AMT_44} 
		     , TAX_44         = #{TAX_44} 
		     , AMT_45         = #{AMT_45} 
		     , TAX_45         = #{TAX_45} 
		     , AMT_46         = #{AMT_46} 
		     , TAX_46         = #{TAX_46} 
		     , AMT_47         = #{AMT_47} 
		     , TAX_47         = #{TAX_47} 
		     , AMT_48         = #{AMT_48} 
		     , TAX_48         = #{TAX_48} 
		     , TAX_TOT_19     = #{TAX_TOT_19} 
		     , TAX_TOT_20     = #{TAX_TOT_20} 
		     , AMT_10_32      = #{AMT_10_32} 
		     , TAX_10_32      = #{TAX_10_32} 
		     , AMT_10_33      = #{AMT_10_33} 
		     , TAX_10_33      = #{TAX_10_33} 
		     , AMT_TOT_10_34  = #{AMT_TOT_10_34} 
		     , TAX_TOT_10_34  = #{TAX_TOT_10_34} 
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     , TAX_16_46      = #{TAX_16_46} 
		     , TAX_16_47      = #{TAX_16_47} 
		     , DIVI           = #{DIVI} 
		     , BANK_CODE      = #{BUSINESS_BANK_CODE} 
		     , BRANCH_NAME    = #{BRANCH_NAME} 
		     , BANK_ACCOUNT   = #{BANK_ACCOUNT}
		     , CLOSE_DATE     = #{CLOSE_DATE} 
		     , CLOSE_REASON   = #{CLOSE_REASON} 
		     , COMP_TYPE1     = #{COMP_TYPE1} 
		     , COMP_CLASS1    = #{COMP_CLASS1} 
		     , COMP_CODE1     = #{COMP_CODE1} 
		     , COMP_AMT1      = #{COMP_AMT1} 
		     , COMP_TYPE2     = #{COMP_TYPE2} 
		     , COMP_CLASS2    = #{COMP_CLASS2} 
		     , COMP_CODE2     = #{COMP_CODE2} 
		     , COMP_AMT2      = #{COMP_AMT2} 
		     , COMP_TYPE3     = #{COMP_TYPE3} 
		     , COMP_CLASS3    = #{COMP_CLASS3} 
		     , COMP_CODE3     = #{COMP_CODE3} 
		     , COMP_AMT3      = #{COMP_AMT3} 
		  /*   , COMP_TYPE4    저장필드x*/ 
		     , COMP_CLASS4    = #{COMP_CLASS4} 
		     , COMP_CODE4     = #{COMP_CODE4} 
		     , COMP_AMT4      = #{COMP_AMT4} 
		     , AMT_TOT_25     = #{AMT_TOT_25} 
		     , FREE_TYPE1     = #{FREE_TYPE1} 
		     , FREE_CLASS1    = #{FREE_CLASS1} 
		     , FREE_CODE1     = #{FREE_CODE1} 
		     , FREE_AMT1      = #{FREE_AMT1} 
		     , FREE_TYPE2     = #{FREE_TYPE2} 
		     , FREE_CLASS2    = #{FREE_CLASS2} 
		     , FREE_CODE2     = #{FREE_CODE2} 
		     , FREE_AMT2      = #{FREE_AMT2} 
		     , AMT_TOT_52     = #{AMT_TOT_52} 
		     , AMT_53         = #{AMT_53} 
		     , AMT_54         = #{AMT_54} 
		     , DECLARE_DATE   = #{DECLARE_DATE} 
		 
		  /*   , TAX_16_48      삭제된필드*/
			 , PRE_RE_CANCEL  = #{PRE_RE_CANCEL} 
			 , TAX_55         = #{TAX_55} 
			 , AMT_56         = #{AMT_56} 
			 , TAX_56         = #{TAX_56} 
			 , AMT_57         = #{AMT_57} 
			 , TAX_57         = #{TAX_57} 
			 , AMT_58         = #{AMT_58} 
			 , TAX_58         = #{TAX_58} 
			 , TAX_59         = #{TAX_59} 
		  /*   , AMT_60       삭제된필드*/
		  /*   , TAX_60       삭제된필드*/ 
			 , AMT_61         = #{AMT_61} 
			 , TAX_61         = #{TAX_61} 
			 , AMT_63         = #{AMT_63} 
			 , TAX_63         = #{TAX_63} 
			 , TAX_64         = #{TAX_64} 
			 , AMT_65         = #{AMT_65} 
			 , TAX_65         = #{TAX_65} 
			 , FREE_CLASS3    = #{FREE_CLASS3} 
			 , FREE_CODE3     = #{FREE_CODE3} 
			 , FREE_AMT3      = #{FREE_AMT3} 
			 , AMT_62         = #{AMT_62} 
			 , TAX_62         = #{TAX_62} 
			 , AMT_66         = #{AMT_66} 
			 , TAX_66         = #{TAX_66} 
			 , AMT_67         = #{AMT_67} 
			 , TAX_67         = #{TAX_67} 
		   /*  , TAX_68       삭제된필드*/ 
			 , AMT_69         = #{AMT_69} 
			 , TAX_69         = #{TAX_69} 
			 , AMT_70         = #{AMT_70} 
			 , TAX_70         = #{TAX_70} 
			 , AMT_71         = #{AMT_71} 
			 , TAX_71         = #{TAX_71} 
			 , AMT_72         = #{AMT_72} 
			 , TAX_72         = #{TAX_72} 
			 , AMT_73         = #{AMT_73} 
			 , TAX_73         = #{TAX_73} 
			 , AMT_74         = #{AMT_74} 
			 , TAX_74         = #{TAX_74} 
			 , AMT_75         = #{AMT_75} 
			 , TAX_75         = #{TAX_75} 
			 , AMT_76         = #{AMT_76} 
			 , TAX_76         = #{TAX_76} 
			 , TAX_23         = #{TAX_23} 
			 , TAX_77         = #{TAX_77}
			 , TAX_78         = #{TAX_78}
			 , TAX_14_47      = #{TAX_14_47} 
			 
			 -- 20210526 추가
			 , ZERO_TAX_RECIP1    = #{ZERO_TAX_RECIP1}
			 , ZERO_TAX_CLASS1    = #{ZERO_TAX_CLASS1}
			 , ZERO_TAX_CODE1     = #{ZERO_TAX_CODE1}
			 , ZERO_TAX_NATION1   = #{ZERO_TAX_NATION1}
			 , ZERO_TAX_RECIP2    = #{ZERO_TAX_RECIP2}
			 , ZERO_TAX_CLASS2    = #{ZERO_TAX_CLASS2}
			 , ZERO_TAX_CODE2     = #{ZERO_TAX_CODE2}
			 , ZERO_TAX_NATION2   = #{ZERO_TAX_NATION2}
			 , ZERO_TAX_RECIP3    = #{ZERO_TAX_RECIP3}
			 , ZERO_TAX_CLASS3    = #{ZERO_TAX_CLASS3}
			 , ZERO_TAX_CODE3     = #{ZERO_TAX_CODE3}
			 , ZERO_TAX_NATION3   = #{ZERO_TAX_NATION3}
			 
		 WHERE FR_PUB_DATE    = #{txtFrPubDate}  
		   AND TO_PUB_DATE    = #{txtToPubDate}  
		   AND BILL_DIV_CODE  = #{txtBillDivCode}
		   AND COMP_CODE      = #{S_COMP_CODE}   
	</update>
	
	<update id="atx300ukrServiceImpl.deleteForm" parameterType="Map">
		--atx300ukr.Catx300ukr[fnatx300Set] Query5
		DELETE FROM ATX300T 
		 WHERE FR_PUB_DATE   = #{txtFrPubDate}
		   AND TO_PUB_DATE   = #{txtToPubDate}
		   AND BILL_DIV_CODE = #{txtBillDivCode}
		   AND COMP_CODE     = #{S_COMP_CODE}
	</update>
	
	<select id="atx300ukrServiceImpl.checkCompCode" parameterType="Map" resultType="rMap">
	
	</select>
	
	<select id = "atx300ukrServiceImpl.selectTermCode" parameterType="Map" resultType="rMap">
		-- atx300ukr.Catx300ukr[fnatx300q] Query4"
	       SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	       SELECT ISNULL(A.DIV_FULL_NAME,'') AS COMP_NAME  
	            , ISNULL(A.COMPANY_NUM, '')  AS COMPANY_NUM  
	            , ISNULL(A.REPRE_NAME,'')    AS REPRE_NAME 
	            , ISNULL((SELECT COMP_OWN_NO  
	                        FROM BOR100T  WITH (NOLOCK)
	                       WHERE COMP_CODE = A.COMP_CODE),'') AS REPRE_NO 
	            , ISNULL(A.ADDR,'')          AS ADDR 
	            , ISNULL(A.TELEPHON, '')     AS TELEPHON 
	            , ISNULL(A.HANDPHONE, '')    AS HANDPHONE  
	            , ISNULL(A.TAX_NAME, '')     AS TAX_NAME  
	            , ISNULL(A.TAX_NUM, '')      AS TAX_NUM  
	            , ISNULL(A.TAX_TEL, '')      AS TAX_TEL  
	            , ISNULL(A.SAFFER_TAX_NM, '') AS SAFFER_TAX_NM  
	            , ISNULL((SELECT SUB_CODE 
	                        FROM BSA100T  WITH (NOLOCK)
	                       WHERE COMP_CODE    = #{S_COMP_CODE}
	                         AND MAIN_CODE    = 'A065'
	                         AND ISNULL(REF_CODE1,'') &lt;=substring(#{txtFrPubDate},5,8)
	                         AND ISNULL(REF_CODE2,'') &gt;=substring(#{txtFrPubDate},5,8)),'') AS TERM_CODE
	            , ISNULL(A.EMAIL, '')        AS EMAIL
				, CASE WHEN LEN(uniLITE.fnCipherDecrypt(A.REPRE_NO, '')) > 7 THEN
							CASE WHEN SUBSTRING(REPLACE(uniLITE.fnCipherDecrypt(A.REPRE_NO, ''), '-', ''), 7, 1) IN ('1', '2', '5', '6') THEN '19' + SUBSTRING(REPLACE(uniLITE.fnCipherDecrypt(A.REPRE_NO, ''), '-', ''), 1, 6)
								 ELSE '20' + SUBSTRING(REPLACE(uniLITE.fnCipherDecrypt(A.REPRE_NO, ''), '-', ''), 1, 6)
							END
					   ELSE ''
				  END	AS BIRTH_DATE
	         FROM BOR120T A  WITH (NOLOCK)
	        WHERE A.COMP_CODE =#{S_COMP_CODE}
	        AND   A.DIV_CODE  =#{txtBillDivCode}
	</select>
	<select id = "atx300ukrServiceImpl.fnAtx300Init"  parameterType="Map" resultType="rMap">
	    --atx300ukr.Catx300ukr[fnatx300r] QUERY6
	SELECT ISNULL(A.AMT_26, 0)        AS AMT_26         , ISNULL(A.TAX_26, 0)        AS TAX_26         
	     , ISNULL(A.AMT_27, 0)        AS AMT_27
	     , ISNULL(A.TAX_27, 0)        AS TAX_27         , ISNULL(A.AMT_28, 0)        AS AMT_28         
	     , ISNULL(A.AMT_29, 0)        AS AMT_29         , ISNULL(A.AMT_5, 0)         AS AMT_5          
	     , ISNULL(A.TAX_5, 0)         AS TAX_5          , ISNULL(A.TAX_6, 0)         AS TAX_6          
	     , ISNULL(A.AMT_8, 0)         AS AMT_8          , ISNULL(A.TAX_8, 0)         AS TAX_8          
	     , ISNULL(A.AMT_9, 0)         AS AMT_9          , ISNULL(A.TAX_9, 0)         AS TAX_9          
	     , ISNULL(A.AMT_31, 0)        AS AMT_31         , ISNULL(A.TAX_31, 0)        AS TAX_31         
	     , ISNULL(A.AMT_32, 0)        AS AMT_32         , ISNULL(A.TAX_32, 0)        AS TAX_32         
	     , ISNULL(A.AMT_33, 0)        AS AMT_33         , ISNULL(A.TAX_33, 0)        AS TAX_33         
	     , ISNULL(A.TAX_34, 0)        AS TAX_34         , ISNULL(A.TAX_35, 0)        AS TAX_35         
	     , ISNULL(A.AMT_10, 0)        AS AMT_10         , ISNULL(A.TAX_10, 0)        AS TAX_10         
	       --
	     , ISNULL(A.AMT_TOT_10_34, 0) AS AMT_TOT_10_34  , ISNULL(A.TAX_TOT_10_34, 0) AS TAX_TOT_10_34  
	     , ISNULL(A.AMT_10_32, 0)     AS AMT_10_32      , ISNULL(A.TAX_10_32, 0)     AS TAX_10_32      
	     , ISNULL(A.AMT_10_33, 0)     AS AMT_10_33      , ISNULL(A.TAX_10_33, 0)     AS TAX_10_33      
	     , ISNULL(A.AMT_37, 0)        AS AMT_37         , ISNULL(A.TAX_37, 0)        AS TAX_37         
	     , ISNULL(A.AMT_38, 0)        AS AMT_38         , ISNULL(A.TAX_38, 0)        AS TAX_38         
	     , ISNULL(A.AMT_39, 0)        AS AMT_39         , ISNULL(A.TAX_39, 0)        AS TAX_39         
	     , ISNULL(A.AMT_TOT_12, 0)    AS AMT_TOT_12     , ISNULL(A.TAX_TOT_12, 0)    AS TAX_TOT_12     
	     , ISNULL(A.TAX_41, 0)        AS TAX_41         , ISNULL(A.TAX_42, 0)        AS TAX_42         
	     , ISNULL(A.TAX_15, 0)        AS TAX_15         , ISNULL(TAX_16_46, 0)       AS TAX_16_46      
	     , ISNULL(TAX_16_47, 0)       AS TAX_16_47      , ISNULL(TAX_16_48, 0)       AS TAX_16_48      
	     , ISNULL(A.AMT_44, 0)        AS AMT_44         , ISNULL(A.TAX_44, 0)        AS TAX_44         
	     , ISNULL(A.AMT_45, 0)        AS AMT_45         , ISNULL(A.TAX_45, 0)        AS TAX_45         
	     , ISNULL(A.AMT_46, 0)        AS AMT_46         , ISNULL(A.TAX_46, 0)        AS TAX_46         
	     , ISNULL(A.AMT_47, 0)        AS AMT_47         , ISNULL(A.TAX_47, 0)        AS TAX_47         
	     , ISNULL(A.AMT_48, 0)        AS AMT_48         , ISNULL(A.TAX_48, 0)        AS TAX_48         
	     , ISNULL(A.TAX_TOT_19, 0)    AS TAX_TOT_19                                                    
	       --
	     , ISNULL(A.TAX_55, 0)        AS TAX_55         
	     , ISNULL(A.AMT_56, 0)        AS AMT_56         , ISNULL(A.TAX_56, 0)        AS TAX_56         
	     , ISNULL(A.AMT_60, 0)        AS AMT_60         , ISNULL(A.TAX_60, 0)        AS TAX_60         
	     , ISNULL(A.AMT_61, 0)        AS AMT_61         , ISNULL(A.TAX_61, 0)        AS TAX_61         
	       --
	     , ISNULL(A.FREE_TYPE1, '')   AS FREE_TYPE1     , ISNULL(A.FREE_CLASS1, '')  AS FREE_CLASS1    
	     , SUBSTRING(ISNULL(A.FREE_CODE1, ''),1,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE1, ''),2,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE1, ''),3,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE1, ''),4,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE1, ''),5,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE1, ''),6,1) FREE_CODE1
	     , ISNULL(A.FREE_AMT1, 0)     AS FREE_AMT1      , ISNULL(A.FREE_TYPE2, '')   AS FREE_TYPE2
	     , ISNULL(A.FREE_CLASS2, '')  AS FREE_CLASS2    , SUBSTRING(ISNULL(A.FREE_CODE2, ''),1,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE2, ''),2,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE2, ''),3,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE2, ''),4,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE2, ''),5,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE2, ''),6,1) FREE_CODE2
	     , ISNULL(A.FREE_AMT2, 0)     AS FREE_AMT2      , ISNULL(A.AMT_53, 0)        AS AMT_53
	     , ISNULL(A.AMT_54, 0)        AS AMT_54         , ISNULL(A.AMT_TOT_52, 0)    AS AMT_TOT_52
	     , (SELECT SUBSTRING(COMPANY_NUM, 1, 3) + '-' + SUBSTRING(COMPANY_NUM, 4, 2) + '-' + SUBSTRING(COMPANY_NUM, 6, 5) 
	         FROM BOR100T  WITH (NOLOCK)
	        WHERE COMP_CODE = A.COMP_CODE) AS COMPANY_NUM
	     , ISNULL(A.AMT_63, 0)        AS AMT_63         , ISNULL(A.TAX_63, 0)        AS TAX_63         
	     , ISNULL(A.TAX_64, 0)        AS TAX_64         
	     , ISNULL(A.AMT_65, 0)        AS AMT_65         , ISNULL(A.TAX_65, 0)        AS TAX_65         
	     , ISNULL(A.FREE_TYPE3, '')   AS FREE_TYPE3     , ISNULL(A.FREE_CLASS3, '')  AS FREE_CLASS3    
	     , SUBSTRING(ISNULL(A.FREE_CODE3, ''),1,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE3, ''),2,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE3, ''),3,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE3, ''),4,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE3, ''),5,1)+'    '+SUBSTRING(ISNULL(A.FREE_CODE3, ''),6,1) FREE_CODE3
	     , ISNULL(A.FREE_AMT3, 0)     AS FREE_AMT3
	       --
	     , ISNULL(A.AMT_66, 0)        AS AMT_66         , ISNULL(A.TAX_66, 0)        AS TAX_66         
	     , ISNULL(A.AMT_67, 0)        AS AMT_67         , ISNULL(A.TAX_67, 0)        AS TAX_67         
	     , ISNULL(A.TAX_68, 0)        AS TAX_68
	     , ISNULL(A.AMT_69, 0)        AS AMT_69         , ISNULL(A.TAX_69, 0)        AS TAX_69
	       --
	     , ISNULL(A.AMT_70, 0)        AS AMT_70         , ISNULL(A.TAX_70, 0)        AS TAX_70
	     , ISNULL(A.AMT_71, 0)        AS AMT_71         , ISNULL(A.TAX_71, 0)        AS TAX_71
	     , ISNULL(A.AMT_72, 0)        AS AMT_72         , ISNULL(A.TAX_72, 0)        AS TAX_72
	     , ISNULL(A.AMT_73, 0)        AS AMT_73         , ISNULL(A.TAX_73, 0)        AS TAX_73
	     , ISNULL(A.AMT_74, 0)        AS AMT_74         , ISNULL(A.TAX_74, 0)        AS TAX_74
	       --
	     , ISNULL(A.AMT_75, 0)        AS AMT_75         , ISNULL(A.TAX_75, 0)        AS TAX_75
	     , ISNULL(A.AMT_76, 0)        AS AMT_76         , ISNULL(A.TAX_76, 0)        AS TAX_76
	     , ISNULL(A.TAX_14_47, 0)     AS TAX_14_47
	     , ISNULL(A.TAX_77, 0)        AS TAX_77         , ISNULL(A.TAX_78, 0)        AS TAX_78
	  FROM ATX300T A  WITH (NOLOCK)
	 WHERE A.COMP_CODE     = #{S_COMP_CODE}
	   AND A.FR_PUB_DATE   = #{txtFrPubDate}
	   AND A.TO_PUB_DATE   = #{txtToPubDate}
	   AND A.BILL_DIV_CODE = #{txtBillDivCode}
	</select>
	
	<select id="atx300ukrServiceImpl.selectPrintBillList"  parameterType="Map" resultType="rMap">
		--UArpt09Krv.Catx01sKr [fnPrintBill] Query16
		DECLARE @compCode   nvarchar(8)
		       ,@pubFrDate  nvarchar(8)
		       ,@pubToDate  nvarchar(8)
		       ,@divCode    nvarchar(8)
		SET  @compCode  =   #{S_COMP_CODE}
		SET  @pubFrDate =   #{txtFrPubDate}
		SET  @pubToDate =   #{txtToPubDate}
		SET  @divCode   =   #{txtBillDivCode}
		
		SELECT SUM(AMT_I)             AS AMT_I                 
		     , MAX(SAFFER_TAX)        AS SAFFER_TAX            
		     , MAX(SAFFER_TAX_NAME)   AS SAFFER_TAX_NAME       
		     , MAX(SAFFER_DEPOSIT_NO) AS SAFFER_DEPOSIT_NO     
		     , MAX(DIV_FULL_NAME)     AS DIV_FULL_NAME         
		     , MAX(COMPANY_NUM) AS COMPANY_NUM                 
		     , MAX(ADDR)        AS ADDR                        
		     , MAX(TELEPHON)    AS TELEPHON                    
		     , MAX(FN_DATE)     AS FN_DATE                     
		     , MAX(TO_DATE)     AS TO_DATE                     
		     , MAX(CNT)         AS CNT                         
		     , MAX(CODE_MNG)    AS CODE_MNG                    
		     , MAX(DIVI)        AS DIVI                        
		     , LEFT(CONVERT(NVARCHAR, DATEADD(MM, 1, @pubToDate), 112), 6) AS TAX_YYMM
		  FROM ( SELECT TAX_TOT_20 AMT_I                       
		              , '' AS SAFFER_TAX                       
		              , '' SAFFER_TAX_NAME                     
		              , '' SAFFER_DEPOSIT_NO                   
		              , '' DIV_FULL_NAME                       
		              , '' COMPANY_NUM                         
		              , '' ADDR                                
		              , '' TELEPHON                            
		              , '' FN_DATE                             
		              , '' TO_DATE                             
		              , '' CNT                                 
		              , '' CODE_MNG                            
		              , '' DIVI                                
		           FROM ATX300T         WITH (NOLOCK)                         
		          WHERE COMP_CODE     = @compCode    
		            AND FR_PUB_DATE   = @pubFrDate    
		            AND TO_PUB_DATE   = @pubToDate    
		            AND BILL_DIV_CODE = @divCode    
		                                                       
		          UNION ALL                                    
		                                                       
		         SELECT 0 AS AMT_I                             
		              , SAFFER_TAX                             
		              , (SELECT CODE_NAME                      
		                   FROM BSA100T    WITH (NOLOCK)                      
		                  WHERE COMP_CODE = A.COMP_CODE        
		                    AND MAIN_CODE = 'A080'             
		                    AND SUB_CODE  = A.SAFFER_TAX) AS SAFFER_TAX_NAME
		              , (SELECT REF_CODE1                      
		                   FROM BSA100T     WITH (NOLOCK)                     
		                  WHERE COMP_CODE = A.COMP_CODE        
		                    AND MAIN_CODE = 'A080'             
		                    AND SUB_CODE  = A.SAFFER_TAX) AS SAFFER_DEPOSIT_NO
		              , DIV_FULL_NAME
		              , SUBSTRING(COMPANY_NUM,1,3) + '-' + SUBSTRING(COMPANY_NUM,4,2) + '-' + SUBSTRING(COMPANY_NUM,6,5) AS COMPANY_NUM
		              , ISNULL(ADDR,'')     AS ADDR            
		              , ISNULL(TELEPHON,'') AS TELEPHON        
		              , '' AS FN_DATE                          
		              , '' AS TO_DATE                          
		              , '' AS CNT                              
		              , '' AS CODE_MNG                         
		              , '' AS DIVI                             
		           FROM BOR120T A    WITH (NOLOCK)                            
		          WHERE COMP_CODE = @compCode        
		            AND DIV_CODE  = @divCode  
		                                                 
		          UNION ALL                              
		                                                 
		         SELECT 0  AS AMT_I                      
		              , '' AS SAFFER_TAX                 
		              , '' AS SAFFER_TAX_NAME            
		              , '' AS SAFFER_DEPOSIT_NO          
		              , '' AS DIV_FULL_NAME              
		              , '' AS COMPANY_NUM                
		              , '' AS ADDR                       
		              , '' AS TELEPHON                   
		              , FN_DATE                          
		              , TO_DATE                          
		              , '' AS CNT                        
		              , '' AS CODE_MNG                   
		              , '' AS DIVI                       
		           FROM BOR100T     WITH (NOLOCK)                       
		          WHERE COMP_CODE = @compCode  
		                                                 
		          UNION ALL                              
		                                                 
		         SELECT 0  AMT_I                         
		              , '' AS SAFFER_TAX                 
		              , '' AS SAFFER_TAX_NAME            
		              , '' AS SAFFER_DEPOSIT_NO          
		              , '' AS DIV_FULL_NAME              
		              , '' AS COMPANY_NUM                
		              , '' AS ADDR                       
		              , '' AS TELEPHON                   
		              , '' AS FN_DATE                    
		              , '' AS TO_DATE                    
		              , CODE_NAME CNT                    
		              , '' AS CODE_MNG                   
		              , '' AS DIVI                       
		           FROM BSA100T    WITH (NOLOCK)                        
		          WHERE COMP_CODE = @compCode  
		            AND MAIN_CODE = 'A065'               
		            AND N'1123' BETWEEN REF_CODE1 AND REF_CODE2
		         
		          UNION ALL
		         
		         SELECT 0 AMT_I                                
		              , '' SAFFER_TAX                          
		              , '' SAFFER_TAX_NAME                     
		              , '' SAFFER_DEPOSIT_NO                   
		              , '' DIV_FULL_NAME                       
		              , '' COMPANY_NUM                         
		              , '' ADDR                                
		              , '' TELEPHON                            
		              , '' FN_DATE                             
		              , '' TO_DATE                             
		              , '' CNT                                 
		              , (CASE SUB_CODE WHEN '1' THEN N'예정'    
		                               WHEN '3' THEN N'예정'    
		                               ELSE N'확정'             
		                  END) AS CODE_MNG                     
		              , (CASE SUB_CODE WHEN '1' THEN '3'       
		                               WHEN '3' THEN '3'       
		                               ELSE '1'                
		                  END) AS DIVI                         
		           FROM BSA100T    WITH (NOLOCK)                              
		          WHERE COMP_CODE = @compCode        
		            AND MAIN_CODE = 'A067'                     
		            AND ((N'1123' BETWEEN SUBSTRING(REF_CODE1,1,4) AND SUBSTRING(REF_CODE1,5,4))
		                OR (N'1123' BETWEEN SUBSTRING(REF_CODE2,1,4) AND SUBSTRING(REF_CODE2,5,4)))
		            AND SUB_CODE &lt;&gt; '$'
		       ) T
	</select>
	
	<select id="atx300ukrServiceImpl.selectList1ForRpt" parameterType="Map" resultType="rMap">
	    --atx300ukr.Catx300ukr[fnatx300r] QUERY5
		SELECT ISNULL(AMT_1, 0)         AS AMT_1          , ISNULL(TAX_1, 0)         AS TAX_1         
		     , ISNULL(AMT_2, 0)         AS AMT_2          , ISNULL(TAX_2, 0)         AS TAX_2         
		     , ISNULL(AMT_3, 0)         AS AMT_3          , ISNULL(AMT_4, 0)         AS AMT_4         
		     , ISNULL(AMT_26, 0)        AS AMT_26         , ISNULL(TAX_26, 0)        AS TAX_26        
		     , ISNULL(AMT_27, 0)        AS AMT_27         , ISNULL(TAX_27, 0)        AS TAX_27        
		     , ISNULL(AMT_28, 0)        AS AMT_28         , ISNULL(AMT_29, 0)        AS AMT_29        
		     , ISNULL(AMT_5, 0)         AS AMT_5          , ISNULL(TAX_5, 0)         AS TAX_5         
		     , ISNULL(TAX_6, 0)         AS TAX_6          , ISNULL(AMT_TOT_7, 0)     AS AMT_TOT_7     
		     , ISNULL(TAX_TOT_7, 0)     AS TAX_TOT_7      , ISNULL(AMT_8, 0)         AS AMT_8         
		     , ISNULL(TAX_8, 0)         AS TAX_8          , ISNULL(AMT_9, 0)         AS AMT_9         
		     , ISNULL(TAX_9, 0)         AS TAX_9          , ISNULL(AMT_31, 0)        AS AMT_31        
		     , ISNULL(TAX_31, 0)        AS TAX_31         , ISNULL(AMT_32, 0)        AS AMT_32        
		     , ISNULL(TAX_32, 0)        AS TAX_32         , ISNULL(AMT_33, 0)        AS AMT_33        
		     , ISNULL(TAX_33, 0)        AS TAX_33         , ISNULL(TAX_34, 0)        AS TAX_34        
		     , ISNULL(TAX_35, 0)        AS TAX_35         , ISNULL(AMT_10, 0)        AS AMT_10        
		     , ISNULL(TAX_10, 0)        AS TAX_10         , ISNULL(AMT_TOT_10_34, 0) AS AMT_TOT_10_34 
		     , ISNULL(TAX_TOT_10_34, 0) AS TAX_TOT_10_34  , ISNULL(AMT_TOT_11, 0)    AS AMT_TOT_11    
		     , ISNULL(TAX_TOT_11, 0)    AS TAX_TOT_11     , ISNULL(AMT_37, 0)        AS AMT_37        
		     , ISNULL(TAX_37, 0)        AS TAX_37         , ISNULL(AMT_38, 0)        AS AMT_38        
		     , ISNULL(TAX_38, 0)        AS TAX_38         , ISNULL(AMT_39, 0)        AS AMT_39        
		     , ISNULL(TAX_39, 0)        AS TAX_39         , ISNULL(AMT_TOT_12, 0)    AS AMT_TOT_12    
		     , ISNULL(TAX_TOT_12, 0)    AS TAX_TOT_12     , ISNULL(AMT_TOT_13, 0)    AS AMT_TOT_13    
		     , ISNULL(TAX_TOT_13, 0)    AS TAX_TOT_13     , ISNULL(PAY_TAX, 0)       AS PAY_TAX       
		     , ISNULL(AMT_14, 0)        AS AMT_14         , ISNULL(TAX_14, 0)        AS TAX_14        
		     , ISNULL(TAX_41, 0)        AS TAX_41         , ISNULL(TAX_42, 0)        AS TAX_42        
		     , ISNULL(TAX_15, 0)        AS TAX_15         , ISNULL(TAX_16_46, 0)     AS TAX_16_46     
		     , ISNULL(TAX_16_47, 0)     AS TAX_16_47      , ISNULL(TAX_TOT_16, 0)    AS TAX_TOT_16    
		     , ISNULL(TAX_17, 0)        AS TAX_17         , ISNULL(TAX_18, 0)        AS TAX_18        
		     , ISNULL(AMT_44, 0)        AS AMT_44         , ISNULL(TAX_44, 0)        AS TAX_44        
		     , ISNULL(AMT_45, 0)        AS AMT_45         , ISNULL(TAX_45, 0)        AS TAX_45        
		     , ISNULL(AMT_46, 0)        AS AMT_46         , ISNULL(TAX_46, 0)        AS TAX_46        
		     , ISNULL(AMT_47, 0)        AS AMT_47         , ISNULL(TAX_47, 0)        AS TAX_47        
		     , ISNULL(AMT_48, 0)        AS AMT_48         , ISNULL(TAX_48, 0)        AS TAX_48        
		     , ISNULL(TAX_TOT_19, 0)    AS TAX_TOT_19     , ISNULL(TAX_TOT_20, 0)    AS TAX_TOT_20    
		     , 0 TAX_TOT_21
		     , ISNULL(DIVI, '1')        AS DIVI           , ISNULL(BANK_CODE, '')    AS BANK_CODE
		     , ISNULL(BRANCH_NAME, '')  AS BRANCH_NAME
		     , BANK_ACCOUNT             AS BANK_ACCOUNT
		     , CASE WHEN ISNULL(CLOSE_DATE, '') = '' THEN NULL
		            ELSE SUBSTRING(ISNULL(CLOSE_DATE, ''),1,4) + '.'
		               + SUBSTRING(ISNULL(CLOSE_DATE, ''),5,2) + '.'
		               + SUBSTRING(ISNULL(CLOSE_DATE, ''),7,2)
		       END AS CLOSE_DATE
		     , ISNULL(CLOSE_REASON, '') AS CLOSE_REASON   , ISNULL(COMP_TYPE1, '')   AS COMP_TYPE1
		     , ISNULL(COMP_CLASS1, '')  AS COMP_CLASS1    , ' '+SUBSTRING(ISNULL(COMP_CODE1, ''),1,1)+'    '+SUBSTRING(ISNULL(COMP_CODE1, ''),2,1)+'   '+SUBSTRING(ISNULL(COMP_CODE1, ''),3,1)+'   '+SUBSTRING(ISNULL(COMP_CODE1, ''),4,1)+'   '+SUBSTRING(ISNULL(COMP_CODE1, ''),5,1)+'   '+SUBSTRING(ISNULL(COMP_CODE1, ''),6,1) AS COMP_CODE1
		     , ISNULL(COMP_AMT1, 0)     AS COMP_AMT1      , ISNULL(COMP_TYPE2, '')   AS COMP_TYPE2
		     , ISNULL(COMP_CLASS2, '')  AS COMP_CLASS2    , ' '+SUBSTRING(ISNULL(COMP_CODE2, ''),1,1)+'    '+SUBSTRING(ISNULL(COMP_CODE2, ''),2,1)+'   '+SUBSTRING(ISNULL(COMP_CODE2, ''),3,1)+'   '+SUBSTRING(ISNULL(COMP_CODE2, ''),4,1)+'   '+SUBSTRING(ISNULL(COMP_CODE2, ''),5,1)+'   '+SUBSTRING(ISNULL(COMP_CODE2, ''),6,1) AS COMP_CODE2
		     , ISNULL(COMP_AMT2, 0)     AS COMP_AMT2      , ISNULL(COMP_TYPE3, '')   AS COMP_TYPE3
		     , ISNULL(COMP_CLASS3, '')  AS COMP_CLASS3    , ' '+SUBSTRING(ISNULL(COMP_CODE3, ''),1,1)+'    '+SUBSTRING(ISNULL(COMP_CODE3, ''),2,1)+'   '+SUBSTRING(ISNULL(COMP_CODE3, ''),3,1)+'   '+SUBSTRING(ISNULL(COMP_CODE3, ''),4,1)+'   '+SUBSTRING(ISNULL(COMP_CODE3, ''),5,1)+'   '+SUBSTRING(ISNULL(COMP_CODE3, ''),6,1) AS COMP_CODE3
		     , ISNULL(COMP_AMT3, 0)     AS COMP_AMT3      , ISNULL(COMP_TYPE4, '')   AS COMP_TYPE4
		     , ISNULL(COMP_CLASS4, '')  AS COMP_CLASS4    , ' '+SUBSTRING(ISNULL(COMP_CODE4, ''),1,1)+'    '+SUBSTRING(ISNULL(COMP_CODE4, ''),2,1)+'   '+SUBSTRING(ISNULL(COMP_CODE4, ''),3,1)+'   '+SUBSTRING(ISNULL(COMP_CODE4, ''),4,1)+'   '+SUBSTRING(ISNULL(COMP_CODE4, ''),5,1)+'   '+SUBSTRING(ISNULL(COMP_CODE4, ''),6,1) AS COMP_CODE4
		     , ISNULL(COMP_AMT4, 0)     AS COMP_AMT4      , ISNULL(FREE_TYPE1, '')   AS FREE_TYPE1
		     , ISNULL(FREE_CLASS1, '')  AS FREE_CLASS1    , SUBSTRING(ISNULL(FREE_CODE1, ''),1,1)+'    '+SUBSTRING(ISNULL(FREE_CODE1, ''),2,1)+'    '+SUBSTRING(ISNULL(FREE_CODE1, ''),3,1)+'    '+SUBSTRING(ISNULL(FREE_CODE1, ''),4,1)+'    '+SUBSTRING(ISNULL(FREE_CODE1, ''),5,1)+'    '+SUBSTRING(ISNULL(FREE_CODE1, ''),6,1) AS FREE_CODE1
		     , ISNULL(FREE_AMT1, 0)     AS FREE_AMT1      , ISNULL(FREE_TYPE2, '')   AS FREE_TYPE2
		     , ISNULL(FREE_CLASS2, '')  AS FREE_CLASS2    , SUBSTRING(ISNULL(FREE_CODE2, ''),1,1)+'    '+SUBSTRING(ISNULL(FREE_CODE2, ''),2,1)+'    '+SUBSTRING(ISNULL(FREE_CODE2, ''),3,1)+'    '+SUBSTRING(ISNULL(FREE_CODE2, ''),4,1)+'    '+SUBSTRING(ISNULL(FREE_CODE2, ''),5,1)+'    '+SUBSTRING(ISNULL(FREE_CODE2, ''),6,1) AS FREE_CODE2
		     , ISNULL(FREE_AMT2, 0)     AS FREE_AMT2      , ISNULL(AMT_53, 0)        AS AMT_53
		     , ISNULL(AMT_54, 0)        AS AMT_54         , ISNULL(DECLARE_DATE,'')  AS DECLARE_DATE
		     , ISNULL(AMT_TOT_25, 0)    AS AMT_TOT_25     , ISNULL(AMT_TOT_52, 0)    AS AMT_TOT_52
		     , (SELECT B.CODE_NAME                                 
		         FROM ATX300T A 
		                      INNER JOIN BSA100T B 
		                              ON A.COMP_CODE = B.COMP_CODE 
		                             AND A.BANK_CODE = B.SUB_CODE 
		                             AND B.MAIN_CODE = 'A029'
		                   WHERE A.COMP_CODE     = #{S_COMP_CODE}
		                     AND A.FR_PUB_DATE   = #{txtFrPubDate}
		                     AND A.TO_PUB_DATE   = #{txtToPubDate}
		                     AND A.BILL_DIV_CODE = #{txtBillDivCode}
		      ) AS BANK_NAME
		     , ISNULL(AMT_57, 0)        AS AMT_57         , ISNULL(TAX_57, 0)        TAX_57
		     , ISNULL(AMT_58, 0)        AS AMT_58         , ISNULL(TAX_58, 0)        TAX_58
		     , ISNULL(TAX_59, 0)        AS TAX_59
		     , ISNULL(AMT_62, 0)        AS AMT_62         , ISNULL(TAX_62, 0)        TAX_62
		     , ISNULL(TAX_23, 0)        AS TAX_23         , ISNULL(TAX_10_1, 0)      TAX_10_1
		 FROM ATX300T A
		 WHERE COMP_CODE     = #{S_COMP_CODE}
		   AND FR_PUB_DATE   = #{txtFrPubDate}
		   AND TO_PUB_DATE   = #{txtToPubDate}
		   AND BILL_DIV_CODE = #{txtBillDivCode}
		 ORDER BY BILL_DIV_CODE 
	</select>
	
	<select id="atx300ukrServiceImpl.selectListFirst_report" parameterType="Map" resultType="rMap">
	    /* atx300ukrServiceImpl.selectListFirst_report*/
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		SELECT ISNULL(A.AMT_1, 0)  AS AMT_1
		     , ISNULL(A.TAX_1, 0)  AS TAX_1 
		     , ISNULL(A.AMT_2, 0)  AS AMT_2
		     , ISNULL(A.TAX_2, 0)  AS TAX_2 
		     , ISNULL(A.AMT_3, 0)  AS AMT_3 
		     , ISNULL(A.AMT_4, 0)  AS AMT_4  
		     , ISNULL(A.AMT_26, 0) AS AMT_26 
		     , ISNULL(A.TAX_26, 0) AS TAX_26
		     , ISNULL(A.AMT_27, 0) AS AMT_27 
		     , ISNULL(A.TAX_27, 0) AS TAX_27
		     , ISNULL(A.AMT_28, 0) AS AMT_28 
		     , ISNULL(A.AMT_29, 0) AS AMT_29 
		     , ISNULL(A.AMT_5, 0)  AS AMT_5
		     , ISNULL(A.TAX_5, 0)  AS TAX_5 
		     , ISNULL(A.TAX_6, 0)  AS TAX_6 
		     , ISNULL(A.AMT_8, 0)  AS AMT_8
		     , ISNULL(A.TAX_8, 0)  AS TAX_8 
		     , ISNULL(A.AMT_9, 0)  AS AMT_9
		     , ISNULL(A.TAX_9, 0)  AS TAX_9 
		     , ISNULL(A.AMT_31, 0) AS AMT_31
		     , ISNULL(A.TAX_31, 0) AS TAX_31 
		     , ISNULL(A.AMT_32, 0) AS AMT_32 
		     , ISNULL(A.TAX_32, 0) AS TAX_32
		     , ISNULL(A.AMT_33, 0) AS AMT_33
		     , ISNULL(A.TAX_33, 0) AS TAX_33 
		     , ISNULL(A.TAX_34, 0) AS TAX_34 
		     , ISNULL(A.TAX_35, 0) AS TAX_35 
		     , ISNULL(A.AMT_10, 0) AS AMT_10
		     , ISNULL(A.TAX_10, 0) AS TAX_10 
		     , ISNULL(A.AMT_37, 0) AS AMT_37
		     , ISNULL(A.TAX_37, 0) AS TAX_37 
		     , ISNULL(A.AMT_38, 0) AS AMT_38
		     , ISNULL(A.TAX_38, 0) AS TAX_38 
		     , ISNULL(A.AMT_39, 0) AS AMT_39
		     , ISNULL(A.TAX_39, 0) AS TAX_39 
		     , ISNULL(A.PAY_TAX, 0) AS PAY_TAX 
		     , ISNULL(A.AMT_14, 0) AS AMT_14
		     , ISNULL(A.TAX_14, 0) AS TAX_14 
		     , ISNULL(A.TAX_41, 0) AS TAX_41 
		     , ISNULL(A.TAX_42, 0) AS TAX_42 
		     , ISNULL(A.TAX_15, 0) AS TAX_15 
		     , ISNULL(A.TAX_16_46, 0) AS TAX_16_46 
		     , ISNULL(A.TAX_16_47, 0) AS TAX_16_47 
		     , ISNULL(A.TAX_16_48, 0) AS TAX_16_48 
		     , ISNULL(A.TAX_17, 0) AS TAX_17 
		     , ISNULL(A.TAX_18, 0) AS TAX_18 
		     , ISNULL(A.AMT_44, 0) AS AMT_44
		     , ISNULL(A.TAX_44, 0) AS TAX_44 
		     , ISNULL(A.AMT_45, 0) AS AMT_45
		     , ISNULL(A.TAX_45, 0) AS TAX_45 
		     , ISNULL(A.AMT_46, 0) AS AMT_46
		     , ISNULL(A.TAX_46, 0) AS TAX_46 
		     , ISNULL(A.AMT_47, 0) AS AMT_47 
		     , ISNULL(A.TAX_47, 0) AS TAX_47
		     , ISNULL(A.AMT_48, 0) AS AMT_48 
		     , ISNULL(A.TAX_48, 0) AS TAX_48
		     , ISNULL(A.DIVI, '1')        AS DIVI 
		     , ISNULL(A.BANK_CODE, '')    AS BUSINESS_BANK_CODE
		     , ISNULL(B.CODE_NAME,'')     AS BUSINESS_BANK_NAME
		     , ISNULL(A.BRANCH_NAME, '')  AS BRANCH_NAME
		     , ISNULL(A.BANK_ACCOUNT,'')  AS BANK_ACCOUNT 
		     , ISNULL(A.CLOSE_DATE, '')   AS CLOSE_DATE
		     , ISNULL(A.CLOSE_REASON, '') AS CLOSE_REASON 
		     , ISNULL(A.COMP_TYPE1, '')   AS COMP_TYPE1
		     , ISNULL(A.COMP_CLASS1, '')  AS COMP_CLASS1 
		     , ISNULL(A.COMP_CODE1, '')   AS COMP_CODE1
		     , ISNULL(A.COMP_AMT1, 0)     AS COMP_AMT1 
		     , ISNULL(A.COMP_TYPE2, '')   AS COMP_TYPE2
		     , ISNULL(A.COMP_CLASS2, '')  AS COMP_CLASS2 
		     , ISNULL(A.COMP_CODE2, '')   AS COMP_CODE2
		     , ISNULL(A.COMP_AMT2, 0)     AS COMP_AMT2 
		     , ISNULL(A.COMP_TYPE3, '')   AS COMP_TYPE3
		     , ISNULL(A.COMP_CLASS3, '')  AS COMP_CLASS3 
		     , ISNULL(A.COMP_CODE3, '')   AS COMP_CODE3
		     , ISNULL(A.COMP_AMT3, 0)     AS COMP_AMT3 
		     , ISNULL(A.COMP_TYPE4, '')   AS COMP_TYPE4
		     , ISNULL(A.COMP_CLASS4, '')  AS COMP_CLASS4 
		     , ISNULL(A.COMP_CODE4, '')   AS COMP_CODE4
		     , ISNULL(A.COMP_AMT4, 0)     AS COMP_AMT4 
		     , ISNULL(A.FREE_TYPE1, '')   AS FREE_TYPE1
		     , ISNULL(A.FREE_CLASS1, '')  AS FREE_CLASS1 
		     , ISNULL(A.FREE_CODE1, '')   AS FREE_CODE1
		     , ISNULL(A.FREE_AMT1, 0)     AS FREE_AMT1 
		     , ISNULL(A.FREE_TYPE2, '')   AS FREE_TYPE2
		     , ISNULL(A.FREE_CLASS2, '')  AS FREE_CLASS2 
		     , ISNULL(A.FREE_CODE2, '')   AS FREE_CODE2
		     , ISNULL(A.FREE_AMT2, 0)     AS FREE_AMT2 
		     , ISNULL(A.AMT_53, 0)        AS AMT_53 
		     , ISNULL(A.AMT_54, 0)        AS AMT_54 
		     , ISNULL(A.DECLARE_DATE,'')  AS DECLARE_DATE 
		     , ISNULL(A.AMT_10_32, 0)     AS AMT_10_32
		     , ISNULL(A.TAX_10_32, 0)     AS TAX_10_32 
		     , ISNULL(A.AMT_10_33, 0)     AS AMT_10_33
		     , ISNULL(A.TAX_10_33, 0)     AS TAX_10_33 
		     , ISNULL(A.AMT_TOT_10_34, 0) AS AMT_TOT_10_34
		     , ISNULL(A.TAX_TOT_10_34, 0) AS TAX_TOT_10_34 
		     , ISNULL(A.PRE_RE_CANCEL, '0') AS PRE_RE_CANCEL    
		     , ISNULL(A.TAX_55, 0)        AS TAX_55 
		     , ISNULL(A.AMT_56, 0)        AS AMT_56
		     , ISNULL(A.TAX_56, 0)        AS TAX_56 
		     , ISNULL(A.AMT_57, 0)        AS AMT_57
		     , ISNULL(A.TAX_57, 0)        AS TAX_57 
		     , ISNULL(A.AMT_58, 0)        AS AMT_58
		     , ISNULL(A.TAX_58, 0)        AS TAX_58
		     , ISNULL(A.TAX_59, 0)        AS TAX_59
		     , ISNULL(A.AMT_60, 0)        AS AMT_60
		     , ISNULL(A.TAX_60, 0)        AS TAX_60
		     , ISNULL(A.AMT_61, 0)        AS AMT_61
		     , ISNULL(A.TAX_61, 0)        AS TAX_61
		     , ISNULL(A.AMT_62, 0)        AS AMT_62
		     , ISNULL(A.TAX_62, 0)        AS TAX_62
		     , ISNULL(A.AMT_63, 0)        AS AMT_63
		     , ISNULL(A.TAX_63, 0)        AS TAX_63
		     , ISNULL(A.TAX_64, 0)        AS TAX_64
		     , ISNULL(A.AMT_65, 0)        AS AMT_65
		     , ISNULL(A.TAX_65, 0)        AS TAX_65
		     , ISNULL(A.AMT_66, 0)        AS AMT_66
		     , ISNULL(A.TAX_66, 0)        AS TAX_66
		     , ISNULL(A.AMT_67, 0)        AS AMT_67
		     , ISNULL(A.TAX_67, 0)        AS TAX_67
		     , ISNULL(A.TAX_68, 0)        AS TAX_68
		     , ISNULL(A.AMT_69, 0)        AS AMT_69
		     , ISNULL(A.TAX_69, 0)        AS TAX_69
		     , ISNULL(A.AMT_70, 0)        AS AMT_70
		     , ISNULL(A.TAX_70, 0)        AS TAX_70
		     , ISNULL(A.AMT_71, 0)        AS AMT_71
		     , ISNULL(A.TAX_71, 0)        AS TAX_71
		     , ISNULL(A.AMT_72, 0)        AS AMT_72
		     , ISNULL(A.TAX_72, 0)        AS TAX_72
		     , ISNULL(A.AMT_73, 0)        AS AMT_73
		     , ISNULL(A.TAX_73, 0)        AS TAX_73
		     , ISNULL(A.AMT_74, 0)        AS AMT_74
		     , ISNULL(A.TAX_74, 0)        AS TAX_74
		     , ISNULL(A.AMT_75, 0)        AS AMT_75
		     , ISNULL(A.TAX_75, 0)        AS TAX_75
		     , ISNULL(A.AMT_76, 0)        AS AMT_76
		     , ISNULL(A.TAX_76, 0)        AS TAX_76
		     , ISNULL(A.TAX_23, 0)        AS TAX_23
		     , ISNULL(A.TAX_14_47, 0)     AS TAX_14_47
		     , ISNULL(A.FREE_TYPE3, '')   AS FREE_TYPE3
		     , ISNULL(A.FREE_CLASS3, '')  AS FREE_CLASS3 
		     , ISNULL(A.FREE_CODE3, '')   AS FREE_CODE3
		     , ISNULL(A.FREE_AMT3, 0)     AS FREE_AMT3
		     , ISNULL(A.TAX_TOT_20,0)     AS TAX_TOT_20
		     , 'U' AS SAVE_FLAG
		     
		     , ISNULL(A.AMT_TOT_7,0)     AS AMT_TOT_7
		     , ISNULL(A.TAX_TOT_7,0)     AS TAX_TOT_7
		     , ISNULL(A.AMT_TOT_11,0)    AS AMT_TOT_11
		     , ISNULL(A.TAX_TOT_11,0)    AS TAX_TOT_11
		     , ISNULL(A.AMT_TOT_12,0)    AS AMT_TOT_12
		     , ISNULL(A.TAX_TOT_12,0)    AS TAX_TOT_12
		     , ISNULL(A.AMT_TOT_13,0)    AS AMT_TOT_13
		     , ISNULL(A.TAX_TOT_13,0)    AS TAX_TOT_13
		     , ISNULL(A.TAX_TOT_16,0)    AS TAX_TOT_16
		     , ISNULL(A.TAX_TOT_19,0)    AS TAX_TOT_19
		     , ISNULL(A.TAX_TOT_20,0)    AS TAX_TOT_20

		  FROM      ATX300T A  WITH (NOLOCK) 
		  LEFT JOIN BSA100T B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
											AND B.MAIN_CODE = 'A029'
											AND B.SUB_CODE  = A.BANK_CODE
		
		 WHERE A.COMP_CODE     = #{S_COMP_CODE}
		   AND A.FR_PUB_DATE   = #{txtFrPubDate}
		   AND A.TO_PUB_DATE   = #{txtToPubDate}
		   AND A.BILL_DIV_CODE = #{txtBillDivCode}
		 ORDER BY A.BILL_DIV_CODE 
	</select>

</mapper>