<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="atx111ukrServiceImpl">
	<select id="atx111ukrServiceImpl.selectList" parameterType="Map" resultType="rMap">
		SELECT 
			  A.COMP_CODE
			, A.DOC_ID
			, A.SALE_DIV_CODE
			, A.DIV_CODE
			, A.SERVANT_COMPANY_NUM
			, A.BILL_TYPE
			, A.ISSUE_GUBUN
			, A.BILL_DATE
			, A.SALE_AMT
			, A.TAX_AMT
			, A.BUSI_TYPE
			, A.CUSTOM_CODE
			, (SELECT CUSTOM_NAME 
				 FROM BCM100T   WITH (NOLOCK)
				WHERE COMP_CODE 	= #{S_COMP_CODE} 
				  AND CUSTOM_CODE	= A.CUSTOM_CODE
			  ) 									AS CUSTOM_NAME
			, CASE WHEN ISNULL(A.COMPANY_NUM, '') = '' THEN unilite.fnCipherDecrypt(A.TOP_NUM,'')
													   ELSE A.COMPANY_NUM
			  END											AS COMPANY_NUM
		    , unilite.fnCipherDecrypt(A.TOP_NUM,'')			AS TOP_NUM
			, A.PRSN_NAME
			, A.PRSN_EMAIL
			, A.BILL_GUBUN
			, A.REMARK
			, A.BROK_CUSTOM_CODE
			, A.BROK_COMPANY_NUM
		    , unilite.fnCipherDecrypt(A.BROK_TOP_NUM,'')	AS BROK_TOP_NUM
			, A.BROK_PRSN_NAME
			, A.BROK_PRSN_EMAIL
			, A.PUB_NUM
			, A.APPLY_YN
			, A.INSERT_DB_USER
			, A.INSERT_DB_TIME
			, A.UPDATE_DB_USER
			, A.UPDATE_DB_TIME
			, A.TEMPC_01
			, A.TEMPC_02
			, A.TEMPC_03
			, A.TEMPN_01
			, A.TEMPN_02
			, A.TEMPN_03
			, A.INPUT_PATH
		 FROM ATX120T	AS A  WITH (NOLOCK)
		WHERE A.COMP_CODE		= #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(SALE_DIV_CODE)">
		  AND A.SALE_DIV_CODE 	= #{SALE_DIV_CODE}
		</if>
		  AND A.BILL_DATE		BETWEEN #{DATE_FR} AND #{DATE_TO}
		  AND A.BILL_TYPE		= #{BILL_TYPE}
		  AND A.ISSUE_GUBUN		= #{ISSUE_GUBUN}
		  AND A.APPLY_YN		= #{APPLY_YN}
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		  AND A.CUSTOM_CODE		= #{CUSTOM_CODE}
		</if>
		  
	</select>

	<update id="atx111ukrServiceImpl.updateList" parameterType="rMap" >
		/* 수정 */
		UPDATE ATX120T
		   SET 
		   	   SALE_DIV_CODE	 	=  #{SALE_DIV_CODE}
			 , DIV_CODE          	=  #{DIV_CODE}		
			 , SERVANT_COMPANY_NUM	=  #{SERVANT_COMPANY_NUM}
			 , BILL_TYPE         	=  #{BILL_TYPE}	
			 , ISSUE_GUBUN		 	=  #{ISSUE_GUBUN}	
			 , BILL_GUBUN			=  #{BILL_GUBUN}
			 , BILL_DATE         	=  #{BILL_DATE}
			 , BUSI_TYPE         	=  #{BUSI_TYPE}
			 , CUSTOM_CODE       	=  #{CUSTOM_CODE}
			 , COMPANY_NUM       	=  REPLACE(#{COMPANY_NUM}, '-' , '')
			 , TOP_NUM          	=  #{TOP_NUM}
			 , PRSN_NAME         	=  #{PRSN_NAME}
			 , PRSN_EMAIL        	=  #{PRSN_EMAIL}
			 , SALE_AMT         	=  #{SALE_AMT}
			 , TAX_AMT           	=  #{TAX_AMT}
			 , REMARK            	=  #{REMARK}
			 , BROK_COMPANY_NUM  	=  #{BROK_COMPANY_NUM}
			 , BROK_PRSN_NAME    	=  #{BROK_PRSN_NAME}
			 , BROK_PRSN_EMAIL   	=  #{BROK_PRSN_EMAIL}
			 , PUB_NUM           	=  #{PUB_NUM}
			 , APPLY_YN          	=  #{APPLY_YN}
		 WHERE COMP_CODE		 	=  #{S_COMP_CODE}
		   AND DOC_ID			 	=  #{DOC_ID}
	</update>	

	<delete id="atx111ukrServiceImpl.deleteList" parameterType="Map">
		/* 삭제 */
			DELETE FROM ATX120T
			 WHERE COMP_CODE	= #{S_COMP_CODE}
			   AND DOC_ID		= #{DOC_ID}
	</delete>




	<!-- Excel -->
	<update id="atx111ukrServiceImpl.insertExcelATX111ukrupload" parameterType="Map">
    	DECLARE @SERVANT_COMPANY_NUM NVARCHAR(04)
    	    SET @SERVANT_COMPANY_NUM = #{SERVANT_COMPANY_NUM}
    	
    	--엑셀 파일에 잇는 데이터를 임시테이블에 insert
    	INSERT INTO ATX111T_XLS
    		(
    		   _EXCEL_JOBID
    		 , _EXCEL_ROWNUM
			<if test="@foren.Ognl@isNotEmpty(_EXCEL_HAS_ERROR)">
    		 , _EXCEL_HAS_ERROR
			</if>	
			<if test="@foren.Ognl@isNotEmpty(_EXCEL_ERROR)">
    		 , _EXCEL_ERROR_MSG
			</if>	
			 , BILL_DATE       
			 , BUSI_TYPE  
			 , SALE_DIV_CODE
			 , DIV_CODE
			 , SERVANT_COMPANY_NUM     
			 , COMPANY_NUM     
			 , PRSN_NAME       
			 , PRSN_EMAIL 	
			 , BILL_TYPE
             , BILL_GUBUN          
			 , SALE_AMT        
			 , TAX_AMT         
			<if test="@foren.Ognl@isNotEmpty(REMARK)">
			 , REMARK          
			</if>	
			<if test="@foren.Ognl@isNotEmpty(BROK_COMPANY_NUM)">
			 , BROK_COMPANY_NUM
			</if>	
			<if test="@foren.Ognl@isNotEmpty(BROK_PRSN_NAME)">
			 , BROK_PRSN_NAME  
			</if>	
			<if test="@foren.Ognl@isNotEmpty(BROK_PRSN_EMAIL)">
			 , BROK_PRSN_EMAIL	
			</if>	
			<if test="@foren.Ognl@isNotEmpty(INPUT_PATH)">
			 , INPUT_PATH
			</if>	
			, INSERT_DB_USER
			, INSERT_DB_TIME
	    	)           
    	VALUES (
    		   #{_EXCEL_JOBID} 
    		 , #{_EXCEL_ROWNUM}
			<if test="@foren.Ognl@isNotEmpty(_EXCEL_HAS_ERROR)">
    		 , #{_EXCEL_HAS_ERROR	,jdbcType=VARCHAR} 
			</if>	
			<if test="@foren.Ognl@isNotEmpty(_EXCEL_ERROR)">
    		 , #{_EXCEL_ERROR		,jdbcType=VARCHAR}     		  
			</if>	
			 , #{BILL_DATE}       
			 , #{BUSI_TYPE}   
			 , #{SALE_DIV_CODE}  
             , (
               SELECT BILL_DIV_CODE
            	 FROM BOR120T WITH(NOLOCK)
                WHERE COMP_CODE	= #{S_COMP_CODE}
                  AND DIV_CODE	= #{SALE_DIV_CODE}
               )														--신고사업장
			 , ISNULL(@SERVANT_COMPANY_NUM, '')   
			 , #{COMPANY_NUM}     
			 , #{PRSN_NAME}       
			 , #{PRSN_EMAIL} 
			 , #{BILL_TYPE}	
             , CASE WHEN #{BILL_GUBUN} = '청구' THEN '02'
                    ELSE '01'
                    END          
			 , #{SALE_AMT}        
			 , #{TAX_AMT}         
			<if test="@foren.Ognl@isNotEmpty(REMARK)">
			 , #{REMARK}          
			</if>	
			<if test="@foren.Ognl@isNotEmpty(BROK_COMPANY_NUM)">
			 , #{BROK_COMPANY_NUM}
			</if>	
			<if test="@foren.Ognl@isNotEmpty(BROK_PRSN_NAME)">
			 , #{BROK_PRSN_NAME}  
			</if>	
			<if test="@foren.Ognl@isNotEmpty(BROK_PRSN_EMAIL)">
			 , #{BROK_PRSN_EMAIL}
			</if>	
			<if test="@foren.Ognl@isNotEmpty(INPUT_PATH)">
			 , #{INPUT_PATH}
			</if>	
			 , #{S_USER_ID}
			 , GETDATE() 
    	)    
	</update>
    
    <!-- 데이터 체크 --> 
    <select id="atx111ukrServiceImpl.beforeExcelCheck" parameterType="Map" resultType="string">
        SELECT MAX(_EXCEL_ERROR_MSG) 			AS ERROR_MSG 
          FROM ATX111T_XLS WITH (NOLOCK)
         WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
           AND _EXCEL_HAS_ERROR = 'Y'
    </select>

    <!-- 업로드 된 데이터 가져오기 --> 
	<select id="atx111ukrServiceImpl.getData" parameterType="Map" resultType="rMap">
        SELECT  * FROM ATX111T_XLS WITH(NOLOCK)
         WHERE _EXCEL_JOBID     = #{_EXCEL_JOBID}
	</select> 

	<!-- 에러메세지 update -->
    <update id="atx111ukrServiceImpl.insertErrorMsg">
        UPDATE ATX111T_XLS 
           SET _EXCEL_ERROR_MSG = #{MSG}
             , _EXCEL_HAS_ERROR = 'Y'
         WHERE _EXCEL_JOBID     = #{_EXCEL_JOBID}
           AND _EXCEL_ROWNUM    = #{ROWNUM}
    </update>  

	<!-- 주민등록번호 update -->
    <update id="atx111ukrServiceImpl.updateTopNum">
        UPDATE ATX111T_XLS 
           SET TOP_NUM		= #{TOP_NUM}
             , COMPANY_NUM	= #{COMPANY_NUM}
         WHERE _EXCEL_JOBID     = #{_EXCEL_JOBID}
           AND _EXCEL_ROWNUM    = #{ROWNUM}
    </update>  

    <update id="atx111ukrServiceImpl.excelValidate" >
        --임시테이블과 panel에 있는 데이터를 ATX120T에 insert
        INSERT INTO ATX120T
                (
                  COMP_CODE
                  --DOC_ID
                , SALE_DIV_CODE
                , DIV_CODE
                , SERVANT_COMPANY_NUM
                , BILL_TYPE
                , ISSUE_GUBUN
                , BILL_DATE 
                , APPLY_YN
                , SALE_AMT
                , TAX_AMT
                , BUSI_TYPE
                , CUSTOM_CODE
                , COMPANY_NUM
                , TOP_NUM
                , PRSN_NAME
                , PRSN_EMAIL
                , BILL_GUBUN
                , REMARK
                , BROK_COMPANY_NUM
                , BROK_PRSN_NAME
                , BROK_PRSN_EMAIL
                , INPUT_PATH
                )
            SELECT
                  #{S_COMP_CODE}
                  --DOC_ID
                , A.SALE_DIV_CODE   					--매출사업장
                , A.DIV_CODE							--신고사업장
                , A.SERVANT_COMPANY_NUM
                , A.BILL_TYPE
                , #{ISSUE_GUBUN}
                , A.BILL_DATE 
                , 'N'
                , A.SALE_AMT
                , A.TAX_AMT
                , A.BUSI_TYPE
                , CASE WHEN ISNULL(A.COMPANY_NUM, '') != '' THEN (
											                	SELECT MAX(CUSTOM_CODE) 
											                	  FROM BCM100T WITH(NOLOCK)
											                	 WHERE COMP_CODE = #{S_COMP_CODE}
											                	   AND COMPANY_NUM = REPLACE(A.COMPANY_NUM, '-', '')
											            	  )
											            	ELSE (
											                	SELECT MAX(CUSTOM_CODE) 
											                	  FROM BCM100T WITH(NOLOCK)
											                	 WHERE COMP_CODE = #{S_COMP_CODE}
											                	   AND TOP_NUM	= A.TOP_NUM
											            	  )
				  END
                , REPLACE(A.COMPANY_NUM, '-', '')
                , A.TOP_NUM
                , A.PRSN_NAME
                , A.PRSN_EMAIL
                , A.BILL_GUBUN
                , A.REMARK
                , ISNULL(A.BROK_COMPANY_NUM,'')
                , A.BROK_PRSN_NAME
                , A.BROK_PRSN_EMAIL
                , A.INPUT_PATH
            FROM ATX111T_XLS  A		WITH (NOLOCK)
           WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
    </update>	

    <!-- 에러메세지 조회 -->   
    <select id="atx111ukrServiceImpl.getErrMsg" parameterType="Map" resultType="String">
        SELECT MAX(_EXCEL_ERROR_MSG)  AS ERR_MSG
          FROM ATX111T_XLS
         WHERE _EXCEL_JOBID = #{jobID}
           AND _EXCEL_HAS_ERROR = 'Y'
    </select>




	<!-- CALL SP -->
	<insert id="atx111ukrServiceImpl.insertLogTable" parameterType="Map">     
	    INSERT INTO L_ATX111T
	           (
	             KEY_VALUE
       		   , OPR_FLAG
	           , COMP_CODE
			   , DOC_ID			
			   , SALE_DIV_CODE		
			   , DIV_CODE		
			   , SERVANT_COMPANY_NUM
			   , BILL_TYPE			
			   , ISSUE_GUBUN		
			   , BILL_DATE			
			   , SALE_AMT			
			   , TAX_AMT			
			   , BUSI_TYPE			
			   , CUSTOM_CODE		
			   , CUSTOM_NAME		
			   , COMPANY_NUM		
			   , TOP_NUM			
			   , PRSN_NAME			
			   , PRSN_EMAIL		
			   , BILL_GUBUN		
			   , REMARK			
			   , BROK_CUSTOM_CODE	
			   , BROK_COMPANY_NUM	
			   , BROK_TOP_NUM		
			   , BROK_PRSN_NAME	
			   , BROK_PRSN_EMAIL	
			   , PUB_NUM			
			   , APPLY_YN		
			   , INPUT_PATH	
	           , INSERT_DB_USER
	           , INSERT_DB_TIME     
	           )
	     VALUES
	           ( 
	             #{KEY_VALUE}
       		   , #{OPR_FLAG}         
	           , #{S_COMP_CODE}  
			   , #{DOC_ID}			
			   , #{SALE_DIV_CODE}		
			   , #{DIV_CODE}		
			   , #{SERVANT_COMPANY_NUM}	
			   , #{BILL_TYPE}			
			   , #{ISSUE_GUBUN}		
			   , #{BILL_DATE}			
			   , #{SALE_AMT}			
			   , #{TAX_AMT}			
			   , #{BUSI_TYPE}			
			   , #{CUSTOM_CODE}		
			   , #{CUSTOM_NAME}		
			   , #{COMPANY_NUM}		
			   , unilite.fnCipherEncrypt(#{TOP_NUM},'')			
			   , #{PRSN_NAME}			
			   , #{PRSN_EMAIL}		
			   , #{BILL_GUBUN}		
			   , #{REMARK}			
			   , #{BROK_CUSTOM_CODE}	
			   , #{BROK_COMPANY_NUM}	
			   , unilite.fnCipherEncrypt(#{BROK_TOP_NUM},'')		
			   , #{BROK_PRSN_NAME}	
			   , #{BROK_PRSN_EMAIL}	
			   , #{PUB_NUM}			
			   , #{APPLY_YN}		
			   , #{INPUT_PATH}			
	           , #{S_USER_ID}       
	           , GETDATE()         
	           ) 
	</insert>
	



    <!-- 자동기표 SP호출 -->
    <update id="atx111ukrServiceImpl.runAutoSlip" parameterType="Map" statementType="CALLABLE">
        {call USP_ACCNT_ATX111UKR_fnTaxInsert (
            #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{OPR_FLAG,      mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{LANG_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{USER_ID,       mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>

    <!-- 기표취소 SP 호출 -->
    <update id="atx111ukrServiceImpl.cancelSlip" parameterType="Map" statementType="CALLABLE">
        {call USP_ACCNT_ATX111UKR_fnTaxCancel (
            #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{OPR_FLAG,      mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{LANG_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{USER_ID,       mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
            #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
        )}
    </update>
</mapper>