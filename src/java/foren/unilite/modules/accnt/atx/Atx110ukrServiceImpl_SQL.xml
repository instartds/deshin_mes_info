<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="atx110ukrServiceImpl">	
	<select id="atx110ukrServiceImpl.getDivCode" parameterType="Map" resultType="comboItem">	
		    SELECT DIV_CODE value                      
		         , DIV_NAME text
		         , DIV_CODE +  DIV_NAME search                      
		      FROM BOR120T WITH (NOLOCK)                     
		     WHERE COMP_CODE	= #{S_COMP_CODE}
		       AND USE_YN		= 'Y'
		     ORDER BY DIV_CODE                    
	</select>
	
	<select id="atx110ukrServiceImpl.getSaleDivCode" parameterType="Map" resultType="comboItem">	
	    IF EXISTS (SELECT TOP 1 1 FROM BSA540T WITH(NOLOCK)
		            WHERE USER_ID	= #{S_USER_ID}
		              AND COMP_CODE	= #{S_COMP_CODE})
		BEGIN
		    SELECT A.DIV_CODE  value
		         , A.DIV_NAME  text
		         , A.DIV_CODE +  A.DIV_NAME search 
		      FROM            BOR120T  A  WITH(NOLOCK)
		           INNER JOIN BSA540T  B  WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                              AND B.DIV_CODE  = A.DIV_CODE
		                                              AND B.USER_ID   = #{S_USER_ID}
		     WHERE A.COMP_CODE	= #{S_COMP_CODE}  
		       AND A.USE_YN		= 'Y'
		     ORDER BY A.DIV_CODE
		END
		ELSE
		BEGIN
		    SELECT DIV_CODE value                      
		         , DIV_NAME text
		         , DIV_CODE +  DIV_NAME search                      
		      FROM BOR120T WITH (NOLOCK)                     
		     WHERE COMP_CODE	= #{S_COMP_CODE}
		       AND USE_YN		= 'Y'
		     ORDER BY DIV_CODE                    
		END 
	</select>

	<select id="atx110ukrServiceImpl.getEmail" parameterType="Map" resultType="rMap">	
		SELECT TOP 1 
			   CASE WHEN ISNULL(A.EMAIL_ADDR, '') = '' THEN MAX(B.EMAIL_ADDR)
					ELSE MAX(A.EMAIL_ADDR)
			   END										AS EMAIL_ADDR
		  FROM		BSA300T A  WITH (NOLOCK)
		 INNER JOIN HUM100T B  WITH (NOLOCK)
				 ON B.COMP_CODE		= A.COMP_CODE
				AND B.PERSON_NUMB	= A.PERSON_NUMB
		 WHERE A.COMP_CODE		= #{S_COMP_CODE}
		   AND A.USER_NAME		= #{USER_NAME}
		   AND A.PERSON_NUMB	= #{PERSON_NUMB}
         GROUP BY A.EMAIL_ADDR, B.EMAIL_ADDR
	</select>
	
	<select id="atx110ukrServiceImpl.selectBillDivList" parameterType="Map" resultType="rMap">	
	/*신고사업장 조회*/
		/*UBsaExKrv.CBsaExSKr[fnRecordCombo] Query04*/
		SELECT BILL_DIV_CODE                                        
             , (SELECT DIV_NAME                                     
                  FROM BOR120T WITH (NOLOCK)                        
                 WHERE COMP_CODE = A.COMP_CODE                      
                   AND DIV_CODE  = A.BILL_DIV_CODE) AS BILL_DIV_NAME
          FROM (SELECT DISTINCT BILL_DIV_CODE                       
                     , COMP_CODE                                    
                  FROM BOR120T WITH (NOLOCK)                        
                 WHERE COMP_CODE = #{S_COMP_CODE}
                   AND DIV_CODE  = #{SALE_DIV_CODE}) A           
         ORDER BY BILL_DIV_CODE
	</select>
	
	<select id="atx110ukrServiceImpl.selectBillDivInfo" parameterType="Map" resultType="rMap">	
	/*신고사업장 정보 조회*/
		 /*USFuncKrv.CSFuncKr[fnGetOrgInfo] Query01*/
	    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	    SELECT ISNULL(DIV_NAME   , '') 			AS DIV_NAME
	         , ISNULL(COMPANY_NUM, '')  		AS COMPANY_NUM
	         , ISNULL(REPRE_NAME , '')  		AS REPRE_NAME
	         , ISNULL(COMP_CLASS , '')  		AS COMP_CLASS
	         , ISNULL(COMP_TYPE  , '')  		AS COMP_TYPE
	         , ISNULL(ADDR       , '') 			AS ADDR
	         , ISNULL(SUB_DIV_NUM, '')			AS SUB_DIV_NUM
	      FROM BOR120T  WITH (NOLOCK)
	     WHERE DIV_CODE  = #{SALE_DIV_CODE}
	       AND COMP_CODE = #{S_COMP_CODE}
	</select>
	
	<!-- ATX110T SEND_NAME으로 변경
	<select id="atx110ukrServiceImpl.getSalePrsn" parameterType="Map" resultType="comboItem">  
		/* UBsaExKrv.CBsaExSKr[fnRecordCombo] Query06 */
		SELECT SUB_CODE  AS 'value'                     
		     , CODE_NAME AS 'text'
		     , '' AS search
		 	 , '' AS 'option'
		  FROM BSA100T WITH (NOLOCK)          
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'S010'
		   AND SUB_CODE != '$'                
		   AND REF_CODE1 = #{BILL_DIV_CODE}
	</select>
	-->

	<select id="atx110ukrServiceImpl.getPersonInfo" parameterType="Map" resultType="rMap">	
		SELECT PRSN_NAME, PRSN_EMAIL, PRSN_PHONE, PRSN_HANDPHONE
		  FROM ATX110T WITH(NOLOCK)
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND DIV_CODE		= #{DIV_CODE}
		   AND CUSTOM_CODE	= #{CUSTOM_CODE}
		   AND PUB_NUM = (SELECT MAX(PUB_NUM) 
		   					FROM ATX110T  WITH(NOLOCK)
		   				   WHERE COMP_CODE	= #{S_COMP_CODE}
							 AND DIV_CODE	= #{DIV_CODE}
							 AND CUSTOM_CODE= #{CUSTOM_CODE})
	</select>
	
	<select id="atx110ukrServiceImpl.selectBillNoMasterList" parameterType="Map" resultType="rMap">	
		--atx110ukr.Catx110ukr[fnAtx110QPop] Query01
			BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE         @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
		                 ,  @SALE_DIV_CODE      NVARCHAR(08)                -- (선택) 매출사업장
		                 ,  @DATE_FR            NVARCHAR(08)                -- (선택) 계산서일(FROM)
		                 ,  @DATE_TO            NVARCHAR(08)                -- (선택) 계산서일(TO)
		                 ,  @CUSTOM_CODE        NVARCHAR(08)                -- (선택) 거래처코드
		                 ,  @CUSTOM_NAME        NVARCHAR(50)                -- (선택) 거래처명
		                 ,  @PROJECT_NO         NVARCHAR(20)                -- (선택) 관리번호
		                    --
		                 ,  @USER_ID            NVARCHAR(100)                -- (필수) 사용자
		  
		--  [ 변수 값 할당 ] ----------------------------------------------------------------------------------------
		    SET  @COMP_CODE         = #{S_COMP_CODE}
		    SET  @SALE_DIV_CODE     = #{SALE_DIV_CODE}
		    SET  @DATE_FR           = #{FR_DATE}
		    SET  @DATE_TO           = #{TO_DATE}
		    SET  @CUSTOM_CODE       = #{CUSTOM_CODE}
		    SET  @CUSTOM_NAME       = #{CUSTOM_NAME}
		    SET  @PROJECT_NO        = #{PROJECT_NO}
		    --
		    SET  @USER_ID           = #{S_USER_ID}
		
		--  [ 명칭 참조 유형 ] --------------------------------------------------------------------------------------
		    DECLARE         @RefItem            NVARCHAR(01)
		
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  USER_ID = @USER_ID
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		--  [ 날짜 포맷 유형 설정 ] ---------------------------------------------------------------------------------
		    DECLARE         @DateFormat         NVARCHAR(10)
		
		    SELECT  TOP 1 @DateFormat = CODE_NAME
		    FROM    BSA100T WITH (NOLOCK)
		    WHERE   COMP_CODE = @COMP_CODE
		    AND     MAIN_CODE = N'B044'
		    AND     REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, N'YYYY.MM.DD')
		
		--  [ 데이터 조회 ] -----------------------------------------------------------------------------------------
		    SELECT  D.DIV_NAME
		         ,  CASE WHEN @RefItem = N'1' THEN C.CUSTOM_NAME1
		                 WHEN @RefItem = N'2' THEN C.CUSTOM_NAME2
		                 ELSE C.CUSTOM_NAME
		            END                                                                     AS CUSTOM_NAME
		         ,  A.PUB_NUM 
		         ,  A.BEFORE_PUB_NUM
		         ,  A.ORIGINAL_PUB_NUM
		         ,  A.BILL_FLAG
		         ,  M1.CODE_NAME                                                            AS BILL_TYPE
		         ,  CASE WHEN ISNULL(A.BILL_DATE, '') = '' THEN ''
		                 ELSE REPLACE(
		                      REPLACE(
		                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.BILL_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A.BILL_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A.BILL_DATE, 7, 2))
		            END                                                                     AS BILL_DATE
		         ,  CASE WHEN ISNULL(A.PUB_FR_DATE, '') = '' THEN ''
		                 ELSE REPLACE(
		                      REPLACE(
		                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PUB_FR_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A.PUB_FR_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A.PUB_FR_DATE, 7, 2))
		            END + ' ~ '
		         +  CASE WHEN ISNULL(A.PUB_TO_DATE, '') = '' THEN ''
		                 ELSE REPLACE(
		                      REPLACE(
		                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.PUB_TO_DATE, 1, 4))
		                                         , 'MM',   SUBSTRING(A.PUB_TO_DATE, 5, 2))
		                                         , 'DD',   SUBSTRING(A.PUB_TO_DATE, 7, 2))
		            END                                                                     AS PUB_DATE
		         ,  A.SALE_DIV_CODE
		         ,  A.PROJECT_NO
		         ,  CASE WHEN A.EX_DATE IS NULL THEN 'N' ELSE 'Y' END                       AS EX_YN
		         ,  CASE WHEN @RefItem = N'1' THEN E.CUSTOM_NAME1
		                 WHEN @RefItem = N'2' THEN E.CUSTOM_NAME2
		                 ELSE E.CUSTOM_NAME
		            END     
		         ,  A.SERVANT_COMPANY_NUM                                                                AS COLET_CUST_CD
		         ,  A.DIV_CODE
		         ,  A.CUSTOM_CODE
		         ,  A.SALE_PRSN
		         ,  A.MODI_REASON
		         ,  A.BILL_GUBUN
		         ,  A.PRSN_NAME
		         ,  A.PRSN_EMAIL
		         ,  A.PRSN_PHONE
		         ,  A.PRSN_HANDPHONE
		         ,  A.SMS_CHECK
		         ,  A.REMARK
		         ,  A.BILL_SEND_YN
		         ,  A.ERR_MSG
		         ,  A.BILL_PUBLISH_TYPE
		         ,  A.BROK_CUSTOM_CODE
		         ,  A.BROK_PRSN_NAME
		         ,  A.BROK_PRSN_EMAIL
		         ,  A.BROK_PRSN_PHONE
		         ,  A.INPUT_PATH

		    FROM                ATX110T     A  WITH (NOLOCK)
		            INNER JOIN  BOR120T     B  WITH (NOLOCK) ON  B.COMP_CODE        =  A.COMP_CODE
		                                                    AND  B.DIV_CODE         =  A.SALE_DIV_CODE
		            INNER JOIN  BCM100T     C  WITH (NOLOCK) ON  C.COMP_CODE        =  A.COMP_CODE
		                                                    AND  C.CUSTOM_CODE      =  A.CUSTOM_CODE
		            INNER JOIN  BOR120T     D  WITH (NOLOCK) ON  D.COMP_CODE        =  B.COMP_CODE
		                                                    AND  D.DIV_CODE         =  B.BILL_DIV_CODE
		            LEFT  JOIN  BCM100T     E  WITH (NOLOCK) ON  E.COMP_CODE        =  A.COMP_CODE
		                                                    AND  E.CUSTOM_CODE      =  A.COLET_CUST_CD
		            LEFT  JOIN  BSA100T     M1 WITH (NOLOCK) ON M1.COMP_CODE        =  A.COMP_CODE
		                                                    AND M1.MAIN_CODE        =  N'A022'
		                                                    AND M1.SUB_CODE         =  A.BILL_TYPE
		    WHERE   A.COMP_CODE         =  #{S_COMP_CODE}
		    AND     A.PLUS_MINUS_TYPE   =  N'+'
		    <if test="@foren.Ognl@isNotEmpty(SALE_DIV_CODE)">
			AND     A.SALE_DIV_CODE     =  #{SALE_DIV_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(FR_DATE)">
		    AND     A.BILL_DATE        &gt;=  #{FR_DATE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(TO_DATE)">		 
		    AND     A.BILL_DATE        &lt;=  #{TO_DATE}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
				AND A.CUSTOM_CODE = #{CUSTOM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
				AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>		    
		    <if test="@foren.Ognl@isEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">    		    
		    AND    (CASE @RefItem WHEN '1' THEN C.CUSTOM_NAME1
		                          WHEN '2' THEN C.CUSTOM_NAME2
										   ELSE C.CUSTOM_NAME
		                END       LIKE  '%' + #{CUSTOM_NAME} + '%')
		    </if>            
			<if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">		                    
		    AND     A.PROJECT_NO  LIKE  	#{PROJECT_NO} + '%'
		    </if>		    
			<if test="@foren.Ognl@isNotEmpty(BILL_PUBLISH_TYPE)">		                    
		    AND     A.BILL_PUBLISH_TYPE  =  	#{BILL_PUBLISH_TYPE}
		    </if>		    
		    
		    ORDER   BY
		            D.DIV_NAME, A.PUB_NUM, C.CUSTOM_NAME
		-------------------------------------------------------------------------------------------------------------
		
		    SET ARITHABORT OFF
		    SET NOCOUNT OFF
		END
	</select>
	
	<select id="atx110ukrServiceImpl.selectMasterList" parameterType="Map" resultType="rMap">
		--selectMasterList : atx110ukr.Catx110ukr[fnAtx110QStd] Query01
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE         @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
		                  , @DIV_CODE           NVARCHAR(08)                -- (필수) 신고사업장
		                  , @PUB_NUM            NVARCHAR(20)                -- (필수) 세금계산서번호
		                  , @USER_ID            NVARCHAR(100)                -- (필수) 사용자
		
		--  [ 변수 값 할당 ] ----------------------------------------------------------------------------------------
		    SET  @COMP_CODE         = #{S_COMP_CODE}
		    SET  @DIV_CODE          = #{BILL_DIV_CODE}
		    SET  @PUB_NUM           = #{PUB_NUM}
		    SET  @USER_ID           = #{S_USER_ID}
		
		--  [ 데이터 조회 ] -----------------------------------------------------------------------------------------
		    SELECT  
		            A.DIV_CODE
		         ,  D.COMPANY_NUM                                                   AS OWN_COMNUM
		         ,  D.REPRE_NAME                                                    AS OWN_TOPNAME
		         ,  D.ADDR                                                          AS OWN_ADDR
		         ,  D.COMP_CLASS                                                    AS OWN_COMCLASS
		         ,  D.COMP_TYPE                                                     AS OWN_COMTYPE
		         ,  ISNULL(D.SUB_DIV_NUM, '')                                       AS OWN_SERVANTNUM
		         ,  A.PUB_NUM
		         ,  A.BEFORE_PUB_NUM
		         ,  A.ORIGINAL_PUB_NUM
		         ,  A.BILL_DATE
		         ,  A.PUB_FR_DATE
		         ,  A.PUB_TO_DATE
		         ,  A.CUSTOM_CODE
		         ,  C.CUSTOM_NAME
		         ,  C.COMPANY_NUM                                                   AS CUST_COMNUM
		         ,  C.TOP_NAME                                                      AS CUST_TOPNAME
		         ,  A.ADDR                                                          AS CUST_ADDR
		         ,  C.COMP_CLASS                                                    AS CUST_COMCLASS
		         ,  C.COMP_TYPE                                                     AS CUST_COMTYPE
		         ,  C.SET_METH
		         ,  ISNULL(A.SERVANT_COMPANY_NUM, '')                               AS CUST_SERVANTNUM
		         ,  ISNULL(A.BFO_ISSU_ID, '')                                       AS BFO_ISSU_ID
		         ,  A.SALE_AMT_O
		         ,  A.TAX_AMT_O
		         ,  ISNULL(A.COLET_AMT,0)                                           AS COLET_AMT
		         ,  A.REMARK
		         ,  A.PROJECT_NO
		         ,  A.BILL_TYPE
		         ,  A.UPDATE_DB_USER
		         ,  A.SALE_DIV_CODE
		         ,  A.COLLECT_CARE
		         ,  A.EX_NUM
		         ,  A.EX_DATE
		         ,  A.AC_DATE
		         ,  A.RECEIPT_PLAN_DATE
		         ,  A.TAX_CALC_TYPE
		         ,  ISNULL(A.SALE_AMT_O, 0) + ISNULL(A.TAX_AMT_O, 0)                AS SALE_TOT_AMT
		         ,  A.BILL_FLAG
		         ,  ISNULL(A.MODI_REASON, '')                                       AS MODI_REASON
		         ,  ISNULL(A.EB_NUM, '')                                            AS EB_NUM
		         ,  ISNULL(A.ISSU_ID, '')                                           AS ISSU_ID
		         ,  A.DEPT_CODE
		         ,  A.BUSI_TYPE
		         ,  A.PROOF_KIND
		         ,  ISNULL(A.SALE_PRSN, '')                                         AS SALE_PRSN
		         ,  A.SEND_NAME
		         ,  ISNULL(A.SEND_EMAIL, '') 										AS SEND_EMAIL
		         ,  A.BILL_GUBUN
		         ,  F.TREE_NAME														AS DEPT_NAME
		         ,  A.BROK_CUSTOM_CODE
		         ,  A.BROK_PRSN_NAME
		         ,  A.BROK_PRSN_EMAIL
		         ,  A.SEND_NAME
		         ,  A.SEND_EMAIL
		         ,  A.PRSN_NAME
		         ,  A.PRSN_EMAIL
		         ,  A.PRSN_PHONE
		         ,  A.PRSN_HANDPHONE
		         ,  A.SMS_CHECK
		         ,  A.BILL_SEND_YN
		         ,  A.ERR_MSG		     
		         ,  A.INPUT_PATH    
		    	 ,  A.AGREE_YN
		    FROM               ATX110T      A  WITH(NOLOCK)
		            LEFT JOIN  BOR120T      B  WITH(NOLOCK)  ON  B.COMP_CODE    =  A.COMP_CODE
		                                                    AND  B.DIV_CODE     =  A.SALE_DIV_CODE
		            LEFT JOIN  BCM100T      C  WITH(NOLOCK)  ON  C.COMP_CODE    =  A.COMP_CODE
		                                                    AND  C.CUSTOM_CODE  =  A.CUSTOM_CODE
		            LEFT JOIN  BOR120T      D  WITH(NOLOCK)  ON  D.COMP_CODE    =  B.COMP_CODE
		                                                    AND  D.DIV_CODE     =  B.BILL_DIV_CODE
		            LEFT JOIN  BSA210T      F  WITH(NOLOCK)  ON  F.COMP_CODE    =  A.COMP_CODE
		            										AND  F.TREE_CODE    =  A.DEPT_CODE
		        											AND  F.USE_YN       = 'Y' 
		
		   
		      
		    WHERE   A.COMP_CODE     =  @COMP_CODE
		    AND     A.DIV_CODE      =  @DIV_CODE
		    AND     A.PUB_NUM       =  @PUB_NUM
		-------------------------------------------------------------------------------------------------------------
		
		    SET ARITHABORT OFF
		    SET NOCOUNT OFF
		END
	</select>
	
	<select id="atx110ukrServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		--atx110ukr.Catx110ukr[fnAtx110QStd] Query02
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE         @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
		                  , @DIV_CODE           NVARCHAR(08)                -- (필수) 신고사업장
		                  , @PUB_NUM            NVARCHAR(20)                -- (필수) 세금계산서번호
		                  , @USER_ID            NVARCHAR(100)                -- (필수) 사용자
		
		--  [ 변수 값 할당 ] ----------------------------------------------------------------------------------------
		    SET  @COMP_CODE         = #{S_COMP_CODE}
		    SET  @DIV_CODE          = #{BILL_DIV_CODE}
		    SET  @PUB_NUM           = #{PUB_NUM}
		    SET  @USER_ID           = #{S_USER_ID}
		
		--  [ 데이터 조회 ] -----------------------------------------------------------------------------------------
		    SELECT  
		            A.COMP_CODE
		         ,  A.DIV_CODE
		         ,  A.SEQ
		         ,  A.PUB_NUM
		         ,  A.REMARK
		         ,  A.SALE_LOC_AMT_I
		         ,  A.SALE_AMT_O
		         ,  A.TAX_AMT_O
		         ,  A.CUSTOM_CODE
		         ,  A.PROJECT_NO
		         ,  A.SALE_PROFIT
		         ,  A.SALE_DIV_CODE
		         ,  A.EX_DATE
		         ,  A.EX_NUM
		         ,  A.AC_DATE
		         ,  A.AC_NUM
		         ,  A.AGREE_YN
		         ,  A.CLOSING_YN
		         ,  A.BIGO
		         ,  B1.PRSN_NAME
		         ,  B1.PRSN_EMAIL
		         ,  B1.PRSN_PHONE
		         ,  B1.PRSN_HANDPHONE
		         ,  B1.SMS_CHECK
		         
		         ,  B1.BILL_PUBLISH_TYPE
		         ,  B1.BROK_CUSTOM_CODE
		         ,  B1.BROK_PRSN_NAME
		         ,  B1.BROK_PRSN_EMAIL
		         ,  B1.BROK_PRSN_PHONE
		         ,  B1.INPUT_PATH
		    FROM                ATX111T     A  WITH (NOLOCK)
		            INNER JOIN  BOR120T     C1 WITH (NOLOCK) ON C1.COMP_CODE    =  A.COMP_CODE
		                                                    AND C1.DIV_CODE     =  A.SALE_DIV_CODE
		            INNER JOIN  ATX110T     B1 WITH (NOLOCK) ON B1.COMP_CODE    =  A.COMP_CODE
		                                                    AND B1.DIV_CODE     =  A.DIV_CODE
		                                                    AND B1.PUB_NUM		=  A.PUB_NUM
		    WHERE   A.COMP_CODE     =  @COMP_CODE
		    AND     A.DIV_CODE      =  @DIV_CODE
		    AND     A.PUB_NUM       =  @PUB_NUM
		    ORDER   BY A.PUB_NUM
		-------------------------------------------------------------------------------------------------------------
		
		    SET ARITHABORT OFF
		    SET NOCOUNT OFF
		END
				
	</select>

	<select id="atx110ukrServiceImpl.getProofKind" parameterType="Map" resultType="rMap">
		SELECT REF_CODE2 
		  FROM BSA100T  WITH (NOLOCK)
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND MAIN_CODE	= #{MAIN_CODE}
		   AND SUB_CODE		= #{SUB_CODE}
	</select>	
	
    <select id="atx110ukrServiceImpl.getBillSendCloseChk" parameterType="Map" resultType="rMap">
    	/*국세청전송완료건 체크*/
    	BEGIN
		    SET NOCOUNT    ON
		    SET ARITHABORT ON

		    BEGIN 
		        SELECT ISNULL(REQ_STAT_CODE, '') AS REPORT_STAT
		          FROM ATX110T  WITH (NOLOCK)
		         WHERE COMP_CODE	= #{S_COMP_CODE}
		           AND DIV_CODE		= #{SALE_DIV_CODE}
		           AND PUB_NUM		= #{PUB_NUM}
		           AND ISSU_ID		= #{BILL_SEQ}
		    END
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	
    </select>
	

 	

<!-- 세금계산서 등록 저장 로직 -->
	<insert id="atx110ukrServiceImpl.insertLogMaster" parameterType="Map"> 
		INSERT INTO L_ATX110T_M   
			( 
			  KEY_VALUE
			, OPR_FLAG
			, COMP_CODE
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			, DIV_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(PUB_NUM)">
			, PUB_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_TYPE)">
			, BILL_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_DATE)">
			, BILL_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(PUB_FR_DATE)">
			, PUB_FR_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(PUB_TO_DATE)">
			, PUB_TO_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			, CUSTOM_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_AMT_O)">
			, SALE_AMT_O
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_LOC_AMT_I)">
			, SALE_LOC_AMT_I
		</if>
		<if test="@foren.Ognl@isNotEmpty(TAX_AMT_O)">
			, TAX_AMT_O
		</if>
		<if test="@foren.Ognl@isNotEmpty(COLET_CUST_CD)">
			, COLET_CUST_CD
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
			, REMARK
		</if>
		<if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
			, PROJECT_NO
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_PROFIT)">
			, SALE_PROFIT
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_DIV_CODE)">
			, SALE_DIV_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(COLLECT_CARE)">
			, COLLECT_CARE
		</if>
		<if test="@foren.Ognl@isNotEmpty(EX_DATE)">
			, EX_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(EX_NUM)">
			, EX_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(AC_DATE)">
			, AC_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(AC_NUM)">
			, AC_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(AGREE_YN)">
			, AGREE_YN
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIPT_PLAN_DATE)">
			, RECEIPT_PLAN_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(TAX_CALC_TYPE)">
			, TAX_CALC_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(CLOSING_YN)">
			, CLOSING_YN
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_GUBUN)">
			, BILL_GUBUN
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_PUBLISH_TYPE)">
			, BILL_PUBLISH_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_FLAG)">
			, BILL_FLAG
		</if>
		<if test="@foren.Ognl@isNotEmpty(MODI_REASON)">
			, MODI_REASON
		</if>
		<if test="@foren.Ognl@isNotEmpty(SERVANT_COMPANY_NUM)">
			, SERVANT_COMPANY_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(BUSI_TYPE)">
			, BUSI_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(PROOF_KIND)">
			, PROOF_KIND
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
			, DEPT_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
			, PJT_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRSN_NAME)">
			, PRSN_NAME
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRSN_EMAIL)">
			, PRSN_EMAIL
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRSN_PHONE)">
			, PRSN_PHONE
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRSN_HANDPHONE)">
			, PRSN_HANDPHONE
		</if>
		<if test="@foren.Ognl@isNotEmpty(SMS_CHECK)">
			, SMS_CHECK
		</if>
		<if test="@foren.Ognl@isNotEmpty(BEFORE_PUB_NUM)">
			, BEFORE_PUB_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORIGINAL_PUB_NUM)">
			, ORIGINAL_PUB_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(PLUS_MINUS_TYPE)">
			, PLUS_MINUS_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(BFO_ISSU_ID)">
			, BFO_ISSU_ID
		</if>
		<if test="@foren.Ognl@isNotEmpty(BROK_CUSTOM_CODE)">
			, BROK_CUSTOM_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(BROK_PRSN_NAME)">
			, BROK_PRSN_NAME
		</if>
		<if test="@foren.Ognl@isNotEmpty(BROK_PRSN_EMAIL)">
			, BROK_PRSN_EMAIL
		</if>
		<if test="@foren.Ognl@isNotEmpty(BROK_PRSN_PHONE)">
			, BROK_PRSN_PHONE
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_SEND_YN)">
			, BILL_SEND_YN
		</if>
		<if test="@foren.Ognl@isNotEmpty(EB_NUM)">
			, EB_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(EB_SEQ)">
			, EB_SEQ
		</if>
		<if test="@foren.Ognl@isNotEmpty(COMPANY_NUM)">
			, COMPANY_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			, CUSTOM_NAME
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOP_NAME)">
			, TOP_NAME
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR)">
			, ADDR
		</if>
		<if test="@foren.Ognl@isNotEmpty(COMP_CLASS)">
			, COMP_CLASS
		</if>
		<if test="@foren.Ognl@isNotEmpty(COMP_TYPE)">
			, COMP_TYPE
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIVE_PRSN_NAME)">
			, RECEIVE_PRSN_NAME
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIVE_PRSN_EMAIL)">
			, RECEIVE_PRSN_EMAIL
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIVE_PRSN_TEL)">
			, RECEIVE_PRSN_TEL
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIVE_PRSN_MOBL)">
			, RECEIVE_PRSN_MOBL
		</if>
		<if test="@foren.Ognl@isNotEmpty(ISSU_ID)">
			, ISSU_ID
		</if>
		<if test="@foren.Ognl@isNotEmpty(STAT_CODE)">
			, STAT_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(REQ_STAT_CODE)">
			, REQ_STAT_CODE
		</if>
		<if test="@foren.Ognl@isNotEmpty(ERR_CD)">
			, ERR_CD
		</if>
		<if test="@foren.Ognl@isNotEmpty(ERR_MSG)">
			, ERR_MSG
		</if>
		<if test="@foren.Ognl@isNotEmpty(APP_ID)">
			, APP_ID
		</if>
		<if test="@foren.Ognl@isNotEmpty(IF_NUM)">
			, IF_NUM
		</if>
		<if test="@foren.Ognl@isNotEmpty(SEND_NAME)">
			, SEND_NAME
		</if>
		<if test="@foren.Ognl@isNotEmpty(SEND_EMAIL)">
			, SEND_EMAIL
		</if>
		<if test="@foren.Ognl@isNotEmpty(INPUT_PATH)">
			, INPUT_PATH
		</if>
			, INSERT_DB_USER
			, INSERT_DB_TIME
			) 
		VALUES
			(
			  #{KEY_VALUE}
			, #{OPR_FLAG}
			, #{COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
			, #{DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PUB_NUM)">
			, #{PUB_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_TYPE)">
			, #{BILL_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_DATE)">
			, #{BILL_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PUB_FR_DATE)">
			, #{PUB_FR_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PUB_TO_DATE)">
			, #{PUB_TO_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			, #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_AMT_O)">
			, #{SALE_AMT_O}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_LOC_AMT_I)">
			, #{SALE_LOC_AMT_I}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TAX_AMT_O)">
			, #{TAX_AMT_O}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COLET_CUST_CD)">
			, #{COLET_CUST_CD}
		</if>
		<if test="@foren.Ognl@isNotEmpty(REMARK)">
			, #{REMARK}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
			, #{PROJECT_NO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_PROFIT)">
			, #{SALE_PROFIT}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_DIV_CODE)">
			, #{SALE_DIV_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COLLECT_CARE)">
			, #{COLLECT_CARE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(EX_DATE)">
			, #{EX_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(EX_NUM)">
			, #{EX_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AC_DATE)">
			, #{AC_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AC_NUM)">
			, #{AC_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(AGREE_YN)">
			, #{AGREE_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIPT_PLAN_DATE)">
			, #{RECEIPT_PLAN_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TAX_CALC_TYPE)">
			, #{TAX_CALC_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CLOSING_YN)">
			, #{CLOSING_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_GUBUN)">
			, #{BILL_GUBUN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_PUBLISH_TYPE)">
			, #{BILL_PUBLISH_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_FLAG)">
			, #{BILL_FLAG}
		</if>
		<if test="@foren.Ognl@isNotEmpty(MODI_REASON)">
			, #{MODI_REASON}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SERVANT_COMPANY_NUM)">
			, #{SERVANT_COMPANY_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BUSI_TYPE)">
			, #{BUSI_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PROOF_KIND)">
			, #{PROOF_KIND}
		</if>
		<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
			, #{DEPT_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
			, #{PJT_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRSN_NAME)">
			, #{PRSN_NAME}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRSN_EMAIL)">
			, #{PRSN_EMAIL}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRSN_PHONE)">
			, REPLACE(#{PRSN_PHONE}, '-','')
		</if>
		<if test="@foren.Ognl@isNotEmpty(PRSN_HANDPHONE)">
			, REPLACE(#{PRSN_HANDPHONE}, '-','')
		</if>
		<if test="@foren.Ognl@isNotEmpty(SMS_CHECK)">
			, #{SMS_CHECK}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BEFORE_PUB_NUM)">
			, #{BEFORE_PUB_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORIGINAL_PUB_NUM)">
			, #{ORIGINAL_PUB_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PLUS_MINUS_TYPE)">
			, #{PLUS_MINUS_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BFO_ISSU_ID)">
			, #{BFO_ISSU_ID}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BROK_CUSTOM_CODE)">
			, #{BROK_CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BROK_PRSN_NAME)">
			, #{BROK_PRSN_NAME}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BROK_PRSN_EMAIL)">
			, #{BROK_PRSN_EMAIL}
		</if>
		<if test="@foren.Ognl@isNotEmpty(BROK_PRSN_PHONE)">
			, REPLACE(#{BROK_PRSN_PHONE}, '-','')
		</if>
		<if test="@foren.Ognl@isNotEmpty(BILL_SEND_YN)">
			, #{BILL_SEND_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(EB_NUM)">
			, #{EB_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(EB_SEQ)">
			, #{EB_SEQ}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COMPANY_NUM)">
			, #{COMPANY_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			, #{CUSTOM_NAME}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TOP_NAME)">
			, #{TOP_NAME}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ADDR)">
			, #{ADDR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COMP_CLASS)">
			, #{COMP_CLASS}
		</if>
		<if test="@foren.Ognl@isNotEmpty(COMP_TYPE)">
			, #{COMP_TYPE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIVE_PRSN_NAME)">
			, #{RECEIVE_PRSN_NAME}
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIVE_PRSN_EMAIL)">
			, #{RECEIVE_PRSN_EMAIL}
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIVE_PRSN_TEL)">
			, REPLACE(#{RECEIVE_PRSN_TEL}, '-','')
		</if>
		<if test="@foren.Ognl@isNotEmpty(RECEIVE_PRSN_MOBL)">
			, REPLACE(#{RECEIVE_PRSN_MOBL}, '-','')
		</if>
		<if test="@foren.Ognl@isNotEmpty(ISSU_ID)">
			, #{ISSU_ID}
		</if>
		<if test="@foren.Ognl@isNotEmpty(STAT_CODE)">
			, #{STAT_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(REQ_STAT_CODE)">
			, #{REQ_STAT_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ERR_CD)">
			, #{ERR_CD}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ERR_MSG)">
			, #{ERR_MSG}
		</if>
		<if test="@foren.Ognl@isNotEmpty(APP_ID)">
			, #{APP_ID}
		</if>
		<if test="@foren.Ognl@isNotEmpty(IF_NUM)">
			, #{IF_NUM}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SEND_NAME)">
			, #{SEND_NAME}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SEND_EMAIL)">
			, #{SEND_EMAIL}
		</if>
		<if test="@foren.Ognl@isNotEmpty(INPUT_PATH)">
			, #{INPUT_PATH}
		</if>
			, #{S_USER_ID}
			, GETDATE()
			)	          
 	</insert>

<!-- 	insertLogMaster2 -> insertLogMaster1 사용
 	<insert id="atx110ukrServiceImpl.insertLogMaster2" parameterType="Map"> 
		INSERT INTO L_ATX110T_M   
			( 
			  KEY_VALUE
			, OPR_FLAG
			, COMP_CODE
			, DIV_CODE
			, PUB_NUM
			, BILL_TYPE
			, BILL_DATE
			, PUB_FR_DATE
			, PUB_TO_DATE
			, CUSTOM_CODE
			, SALE_AMT_O
			, SALE_LOC_AMT_I
			, TAX_AMT_O
			, COLET_AMT
			, COLET_CUST_CD
			, REMARK
			, PROJECT_NO
			, SALE_PROFIT
			, SALE_DIV_CODE
			, COLLECT_CARE
			, EX_DATE
			, EX_NUM
			, AC_DATE
			, AC_NUM
			, AGREE_YN
			, RECEIPT_PLAN_DATE
			, TAX_CALC_TYPE
			, CLOSING_YN
			, BILL_GUBUN
			, BILL_PUBLISH_TYPE
			, BILL_FLAG
			, MODI_REASON
			, SERVANT_COMPANY_NUM
			, BUSI_TYPE
			, PROOF_KIND
			, DEPT_CODE
			, SALE_PRSN
			, PJT_CODE
			, PRSN_NAME
			, PRSN_EMAIL
			, BEFORE_PUB_NUM
			, ORIGINAL_PUB_NUM
			, PLUS_MINUS_TYPE
			, BFO_ISSU_ID
			, BROK_CUSTOM_CODE
			, BROK_PRSN_NAME
			, BROK_PRSN_EMAIL
			, BILL_SEND_YN
			, EB_NUM
			, EB_SEQ
			, COMPANY_NUM
			, CUSTOM_NAME
			, TOP_NAME
			, ADDR
			, COMP_CLASS
			, COMP_TYPE
			, RECEIVE_PRSN_NAME
			, RECEIVE_PRSN_EMAIL
			, RECEIVE_PRSN_TEL
			, RECEIVE_PRSN_MOBL
			, ISSU_ID
			, STAT_CODE
			, REQ_STAT_CODE
			, ERR_CD
			, ERR_MSG
			, APP_ID
			, IF_NUM
			, SEND_PNAME
			, INSERT_DB_USER
			, INSERT_DB_TIME
			) 
		VALUES
			(
			  #{M_KEY_VALUE}
			, #{M_OPR_FLAG}
			, #{M_COMP_CODE}
			, #{M_DIV_CODE}
			, #{M_PUB_NUM}
			, #{M_BILL_TYPE}
			, #{M_BILL_DATE}
			, #{M_PUB_FR_DATE}
			, #{M_PUB_TO_DATE}
			, #{M_CUSTOM_CODE}
			, #{M_SALE_AMT_O}
			, #{M_SALE_LOC_AMT_I}
			, #{M_TAX_AMT_O}
			, #{M_COLET_AMT}
			, #{M_COLET_CUST_CD}
			, #{M_REMARK}
			, #{M_PROJECT_NO}
			, #{M_SALE_PROFIT}
			, #{M_SALE_DIV_CODE}
			, #{M_COLLECT_CARE}
			, #{M_EX_DATE}
			, #{M_EX_NUM}
			, #{M_AC_DATE}
			, #{M_AC_NUM}
			, #{M_AGREE_YN}
			, #{M_RECEIPT_PLAN_DATE}
			, #{M_TAX_CALC_TYPE}
			, #{M_CLOSING_YN}
			, #{M_BILL_GUBUN}
			, #{M_BILL_PUBLISH_TYPE}
			, #{M_BILL_FLAG}
			, #{M_MODI_REASON}
			, #{M_SERVANT_COMPANY_NUM}
			, #{M_BUSI_TYPE}
			, #{M_PROOF_KIND}
			, #{M_DEPT_CODE}
			, #{M_SALE_PRSN}
			, #{M_PJT_CODE}
			, #{M_PRSN_NAME}
			, #{M_PRSN_EMAIL}
			, #{M_BEFORE_PUB_NUM}
			, #{M_ORIGINAL_PUB_NUM}
			, #{M_PLUS_MINUS_TYPE}
			, #{M_BFO_ISSU_ID}
			, #{M_BROK_CUSTOM_CODE}
			, #{M_BROK_PRSN_NAME}
			, #{M_BROK_PRSN_EMAIL}
			, #{M_BILL_SEND_YN}
			, #{M_EB_NUM}
			, #{M_EB_SEQ}
			, #{M_COMPANY_NUM}
			, #{M_CUSTOM_NAME}
			, #{M_TOP_NAME}
			, #{M_ADDR}
			, #{M_COMP_CLASS}
			, #{M_COMP_TYPE}
			, #{M_RECEIVE_PRSN_NAME}
			, #{M_RECEIVE_PRSN_EMAIL}
			, #{M_RECEIVE_PRSN_TEL}
			, #{M_RECEIVE_PRSN_MOBL}
			, #{M_ISSU_ID}
			, #{M_STAT_CODE}
			, #{M_REQ_STAT_CODE}
			, #{M_ERR_CD}
			, #{M_ERR_MSG}
			, #{M_APP_ID}
			, #{M_IF_NUM}
			, #{M_SEND_PNAME}
			, #{S_COMP_CODE}
			, GETDATE()
			)	   	  		          
 	</insert>                                                   
-->

	<insert id="atx110ukrServiceImpl.insertLogDetail" parameterType="Map">
		INSERT INTO L_ATX110T_D
			(      KEY_VALUE
				 , OPR_FLAG
				 , COMP_CODE
			     , DIV_CODE
			     , PUB_NUM
			     , SEQ
			     , REMARK
			     , SALE_AMT_O
			     , SALE_LOC_AMT_I
			     , TAX_AMT_O
			     , CUSTOM_CODE
			     , PROJECT_NO   
				 , SALE_PROFIT  
				 , SALE_DIV_CODE
				 , EX_DATE      
				 , EX_NUM       
				 , AC_DATE      
				 , AC_NUM       
				 , AGREE_YN     
				 , CLOSING_YN   
				 , BIGO  
			     , INSERT_DB_USER
			     , INSERT_DB_TIME       
			)
			VALUES
			(
				   #{KEY_VALUE}
		       	 , #{OPR_FLAG}
				 , #{S_COMP_CODE}
			     , #{DIV_CODE}
			     , #{PUB_NUM}
			     , #{SEQ}
			     , #{REMARK}
			     , #{SALE_AMT_O}
			     , #{SALE_LOC_AMT_I}
			     , #{TAX_AMT_O}
			     , #{CUSTOM_CODE}
			     , #{PROJECT_NO}
				 , #{SALE_PROFIT}  
				 , #{SALE_DIV_CODE}
				 , #{EX_DATE}     
				 , #{EX_NUM}     
				 , #{AC_DATE}     
				 , #{AC_NUM}      
				 , #{AGREE_YN}    
				 , #{CLOSING_YN}  
				 , #{BIGO}  
			     , #{S_USER_ID}
			     , GETDATE() 
		     )      
 	</insert>	

	<update id="atx110ukrServiceImpl.USP_ACCNT_ATX110UKR" parameterType="Map" statementType="CALLABLE">		
		{
			call USP_ACCNT_ATX110UKR (
				#{KEY_VALUE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
				#{LANG_TYPE		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
				#{USER_ID		, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
				#{PUB_NUM		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
				#{ERROR_DESC	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
			)
		}
	</update>
	
	
	
	
<!-- 전자세금계산서 전송 -->	
	<select id="atx110ukrServiceImpl.getFromAtx110T" parameterType="Map" resultType="rMap">
		/* '웹캐시연계 */
		/* sBwrLangFld 다국어 설정은 일단 대기 */
	    BEGIN
	    
	            SET NOCOUNT ON
	            SET ARITHABORT ON
	    
	            SELECT A.COMP_CODE
		             , CASE WHEN A.ERR_CD != '000000' AND A.ERR_CD != 'SEND' THEN 'Error'
                            ELSE M2.CODE_NAME
	                   END                                                                      AS TRANSYN_NAME     /* -- 전송여부명		*/
	                 , ISNULL(A.STAT_CODE, '')                                                  AS STAT_CODE        /* -- 상태				*/
	                 , ISNULL(M3.CODE_NAME, '')	 /* sBwrLangFld */                            	AS STS              /* -- 상태				*/
	                 , CONVERT(NVARCHAR, A.CRT_LOC)                                             AS CRT_LOC          /* -- 생성경로			*/
	                 , A.BILL_FLAG                                                              AS BILL_FLAG        /* -- 세금계산서구분	*/
	                 
	                 , CASE WHEN A.BILL_FLAG = '1' THEN ( CASE WHEN A.BILL_PUBLISH_TYPE = '3' THEN  /* 위수탁 */
				                 				                                                    CASE WHEN A.BILL_TYPE = '11' THEN '0103'					/* --과세	  */
												                                                         WHEN A.BILL_TYPE = '20' THEN '0303'					/* --면세	  */
												                                                         WHEN A.BILL_TYPE = '12' THEN '0105'					/* --영세율 */
												                                                    END

	                 										   ELSE /* --정상 */
				                                                      CASE WHEN A.BILL_TYPE = '11' THEN '0101'					/* --과세	  */
				                                                           WHEN A.BILL_TYPE = '20' THEN '0301'					/* --면세	  */
				                                                           WHEN A.BILL_TYPE = '12' THEN '0102'					/* --영세율 */
				                                                       END
				                                           END
	                                                    )
	                        WHEN A.BILL_FLAG = '2' THEN ( /* --수정 */														  
	                                                      CASE WHEN A.BILL_TYPE = '11' THEN '0201'					/* --과세		*/
	                                                           WHEN A.BILL_TYPE = '20' THEN '0401'					/* --면세		*/
	                                                           WHEN A.BILL_TYPE = '12' THEN '0202'					/* --영세율	*/
	                                                       END
	                                                    )
	                    END                                                                     AS TAX_TYPE         /* -- 세금계산서종류 */
	    
	                 , A.BILL_GUBUN                                                             AS POPS_CODE        /* -- 영수/청구 구분		*/
	                 , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.BILL_DATE)                      AS REGS_DATE        /* -- 발행일				*/
	                 , C1.COMPANY_NUM                                                           AS SELR_CORP_NO     /* -- 공급자 사업자번호		*/
	                 , CASE WHEN ISNULL(C1.DIV_FULL_NAME, '') = '' THEN C1.DIV_NAME
	                                                               ELSE C1.DIV_FULL_NAME														
	                    END                                                                     AS SELR_CORP_NM     /* -- 공급자 업체명			*/
	                 , C1.SUB_DIV_NUM                                                           AS SELR_CODE        /* -- 공급자 종사업장번호	*/
	                 , C1.REPRE_NAME                                                            AS SELR_CEO         /* -- 공급자 대표자명		*/
	                 , C1.COMP_TYPE                                                             AS SELR_BUSS_CONS   /* -- 공급자 업태			*/
	                 , C1.COMP_CLASS                                                            AS SELR_BUSS_TYPE   /* -- 공급자 업종			*/
	                 , C1.ADDR                                                                  AS SELR_ADDR        /* -- 공급자 주소			*/
					 , CASE WHEN ISNULL(A.SEND_NAME, '') != ''  THEN A.SEND_NAME
															    ELSE (CASE WHEN ISNULL(E1.CODE_NAME, '') != '' THEN E1.CODE_NAME /* sBwrLangFld */ 
																											   ELSE ( CASE WHEN ISNULL(E2.CODE_NAME /* sBwrLangFld */ , '') != '' THEN E2.CODE_NAME /* sBwrLangFld */ 
																																												  ELSE ''
																													  END )
																      END)
	                                                           
	                   END                                                                      AS SELR_CHRG_NM     /* -- 공급자 담당자명	*/
	                 , CASE WHEN ISNULL(E3.TREE_NAME, '') != '' THEN E3.TREE_NAME
	                                                            ELSE ( CASE WHEN ISNULL(E4.TREE_NAME, '') != '' THEN E4.TREE_NAME
	                                                                                                            ELSE ''
	                                                                    END )
	                                                           
	                    END                                                                     AS SELR_CHRG_POST   /* -- 공급자 부서명	*/
	                 , CASE WHEN ISNULL(E1.REF_CODE6, '') != '' THEN E1.REF_CODE6
	                                                            ELSE ( CASE WHEN ISNULL(E2.REF_CODE6, '') != '' THEN E2.REF_CODE6
	                                                                                                            ELSE C1.TELEPHON
	                                                                    END )
	                                                           
	                    END                                                                     AS SELR_CHRG_TEL    /* -- 공급자 전화번호	*/ 
	                 , CASE WHEN ISNULL(A.SEND_EMAIL, '') != '' THEN A.SEND_EMAIL
															    ELSE (CASE WHEN ISNULL(E1.REF_CODE7, '') != '' THEN E1.REF_CODE7
																											   ELSE ( CASE WHEN ISNULL(E2.REF_CODE7, '') != '' THEN E2.REF_CODE7
																													  										   ELSE C2.EMAIL
																													  END )
																	  END)
	                                                           
					   END                               										AS SELR_CHRG_EMAIL  /* -- 공급자 이메일주소	*/     
	                 , CASE WHEN ISNULL(E1.REF_CODE6, '') != '' THEN E1.REF_CODE6
	                                                            ELSE ( CASE WHEN ISNULL(E2.REF_CODE6, '') != '' THEN E2.REF_CODE6
	                                                                                                            ELSE C1.HANDPHONE
	                                                                    END )
	                    END                                                                     AS SELR_CHRG_MOBL   /* -- 공급자 휴대폰번호	*/
	                 , A.CUSTOM_CODE                                                            AS CUSTOM_CODE      /* -- 고객코드	*/
	                 , C.CUSTOM_FULL_NAME                                                       AS BUYR_CORP_NM     /* -- 고객명	*/
	                 , CASE WHEN C.BUSINESS_TYPE = '3' THEN '02'													/* -- 주민등록번호	*/
	                                                   ELSE '01'													/* -- 사업자등록번호	*/
	                    END                                                                     AS BUYR_GB          /* -- 공급받는자구분코드	*/
	                 , (CASE WHEN C.BUSINESS_TYPE = '3' THEN unilite.fnCipherDecrypt(C.TOP_NUM, 'A')
	                                                    ELSE SUBSTRING(C.COMPANY_NUM,1,3)
	                                                        + '-' + SUBSTRING(C.COMPANY_NUM,4,2)                          
	                                                        + '-' + SUBSTRING(C.COMPANY_NUM,6,5)
	                    END)                    												AS BUYR_CORP_NO		/* -- 공급받는자 사업자번호 	*/
	                 , A.SERVANT_COMPANY_NUM                                                    AS BUYR_CODE        /* -- 공급받는자 종사업자번호	*/
	                 , M1.CODE_NAME /* sBwrLangFld */                                           AS BILLTYPENAME     /* -- 계산서유형	*/
	                 , Z.REMARK 																AS ISSUE_DETAILS
	                 , A.SALE_LOC_AMT_I                                                         AS CHRG_AMT         /* -- 공급가액	*/
	                 , A.TAX_AMT_O                                                              AS TAX_AMT          /* -- 세액	*/
	                 , ISNULL(A.SALE_LOC_AMT_I, 0) + ISNULL(A.TAX_AMT_O, 0)                     AS TOTL_AMT         /* -- 합계	*/
	                 , C.TOP_NAME                                                               AS BUYR_CEO         /* -- 공급받는자 대표자명	*/
	                 , C.COMP_TYPE                                                              AS BUYR_BUSS_CONS   /* -- 공급받는자 업태	*/
	                 , C.COMP_CLASS                                                             AS BUYR_BUSS_TYPE   /* -- 공급받는자 업종	*/
	                 , ISNULL(C.ADDR1, '') + ISNULL(C.ADDR2, '')                                AS BUYR_ADDR        /* -- 공급받는자 주소	*/
	                 , A.PRSN_NAME																AS BUYR_CHRG_NM1    /* -- 전자문서담당자	*/
	                 , A.PRSN_PHONE                                                             AS BUYR_CHRG_TEL1	/* -- 전자문서전화번호	*/
	                 , A.PRSN_EMAIL                                                             AS BUYR_CHRG_EMAIL1 /* -- 전자문서E-MAIL		*/
	                 , (CASE WHEN ISNULL(A.PRSN_HANDPHONE  , '') = '' THEN (CASE WHEN ISNULL(C4.PRSN_NAME, '') = '' THEN ISNULL(C.HAND_PHON, C.TELEPHON)
					                                                             ELSE ISNULL(C4.HAND_PHON, C4.TELEPHONE_NUM1)
					                    									END)
	                         ELSE A.PRSN_HANDPHONE
	                    END)                                                                    AS BUYR_CHRG_MOBL1	/* -- 전자문서핸드폰	*/
	                 , C.BILL_PRSN2                                                             AS BUYR_CHRG_NM2    /* -- 전자문서담당자2		*/
	                 , C.HAND_PHON2                                                             AS BUYR_CHRG_MOBL2  /* -- 전자문서핸드폰2		*/
	                 , C.BILL_MAIL_ID2                                                          AS BUYR_CHRG_EMAIL2 /* -- 전자문서E-MAIL2		*/
				/* 수탁관련 데이터 */
					 , A.BROK_CUSTOM_CODE
					 , Z2.COMPANY_NUM															AS BROK_COMPANY_NUM
					 , Z2.TOP_NUM																AS BROK_TOP_NUM
					 , A.BROK_PRSN_NAME
					 , A.BROK_PRSN_EMAIL

	                 , B.SEND_LOG_TIME                                                          AS SEND_DATE         /* -- 전송일시			*/
	                 , A.EB_NUM                                                                 AS ISSU_SEQNO        /* -- 전자문서번호			*/
	                 , A.PUB_NUM                                                                AS SELR_MGR_ID3      /* -- 계산서번호			*/
	                 , ISNULL(A.REMARK, '')                                                     AS NOTE1             /* -- 비고				*/
	                 , ISNULL(A.MODI_REASON, '')                                                AS MODY_CODE         /* -- 수정코드			*/
	                 , CASE WHEN ISNULL(A.REQ_STAT_CODE, '') = '' THEN CASE WHEN A.BILL_FLAG = '2' THEN '06' ELSE '01' END 
	                 											  ELSE A.REQ_STAT_CODE
	                   END 																		AS REQ_STAT_CODE	 /* -- 요청상태코드		   	*/
	                 , ISNULL(A.REQ_STAT_CODE, CASE WHEN A.BILL_FLAG = '2' THEN '06' ELSE '01' END) AS REQ_STAT_CODE /* -- 요청상태코드		   	*/
	                 , ISNULL(A.BILL_PUBLISH_TYPE,'')                                           AS BILL_PUBLISH_TYPE /* -- 정/역/수탁발행 구분	*/
				<if test="BILL_PUBLISH_TYPE == &quot;2&quot;"> 
	                 , '2'					                                                 	AS BILL_TYPE         /* -- 매출/매입구분		*/
				</if>
				<if test="BILL_PUBLISH_TYPE != &quot;2&quot;"> 
	                 , '1'					                                                 	AS BILL_TYPE         /* -- 매출/매입구분		*/
				</if>
	                 , ISNULL(E5.REF_CODE1, 'N')                                                AS SND_MAIL_YN       /* -- EMail발행요청유무	*/
	                 , A.SMS_CHECK																AS SND_SMS_YN        /* -- SMS발행요청유무		*/
	                 , ISNULL(E7.REF_CODE1, 'N')                                                AS SND_FAX_YN        /* -- FAX발행요청유무		*/
	                 , A.COMP_CODE                                                              AS COMP_CODE         /* -- 법인코드            		*/
	                 , A.DIV_CODE                                                               AS DIV_CODE          /* -- 사업장코드			*/
	                 , A.SALE_DIV_CODE                                                          AS SALE_DIV_CODE     /* -- 사업장코드			*/
	                 , M3.REF_CODE1                                                             AS DEL_YN            /* -- 삭제가능여부			*/
	                 , ISNULL(A.MODI_REASON, '')                                                AS REPORT_AMEND_CD   /* -- 신고문서 수정사유코드	*/
	                 , A.BFO_ISSU_ID                                                            AS BFO_ISSU_ID       /* -- 당초승인번호			*/
	                 , A.ISSU_ID                                                                AS ISSU_ID           /* -- 국세청전송 일련번호		*/
	                 , A.BEFORE_PUB_NUM																				 /* -- 수정전세금계산서번호	*/
	                 , A.ORIGINAL_PUB_NUM																			 /* -- 원본세금계산서번호		*/
	                 , A.PLUS_MINUS_TYPE																			 /* -- 계산서 구분('+','-')	*/
	                 , CASE WHEN A.PLUS_MINUS_TYPE = '-' THEN 1
	                                                     ELSE 2
	                    END                                                                     AS SEQ_GUBUN		 /* -- 순번정열			*/
	                 , #{S_USER_ID}																AS S_USER_ID
	              FROM (
	                     /* -- 1.2 회계 세금계산서 테이블	*/
	                     SELECT  
	                            A.COMP_CODE
	                          , A.DIV_CODE
	                          , A.SALE_DIV_CODE
	                          , A.EB_NUM
	                          , A.BILL_DATE
	                          , A.CUSTOM_CODE
	                          , A.BILL_TYPE
	                          , A.BILL_SEND_YN
	                          , A.BILL_FLAG
	                          , A.SALE_LOC_AMT_I
	                          , A.TAX_AMT_O
	                          , A.PUB_NUM
	                          , A.MODI_REASON
	                          , A.REMARK
	                          , CASE WHEN A.BILL_GUBUN = '1' OR A.BILL_GUBUN = '01' THEN '01'
	                                 WHEN A.BILL_GUBUN = '2' OR A.BILL_GUBUN = '02' THEN '02'
	                             END                    AS BILL_GUBUN												/* -- 영수/청구 구분		*/
	                          , CONVERT(NVARCHAR, '3')  AS CRT_LOC													/* -- 생성경로		  	*/
	                          , ISNULL(A.SALE_PRSN, '') AS SALE_PRSN
	                          , A.BEFORE_PUB_NUM
	                          , A.ORIGINAL_PUB_NUM
	                          , A.PLUS_MINUS_TYPE
	                          , A.BFO_ISSU_ID
	                          , A.COMPANY_NUM
							  , A.SEND_NAME
							  , A.SEND_EMAIL
							  , A.SMS_CHECK
	                          , A.CUSTOM_NAME
	                          , A.TOP_NAME
	                          , A.ADDR
	                          , A.COMP_CLASS
	                          , A.COMP_TYPE
	                          , A.SERVANT_COMPANY_NUM
	                          , A.RECEIVE_PRSN_NAME
	                          , A.RECEIVE_PRSN_EMAIL
	                          , A.RECEIVE_PRSN_TEL
	                          , A.RECEIVE_PRSN_MOBL
							  , A.ISSU_ID
							  , A.ERR_MSG
							  , A.STAT_CODE
							  , A.REQ_STAT_CODE
							  , A.BILL_PUBLISH_TYPE
							  , A.ERR_CD
			                  , A.PRSN_NAME	
			                  , A.PRSN_PHONE 
			                  , A.PRSN_EMAIL 
			                  , A.PRSN_HANDPHONE
							  , A.BROK_CUSTOM_CODE
							  , A.BROK_PRSN_NAME
							  , A.BROK_PRSN_EMAIL
	                       FROM           ATX110T AS A WITH (NOLOCK)
	                            LEFT JOIN BCM100T AS C WITH (NOLOCK) ON C.COMP_CODE     = A.COMP_CODE
	                                                                AND C.CUSTOM_CODE   = A.CUSTOM_CODE
	                            LEFT JOIN BCM100T AS C1 WITH (NOLOCK) ON C1.COMP_CODE   = C.COMP_CODE                                    
	                                                                 AND C1.CUSTOM_CODE = C.MANAGE_CUSTOM
	
	                            /* --LEFT JOIN WEBCASH_DB. sETaxDBUser .ITIS_ISSU_MSTR AS D WITH(NOLOCK) ON D.ISSU_SEQNO = A.EB_NUM				--전자세금계산서 DB사용 안함 ATX110T에 컬럼 추가 */ 
	                            LEFT JOIN BSA100T AS M2 WITH (NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
	                                                                 AND M2.MAIN_CODE   = 'S099'
	                                                                 AND M2.SUB_CODE    = '3'
	                      WHERE   A.COMP_CODE         = #{S_COMP_CODE}
							AND   A.SALE_DIV_CODE     = #{SALE_DIV_CODE} 
							<if test="@foren.Ognl@isNotEmpty(PUB_NUM)">                     
							AND   A.PUB_NUM           = #{PUB_NUM} 
							</if>
	                    ) AS A
	                        LEFT JOIN (SELECT MAX(SEND_LOG_TIME) AS SEND_LOG_TIME
	                                        , DIV_CODE
	                                        , EB_NUM
	                                        , BILL_DATE
	                                        , CUSTOM_CODE
	                                        , MAX(EB_STEP) AS EB_STEP 
	                                        , COMP_CODE
	                                     FROM STB200T WITH (NOLOCK)
	                                    WHERE COMP_CODE  = #{S_COMP_CODE}
										<if test="@foren.Ognl@isNotEmpty(SALE_DIV_CODE)">                     
										  AND DIV_CODE = #{SALE_DIV_CODE} 
										</if>
	                                      AND EB_STEP IN('1', '2')                                                                  
	                                 GROUP BY COMP_CODE, DIV_CODE, EB_NUM, BILL_DATE, CUSTOM_CODE) AS B  ON B.COMP_CODE   = A.COMP_CODE
	                                                                                                    AND B.DIV_CODE    = A.DIV_CODE
	                                                                                                    AND B.EB_NUM      = A.EB_NUM
	                                                                                                    AND B.BILL_DATE   = A.BILL_DATE
	                                                                                                    AND B.CUSTOM_CODE = A.CUSTOM_CODE
	                        
	                        LEFT JOIN ATX111T AS Z WITH (NOLOCK) ON Z.COMP_CODE   = A.COMP_CODE										/* 정/역/수탁발행 구분 JOIN */
																AND Z.DIV_CODE	  = A.DIV_CODE
																AND Z.PUB_NUM	  = A.PUB_NUM
																AND Z.SEQ		  = 1
	                        LEFT JOIN BCM100T AS Z2 WITH (NOLOCK)ON Z2.COMP_CODE  = A.COMP_CODE										/* 수탁 관련 데이터 JOIN */
																AND Z2.CUSTOM_CODE= A.BROK_CUSTOM_CODE
	                        LEFT JOIN BCM100T AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
	                                                            AND C.CUSTOM_CODE = A.CUSTOM_CODE
	                        /* --LEFT JOIN WEBCASH_DB. sETaxDBUser .ITIS_ISSU_MSTR AS D  ON D.ISSU_SEQNO  = A.EB_NUM				--전자세금계산서 DB사용 안함 ATX110T에 컬럼 추가 */
	                        LEFT JOIN BOR120T AS C1 WITH (NOLOCK)  ON C1.COMP_CODE   = A.COMP_CODE
	                                                           AND C1.DIV_CODE    = A.DIV_CODE
	                        LEFT JOIN BOR100T AS C2 WITH (NOLOCK)  ON C2.COMP_CODE   = A.COMP_CODE                          
	                        LEFT JOIN BSA100T AS M1 WITH (NOLOCK)  ON M1.COMP_CODE   = A.COMP_CODE
	                                                           AND M1.MAIN_CODE   = 'B066'
	                                                           AND M1.SUB_CODE   != '$'
	                                                           AND M1.SUB_CODE    = CASE WHEN A.BILL_TYPE = '12' THEN '11'
	                                                                                                             ELSE A.BILL_TYPE
	                                                                                 END                        
	                        LEFT JOIN BSA100T AS M2 WITH (NOLOCK)  ON M2.COMP_CODE   = A.COMP_CODE
	                                                           AND M2.MAIN_CODE   = 'B087'
	                                                           AND M2.SUB_CODE   != '$'
	                                                           AND M2.SUB_CODE    = A.BILL_SEND_YN
	                        LEFT JOIN BSA100T AS M3 WITH (NOLOCK)  ON M3.COMP_CODE   = A.COMP_CODE
	                                                           AND M3.MAIN_CODE   = 'S080'
	                                                           AND M3.SUB_CODE   != '$'
	                                                           AND M3.SUB_CODE    = A.STAT_CODE                                       
	                        LEFT JOIN BSA100T AS M4 WITH (NOLOCK)  ON M4.COMP_CODE   = A.COMP_CODE
	                                                           AND M4.MAIN_CODE   = 'S081'
	                                                           AND M4.SUB_CODE   != '$'
	                                                           AND M4.SUB_CODE    = A.REQ_STAT_CODE          
	                        LEFT JOIN (SELECT A.COMP_CODE
	                                        , A.CUSTOM_CODE
	                                        , A.PRSN_NAME
	                                        , A.MAIL_ID
	                                        , A.HAND_PHON, A.TELEPHONE_NUM1
	                                     FROM            BCM120T AS A WITH(NOLOCK) 
	                                          INNER JOIN ( SELECT A.COMP_CODE
	                                                            , MAX(A.CUSTOM_CODE) AS CUSTOM_CODE 
	                                                            , MIN(A.SEQ)         AS SEQ
	                                                         FROM BCM120T AS A WITH(NOLOCK)
	                                                        WHERE A.MAIN_BILL_YN ='Y'
	                                                          AND A.BILL_TYPE IN ('1','3')
	                                                        GROUP BY A.COMP_CODE, A.CUSTOM_CODE
	                                                     ) AS B ON B.COMP_CODE   = A.COMP_CODE
	                                                           AND B.CUSTOM_CODE = A.CUSTOM_CODE
	                                                           AND B.SEQ         = A.SEQ
	                                   ) C4 ON C4.COMP_CODE   = A.COMP_CODE
	                                       AND C4.CUSTOM_CODE = A.CUSTOM_CODE
	                        LEFT JOIN BSA100T AS E1 WITH (NOLOCK)  ON E1.COMP_CODE   = A.COMP_CODE
	                                                           AND E1.MAIN_CODE   = 'S010'
	                                                           AND E1.SUB_CODE   != '$'
	                                                           AND E1.SUB_CODE    = A.SALE_PRSN
	                        LEFT JOIN BSA100T AS E2 WITH (NOLOCK)  ON E2.COMP_CODE   = C.COMP_CODE
	                                                           AND E2.MAIN_CODE   = 'S010'
	                                                           AND E2.SUB_CODE   != '$'
	                                                           AND E2.SUB_CODE    = C.BUSI_PRSN
	                        LEFT JOIN BSA210T AS E3 WITH (NOLOCK)  ON E3.COMP_CODE   = E1.COMP_CODE
	                                                           AND E3.TREE_CODE   = E1.REF_CODE2
	                        LEFT JOIN BSA210T AS E4 WITH (NOLOCK)  ON E4.COMP_CODE   = E2.COMP_CODE
	                                                           AND E4.TREE_CODE   = E2.REF_CODE2 
	                        LEFT JOIN BSA100T AS E5 WITH (NOLOCK)  ON E5.COMP_CODE   = A.COMP_CODE
	                                                           AND E5.MAIN_CODE   = 'S083'
	                                                           AND E5.SUB_CODE   != '$'
	                                                           AND E5.SUB_CODE    = '01'
	                        LEFT JOIN BSA100T AS E6 WITH (NOLOCK)  ON E6.COMP_CODE   = A.COMP_CODE
	                                                           AND E6.MAIN_CODE   = 'S083'
	                                                           AND E6.SUB_CODE   != '$'
	                                                           AND E6.SUB_CODE    = '02'
	                        LEFT JOIN BSA100T AS E7 WITH (NOLOCK)  ON E7.COMP_CODE   = A.COMP_CODE
	                                                           AND E7.MAIN_CODE   = 'S083'
	                                                           AND E7.SUB_CODE   != '$'
	                                                           AND E7.SUB_CODE    = '03'
	             WHERE 1=1
				   AND   A.COMP_CODE         = #{S_COMP_CODE}
				   AND   A.SALE_DIV_CODE     = #{SALE_DIV_CODE} 
				   AND   A.PUB_NUM           = #{PUB_NUM} 
	    
	             ORDER BY A.BILL_DATE, A.CUSTOM_CODE, SEQ_GUBUN
	    
	            SET NOCOUNT OFF
	            SET ARITHABORT OFF
	    END
	</select>

	<insert id="atx110ukrServiceImpl.insertEtaxLogTable" parameterType="Map">
		INSERT INTO L_ATX170T
			(
			  KEY_VALUE
			, OPR_FLAG
			, ISSU_ID
			, STAT_CODE
			, STS
			, REQ_STAT_CODE
			, ERR_MSG
			, COMP_CODE
			, TRANSYN_NAME
			, CRT_LOC
			, BILL_FLAG
			, TAX_TYPE
			, POPS_CODE
			, REGS_DATE
			, SELR_CORP_NO
			, SELR_CORP_NM
			, SELR_CODE
			, SELR_CEO
			, SELR_BUSS_CONS
			, SELR_BUSS_TYPE
			, SELR_ADDR
			, SELR_CHRG_NM
			, SELR_CHRG_POST
			, SELR_CHRG_TEL
			, SELR_CHRG_EMAIL
			, SELR_CHRG_MOBL
			, CUSTOM_CODE
			, BUYR_CORP_NM
			, BUYR_GB
			, BUYR_CORP_NO
			, BUYR_CODE
			, BILLTYPENAME
			, ISSUE_DETAILS
			, CHRG_AMT
			, TAX_AMT
			, TOTL_AMT
			, BUYR_CEO
			, BUYR_BUSS_CONS
			, BUYR_BUSS_TYPE
			, BUYR_ADDR
			, BUYR_CHRG_NM1
			, BUYR_CHRG_TEL1
			, BUYR_CHRG_MOBL1
			, BUYR_CHRG_EMAIL1
			, BUYR_CHRG_NM2
			, BUYR_CHRG_MOBL2
			, BUYR_CHRG_EMAIL2
			, BROK_CUSTOM_CODE
			, BROK_COMPANY_NUM
			, BROK_TOP_NUM
			, BROK_PRSN_NAME
			, BROK_PRSN_EMAIL
			, ISSU_SEQNO
			, SELR_MGR_ID3
			, NOTE1
			, MODY_CODE
			, BILL_PUBLISH_TYPE
			, BILL_TYPE
			, SND_MAIL_YN
			, SND_SMS_YN
			, SND_FAX_YN
			, DIV_CODE
			, SALE_DIV_CODE
			, DEL_YN
			, REPORT_AMEND_CD
			, BFO_ISSU_ID
			, BEFORE_PUB_NUM
			, ORIGINAL_PUB_NUM
			, PLUS_MINUS_TYPE
			, SEQ_GUBUN
			, INSERT_DB_USER
			, INSERT_DB_TIME
			)
		VALUES
			(
			  #{KEY_VALUE}
			, #{OPR_FLAG}
			, #{ISSU_ID}
			, #{STAT_CODE}
			, #{STS}
			, #{REQ_STAT_CODE}
			, #{ERR_MSG}
			, #{S_COMP_CODE}
			, #{TRANSYN_NAME}
			, #{CRT_LOC}
			, #{BILL_FLAG}
			, #{TAX_TYPE}
			, #{POPS_CODE}
			, REPLACE(#{REGS_DATE}, '.','')
			, REPLACE(#{SELR_CORP_NO}, '-','')
			, #{SELR_CORP_NM}
			, #{SELR_CODE}
			, #{SELR_CEO}
			, #{SELR_BUSS_CONS}
			, #{SELR_BUSS_TYPE}
			, #{SELR_ADDR}
			, #{SELR_CHRG_NM}
			, #{SELR_CHRG_POST}
			, REPLACE(#{SELR_CHRG_TEL}, '-','')
			, #{SELR_CHRG_EMAIL}
			, REPLACE(#{SELR_CHRG_MOBL}, '-','')
			, #{CUSTOM_CODE}
			, #{BUYR_CORP_NM}
			, #{BUYR_GB}
			, REPLACE(#{BUYR_CORP_NO}, '-','')
			, #{BUYR_CODE}
			, #{BILLTYPENAME}
			, #{ISSUE_DETAILS}
			, #{CHRG_AMT}
			, #{TAX_AMT}
			, #{TOTL_AMT}
			, #{BUYR_CEO}
			, #{BUYR_BUSS_CONS}
			, #{BUYR_BUSS_TYPE}
			, #{BUYR_ADDR}
			, #{BUYR_CHRG_NM1}
			, REPLACE(#{BUYR_CHRG_TEL1}, '-','')
			, REPLACE(#{BUYR_CHRG_MOBL1}, '-','')
			, #{BUYR_CHRG_EMAIL1}
			, #{BUYR_CHRG_NM2}
			, REPLACE(#{BUYR_CHRG_MOBL2}, '-','')
			, #{BUYR_CHRG_EMAIL2}
			, #{BROK_CUSTOM_CODE}
			, REPLACE(#{BROK_COMPANY_NUM}, '-','')
			, unilite.fnCipherEncrypt(#{BROK_TOP_NUM}, '')
			, #{BROK_PRSN_NAME}
			, #{BROK_PRSN_EMAIL}
			, #{ISSU_SEQNO}
			, #{SELR_MGR_ID3}
			, #{NOTE1}
			, #{MODY_CODE}
			, #{BILL_PUBLISH_TYPE}
			, #{BILL_TYPE}
			, #{SND_MAIL_YN}
			, #{SND_SMS_YN}
			, #{SND_FAX_YN}
			, #{DIV_CODE}
			, #{SALE_DIV_CODE}
			, #{DEL_YN}
			, #{REPORT_AMEND_CD}
			, #{BFO_ISSU_ID}
			, #{BEFORE_PUB_NUM}
			, #{ORIGINAL_PUB_NUM}
			, #{PLUS_MINUS_TYPE}
			, #{SEQ_GUBUN}
			, #{S_USER_ID}
			, GETDATE()        
			)
	</insert>

	<update id="atx110ukrServiceImpl.sendEtax" parameterType="Map" statementType="CALLABLE">
		{call USP_ACCNT_ATX170UKR_fnSend  (
			#{COMP_CODE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{KEY_VALUE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{OPR_FLAG		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{OPR_FLAG2		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{OPR_FLAG3		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{LANG_TYPE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{LOGIN_ID		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{ERROR_DESC	, mode=OUT		, jdbcType=VARCHAR		, javaType=java.lang.String} 
		)}
	</update> 
	
	
	
	
<!-- 매출자동기표 / 기표취소 -->	
	<insert id="atx110ukrServiceImpl.insertLogTable" parameterType="Map">     
	    INSERT INTO L_AGD170T
	           (
	             KEY_VALUE
       		   , OPR_FLAG
       		   , COMP_CODE
			   , DIV_CODE
			   , PUB_NUM
			   , BILL_FLAG
			   , BILL_DATE
			   , BUSI_TYPE
			   , PROOF_KIND
			   , CUSTOM_CODE
			   , CUSTOM_NAME
			   , SALE_LOC_AMT_I
			   , TAX_AMT_O
			   , SALE_TAX_AMT_I
			   , BILL_DIV_CODE
			   , REMARK
			   , EX_DATE
			   , EX_NUM
			   , AGREE_YN	
			   , WORK_DATE		
	           , INSERT_DB_USER
	           , INSERT_DB_TIME     
	           )
		SELECT 
			    #{KEY_VALUE}														AS KEY_VALUE		
			  , #{OPR_FLAG}															AS OPR_FLAG
       		  , A.COMP_CODE
			  , A.DIV_CODE
			  , A.PUB_NUM			
			  , A.BILL_FLAG         	
			  , A.BILL_DATE  
			  , A.BUSI_TYPE       	
			  , A.PROOF_KIND			
			  , A.CUSTOM_CODE		
			  , ISNULL(D.CUSTOM_NAME  , '')											AS CUSTOM_NAME		
			  , B.SALE_LOC_AMT_I		
			  , B.TAX_AMT_O		    
			 , ISNULL(B.SALE_LOC_AMT_I, 0 ) + ISNULL(B.TAX_AMT_O, 0)				AS SALE_TAX_AMT_I		
			  , (
			   	SELECT BILL_DIV_CODE FROM BOR120T  WITH (NOLOCK)
			   		WHERE COMP_CODE		= A.COMP_CODE
			   		AND DIV_CODE		= A.DIV_CODE
			    )																	AS BILL_DIV_CODE	
			  , A.REMARK				
			  , A.EX_DATE      		
			  , A.EX_NUM				
			  , CASE A.AGREE_YN	WHEN 'Y' THEN '2'
			 					WHEN 'N' THEN '1'
			 					ELSE ''
			 					END													AS AGREE_YN
			  , #{PROC_DATE}														AS WORK_DATE
			  , #{S_USER_ID}														AS INSERT_DB_USER
			  , GETDATE()															AS INSERT_DB_TIME
			  
		  FROM		ATX110T  AS A WITH (NOLOCK)
		  LEFT JOIN	ATX111T  AS B WITH (NOLOCK)		ON B.COMP_CODE	= A.COMP_CODE
												   AND B.DIV_CODE	= A.DIV_CODE
												   AND B.PUB_NUM	= A.PUB_NUM
		  LEFT JOIN BSA100T  AS C WITH (NOLOCK)     ON C.COMP_CODE	= A.COMP_CODE
	                                               AND C.MAIN_CODE	= 'A009'
	                                               AND C.REF_CODE1	= A.UPDATE_DB_USER
		  LEFT JOIN BCM100T  AS D WITH (NOLOCK)     ON D.COMP_CODE  = A.COMP_CODE
	                                               AND D.CUSTOM_CODE= A.CUSTOM_CODE
		   
		 WHERE A.COMP_CODE			= #{S_COMP_CODE}
		   AND A.PUB_NUM			= #{PUB_NUM}

		 ORDER BY A.PUB_NUM, B.SEQ
	</insert>
	
	<update id="cancelSlip" parameterType="Map" statementType="CALLABLE">
	    {call USP_ACCNT_AutoSlip34Cancel(
	        #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{BILL_PUB_NUM,  mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{CALL_PATH,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{PROC_DATE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{LANG_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{INPUT_USER_ID, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{SUM_TYPE,      mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{EBYN_MESSAGE,  mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>
	  
	<update id="runAutoSlip" parameterType="Map" statementType="CALLABLE">
	    {call USP_ACCNT_AutoSlip34(
	        #{COMP_CODE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{KEY_VALUE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{BILL_PUB_NUM,  mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{CALL_PATH,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{PROC_DATE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{LANG_TYPE,     mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{INPUT_USER_ID, mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{SUM_TYPE,      mode=IN,  jdbcType=VARCHAR, javaType=java.lang.String},
	        #{EBYN_MESSAGE,  mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
	        #{ERROR_DESC,    mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	    )}
	</update>
</mapper>