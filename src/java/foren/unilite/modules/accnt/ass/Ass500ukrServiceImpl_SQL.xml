<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ass500ukrService">
	
	<select id="ass500ukrService.selectMasterList" parameterType="Map" resultType="rMap">
		--UAss01Krv.Cass500UKR[fnass500nQ] Query1
		SELECT DISTINCT A.ASST
		     , A.ASST_NAME 
		     , ISNULL((SELECT DIV_NAME 
		                 FROM BOR120T WITH (NOLOCK) 
		                WHERE COMP_CODE = A.COMP_CODE
		                  AND DIV_CODE  = A.DIV_CODE), '') DIV_NAME 
		     , ISNULL((SELECT PJT_NAME 
		                 FROM BCM600T WITH (NOLOCK) 
		                WHERE COMP_CODE = A.COMP_CODE
		                  AND PJT_CODE  = A.PJT_CODE), '') PJT_CODE 
		     , ISNULL((SELECT ACCNT_NAME 
		                 FROM ABA400T WITH (NOLOCK) 
		                WHERE COMP_CODE = A.COMP_CODE
		                  AND ACCNT     = A.ACCNT), '')           ACCNT_NAME 
		     , A.DRB_YEAR 
		     , UNILITE.fnGetUserDateComp(N'MASTER', ACQ_DATE)              AS ACQ_DATE 
		     , UNILITE.fnGetUserDateComp(N'MASTER', USE_DATE)              AS USE_DATE 
		     , CAST(ISNULL(A.ACQ_Q,0) AS NUMERIC(18,3))     AS ACQ_Q
		     , CAST(ISNULL(A.ACQ_AMT_I,0) AS NUMERIC(18,3)) AS ACQ_AMT_I
		     , A.COMP_CODE 
		  FROM ASS300T A WITH (NOLOCK) 
		               LEFT OUTER JOIN ASS500T B WITH (NOLOCK) 
		                            ON A.ASST      = B.ASST
		                           AND A.COMP_CODE = B.COMP_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE} 
		 <if test="@foren.Ognl@isNotEmpty(ASSET_CODE)">
		   AND A.ASST &gt;= #{ASSET_CODE}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(ASSET_CODE2)">
		   AND A.ASST &lt;= #{ASSET_CODE2}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">  
		   AND A.ACCNT &gt;= #{ACCNT_CODE}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ACCNT_CODE2)">  
		   AND A.ACCNT &lt;= #{ACCNT_CODE2}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">     
			AND A.DIV_CODE IN
			<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
				#{item}
			</foreach>         
		 </if> 
		 <if test="@foren.Ognl@isNotEmpty(DPR_STS)">  
		   AND ISNULL(A.DPR_STS2,'') = #{DPR_STS}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(AC_PROJECT_CODE)">  
		   AND A.PJT_CODE &gt;= #{AC_PROJECT_CODE}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(AC_PROJECT_CODE2)">  
		   AND A.PJT_CODE &lt;= #{AC_PROJECT_CODE2}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(DRP_YEAR_FR)">  
		   AND A.DRB_YEAR &gt;= #{DRP_YEAR_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(DRP_YEAR_TO)">  
		   AND A.DRB_YEAR &lt;= #{DRP_YEAR_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ACQ_AMT_I_FR)">  
		   AND ISNULL(A.ACQ_AMT_I,0.0) &gt;= #{ACQ_AMT_I_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ACQ_AMT_I_TO)">  
		   AND ISNULL(A.ACQ_AMT_I,0.0) &lt;= #{ACQ_AMT_I_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(FOR_ACQ_AMT_I_FR)">  
		   AND ISNULL(A.FOR_ACQ_AMT_I,0.0) &gt;= #{FOR_ACQ_AMT_I_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(FOR_ACQ_AMT_I_TO)">  
		   AND ISNULL(A.FOR_ACQ_AMT_I,0.0) &lt;= #{FOR_ACQ_AMT_I_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ACQ_DATE_FR)">  
		   AND A.ACQ_DATE &gt;= #{ACQ_DATE_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ACQ_DATE_TO)">  
		   AND A.ACQ_DATE &lt;= #{ACQ_DATE_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(USE_DATE_FR)">  
		   AND A.USE_DATE &gt;= #{USE_DATE_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(USE_DATE_TO)">  
		   AND A.USE_DATE &lt;= #{USE_DATE_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(WASTE_DIVI)">  
		   AND B.WASTE_DIVI = #{WASTE_DIVI}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ALTER_DATE_FR)">  
		   AND B.ALTER_DATE &gt;= #{ALTER_DATE_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ALTER_DATE_TO)">  
		   AND B.ALTER_DATE &lt;= #{ALTER_DATE_TO}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(ALTER_DIVI)">  
		   AND B.ALTER_DIVI = #{ALTER_DIVI} 
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(FI_CAPI_DATE_FR)">  
		   AND B.ALTER_DATE &gt;= #{FI_CAPI_DATE_FR}
		 </if>  
		 <if test="@foren.Ognl@isNotEmpty(FI_CAPI_DATE_TO)">  
		   AND B.ALTER_DATE &lt;= #{FI_CAPI_DATE_TO}
		 </if>  
		 ORDER BY A.ASST 
	
	</select>
	
 	<select id="ass500ukrService.selectDetailList1" parameterType="Map" resultType="rMap">
		--UAss01Krv.Cass500UKR[fnass500nQ] Query2
		SELECT ASST
		     , SEQ
		     , WASTE_DIVI 
		     , UNILITE.fnGetUserDateComp(N'MASTER', ALTER_DATE) AS ALTER_DATE 
		     , ISNULL(ALTER_Q,0)     AS ALTER_Q 
		     , MONEY_UNIT 
		     , EXCHG_RATE_O 
		     , FOR_ALTER_AMT_I 
		     , ISNULL(ALTER_AMT_I,0) AS ALTER_AMT_I
		     , ALTER_REASON 
		     , ALTER_DIVI
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME 
		     , COMP_CODE 
		  FROM ASS500T WITH (NOLOCK) 
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND ASST      = #{ASST} 
		   AND ALTER_DIVI = N'1'
		 ORDER BY ASST, ALTER_DIVI, SEQ, ALTER_DATE 
	</select>
	
	<select id="ass500ukrService.selectDetailList2" parameterType="Map" resultType="rMap">
		--UAss01Krv.Cass500UKR[fnass500nQ] Query2
		SELECT ASST
		     , SEQ
		     , WASTE_DIVI 
		     , UNILITE.fnGetUserDateComp(N'MASTER', ALTER_DATE) AS ALTER_DATE 
		     , ISNULL(ALTER_Q,0)     AS ALTER_Q 
		     , MONEY_UNIT 
		     , EXCHG_RATE_O 
		     , FOR_ALTER_AMT_I 
		     , ISNULL(ALTER_AMT_I,0) AS ALTER_AMT_I
		     , ALTER_REASON 
		     , ALTER_DIVI
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME 
		     , COMP_CODE 
		  FROM ASS500T WITH (NOLOCK) 
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND ASST      = #{ASST} 
		   AND ALTER_DIVI = N'2'
		 ORDER BY ASST, ALTER_DIVI, SEQ, ALTER_DATE
	</select>
	
	<select id="ass500ukrService.selectDetailList3" parameterType="Map" resultType="rMap">
		--UAss01Krv.Cass500UKR[fnass500nQ] Query3
		SELECT A.COMP_CODE                     --법인코드
		     , A.ASST                          --자산코드
		     , A.SEQ                           --순번
		     , A.ALTER_DIVI                    --구분
		     , uniLITE.fnGetUserDate(N'MASTER', A.ALTER_DATE) AS ALTER_DATE --변동일자
		     , A.PRE_DIV_CODE                  --원자산사업장코드
		     , B1.TREE_NAME AS PRE_DIV_NAME    --원자산사업장명
		     , A.PRE_DEPT_CODE                 --원자산부서코드
		     , B2.TREE_NAME AS PRE_DEPT_NAME   --원자산부서명
		     , A.AFTER_DIV_CODE                --이동사업장코드
		     , B3.TREE_NAME AS AFTER_DIV_NAME  --이동사업장명
		     , A.AFTER_DEPT_CODE               --이동부서코드
		     , B4.TREE_NAME AS AFTER_DEPT_NAME --이동부서명
		     , A.ALTER_REASON                  --이동사유
		     , A.UPDATE_DB_USER                          
		     , A.UPDATE_DB_TIME                          
		 FROM      ASS500T A  WITH (NOLOCK)
		INNER JOIN BSA210T B1 WITH (NOLOCK) ON B1.COMP_CODE = A.COMP_CODE
		                                   AND B1.TREE_CODE = A.PRE_DIV_CODE
		INNER JOIN BSA210T B2 WITH (NOLOCK) ON B2.COMP_CODE = A.COMP_CODE
		                                   AND B2.TREE_CODE = A.PRE_DEPT_CODE
		INNER JOIN BSA210T B3 WITH (NOLOCK) ON B3.COMP_CODE = A.COMP_CODE
		                                   AND B3.TREE_CODE = A.AFTER_DIV_CODE
		INNER JOIN BSA210T B4 WITH (NOLOCK) ON B4.COMP_CODE = A.COMP_CODE
		                                   AND B4.TREE_CODE = A.AFTER_DEPT_CODE
		WHERE  A.COMP_CODE = #{S_COMP_CODE}
		   AND A.ASST      = #{ASST} 
		ORDER BY A.COMP_CODE, A.ALTER_DATE, A.SEQ
 	</select>
		
	<select id="ass500ukrService.updateDetail1" parameterType="Map" resultType="rMap">		
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @ERR_DESC   NVARCHAR(4000),
					@ExistYN    NUMERIC(01),
					@dAcqQ		NVARCHAR(10),
					@alterQ		NVARCHAR(10)
					
		    SET     @ERR_DESC   = ''
		    SET     @ExistYN    = 0
		    			
			--UAss01Krv.Cass500UKR[fnass500set] Query5
			SELECT TOP 1 
				 @ExistYN    = 1 
			  FROM ASC100T WITH (NOLOCK)
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND ASST      = #{ASST}
			   AND DPR_YYMM &gt;= #{ALTER_DATE}   
			IF ( @ExistYN  &gt; 0 )
		    BEGIN
		        --상각된 자료가 존재합니다
		        SET @ERR_DESC = '55301; 자산코드: ${ASST} 미존재'
		        GOTO ERROR_HANDLER
		    END
			
			--고정자산변동내역 등록. 한 자산은 월에 한번만 등록 가능
			<if test="ALTER_DIVI == &quot;2&quot;">
				--UAss01Krv.Cass500UKR[fnass500set] Query6
				SET     @ExistYN    = 0
				SELECT TOP 1 
				      @ExistYN    = 1
				  FROM ASS500T WITH (NOLOCK)
				 WHERE COMP_CODE = #{S_COMP_CODE}
				   AND ASST      = #{ASST}
				   AND LEFT(ALTER_DATE,6) = LEFT(#{ALTER_DATE},6)
				   AND ALTER_DIVI    = #{ALTER_DIVI}
				IF ( @ExistYN  &gt; 0 )
			    BEGIN
			        --자산의 매각/폐기는 월에 한번만 발생이 가능합니다.
			        SET @ERR_DESC = '55428; 자산코드: ${ASST}'
			        GOTO ERROR_HANDLER
			    END   
			</if>
			
			<if test="SAVE_FLAG == &quot;N&quot;">
				--UAss01Krv.Cass500UKR[fnass500set] Query6-1
				INSERT INTO ass500t
				     ( ASST
				     , SEQ
				     , WASTE_DIVI
				     , ALTER_DATE
				     , ALTER_Q
				     , MONEY_UNIT
				     , EXCHG_RATE_O
				     , FOR_ALTER_AMT_I
				     , ALTER_AMT_I
				     , ALTER_DIVI
				     , ALTER_REASON
				     , UPDATE_DB_USER
				     , UPDATE_DB_TIME
				     , COMP_CODE
				     ) 
				VALUES
				     ( #{ASST}
				     , #{SEQ}
				     <if test="ALTER_DIVI == &quot;1&quot;">
				     , ' '
				     </if>
				     <if test="ALTER_DIVI == &quot;2&quot;">
				     , #{WASTE_DIVI}
				     </if>				     
				     , #{ALTER_DATE}
				     <if test="ALTER_DIVI == &quot;1&quot;">
				     , 0
				     </if>
				     <if test="ALTER_DIVI == &quot;2&quot;">
				     , #{ALTER_Q}
				     </if>
				     , #{MONEY_UNIT}
				     , #{EXCHG_RATE_O}
				     , #{FOR_ALTER_AMT_I}
				     , #{ALTER_AMT_I}
				     , #{ALTER_DIVI}
				     , #{ALTER_REASON}
				     , #{S_USER_ID}
				     , GETDATE()
				     , #{COMP_CODE}
				     )	
			</if>
			
			<if test="SAVE_FLAG != &quot;N&quot;">
				--UAss01Krv.Cass500UKR[fnass500set] Query6-1
				UPDATE ASS500T
				   SET WASTE_DIVI      = #{WASTE_DIVI}
				     , ALTER_DATE      = #{ALTER_DATE}
				     <if test="ALTER_DIVI == &quot;2&quot;">
				     , ALTER_Q         = #{ALTER_Q}
				     </if>
				     , MONEY_UNIT      = #{MONEY_UNIT}
				     , EXCHG_RATE_O    = #{EXCHG_RATE_O}
				     , FOR_ALTER_AMT_I = #{FOR_ALTER_AMT_I}
				     , ALTER_AMT_I     = #{ALTER_AMT_I}
				     , ALTER_REASON    = #{ALTER_REASON}
				     , UPDATE_DB_USER  = #{S_USER_ID}
				     , UPDATE_DB_TIME  = GETDATE()
				     
				 WHERE ASST            = #{ASST}
				   AND SEQ             = #{SEQ}
				   AND ALTER_DIVI      = #{ALTER_DIVI}
				   AND COMP_CODE       = #{S_COMP_CODE}
			</if>
			
			--UAss01Krv.Cass500UKR[fnGetAss300] Query8
			SET     @ExistYN    = 0
			SELECT TOP 1
			     @ExistYN    = 1
			  FROM ASS300T WITH (NOLOCK) 
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND ASST      = #{ASST} 
			 IF ( @ExistYN  &lt; 1 )
		    BEGIN
		        --상각된 자료가 존재합니다
		        SET @ERR_DESC = '8164; 자산코드= ${ASST} 미존재'
		        GOTO ERROR_HANDLER
		    END
		    
		    --UAss01Krv.Cass500UKR[fnGetAss300] Query8
			SET     @ExistYN    = 0
			SELECT 
			     @dAcqQ = ISNULL(ACQ_Q,0)
			  FROM ASS300T WITH (NOLOCK) 
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND ASST      = #{ASST} 
		    
		    
		    --UAss01Krv.Cass500UKR[fnass500set] Query7
			SELECT 
			     @alterQ = ISNULL(SUM(ALTER_Q),0)     
			  FROM ASS500T WITH (NOLOCK) 
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND ASST      = #{ASST} 
		    
		    IF(@dAcqQ &lt; @alterQ)
		    BEGIN
		    	--취득수량이 초과되었습니다.
		        SET @ERR_DESC = '8164; 취득수량 =' + @dAcqQ + '초과'
		        GOTO ERROR_HANDLER
		    END
		    	
		ERROR_HANDLER:
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		
		    IF @ERR_DESC != ''
		        SELECT @ERR_DESC  AS ERROR_DESC
		    ELSE
		        SELECT TOP 1 '' ERROR_CODE, '' ERROR_DESC
		END
	</select>
	
	<select id="ass500ukrService.deleteDetail1" parameterType="Map" resultType="rMap">
		 BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @ERR_DESC   NVARCHAR(4000),
					@ExistYN    NUMERIC(01)
					
		    SET     @ERR_DESC   = ''
		    SET     @ExistYN    = 0
		    
			--UAss01Krv.Cass500UKR[fnGetAss300] Query8
			SELECT TOP 1
			     @ExistYN    = 1
			  FROM ASS300T WITH (NOLOCK) 
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND ASST      = #{ASST} 
			 IF ( @ExistYN  &lt; 1 )
		    BEGIN
		        --상각된 자료가 존재합니다
		        SET @ERR_DESC = '8164; 자산코드= ${ASST} 미존재'
		        GOTO ERROR_HANDLER
		    END
			
		    --2. 상각내역 존재여부 확인	--UAss01Krv.Cass500UKR[fnass500set] Query4
		    SET     @ExistYN    = 0
		    SELECT  TOP 1
		            @ExistYN    = 1
		     FROM ASC100T WITH (NOLOCK)
		    WHERE COMP_CODE = #{S_COMP_CODE}
		      AND ASST      = #{ASST}
		      AND DPR_YYMM  >= LEFT(#{ALTER_DATE}, 6)		
		    IF ( @ExistYN  != 0 )
		    BEGIN
		        --상각된 자료가 존재합니다
		        SET @ERR_DESC = '55301; 자산코드: ${ASST}'
		        GOTO ERROR_HANDLER
		    END
		
			--UAss01Krv.Cass500UKR[fnass500set] Query4-1
			DELETE FROM ASS500T 
			 WHERE ASST       = #{ASST}
			   AND SEQ        = #{SEQ}
			   AND ALTER_DIVI = #{ALTER_DIVI}
			   AND COMP_CODE  = #{S_COMP_CODE}
			  
		ERROR_HANDLER:
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		
		    IF @ERR_DESC != ''
		        SELECT @ERR_DESC  AS ERROR_DESC
		    ELSE
		        SELECT TOP 1 '' ERROR_CODE, '' ERROR_DESC
		END
	</select>
	
	<update id="ass500ukrService.insertDetail3" parameterType="Map">
		--UAss01Krv.Cass500UKR[fnAss500Save] Query01
		BEGIN
		    DECLARE         @COMP_CODE         NVARCHAR(08)                -- 법인코드
		                  , @ASST              NVARCHAR(15)                -- 자산코드
		                  , @SEQ               NUMERIC(4,0)                -- 순번
		                  , @ALTER_DIVI        NVARCHAR(01)                -- 구분
		                  , @ALTER_DATE        NVARCHAR(08)                -- 변동일자
		                  , @PRE_DIV_CODE      NVARCHAR(08)                -- 원자산사업장코드
		                  , @PRE_DEPT_CODE     NVARCHAR(08)                -- 원자산부서코드
		                  , @AFTER_DIV_CODE    NVARCHAR(08)                -- 이동사업장코드
		                  , @AFTER_DEPT_CODE   NVARCHAR(08)                -- 이동부서코드
		                  , @AFTER_DEPT_NAME   NVARCHAR(15)                -- 이동부서명
		                  , @ALTER_REASON      NVARCHAR(100)               -- 이동사유
		
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		-- 변수 값 할당 ----------------------------------------------------------------------------------------------------
		    SET @COMP_CODE       =  #{S_COMP_CODE}      
		    SET @ASST            =  #{ASST}           
		    SET @SEQ             =  #{SEQ}            
		    SET @ALTER_DIVI      =  #{ALTER_DIVI}     
		    SET @ALTER_DATE      =  #{ALTER_DATE}     
		    SET @PRE_DIV_CODE    =  #{PRE_DIV_CODE}   
		    SET @PRE_DEPT_CODE   =  #{PRE_DEPT_CODE}  
		    SET @AFTER_DIV_CODE  =  #{AFTER_DIV_CODE} 
		    SET @AFTER_DEPT_CODE =  #{AFTER_DEPT_CODE}
		    SET @AFTER_DEPT_NAME =  #{AFTER_DEPT_NAME}
		    SET @ALTER_REASON    =  #{ALTER_REASON}   
		INSERT INTO ASS500T
		( COMP_CODE
		, ASST            --자산코드
		, ALTER_DIVI      --변동구분
		, SEQ             --순번
		, WASTE_DIVI      --매각/폐기구분
		, ALTER_DATE      --변동일자
		, ALTER_Q         --변동수량
		, MONEY_UNIT      --화폐단위
		, ALTER_REASON    --변동사유
		, PRE_DEPT_CODE   --원 자산관리부서
		, PRE_DIV_CODE    --원 자산관리사업장
		, AFTER_DEPT_CODE --이관부서
		, AFTER_DIV_CODE  --이관사업장
		, UPDATE_DB_USER              
		, UPDATE_DB_TIME              
		
		)
		VALUES
		( @COMP_CODE
		, @ASST
		, @ALTER_DIVI
		, @SEQ
		, ''
		, @ALTER_DATE
		, 0
		, ''
		, @ALTER_REASON
		, @PRE_DEPT_CODE
		, @PRE_DIV_CODE
		, @AFTER_DEPT_CODE
		, @AFTER_DIV_CODE
		, #{S_USER_ID}
		, GETDATE()
		)
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
		
		--UAss01Krv.Cass500UKR[fnAss620Save] Query02
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		UPDATE ASS300T 
		   SET DIV_CODE  = @AFTER_DIV_CODE
		     , DEPT_CODE = @AFTER_DEPT_CODE
		     , DEPT_NAME = @AFTER_DEPT_NAME
		 WHERE COMP_CODE = @COMP_CODE
		   AND ASST      = @ASST
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</update>
	
	<update id="ass500ukrService.updateDetail3" parameterType="Map">		
		--UAss01Krv.Cass500UKR[fnAss500Save] Query03
		BEGIN
		    DECLARE         @COMP_CODE         NVARCHAR(08)                -- 법인코드
		                  , @ASST              NVARCHAR(15)                -- 자산코드
		                  , @SEQ               NUMERIC(4,0)                -- 순번
		                  , @ALTER_DIVI        NVARCHAR(01)                -- 구분
		                  , @ALTER_DATE        NVARCHAR(08)                -- 변동일자
		                  , @PRE_DIV_CODE      NVARCHAR(08)                -- 원자산사업장코드
		                  , @PRE_DEPT_CODE     NVARCHAR(08)                -- 원자산부서코드
		                  , @AFTER_DIV_CODE    NVARCHAR(08)                -- 이동사업장코드
		                  , @AFTER_DEPT_CODE   NVARCHAR(08)                -- 이동부서코드
		                  , @ALTER_REASON      NVARCHAR(100)               -- 이동사유
		                  , @AFTER_DEPT_NAME   NVARCHAR(15)                -- 이동부서명
		                  		                  
		
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		--  변수 값 할당 ----------------------------------------------------------------------------------------------------
		    SET @COMP_CODE       = #{S_COMP_CODE}      
		    SET @ASST            = #{ASST}           
		    SET @SEQ             = #{SEQ}            
		    SET @ALTER_DIVI      = #{ALTER_DIVI}     
		    SET @ALTER_DATE      = #{ALTER_DATE}     
		    SET @PRE_DIV_CODE    = #{PRE_DIV_CODE}   
		    SET @PRE_DEPT_CODE   = #{PRE_DEPT_CODE}  
		    SET @AFTER_DIV_CODE  = #{AFTER_DIV_CODE} 
		    SET @AFTER_DEPT_CODE = #{AFTER_DEPT_CODE}
		    SET @ALTER_REASON    = #{ALTER_REASON}  
		    SET @AFTER_DEPT_NAME = #{AFTER_DEPT_NAME}
		     
		UPDATE ASS500T
		   SET ALTER_DIVI      = @ALTER_DIVI
		   	 , ALTER_DATE      = @ALTER_DATE
		     , PRE_DEPT_CODE   = @PRE_DEPT_CODE
		     , PRE_DIV_CODE    = @PRE_DIV_CODE
		     , AFTER_DEPT_CODE = @AFTER_DEPT_CODE
		     , AFTER_DIV_CODE  = @AFTER_DIV_CODE
		     , ALTER_REASON    = @ALTER_REASON
		 WHERE COMP_CODE = @COMP_CODE
		   AND ASST      = @ASST
		   AND SEQ       = @SEQ
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
		
		--UAss01Krv.Cass500UKR[fnAss620Save] Query04
		BEGIN		  		
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		UPDATE ASS300T 
		   SET DIV_CODE  = @AFTER_DIV_CODE
		     , DEPT_CODE = @AFTER_DEPT_CODE
		     , DEPT_NAME = @AFTER_DEPT_NAME
		 WHERE COMP_CODE = @COMP_CODE
		   AND ASST      = @ASST
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</update>
	
	<update id="ass500ukrService.deleteDetail3" parameterType="Map">
		--UAss01Krv.Cass500UKR[fnAss620Save] Query05
		BEGIN
		    DECLARE         @COMP_CODE         NVARCHAR(08)                -- 법인코드
		                  , @ASST              NVARCHAR(15)                -- 자산코드
		                  , @SEQ               NUMERIC(4,0)                -- 순번
		                  , @ALTER_DIVI        NVARCHAR(01)                -- 구분
		                  , @ALTER_DATE        NVARCHAR(08)                -- 변동일자
		                  , @PRE_DIV_CODE      NVARCHAR(08)                -- 원자산사업장코드
		                  , @PRE_DEPT_CODE     NVARCHAR(08)                -- 원자산부서코드
		                  , @ALTER_REASON      NVARCHAR(100)               -- 이동사유
		                  , @PRE_DEPT_NAME     NVARCHAR(15)                -- 이동부서명
		
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		--  변수 값 할당 ----------------------------------------------------------------------------------------------------
		    SET @COMP_CODE       = #{S_COMP_CODE}    
		    SET @ASST            = #{ASST}         
		    SET @PRE_DIV_CODE    = #{PRE_DIV_CODE} 
		    SET @PRE_DEPT_CODE   = #{PRE_DEPT_CODE}
		    SET @PRE_DEPT_NAME   = #{PRE_DEPT_NAME}
		    SET @SEQ			 = #{SEQ}
		UPDATE ASS300T 
		   SET DIV_CODE  = @PRE_DIV_CODE
		     , DEPT_CODE = @PRE_DEPT_CODE
		     , DEPT_NAME = @PRE_DEPT_NAME
		 WHERE COMP_CODE = @COMP_CODE
		   AND ASST      = @ASST
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END		
		
		--S_UAss01Krv_NL.Cs_Ass620Ukr_NL[fnAss500Save] Query03-2
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		    
		DELETE FROM ASS500T
		 WHERE COMP_CODE = @COMP_CODE
		   AND ASST      = @ASST
		   AND SEQ       = @SEQ
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	 
	</update>
	
	
</mapper>