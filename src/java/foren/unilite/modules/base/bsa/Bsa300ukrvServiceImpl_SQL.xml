<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bsa300ukrvServiceImpl">
	<select id="bsa300ukrvServiceImpl.getDataList" parameterType="Map" resultType="rMap">
	/* bsa300ukrvServiceImpl.getDataList */
	/* bsa300ukrv.Cbsa300ukrv[fnBsa300QStd] Query02*/
        SET NOCOUNT ON
        SELECT ROW_NUMBER() OVER (ORDER BY A.USER_ID)   AS SEQ
             , A.USER_ID
             , A.USER_NAME
             , #{csINIT_SYSTEM_PWD} AS PASSWORD
             , A.PERSON_NUMB
             , ISNULL(C1.NAME, '')                      AS NAME
             , ISNULL(A.ERP_USER, 'N')                  AS ERP_USER
             , A.DEPT_CODE
             , C2.TREE_NAME                             AS DEPT_NAME
             , A.DIV_CODE
             , A.POS_ID
             , A.POS_PASS	AS POS_PASS
             , A.EMAIL_ADDR
             , A.POS_LEVEL
             , A.REF_ITEM
             , A.USE_YN
             , CONVERT(CHAR(10),A.PWD_UPDATE_DATE, 102) AS PWD_UPDATE_DATE
             , ISNULL(A.FAIL_CNT, 0)                    AS FAIL_CNT
             , ISNULL(A.LOCK_YN, 'N')                   AS LOCK_YN
             /* , A.UPDATE_MAN
             , A.UPDATE_DATE */
             , A.UPDATE_DB_USER
             , CONVERT(CHAR(10),A.UPDATE_DB_TIME, 102) AS UPDATE_DB_TIME
             , A.COMP_CODE
             , A.AUTHORITY_LEVEL
             , A.PHONE             -- 핸드폰번호
             , 'N'										AS IS_PW_CHANGE
             , A.SSO_USER
             , A.USER_LEVEL
             , A.SYTALK_ID
             , A.MENU_DISPLAY_YN
        FROM              BSA300T   A  WITH (NOLOCK)
               LEFT  JOIN HUM100T   C1 WITH (NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
                                                    AND C1.PERSON_NUMB  = A.PERSON_NUMB
               LEFT  JOIN BSA210T   C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                                    AND C2.TREE_CODE    = A.DEPT_CODE
        WHERE  A.COMP_CODE      = #{S_COMP_CODE}

        <if test="@foren.Ognl@isNotEmpty(USER_ID)">
            AND    A.USER_ID     LIKE #{USER_ID} +'%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(USER_NAME)">
            AND    A.USER_NAME   LIKE '%'+ #{USER_NAME} + '%'
        </if>
        <if test="@foren.Ognl@isNotEmpty(USE_YN)">
            AND    A.USE_YN         = #{USE_YN}
        </if>
        SET NOCOUNT OFF

	</select>
	<select id="bsa300ukrvServiceImpl.checkEncryptYN" parameterType="Map" resultType="rMap">
	/* bsa300ukrvServiceImpl.checkEncryptYN */
	/* bsa300ukrv.Cbsa300ukrv[fnBsa300Save] Query01   */
    SELECT TOP 1 1 as CNT
            , ISNULL((
                SELECT  TOP 1 UPPER(REF_CODE1) AS CASE_SENS_YN
                FROM    BSA100T WITH (NOLOCK)
                WHERE   COMP_CODE='MASTER' AND MAIN_CODE='B110' AND SUB_CODE='40' AND USE_YN='Y'
            ),'N') AS CASE_SENS_YN
    FROM BSA100T WITH (NOLOCK)
    WHERE COMP_CODE='MASTER'
    AND MAIN_CODE='B239' AND SUB_CODE='10' AND REF_CODE1='Y'
	</select>
	<select id="bsa300ukrvServiceImpl.checkUniqueID" parameterType="Map" resultType="rMap">
		/* bsa300ukrvServiceImpl.checkUniqueID */
		/* bsa300ukrv.Cbsa300ukrv[fnBsa300Save] Query05  */
                SELECT TOP 1 A.COMP_CODE, B.COMP_NAME, A.USER_ID
                FROM            BSA300T A WITH (NOLOCK)
                INNER JOIN BOR100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
                WHERE A.COMP_CODE &gt; '' AND A.USER_ID = #{USER_ID}

	</select>
	<insert id="bsa300ukrvServiceImpl.insertMulti" parameterType="Map">
		INSERT INTO BSA300T
            ( COMP_CODE
              , INSERT_DB_USER
              , INSERT_DB_TIME
              , UPDATE_DB_USER
              , UPDATE_DB_TIME
              , USER_ID
              , PWD_UPDATE_DATE
        <if test="@foren.Ognl@isNotEmpty(AUTHORITY_LEVEL)">
              , AUTHORITY_LEVEL
        </if>
        <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
              , PERSON_NUMB
        </if>
        <if test="@foren.Ognl@isNotEmpty(USER_NAME)">
              , USER_NAME
        </if>
        <if test="@foren.Ognl@isNotEmpty(PASSWORD)">
              ,PASSWORD
        </if>
        <if test="@foren.Ognl@isNotEmpty(ERP_USER)">
              , ERP_USER
        </if>
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
              , DIV_CODE
        </if>
        <if test="@foren.Ognl@isNotEmpty(POS_ID)">
              , POS_ID
        </if>
        <if test="@foren.Ognl@isNotEmpty(POS_PASS)">
              , POS_PASS
        </if>
        <if test="@foren.Ognl@isNotEmpty(POS_LEVEL)">
              , POS_LEVEL
        </if>
        <if test="@foren.Ognl@isNotEmpty(EMAIL_ADDR)">
              , EMAIL_ADDR
        </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
              , DEPT_CODE
        </if>
        <if test="@foren.Ognl@isNotEmpty(USE_YN)">
              , USE_YN
        </if>
        <if test="@foren.Ognl@isNotEmpty(REF_ITEM)">
              , REF_ITEM
        </if>
        <if test="@foren.Ognl@isNotEmpty(USER_LEVEL)">
              , USER_LEVEL
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
              , TEMPC_01
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPC_02)">
              , TEMPC_02
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPC_03)">
              , TEMPC_03
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPN_01)">
              , TEMPN_01
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPN_02)">
              , TEMPN_02
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPN_03)">
              , TEMPN_03
        </if>
        <if test="@foren.Ognl@isNotEmpty(FAIL_CNT)">
        		,FAIL_CNT
        </if>
        <if test="@foren.Ognl@isNotEmpty(LOCK_YN)">
              , LOCK_YN
        </if>
        <if test="@foren.Ognl@isNotEmpty(SSO_USER)">
              , SSO_USER
        </if>
        <if test="@foren.Ognl@isNotEmpty(SYTALK_ID)">
              , SYTALK_ID
        </if>
        <if test="@foren.Ognl@isNotEmpty(MENU_DISPLAY_YN)">
              , MENU_DISPLAY_YN
        </if>
        )
VALUES      (#{S_COMP_CODE}
             , #{S_USER_ID}
             , getdate()
             , #{S_USER_ID}
             , getdate()
             , #{USER_ID}
             , getdate()
         <if test="@foren.Ognl@isNotEmpty(AUTHORITY_LEVEL)">
              , #{AUTHORITY_LEVEL}
        </if>
        <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
             , #{PERSON_NUMB}
        </if>
        <if test="@foren.Ognl@isNotEmpty(USER_NAME)">
             , #{USER_NAME}
        </if>
        <if test="bSecurityFlag == &quot;True&quot;">
             , #{NEW_PASSWORD}
		</if>
		<if test="bSecurityFlag == &quot;False&quot;">
	           , #{PASSWORD}
		</if>
        <if test="@foren.Ognl@isNotEmpty(ERP_USER)">
             , #{ERP_USER}
        </if>
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
             , #{DIV_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(POS_ID)">
             , #{POS_ID}
        </if>
        <if test="@foren.Ognl@isNotEmpty(POS_PASS)">
             , uniLITE.fnCipherEncrypt(#{POS_PASS},'')
        </if>
        <if test="@foren.Ognl@isNotEmpty(POS_LEVEL)">
             , #{POS_LEVEL}
        </if>
        <if test="@foren.Ognl@isNotEmpty(EMAIL_ADDR)">
             , #{EMAIL_ADDR}
        </if>
        <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
             , #{DEPT_CODE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(USE_YN)">
             , #{USE_YN}
        </if>
        <if test="@foren.Ognl@isNotEmpty(REF_ITEM)">
             , #{REF_ITEM}
        </if>
        <if test="@foren.Ognl@isNotEmpty(USER_LEVEL)">
             , #{USER_LEVEL}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPC_01)">
             , #{TEMPC_01}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPC_02)">
             , #{TEMPC_02}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPC_03)">
             , #{TEMPC_03}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPN_01)">
             , #{TEMPN_01}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPN_02)">
             , #{TEMPN_02}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TEMPN_03)">
             , #{TEMPN_03}
        </if>
        <if test="@foren.Ognl@isNotEmpty(FAIL_CNT)">
        		,#{FAIL_CNT}
        </if>
        <if test="@foren.Ognl@isNotEmpty(LOCK_YN)">
             , #{LOCK_YN}
        </if>
        <if test="@foren.Ognl@isNotEmpty(SSO_USER)">
              , #{SSO_USER}
        </if>
         <if test="@foren.Ognl@isNotEmpty(SYTALK_ID)">
              , #{SYTALK_ID}
        </if>

        <if test="@foren.Ognl@isNotEmpty(MENU_DISPLAY_YN)">
              , #{MENU_DISPLAY_YN}
        </if>
		)
	</insert>
	<insert id="bsa300ukrvServiceImpl.insertBSA301T" parameterType="Map">
		 INSERT INTO BSA301T (COMP_CODE, USER_ID, PASSWORD, INSERT_DB_USER, UPDATE_DB_USER)
         VALUES(#{COMP_CODE}, #{USER_ID}, #{PASSWORD}, #{S_USER_ID}, #{S_USER_ID})
	</insert>
	<update id="bsa300ukrvServiceImpl.updateMulti" parameterType="Map">
		/* bsa300ukrvServiceImpl.updateMulti */
			UPDATE BSA300T
			SET
			   COMP_CODE = #{S_COMP_CODE}
			 , UPDATE_DB_USER = #{S_USER_ID}
			 , UPDATE_DB_TIME = getDate()
			<if test="@foren.Ognl@isExists(_parameter, 'AUTHORITY_LEVEL')">
              	, AUTHORITY_LEVEL = #{AUTHORITY_LEVEL}
        	</if>
			<if test="@foren.Ognl@isExists(_parameter, 'PERSON_NUMB')">
				 , PERSON_NUMB = #{PERSON_NUMB}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'USER_NAME')">
				 , USER_NAME = #{USER_NAME}
			</if>
			<if test="IS_PW_CHANGE == &quot;Y&quot;">
				<if test="bSecurityFlag == &quot;True&quot;">
	               ,  PASSWORD = #{PASSWORD}
				</if>
				<if test="bSecurityFlag == &quot;False&quot;">
		            ,  PASSWORD = #{PASSWORD}
				</if>
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'ERP_USER')">
				 , ERP_USER = #{ERP_USER}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'DIV_CODE')">
				 , DIV_CODE = #{DIV_CODE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'POS_ID')">
				 , POS_ID = #{POS_ID}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'POS_PASS')">
				 , POS_PASS = #{POS_PASS}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'POS_LEVEL')">
				 , POS_LEVEL = #{POS_LEVEL}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'EMAIL_ADDR')">
                 , EMAIL_ADDR = #{EMAIL_ADDR}
            </if>
			<if test="@foren.Ognl@isExists(_parameter, 'DEPT_CODE')">
				 , DEPT_CODE = #{DEPT_CODE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'USE_YN')">
				 , USE_YN = #{USE_YN}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'REF_ITEM')">
				 , REF_ITEM = #{REF_ITEM}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'USER_LEVEL')">
				 , USER_LEVEL = #{USER_LEVEL}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'TEMPC_01')">
				 , TEMPC_01 = #{TEMPC_01}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'TEMPC_02')">
				 , TEMPC_02 = #{TEMPC_02}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'TEMPC_03')">
				 , TEMPC_03 = #{TEMPC_03}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'TEMPN_01')">
				 , TEMPN_01 = #{TEMPN_01}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'TEMPN_02')">
				 , TEMPN_02 = #{TEMPN_02}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'TEMPN_03')">
				 , TEMPN_03 = #{TEMPN_03}
			</if>
			<if test="LOCK_YN == &quot;N&quot;">
					 , FAIL_CNT = 0
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'LOCK_YN')">
				 , LOCK_YN = #{LOCK_YN}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'SSO_USER')">
              	 , SSO_USER = #{SSO_USER}
        	</if>
        	<if test="@foren.Ognl@isExists(_parameter, 'SYTALK_ID')">
              	 , SYTALK_ID = #{SYTALK_ID}
        	</if>
        	<if test="@foren.Ognl@isExists(_parameter, 'MENU_DISPLAY_YN')">
              	 , MENU_DISPLAY_YN = #{MENU_DISPLAY_YN}
        	</if>
		 WHERE 	COMP_CODE = #{COMP_CODE}
			 AND USER_ID = #{USER_ID}
	</update>
	<update id="bsa300ukrvServiceImpl.updatePassword" parameterType="Map">
		UPDATE BSA300T
		SET
		<if test="bSecurityFlag == &quot;True&quot;">
               PASSWORD = #{NEW_PASSWORD}
		</if>
		<if test="bSecurityFlag == &quot;False&quot;">
               PASSWORD = #{NEW_PASSWORD}
		</if>
             , PWD_UPDATE_DATE = GETDATE()
        WHERE COMP_CODE       = #{COMP_CODE}
           AND USER_ID         = #{USER_ID}

	</update>
	<update id="bsa300ukrvServiceImpl.updateBSA301T" parameterType="Map">
		UPDATE BSA301T
		SET
			PASSWORD = uniLITE.fnCipherEncrypt(#{PASSWORD},'')
		WHERE COMP_CODE       = #{COMP_CODE}
           AND USER_ID         = #{USER_ID}
	</update>
	<delete id="bsa300ukrvServiceImpl.deleteMulti" parameterType="Map">
		/* bsa300ukrvServiceImpl.deleteMulti */
		/*bsa300ukrv.Cbsa300ukrv[fnBsa300Save] Query03*/
		DELETE FROM BSA300T
		 WHERE 	COMP_CODE = #{COMP_CODE}
			 AND USER_ID = #{USER_ID}
	</delete>
	<delete id="bsa300ukrvServiceImpl.deleteSecurityFlagMulti" parameterType="Map">
		/* bsa300ukrvServiceImpl.deleteSecurityFlagMulti */
		/* bsa300ukrv.Cbsa300ukrv[fnBsa300Save] Query04 */
		DELETE FROM BSA301T
		 WHERE 	COMP_CODE = #{COMP_CODE}
			 AND USER_ID = #{USER_ID}
	</delete>
	<insert id="bsa300ukrvServiceImpl.insertPasswordLog" parameterType="Map">
		/* bsa300ukrvServiceImpl.insertPasswordLog */
		/* UBsa01Krv.CBsa400UKr[fnPwdLog] Query03    */

	   DECLARE @COMP_CODE NVARCHAR(10), @USER_ID NVARCHAR(20), @CASE_SENS_YN NVARCHAR(10), @ENCRYPT_YN NVARCHAR(10)
	   SET @COMP_CODE  = ''
	   SET @USER_ID    = #{USER_ID}
	   IF EXISTS (SELECT TOP 1 1 FROM SYSOBJECTS WHERE NAME='LOG200T' AND XTYPE='U')
	   BEGIN

	       SELECT  @CASE_SENS_YN = ISNULL((SELECT  TOP 1  UPPER(REF_CODE1)
	                                       FROM    BSA100T WITH (NOLOCK)
	                                       WHERE   COMP_CODE='MASTER' AND MAIN_CODE='B110' AND SUB_CODE='40' AND USE_YN='Y'),'N') ,
	               @ENCRYPT_YN   = ISNULL((SELECT  TOP 1 REF_CODE1
	                                       FROM    BSA100T WITH (NOLOCK)
	                                       WHERE   COMP_CODE='MASTER' AND MAIN_CODE='B239' AND SUB_CODE='10'), 'N')


	       SELECT  TOP 1 @CASE_SENS_YN = UPPER(REF_CODE1)
	       FROM    BSA100T WITH (NOLOCK)
	       WHERE   COMP_CODE='MASTER' AND MAIN_CODE='B110' AND SUB_CODE='40' AND USE_YN='Y'

	       IF @CASE_SENS_YN IS NULL OR @CASE_SENS_YN = ''
	           SET @CASE_SENS_YN = 'N'

	       IF @ENCRYPT_YN = 'Y'
	       BEGIN
	           IF EXISTS (SELECT TOP 1 1 FROM LOG200T WITH (NOLOCK) WHERE COMP_CODE &gt; '' AND USER_ID=@USER_ID)
	               INSERT INTO LOG200T (COMP_CODE, USER_ID, CHANGE_CNT, PASSWORD, CHANGE_DB_TIME, INSERT_DB_USER, UPDATE_DB_USER)
	               SELECT  TOP 1 COMP_CODE, USER_ID, MAX(CHANGE_CNT)+1, uniLITE.fnCipherEncrypt(CASE WHEN @CASE_SENS_YN='Y' THEN #{PASSWORD} ELSE UPPER(#{PASSWORD}) END, '') AS PASSWORD, GETDATE() CHANGE_DB_TIME, @USER_ID AS INSERT_DB_USER, @USER_ID AS UPDATE_DB_USER
	               FROM    LOG200T WITH (NOLOCK)
	               WHERE   COMP_CODE &gt; '' AND USER_ID=@USER_ID
	               GROUP BY COMP_CODE, USER_ID
	           ELSE
	               INSERT INTO LOG200T (COMP_CODE, USER_ID, CHANGE_CNT, PASSWORD, CHANGE_DB_TIME, INSERT_DB_USER, UPDATE_DB_USER)
	               SELECT  TOP 1 COMP_CODE, @USER_ID USER_ID, 1 CHANGE_CNT, uniLITE.fnCipherEncrypt(CASE WHEN @CASE_SENS_YN='Y' THEN #{PASSWORD} ELSE UPPER(#{PASSWORD}) END, '') AS PASSWORD, GETDATE() CHANGE_DB_TIME, @USER_ID AS INSERT_DB_USER, @USER_ID AS UPDATE_DB_USER
	               FROM    BSA300T WITH (NOLOCK)
	               WHERE   COMP_CODE &gt; '' AND USER_ID=@USER_ID
	       END
	   	END
	</insert>
	<select id="bsa300ukrvServiceImpl.selectUserList" parameterType="Map" resultType="rMap">
		/* bsa300ukrvServiceImpl.selectUserList */
	    SELECT USER_ID
	      FROM BSA300T WITH (NOLOCK)
	     WHERE USE_YN = 'Y'
	       AND COMP_CODE = #{S_COMP_CODE}
	</select>


<!-- 20210805 추가: AGJ110T.INPUT_USER_ID에 존재하는 계정 체크 -->
	<select id="bsa300ukrvServiceImpl.isExistsAg210t" parameterType="Map" resultType="String">
		/* bsa300ukrvServiceImpl.isExistsAg210t */
		IF EXISTS (SELECT TOP 1 1 FROM AGJ110T WITH(NOLOCK) WHERE INPUT_USER_ID = #{USER_ID})
		  <!--  SELECT 'Y' AS FLAG   **** 20221214 AGJ110T.INPUT_USER_ID에 전표 존재 체크 제거 -->
		    SELECT 'N' AS FLAG
		ELSE
		    SELECT 'N' AS FLAG
	</select>
</mapper>