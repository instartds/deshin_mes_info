<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bsa401ukrvService">
	
	<select id="bsa401ukrvService.selectList" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">
			/* bsa401ukrvService.selectList */
			/* bsa401ukrv.Cbsa401ukrv[fnBsa400QStd] Query01  */        
			DECLARE @PGM_ID NVARCHAR(100) 
			       ,@PGM_NAME NVARCHAR(100) 
			       ,@PGM_SEQ NVARCHAR(30) 
			SET @PGM_ID = #{PGM_ID}
			SET @PGM_NAME = #{PGM_NAME}
			SET @PGM_SEQ = #{PGM_SEQ}
			                      
		SELECT A.PGM_SEQ + A.PGM_ID as id
			 ,  CASE WHEN  A.UP_PGM_DIV = 'root' THEN  A.UP_PGM_DIV
					 ELSE A.PGM_SEQ + A.UP_PGM_DIV
				END  as parentId
			 , A.PGM_ID                                              
		     , A.PGM_NAME                                            
		     , A.PGM_NAME_EN                                         
		     , A.PGM_NAME_CN                                         
		     , A.PGM_NAME_JP
		     , A.PGM_NAME_VI                                         
		     , A.TYPE                                                
		     , A.LOCATION                                            
		     , A.USE_YN                                              
		     , A.PGM_ARNG_SEQ                                        
		     , A.AUTHO_TYPE                                          
		     , (SELECT CODE_NAME
		          FROM BSA100T                                       
		         WHERE COMP_CODE = #{S_COMP_CODE}             
		           AND MAIN_CODE = (SELECT ISNULL(REF_CODE1, '')     
		                              FROM BSA100T                   
		                             WHERE COMP_CODE =#{S_COMP_CODE}  
		                               AND MAIN_CODE = 'BS02'        
		                               AND SUB_CODE  = A.AUTHO_TYPE) 
		           AND SUB_CODE  = A.AUTHO_PGM) AS AUTHO_PGM         
		     , A.PGM_SEQ                                             
		     , A.PGM_LEVEL                                           
		     , A.UP_PGM_DIV                                          
		     , A.PGMMER                                              
		     , A.PGM_DATE                                            
		     , A.REMARK                                              
		     , A.AUTHO_CD                                            
		     , A.COMP_CODE 
		     , A.MANUAL_DISPLAY_YN
		     , CASE   
			       WHEN  (@PGM_ID != ''   AND  (SELECT COUNT(PGM_ID) FROM BSA400T WHERE COMP_CODE = 'MASTER' AND UP_PGM_DIV = A.PGM_ID AND PGM_SEQ=A.PGM_SEQ AND PGM_ID LIKE @PGM_ID + '%' ) &gt; 0 )
			            OR (@PGM_NAME != '' AND (SELECT COUNT(PGM_ID) FROM BSA400T WHERE COMP_CODE = 'MASTER' AND UP_PGM_DIV = A.PGM_ID AND PGM_SEQ=A.PGM_SEQ AND PGM_NAME LIKE '%' + @PGM_NAME + '%' ) &gt; 0 )
			            OR (@PGM_SEQ != ''  AND  A.PGM_SEQ = @PGM_SEQ AND A.PGM_LEVEL='1' )
			       THEN 'true' ELSE 'false' END AS 'expanded' 
			     
		  FROM (SELECT PGM_ID                                        
		             , PGM_NAME                                      
		             , PGM_NAME_EN                                   
		             , PGM_NAME_CN                                   
		             , PGM_NAME_JP  
		             , PGM_NAME_VI                                 
		             , TYPE, LOCATION                                
		             , USE_YN                                        
		             , PGM_ARNG_SEQ                                  
		             , AUTHO_TYPE                                    
		             , AUTHO_PGM                                     
		             , PGM_SEQ                                       
		             , PGM_LEVEL                                     
		             , CASE WHEN (TYPE='9' AND PGM_LEVEL='2') THEN PGM_SEQ 
							 WHEN (TYPE='9' AND PGM_LEVEL='3' AND PGM_ID= UP_PGM_DIV) THEN 
							 (SELECT MAX(PT.PGM_ID) 
							  FROM (SELECT PGM_SEQ, PGM_ID
							        FROM bsa400t WITH (NOLOCK)  
									where TYPE = '9' and pgm_level='2' ) AS PT
							  WHERE PT.PGM_SEQ = A.PGM_SEQ 
								AND PT.PGM_ID &lt; A.PGM_ID )
							ELSE UP_PGM_DIV END 
					  	AS UP_PGM_DIV                                         
		             , PGMMER                                        
		             , uniLITE.fnGetUserDate(COMP_CODE,PGM_DATE) AS PGM_DATE         
		             , REMARK                                        
		             , (CASE TYPE WHEN '9'                           
		                               THEN LEFT(RIGHT(PGM_SEQ + 100, 2) + PGM_ID + '0000000000', 10)
		                               ELSE RIGHT(PGM_SEQ + 100, 2) + LEFT(UP_PGM_DIV, 4) + RIGHT(PGM_ARNG_SEQ + 10000, 4)
		                 END) AS MENU_SORT                           
		             , AUTHO_PGM AS AUTHO_CD                         
		             , COMP_CODE     
		             , MANUAL_DISPLAY_YN                                
		          FROM BSA400T A WITH (NOLOCK)                                      
		         WHERE COMP_CODE = #{S_COMP_CODE}                
		        UNION ALL                                            
		        SELECT SUB_CODE                                      
		             , CODE_NAME                                     
		             , CODE_NAME_EN                                  
		             , CODE_NAME_CN                                  
		             , CODE_NAME_JP
		             , CODE_NAME_VI                                  
		             , ''                                            
		             , ''                                            
		             , '1'                                           
		             , 1                                             
		             , ''                                            
		             , ''                                            
		             , SUB_CODE                                      
		             , '1'                                           
		             , 'root'                                        
		             , ''                                            
		             , ''                                            
		             , ''                                            
		             , LEFT(RIGHT(SUB_CODE + 100, 2) + '0000000000', 10) AS MENU_SORT
		             , ''                                            
		             , ''       
		             , ''                                     
		          FROM BSA100T WITH (NOLOCK)                                       
		         WHERE COMP_CODE = #{S_COMP_CODE}               
		           AND MAIN_CODE = 'B007'                            
		           AND SUB_CODE != '$') A                            
		 WHERE 1=1
		 
		 ORDER BY A.MENU_SORT
	</select>
	<select id="bsa401ukrvService.checkPK" parameterType="Map" resultType="rMap">
		/* bsa401ukrvService.checkPK */
		SELECT COUNT(PGM_ID) AS CNT
		FROM BSA400T WITH (NOLOCK) 
		WHERE COMP_CODE= #{S_COMP_CODE}
		  AND PGM_ID = #{PGM_ID}
		  AND PGM_SEQ = #{PGM_SEQ}

	</select>
	<insert id="bsa401ukrvService.insertPrograms" parameterType="Map">
		INSERT INTO BSA400G
	           (COMP_CODE
	           ,PGM_SEQ
	           ,PGM_ID
	           ,PGM_TYPE
	           ,PGM_LEVEL
	           ,UP_PGM_DIV
	           ,PGM_ARNG_SEQ
	           ,PGM_NAME
	           ,PGM_NAME_EN
	           ,PGM_NAME_CN
	           ,PGM_NAME_JP
	           ,PGM_NAME_VI
	           ,LOCATION
	           ,TYPE
	           ,USE_YN
	           ,AUTHO_TYPE
	           ,AUTHO_PGM
	           ,PGMMER
	           ,PGM_DATE
	           ,REMARK
	           ,MANUAL_DISPLAY_YN
	           ,INSERT_DB_USER
	           ,INSERT_DB_TIME
	           ,UPDATE_DB_USER
	           ,UPDATE_DB_TIME)
	     VALUES
	           (#{S_COMP_CODE} 
	           ,#{PGM_SEQ} 
	           ,#{PGM_ID} 
	           ,'1'
	           ,#{PGM_LEVEL} 
	           ,#{UP_PGM_DIV} 
	           ,#{PGM_ARNG_SEQ}
	           ,#{PGM_NAME} 
	           ,#{PGM_NAME_EN} 
	           ,#{PGM_NAME_CN} 
	           ,#{PGM_NAME_JP}
	           ,#{PGM_NAME_VI} 
	           ,#{LOCATION} 
	           ,#{TYPE} 
	           ,#{USE_YN} 
	           ,#{AUTHO_TYPE} 
	           ,#{AUTHO_PGM} 
	           ,#{PGMMER} 
	           ,#{PGM_DATE} 
	           ,#{REMARK}
	           ,#{MANUAL_DISPLAY_YN}
	           ,#{S_USER_ID}  
	           ,GETDATE() 
	           ,#{S_USER_ID} 
	           ,GETDATE() )
	</insert>
	<update id="bsa401ukrvService.updatePrograms" parameterType="Map">
		
		UPDATE BSA400G
		   SET PGM_LEVEL = #{PGM_LEVEL}
		      ,UP_PGM_DIV = #{UP_PGM_DIV}
		      ,PGM_ARNG_SEQ = #{PGM_ARNG_SEQ}
		      ,PGM_NAME = #{PGM_NAME}
		      ,PGM_NAME_EN = #{PGM_NAME_EN}
		      ,PGM_NAME_CN = #{PGM_NAME_CN}
		      ,PGM_NAME_JP = #{PGM_NAME_JP}
		      ,PGM_NAME_VI = #{PGM_NAME_VI}
		      ,LOCATION = #{LOCATION}
		      ,TYPE = #{TYPE}
		      ,USE_YN = #{USE_YN}
		      /*
		      ,AUTHO_TYPE = AUTHO_TYPE
		      ,AUTHO_PGM = AUTHO_PGM
		      */
		      ,PGMMER = #{PGMMER}
		      ,PGM_DATE = #{PGM_DATE}
		      ,REMARK = #{REMARK}
		      ,MANUAL_DISPLAY_YN = #{MANUAL_DISPLAY_YN}		     
		      ,UPDATE_DB_USER = #{S_USER_ID}
		      ,UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE=#{S_COMP_CODE}
		   AND PGM_SEQ = #{PGM_SEQ}
		   AND PGM_ID = #{PGM_ID}
	</update>
	<update id="bsa401ukrvService.deletePrograms" parameterType="Map">
		DELETE FROM BSA400G
		WHERE COMP_CODE=#{S_COMP_CODE}
		   AND PGM_SEQ = #{PGM_SEQ}
		   AND PGM_ID = #{PGM_ID}

	</update>
</mapper>