<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bpr101ukrvService">
	
	<select id="bpr101ukrvService.selectDetailList" parameterType="Map" resultType="rMap">
		/* bpr100ukrvService.selectList */
		/* bpr100ukrv.Cbpr100ukrv[fnBpr100QStd] Query01 */
		BEGIN
		    DECLARE @RefItem            NVARCHAR(01)
		
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  USER_ID = #{S_USER_ID}
		
		    SET @RefItem = ISNULL(@RefItem, '0')
		    
		    SELECT 
		           A.ITEM_CODE
		         , A.ITEM_NAME
		         , A.SPEC
		         , A.STOCK_UNIT
		         , A.ITEM_LEVEL1
		         , C3.LEVEL_NAME                                   AS ITEM_LEVEL_NAME1
		         , A.ITEM_LEVEL2
		         , C4.LEVEL_NAME                                   AS ITEM_LEVEL_NAME2
		         , A.ITEM_LEVEL3
		         , C5.LEVEL_NAME                                   AS ITEM_LEVEL_NAME3
		         , A.SALE_UNIT
		         , A.TRNS_RATE
		         , A.TAX_TYPE
		         , A.SALE_BASIS_P
		         , A.BF_SALE_BASIS_P		         
		         , A.ITEM_NAME1
		         , A.ITEM_NAME2
		         , A.ITEM_GROUP
		         , CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                ELSE C1.ITEM_NAME
		           END                                             AS ITEM_GROUP_NAME
		         , A.STOCK_CARE_YN
		         , uniLITE.fnGetUserDate(A.COMP_CODE, A.START_DATE)AS START_DATE
		         , uniLITE.fnGetUserDate(A.COMP_CODE, A.STOP_DATE) AS STOP_DATE
		         , A.USE_YN
		         , A.BOOK_P
		         , CASE WHEN ISNULL(A.AUTO_DISCOUNT, '') = '' THEN 'N' ELSE A.AUTO_DISCOUNT END  AS AUTO_DISCOUNT
		         , A.SPEC_CONTROL
		         , A.SPEC_CONTROL_CODE
		         , ISNULL(A.EXCESS_RATE, 0)                        AS EXCESS_RATE
		         , A.BIG_BOX_BARCODE
		         , A.SMALL_BOX_BARCODE
		         , A.BARCODE		         
		         , ISNULL(A.USE_BY_DATE, 0)                        AS USE_BY_DATE
		         , ISNULL(A.CIR_PERIOD_YN, 'N')                    AS CIR_PERIOD_YN
		         , B.FIRST_PURCHASE_DATE
		         , B.LAST_PURCHASE_DATE
		         , B.FIRST_SALES_DATE
		         , B.LAST_SALES_DATE
		         , B.LAST_RETURN_DATE
		         , B.LAST_DELIVERY_DATE
		         , C8.CUSTOM_NAME AS LAST_DELIVERY_CUSTOM		         
		         , A.REMARK1
		         , A.REMARK2
		         , A.REMARK3		         
		         , B.DIV_CODE
		         , B.ITEM_ACCOUNT
		         , B.SUPPLY_TYPE
		         , B.ORDER_UNIT
		         , B.TRNS_RATE 							AS BUY_RATE 									  
		         , B.WH_CODE
		         , B.LOCATION
		         , B.ORDER_PLAN
		         , B.MATRL_PRESENT_DAY
		         , B.PURCHASE_BASE_P
		         , B.CUSTOM_CODE
		         , B.BIG_BOX_BARCODE  					AS BUY_BIG_BOX_BARCODE
		         , B.BIN_NUM		
		         , C7.DOC_NAME  						AS BIN_NAME       
		         , B.K_PRINTER
		         , B.BIN_FLOOR
		         , C6.CUSTOM_NAME
		       --  , (SELECT MAX(APLY_START_DATE) FROM BPR400T WHERE ITEM_CODE = A.ITEM_CODE AND COMP_CODE = A.COMP_CODE) AS SALE_DATE
		         , A.SALE_COMMON_P
		         , B.CONSIGNMENT_FEE
		         , B.MEMBER_DISCOUNT_YN
		         , ISNULL(B.EXCESS_RATE, 0)                        AS IN_EXCESS_RATE
		         , CASE WHEN A.STOCK_CARE_YN = 'Y' THEN ISNULL(B1.STOCK_Q, 0) ELSE 0 	END		AS STOCK_Q
				 , ISNULL(B2.SAFETY_Q, 0)       AS PROPER_STOCK_Q	--적정재고
				 , ISNULL(B3.ISSUE_PLAN_Q, 0)   AS ISSUE_PLAN_Q
				 , ISNULL(B4.RTN_REMAIN_Q, 0)   AS RTN_REMAIN_Q
				 		         
		    FROM              BPR100T A  WITH (NOLOCK)
		    	   LEFT  JOIN BPR200T B WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
		    	   									  AND B.DIV_CODE   = #{DIV_CODE}
		    	   									  AND B.ITEM_CODE  = A.ITEM_CODE
				   LEFT JOIN (
				               SELECT 
				               X.COMP_CODE, X.ITEM_CODE, SUM(X.STOCK_Q) AS STOCK_Q
				               FROM
				               (
	                           SELECT COMP_CODE, ITEM_CODE,STOCK_Q
							   FROM BIV150T WITH(NOLOCK)
		                       WHERE  COMP_CODE =  #{S_COMP_CODE}
		                         AND  DIV_CODE  =  #{DIV_CODE}
		                           
		                       UNION ALL
		                     
			 				   SELECT COMP_CODE, ITEM_CODE, STOCK_Q
							   FROM UNILITE.VGetDailyStock WITH(NOLOCK)
		                       WHERE  COMP_CODE =  #{S_COMP_CODE}
		                         AND  DIV_CODE  =  #{DIV_CODE}
				               ) X GROUP BY COMP_CODE, ITEM_CODE         
                       
                       		)  B1 
		                         ON A.ITEM_CODE = B1.ITEM_CODE 
		                        AND A.COMP_CODE = B1.COMP_CODE
                   LEFT JOIN (SELECT 
	                           COMP_CODE, ITEM_CODE 
							   ,SUM(SAFETY_Q) AS SAFETY_Q
							   FROM MRP600T WITH(NOLOCK)
							   WHERE COMP_CODE = #{S_COMP_CODE}
							      AND DIV_CODE = #{DIV_CODE}
                       		   GROUP BY COMP_CODE, ITEM_CODE)  B2 ON A.ITEM_CODE = B2.ITEM_CODE 
                       		   									 AND A.COMP_CODE = B2.COMP_CODE
                   LEFT JOIN (SELECT 
	                            A.COMP_CODE, B.ITEM_CODE 
							   ,SUM(B.ORDER_Q - B.OUTSTOCK_Q) AS ISSUE_PLAN_Q
							   FROM       SOF100T  A WITH(NOLOCK)
							   INNER JOIN SOF110T  B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE 
																 AND A.DIV_CODE  = B.DIV_CODE 
																 AND A.ORDER_NUM = B.ORDER_NUM
							   WHERE A.COMP_CODE = #{S_COMP_CODE}
							      AND A.DIV_CODE = #{DIV_CODE}
								  AND B.ORDER_Q - B.OUTSTOCK_Q > 0
								  AND B.ORDER_STATUS = 'N'
                       			GROUP BY A.COMP_CODE, B.ITEM_CODE)  B3 ON A.ITEM_CODE = B3.ITEM_CODE 
                       										 		  AND A.COMP_CODE = B3.COMP_CODE
 
				  LEFT JOIN (SELECT A.COMP_CODE, A.ITEM_CODE
						           ,SUM(A.RETURN_Q - A.INOUT_Q) AS RTN_REMAIN_Q
						 	 FROM MRT200T A WITH(NOLOCK)
						 	WHERE A.COMP_CODE = #{S_COMP_CODE}
							  AND A.DIV_CODE  = #{DIV_CODE}
							  AND A.CLOSE_YN  = 'N'
						   	  AND ISNULL(A.RETURN_Q, 0) - ISNULL(A.INOUT_Q, 0) > 0
						 	 GROUP BY A.COMP_CODE, A.DIV_CODE, A.ITEM_CODE) B4 ON A.ITEM_CODE = B4.ITEM_CODE
                       										 		  		  AND A.COMP_CODE = B4.COMP_CODE
				   LEFT  JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
		                                              AND C1.ITEM_CODE  = A.ITEM_GROUP
		           LEFT  JOIN BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
		                                              AND C2.ITEM_CODE  = A.TOTAL_ITEM				   		                                              		    	   									  
		           LEFT  JOIN BPR000T C3 WITH (NOLOCK) ON C3.COMP_CODE  = A.COMP_CODE
		                                              AND C3.LEVEL1    != '*'
		                                              AND C3.LEVEL1     = A.ITEM_LEVEL1
		                                              AND C3.LEVEL2     = '*'
		                                              AND C3.LEVEL3     = '*'
		           LEFT  JOIN BPR000T C4 WITH (NOLOCK) ON C4.COMP_CODE  = A.COMP_CODE
		                                              AND C4.LEVEL1    != '*'
		                                              AND C4.LEVEL1     = A.ITEM_LEVEL1
		                                              AND C4.LEVEL2    != '*'
		                                              AND C4.LEVEL2     = A.ITEM_LEVEL2
		                                              AND C4.LEVEL3     = '*'
		           LEFT  JOIN BPR000T C5 WITH (NOLOCK) ON C5.COMP_CODE  = A.COMP_CODE
		                                              AND C5.LEVEL1    != '*'
		                                              AND C5.LEVEL1     = A.ITEM_LEVEL1
		                                              AND C5.LEVEL2    != '*'
		                                              AND C5.LEVEL2     = A.ITEM_LEVEL2
		                                              AND C5.LEVEL3    != '*'
		                                              AND C5.LEVEL3     = A.ITEM_LEVEL3
				   LEFT  JOIN BCM100T C6 WITH (NOLOCK) ON C6.COMP_CODE   = B.COMP_CODE
		                                              AND C6.CUSTOM_CODE = B.CUSTOM_CODE
				   LEFT  JOIN BPR210T C7 WITH (NOLOCK) ON C7.COMP_CODE   = A.COMP_CODE
		                                              AND C7.DIV_CODE    = #{DIV_CODE}
		                                              AND C7.BIN_NUM	 = B.BIN_NUM
				   LEFT  JOIN BCM100T C8 WITH (NOLOCK) ON C8.COMP_CODE   = B.COMP_CODE
		                                              AND C8.CUSTOM_CODE = B.LAST_DELIVERY_CUSTOM		                                              
		    WHERE  A.COMP_CODE     =       #{S_COMP_CODE}
		    	AND B.ITEM_ACCOUNT != '00'
	    	<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">  
	    		AND B.ITEM_ACCOUNT =   #{ITEM_ACCOUNT}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">  
		    	AND A.ITEM_CODE  LIKE  #{ITEM_CODE} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		    	AND B.DIV_CODE 	   =   #{DIV_CODE}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">  
		    	AND  ((REPLACE(A.ITEM_NAME, ' ', '')  LIKE '%' + REPLACE(#{ITEM_NAME}, ' ', '') + '%' AND @RefItem    = '0') 
		    	 OR   (REPLACE(A.ITEM_NAME1, ' ', '') LIKE '%' + REPLACE(#{ITEM_NAME}, ' ', '') + '%' AND @RefItem    = '1') 
		    	 OR   (REPLACE(A.ITEM_NAME2, ' ', '') LIKE '%' + REPLACE(#{ITEM_NAME}, ' ', '') + '%' AND @RefItem    = '2')
				)
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		    	AND	A.ITEM_LEVEL1 = #{ITEM_LEVEL1}
		    </if>  
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">  
		    	AND	A.ITEM_LEVEL2 = #{ITEM_LEVEL2}
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		    	AND	A.ITEM_LEVEL3 = #{ITEM_LEVEL3}  
		    </if>
		    
		    
		    <if test="TXTFIND_TYPE == &quot;01&quot;">
		    	<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		    		AND	A.SPEC = #{TXT_SEARCH}
		    	</if>
		    </if>
		    
		    <if test="TXTFIND_TYPE == &quot;02&quot;">
		    	<if test="@foren.Ognl@isNotEmpty(TXT_SEARCH)">
		    		AND	A.SPEC_NUM = #{TXT_SEARCH}
		    	</if>
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(USE_YN)">
		    	AND	A.USE_YN = #{USE_YN}
		    </if>
		    
		     <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
		    	AND	A.ITEM_GROUP = #{ITEM_GROUP}
		    </if>
		    
		     ORDER  BY 
		     <if test="SORT1 == &quot;ITEM_CODE&quot;">
		    		A.ITEM_CODE 
					 <if test="SORT1_SEQ == &quot;DESC&quot;">
					 	DESC
					 </if>
					 <if test="SORT2 == &quot;ITEM_NAME&quot;">
					 	, A.ITEM_NAME
					 	<if test="SORT2_SEQ == &quot;DESC&quot;">
						 	DESC
						 </if>
					 </if>
		     </if>
		     <if test="SORT1 == &quot;ITEM_NAME&quot;">
		     		 A.ITEM_NAME 
					 <if test="SORT1_SEQ == &quot;DESC&quot;">
					 	DESC
					 </if>
					 <if test="SORT2 == &quot;ITEM_CODE&quot;">
					 	, A.ITEM_CODE
					 	<if test="SORT2_SEQ == &quot;DESC&quot;">
						 	DESC
						 </if>
					 </if>
		     </if>
		     <if test="SORT1 != &quot;ITEM_CODE&quot;">
		     	<if test="SORT1 != &quot;ITEM_NAME&quot;">
		     	A.ITEM_CODE
		     	</if>
		     </if>
     	END
	</select>
	
	<select id="bpr101ukrvService.selectSubDetailList" parameterType="Map" resultType="rMap">		
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode       NVARCHAR(08) /* 법인코드    */
		          , @UserId         NVARCHAR(100) /* 사용자ID    */
		          , @LangType       NVARCHAR(2)  /* 언어구분    */
		          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}   
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
			
		SELECT A.TYPE
		     , A.DIV_CODE
		     , A.ITEM_CODE
		     , A.CUSTOM_CODE
		     , MAX(CASE WHEN @RefItem = '1' THEN B.CUSTOM_NAME1
		             WHEN @RefItem = '2' THEN B.CUSTOM_NAME2
		                                 ELSE B.CUSTOM_NAME
		         END)                        AS CUSTOM_NAME
		     , A.MONEY_UNIT
		     , A.ORDER_UNIT		     
		     , A.ITEM_P
		     , (CASE WHEN ISNULL(MAX(A.APLY_START_DATE), '') = ''
		             THEN ''
		             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.APLY_START_DATE, 1, 4))
		                                                     , 'MM'  , SUBSTRING(A.APLY_START_DATE, 5, 2))
		                                                     , 'DD'  , SUBSTRING(A.APLY_START_DATE, 7, 2))
		         END)                AS APLY_START_DATE
		     , (CASE WHEN ISNULL(MAX(A.APLY_END_DATE), '') = ''
		             THEN ''
		             ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.APLY_END_DATE, 1, 4))
		                                                     , 'MM'  , SUBSTRING(A.APLY_END_DATE, 5, 2))
		                                                     , 'DD'  , SUBSTRING(A.APLY_END_DATE, 7, 2))
		         END)                AS APLY_END_DATE  
		     , A.ORDER_RATE
		     , A.PURCHASE_RATE
		     , A.USE_YN		     
		     ,(A.ITEM_P * A.ORDER_RATE) AS PRICE
		     , A.PURCHASE_TYPE
		     , A.SALES_TYPE
		     , MAX(A.UPDATE_DB_USER) AS UPDATE_DB_USER
		     , MAX(A.UPDATE_DB_TIME) AS UPDATE_DB_TIME
		     , A.COMP_CODE
		     , A.BASIS_P
		  FROM BPR400T A WITH (NOLOCK)
		     , BCM100T B WITH (NOLOCK)
		 WHERE A.COMP_CODE        = B.COMP_CODE
		   AND A.CUSTOM_CODE      = B.CUSTOM_CODE
		   AND A.TYPE             = N'1'
		   AND A.COMP_CODE        = #{S_COMP_CODE}	
		   AND A.DIV_CODE         = #{DIV_CODE}
		   AND A.ITEM_CODE        = #{ITEM_CODE}
		 GROUP BY A.TYPE      , A.DIV_CODE  , A.ITEM_CODE, A.CUSTOM_CODE, A.MONEY_UNIT
		        , A.ORDER_UNIT, A.ORDER_RATE, A.PURCHASE_RATE, A.USE_YN, A.COMP_CODE , B.CUSTOM_NAME, B.CUSTOM_NAME1, B.CUSTOM_NAME2, A.APLY_START_DATE
		 		, A.APLY_END_DATE, A.ITEM_P,     A.PURCHASE_TYPE,   A.SALES_TYPE, A.BASIS_P
		 ORDER BY A.TYPE      , A.DIV_CODE  , A.ITEM_CODE, A.CUSTOM_CODE,  A.MONEY_UNIT
		        , A.ORDER_UNIT, A.ORDER_RATE
		        
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END	
	</select>
	
	<select id="bpr101ukrvService.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}    
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'         
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>
	<select id="bpr101ukrvService.checkChildCode" parameterType="Map" resultType="rMap">
		SELECT PROD_ITEM_CODE
                     , CHILD_ITEM_CODE
                  FROM BPR500T WITH (NOLOCK) 
                 WHERE COMP_CODE       = #{COMP_CODE}
                   AND CHILD_ITEM_CODE = #{ITEM_CODE}
	</select>
	<select id="bpr101ukrvService.chkInOutHistory" parameterType="Map" resultType="rMap">
		DECLARE @CNT INT		
			SET @CNT = 0
		
		SELECT @CNT = @CNT + COUNT(*) 
		  FROM 				SSA110T  A WITH (NOLOCK) 
		  		INNER JOIN	SSA100T  B WITH (NOLOCK)	ON B.COMP_CODE = A.COMP_CODE
		  											   AND B.BILL_NUM  = A.BILL_NUM
		  											   AND B.DIV_CODE  = A.DIV_CODE
		 WHERE A.ITEM_CODE = #{ITEM_CODE} 
		   AND A.COMP_CODE = #{S_COMP_CODE} 
		   AND A.DIV_CODE = #{DIV_CODE}
		 <if test="@foren.Ognl@isEmpty(IS_MASTER)">
		   AND A.PURCHASE_CUSTOM_CODE = #{CUSTOM_CODE}
		   AND B.SALE_DATE	&gt;= #{APLY_START_DATE}		 
		   AND B.SALE_DATE	&lt;= #{APLY_END_DATE}
		 </if>		 
		 		
		SELECT @CNT = @CNT + COUNT(*) 
		  FROM BTR100T WITH (NOLOCK) 
		 WHERE ITEM_CODE = #{ITEM_CODE} 
		   AND COMP_CODE = #{S_COMP_CODE} 
		   AND DIV_CODE = #{DIV_CODE}		
		<if test="@foren.Ognl@isEmpty(IS_MASTER)">
		   AND PURCHASE_CUSTOM_CODE = #{CUSTOM_CODE}
		   AND INOUT_DATE &gt;= #{APLY_START_DATE}	
		   AND INOUT_DATE &lt;= #{APLY_END_DATE}
		</if>
		
		<if test="@foren.Ognl@isNotEmpty(IS_MASTER)">
		SELECT @CNT = @CNT + COUNT(*) 
		  FROM BPR400T WITH (NOLOCK) 
		 WHERE ITEM_CODE = #{ITEM_CODE} 
		   AND COMP_CODE = #{S_COMP_CODE} 
		   AND DIV_CODE = #{DIV_CODE}
		</if>
		SELECT @CNT AS CNT
	</select>
	<select id="bpr101ukrvService.checkItemCode" parameterType="Map" resultType="rMap">
		    SELECT COUNT(ITEM_CODE) AS CNT
		    FROM   BPR200T WITH (NOLOCK)
		    WHERE  COMP_CODE=#{S_COMP_CODE}
		      AND  ITEM_CODE=#{ITEM_CODE}
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		      AND  DIV_CODE =#{DIV_CODE}			
		    </if>
	</select>
	<select id="bpr101ukrvService.checkItemDuplicate" parameterType="Map" resultType="rMap">
		    SELECT COUNT(ITEM_CODE) AS CNT
		    FROM   BPR200T WITH (NOLOCK)
		    WHERE  COMP_CODE=#{S_COMP_CODE}
		      AND  ITEM_CODE=#{ITEM_CODE}		
	</select>
	<select id="bpr101ukrvService.checkItemPrice" parameterType="Map" resultType="rMap">
		    SELECT COUNT(ITEM_CODE) AS CNT
		    FROM   BPR400T WITH (NOLOCK)
		    WHERE  COMP_CODE=#{COMP_CODE}
		      AND  ITEM_CODE=#{ITEM_CODE}			
	</select>
	
	<select id="bpr101ukrvService.chkSaleBasisPDuplicate" parameterType="Map" resultType="rMap">
		    SELECT COUNT(ITEM_CODE) AS CNT
		    FROM   BPR400T WITH (NOLOCK)
		    WHERE  COMP_CODE    = 	  #{S_COMP_CODE} 
			  AND	TYPE	    = 	  #{TYPE}
		      AND	DIV_CODE	= 	  #{DIV_CODE}
		      AND	ITEM_CODE   = 	  #{ITEM_CODE}
		      AND	CUSTOM_CODE = 	  #{CUSTOM_CODE}
		      AND	MONEY_UNIT  = 	  #{MONEY_UNIT}		
		      AND	ORDER_UNIT  = 	  #{ORDER_UNIT}
		      AND	APLY_START_DATE = #{APLY_START_DATE}			
	</select>
	
	<delete id="bpr101ukrvService.deleteSaleBasisPDuplicate" parameterType="Map" >
		   BEGIN
			DELETE  FROM BPR400T
			WHERE 	COMP_CODE    = 	  #{S_COMP_CODE} 
			  AND	TYPE	    = 	  #{TYPE}
		      AND	DIV_CODE	= 	  #{DIV_CODE}
		      AND	ITEM_CODE   = 	  #{ITEM_CODE}
		      AND	CUSTOM_CODE = 	  #{CUSTOM_CODE}
		      AND	MONEY_UNIT  = 	  #{MONEY_UNIT}		
		      AND	ORDER_UNIT  = 	  #{ORDER_UNIT}
		      AND	APLY_START_DATE = #{APLY_START_DATE}
		END			
	</delete>
	
	<select id="bpr101ukrvService.getDivList" parameterType="Map" resultType="rMap">
		    SELECT DIV_CODE  FROM   BOR120T WITH (NOLOCK)	WHERE COMP_CODE = #{S_COMP_CODE}
	</select>
	
	<select id="bpr101ukrvService.selectStockList" parameterType="Map" resultType="rMap">
		SELECT   
		      A.COMP_CODE
		     ,A.WH_CODE
		     ,C.TREE_NAME                      			   AS WH_NAME
		 	 ,ISNULL(D.CUSTOM_CODE, '') 	   			   AS CUSTOM_CODE
		     ,ISNULL(D.CUSTOM_NAME, '') 	   		       AS CUSTOM_NAME
		     ,ISNULL(A.PURCHASE_P, 0)     	   			   AS PURCHASE_P
		     ,SUM(CASE WHEN E.STOCK_CARE_YN = 'Y' THEN ISNULL(A.STOCK_Q, 0) ELSE 0 	END	)			   AS STOCK_Q
		 FROM (
               SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, B.PURCHASE_CUSTOM_CODE, B.PURCHASE_P, A.STOCK_Q
			   FROM 	   BIV150T A WITH(NOLOCK)
			   LEFT JOIN   BIV350T B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE 
			                                     AND A.DIV_CODE    = B.DIV_CODE 
			                                     AND A.LOT_NO      = B.LOT_NO
			                                     AND A.WH_CODE     = B.WH_CODE
			                                     AND A.ITEM_CODE   = B.ITEM_CODE
               WHERE A.COMP_CODE =  #{S_COMP_CODE}
			   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
			   		AND  A.DIV_CODE  = #{DIV_CODE}
			   </if>
			   
               UNION ALL
             
			   SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, A.PURCHASE_CUSTOM_CODE, A.PURCHASE_P, A.STOCK_Q
			   FROM UNILITE.VGetDailyStock A WITH(NOLOCK)
               WHERE A.COMP_CODE =  #{S_COMP_CODE}
			   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
			   		AND  A.DIV_CODE  = #{DIV_CODE}
			   </if>
		      ) A
			    INNER JOIN  BSA220T C WITH (NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
									               AND A.DIV_CODE    = C.TYPE_LEVEL
									               AND A.WH_CODE     = C.TREE_CODE
			    LEFT  JOIN  BCM100T D WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
			                                       AND D.CUSTOM_CODE = A.PURCHASE_CUSTOM_CODE
				INNER JOIN  BPR100T E WITH (NOLOCK) ON E.COMP_CODE   = A.COMP_CODE
												   AND E.ITEM_CODE   = A.ITEM_CODE
		   
		 WHERE  A.COMP_CODE = #{S_COMP_CODE}
		   AND  A.ITEM_CODE = #{ITEM_CODE}
		   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
		   AND  A.DIV_CODE  = #{DIV_CODE}
		   </if>
		   GROUP BY A.COMP_CODE, A.WH_CODE, C.TREE_NAME, D.CUSTOM_CODE, D.CUSTOM_NAME, A.PURCHASE_P
		   ORDER BY A.WH_CODE	
	</select>
	<select id="bpr101ukrvService.getAutoItemCode" parameterType="Map" resultType="rMap">
		DECLARE @COMP_CODE NVARCHAR(10), @sAUTO_ITEM_CODE NVARCHAR(20)
		SET @COMP_CODE = #{S_COMP_CODE}	
		EXEC uniLITE.SP_GetItemCodeYsu @COMP_CODE, @sAUTO_ITEM_CODE OUTPUT
		SELECT @sAUTO_ITEM_CODE	AS	ITEM_CODE
	</select>
	<update id="bpr101ukrvService.bpr100tInsertDetail" parameterType="Map">
		BEGIN
			INSERT INTO BPR100T
	           (COMP_CODE
	           ,ITEM_CODE
	           ,ITEM_NAME
	           ,STOCK_UNIT
	           ,TAX_TYPE            
			<if test="@foren.Ognl@isNotEmpty(SPEC)">           
	           ,SPEC
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">           
	           ,ITEM_LEVEL1
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">           
	           ,ITEM_LEVEL2
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">           
	           ,ITEM_LEVEL3
			</if>
			<if test="@foren.Ognl@isNotEmpty(SALE_UNIT)">           
	           ,SALE_UNIT
			</if>
			<if test="@foren.Ognl@isNotEmpty(TRNS_RATE)">           
	           ,TRNS_RATE
			</if>
			<if test="@foren.Ognl@isNotEmpty(SALE_BASIS_P)">           
	           ,SALE_BASIS_P
			</if>		
			<if test="@foren.Ognl@isNotEmpty(ITEM_NAME1)">           
	           ,ITEM_NAME1
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_NAME2)">           
	           ,ITEM_NAME2
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">           
	           ,ITEM_GROUP
			</if>
			<if test="@foren.Ognl@isNotEmpty(STOCK_CARE_YN)">           
	           ,STOCK_CARE_YN
			</if>
			<if test="@foren.Ognl@isNotEmpty(START_DATE)">           
	           ,START_DATE
			</if>
			<if test="@foren.Ognl@isNotEmpty(STOP_DATE)">           
	           ,STOP_DATE
			</if>
			<if test="@foren.Ognl@isNotEmpty(USE_YN)">           
	           ,USE_YN
			</if>
			<if test="@foren.Ognl@isNotEmpty(BOOK_P)">           
	           ,BOOK_P
			</if>
			<if test="@foren.Ognl@isNotEmpty(AUTO_DISCOUNT)">           
	           ,AUTO_DISCOUNT
			</if>
			<if test="@foren.Ognl@isNotEmpty(SPEC_CONTROL)">           
	           ,SPEC_CONTROL
			</if>
			<if test="@foren.Ognl@isNotEmpty(SPEC_CONTROL_CODE)">           
	           ,SPEC_CONTROL_CODE
			</if>
			<if test="@foren.Ognl@isNotEmpty(EXCESS_RATE)">           
	           ,EXCESS_RATE
			</if>
			<if test="@foren.Ognl@isNotEmpty(BIG_BOX_BARCODE)">           
	           ,BIG_BOX_BARCODE
			</if>
			<if test="@foren.Ognl@isNotEmpty(SMALL_BOX_BARCODE)">           
	           ,SMALL_BOX_BARCODE
			</if>
			<if test="@foren.Ognl@isNotEmpty(BARCODE)">           
	           ,BARCODE
			</if>			
			<if test="@foren.Ognl@isNotEmpty(USE_BY_DATE)">           
	           ,USE_BY_DATE
			</if>
			<if test="@foren.Ognl@isNotEmpty(CIR_PERIOD_YN)">           
	           ,CIR_PERIOD_YN
			</if>
			<if test="@foren.Ognl@isNotEmpty(REMARK1)">           
	           ,REMARK1
			</if>
			<if test="@foren.Ognl@isNotEmpty(REMARK2)">           
	           ,REMARK2
			</if>
			<if test="@foren.Ognl@isNotEmpty(REMARK3)">           
	           ,REMARK3
			</if>  
			<if test="@foren.Ognl@isNotEmpty(SALE_COMMON_P)">           
	           ,SALE_COMMON_P
			</if>
	        	,INSERT_DB_USER
	        	,INSERT_DB_TIME
	          	,UPDATE_DB_USER
	          	,UPDATE_DB_TIME
				)
	     VALUES
	           (#{COMP_CODE}       
	           ,#{ITEM_CODE}       
	           ,#{ITEM_NAME}       
	           ,#{STOCK_UNIT}      
	           ,#{TAX_TYPE}        
	                   
	 		<if test="@foren.Ognl@isNotEmpty(SPEC)">           
	           ,#{SPEC}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">           
	           ,#{ITEM_LEVEL1}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">           
	           ,#{ITEM_LEVEL2}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">           
	           ,#{ITEM_LEVEL3}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SALE_UNIT)">           
	           ,#{SALE_UNIT}
			</if>
			<if test="@foren.Ognl@isNotEmpty(TRNS_RATE)">           
	           ,#{TRNS_RATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SALE_BASIS_P)">           
	           ,#{SALE_BASIS_P}
			</if>		
			<if test="@foren.Ognl@isNotEmpty(ITEM_NAME1)">           
	           ,#{ITEM_NAME1}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_NAME2)">           
	           ,#{ITEM_NAME2}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">           
	           ,#{ITEM_GROUP}
			</if>
			<if test="@foren.Ognl@isNotEmpty(STOCK_CARE_YN)">           
	           ,#{STOCK_CARE_YN}
			</if>
			<if test="@foren.Ognl@isNotEmpty(START_DATE)">           
	           ,#{START_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(STOP_DATE)">           
	           ,#{STOP_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(USE_YN)">           
	           ,#{USE_YN}
			</if>
			<if test="@foren.Ognl@isNotEmpty(BOOK_P)">           
	           ,#{BOOK_P}
			</if>
			<if test="@foren.Ognl@isNotEmpty(AUTO_DISCOUNT)">           
	           ,#{AUTO_DISCOUNT}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SPEC_CONTROL)">           
	           ,#{SPEC_CONTROL}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SPEC_CONTROL_CODE)">           
	           ,#{SPEC_CONTROL_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(EXCESS_RATE)">           
	           ,#{EXCESS_RATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(BIG_BOX_BARCODE)">           
	           ,#{BIG_BOX_BARCODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SMALL_BOX_BARCODE)">           
	           ,#{SMALL_BOX_BARCODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(BARCODE)">           
	           ,#{BARCODE}
			</if>			
			<if test="@foren.Ognl@isNotEmpty(USE_BY_DATE)">           
	           ,#{USE_BY_DATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CIR_PERIOD_YN)">           
	           ,#{CIR_PERIOD_YN}
			</if>
			<if test="@foren.Ognl@isNotEmpty(REMARK1)">           
	           ,#{REMARK1}
			</if>
			<if test="@foren.Ognl@isNotEmpty(REMARK2)">           
	           ,#{REMARK2}
			</if>
			<if test="@foren.Ognl@isNotEmpty(REMARK3)">           
	           ,#{REMARK3}
			</if>		
			<if test="@foren.Ognl@isNotEmpty(SALE_COMMON_P)">           
	           ,#{SALE_COMMON_P}
			</if>
			   ,#{S_USER_ID}			            
	           ,getdate()			            
	           ,#{S_USER_ID}			             
	           ,getdate()
	        )
		END
	</update>
	<update id="bpr101ukrvService.bpr200tInsertDetail" parameterType="Map">		
		BEGIN
			INSERT INTO BPR200T
	           (COMP_CODE
	           ,ITEM_CODE
	           ,ITEM_NAME
	           ,DIV_CODE
	           ,ITEM_ACCOUNT
	           ,SUPPLY_TYPE
	           ,ORDER_UNIT
	           ,WH_CODE
	           ,ORDER_PLAN
			
			<if test="@foren.Ognl@isNotEmpty(BUY_RATE)">           
	           ,TRNS_RATE
			</if>
			<if test="@foren.Ognl@isNotEmpty(LOCATION)">           
	           ,LOCATION
			</if>
			<if test="@foren.Ognl@isNotEmpty(MATRL_PRESENT_DAY)">           
	           ,MATRL_PRESENT_DAY
			</if>
			<if test="@foren.Ognl@isNotEmpty(PURCHASE_BASE_P)">           
	           ,PURCHASE_BASE_P
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">           
	           ,CUSTOM_CODE
			</if>			
			<if test="@foren.Ognl@isNotEmpty(BUY_BIG_BOX_BARCODE)">           
	           ,BIG_BOX_BARCODE
			</if>
			<if test="@foren.Ognl@isNotEmpty(BIN_NUM)">           
	           ,BIN_NUM
			</if>
			<if test="@foren.Ognl@isNotEmpty(K_PRINTER)">           
	           ,K_PRINTER
			</if>
			<if test="@foren.Ognl@isNotEmpty(BIN_FLOOR)">           
	           ,BIN_FLOOR
			</if>
			<if test="@foren.Ognl@isNotEmpty(CONSIGNMENT_FEE)">           
	           ,CONSIGNMENT_FEE
			</if>
			<if test="@foren.Ognl@isNotEmpty(MEMBER_DISCOUNT_YN)">           
	           ,MEMBER_DISCOUNT_YN
			</if>
			<if test="@foren.Ognl@isNotEmpty(IN_EXCESS_RATE)">           
	           ,EXCESS_RATE
			</if>
	        	,INSERT_DB_USER
	        	,INSERT_DB_TIME
	          	,UPDATE_DB_USER
	          	,UPDATE_DB_TIME
				)
	     VALUES
	           (#{COMP_CODE}
	           ,#{ITEM_CODE}       
	           ,#{ITEM_NAME}        
	           ,#{DIV_CODE} 
	           ,#{ITEM_ACCOUNT} 
	           ,#{SUPPLY_TYPE} 
	           ,#{ORDER_UNIT} 
	           ,#{WH_CODE}
	           ,#{ORDER_PLAN}
	        <if test="@foren.Ognl@isNotEmpty(BUY_RATE)">           
	           ,#{BUY_RATE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(LOCATION)">           
	           ,#{LOCATION}
			</if>
			<if test="@foren.Ognl@isNotEmpty(MATRL_PRESENT_DAY)">           
	           ,#{MATRL_PRESENT_DAY}
			</if>
			<if test="@foren.Ognl@isNotEmpty(PURCHASE_BASE_P)">           
	           ,#{PURCHASE_BASE_P}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">           
	           ,#{CUSTOM_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(BUY_BIG_BOX_BARCODE)">           
	           ,#{BUY_BIG_BOX_BARCODE}
			</if>    
			<if test="@foren.Ognl@isNotEmpty(BIN_NUM)">           
	           ,#{BIN_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(K_PRINTER)">           
	           ,#{K_PRINTER}
			</if>				
			<if test="@foren.Ognl@isNotEmpty(BIN_FLOOR)">           
	           ,#{BIN_FLOOR}
			</if>  
			<if test="@foren.Ognl@isNotEmpty(CONSIGNMENT_FEE)">           
	           ,#{CONSIGNMENT_FEE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(MEMBER_DISCOUNT_YN)">           
	           ,#{MEMBER_DISCOUNT_YN}
			</if>
			<if test="@foren.Ognl@isNotEmpty(IN_EXCESS_RATE)">           
	           ,#{IN_EXCESS_RATE}
			</if>      
			   ,#{S_USER_ID}			            
	           ,getdate()			            
	           ,#{S_USER_ID}			             
	           ,getdate()
	        )
		END
	</update>
	
	<update id="bpr101ukrvService.bpr400tInsertDetail" parameterType="Map">		
        BEGIN
			INSERT INTO BPR400T
	           ( COMP_CODE
	            ,TYPE
	            ,DIV_CODE
	            ,ITEM_CODE
	            ,CUSTOM_CODE
	            ,MONEY_UNIT
	            ,ORDER_UNIT   
	            ,APLY_START_DATE
	            ,APLY_END_DATE   
	            ,ITEM_P   
	        	,INSERT_DB_USER
	        	,INSERT_DB_TIME
	          	,UPDATE_DB_USER
	          	,UPDATE_DB_TIME
				)
	     VALUES
	           (#{COMP_CODE}
	           ,'2'       
	           ,'*'       
	           ,#{ITEM_CODE}      
	           ,'000000'
	           ,#{MONEY_UNIT}
	           ,#{ORDER_UNIT}
	           ,#{SALE_DATE}
	           ,'29991231'
	           ,#{SALE_BASIS_P}
	           ,#{S_USER_ID}
	           ,getdate()			            
	           ,#{S_USER_ID}			             
	           ,getdate() 
	        )
		END	
	</update>
	<update id="bpr101ukrvService.bpr200tUpdateDetail" parameterType="Map">		 
		BEGIN
	       UPDATE BPR200T
			SET 
				 ITEM_NAME   = #{ITEM_NAME}
				,DIV_CODE    = #{DIV_CODE}
			    ,ITEM_ACCOUNT= #{ITEM_ACCOUNT}
			    ,SUPPLY_TYPE = #{SUPPLY_TYPE}
			    ,ORDER_UNIT  = #{ORDER_UNIT}
			    ,WH_CODE 	 = #{WH_CODE}
			    ,ORDER_PLAN  = #{ORDER_PLAN}	    		
			<if test="@foren.Ognl@isExists(_parameter, 'BUY_RATE')">           
	           ,TRNS_RATE = #{BUY_RATE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'LOCATION')">           
	           ,LOCATION = #{LOCATION}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'MATRL_PRESENT_DAY')">           
	           ,MATRL_PRESENT_DAY = #{MATRL_PRESENT_DAY}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'PURCHASE_BASE_P')">           
	           ,PURCHASE_BASE_P = #{PURCHASE_BASE_P}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'CUSTOM_CODE')">           
	           ,CUSTOM_CODE = #{CUSTOM_CODE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'BUY_BIG_BOX_BARCODE')">           
	           ,BIG_BOX_BARCODE = #{BUY_BIG_BOX_BARCODE}
			</if>			
			<if test="@foren.Ognl@isExists(_parameter, 'BIN_NUM')">           
	           ,BIN_NUM = #{BIN_NUM}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'K_PRINTER')">           
	           ,K_PRINTER = #{K_PRINTER}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'BIN_FLOOR')">           
	           ,BIN_FLOOR = #{BIN_FLOOR}
			</if>	
			<if test="@foren.Ognl@isNotEmpty(CONSIGNMENT_FEE)">
	           ,CONSIGNMENT_FEE = #{CONSIGNMENT_FEE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'MEMBER_DISCOUNT_YN')">           
	           ,MEMBER_DISCOUNT_YN = #{MEMBER_DISCOUNT_YN}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'IN_EXCESS_RATE')">           
	           ,EXCESS_RATE = #{IN_EXCESS_RATE}
			</if>
	           ,UPDATE_DB_USER = #{S_USER_ID} 
			   ,UPDATE_DB_TIME = getdate()
	       WHERE 	COMP_CODE = #{COMP_CODE}
	         AND    ITEM_CODE = #{ITEM_CODE}
	         AND    DIV_CODE  = #{DIV_CODE}
		END

		BEGIN
	       UPDATE BPR200T
			  SET ITEM_NAME      = #{ITEM_NAME}
	             ,UPDATE_DB_USER = #{S_USER_ID} 
			     ,UPDATE_DB_TIME = GETDATE()
	       WHERE COMP_CODE = #{COMP_CODE}
	         AND ITEM_CODE = #{ITEM_CODE}
	         AND DIV_CODE NOT IN (#{DIV_CODE})
		END
				
	</update>
	<update id="bpr101ukrvService.bpr100tUpdateDetail" parameterType="Map">
		
		BEGIN
			UPDATE BPR100T
			SET 
				 ITEM_NAME   = #{ITEM_NAME}
			    ,STOCK_UNIT  = #{STOCK_UNIT}
			    ,TAX_TYPE    = #{TAX_TYPE}		    	    		
			<if test="@foren.Ognl@isExists(_parameter, 'SPEC')">           
	           ,SPEC = #{SPEC}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'ITEM_LEVEL1')">           
	           ,ITEM_LEVEL1 = #{ITEM_LEVEL1}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'ITEM_LEVEL2')">           
	           ,ITEM_LEVEL2 = #{ITEM_LEVEL2}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'ITEM_LEVEL3')">           
	           ,ITEM_LEVEL3 = #{ITEM_LEVEL3}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'SALE_UNIT')">           
	           ,SALE_UNIT = #{SALE_UNIT}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'TRNS_RATE')">           
	           ,TRNS_RATE = #{TRNS_RATE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'SALE_BASIS_P')">           
	           ,SALE_BASIS_P = #{SALE_BASIS_P}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'BF_SALE_BASIS_P')">
	           ,BF_SALE_BASIS_P = #{BF_SALE_BASIS_P}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'ITEM_NAME1')">           
	           ,ITEM_NAME1 = #{ITEM_NAME1}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'ITEM_NAME2')">           
	           ,ITEM_NAME2 = #{ITEM_NAME2}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'ITEM_GROUP')">           
	           ,ITEM_GROUP = #{ITEM_GROUP}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'STOCK_CARE_YN')">           
	           ,STOCK_CARE_YN = #{STOCK_CARE_YN}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'START_DATE')">           
	           ,START_DATE = #{START_DATE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'STOP_DATE')">           
	           ,STOP_DATE = #{STOP_DATE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'USE_YN')">           
	           ,USE_YN = #{USE_YN}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'BOOK_P')">           
	           ,BOOK_P = #{BOOK_P}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'AUTO_DISCOUNT')">           
	           ,AUTO_DISCOUNT = #{AUTO_DISCOUNT}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'SPEC_CONTROL')">           
	           ,SPEC_CONTROL = #{SPEC_CONTROL}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'SPEC_CONTROL_CODE')">           
	           ,SPEC_CONTROL_CODE = #{SPEC_CONTROL_CODE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'EXCESS_RATE')">           
	           ,EXCESS_RATE = #{EXCESS_RATE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'BIG_BOX_BARCODE')">           
	           ,BIG_BOX_BARCODE = #{BIG_BOX_BARCODE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'SMALL_BOX_BARCODE')">           
	           ,SMALL_BOX_BARCODE = #{SMALL_BOX_BARCODE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'BARCODE')">           
	           ,BARCODE = #{BARCODE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'USE_BY_DATE')">           
	           ,USE_BY_DATE = #{USE_BY_DATE}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'CIR_PERIOD_YN')">           
	           ,CIR_PERIOD_YN = #{CIR_PERIOD_YN}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'REMARK1')">           
	           ,REMARK1 = #{REMARK1}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'REMARK2')">           
	           ,REMARK2 = #{REMARK2}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'REMARK3')">           
	           ,REMARK3 = #{REMARK3}
			</if>
			<if test="@foren.Ognl@isExists(_parameter, 'SALE_COMMON_P')">           
	           ,SALE_COMMON_P = #{SALE_COMMON_P}
			</if>
	           ,UPDATE_DB_USER = #{S_USER_ID} 
			   ,UPDATE_DB_TIME = getdate()
	       WHERE 	COMP_CODE = #{COMP_CODE}
	         AND    ITEM_CODE = #{ITEM_CODE}
		END		
		
	</update>
	<update id="bpr101ukrvService.bpr400tUpdateDetail" parameterType="Map">
		BEGIN
			UPDATE BPR400T
			SET ORDER_UNIT = #{ORDER_UNIT}
			   ,APLY_START_DATE = #{SALE_DATE}			   
			   ,ITEM_P = #{SALE_BASIS_P}
	           ,UPDATE_DB_USER = #{S_USER_ID} 
			   ,UPDATE_DB_TIME = getdate()
	       WHERE 	COMP_CODE = #{COMP_CODE}
	         AND    ITEM_CODE = #{ITEM_CODE}
	         AND 	DIV_CODE = '*'
		END		
	</update>
	<update id="bpr101ukrvService.updateSaleBasisP1" parameterType="Map">	
		BEGIN
			UPDATE BPR400T
		    SET APLY_END_DATE = CONVERT(varchar,DATEADD(day,-1,GETDATE()),112)
		    WHERE COMP_CODE = #{COMP_CODE}
	          AND	TYPE	= #{TYPE}
	          AND	DIV_CODE  = #{DIV_CODE}
	          AND	ITEM_CODE = #{ITEM_CODE}
	          AND	CUSTOM_CODE = #{CUSTOM_CODE}
	          AND	MONEY_UNIT = #{MONEY_UNIT}		
	          AND	ORDER_UNIT = #{ORDER_UNIT}
	          AND	APLY_START_DATE = (SELECT MAX(APLY_START_DATE) 
	          							FROM    BPR400T
	          							WHERE	COMP_CODE = #{S_COMP_CODE} 
	          							  AND	TYPE	= #{TYPE}
									      AND	DIV_CODE	= #{DIV_CODE}
									      AND	ITEM_CODE = #{ITEM_CODE}
									      AND	CUSTOM_CODE = #{CUSTOM_CODE}
									      AND	MONEY_UNIT = #{MONEY_UNIT}		
									      AND	ORDER_UNIT = #{ORDER_UNIT}	          							  
	          						  )
			 AND   	APLY_END_DATE = '29991231' 			          						  
		END
	</update>
	<update id="bpr101ukrvService.updateSaleBasisP2" parameterType="Map">	
		BEGIN	
			INSERT INTO BPR400T
			     (COMP_CODE	
			     ,TYPE				
			     ,DIV_CODE
			     ,ITEM_CODE	
			     ,CUSTOM_CODE
			     ,MONEY_UNIT	
			     ,ORDER_UNIT			
			     ,APLY_START_DATE
			     ,APLY_END_DATE
			     ,USE_YN
			     ,ITEM_P		     
			     ,UPDATE_DB_USER     
			     ,UPDATE_DB_TIME	 )
			VALUES
			     (#{COMP_CODE}	
			     ,#{TYPE}				
			     ,#{DIV_CODE}			
			     ,#{ITEM_CODE}	
			     ,#{CUSTOM_CODE}
			     ,#{MONEY_UNIT}		
			     ,#{ORDER_UNIT}			
			     ,#{APLY_START_DATE}		
			     ,#{APLY_END_DATE}
			     ,#{USE_YN}
			     ,#{ITEM_P}			
			     ,#{S_USER_ID}			
			     ,GETDATE() )	
		END
	</update>
	<update id="bpr101ukrvService.updateSaleBasisP3" parameterType="Map">	     		
		BEGIN
			UPDATE BPR100T
			SET SALE_BASIS_P = #{ITEM_P}
			   ,BF_SALE_BASIS_P = #{BF_ITEM_P}
	           ,UPDATE_DB_USER = #{S_USER_ID} 
			   ,UPDATE_DB_TIME = getdate()
	       WHERE 	COMP_CODE = #{S_COMP_CODE}
	         AND    ITEM_CODE = #{ITEM_CODE}
		END	
		
		
	</update>
	<delete id="bpr101ukrvService.bpr200tDeleteDetail" parameterType="Map">
		BEGIN
			DELETE FROM BPR200T
			WHERE 	COMP_CODE = #{COMP_CODE}
	         AND    ITEM_CODE = #{ITEM_CODE}
	         AND    DIV_CODE  = #{DIV_CODE}
		END		
	</delete>
	
	<delete id="bpr101ukrvService.bpr100tDeleteDetail" parameterType="Map">
		BEGIN
			DELETE FROM BPR100T
			WHERE 	COMP_CODE = #{COMP_CODE}
	         AND    ITEM_CODE = #{ITEM_CODE}
        END
	</delete>
	
	<update id="bpr101ukrvService.insertMultiLog" parameterType="Map">
		INSERT INTO L_BPR200T
				(	 KEY_VALUE					
					,OPR_FLAG						
					,COMP_CODE	
				<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">	
					,DIV_CODE					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">	
					,ITEM_CODE					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">	
					,ITEM_NAME					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">					
					,ITEM_LEVEL1					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">	
					,ITEM_LEVEL2					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">	
					,ITEM_LEVEL3					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(STOCK_UNIT)">	
					,STOCK_UNIT					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(STOCK_CARE_YN)">	
					,STOCK_CARE_YN				
				</if>	
				<if test="@foren.Ognl@isNotEmpty(TAX_TYPE)">	
					,TAX_TYPE					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(CONSIGNMENT_FEE)">
					,CONSIGNMENT_FEE
				</if>	
				<if test="@foren.Ognl@isNotEmpty(AUTO_DISCOUNT)">	
					,AUTO_DISCOUNT				
				</if>	
				<if test="@foren.Ognl@isNotEmpty(SALE_UNIT)">	
					,SALE_UNIT					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">	
					,ITEM_ACCOUNT				
				</if>	
				<if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">	
					,SUPPLY_TYPE					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(ORDER_UNIT)">	
					,ORDER_UNIT					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(TRNS_RATE)">	
					,TRNS_RATE					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(BIG_BOX_BARCODE)">	
					,BIG_BOX_BARCODE				
				</if>	
				<if test="@foren.Ognl@isNotEmpty(K_PRINTER)">	
					,K_PRINTER					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(SALE_BASIS_P)">	
					,SALE_BASIS_P					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(BARCODE)">	
					,BARCODE					
				</if>													
					,UPDATE_DB_TIME				
					,UPDATE_DB_USER	
					,INSERT_DB_TIME				
					,INSERT_DB_USER	
				)
				VALUES
				(    #{KEY_VALUE}		
					,#{OPR_FLAG}		
				 	,#{COMP_CODE}
				 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">			
				 	,#{DIV_CODE}		
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">	
				 	,#{ITEM_CODE}		
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">	
				 	,#{ITEM_NAME}		
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">	
				 	,#{ITEM_LEVEL1}	
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">	
				 	,#{ITEM_LEVEL2}	
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">	
				 	,#{ITEM_LEVEL3}	
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(STOCK_UNIT)">	
				 	,#{STOCK_UNIT}		
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(STOCK_CARE_YN)">	
				 	,#{STOCK_CARE_YN}	
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(TAX_TYPE)">	
				 	,#{TAX_TYPE}
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(CONSIGNMENT_FEE)">				 	
					,#{CONSIGNMENT_FEE}					
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(AUTO_DISCOUNT)">	
				 	,#{AUTO_DISCOUNT}	
				 </if>
				 <if test="@foren.Ognl@isNotEmpty(SALE_UNIT)">	
				 	,#{SALE_UNIT}		
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">	
				 	,#{ITEM_ACCOUNT}	
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)">	
				 	,#{SUPPLY_TYPE}	
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(ORDER_UNIT)">	
				 	,#{ORDER_UNIT}		
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(BUY_RATE)">	
				 	,#{BUY_RATE}		
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(BIG_BOX_BARCODE)">	
				 	,#{BIG_BOX_BARCODE}
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(K_PRINTER)">	
				 	,#{K_PRINTER}		
				 </if>		
				 <if test="@foren.Ognl@isNotEmpty(SALE_BASIS_P)">	
					,#{SALE_BASIS_P}					
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(BARCODE)">	
					,#{BARCODE	}				
				 </if>					 		 	
              		,GETDATE()	
				 	,#{S_USER_ID} 
				 	,GETDATE()	
				 	,#{S_USER_ID} 
				)	  
	</update>
	
	<update id="bpr101ukrvService.updateMultiLog" parameterType="Map">
		INSERT INTO L_BPR200T
				(	 KEY_VALUE					
					,OPR_FLAG						
					,COMP_CODE	
				<if test="@foren.Ognl@isExists(_parameter, 'DIV_CODE')">
					,DIV_CODE					
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'ITEM_CODE')">
					
					,ITEM_CODE					
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'ITEM_NAME')">
					
					,ITEM_NAME					
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'ITEM_LEVEL1')">
									
					,ITEM_LEVEL1					
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'ITEM_LEVEL2')">
					
					,ITEM_LEVEL2					
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'ITEM_LEVEL3')">
					
					,ITEM_LEVEL3					
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'STOCK_UNIT')">
					
					,STOCK_UNIT					
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'STOCK_CARE_YN')">
					
					,STOCK_CARE_YN				
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'TAX_TYPE')">
					
					,TAX_TYPE					
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'CONSIGNMENT_FEE')">
					<if test="@foren.Ognl@isNotEmpty(CONSIGNMENT_FEE)">
						,CONSIGNMENT_FEE
					</if>									
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'AUTO_DISCOUNT')">
					
					,AUTO_DISCOUNT				
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'SALE_UNIT')">
					
					,SALE_UNIT					
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'ITEM_ACCOUNT')">
					
					,ITEM_ACCOUNT				
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'SUPPLY_TYPE')">
					
					,SUPPLY_TYPE					
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'ORDER_UNIT')">
					
					,ORDER_UNIT					
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'TRNS_RATE')">
					
					,TRNS_RATE					
				</if>
				<if test="@foren.Ognl@isExists(_parameter, 'BIG_BOX_BARCODE')">	
					
					,BIG_BOX_BARCODE				
				</if>	
				<if test="@foren.Ognl@isExists(_parameter, 'K_PRINTER')">
					
					,K_PRINTER					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(SALE_BASIS_P)">	
					,SALE_BASIS_P					
				</if>	
				<if test="@foren.Ognl@isNotEmpty(BARCODE)">	
					,BARCODE					
				</if>					
					,UPDATE_DB_TIME				
					,UPDATE_DB_USER	
					,INSERT_DB_TIME				
					,INSERT_DB_USER	
				)
				VALUES
				(    #{KEY_VALUE}		
					,#{OPR_FLAG}		
				 	,#{COMP_CODE}
				 <if test="@foren.Ognl@isExists(_parameter, 'DIV_CODE')">
				 			
				 	,#{DIV_CODE}		
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'ITEM_CODE')">
				 	
				 	,#{ITEM_CODE}		
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'ITEM_NAME')">
				 	
				 	,#{ITEM_NAME}		
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'ITEM_LEVEL1')">
				 	
				 	,#{ITEM_LEVEL1}	
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'ITEM_LEVEL2')">
				 	
				 	,#{ITEM_LEVEL2}	
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'ITEM_LEVEL3')">
				 	
				 	,#{ITEM_LEVEL3}	
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'STOCK_UNIT')">
				 	
				 	,#{STOCK_UNIT}		
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'STOCK_CARE_YN')">
				 	
				 	,#{STOCK_CARE_YN}	
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'TAX_TYPE')">
				 	
				 	,#{TAX_TYPE}
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'CONSIGNMENT_FEE')">
				 	<if test="@foren.Ognl@isNotEmpty(CONSIGNMENT_FEE)">
						,#{CONSIGNMENT_FEE}
					</if>				 	
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'AUTO_DISCOUNT')">
				 	
				 	,#{AUTO_DISCOUNT}	
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'SALE_UNIT')">
				 	
				 	,#{SALE_UNIT}		
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'ITEM_ACCOUNT')">
				 	
				 	,#{ITEM_ACCOUNT}	
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'SUPPLY_TYPE')">
				 	
				 	,#{SUPPLY_TYPE}	
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'ORDER_UNIT')">
				 	
				 	,#{ORDER_UNIT}		
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'BUY_RATE')">
				 	
				 	,#{BUY_RATE}		
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'BIG_BOX_BARCODE')">
				 	
				 	,#{BIG_BOX_BARCODE}
				 </if>	
				 <if test="@foren.Ognl@isExists(_parameter, 'K_PRINTER')">				 	
				 	,#{K_PRINTER}		
				 </if>				 	
				 <if test="@foren.Ognl@isNotEmpty(SALE_BASIS_P)">	
					,#{SALE_BASIS_P}					
				 </if>	
				 <if test="@foren.Ognl@isNotEmpty(BARCODE)">	
					,#{BARCODE	}				
				 </if>					 
              		,GETDATE()	
				 	,#{S_USER_ID} 
				 	,GETDATE()	
				 	,#{S_USER_ID} 
				)	  
	</update>
	
	<insert id="bpr101ukrvService.insertLogDetail" parameterType="Map">
    SET ANSI_WARNINGS OFF
	SET ARITHIGNORE ON
	SET ARITHABORT OFF            
		INSERT INTO L_BPR100T(DIV_CODE, ITEM_CODE, CLASS, KEY_VALUE)
					 VALUES(#{DIV_CODE}, #{ITEM_CODE}, #{CLASS}, #{KEY_VALUE})		
	</insert>
	
	<update id="bpr101ukrvService.goInterFace" parameterType="Map" statementType="CALLABLE">		
		DECLARE @DB_NAME NVARCHAR(50)
		SELECT @DB_NAME = DB_NAME()
		IF @DB_NAME = 'UNILITE5_FOR_OMEGAPLUS'
		BEGIN
			EXEC uniLITE.SP_GetDownGoodsMaster_S #{KEY_VALUE}
		END
	</update>
	<update id="bpr101ukrvService.insertSubDetail" parameterType="Map">		
		INSERT INTO BPR400T
		     ( COMP_CODE	
		     ,TYPE				
		     ,DIV_CODE
		     ,ITEM_CODE	
		     ,CUSTOM_CODE
		     ,MONEY_UNIT	
		     ,ORDER_UNIT			
		     ,APLY_START_DATE
		     ,APLY_END_DATE
		     ,USE_YN
		     <if test="@foren.Ognl@isNotEmpty(ITEM_P)">  
		     ,ITEM_P
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ORDER_RATE)">  		
		     ,ORDER_RATE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PURCHASE_RATE)">  		
		     ,PURCHASE_RATE
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(REMARK)"> 
		     ,REMARK		
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(BASIS_P)"> 
		     ,BASIS_P		
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PURCHASE_TYPE)"> 
		     ,PURCHASE_TYPE		
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(SALES_TYPE)"> 
		     ,SALES_TYPE		
		     </if>
		     ,INSERT_DB_USER
		     ,INSERT_DB_TIME
		     ,UPDATE_DB_USER     
		     ,UPDATE_DB_TIME	 )
		VALUES
		     ( #{COMP_CODE}	
		     ,#{TYPE}				
		     ,#{DIV_CODE}			
		     ,#{ITEM_CODE}	
		     ,#{CUSTOM_CODE}
		     ,#{MONEY_UNIT}		
		     ,#{ORDER_UNIT}			
		     ,#{APLY_START_DATE}		
		     ,#{APLY_END_DATE}
		     ,#{USE_YN}
		     <if test="@foren.Ognl@isNotEmpty(ITEM_P)"> 
		     ,#{ITEM_P}	
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ORDER_RATE)"> 	
		     ,#{ORDER_RATE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PURCHASE_RATE)"> 	
		     ,#{PURCHASE_RATE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(REMARK)"> 
		     ,#{REMARK}			
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(BASIS_P)"> 
		     ,#{BASIS_P}	
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PURCHASE_TYPE)"> 
		     ,#{PURCHASE_TYPE}		
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(SALES_TYPE)"> 
		     ,#{SALES_TYPE}		
		     </if>			
		     ,#{S_USER_ID}	
		     ,GETDATE()
		     ,#{S_USER_ID}			
		     ,GETDATE() )
	</update>
	
	<update id="bpr101ukrvService.updateSubDetail" parameterType="Map">		
		UPDATE BPR400T
		SET	     
	      ITEM_P = #{ITEM_P}		
	     ,PURCHASE_RATE = #{PURCHASE_RATE}
	     ,APLY_END_DATE = #{APLY_END_DATE}
	    WHERE	COMP_CODE = #{COMP_CODE}
	      AND	TYPE	= #{TYPE}
	      AND	DIV_CODE	= #{DIV_CODE}
	      AND	ITEM_CODE = #{ITEM_CODE}
	      AND	CUSTOM_CODE = #{CUSTOM_CODE}
	      AND	MONEY_UNIT = #{MONEY_UNIT}		
	      AND	ORDER_UNIT = #{ORDER_UNIT}
	      AND	APLY_START_DATE = #{APLY_START_DATE}
	</update>
	
	<delete id="bpr101ukrvService.deleteSubDetail" parameterType="Map">
		DELETE FROM BPR400T
		WHERE 	COMP_CODE = #{COMP_CODE}
		  AND	TYPE	= #{TYPE}
	      AND	DIV_CODE	= #{DIV_CODE}
	      AND	ITEM_CODE = #{ITEM_CODE}
	      AND	CUSTOM_CODE = #{CUSTOM_CODE}
	      AND	MONEY_UNIT = #{MONEY_UNIT}		
	      AND	ORDER_UNIT = #{ORDER_UNIT}
	      AND	APLY_START_DATE = #{APLY_START_DATE}
	</delete>
	
	<select id="bpr101ukrvService.searchMenu" parameterType="Map" resultType="rMap">        
		SELECT A.ITEM_NAME 
		 FROM 		BPR100T A  WITH (NOLOCK)
	     LEFT  JOIN BPR200T B WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
								  			AND B.ITEM_CODE  = A.ITEM_CODE 
		WHERE A.COMP_CODE = #{S_COMP_CODE}
		  AND A.ITEM_NAME LIKE '%' + #{searchStr} +'%'
		  AND B.ITEM_ACCOUNT != '00'
		  AND B.DIV_CODE = #{DIV_CODE}
    </select>	
    
    <insert id="bpr101ukrvService.insertExcelBPR115T" parameterType="Map">		/* 엑셀insert */
    	/*bpr101ukrvServiceImpl.insertExcelBPR115T*/
    	INSERT INTO BPR115T
    		(_EXCEL_JOBID, _EXCEL_ROWNUM, _EXCEL_HAS_ERROR, _EXCEL_ERROR_MSG, DIV_CODE, ITEM_CODE, ITEM_NAME, ITEM_ACCOUNT, STOCK_UNIT, SALE_UNIT,
    		 ITEM_LEVEL1, ITEM_LEVEL2, ITEM_LEVEL3, SALE_BASIS_P, WH_CODE, PURCHASE_TYPE, SALES_TYPE, CUSTOM_CODE, CUSTOM_NAME, TAX_TYPE, ORDER_UNIT,
    		 ITEM_P, SUPPLY_TYPE, APLY_START_DATE, APLY_END_DATE, TRNS_RATE, USE_YN, BARCODE, STOCK_CARE_YN
    	)
    	VALUES 
    		(#{_EXCEL_JOBID}, #{_EXCEL_ROWNUM}, #{_EXCEL_HAS_ERROR}, #{_EXCEL_ERROR_MSG}, #{DIV_CODE}, #{ITEM_CODE}, #{ITEM_NAME}, #{ITEM_ACCOUNT}, 'EA', 'EA',
    		 #{ITEM_LEVEL1}, #{ITEM_LEVEL2}, #{ITEM_LEVEL3}, #{SALE_BASIS_P}, #{WH_CODE}, #{PURCHASE_TYPE}, #{SALES_TYPE}, #{CUSTOM_CODE}, #{CUSTOM_NAME}, #{TAX_TYPE}, 'EA',
    		 #{ITEM_P}, #{SUPPLY_TYPE}, #{APLY_START_DATE}, '29991231', '1', 'Y', #{ITEM_CODE}, #{STOCK_CARE_YN}
    	)
    </insert>
    
    <select id="bpr101ukrvService.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">	/* 엑셀업로드 */
		/*biv105ukrvServiceImpl.selectExcelUploadSheet1*/
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		          , @moneyUnit	 NVARCHAR(10) /* userInfo의 화페 */
		          , @useByDate	 NVARCHAR(10) /* 재고유효일 */
		
		    SET @CompCode  = #{S_COMP_CODE}
		    SET @UserId    = #{S_USER_ID}
		    SET @LangType  = #{S_LANG_CODE}  
		    SET @moneyUnit = #{MONEY_UNIT}
		    SET @useByDate = #{USE_BY_DATE} 
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
	    /* 데이터 조회 */
		SELECT	 _EXCEL_JOBID
				 , A._EXCEL_ROWNUM
				 , A._EXCEL_HAS_ERROR
				 , A._EXCEL_ERROR_MSG
				 , A.DIV_CODE	
		         , A.ITEM_CODE
		         , A.ITEM_NAME
		         , A.ITEM_ACCOUNT
		         , A.ITEM_LEVEL1
		         , C1.LEVEL_NAME           AS ITEM_LEVEL_NAME1
		         , A.ITEM_LEVEL2
		         , C2.LEVEL_NAME           AS ITEM_LEVEL_NAME2
		         , A.ITEM_LEVEL3
		         , C3.LEVEL_NAME           AS ITEM_LEVEL_NAME3
		         , A.STOCK_UNIT
		         , A.TAX_TYPE
		         , A.SALE_UNIT
				 , A.ORDER_UNIT
		         , A.SALE_BASIS_P
		         , A.TRNS_RATE
		         , A.BARCODE	
		         , A.USE_YN	  								  
		         , A.WH_CODE       
		         , A.PURCHASE_TYPE
		         , A.SUPPLY_TYPE
		         , A.SALES_TYPE
		         , A.CUSTOM_CODE
		         , CASE WHEN @RefItem = '0' THEN C.CUSTOM_NAME
		                WHEN @RefItem = '1' THEN C.CUSTOM_NAME1
		                WHEN @RefItem = '2' THEN C.CUSTOM_NAME2
		                ELSE C.CUSTOM_NAME
		           END AS CUSTOM_NAME
		         , A.ITEM_P
		         , A.APLY_START_DATE
		         , A.APLY_END_DATE 
		         , A.PURCHASE_RATE
		         , A.STOCK_CARE_YN 
		         , 'Y'			AS USE_YN      
		         , 'N'			AS AUTO_DISCOUNT
		         , 'N'			AS MEMBER_DISCOUNT_YN
		         , 'N'			AS SPEC_CONTROL
	         	 , '0.00'		AS EXCESS_RATE
		         , '0.00'		AS IN_EXCESS_RATE
		         , @useByDate	AS USE_BY_DATE
		         , 'Y'			AS CIR_PERIOD_YN
		         , @moneyUnit	AS MONEY_UNIT
		         , GETDATE()	AS SALE_DATE
		         , '1'			AS BUY_RATE
		FROM		BPR115T A  WITH (NOLOCK)
			LEFT  JOIN BPR200T B WITH (NOLOCK) ON  B.COMP_CODE  = A.COMP_CODE
    	   									   AND B.DIV_CODE   = #{DIV_CODE}
    	   									   AND B.ITEM_CODE  = A.ITEM_CODE
				   LEFT JOIN (SELECT 
	                           COMP_CODE, ITEM_CODE 
							   ,SUM(STOCK_Q) AS STOCK_Q
							   FROM BIV100T WITH(NOLOCK)
							   WHERE COMP_CODE = #{S_COMP_CODE}
							      AND DIV_CODE     = #{DIV_CODE}
                       GROUP BY 	COMP_CODE, ITEM_CODE)  B1 ON A.ITEM_CODE = B1.ITEM_CODE AND A.COMP_CODE = B1.COMP_CODE
                   LEFT JOIN (SELECT 
	                           COMP_CODE, ITEM_CODE 
							   ,SUM(SAFETY_Q) AS SAFETY_Q
							   FROM MRP600T WITH(NOLOCK)
							   WHERE COMP_CODE = #{S_COMP_CODE}
							      AND DIV_CODE     = #{DIV_CODE}
                       GROUP BY 	COMP_CODE, ITEM_CODE)  B2 ON A.ITEM_CODE = B2.ITEM_CODE AND A.COMP_CODE = B2.COMP_CODE
                   LEFT JOIN (SELECT 
	                           A.COMP_CODE, B.ITEM_CODE 
							   ,SUM(B.ORDER_Q - B.OUTSTOCK_Q) AS ISSUE_PLAN_Q
							   FROM        SOF100T  A WITH(NOLOCK)
							   INNER JOIN SOF110T  B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE AND A.DIV_CODE = B.DIV_CODE AND A.ORDER_NUM = B.ORDER_NUM
							   WHERE A.COMP_CODE = #{S_COMP_CODE}
							      AND A.DIV_CODE     = #{DIV_CODE}
								  AND B.ORDER_Q - B.OUTSTOCK_Q > 0
								  AND B.ORDER_STATUS = 'N'
                       GROUP BY A.COMP_CODE, B.ITEM_CODE)  B3 ON A.ITEM_CODE = B3.ITEM_CODE AND A.COMP_CODE = B3.COMP_CODE	
                   LEFT  JOIN BCM100T  C WITH (NOLOCK) ON C.COMP_CODE    = #{S_COMP_CODE}
		                                              AND C.CUSTOM_CODE  = A.CUSTOM_CODE
                   LEFT  JOIN BPR000T C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
		                                              AND C1.LEVEL1    != '*'
		                                              AND C1.LEVEL1     = A.ITEM_LEVEL1
		                                              AND C1.LEVEL2     = '*'
		                                              AND C1.LEVEL3     = '*'
		           LEFT  JOIN BPR000T C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
		                                              AND C2.LEVEL1    != '*'
		                                              AND C2.LEVEL1     = A.ITEM_LEVEL1
		                                              AND C2.LEVEL2    != '*'
		                                              AND C2.LEVEL2     = A.ITEM_LEVEL2
		                                              AND C2.LEVEL3     = '*'
		           LEFT  JOIN BPR000T C3 WITH (NOLOCK) ON C3.COMP_CODE  = A.COMP_CODE
		                                              AND C3.LEVEL1    != '*'
		                                              AND C3.LEVEL1     = A.ITEM_LEVEL1
		                                              AND C3.LEVEL2    != '*'
		                                              AND C3.LEVEL2     = A.ITEM_LEVEL2
		                                              AND C3.LEVEL3    != '*'
		                                              AND C3.LEVEL3     = A.ITEM_LEVEL3 
		           LEFT  JOIN BPR400T D  WITH (NOLOCK) ON  D.COMP_CODE  = A.COMP_CODE
		    	   									   AND D.DIV_CODE   = A.DIV_CODE
		    	   									   AND D.ITEM_CODE  = A.ITEM_CODE
		    	   LEFT JOIN BPR100T  E  WITH (NOLOCK) ON E.COMP_CODE   = #{S_COMP_CODE}
		                                			  AND E.ITEM_CODE   = A.ITEM_CODE
			 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
			 ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM
		 
		END
	</select>
	
	<update id="excelValidate" >		
	/*biv105ukrvServiceImpl.excelValidate*/
	/*다국어 메세지 처리 함수 필요. S_LANG_CODE와 msg_no를 파라미터로 받아 BSA000T에서 조회*/
	
   UPDATE   A
	SET 
			A._EXCEL_HAS_ERROR = (CASE WHEN (SELECT COUNT(ITEM_CODE) AS CNT
										    FROM   BPR200T WITH (NOLOCK)
										    WHERE  COMP_CODE=#{S_COMP_CODE}
										      AND  DIV_CODE = #{DIV_CODE}
										      AND  ITEM_CODE=A.ITEM_CODE)	> 0 THEN 'Y'
									   --WHEN D.CUSTOM_CODE IS NULL OR E.CUSTOM_CODE IS NULL	THEN 'Y'
									   WHEN A.ITEM_NAME IS NULL OR A.SALE_BASIS_P IS NULL OR A.ITEM_P IS NULL OR A.TAX_TYPE IS NULL OR A.CUSTOM_CODE IS NULL OR A.ITEM_ACCOUNT IS NULL
									   		OR A.STOCK_UNIT IS NULL OR A.SUPPLY_TYPE IS NULL OR A.APLY_START_DATE IS NULL OR A.DIV_CODE IS NULL		THEN 'Y'
								  ELSE A._EXCEL_HAS_ERROR 
							      END),
							     
			A._EXCEL_ERROR_MSG = (CASE WHEN (SELECT COUNT(ITEM_CODE) AS CNT
										    FROM   BPR200T WITH (NOLOCK)
										    WHERE  COMP_CODE=#{S_COMP_CODE}
										      AND  DIV_CODE = #{DIV_CODE}
										      AND  ITEM_CODE=A.ITEM_CODE)	> 0 THEN ISNULL(_EXCEL_ERROR_MSG,'') + '기등록품목입니다. '
									   --WHEN D.CUSTOM_CODE IS NULL OR E.CUSTOM_CODE IS NULL	THEN ISNULL(_EXCEL_ERROR_MSG,'') + '사업장에 대한 매입처정보가 존재하지 않습니다. '
									   WHEN A.ITEM_NAME IS NULL OR A.SALE_BASIS_P IS NULL OR A.ITEM_P IS NULL OR A.TAX_TYPE IS NULL OR A.CUSTOM_CODE IS NULL OR A.ITEM_ACCOUNT IS NULL
									   		OR A.STOCK_UNIT IS NULL OR A.SUPPLY_TYPE IS NULL OR A.APLY_START_DATE IS NULL OR A.DIV_CODE IS NULL		THEN ISNULL(_EXCEL_ERROR_MSG,'') + '필수입력값을 확인하십시오. '
								 ELSE A._EXCEL_ERROR_MSG 
								 END)
								 
	FROM BPR115T A WITH (NOLOCK) 
	LEFT JOIN  BPR100T B  WITH (NOLOCK) ON B.COMP_CODE 		= #{S_COMP_CODE}
						   			   AND A.ITEM_CODE 		= B.ITEM_CODE
	LEFT JOIN  BPR200T C  WITH (NOLOCK) ON C.COMP_CODE 		= #{S_COMP_CODE}	
	  					   			   AND C.DIV_CODE  		= A.DIV_CODE				   
						   			   AND A.ITEM_CODE 		= C.ITEM_CODE
	LEFT  JOIN BCM100T D  WITH (NOLOCK) ON D.COMP_CODE    	= #{S_COMP_CODE}
		                   			   AND D.CUSTOM_CODE  	= A.CUSTOM_CODE
	LEFT  JOIN BPR400T E  WITH (NOLOCK) ON E.COMP_CODE  	= A.COMP_CODE
		    	   					   AND E.DIV_CODE   	= #{DIV_CODE}
		    	   					   AND E.ITEM_CODE  	= A.ITEM_CODE	                   
	WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	
	UPDATE  A
	SET 
			A._EXCEL_HAS_ERROR = (CASE WHEN B.USE_YN = 'N' 
										THEN 'Y' 
									   WHEN  ISNULL(B.START_DATE, '19000101') &gt; #{ORDER_DATE} 
										THEN 'Y'
									   WHEN  ISNULL(B.STOP_DATE, '99991231') &lt; #{ORDER_DATE}
										THEN 'Y'
							      ELSE A._EXCEL_HAS_ERROR 
							      END),
			A._EXCEL_ERROR_MSG = (CASE WHEN B.USE_YN = 'N' 
										THEN ISNULL(_EXCEL_ERROR_MSG,'') + '사용중지된 품목입니다.' 
									   WHEN  ISNULL(B.START_DATE, '19000101') &gt; #{ORDER_DATE} OR  ISNULL(B.STOP_DATE, '99991231') &lt; #{ORDER_DATE}
										THEN ISNULL(_EXCEL_ERROR_MSG,'') + '사용기간이 경과한 품목입니다.('+ISNULL(B.START_DATE, '')+'~'+ISNULL(B.STOP_DATE, '')+')'  
								  ELSE A._EXCEL_ERROR_MSG END)
	FROM BPR115T A WITH (NOLOCK) 
	INNER JOIN  BPR100T B WITH (NOLOCK)  ON B.COMP_CODE= #{S_COMP_CODE}
						                AND A.ITEM_CODE = B.ITEM_CODE
	WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>
	
</mapper>