<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bpr300rkrvServiceImpl">

	<select id="bpr300rkrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* bpr300rkrvServiceImpl.selectList */
		           BEGIN
				SET NOCOUNT ON
				SET ARITHABORT ON

				DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
					  , @UserId      NVARCHAR(100) /* 사용자ID    */
					  , @LangType    NVARCHAR(2)  /* 언어구분    */
					  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
					  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

				/* 명칭 참조 유형 */
				SELECT TOP 1 @RefItem = REF_ITEM
				  FROM BSA300T WITH (NOLOCK)
				 WHERE USER_ID = @UserId

				SET @RefItem = ISNULL(@RefItem, N'0')

				/* 날짜 포맷 유형 설정 */
				SELECT TOP 1 @DateFormat = CODE_NAME
				  FROM BSA100T WITH (NOLOCK)
				 WHERE COMP_CODE = @CompCode
				   AND MAIN_CODE = N'B044'
				   AND REF_CODE1 = N'Y'

				SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

				/* 데이터 조회 */
				SELECT TOP 1 @RefItem = REF_ITEM
                 FROM   BSA300T WITH (NOLOCK)
                 WHERE  USER_ID = #{S_USER_ID}

                 SET @RefItem = ISNULL(@RefItem, '0')


                 DECLARE         @LotYN               NVARCHAR(01)

                 SELECT TOP 1 @LotYN = REF_CODE1
                 FROM   BSA100T WITH (NOLOCK)
                 WHERE  COMP_CODE = @CompCode
                 AND    MAIN_CODE = 'B084'                                   /* 재고합산 유형 */
                 AND    SUB_CODE  = 'C'                                      /* Lot No. 합산 */

                 SET @LotYN = ISNULL(@LotYN, 'N')


                 IF @LotYN = 'N'
                 BEGIN
                     SELECT
                            A.LOT_NO                                                                                       AS LOT_NO

                          , D1.TREE_NAME                                                                                AS WH_NAME
                          , A.ITEM_CODE                                                                                    AS ITEM_CODE
                          , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                                 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                 ELSE C1.ITEM_NAME
                            END                                                                                            AS ITEM_NAME
                          , ISNULL(C1.SPEC, '')                                                                            AS SPEC
                          , C2.ITEM_ACCOUNT																				AS ITEM_ACCOUNT
                          , ISNULL(C1.STOCK_UNIT, '')                                                                      AS STOCK_UNIT
                          , SUM(ISNULL(A.IN_Q, 0) - ISNULL(A.OUT_Q, 0) + ISNULL(A.RTN_Q, 0))                               AS STOCK
                          , SUM(CASE WHEN A.ITEM_STATUS = '1' THEN ISNULL(A.IN_Q, 0) - ISNULL(A.OUT_Q, 0) + ISNULL(A.RTN_Q, 0)
                                     ELSE 0 END)                                                                           AS GOOD_STOCK
                          , SUM(CASE WHEN A.ITEM_STATUS = '2' THEN ISNULL(A.IN_Q, 0) - ISNULL(A.OUT_Q, 0) + ISNULL(A.RTN_Q, 0)
                                     ELSE 0 END)                                                                           AS BAD_STOCK
                          --, A.REMARK
                          , A.DIV_CODE                                                                                     AS DIV_CODE
                          , A.WH_CODE                                                                                      AS WH_CODE
						  , SUM(C2.PACK_QTY)   	AS      PACK_QTY

                          ,CASE WHEN ISNULL(SUM(C2.PACK_QTY),0) = 0 THEN 0
						        ELSE CEILING(SUM(ISNULL(A.IN_Q, 0) - ISNULL(A.OUT_Q, 0) + ISNULL(A.RTN_Q, 0)) / SUM(C2.PACK_QTY)) END   AS LABEL_QTY

                          ,	CASE WHEN LEN(A.LOT_NO) = 12 THEN '20' + SUBSTRING(A.LOT_NO,2,6)
								ELSE '' END AS DATE
      					  , CASE WHEN LEN(A.LOT_NO) = 12 THEN CONVERT(NVARCHAR, DATEADD(MM, 12, CONVERT(datetime,'20' +  SUBSTRING(A.LOT_NO,2,6))), 112)
								ELSE '' END AS END_DATE -- 라벨출력시 사용
						  , '' AS QR_CODE
                     FROM              BTR100T  A  WITH (NOLOCK, INDEX(BTR100T_IDX07))
                            INNER  JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE                                             /* 품목 */
                                                                AND C1.ITEM_CODE  = A.ITEM_CODE
                                                                AND ISNULL(C1.STOCK_CARE_YN,'N') = 'Y'                                      /* 2015.10.02 추가 */
                            INNER  JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE                                             /* 사업장 품목 */
                                                                AND C2.DIV_CODE   = A.DIV_CODE
                                                                AND C2.ITEM_CODE  = A.ITEM_CODE
                            LEFT  JOIN BSA220T  D1 WITH (NOLOCK) ON D1.COMP_CODE  = A.COMP_CODE                                             /* 창고 */
                                                                AND D1.TYPE_LEVEL = A.DIV_CODE
                                                                AND D1.TREE_CODE  = A.WH_CODE
                     WHERE  A.COMP_CODE      = @CompCode
                     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                     AND    A.DIV_CODE       = #{DIV_CODE}
                     </if>
                     <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
                     AND    A.LOT_NO       = #{LOT_NO}
				     </if>
                     <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
                     AND    A.WH_CODE        = #{WH_CODE}             /* 창고 */
                     </if>
                     <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
                     AND    C2.ITEM_ACCOUNT  = #{ITEM_ACCOUNT}        /* 계정 */
                     </if>
                     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                     AND    A.ITEM_CODE   LIKE #{ITEM_CODE} + '%'     /* 품목 */
                     </if>
                     <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
                     AND    CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                                 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                 ELSE C1.ITEM_NAME
                            END             LIKE #{ITEM_NAME} + '%'     /* 품목 명*/
                     </if>

                     GROUP BY A.COMP_CODE, A.DIV_CODE
                            , A.ITEM_CODE
                            , C1.ITEM_NAME, C1.ITEM_NAME1, C1.ITEM_NAME2, C1.SPEC, C1.STOCK_UNIT, C2.ITEM_ACCOUNT
                            , A.LOT_NO, A.WH_CODE,  D1.TREE_NAME--, A.REMARK
                     HAVING SUM(ISNULL(A.IN_Q, 0) - ISNULL(A.OUT_Q, 0) + ISNULL(A.RTN_Q, 0)) != 0
                     ORDER BY A.LOT_NO, A.ITEM_CODE
                 END

                 IF @LotYN = 'Y'
                 BEGIN
                     SELECT
                            A.LOT_NO                                                                                       AS LOT_NO
                          , D1.TREE_NAME                                                                              AS WH_NAME
                          , A.ITEM_CODE                                                                                    AS ITEM_CODE
                          , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                                 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                 ELSE C1.ITEM_NAME
                            END                                                                                            AS ITEM_NAME
                          , ISNULL(C1.SPEC, '')                                                                            AS SPEC
                          , C2.ITEM_ACCOUNT																				AS ITEM_ACCOUNT
                          , ISNULL(C1.STOCK_UNIT, '')                                                                      AS STOCK_UNIT
                          , SUM(A.STOCK_Q)																				   AS STOCK
                          , SUM(A.GOOD_STOCK_Q)																			   AS GOOD_STOCK
                          , SUM(A.BAD_STOCK_Q)																			   AS BAD_STOCK
                          --, '' 																							   AS REMARK
                          , A.DIV_CODE                                                                                     AS DIV_CODE
                          , A.WH_CODE                                                                                      AS WH_CODE
						  --, SUM(C2.PACK_QTY)   	A					S      PACK_QTY
                         -- , CASE WHEN ISNULL(SUM(C2.PACK_QTY), 0) = 0 THEN SUM(A.GOOD_STOCK_Q)
						--		ELSE SUM(C2.PACK_QTY) END      		AS      PACK_QTY
                          , SUM(A.GOOD_STOCK_Q)   		AS      PACK_QTY

              --             ,CASE WHEN ISNULL(SUM(C2.PACK_QTY),0) = 0 THEN 0
						        --ELSE CEILING(SUM(A.STOCK_Q) / SUM(C2.PACK_QTY)) END AS LABEL_QTY
                         -- ,CASE WHEN ISNULL(SUM(C2.PACK_QTY),0) = 0 THEN CEILING(SUM(A.STOCK_Q) / SUM(A.STOCK_Q) )
						     --   ELSE CEILING(SUM(A.STOCK_Q) / SUM(C2.PACK_QTY)) END AS LABEL_QTY
                          , 1 AS LABEL_QTY

                          ,	CASE WHEN LEN(A.LOT_NO) = 12 THEN '20' + SUBSTRING(A.LOT_NO,2,6)
								ELSE '' END AS DATE
                          ,  CASE WHEN LEN(A.LOT_NO) = 12 THEN CONVERT(NVARCHAR, DATEADD(MM, 12, CONVERT(datetime,'20' + SUBSTRING(A.LOT_NO,2,6))), 112)
									ELSE '' END AS END_DATE -- 라벨출력시 사용
						  ,  CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                                  WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                                  WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                  ELSE C1.ITEM_NAME
                             END
							 + '/'
							 + 'VJW'
							 + '/'
							 + SUBSTRING(A.LOT_NO,2,6)
							 + '/'
							 + CONVERT(VARCHAR(30),FLOOR(SUM(A.STOCK_Q)))
							 + '/'
							 + RIGHT(A.LOT_NO, 4) AS QR_CODE
						  , RIGHT(A.LOT_NO, 4) AS SERIAL_NO
                     FROM  (  SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, A.LOT_NO
	                                ,A.GOOD_STOCK_Q, A.BAD_STOCK_Q, A.STOCK_Q
	                           FROM BIV150T  A  WITH (NOLOCK)

	                           WHERE A.COMP_CODE = @CompCode
		                       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		                     		AND A.DIV_CODE = #{DIV_CODE}
						       </if>
			                     AND A.SUM_TYPE  = 'C'
			                     AND A.STOCK_Q > 0


						       UNION ALL

	                           SELECT COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE, LOT_NO
	                                  ,(CASE WHEN INOUT_TYPE IN ('1', '3') THEN INOUT_Q ELSE (-1) * INOUT_Q END) AS GOOD_STOCK_Q
	                                  ,0 AS BAD_STOCK_Q
	                                  ,(CASE WHEN INOUT_TYPE IN ('1', '3') THEN INOUT_Q ELSE (-1) * INOUT_Q END) AS STOCK_Q
	                           FROM  BTR100T WITH (NOLOCK)
	                           WHERE COMP_CODE = @CompCode
		                       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		                     		AND DIV_CODE = #{DIV_CODE}
						       </if>
							   AND INOUT_DATE &gt;= CONVERT(NVARCHAR(08), GETDATE(), 112)
						       AND INOUT_DATE &lt;= CONVERT(NVARCHAR(08), DATEADD(D,-1,GETDATE()),112)

                             ) A

                            INNER  JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE                                             /* 품목 */
                                                                AND C1.ITEM_CODE  = A.ITEM_CODE
                                                                AND ISNULL(C1.STOCK_CARE_YN,'N') = 'Y'                                      /* 2015.10.02 추가 */
                            INNER  JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE                                             /* 사업장 품목 */
                                                                AND C2.DIV_CODE   = A.DIV_CODE
                                                                AND C2.ITEM_CODE  = A.ITEM_CODE
                            LEFT  JOIN BSA220T  D1 WITH (NOLOCK) ON D1.COMP_CODE  = A.COMP_CODE                                             /* 창고 */
                                                                AND D1.TYPE_LEVEL = A.DIV_CODE
                                                                AND D1.TREE_CODE  = A.WH_CODE
                     WHERE  A.COMP_CODE      = @CompCode

                     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                     AND    A.DIV_CODE       = #{DIV_CODE}
				     </if>
                     <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
                     AND    A.LOT_NO      LIKE #{LOT_NO} + '%'
				     </if>
                     <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
                     AND    A.WH_CODE        = #{WH_CODE}                /* 창고 */
				     </if>
                     <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
                     AND    C2.ITEM_ACCOUNT  = #{ITEM_ACCOUNT}           /* 계정 */
				     </if>
                     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                     AND    A.ITEM_CODE   LIKE #{ITEM_CODE} + '%'        /* 품목 */
				     </if>
                     <if test="@foren.Ognl@isNotEmpty(ITEM_NAME)">
                     AND    CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                                 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                 ELSE C1.ITEM_NAME
                            END             LIKE #{ITEM_NAME} + '%'     /* 품목 명*/
                     </if>

                     GROUP BY A.COMP_CODE, A.DIV_CODE
                            , A.ITEM_CODE
                            , C1.ITEM_NAME, C1.ITEM_NAME1, C1.ITEM_NAME2, C1.SPEC, C1.STOCK_UNIT, C2.ITEM_ACCOUNT
                            , A.LOT_NO, A.WH_CODE, D1.TREE_NAME


			     ORDER BY  A.ITEM_CODE, A.LOT_NO
	          END

		    SET NOCOUNT OFF
	        SET ARITHABORT OFF

		  END
	</select>


	<select id="bpr300rkrvServiceImpl.selectClipPrintList" parameterType="Map" resultType="rMap">
		/* bpr300rkrvServiceImpl.selectClipPrintList */
	        BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON

			DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
					  , @UserId      NVARCHAR(100) /* 사용자ID    */
					  , @LangType    NVARCHAR(2)  /* 언어구분    */
					  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
					  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = 'MASTER'
		    SET @UserId   = 'unilite5'
		    SET @LangType = 'ko'

				/* 명칭 참조 유형 */
				SELECT TOP 1 @RefItem = REF_ITEM
				  FROM BSA300T WITH (NOLOCK)
				 WHERE USER_ID = @UserId

				SET @RefItem = ISNULL(@RefItem, N'0')

				/* 날짜 포맷 유형 설정 */
				SELECT TOP 1 @DateFormat = CODE_NAME
				  FROM BSA100T WITH (NOLOCK)
				 WHERE COMP_CODE = @CompCode
				   AND MAIN_CODE = N'B044'
				   AND REF_CODE1 = N'Y'

				SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

				/* 데이터 조회 */
				SELECT TOP 1 @RefItem = REF_ITEM
                 FROM   BSA300T WITH (NOLOCK)
                 WHERE  USER_ID = 'unilite5'

                 SET @RefItem = ISNULL(@RefItem, '0')


                     SELECT
                            A.LOT_NO                                                                                       AS LOT_NO
                          , D1.TREE_NAME                                                                              AS WH_NAME
                          , A.ITEM_CODE                                                                                    AS ITEM_CODE
                          , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                                 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                 ELSE C1.ITEM_NAME
                            END                                                                                            AS ITEM_NAME
                          , ISNULL(C1.SPEC, '')                                                                            AS SPEC
                          , C2.ITEM_ACCOUNT																				AS ITEM_ACCOUNT
                          , ISNULL(C1.STOCK_UNIT, '')                                                                      AS STOCK_UNIT
                          , SUM(A.STOCK_Q)																				   AS STOCK
                          , SUM(A.GOOD_STOCK_Q)																			   AS GOOD_STOCK
                          , SUM(A.BAD_STOCK_Q)																			   AS BAD_STOCK
                          --, '' 																							   AS REMARK
                          , A.DIV_CODE                                                                                     AS DIV_CODE
                          , A.WH_CODE                                                                                      AS WH_CODE

                          , SUM(A.GOOD_STOCK_Q)   		AS      PACK_QTY

                          , 1 AS LABEL_QTY

                          ,	CASE WHEN LEN(A.LOT_NO) = 12 THEN '20' + SUBSTRING(A.LOT_NO,2,6)
								ELSE '' END AS DATE
                          ,  CASE WHEN LEN(A.LOT_NO) = 12 THEN CONVERT(NVARCHAR, DATEADD(MM, 12, CONVERT(datetime,'20' + SUBSTRING(A.LOT_NO,2,6))), 112)
									ELSE '' END AS END_DATE -- 라벨출력시 사용
						  , A.ITEM_CODE + '|' + A.LOT_NO + '|' + CONVERT(NVARCHAR(15) , CONVERT(NUMERIC(10, 0), SUM(A.GOOD_STOCK_Q) )) AS BARCODE

                     FROM  (  SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, A.LOT_NO
	                                ,A.GOOD_STOCK_Q, A.BAD_STOCK_Q, A.STOCK_Q
	                           FROM BIV150T  A  WITH (NOLOCK)

	                           WHERE A.COMP_CODE = @CompCode

		                     		AND A.DIV_CODE = '01'

			                     AND A.SUM_TYPE  = 'C'
			                     AND A.STOCK_Q &gt; 0


						       UNION ALL

	                           SELECT COMP_CODE, DIV_CODE, WH_CODE, ITEM_CODE, LOT_NO
	                                  ,(CASE WHEN INOUT_TYPE IN ('1', '3') THEN INOUT_Q ELSE (-1) * INOUT_Q END) AS GOOD_STOCK_Q
	                                  ,0 AS BAD_STOCK_Q
	                                  ,(CASE WHEN INOUT_TYPE IN ('1', '3') THEN INOUT_Q ELSE (-1) * INOUT_Q END) AS STOCK_Q
	                           FROM  BTR100T WITH (NOLOCK)
	                           WHERE COMP_CODE = @CompCode

		                     		AND DIV_CODE = '01'

							   AND INOUT_DATE &gt;= CONVERT(NVARCHAR(08), GETDATE(), 112)
						       AND INOUT_DATE &lt;= CONVERT(NVARCHAR(08), DATEADD(D,-1,GETDATE()),112)

                             ) A

                            INNER  JOIN BPR100T  C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE                                             /* 품목 */
                                                                AND C1.ITEM_CODE  = A.ITEM_CODE
                                                                AND ISNULL(C1.STOCK_CARE_YN,'N') = 'Y'                                      /* 2015.10.02 추가 */
                            INNER  JOIN BPR200T  C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE                                             /* 사업장 품목 */
                                                                AND C2.DIV_CODE   = A.DIV_CODE
                                                                AND C2.ITEM_CODE  = A.ITEM_CODE
                            LEFT  JOIN BSA220T  D1 WITH (NOLOCK) ON D1.COMP_CODE  = A.COMP_CODE                                             /* 창고 */
                                                                AND D1.TYPE_LEVEL = A.DIV_CODE
                                                                AND D1.TREE_CODE  = A.WH_CODE
                     WHERE  A.COMP_CODE      = @CompCode

                     AND    A.DIV_CODE       = '01'


					AND A.ITEM_CODE IN
					 <foreach collection="ITEM_CODE" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>
					AND A.LOT_NO IN
					 <foreach collection="LOT_NO" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>
					AND A.WH_CODE IN
					 <foreach collection="WH_CODE" item="item" separator="," close=")" open="(">
								  #{item}
					</foreach>


                     GROUP BY A.COMP_CODE, A.DIV_CODE
                            , A.ITEM_CODE
                            , C1.ITEM_NAME, C1.ITEM_NAME1, C1.ITEM_NAME2, C1.SPEC, C1.STOCK_UNIT, C2.ITEM_ACCOUNT
                            , A.LOT_NO, A.WH_CODE, D1.TREE_NAME


			     ORDER BY   A.LOT_NO,A.ITEM_CODE


		    SET NOCOUNT OFF
	        SET ARITHABORT OFF

		  END
	</select>

</mapper>