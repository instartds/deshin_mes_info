<?xml version="1.0" encoding="UTF-8"?><!---->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bpr255ukrvService">
	<select id="bpr255ukrvService.selectList" parameterType="Map" resultType="rMap">
		/* bpr255ukrvService.selectList */
		/* bpr255ukrv.Cbpr255ukrv[fnBpr255QStd] Query01 */
		BEGIN
		    SELECT A.DIV_CODE AS DIV_CODE
		         , A.ITEM_CODE
		         , A.ITEM_NAME
		         , A.ITEM_NAME1
		         , A.ITEM_NAME2
		         , A.SPEC
		         , A.SFLAG
		         , A.BCNT
		         , A.BCNT1
		         , A.BCNT2
		         , A.STOCK_UNIT
		         , A.ITEM_ACCOUNT
		         , A.INSPEC_YN
		         , A.INSPEC_METH_MATRL
		         , A.INSPEC_METH_PROG
		         , A.INSPEC_METH_PRODT
		         , A.COMP_CODE
		         , A.UPDATE_DB_USER
		         , A.UPDATE_DB_TIME
		    FROM   (
		           SELECT B.DIV_CODE
		                , A.ITEM_CODE
		                , A.ITEM_NAME
		                , A.ITEM_NAME1
		                , A.ITEM_NAME2
		                , A.SPEC
		                , CASE WHEN ISNULL(B.COMP_CODE, '')  = '' THEN '2' ELSE '1' END AS SFLAG
		                , CASE WHEN ISNULL(C1.COMP_CODE, '') = '' THEN '2' ELSE '1' END AS BCNT
		                , CASE WHEN ISNULL(C2.COMP_CODE, '') = '' THEN '2' ELSE '1' END AS BCNT1
		                , CASE WHEN ISNULL(C3.COMP_CODE, '') = '' THEN '2' ELSE '1' END AS BCNT2
		                , A.STOCK_UNIT
		                , B.ITEM_ACCOUNT
		                , B.SUPPLY_TYPE
		                , ISNULL(B.PURCH_LDTIME      ,  1 ) AS PURCH_LDTIME
		                , ISNULL(B.INSPEC_YN         , 'Y') AS INSPEC_YN
		                , B.INSPEC_METH_MATRL
		                , B.INSPEC_METH_PROG
		                , B.INSPEC_METH_PRODT
		                , A.COMP_CODE
		                , A.UPDATE_DB_USER
		                , A.UPDATE_DB_TIME
		           FROM              BPR100T  A  WITH (NOLOCK)
		                  INNER JOIN BPR200T  B  WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                      AND B.DIV_CODE  = #{DIV_CODE}
		                                                      AND B.ITEM_CODE = A.ITEM_CODE
		                  LEFT  JOIN (
		                               SELECT COMP_CODE, DIV_CODE, PROD_ITEM_CODE
		                                 FROM  BPR500T WITH (NOLOCK)
		                                WHERE  COMP_CODE        = #{COMP_CODE}
		                                 AND   DIV_CODE         = #{DIV_CODE}
		                                 AND   CHILD_ITEM_CODE != '$'
		                                 GROUP BY COMP_CODE, DIV_CODE, PROD_ITEM_CODE
		                             ) C1                      ON C1.COMP_CODE      = B.COMP_CODE
		                                                      AND C1.DIV_CODE       = B.DIV_CODE
		                                                      AND C1.prod_ITEM_CODE = B.ITEM_CODE
		                  LEFT  JOIN (
		                               SELECT COMP_CODE, DIV_CODE, ITEM_CODE
		                                 FROM BPR400T WITH (NOLOCK)
		                                WHERE COMP_CODE = #{COMP_CODE}
		                                 AND  DIV_CODE  = #{DIV_CODE}
		                                 AND  type      = '1'                         -- 거래처별 구매단가
		                                GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE
		                             ) C2                      ON C2.COMP_CODE      = B.COMP_CODE
		                                                      AND C2.DIV_CODE       = B.DIV_CODE
		                                                      AND C2.ITEM_CODE      = B.ITEM_CODE
		                  LEFT  JOIN (
		                               SELECT COMP_CODE, DIV_CODE, ITEM_CODE
		                                 FROM BPR400T WITH (NOLOCK)
		                                WHERE COMP_CODE = #{COMP_CODE}
		                                 AND  DIV_CODE  = #{DIV_CODE}
		                                 AND  type      = '2'                         -- 거래처별 판매단가
		                                GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE
		                             ) C3                      ON C3.COMP_CODE      = B.COMP_CODE
		                                                      AND C3.DIV_CODE       = B.DIV_CODE
		                                                      AND C3.ITEM_CODE      = B.ITEM_CODE
		                  LEFT  JOIN BCM100T  C4 WITH (NOLOCK) ON C4.COMP_CODE      = B.COMP_CODE
		                                                      AND C4.CUSTOM_CODE    = B.CUSTOM_CODE
		           WHERE  A.COMP_CODE = #{COMP_CODE}
		             AND  B.DIV_CODE  = #{DIV_CODE}
		             AND  A.USE_YN  = #{USE_YN}
		        <if test="@foren.Ognl@isNotEmpty(FIND_TYPE)">
		             <if test="@foren.Ognl@isNotEmpty(FIND_KEY_WORD)"> 
		                    AND  A.${FIND_TYPE}     LIKE '%' + #{FIND_KEY_WORD} + '%'
		             </if>                    
		        </if>    
		        <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)"> 
		             AND  B.ITEM_ACCOUNT     =       #{ITEM_ACCOUNT} 
		        </if>
<!-- 20210817 수정: 품목 팝업 조회쿼리 수정 -->
		        <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		           AND A.ITEM_CODE = #{ITEM_CODE}
		        </if>
		        <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
		           AND A.ITEM_CODE LIKE #{ITEM_CODE} + '%'
		        </if>
		        <if test="@foren.Ognl@isEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		           AND A.ITEM_NAME LIKE '%' + #{ITEM_NAME} + '%' 
		        </if>
		        <if test="@foren.Ognl@isNotEmpty(SUPPLY_TYPE)"> 
		             AND  B.SUPPLY_TYPE      =       #{SUPPLY_TYPE}
		        </if>
		        ) A
		    WHERE  COMP_CODE = #{COMP_CODE}
		     <if test="@foren.Ognl@isNotEmpty(REG_YN)"> 
		            AND  A.SFLAG         =       #{REG_YN} 
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(BOM_YN)"> 
		           AND  A.BCNT           =       #{BOM_YN}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PURCHASE_BASE_P_YN)">
		           AND  A.BCNT1          =       #{PURCHASE_BASE_P_YN}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(SALE_BASE_P_YN)">
		           AND  A.BCNT2          =       #{SALE_BASE_P_YN}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PURCHASE_LT_YN)">
		        <choose>
		            <when test="PURCHASE_LT_YN.equals('1'.toString())">
		                AND    ISNULL(A.PURCH_LDTIME, 0) >  0
		            </when>
		            <when test="PURCHASE_LT_YN.equals('2'.toString())">
		                AND    ISNULL(A.PURCH_LDTIME, 0) &lt;= 0
		            </when>
		            <otherwise>
		                AND    1 = 1
		            </otherwise>
		        </choose>
		     </if>
		END
	</select>

	<select id="bpr255ukrvService.selectSearchType" parameterType="Map" resultType="rMap">
		/* bpr255ukrvService.selectSearchType */
		SELECT REF_CODE1
		FROM    BSA100T WITH (NOLOCK)
		WHERE COMP_CODE	= #{S_COMP_CODE}
		  AND MAIN_CODE='B052'
		  AND SUB_CODE=#{FIND_TYPE}
	</select>

	<update id="bpr255ukrvService.update" parameterType="Map">
		/* bpr255ukrvService.update */
		UPDATE BPR200T
		SET 
		   <if test="@foren.Ognl@isExists(_parameter, 'INSPEC_YN')">
		    ITEM_ACCOUNT                      = #{ITEM_ACCOUNT}
		   </if>
		   <if test="@foren.Ognl@isExists(_parameter, 'INSPEC_YN')">
		   ,INSPEC_YN                          = #{INSPEC_YN}
		   </if>
		   <if test="@foren.Ognl@isExists(_parameter, 'INSPEC_METH_MATRL')">
		   ,INSPEC_METH_MATRL                  = #{INSPEC_METH_MATRL}
		   </if>
		   <if test="@foren.Ognl@isExists(_parameter, 'INSPEC_METH_PROG')">
		   ,INSPEC_METH_PROG                   = #{INSPEC_METH_PROG}
		   </if>
		   <if test="@foren.Ognl@isExists(_parameter, 'INSPEC_METH_PRODT')">
		   ,INSPEC_METH_PRODT                  = #{INSPEC_METH_PRODT}
		   </if>
		   ,UPDATE_DB_USER  = #{S_USER_ID}
		   ,UPDATE_DB_TIME  = GETDATE()
		WHERE    COMP_CODE = #{COMP_CODE}
		  AND    DIV_CODE  = #{DIV_CODE}
		  AND    ITEM_CODE = #{ITEM_CODE}
	</update>

	<update id="bpr255ukrvService.delete" parameterType="Map">
		/* bpr255ukrvService.delete */
		DELETE FROM BPR200T
		 WHERE COMP_CODE = #{COMP_CODE}
		   AND DIV_CODE  = #{DIV_CODE}
		   AND ITEM_CODE = #{ITEM_CODE}
	</update>
</mapper>