<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bcm120ukrvService">
	<select id="bcm120ukrvService.selectMasterList" parameterType="Map" resultType="rMap">	/* 조회쿼리 */
		/*bcm120ukrv.Cbcm120ukrv[fnBcm120QStd1] Query01*/
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /* 데이터 조회 */
			SELECT A.COMP_CODE
			     , A.CUSTOM_CODE
			     , C.CUSTOM_NAME
				 , A.TREE_CODE
			     , A.TREE_NAME
			     , A.TYPE_LEVEL
			     --, A.DEPT_CODE								AS DEPT_CODE
			     --, B.TREE_NAME                             AS DEPT_NAME
			     , A.GROUP_CD
			     , A.SECTION_CD
			     , A.USE_YN
			     , ISNULL(A.PABSTOCK_YN, 'Y') AS PABSTOCK_YN
			     , A.SORT_SEQ
			     , A.UPDATE_DB_USER
			     , A.UPDATE_DB_TIME
		  FROM BSA220T A WITH (NOLOCK)
		  --LEFT  JOIN BSA210T   B WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	      --                                    AND B.TREE_CODE    = A.DEPT_CODE
	      LEFT  JOIN BCM100T   C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
	                                          AND C.CUSTOM_CODE  = A.CUSTOM_CODE
		 WHERE A.COMP_CODE  = @CompCode
		 <if test="@foren.Ognl@isNotEmpty(TYPE_LEVEL)">
		   AND A.TYPE_LEVEL = #{TYPE_LEVEL}
		 </if>
		 <if test="@foren.Ognl@isNotEmpty(TREE_NAME)">
		   AND A.TREE_NAME = #{TREE_NAME}
		 </if>
		 ORDER BY A.SORT_SEQ, A.TREE_CODE
				SET NOCOUNT OFF
			    SET ARITHABORT OFF
		END
	</select>

	<select id="bcm120ukrvService.checkCompCode" parameterType="Map" resultType="rMap">
		    SELECT A.COMP_CODE, A.COMP_NAME
		    FROM              BOR100T   A  WITH (NOLOCK)
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE    = #{S_COMP_CODE}
		                                                AND M1.MAIN_CODE    = 'B107'
		                                                AND M1.SUB_CODE     = '20'
		    WHERE (A.COMP_CODE      &gt; ''        AND ISNULL(M1.REF_CODE1, 'N') = 'Y')
		       OR (A.COMP_CODE      = #{S_COMP_CODE}  AND ISNULL(M1.REF_CODE1, 'N') = 'N')
	</select>

	<insert id="bcm120ukrvService.insertDetail" parameterType="Map">	/* 추가 */
		/*UBcm01Krv.CBcm200UKr[fnBcm120Save] Query02*/
		INSERT INTO BSA220T
		     (   COMP_CODE
		       , CUSTOM_CODE
		       , INSERT_DB_USER
		       , INSERT_DB_TIME
		       <if test="@foren.Ognl@isNotEmpty(TREE_CODE)">
		       , TREE_CODE
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TREE_NAME)">
		       , TREE_NAME
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TYPE_LEVEL)">
		       , TYPE_LEVEL
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(USE_YN)">
		       , USE_YN
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(PABSTOCK_YN)">
		       , PABSTOCK_YN
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(SORT_SEQ)">
		       , SORT_SEQ
		       </if>
		     )
		VALUES
		     (   #{S_COMP_CODE}
	           , #{CUSTOM_CODE}
		       , #{S_USER_ID}
		       , getDate()
		       <if test="@foren.Ognl@isNotEmpty(TREE_CODE)">
		       , #{TREE_CODE}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TREE_NAME)">
		       , #{TREE_NAME}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TYPE_LEVEL)">
		       , #{TYPE_LEVEL}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(USE_YN)">
		       , #{USE_YN}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(PABSTOCK_YN)">
		       , #{PABSTOCK_YN}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(SORT_SEQ)">
		       , #{SORT_SEQ}
		       </if>
		)
	</insert>

	<update id="bcm120ukrvService.updateDetail" parameterType="Map">		/* 수정 */
		/*UBcm01Krv.CBcm200UKr[fnBcm120Save] Query02*/
		UPDATE BSA220T
		   SET TREE_NAME      = #{TREE_NAME}
		     , CUSTOM_CODE    = #{CUSTOM_CODE}
		   <if test="@foren.Ognl@isExists(_parameter, 'TYPE_LEVEL')">
		     , TYPE_LEVEL     = #{TYPE_LEVEL}
		   </if>
		   <if test="@foren.Ognl@isExists(_parameter, 'GROUP_CD')">
		     , GROUP_CD       = #{GROUP_CD}
		   </if>
		   <if test="@foren.Ognl@isExists(_parameter, 'SECTION_CD')">
		     , SECTION_CD     = #{SECTION_CD}
		   </if>
		   <if test="@foren.Ognl@isExists(_parameter, 'USE_YN')">
		     , USE_YN         = #{USE_YN}
		   </if>
		   <if test="@foren.Ognl@isExists(_parameter, 'PABSTOCK_YN')">
		     , PABSTOCK_YN    = #{PABSTOCK_YN}
		   </if>
		   <if test="@foren.Ognl@isExists(_parameter, 'SORT_SEQ')">
		     , SORT_SEQ       = #{SORT_SEQ}
		   </if>
		   <if test="@foren.Ognl@isExists(_parameter, 'DEPT_CODE')">
		     , DEPT_CODE       = #{DEPT_CODE}
		   </if>
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = getDate()
		WHERE TREE_CODE      = #{TREE_CODE}
		  AND COMP_CODE      = #{S_COMP_CODE}
	</update>

	<delete id="bcm120ukrvService.deleteDetail" parameterType="Map">		/* 삭제 */
		/*UBcm01Krv.CBcm200UKr[fnBcm120Save] Query01*/
		DELETE FROM BSA220T
		 WHERE TREE_CODE = #{TREE_CODE}
		   AND COMP_CODE = #{COMP_CODE}
	</delete>



	<select id="bcm120ukrvService.selectMasterList2" parameterType="Map" resultType="rMap">	/* 조회쿼리 */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.WH_CODE
		     , A.WH_CELL_CODE
		     , A.WH_CELL_NAME
		     , A.CUSTOM_CODE
		     , C.CUSTOM_NAME
		     , A.USE_YN
		     , A.PABSTOCK_YN
		     , A.VALID_YN
		     , A.WH_CELL_BARCODE
		     , A.REMARK
		     --20200909 추가: DEFAULT_YN 추가
		     , ISNULL(A.DEFAULT_YN, 'N') AS DEFAULT_YN
		     , A.INSERT_DB_USER
		     , A.INSERT_DB_TIME
		     , A.UPDATE_DB_USER
		     , A.UPDATE_DB_TIME
		 FROM       BSA225T A WITH(NOLOCK)
		 LEFT  JOIN BCM100T C WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                   AND C.CUSTOM_CODE  = A.CUSTOM_CODE
		
		WHERE A.COMP_CODE  = #{S_COMP_CODE}
		  AND A.DIV_CODE   = #{TYPE_LEVEL}
		  AND A.WH_CODE    = #{TREE_CODE}
	</select>

	<insert id="bcm120ukrvService.insertDetail2" parameterType="Map">	/* 추가 */
		/*UBcm01Krv.CBcm200UKr[fnBcm120Save] Query02*/
		INSERT INTO BSA225T
		     ( COMP_CODE
		     , DIV_CODE
		     , WH_CODE
		     , WH_CELL_CODE
		     , WH_CELL_NAME
		     , CUSTOM_CODE
		     , USE_YN
		     , PABSTOCK_YN
		     , VALID_YN
		     --20200909 추가: DEFAULT_YN 추가
		     , DEFAULT_YN
		     , INSERT_DB_USER
		     , INSERT_DB_TIME
		     , UPDATE_DB_USER
		     , UPDATE_DB_TIME
		     )
		VALUES
		     ( #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{WH_CODE}
		     , #{WH_CELL_CODE}
		     , #{WH_CELL_NAME}
		     , #{CUSTOM_CODE}
		     , #{USE_YN}
		     , #{PABSTOCK_YN}
		     , #{VALID_YN}
		     --20200909 추가: DEFAULT_YN 추가
		     , #{DEFAULT_YN}
		     , #{S_USER_ID}
		     , getDate()
		     , #{S_USER_ID}
		     , getDate()
		)
	</insert>

	<update id="bcm120ukrvService.updateDetail2" parameterType="Map">		/* 수정 */
		/*UBcm01Krv.CBcm200UKr[fnBcm120Save] Query02*/
		UPDATE BSA225T
		   SET WH_CELL_NAME    = #{WH_CELL_NAME}
		     , CUSTOM_CODE     = #{CUSTOM_CODE}
		     , USE_YN          = #{USE_YN}
		     , PABSTOCK_YN     = #{PABSTOCK_YN}
		     , VALID_YN        = #{VALID_YN}
		     , WH_CELL_BARCODE = #{WH_CELL_BARCODE}
		     , REMARK          = #{REMARK}
		     --20200909 추가: DEFAULT_YN 추가
		     , DEFAULT_YN      = #{DEFAULT_YN}
		     , UPDATE_DB_USER  = #{S_USER_ID}
		     , UPDATE_DB_TIME  = getDate()
		 WHERE COMP_CODE       = #{S_COMP_CODE}
		   AND DIV_CODE        = #{DIV_CODE}
		   AND WH_CODE         = #{WH_CODE}
		   AND WH_CELL_CODE    = #{WH_CELL_CODE}
	</update>

	<delete id="bcm120ukrvService.deleteDetail2" parameterType="Map">		/* 삭제 */
		/*UBcm01Krv.CBcm200UKr[fnBcm120Save] Query01*/
		DELETE FROM BSA225T
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND WH_CODE      = #{WH_CODE}
		   AND WH_CELL_CODE = #{WH_CELL_CODE}
	</delete>





	<select id="bcm120ukrvService.selectWhLabel" parameterType="Map" resultType="rMap">
		/*bcm120ukrvService.selectWhLabel */
		<if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE_LIST)">
				<foreach collection="WH_CELL_CODE_LIST" item="item" separator="UNION ALL" close="" open="">
				SELECT	#{WH_CODE} AS WH_CODE,
						#{WH_NAME} AS WH_NAME,
						#{item} AS WH_CELL_CODE
				</foreach>
		</if>	
	</select>

<!-- 창고CELL 라벨출력 - 20200507 추가: 이노베이션 용, 20200511 수정: 양식변경으로 가져오는 로직 변경 -->
	<select id="bcm120ukrvService.selectWhCellLabel_inno" parameterType="Map" resultType="rMap">
		<if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE_LIST)">
			<foreach collection="WH_CELL_CODE_LIST" item="item" separator="UNION ALL" close="" open="">
			SELECT	#{WH_CODE} + '|' + #{WH_NAME} + '|' + #{item} AS QR_CODE,
					#{item}                                       AS WH_CELL_CODE,
					WH_CELL_NAME                                  AS WH_CELL_NAME,
					REMARK
			  FROM BSA225T WITH(NOLOCK)
			 WHERE COMP_CODE    = #{S_COMP_CODE}
			   AND DIV_CODE     = #{TYPE_LEVEL}
			   AND WH_CODE      = #{WH_CODE}
			   AND WH_CELL_CODE = #{item}
			</foreach>
		</if>	
	</select>
</mapper>