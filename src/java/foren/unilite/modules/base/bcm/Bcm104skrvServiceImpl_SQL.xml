<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bcm104skrvServiceImpl">
	
	<select id="bcm104skrvServiceImpl.getDataList" parameterType="Map" resultType="rMap">
			     /* bcm104skrv.Cbcm104skrv[fnBcm104QStd] Query02*/
			     
   BEGIN
   			     
	DECLARE @REF_ITEM NVARCHAR(1)
	
	SELECT @REF_ITEM = ISNULL(REF_ITEM, '1')
	  FROM BSA300T WITH (NOLOCK)                          
	 WHERE USER_ID = #{S_USER_ID} 

	DECLARE  @COMP_CODE 	NVARCHAR(08)
			,@CUSTOM_CODE 	NVARCHAR(20)
			,@UNPAY_AMT		NUMERIC(30,6)
		    ,@STOCK_I		NUMERIC(30,6)
	
	SET @COMP_CODE 	 = #{S_COMP_CODE} 
	SET @CUSTOM_CODE = #{CUSTOM_CODE} 
	    	
    SELECT A.CUSTOM_CODE                                           
         , A.CUSTOM_TYPE                                           
         , A.CUSTOM_NAME                                           
         , A.CUSTOM_NAME1                                          
         , A.CUSTOM_NAME2                                          
         , A.CUSTOM_FULL_NAME                                      
         , A.NATION_CODE                                           
         , (SUBSTRING(A.COMPANY_NUM,1,3) + '-' +                   
            SUBSTRING(A.COMPANY_NUM,4,2) + '-' +                   
            SUBSTRING(A.COMPANY_NUM,6,5)) AS COMPANY_NUM           
         , unilite.fnCipherDecrypt(A.TOP_NUM, 'A') AS TOP_NUM      
         , A.TOP_NAME                                              
         , A.BUSINESS_TYPE                                         
         , A.USE_YN                                                
         , A.COMP_TYPE                                             
         , A.COMP_CLASS                                            
         , A.AGENT_TYPE                                            
         , A.AGENT_TYPE2                                           
         , A.AGENT_TYPE3                                           
    
         , A.AREA_TYPE                                             
         , (SUBSTRING(A.ZIP_CODE, 1, 3) + '-' +                    
            SUBSTRING(A.ZIP_CODE, 4, 3)) AS ZIP_CODE               
         , A.ADDR1                                                 
         , A.ADDR2                                                 
         , A.TELEPHON                                              
         , A.FAX_NUM                                               
         , A.HTTP_ADDR                                             
         , A.MAIL_ID                                               
         , A.WON_CALC_BAS                                          
         , uniLITE.fnGetUserDate(A.COMP_CODE, START_DATE) AS START_DATE 
         , uniLITE.fnGetUserDate(A.COMP_CODE,STOP_DATE)   AS STOP_DATE  
         , A.TO_ADDRESS                                            
         , A.TAX_CALC_TYPE                                         
         , A.RECEIPT_DAY                                           
         , A.MONEY_UNIT                                            
         , A.TAX_TYPE                                              
         , A.BILL_TYPE                                             
         , A.SET_METH                                              
         , A.VAT_RATE                                              
         , A.TRANS_CLOSE_DAY                                       
         , A.COLLECT_DAY                                           
         , A.CREDIT_YN                                             
         , A.TOT_CREDIT_AMT                                        
         , A.CREDIT_AMT                                            
         , uniLITE.fnGetUserDate(A.COMP_CODE, CREDIT_YMD) AS CREDIT_YMD             
         , ISNULL(COLLECT_CARE, '2') AS COLLECT_CARE       
         , A.SAP_CODE      
         , A.BUSI_PRSN                                             
         , A.TAX_CALC_ORDER                                             
         , A.REMARK                                                
         , A.MANAGE_CUSTOM                                         
         , (CASE ISNULL(A.MANAGE_CUSTOM, '')                     
                 WHEN ''                                         
                      THEN ''                                    
                      ELSE (SELECT CUSTOM_NAME                   
                              FROM BCM100T  WITH (NOLOCK)                      
                             WHERE A.COMP_CODE     = COMP_CODE   
                               AND A.MANAGE_CUSTOM = CUSTOM_CODE)
             END) AS MCUSTOM_NAME                                
         , A.COLLECTOR_CP                                          
         , (CASE ISNULL(A.COLLECTOR_CP, '')                      
                 WHEN ''                                         
                      THEN ''                                    
                      ELSE (SELECT CUSTOM_NAME                   
                              FROM BCM100T  WITH (NOLOCK)                      
                             WHERE A.COMP_CODE    = COMP_CODE    
                               AND A.COLLECTOR_CP = CUSTOM_CODE) 
             END) AS COLLECTOR_CP_NAME                           
         , A.BANK_CODE                                             
         , (CASE ISNULL(A.BANK_CODE, '')                         
                 WHEN ''                                         
                      THEN ''                                    
                      ELSE (SELECT CUSTOM_NAME                   
                              FROM BCM100T   WITH (NOLOCK)                     
                             WHERE A.COMP_CODE = COMP_CODE       
                               AND A.BANK_CODE = CUSTOM_CODE     
                               AND CUSTOM_TYPE = '4')            
             END) AS BANK_NAME                                   
         , unilite.fnCipherDecrypt(A.BANKBOOK_NUM, 'B') AS BANKBOOK_NUM
         , A.BANKBOOK_NAME                                         
         , '' AS CUST_CHK                                        
         , '' AS SSN_CHK                                         
         , A.UPDATE_DB_USER 
         , A.PURCHASE_BANK
         , (CASE ISNULL(A.PURCHASE_BANK, '') WHEN '' THEN ''  
                                                     ELSE (SELECT CUSTOM_NAME 
                                                             FROM BCM100T WITH (NOLOCK)
                                                            WHERE A.COMP_CODE     = COMP_CODE
                                                              AND A.PURCHASE_BANK = CUSTOM_CODE
                                                              AND CUSTOM_TYPE = '4') 
             END) AS PURBANKNAME
         , A.BILL_PRSN
         , A.HAND_PHON
         , A.BILL_MAIL_ID
         , A.CUSTOM_SALE_PRSN
         , A.CUSTOM_SALE_HAND_PHON
         , A.CUSTOM_SALE_MAIL_ID
         , A.BILL_PRSN2
         , A.HAND_PHON2
         , A.BILL_MAIL_ID2
         , A.BILL_MEM_TYPE
         , A.ADDR_TYPE  
         , A.COMP_CODE                                            
         , A.CHANNEL
         , A.BILL_CUSTOM
         , (CASE ISNULL(A.BILL_CUSTOM, '')                    
                 WHEN ''                                      
                      THEN ''                                 
                      ELSE (SELECT CUSTOM_NAME                
                              FROM BCM100T WITH (NOLOCK)                    
                             WHERE A.COMP_CODE   = COMP_CODE  
                               AND A.BILL_CUSTOM = CUSTOM_CODE)
             END) AS BILL_CUSTOM_NAME                          
         , ISNULL(A.CREDIT_OVER_YN, 'N') AS CREDIT_OVER_YN
    	 , A.DEPT_CODE
    	 , A.CUST_LEVEL1
    	 , A.SERVANT_COMPANY_NUM
    	 , A.RETURN_CODE
    	 , A.UPDATE_DB_TIME
    	 , A.CREDIT_OVER_YN
    	 , A.DVRY_PRSN
    	 , A.DVRY_PHON
    	 , A.DVRY_LT
    	 , A.PUBLICATION_FLD1
    	 , A.PUBLICATION_FLD2
    	 , A.PUBLICATION_FLD3
    	 , A.CARD_NO1
    	 , A.CARD_NO2
    	 , A.CARD_NO3
    	 , A.CARD_NO4 
    	 , A.WH_CODE   	 
    	 , B.TREE_NAME 	AS DEPT_NAME
    	 , C.BALANCE_DATE
    	 , C.BALANCE_PRSN
      FROM BCM100T A WITH(NOLOCK)  
      LEFT JOIN (
		SELECT COMP_CODE
			  ,CUSTOM_CODE
			  ,MAX(BALANCE_DATE)	AS BALANCE_DATE
			  ,MAX(BALANCE_PRSN)	AS BALANCE_PRSN
		 FROM MAP040T WITH (NOLOCK)
		WHERE COMP_CODE = #{S_COMP_CODE}
		GROUP BY COMP_CODE, CUSTOM_CODE
      ) C  ON	C.COMP_CODE = A.COMP_CODE
          AND   C.CUSTOM_CODE = A.CUSTOM_CODE
      
      LEFT JOIN BSA210T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
      					               AND A.DEPT_CODE = B.TREE_CODE                      
      WHERE A.CUSTOM_CODE IS NOT NULL
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_LEVEL1)">
      		 AND A.CUSTOM_LEVEL1    = #{CUSTOM_LEVEL1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_LEVEL2)">
      		 AND A.CUSTOM_LEVEL2    =    = #{CUSTOM_LEVEL2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_LEVEL3)">
      		 AND A.CUSTOM_LEVEL3    =    = #{CUSTOM_LEVEL3}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
      		 AND A.CUSTOM_CODE   LIKE #{CUSTOM_CODE} + '%'
		</if>
       
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
        	 	 AND (
        	 	 		(@REF_ITEM = '0' AND A.CUSTOM_NAME  LIKE '%'+ #{CUSTOM_NAME} +'%')
        	 	 		OR        	 	 		
						(@REF_ITEM = '1' AND A.CUSTOM_NAME1 LIKE '%'+ #{CUSTOM_NAME} +'%')
						OR
						(@REF_ITEM = '2' AND A.CUSTOM_NAME2 LIKE '%'+ #{CUSTOM_NAME} +'%' )
					 )
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_TYPE)">
      		 AND A.CUSTOM_TYPE      = #{CUSTOM_TYPE}
		</if>  
		<if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
      		 AND A.AGENT_TYPE       = #{AGENT_TYPE}
		</if>  
		<if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">
      		AND A.AREA_TYPE        = #{AREA_TYPE}
		</if>  
		<if test="@foren.Ognl@isNotEmpty(BUSI_PRSN)">
      		AND A.BUSI_PRSN        = #{BUSI_PRSN}
		</if>  
		<if test="@foren.Ognl@isNotEmpty(USE_YN)">
      		AND A.USE_YN           = #{USE_YN}
		</if>  
		<if test="@foren.Ognl@isNotEmpty(BUSINESS_TYPE)">
      		AND A.BUSINESS_TYPE    = #{BUSINESS_TYPE}
		</if>  
		<if test="@foren.Ognl@isNotEmpty(TOP_NAME)">
      		AND A.TOP_NAME      LIKE #{TOP_NAME} +'%'
		</if>  
		<if test="@foren.Ognl@isNotEmpty(COMPANY_NUM)">
      		AND A.COMPANY_NUM   LIKE #{COMPANY_NUM} + '%'
		</if>
      		AND A.COMP_CODE        = #{S_COMP_CODE}		
		<if test="@foren.Ognl@isNotEmpty(COMPANY_NUM)">
      		 AND A.COMPANY_NUM   LIKE '%' + #{COMPANY_NUM} + '%'
		</if>  

         ORDER BY A.CUSTOM_CODE
	
	  END
	
	</select>
	
	<select id="bcm104skrvServiceImpl.getUnPayAmt" parameterType="Map" resultType="rMap">
		BEGIN

		SET NOCOUNT ON
		SET ARITHABORT ON
		
			/* 거래처별 기간별잔액현황*/
		
		 DECLARE    @COMP_CODE      NVARCHAR(08)
						, @CUSTOM_CODE  NVARCHAR(20)
			            , @DIV_CODE          NVARCHAR(10) 
			            , @FR_DATE            NVARCHAR(8) 
			            , @TO_DATE            NVARCHAR(8) 
			            , @TODAY              NVARCHAR(8)
			                 
			            , @LastYYYYMM      NVARCHAR(6)
			            , @FirstYYYYMM      NVARCHAR(6)
			
			            , @BasisMonth         NVARCHAR(06)
			            , @MaxMonth          NVARCHAR(06)
			            , @StMonth             NVARCHAR(02)
			            , @QRY_YEAR           NVARCHAR(04)
						, @TODAY_IN_AMT_I  NUMERIC(30, 6)
						, @TODAY_STOCK_I	NUMERIC(30, 6)
		
			    SET @COMP_CODE	  = #{COMP_CODE}
				SET @CUSTOM_CODE  = #{CUSTOM_CODE}
		 
			/*  1. 변수 값 할당  */
			    SET @DIV_CODE			= ''
			    SET @FR_DATE			= CONVERT(VARCHAR(8), GETDATE(), 112)
			    SET @TO_DATE			= CONVERT(VARCHAR(8), GETDATE(), 112)
			    SET @TODAY				= CONVERT(VARCHAR(8), GETDATE(), 112)
			  
			    SET @QRY_YEAR     = LEFT(@FR_DATE, 4)
			
			/*  2. 최종 재고마감월 계산 */
			    SELECT @LastYYYYMM  = MAX(BASIS_YYYYMM)
			    FROM   BIV250T WITH (NOLOCK)
			    WHERE  COMP_CODE    = @COMP_CODE
			    --AND    DIV_CODE     = @DIV_CODE
			    AND    BASIS_YYYYMM &lt; CONVERT(NVARCHAR(06), CONVERT(SMALLDATETIME, @FR_DATE), 112)
			    AND	   SUM_TYPE		= 'C'
			    AND  CUSTOM_CODE  = @CUSTOM_CODE
			         
			    SELECT @FirstYYYYMM = MIN(BASIS_YYYYMM)
			    FROM   BIV250T WITH (NOLOCK)
			    WHERE  COMP_CODE    = @COMP_CODE
			    --AND    DIV_CODE     = @DIV_CODE
			    AND    BASIS_YYYYMM &gt;= CONVERT(NVARCHAR(06), CONVERT(SMALLDATETIME, @FR_DATE), 112)
			    AND	   SUM_TYPE		= 'C'
			    AND  CUSTOM_CODE  = @CUSTOM_CODE
			     
			    SET @LastYYYYMM = ISNULL(@LastYYYYMM, @FirstYYYYMM)
			
			/*  3. 이월금액 기초월 참조  */
			    SELECT  @StMonth = SUBSTRING(FN_DATE,5,2)
			    FROM    BOR100T WITH (NOLOCK)
			    WHERE   COMP_CODE = @COMP_CODE
			
			    SELECT  @BasisMonth = MAX(A.AC_DATE)
			    FROM    AGB200T A  WITH (NOLOCK)
			    WHERE   A.COMP_CODE  = @COMP_CODE
			    AND     A.AC_DATE   &lt;= @QRY_YEAR + @StMonth
			    AND		LEN(A.AC_DATE) = 6
			
			    SET @BasisMonth = SUBSTRING(ISNULL(@BasisMonth, '190001'), 1, 6)
			
				SELECT DIV_CODE
						 , ISNULL(SUM(ISNULL(TODAY_IN_AMT_I, 0)), 0) AS TODAY_IN_AMT_I
						 , ISNULL(SUM(ISNULL(TODAY_STOCK_I, 0)), 0) AS TODAY_STOCK_I
				FROM
				(
			    SELECT  A.DIV_CODE, 
			           (ISNULL(CASE C.JAN_DIVI WHEN '1' THEN ISNULL(A.DR_AMT_I, 0.0) - ISNULL(A.CR_AMT_I, 0.0)
			                                       WHEN '2' THEN ISNULL(A.CR_AMT_I, 0.0) - ISNULL(A.DR_AMT_I, 0.0)
			                       END, 0))                                                         AS TODAY_IN_AMT_I
								   ,0 AS TODAY_STOCK_I
			    FROM               AGB200T  A  WITH (NOLOCK)
					    LEFT  JOIN BCM100T  B  WITH (NOLOCK) ON  B.COMP_CODE   = A.COMP_CODE
					                                         AND B.CUSTOM_CODE = CASE WHEN A.BOOK_CODE1 = 'A4' THEN A.BOOK_DATA1
			                                                                          WHEN A.BOOK_CODE2 = 'A4' THEN A.BOOK_DATA2 
			                                                                     END
					    INNER JOIN ABA400T  C  WITH (NOLOCK) ON  C.COMP_CODE  = A.COMP_CODE
					                                         AND C.ACCNT      = A.ACCNT
					                                         AND C.ACCNT_SPEC = '81'
			    WHERE   A.COMP_CODE        = @COMP_CODE
			    --AND     A.DIV_CODE         = @DIV_CODE
			    AND     A.AC_DATE          = @BasisMonth
					AND B.CUSTOM_CODE = @CUSTOM_CODE
		
					--GROUP BY A.DIV_CODE
		
				UNION ALL 
		
			    SELECT  A.DIV_CODE, 
			           ISNULL((CASE WHEN A1.CHANGE_BASIS_DATE &gt;= @BasisMonth AND A1.CHANGE_BASIS_DATE &lt;= @TODAY
			                                 THEN ISNULL(A.AMOUNT_I, 0) + ISNULL(A.TAX_I, 0)
			                            ELSE 0
			                       END), 0)                                                         AS TODAY_IN_AMT_I
														   ,0 AS TODAY_STOCK_I
			    FROM               MAP200T  A  WITH (NOLOCK)
			            INNER JOIN MAP100T  A1 WITH (NOLOCK) ON  A1.COMP_CODE        = A.COMP_CODE
			                                                 AND A1.DIV_CODE         = A.DIV_CODE
			                                                 AND A1.BILL_DIV_CODE    = A.BILL_DIV_CODE
			                                                 AND A1.CUSTOM_CODE      = A.CUSTOM_CODE
			                                                 AND A1.CHANGE_BASIS_NUM = A.CHANGE_BASIS_NUM
					    LEFT  JOIN BCM100T  B  WITH (NOLOCK) ON  B.COMP_CODE         = A.COMP_CODE
					                                         AND B.CUSTOM_CODE       = A.CUSTOM_CODE
			    WHERE   A.COMP_CODE        = @COMP_CODE
			    --AND     A.DIV_CODE         = @DIV_CODE
			    AND     A1.CHANGE_BASIS_DATE      &gt;= @BasisMonth
			    AND     A1.CHANGE_BASIS_DATE      &lt;= CASE WHEN @TODAY &gt; @TO_DATE THEN @TODAY ELSE @TO_DATE END
			    AND 	ISNULL(A1.BILL_NUM,'') != ''
			    AND A.CUSTOM_CODE = @CUSTOM_CODE
				 
				--GROUP BY A.DIV_CODE
		
				UNION ALL 
		
			    /*  5.3 지불액  */
			    SELECT  A.DIV_CODE,
			           SUM(ISNULL(CASE WHEN A.AC_DATE &gt;= @BasisMonth AND A.AC_DATE &lt;= @TODAY
			                                 THEN ISNULL(CASE C.JAN_DIVI WHEN '1' THEN ISNULL(A.CR_AMT_I, 0.0) * (-1)
			                                                             WHEN '2' THEN ISNULL(A.DR_AMT_I, 0.0) * (-1)
			                                             END, 0)
			                       END, 0))                                                         AS TODAY_IN_AMT_I
								   ,0 AS TODAY_STOCK_I
			    FROM               AGB200T  A  WITH (NOLOCK)
					    LEFT  JOIN BCM100T  B  WITH (NOLOCK) ON  B.COMP_CODE   = A.COMP_CODE
					                                         AND B.CUSTOM_CODE = CASE WHEN A.BOOK_CODE1 = 'A4' THEN A.BOOK_DATA1
			                                                                          WHEN A.BOOK_CODE2 = 'A4' THEN A.BOOK_DATA2 
			                                                                     END
					    INNER JOIN ABA400T  C  WITH (NOLOCK) ON  C.COMP_CODE   = A.COMP_CODE
					                                         AND C.ACCNT       = A.ACCNT
					                                         AND C.ACCNT_SPEC  = '81'
			    WHERE   A.COMP_CODE        = @COMP_CODE
			    --AND     A.DIV_CODE         = @DIV_CODE
			    AND     A.AC_DATE         &gt;= @BasisMonth
			    AND     A.AC_DATE         &lt;= CASE WHEN @TODAY &gt; @TO_DATE THEN @TODAY ELSE @TO_DATE END
			    AND     LEN(AC_DATE)      != 6
			    AND B.CUSTOM_CODE = @CUSTOM_CODE
			    
				GROUP BY A.DIV_CODE		 
			    	
			  --  /*  5.5 현재고액  */
		
			   UNION ALL
			     
		        SELECT A.DIV_CODE, 0 AS TODAY_IN_AMT_I, SUM(A.TODAY_STOCK_I) AS TODAY_STOCK_I
				FROM 
				(
						SELECT A.DIV_CODE, (A.STOCK_Q * B.PURCHASE_P) AS TODAY_STOCK_I, A.STOCK_Q
						 FROM BIV150T A WITH(NOLOCK)
						 LEFT JOIN BIV350T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
														AND A.DIV_CODE = B.DIV_CODE
														AND A.LOT_NO = B.LOT_NO
														AND A.WH_CODE = B.WH_CODE
														AND A.ITEM_CODE = B.ITEM_CODE
						  INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
					        	   						   AND C.ITEM_CODE = A.ITEM_CODE
					        	   						   AND ISNULL(C.STOCK_CARE_YN,'N') = 'Y'                                      /* 2015.10.02 추가 */												
							WHERE   A.COMP_CODE        = @COMP_CODE
							--AND     A.DIV_CODE         = @DIV_CODE
			                AND B.PURCHASE_CUSTOM_CODE = @CUSTOM_CODE
						 UNION ALL
						 
						 SELECT A.DIV_CODE,
								(A.STOCK_Q * A.PURCHASE_P) AS TODAY_STOCK_I, A.STOCK_Q AS STOCK_Q
						 FROM UNILITE.VGetDailyStock A WITH(NOLOCK)
						  INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
					        	   						   AND B.ITEM_CODE = A.ITEM_CODE
					        	   						   AND ISNULL(B.STOCK_CARE_YN,'N') = 'Y'                                      /* 2015.10.02 추가 */
							WHERE   A.COMP_CODE        = @COMP_CODE
							--AND     A.DIV_CODE         = @DIV_CODE
							AND A.PURCHASE_CUSTOM_CODE = @CUSTOM_CODE
						 ) A
				 	  
					  GROUP BY A.DIV_CODE  		  
		             HAVING SUM(A.STOCK_Q) != 0
		 
		     ) A
			 GROUP BY A.DIV_CODE
			 --HAVING (		 ISNULL(SUM(A.TODAY_IN_AMT_I), 0) != 0
				--			OR ISNULL(SUM(A.TODAY_STOCK_I), 0) != 0 )
		
			 --SET @UNPAY_AMT =  ISNULL(@TODAY_IN_AMT_I, 0)
			 --SET @STOCK_I       = ISNULL(@TODAY_STOCK_I, 0)
		
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		
		END 
	</select>
	<select id="bcm104skrvServiceImpl.selectPurchaseList" parameterType="Map" resultType="rMap">
		SELECT 
			A.COMP_CODE,			
			A.ITEM_CODE, 
			D.ITEM_NAME,
			F.PUBLISHER_CODE,
	        F.PUBLISHER,
	        F.AUTHOR1,
			F.SALE_BASIS_P,
			MIN(ISNULL(A.ITEM_P,0)) AS PURCHASE_P,
			MIN(ISNULL(A.PURCHASE_RATE,0)) AS PURCHASE_RATE,
			CASE WHEN F.STOCK_CARE_YN = 'Y' THEN SUM(B.STOCK_Q) ELSE 0 END AS STOCK_Q,
			MIN(ISNULL(A.ITEM_P,0)) * (CASE WHEN F.STOCK_CARE_YN = 'Y' THEN SUM(B.STOCK_Q) ELSE 0 END) AS STOCK_I,
			D.ITEM_ACCOUNT,
			D.SUPPLY_TYPE,
			F.STOCK_CARE_YN
		FROM BPR400T A WITH (NOLOCK)
			LEFT JOIN BCM100T C WITH(NOLOCK) ON A.COMP_CODE		 = C.COMP_CODE
											AND A.CUSTOM_CODE	 = C.CUSTOM_CODE
			INNER JOIN BPR200T D WITH(NOLOCK) ON A.COMP_CODE	 = D.COMP_CODE
											 AND A.DIV_CODE		 = D.DIV_CODE
											 AND A.ITEM_CODE	 = D.ITEM_CODE
			INNER JOIN BPR100T F WITH(NOLOCK) ON F.COMP_CODE	= A.COMP_CODE
				        	   			     AND F.ITEM_CODE	= A.ITEM_CODE
				        	   			     AND F.USE_YN		= 'Y'	        	   			     
			LEFT JOIN	(SELECT A.COMP_CODE, A.DIV_CODE, A.PURCHASE_CUSTOM_CODE, A.ITEM_CODE, SUM(ISNULL(A.STOCK_Q, 0)) AS STOCK_Q
						   FROM (SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, B.PURCHASE_CUSTOM_CODE, B.PURCHASE_P AS ITEM_P, B.PURCHASE_RATE, A.STOCK_Q AS STOCK_Q
							       FROM BIV150T A WITH(NOLOCK)
							            LEFT JOIN BIV350T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
															AND A.DIV_CODE = B.DIV_CODE
															AND A.LOT_NO = B.LOT_NO
															AND A.WH_CODE = B.WH_CODE
															AND A.ITEM_CODE = B.ITEM_CODE
							     UNION ALL
							     SELECT A.COMP_CODE, A.DIV_CODE, A.WH_CODE, A.ITEM_CODE, A.PURCHASE_CUSTOM_CODE, A.PURCHASE_P AS ITEM_P, A.PURCHASE_RATE, A.STOCK_Q AS STOCK_Q
							       FROM UNILITE.VGetDailyStock A WITH(NOLOCK)
							    ) A
						   GROUP BY A.COMP_CODE, A.DIV_CODE, A.PURCHASE_CUSTOM_CODE, A.ITEM_CODE 
						 ) B	ON  A.COMP_CODE		= B.COMP_CODE
								AND A.DIV_CODE		= B.DIV_CODE
								AND A.CUSTOM_CODE	= B.PURCHASE_CUSTOM_CODE
								AND A.ITEM_CODE		= B.ITEM_CODE
		WHERE A.COMP_CODE		= #{S_COMP_CODE}
		  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		  AND A.DIV_CODE		= #{DIV_CODE}
		  </if>
		  <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		  AND A.CUSTOM_CODE		= #{CUSTOM_CODE}
		  </if>
		  AND A.APLY_END_DATE	= (SELECT TOP 1 
									MAX(X.APLY_END_DATE) AS APLY_END_DATE
									FROM  BPR400T X WITH(NOLOCK)
									WHERE   X.COMP_CODE    		= A.COMP_CODE
										AND X.DIV_CODE        	= A.DIV_CODE
										AND X.TYPE              = A.TYPE
										AND X.ITEM_CODE       	= A.ITEM_CODE
										AND X.MONEY_UNIT    	= A.MONEY_UNIT
										AND X.ORDER_UNIT     	= A.ORDER_UNIT
										AND X.APLY_START_DATE 	&lt;= CONVERT(NVARCHAR(08), GETDATE(), 112)
										AND X.APLY_END_DATE    	&gt;  CONVERT(NVARCHAR(08), GETDATE(), 112)
									)
		 			
	 GROUP BY A.COMP_CODE, A.ITEM_CODE, D.ITEM_NAME
	     	,A.CUSTOM_CODE, C.CUSTOM_NAME, F.SALE_BASIS_P
	     	,F.PUBLISHER_CODE, F.PUBLISHER, F.AUTHOR1, F.STOCK_CARE_YN, D.ITEM_ACCOUNT, D.SUPPLY_TYPE
	        
		 
			--HAVING SUM(A.STOCK_Q) != 0
		 
			
		ORDER BY D.ITEM_NAME
	</select>
	
	<select id="bcm104skrvServiceImpl.insertQuery01" parameterType="Map" resultType="rMap">
		
	</select>	
	<select id="bcm104skrvServiceImpl.insertQuery06" parameterType="Map" resultType="rMap">
		
	</select>
	<select id="bcm104skrvServiceImpl.updateQuery04" parameterType="Map" resultType="rMap">
	
	</select>
	
	<select id="bcm104skrvServiceImpl.deleteQuery02" parameterType="Map" resultType="rMap">
	  
	</select>
	<select id="bcm104skrvServiceImpl.getAutoCustomCode" parameterType="Map" resultType="rMap">		
		
	</select>	
	
	<update id="bcm104skrvServiceImpl.insertMulti" parameterType="Map">
	  
	</update>
	<update id="bcm104skrvServiceImpl.updateMulti" parameterType="Map">
	
	</update>
	<delete id="bcm104skrvServiceImpl.deleteMulti" parameterType="Map">
		
	</delete>
	<update id="bcm104skrvServiceImpl.insertMultiLog" parameterType="Map">
	
	</update>
	<update id="bcm104skrvServiceImpl.updateMultiLog" parameterType="Map">
	   
	</update>
	<update id="bcm104skrvServiceImpl.deleteMultiLog" parameterType="Map">
	
	</update>
	<select id="bcm104skrvServiceImpl.getBCM120List" parameterType="Map" resultType="rMap">
		/* bcm104skrvServiceImpl.getBCM120List */
		/* bcm104skrv.Cbcm104skrv[fnBcm120QStd] Query01 **/
    BEGIN    
        SET NOCOUNT ON    
        SET ARITHABORT ON  
     
        SELECT 
               A.COMP_CODE
             , A.CUSTOM_CODE
             , A.SEQ
             , A.PRSN_NAME
             , A.DEPT_NAME
             , A.HAND_PHON
             , A.TELEPHONE_NUM1
             , A.TELEPHONE_NUM2
             , A.FAX_NUM
             , A.MAIL_ID
             , A.BILL_TYPE
             , A.MAIN_BILL_YN
             , A.REMARK
             , A.INSERT_DB_USER
             , A.INSERT_DB_TIME
             , A.UPDATE_DB_USER
             , A.UPDATE_DB_TIME
          FROM            BCM120T AS A WITH(NOLOCK)
               INNER JOIN BCM100T AS B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                   AND B.CUSTOM_CODE = A.CUSTOM_CODE
         WHERE A.COMP_CODE   = #{COMP_CODE}
           AND A.CUSTOM_CODE = #{CUSTOM_CODE}
               
        SET NOCOUNT OFF    
        SET ARITHABORT OFF    
    END 
		
	</select>
	<insert id="bcm104skrvServiceImpl.insertBCM120" parameterType="Map">
	
	</insert>
	<update id="bcm104skrvServiceImpl.updateBCM120" parameterType="Map">
		
	</update>
	<delete id="bcm104skrvServiceImpl.deleteBCM120" parameterType="Map">
	
	</delete>
	<select id="bcm104skrvServiceImpl.insertSimple" parameterType="Map" resultType="rMap" statementType="PREPARED">
	
	</select>
</mapper>