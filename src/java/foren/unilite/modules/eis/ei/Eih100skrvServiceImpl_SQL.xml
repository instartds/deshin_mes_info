<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="eih100skrvServiceImpl">
	<select id="eih100skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* eih100skrvServiceImpl.selectList */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08)    /* 법인코드  */
		          , @DivCode     NVARCHAR(08)    /* 사업장코드  */
		          , @BasisYear   NVARCHAR(100)   /* 기준년도 */
		          , @UserId      NVARCHAR(100)   /* 사용자ID */
		          , @LangType    NVARCHAR(2)     /* 언어구분 */


		    SET @CompCode   = #{S_COMP_CODE}
		    SET @DivCode    = #{DIV_CODE}
		    SET @BasisYear  = #{BASIS_YEAR}

		    SET @UserId     = #{USER_ID}
		    SET @LangType   = #{S_LANG_CODE}


			SELECT AAA.COMP_CODE
				  ,AAA.TREE_LEVEL
				  ,MAX(BBB.TREE_NAME)  AS DEPT_NAME
				  ,MAX(BBB.TREE_CODE)  AS DEPT_CODE
				  ,SUM(AAA.MONTH_1)    AS MONTH_1
				  ,SUM(AAA.MONTH_2)    AS MONTH_2
				  ,SUM(AAA.MONTH_3)    AS MONTH_3
				  ,SUM(AAA.MONTH_4)    AS MONTH_4
				  ,SUM(AAA.MONTH_5)    AS MONTH_5
				  ,SUM(AAA.MONTH_6)    AS MONTH_6
				  ,SUM(AAA.MONTH_7)    AS MONTH_7
				  ,SUM(AAA.MONTH_8)    AS MONTH_8
				  ,SUM(AAA.MONTH_9)    AS MONTH_9
				  ,SUM(AAA.MONTH_10)   AS MONTH_10
				  ,SUM(AAA.MONTH_11)   AS MONTH_11
				  ,SUM(AAA.MONTH_12)   AS MONTH_12
				  ,MAX(BBB.REMARK)	   AS REMARK
			FROM

			(SELECT   AA.COMP_CODE
					 ,CASE WHEN LEFT(AA.TREE_LEVEL,4) = '1007' THEN  LEFT(AA.TREE_LEVEL,7)
								  ELSE LEFT(AA.TREE_LEVEL,4)
						   END													  AS TREE_LEVEL
					 ,MAX(AA.DEPT_NAME)											  AS DEPT_NAME
					 ,MAX(AA.DEPT_CODE)										      AS DEPT_CODE
					 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '01' THEN COUNT(1) ELSE 0 END AS MONTH_1
					 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '02' THEN COUNT(1) ELSE 0 END AS MONTH_2
					 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '03' THEN COUNT(1) ELSE 0 END AS MONTH_3
					 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '04' THEN COUNT(1) ELSE 0 END AS MONTH_4
					 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '05' THEN COUNT(1) ELSE 0 END AS MONTH_5
					 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '06' THEN COUNT(1) ELSE 0 END AS MONTH_6
					 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '07' THEN COUNT(1) ELSE 0 END AS MONTH_7
					 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '08' THEN COUNT(1) ELSE 0 END AS MONTH_8
					 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '09' THEN COUNT(1) ELSE 0 END AS MONTH_9
					 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '10' THEN COUNT(1) ELSE 0 END AS MONTH_10
					 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '11' THEN COUNT(1) ELSE 0 END AS MONTH_11
					 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '12' THEN COUNT(1) ELSE 0 END AS MONTH_12
				FROM
					(SELECT A.COMP_CODE
						   ,A.PERSON_NUMB
						   ,A.DUTY_YYYYMM
						   ,MAX(C.TREE_LEVEL) AS TREE_LEVEL
						   ,MAX(C.TREE_NAME)  AS DEPT_NAME
						   ,MAX(C.TREE_CODE)  AS DEPT_CODE
					FROM HAT200T A WITH (NOLOCK)
					INNER JOIN HUM100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
										AND A.PERSON_NUMB = B.PERSON_NUMB
					INNER JOIN ( SELECT  COMP_CODE
									   , TREE_CODE
									   , TREE_LEVEL
									   , TREE_NAME
								  FROM BSA210T WITH (NOLOCK)
								  WHERE COMP_CODE = @CompCode
								  AND USE_YN = 'Y') C ON C.COMP_CODE = A.COMP_CODE
													   AND C.TREE_CODE = B.DEPT_CODE
					WHERE LEFT(DUTY_YYYYMM,4) = @BasisYear
					GROUP BY A.COMP_CODE
							,A.PERSON_NUMB
							,A.DUTY_YYYYMM
					) AA
		    GROUP BY AA.COMP_CODE
					,AA.DUTY_YYYYMM
				    ,CASE WHEN LEFT(AA.TREE_LEVEL,4) = '1007' THEN  LEFT(AA.TREE_LEVEL,7)
						  ELSE LEFT(AA.TREE_LEVEL,4)
				     END
			)AAA INNER JOIN BSA210T  BBB WITH (NOLOCK) ON BBB.COMP_CODE  = AAA.COMP_CODE
								       			      AND BBB.TREE_LEVEL = AAA.TREE_LEVEL
		 GROUP BY AAA.COMP_CODE
				 ,AAA.TREE_LEVEL
		ORDER BY MAX(BBB.TREE_CODE)
	END
	</select>

	<select id="eih100skrvServiceImpl.selectChartList" parameterType="Map" resultType="rMap">
		/* eih100skrvServiceImpl.selectChartList */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08)    /* 법인코드  */
		          , @DivCode     NVARCHAR(08)    /* 사업장코드  */
		          , @BasisYear   NVARCHAR(100)   /* 기준년도 */
		          , @UserId      NVARCHAR(100)   /* 사용자ID */
		          , @LangType    NVARCHAR(2)     /* 언어구분 */


		    SET @CompCode   = #{S_COMP_CODE}
		    SET @DivCode    = #{DIV_CODE}
		    SET @BasisYear  = #{BASIS_YEAR}

		    SET @UserId     = #{USER_ID}
		    SET @LangType   = #{S_LANG_CODE};


 	WITH TEMP_TABLE AS  (			SELECT AAA.COMP_CODE
									  ,AAA.TREE_LEVEL
									  ,MAX(BBB.TREE_NAME)  AS DEPT_NAME
									  ,MAX(BBB.TREE_CODE)  AS DEPT_CODE
									  ,SUM(AAA.MONTH_1)    AS MONTH_1
									  ,SUM(AAA.MONTH_2)    AS MONTH_2
									  ,SUM(AAA.MONTH_3)    AS MONTH_3
									  ,SUM(AAA.MONTH_4)    AS MONTH_4
									  ,SUM(AAA.MONTH_5)    AS MONTH_5
									  ,SUM(AAA.MONTH_6)    AS MONTH_6
									  ,SUM(AAA.MONTH_7)    AS MONTH_7
									  ,SUM(AAA.MONTH_8)    AS MONTH_8
									  ,SUM(AAA.MONTH_9)    AS MONTH_9
									  ,SUM(AAA.MONTH_10)   AS MONTH_10
									  ,SUM(AAA.MONTH_11)   AS MONTH_11
									  ,SUM(AAA.MONTH_12)   AS MONTH_12
									  ,MAX(BBB.REMARK)	   AS REMARK
								FROM

								(SELECT   AA.COMP_CODE
										 ,CASE WHEN LEFT(AA.TREE_LEVEL,4) = '1007' THEN  LEFT(AA.TREE_LEVEL,7)
													  ELSE LEFT(AA.TREE_LEVEL,4)
											   END													  AS TREE_LEVEL
										 ,MAX(AA.DEPT_NAME)											  AS DEPT_NAME
										 ,MAX(AA.DEPT_CODE)										      AS DEPT_CODE
										 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '01' THEN COUNT(1) ELSE 0 END AS MONTH_1
										 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '02' THEN COUNT(1) ELSE 0 END AS MONTH_2
										 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '03' THEN COUNT(1) ELSE 0 END AS MONTH_3
										 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '04' THEN COUNT(1) ELSE 0 END AS MONTH_4
										 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '05' THEN COUNT(1) ELSE 0 END AS MONTH_5
										 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '06' THEN COUNT(1) ELSE 0 END AS MONTH_6
										 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '07' THEN COUNT(1) ELSE 0 END AS MONTH_7
										 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '08' THEN COUNT(1) ELSE 0 END AS MONTH_8
										 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '09' THEN COUNT(1) ELSE 0 END AS MONTH_9
										 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '10' THEN COUNT(1) ELSE 0 END AS MONTH_10
										 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '11' THEN COUNT(1) ELSE 0 END AS MONTH_11
										 ,CASE WHEN AA.DUTY_YYYYMM = @BasisYear + '12' THEN COUNT(1) ELSE 0 END AS MONTH_12
									FROM
										(SELECT A.COMP_CODE
											   ,A.PERSON_NUMB
											   ,A.DUTY_YYYYMM
											   ,MAX(C.TREE_LEVEL) AS TREE_LEVEL
											   ,MAX(C.TREE_NAME)  AS DEPT_NAME
											   ,MAX(C.TREE_CODE)  AS DEPT_CODE
										FROM HAT200T A WITH (NOLOCK)
										INNER JOIN HUM100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
															AND A.PERSON_NUMB = B.PERSON_NUMB
										INNER JOIN ( SELECT  COMP_CODE
														   , TREE_CODE
														   , TREE_LEVEL
														   , TREE_NAME
													  FROM BSA210T WITH (NOLOCK)
													  WHERE COMP_CODE = @CompCode
													  AND USE_YN = 'Y') C ON C.COMP_CODE = A.COMP_CODE
																		   AND C.TREE_CODE = B.DEPT_CODE
										WHERE LEFT(DUTY_YYYYMM,4) = @BasisYear
										GROUP BY A.COMP_CODE
												,A.PERSON_NUMB
												,A.DUTY_YYYYMM
										) AA
								GROUP BY AA.COMP_CODE
										,AA.DUTY_YYYYMM
										,CASE WHEN LEFT(AA.TREE_LEVEL,4) = '1007' THEN  LEFT(AA.TREE_LEVEL,7)
											  ELSE LEFT(AA.TREE_LEVEL,4)
										 END
								)AAA INNER JOIN BSA210T  BBB WITH (NOLOCK) ON BBB.COMP_CODE  = AAA.COMP_CODE
								       									  AND BBB.TREE_LEVEL = AAA.TREE_LEVEL
							 GROUP BY AAA.COMP_CODE
									 ,AAA.TREE_LEVEL

				),TEMP_TABLE2 AS ( SELECT 1 AS MONTH_NM
										,@CompCode AS COMP_CODE
										, 1 AS CNT
 									        UNION ALL
								     SELECT MONTH_NM + 1AS MONTH_NM
										,@CompCode AS COMP_CODE
										, CNT+ 1  AS CNT
								     FROM TEMP_TABLE2
								     WHERE MONTH_NM <![CDATA[<=]]> 11
								 )
			 SELECT @BasisYear + '-' + REPLICATE ('0', 2- LEN(AAA.MONTH_NM)) +  CONVERT(NVARCHAR(2), AAA.MONTH_NM) AS MONTH_NM
				  ,CASE WHEN  AAA.CNT = 1  THEN BBB.MONTH_1
					    WHEN  AAA.CNT = 2  THEN BBB.MONTH_2
						WHEN  AAA.CNT = 3  THEN BBB.MONTH_3
						WHEN  AAA.CNT = 4  THEN BBB.MONTH_4
						WHEN  AAA.CNT = 5  THEN BBB.MONTH_5
						WHEN  AAA.CNT = 6  THEN BBB.MONTH_6
						WHEN  AAA.CNT = 7  THEN BBB.MONTH_7
						WHEN  AAA.CNT = 8  THEN BBB.MONTH_8
						WHEN  AAA.CNT = 9  THEN BBB.MONTH_9
						WHEN  AAA.CNT = 10 THEN BBB.MONTH_10
						WHEN  AAA.CNT = 11 THEN BBB.MONTH_11
						WHEN  AAA.CNT = 12 THEN BBB.MONTH_12
						ELSE 0
					END											AS  ALL_CNT
				 , BBB.TABLE_OF_ORGANIZATION
			 FROM TEMP_TABLE2 AAA LEFT JOIN
					(SELECT SUM(MONTH_1) AS MONTH_1
						  ,SUM(MONTH_2) AS MONTH_2
						  ,SUM(MONTH_3) AS MONTH_3
						  ,SUM(MONTH_4) AS MONTH_4
						  ,SUM(MONTH_5) AS MONTH_5
						  ,SUM(MONTH_6) AS MONTH_6
						  ,SUM(MONTH_7) AS MONTH_7
						  ,SUM(MONTH_8) AS MONTH_8
						  ,SUM(MONTH_9) AS MONTH_9
						  ,SUM(MONTH_10) AS MONTH_10
						  ,SUM(MONTH_11) AS MONTH_11
						  ,SUM(MONTH_12) AS MONTH_12
						  ,SUM(CONVERT(INT,REMARK))   AS TABLE_OF_ORGANIZATION
						  ,@CompCode AS COMP_CODE
					FROM TEMP_TABLE) BBB ON BBB.COMP_CODE = AAA.COMP_CODE
		--ORDER BY BBB.GUBUN_NM
	END
	</select>
</mapper>