<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="eis120skrvServiceImpl">
	<select id="eis120skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
		/* eis120skrvServiceImpl.selectList */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08)    /* 법인코드  */
		          , @DivCode     NVARCHAR(08)    /* 사업장코드  */
		          , @BasisYear   NVARCHAR(100)   /* 기준년도 */
		          , @CustomCode  NVARCHAR(08)    /* 거래처코드 */
		          , @CustomName  NVARCHAR(100)   /* 거래처명 */
		          , @ItemCode    NVARCHAR(20)    /* 품목코드 */
		          , @ItemName    NVARCHAR(200)   /* 품목명 */
		          , @ProjectNo   NVARCHAR(20)    /* 프로젝트 */
		          , @ProjectNm   NVARCHAR(40)    /* 프로젝트명 */
		          , @UserId      NVARCHAR(100)   /* 사용자ID */
		          , @LangType    NVARCHAR(2)     /* 언어구분 */
		          , @RefItem     NVARCHAR(01)
		          , @CUSTOM_MIDDLE_DIV    NVARCHAR(10)
				  , @AMOUNT_UNIT	INT
				  , @BasisYYYYMMFr   NVARCHAR(6)   /* 기준년월fr */
				  , @BasisYYYYMMTo   NVARCHAR(6)   /* 기준년월to*/
		    SET @CompCode   = #{S_COMP_CODE}
		    SET @DivCode    = #{DIV_CODE}
		    SET @BasisYear  = #{BASIS_YEAR}
		    SET @CustomCode = #{CUSTOM_CODE}
		    SET @CustomName = #{CUSTOM_NAME}
		    SET @ItemCode   = ''
		    SET @ItemName   = ''
		    SET @ProjectNo  = ''
		    SET @ProjectNm  = ''
		    SET @UserId     = #{USER_ID}
		    SET @LangType   = #{S_LANG_CODE}
			SET @CUSTOM_MIDDLE_DIV  = #{CUSTOM_MIDDLE_DIV}
			SET @AMOUNT_UNIT	= ISNULL(@AMOUNT_UNIT, 1000000)
			SET @BasisYyyyMmFr = #{BASIS_YYYYMM_FR}
			SET @BasisYyyyMmTo = #{BASIS_YYYYMM_TO}
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		     FROM BSA300T WITH (NOLOCK)
		    WHERE USER_ID = @UserId ;

		    SET @RefItem = ISNULL(@RefItem, N'0') ;

			WITH TEMP_TABLE AS ( SELECT 1		  AS GUBUN
											   ,@CompCode  AS COMP_CODE
											   ,@DivCode	  AS DIV_CODE
 										UNION ALL
										SELECT GUBUN + 1  AS GUBUN
											   ,@CompCode  AS COMP_CODE
											   ,@DivCode	  AS DIV_CODE
									    FROM TEMP_TABLE
									    WHERE GUBUN <![CDATA[<=]]>  4 )
				,PLAN_Q_TABLE AS (SELECT A.COMP_CODE
								 , A.DIV_CODE
								 , '1' AS GUBUN --계획
								 , A.DEPT_CODE
								 , A.PLAN_YEAR

							-- , @BasisYear AS SALE_YEAR
								, SUM(CASE WHEN ISNULL(A.MOD_PLAN_AMT1 ,0)    <![CDATA[<>]]>  0 THEN ISNULL(A.MOD_PLAN_AMT1 ,0) ELSE ISNULL(A.PLAN_AMT1,0) END) AS MONTH_1
								, SUM(CASE WHEN ISNULL(A.MOD_PLAN_AMT2 ,0)    <![CDATA[<>]]>  0 THEN ISNULL(A.MOD_PLAN_AMT2 ,0) ELSE ISNULL(A.PLAN_AMT2,0) END) AS MONTH_2
								, SUM(CASE WHEN ISNULL(A.MOD_PLAN_AMT3 ,0)    <![CDATA[<>]]>  0 THEN ISNULL(A.MOD_PLAN_AMT3 ,0) ELSE ISNULL(A.PLAN_AMT3,0) END) AS MONTH_3
								, SUM(CASE WHEN ISNULL(A.MOD_PLAN_AMT4 ,0)    <![CDATA[<>]]>  0 THEN ISNULL(A.MOD_PLAN_AMT4 ,0) ELSE ISNULL(A.PLAN_AMT4,0) END) AS MONTH_4
								, SUM(CASE WHEN ISNULL(A.MOD_PLAN_AMT5 ,0)    <![CDATA[<>]]>  0 THEN ISNULL(A.MOD_PLAN_AMT5 ,0) ELSE ISNULL(A.PLAN_AMT5,0) END) AS MONTH_5
								, SUM(CASE WHEN ISNULL(A.MOD_PLAN_AMT6 ,0)    <![CDATA[<>]]>  0 THEN ISNULL(A.MOD_PLAN_AMT6 ,0) ELSE ISNULL(A.PLAN_AMT6,0) END) AS MONTH_6
								, SUM(CASE WHEN ISNULL(A.MOD_PLAN_AMT7 ,0)    <![CDATA[<>]]>  0 THEN ISNULL(A.MOD_PLAN_AMT7 ,0) ELSE ISNULL(A.PLAN_AMT7,0) END) AS MONTH_7
								, SUM(CASE WHEN ISNULL(A.MOD_PLAN_AMT8 ,0)    <![CDATA[<>]]>  0 THEN ISNULL(A.MOD_PLAN_AMT8 ,0) ELSE ISNULL(A.PLAN_AMT8,0) END) AS MONTH_8
								, SUM(CASE WHEN ISNULL(A.MOD_PLAN_AMT9 ,0)    <![CDATA[<>]]>  0 THEN ISNULL(A.MOD_PLAN_AMT9 ,0) ELSE ISNULL(A.PLAN_AMT9,0) END) AS MONTH_9
								, SUM(CASE WHEN ISNULL(A.MOD_PLAN_AMT10 ,0)   <![CDATA[<>]]>  0 THEN ISNULL(A.MOD_PLAN_AMT10 ,0) ELSE ISNULL(A.PLAN_AMT10,0) END) AS MONTH_10
								, SUM(CASE WHEN ISNULL(A.MOD_PLAN_AMT11 ,0)   <![CDATA[<>]]>  0 THEN ISNULL(A.MOD_PLAN_AMT11 ,0) ELSE ISNULL(A.PLAN_AMT11,0) END) AS MONTH_11
								, SUM(CASE WHEN ISNULL(A.MOD_PLAN_AMT12 ,0)   <![CDATA[<>]]>  0 THEN ISNULL(A.MOD_PLAN_AMT12 ,0) ELSE ISNULL(A.PLAN_AMT12,0) END) AS MONTH_12

							FROM S_SSP100T_KD A
								LEFT  JOIN  BCM100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE
																	AND A.PLAN_TYPE2_CODE2 = B.CUSTOM_CODE
																	AND B.USE_YN = 'Y'
																	--AND B.CUSTOM_TYPE IN ('1','3')
								LEFT JOIN BPR200T C WITH (NOLOCK) ON C.COMP_CODE = A.COMP_CODE
																AND C.DIV_CODE  = A.DIV_CODE
																AND C.ITEM_CODE = A.PLAN_TYPE2_CODE
							WHERE A.COMP_CODE = @CompCode
							AND A.DIV_CODE    = @DivCode
						--	AND A.PLAN_YEAR  = '2020'
							AND A.PLAN_TYPE2 = '2'
							AND A.MONEY_UNIT = 'KRW'

							GROUP BY A.COMP_CODE
								   , A.DIV_CODE
								   , A.DEPT_CODE
								   , A.PLAN_YEAR
					 )

					SELECT A.COMP_CODE
						  , A.DIV_CODE
						  , A.GUBUN
						  , CASE WHEN A.GUBUN = '1' THEN '계획'
								 WHEN A.GUBUN = '2' THEN '출고'
								 WHEN A.GUBUN = '3' THEN '달성율(%)'
								 WHEN A.GUBUN = '4' THEN '매출'
								 ELSE '달성율(%)'
						    END									AS GUBUN_NM
						  , @BasisYear							AS SALE_YEAR
						  , CASE WHEN A.GUBUN = '3' THEN CASE WHEN B.SALE_AMT != 0
															  THEN C.SALE_AMT / B.SALE_AMT  * 100
															  ELSE 0
														 END
								 WHEN A.GUBUN = '5' THEN CASE WHEN B.SALE_AMT != 0
															  THEN D.SALE_AMT / B.SALE_AMT  * 100
															  ELSE 0
													     END
								 ELSE A1.SALE_AMT
							END															AS SALE_AMT
						    , CASE WHEN A.GUBUN = '3' THEN CASE WHEN B.DEV_AMT != 0
															    THEN C.DEV_AMT / B.DEV_AMT  * 100
															    ELSE 0
														 END
								  WHEN A.GUBUN = '5' THEN CASE WHEN B.DEV_AMT != 0
															   THEN D.DEV_AMT / B.DEV_AMT  * 100
															   ELSE 0
													     END
								  ELSE A1.DEV_AMT
							   END														  AS DEV_AMT
						     , CASE WHEN A.GUBUN = '3' THEN CASE WHEN B.TRADE_AMT != 0
															    THEN C.TRADE_AMT / B.TRADE_AMT  * 100
															    ELSE 0
														 END
								   WHEN A.GUBUN = '5' THEN CASE WHEN B.TRADE_AMT != 0
															    THEN D.TRADE_AMT / B.TRADE_AMT  * 100
															    ELSE 0
													     END
								 ELSE A1.TRADE_AMT
								END														 AS TRADE_AMT
							 , CASE WHEN A.GUBUN = '3' THEN CASE WHEN B.TOT_AMT != 0
															    THEN C.TOT_AMT / B.TOT_AMT  * 100
															    ELSE 0
														 END
								   WHEN A.GUBUN = '5' THEN CASE WHEN B.TOT_AMT != 0
															    THEN D.TOT_AMT / B.TOT_AMT  * 100
															    ELSE 0
													     END
								 ELSE A1.TOT_AMT
								END														 AS TOT_AMT
					FROM TEMP_TABLE A LEFT JOIN
					(SELECT     AA.COMP_CODE
							  , AA.DIV_CODE
							  , '1' AS GUBUN --계획
							  , '' AS SALE_YEAR
							  ,SUM(CASE WHEN AA.DEPT_CODE = '1' THEN PLAN_Q ELSE 0 END) AS SALE_AMT
							  ,SUM(CASE WHEN AA.DEPT_CODE = '2' THEN PLAN_Q ELSE 0 END) AS DEV_AMT
							  ,SUM(CASE WHEN AA.DEPT_CODE = '3' THEN PLAN_Q ELSE 0 END) AS TRADE_AMT
							  ,SUM(CASE WHEN AA.DEPT_CODE = '1' THEN PLAN_Q ELSE 0 END) +
							   SUM(CASE WHEN AA.DEPT_CODE = '2' THEN PLAN_Q ELSE 0 END) +
							   SUM(CASE WHEN AA.DEPT_CODE = '3' THEN PLAN_Q ELSE 0 END)  AS TOT_AMT
								FROM
								(	SELECT   COMP_CODE
											, DIV_CODE
											, SUM(PLAN_Q) AS PLAN_Q
											, PLAN_YEAR
											, PLAN_MONTH
											, DEPT_CODE
									FROM PLAN_Q_TABLE A

									UNPIVOT (PLAN_Q FOR PLAN_MONTH IN (   A.MONTH_1
																		, A.MONTH_2
																		, A.MONTH_3
																		, A.MONTH_4
																		, A.MONTH_5
																		, A.MONTH_6
																		, A.MONTH_7
																		, A.MONTH_8
																		, A.MONTH_9
																		, A.MONTH_10
																		, A.MONTH_11
																		, A.MONTH_12
																)) AS UNPVT
																WHERE PLAN_YEAR + REPLICATE('0',2-LEN(CAST(REPLACE(PLAN_MONTH,'MONTH_','') AS NVARCHAR)) ) + CAST(REPLACE(PLAN_MONTH,'MONTH_','') AS NVARCHAR) BETWEEN  @BasisYyyyMmFr  AND @BasisYyyyMmTo
																GROUP BY COMP_CODE
																		,DIV_CODE
																		,PLAN_YEAR
																		,PLAN_MONTH
																		,DEPT_CODE
							 ) AA
							 GROUP  BY AA.COMP_CODE
									 , AA.DIV_CODE
				    UNION ALL

					SELECT A.COMP_CODE
						  ,A.DIV_CODE
						  ,'2' AS GUBUN
						  ,@BasisYear AS SALE_YEAR
						  ,SUM(CASE WHEN A.SALE_TYPE = '40'			  THEN 0   -- 해외
									WHEN B.TEMPC_01 = '2'             THEN 0   -- 개발
									ELSE ISNULL(A.INOUT_I, 0)                  -- 국내
						   END )												AS SALE_AMT
						  ,SUM(CASE WHEN A.SALE_TYPE = '40'           THEN 0   -- 해외
									WHEN B.TEMPC_01 = '2'             THEN ISNULL(A.INOUT_I, 0)   -- 개발
									ELSE 0										-- 국내
						   END )												AS DEV_AMT
						  ,SUM(CASE WHEN A.SALE_TYPE = '40'           THEN ISNULL(A.INOUT_I, 0)   -- 해외
									WHEN B.TEMPC_01 = '2'             THEN 0   -- 개발
									ELSE 0										-- 국내
						   END )												AS TRADE_AMT
						  ,SUM(ISNULL(A.INOUT_I, 0))							AS TOT_AMT
						FROM BTR100T A WITH (NOLOCK)
						    LEFT JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
															 AND B.DIV_CODE  = A.DIV_CODE
															 AND B.ITEM_CODE = A.ITEM_CODE
						WHERE A.COMP_CODE		 =@CompCode
						AND A.DIV_CODE			 =@DivCode
						AND A.INOUT_TYPE		 ='2'
						AND A.CREATE_LOC		 ='1'
						AND A.INOUT_CODE_TYPE	 ='4'
						AND LEFT(A.INOUT_DATE,6) BETWEEN @BasisYyyyMmFr AND @BasisYyyyMmTo
						GROUP BY A.COMP_CODE, A.DIV_CODE

					 UNION ALL

					 SELECT A.COMP_CODE
						  ,A.DIV_CODE
						  ,'4' AS GUBUN
						  ,@BasisYear AS SALE_YEAR
						  ,SUM(CASE WHEN A.NATION_CODE = '2'		  THEN 0   -- 해외
									WHEN B.TEMPC_01 = '2'             THEN 0   -- 개발
									ELSE ISNULL(A.SALE_LOC_AMT_I, 0)                  -- 국내
						   END )												AS SALE_AMT
						  ,SUM(CASE WHEN A.NATION_CODE = '2'		  THEN 0   -- 해외
									WHEN B.TEMPC_01 = '2'             THEN ISNULL(A.SALE_LOC_AMT_I, 0)   -- 개발
									ELSE 0                  -- 국내
						   END )												AS DEV_AMT
						  ,SUM(CASE WHEN A.NATION_CODE = '2'		  THEN ISNULL(A.SALE_LOC_AMT_I, 0)   -- 해외
									WHEN B.TEMPC_01 = '2'             THEN 0   -- 개발
									ELSE 0                  -- 국내
						   END )												AS TRADE_AMT
						  ,SUM(ISNULL(A.SALE_LOC_AMT_I, 0))					    AS TOT_AMT
						FROM SALES_V A WITH (NOLOCK)
						    LEFT JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
															 AND B.DIV_CODE  = A.DIV_CODE
															 AND B.ITEM_CODE = A.ITEM_CODE
						WHERE A.COMP_CODE		 =@CompCode
						AND A.DIV_CODE			 =@DivCode
						AND LEFT(A.SALE_DATE,6)  BETWEEN @BasisYyyyMmFr AND @BasisYyyyMmTo
						GROUP BY A.COMP_CODE, A.DIV_CODE
					) A1								ON A1.COMP_CODE = A.COMP_CODE
													   AND A1.DIV_CODE  = A.DIV_CODE
													   AND A1.GUBUN     = A.GUBUN
					LEFT JOIN																					--AS B 계획 데이터
					(SELECT AA.COMP_CODE
							  ,AA.DIV_CODE
							  , '1' AS GUBUN --계획
							  , '' AS SALE_YEAR
							  ,SUM(CASE WHEN AA.DEPT_CODE = '1' THEN PLAN_Q ELSE 0 END) AS SALE_AMT
							  ,SUM(CASE WHEN AA.DEPT_CODE = '2' THEN PLAN_Q ELSE 0 END) AS DEV_AMT
							  ,SUM(CASE WHEN AA.DEPT_CODE = '3' THEN PLAN_Q ELSE 0 END) AS TRADE_AMT
							  ,SUM(CASE WHEN AA.DEPT_CODE = '1' THEN PLAN_Q ELSE 0 END) +
							   SUM(CASE WHEN AA.DEPT_CODE = '2' THEN PLAN_Q ELSE 0 END) +
							   SUM(CASE WHEN AA.DEPT_CODE = '3' THEN PLAN_Q ELSE 0 END)  AS TOT_AMT
						FROM
						(	SELECT   COMP_CODE
									, DIV_CODE
									, SUM(PLAN_Q) AS PLAN_Q
									, PLAN_YEAR
									, PLAN_MONTH
									, DEPT_CODE
							FROM PLAN_Q_TABLE A

							UNPIVOT (PLAN_Q FOR PLAN_MONTH IN (   A.MONTH_1
																, A.MONTH_2
																, A.MONTH_3
																, A.MONTH_4
																, A.MONTH_5
																, A.MONTH_6
																, A.MONTH_7
																, A.MONTH_8
																, A.MONTH_9
																, A.MONTH_10
																, A.MONTH_11
																, A.MONTH_12
														)) AS UNPVT
														WHERE PLAN_YEAR + REPLICATE('0',2-LEN(CAST(REPLACE(PLAN_MONTH,'MONTH_','') AS NVARCHAR)) ) + CAST(REPLACE(PLAN_MONTH,'MONTH_','') AS NVARCHAR) BETWEEN  @BasisYyyyMmFr  AND @BasisYyyyMmTo
														GROUP BY COMP_CODE
																,DIV_CODE
																,PLAN_YEAR
																,PLAN_MONTH
																,DEPT_CODE
					 ) AA
					 GROUP  BY AA.COMP_CODE
							 , AA.DIV_CODE
					) B							ON B.COMP_CODE = A.COMP_CODE
											   AND B.DIV_CODE  = A.DIV_CODE
					LEFT JOIN																				--AS C 출고 데이터
					( SELECT A.COMP_CODE
						  ,A.DIV_CODE
						  ,'2' AS GUBUN
						  ,@BasisYear AS SALE_YEAR
						  ,SUM(CASE WHEN A.SALE_TYPE = '40'			  THEN 0   -- 해외
									WHEN B.TEMPC_01 = '2'             THEN 0   -- 개발
									ELSE ISNULL(A.INOUT_I, 0)                  -- 국내
						   END )												AS SALE_AMT
						  ,SUM(CASE WHEN A.SALE_TYPE = '40'           THEN 0   -- 해외
									WHEN B.TEMPC_01 = '2'             THEN ISNULL(A.INOUT_I, 0)   -- 개발
									ELSE 0										-- 국내
						   END )												AS DEV_AMT
						  ,SUM(CASE WHEN A.SALE_TYPE = '40'           THEN ISNULL(A.INOUT_I, 0)   -- 해외
									WHEN B.TEMPC_01 = '2'             THEN 0   -- 개발
									ELSE 0										-- 국내
						   END )												AS TRADE_AMT
						  ,SUM(ISNULL(A.INOUT_I, 0))							AS TOT_AMT
						FROM BTR100T A WITH (NOLOCK)
						    LEFT JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
															 AND B.DIV_CODE  = A.DIV_CODE
															 AND B.ITEM_CODE = A.ITEM_CODE
						WHERE A.COMP_CODE		 =@CompCode
						AND A.DIV_CODE			 =@DivCode
						AND A.INOUT_TYPE		 ='2'
						AND A.CREATE_LOC		 ='1'
						AND A.INOUT_CODE_TYPE	 ='4'
						AND LEFT(A.INOUT_DATE,6) BETWEEN @BasisYyyyMmFr AND @BasisYyyyMmTo
						GROUP BY A.COMP_CODE, A.DIV_CODE ) C  ON C.COMP_CODE = A.COMP_CODE
															 AND C.DIV_CODE  = A.DIV_CODE

					LEFT JOIN																			--AS D 매출 데이터
					(SELECT A.COMP_CODE
						  ,A.DIV_CODE
						  ,'4' AS GUBUN
						  ,@BasisYear AS SALE_YEAR
						  ,SUM(CASE WHEN A.NATION_CODE = '2'		  THEN 0   -- 해외
									WHEN B.TEMPC_01 = '2'             THEN 0   -- 개발
									ELSE ISNULL(A.SALE_LOC_AMT_I, 0)                  -- 국내
						   END )												AS SALE_AMT
						  ,SUM(CASE WHEN A.NATION_CODE = '2'		  THEN 0   -- 해외
									WHEN B.TEMPC_01 = '2'             THEN ISNULL(A.SALE_LOC_AMT_I, 0)   -- 개발
									ELSE 0                  -- 국내
						   END )												AS DEV_AMT
						  ,SUM(CASE WHEN A.NATION_CODE = '2'		  THEN ISNULL(A.SALE_LOC_AMT_I, 0)   -- 해외
									WHEN B.TEMPC_01 = '2'             THEN 0   -- 개발
									ELSE 0                  -- 국내
						   END )												AS TRADE_AMT
						  ,SUM(ISNULL(A.SALE_LOC_AMT_I, 0))					    AS TOT_AMT
						FROM SALES_V A WITH (NOLOCK)
						    LEFT JOIN BPR200T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
															 AND B.DIV_CODE  = A.DIV_CODE
															 AND B.ITEM_CODE = A.ITEM_CODE
						WHERE A.COMP_CODE		 =@CompCode
						AND A.DIV_CODE			 =@DivCode
						AND LEFT(A.SALE_DATE,6)  BETWEEN @BasisYyyyMmFr AND @BasisYyyyMmTo
						GROUP BY A.COMP_CODE, A.DIV_CODE) D ON D.COMP_CODE  = A.COMP_CODE
														   AND D.DIV_CODE   = A.DIV_CODE
		END
	</select>
	<select id="eis120skrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		/* eis120skrvServiceImpl.selectList2 */
						SELECT   DEPT_CODE
								,PLAN_AMT
								,INOUT_AMT
								,SALE_AMT
								,TOT_AMT
						FROM EIS_TEST
	</select>
</mapper>