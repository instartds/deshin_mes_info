<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_hum920skr_ygService">
	<select id="s_hum920skr_ygService.checkLicenseTab" parameterType="Map" resultType="rMap">	
		--hum920skr.Chum920skr[fnHum920nQ] QUERY 04
	
		SELECT  MAX(RE_ENTRE)    AS RE_ENTRE
             ,  MAX(LICENSE_TAB) AS LICENSE_TAB
        FROM    (
                SELECT  CASE WHEN SUB_CODE = '20' THEN UPPER(REF_CODE1) ELSE '' END    AS RE_ENTRE     --버스_재입사관리 사용여부
                      , CASE WHEN SUB_CODE = '21' THEN UPPER(REF_CODE1) ELSE '' END    AS LICENSE_TAB  --버스_면허기타 Tab 사용여부
                FROM    BSA100T WITH (NOLOCK)
                WHERE   COMP_CODE   = #{S_COMP_CODE}
                AND     MAIN_CODE   = N'H175'
                AND     SUB_CODE   IN ('20', '21')
                ) T
	</select>
	<select id="s_hum920skr_ygService.checkOnlyHuman" parameterType="Map" resultType="rMap">	
		--UHbs01Krv.CHbs00ukr[fnGetMinor] QUERY05
		SELECT  TOP 1 SUB_CODE
            FROM    BSA100T WITH (NOLOCK)
            WHERE   COMP_CODE   = #{S_COMP_CODE}
            AND     MAIN_CODE   = N'H183'
            AND     SUB_CODE    = #{S_USER_ID}
	</select>
	
	<select id="s_hum920skr_ygService.checkRejoiningYn" parameterType="Map" resultType="rMap">	
		--hum920skr.Chum920skr[fnHum920nQ] Query01"
		    SELECT ISNULL(REF_CODE1, '') AS REF_CODE1
		    FROM   BSA100T WITH (NOLOCK)
		    WHERE  COMP_CODE = #{S_COMP_CODE}
		    AND    MAIN_CODE = N'H175'
		    AND    SUB_CODE  = N'20'
	</select>
	
	<select id="s_hum920skr_ygService.selectList" parameterType="Map" resultType="rMap">		
		
	 --hum920skr.Chum920skr[fnHum920nQ] QUERY 02
	    BEGIN
	        SET NOCOUNT ON
	        SET ARITHABORT ON
	    
	    --  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
	        DECLARE         @DateFormat         NVARCHAR(10)
	    
	        SELECT TOP 1 @DateFormat = M1.CODE_NAME
	        FROM   BSA100T M1 WITH (NOLOCK)
	        WHERE  M1.COMP_CODE = #{S_COMP_CODE}
	        AND    M1.MAIN_CODE = N'B044'
	        AND    M1.REF_CODE1 = N'Y'
	    
	        SET @DateFormat = ISNULL(@DateFormat, 'YYYY/MM/DD')
	    
            SELECT '1'           AS GUBUN
                 , A.DIV_CODE    AS DIV_CODE
                 --, '상세정보'    AS PAGE_JUMP 
                 , A.DEPT_NAME   AS DEPT_NAME
                 , A.POST_CODE   AS POST_CODE
                 , A.NAME        AS NAME
                 , A.PERSON_NUMB AS PERSON_NUMB
                 --, '사진보기'    AS PIC_POP 

                 
                 , CASE WHEN ISNULL(A.JOIN_DATE, '') = '00000000' THEN ''
                         ELSE REPLACE(
                              REPLACE(
                              REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.JOIN_DATE, 1, 4))
                                                 , 'MM'  , SUBSTRING(A.JOIN_DATE, 5, 2))
                                                 , 'DD'  , SUBSTRING(A.JOIN_DATE, 7, 2))
                    END                                   AS JOIN_DATE
                 
                 , A.ABIL_CODE   AS ABIL_CODE
                 , unilite.fnCipherDecrypt(A.REPRE_NUM, 'R') AS REPRE_NUMB        -- 주민번호
                  , unilite.fnCipherDecrypt(A.REPRE_NUM, 'A') AS REPRE_NUMB_EXPOS      -- 주민번호
                 , A.JOB_CODE    AS JOB_CODE
                 , A.TELEPHON    AS TELEPHON
                 , A.PHONE_NO    AS PHONE_NO 
                 , A.EMAIL_ADDR  AS EMAIL_ADDR
                 , '(' + SUBSTRING(A.ZIP_CODE,1,3) 
                 + '-' + SUBSTRING(A.ZIP_CODE,4,3) + ')' 
                 + A.KOR_ADDR    AS KOR_ADDR
                 , CASE WHEN A.WEDDING_DATE IS NULL 
                        THEN ''             
                        WHEN A.WEDDING_DATE ='' 
                        THEN ''             
                        ELSE REPLACE(
                              REPLACE(
                              REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.WEDDING_DATE, 1, 4))
                                                 , 'MM'  , SUBSTRING(A.WEDDING_DATE, 5, 2))
                                                 , 'DD'  , SUBSTRING(A.WEDDING_DATE, 7, 2))
                    END AS WEDDING_DATE
                 , CASE WHEN A.BIRTH_DATE IS NULL 
                        THEN ''             
                        WHEN A.BIRTH_DATE = '' 
                        THEN ''             
                        ELSE CASE WHEN A.SOLAR_YN = 'Y' 
                                  THEN REPLACE(
                                      REPLACE(
                                      REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.BIRTH_DATE, 1, 4))
                                                         , 'MM'  , SUBSTRING(A.BIRTH_DATE, 5, 2))
                                                         , 'DD'  , SUBSTRING(A.BIRTH_DATE, 7, 2)) 
                                          + '(+)'                 
                                   ELSE  REPLACE(
                                         REPLACE(
                                         REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.BIRTH_DATE, 1, 4))
                                                            , 'MM'  , SUBSTRING(A.BIRTH_DATE, 5, 2))
                                                            , 'DD'  , SUBSTRING(A.BIRTH_DATE, 7, 2)) 
                                  + '(-)'             
                             END        
                    END AS BIRTH_DATE
                  , CASE WHEN A.RETR_DATE = '00000000' 
                         THEN ''             
                         WHEN A.RETR_DATE IS NULL 
                         THEN ''             
                         WHEN A.RETR_DATE ='' 
                         THEN ''             
                         ELSE REPLACE(
                              REPLACE(
                              REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.RETR_DATE, 1, 4))
                                                 , 'MM'  , SUBSTRING(A.RETR_DATE, 5, 2))
                                                 , 'DD'  , SUBSTRING(A.RETR_DATE, 7, 2))
                     END AS RETR_DATE 
              FROM      HUM100T A WITH (NOLOCK)
              LEFT JOIN BOR120T B WITH (NOLOCK) ON B.COMP_CODE = A.COMP_CODE
                                               AND B.DIV_CODE  = A.DIV_CODE
             WHERE A.COMP_CODE = #{S_COMP_CODE}
               <!-- <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">                 
                   AND A.DIV_CODE =
                        <foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
                         #{item}
                        </foreach>                                  
                </if> -->
                
                <if test="@foren.Ognl@isNotEmpty(DIV_CODE)"> 
                    AND A.DIV_CODE = #{DIV_CODE}
                </if>
                
                <if test="@foren.Ognl@isNotEmpty(ANN_FR_DATE)">
                   AND A.JOIN_DATE      &gt;= #{ANN_FR_DATE}            -- 입사일 FR
                </if>
                <if test="@foren.Ognl@isNotEmpty(ANN_TO_DATE)">
                   AND A.JOIN_DATE      &lt;= #{ANN_TO_DATE}            -- 입사일 TO
                </if>
                
                <if test="@foren.Ognl@isNotEmpty(DEPTS)">
                  AND A.DEPT_CODE    IN
                    <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
                         #{item}
                 </foreach>
                </if>

                <if test="RDO_RETIRE == 2">
                   AND A.RETR_DATE          = '00000000'              -- 퇴사자미포함
                </if>
                
                <if test="RDO_PAYGUBUN != 1">
                   AND A.PAY_GUBUN          != '2'              -- 비정규직포함
                </if>
                
                <if test="@foren.Ognl@isNotEmpty(NAME)">
                   AND A.NAME   LIKE + '%' +  #{NAME} + '%'
                </if>
                
                <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
                   AND A.PERSON_NUMB  = #{PERSON_NUMB}
                </if>
                
               
               ORDER BY A.DIV_CODE, A.DEPT_NAME, A.POST_CODE, A.PERSON_NUMB
                
        SET NOCOUNT OFF
        SET ARITHABORT OFF
    END
	</select>
	
	<select id="s_hum920skr_ygService.selectDataList" parameterType="Map" resultType="rMap">			
	
		/* hum920skr.Chum920skr[fnHum920nQ] */
    	SELECT (SELECT X.DIV_NAME
              FROM BOR120T X
             WHERE X.COMP_CODE = H.COMP_CODE
               AND X.DIV_CODE = H.DIV_CODE) DIV_NAME
         , H.DEPT_NAME
         , MAX(M1.CODE_NAME) AS POST_NAME 
         , '1' AS PERSON_CNT
         , H.NAME 
         , H.PERSON_NUMB 
         , unilite.fnCipherDecrypt(H.REPRE_NUM, 'A') AS REPRE_NUM
         , CASE WHEN H.ORI_JOIN_DATE='00000000' THEN ''
                ELSE uniLITE.fnGetUserDate(H.COMP_CODE, H.ORI_JOIN_DATE)
                END ORI_JOIN_DATE 
         , JOIN_DATE = uniLITE.fnGetUserDate(H.COMP_CODE, H.JOIN_DATE) 
         , CASE WHEN H.RETR_DATE='00000000' THEN ''
                ELSE uniLITE.fnGetUserDate(H.COMP_CODE, H.RETR_DATE)
                END              AS RETR_DATE 
         , unilite.fnHumanDateDiff(ISNULL(H.ORI_JOIN_DATE,'00000000'),CASE WHEN H.RETR_DATE != '00000000' THEN H.RETR_DATE ELSE CONVERT(NVARCHAR(8),GETDATE(),112) END ,'LONG_TOT_ALL') AS ORI_YEAR_DIFF 
         , unilite.fnHumanDateDiff(H.JOIN_DATE,CASE WHEN H.RETR_DATE != '00000000' THEN H.RETR_DATE ELSE CONVERT(NVARCHAR(8),GETDATE(),112) END,'LONG_TOT_ALL')                         AS YEAR_DIFF 
         , MAX(M2.CODE_NAME)                     AS PAY_GUBUN 
         , MAX(M3.CODE_NAME)                     AS EMPLOY_TYPE
         , MAX(M4.CODE_NAME)                     AS ABIL_CODE 
         , MAX(M5.CODE_NAME)                     AS JOB_CODE
         , MAX(M6.CODE_NAME) + MAX(M7.CODE_NAME) AS GRADE 
         , CASE WHEN H.HIRE_INSUR_TYPE ='Y' THEN uniLITE.fnGetTxt('H0088')
                ELSE uniLITE.fnGetTxt('H0089')
                END            AS HIRE_INSUR_TYPE 
         , H.ANU_BASE_I 
         , H.ANU_INSUR_I 
         , H.MED_AVG_I 
         , H.MED_INSUR_I 
         , (CASE WHEN H.PAY_GRADE_01='' THEN ''
                 ELSE H.PAY_GRADE_01 + uniLITE.fnGetTxt('H0015')
                 END
         + ' '
         + CASE WHEN H.PAY_GRADE_02='' THEN ''
                ELSE H.PAY_GRADE_02 +uniLITE.fnGetTxt('H0090')
                END)           AS PAY_GRADE 
         , H.KOR_ADDR
         , H.TELEPHON
         , H.PHONE_NO
         , CASE WHEN H.BIRTH_DATE IS NULL THEN '' 
                WHEN H.BIRTH_DATE ='' THEN '' 
                ELSE CASE WHEN H.SOLAR_YN = 'Y' THEN uniLITE.fnGetUserDate(H.COMP_CODE, H.BIRTH_DATE) + '(+)' 
                          ELSE uniLITE.fnGetUserDate(H.COMP_CODE, H.BIRTH_DATE) + '(-)' 
                          END 
                END            AS BIRTH_DATE
         , CASE WHEN H.WEDDING_DATE IS NULL THEN '' 
                WHEN H.WEDDING_DATE ='' THEN '' 
                ELSE uniLITE.fnGetUserDate(H.COMP_CODE, H.WEDDING_DATE) 
                END            AS WEDDING_DATE 
         , H.EMAIL_ADDR 
         , C.COST_POOL_NAME    AS COST_POOL
         , MAX(M8.CODE_NAME)        AS AGENCY_NAME     /* 보훈구분 */ 
         , H1.AGENCY_GRADE     AS AGENCY_GRADE     /* 보훈등급 */
         , MAX(M9.CODE_NAME)        AS HITCH_NAME      /* 장애구분 */
         , H1.HITCH_GRADE      AS HITCH_GRADE     /* 장애등급 */
         , H1.HITCH_DATE       AS HITCH_DATE      /* 장애인 등록일 */
      FROM             HUM100T   H  WITH (NOLOCK)
            LEFT  JOIN CBM600T   C  WITH (NOLOCK) ON C.COMP_CODE         = H.COMP_CODE
                                                 AND C.COST_POOL_CODE    = H.COST_KIND
            LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE        = H.COMP_CODE
                                                 AND M1.SUB_CODE         = H.POST_CODE
                                                 AND M1.MAIN_CODE        = 'H005'
            LEFT  JOIN BSA100T   M2 WITH (NOLOCK) ON M2.COMP_CODE        = H.COMP_CODE
                                                 AND M2.SUB_CODE         = H.PAY_GUBUN
                                                 AND M2.MAIN_CODE        = 'H011'
            LEFT  JOIN BSA100T   M3 WITH (NOLOCK) ON M3.COMP_CODE        = H.COMP_CODE
                                                 AND M3.SUB_CODE         = H.EMPLOY_TYPE
                                                 AND M3.MAIN_CODE        = 'H024'
            LEFT  JOIN BSA100T   M4 WITH (NOLOCK) ON M4.COMP_CODE        = H.COMP_CODE
                                                 AND M4.SUB_CODE         = H.ABIL_CODE
                                                 AND M4.MAIN_CODE        = 'H006'
            LEFT  JOIN BSA100T   M5 WITH (NOLOCK) ON M5.COMP_CODE        = H.COMP_CODE
                                                 AND M5.SUB_CODE         = H.JOB_CODE
                                                 AND M5.MAIN_CODE        = 'H008'
            LEFT  JOIN BSA100T   M6 WITH (NOLOCK) ON M6.COMP_CODE        = H.COMP_CODE
                                                 AND M6.SUB_CODE         = H.SCHSHIP_CODE
                                                 AND M6.MAIN_CODE        = 'H009'
            LEFT  JOIN BSA100T   M7 WITH (NOLOCK) ON M7.COMP_CODE        = H.COMP_CODE
                                                 AND M7.SUB_CODE         = H.GRADU_TYPE
                                                 AND M7.MAIN_CODE        = 'H010'
            LEFT  JOIN HUM710T   H1 WITH (NOLOCK) ON H1.COMP_CODE        = H.COMP_CODE
                                                 AND H1.PERSON_NUMB      = H.PERSON_NUMB
            LEFT  JOIN BSA100T   M8 WITH (NOLOCK) ON M8.COMP_CODE        = H1.COMP_CODE
                                                 AND M8.SUB_CODE         = H1.AGENCY_KIND
                                                 AND M8.MAIN_CODE        = 'H084'
            LEFT  JOIN BSA100T   M9 WITH (NOLOCK) ON M9.COMP_CODE        = H1.COMP_CODE
                                                 AND M9.SUB_CODE         = H1.HITCH_KIND
                                                 AND M9.MAIN_CODE        = 'H085'

     WHERE H.COMP_CODE = #{S_COMP_CODE}
    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">					
       AND H.DIV_CODE IN
			<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
			 #{item}
			</foreach>									
    </if> 
    <if test="@foren.Ognl@isNotEmpty(DEPTS)">
	   AND  H.DEPT_CODE	 IN
		 <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
          		 #{item}
    	 </foreach>
	</if>
    <if test="@foren.Ognl@isNotEmpty(JOIN_DATE_FROM)">    AND H.JOIN_DATE &gt;= #{JOIN_DATE_FROM} </if>
    <if test="@foren.Ognl@isNotEmpty(JOIN_DATE_TO)">    AND H.JOIN_DATE &lt;= #{JOIN_DATE_TO} </if>
    <if test="@foren.Ognl@isNotEmpty(RETR_DATE_FROM)">    AND H.RETR_DATE &gt;= #{RETR_DATE_FROM} </if>
    <if test="@foren.Ognl@isNotEmpty(RETR_DATE_TO)">    AND H.RETR_DATE &lt;= #{RETR_DATE_TO} </if>
    <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">    AND H.PAY_GUBUN = #{PAY_GUBUN} </if>
    <if test="@foren.Ognl@isNotEmpty(EMPLOY_TYPE)">    AND H.EMPLOY_TYPE = #{EMPLOY_TYPE} </if>
    <if test="@foren.Ognl@isNotEmpty(POST_CODE)">   AND H.POST_CODE = #{POST_CODE} </if>
    <if test="@foren.Ognl@isNotEmpty(ABIL_CODE)">   AND H.ABIL_CODE = #{ABIL_CODE} </if>
    <if test="@foren.Ognl@isNotEmpty(SCHSHIP_CODE)">    AND H.SCHSHIP_CODE = #{SCHSHIP_CODE} </if>
    <if test="@foren.Ognl@isNotEmpty(GRADU_TYPE)">    AND H.GRADU_TYPE= #{GRADU_TYPE} </if>
    <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_01)">    AND H.PAY_GRADE_01 LIKE #{PAY_GRADE_01} + '%' </if>
    <if test="@foren.Ognl@isNotEmpty(PAY_GRADE_02)">    AND H.PAY_GRADE_02 LIKE #{PAY_GRADE_02} + '%' </if>
    <if test="@foren.Ognl@isNotEmpty(HIRE_INSUR_TYPE)">    AND H.HIRE_INSUR_TYPE= #{HIRE_INSUR_TYPE} </if>
    <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">    AND H.PERSON_NUMB= #{PERSON_NUMB} </if>
    
    <if test="RDO_TYPE == 1">
				AND H.RETR_DATE = '00000000' 
	</if>
    <if test="RDO_TYPE == 00000000">
				AND H.RETR_DATE &gt; #{RDO_TYPE}
	</if>
    
    <if test="@foren.Ognl@isNotEmpty(SEX_CODE)">	AND H.SEX_CODE = #{SEX_CODE} </if>
    <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN2)">   AND H.PAY_GUBUN2 = #{PAY_GUBUN2} </if>
    <if test="@foren.Ognl@isNotEmpty(COST_POOL)">    AND H.COST_KIND  = #{COST_POOL} </if>
    <if test="@foren.Ognl@isNotEmpty(AGENCY_KIND)">  AND H1.AGENCY_KIND  = #{AGENCY_KIND} </if>
    <if test="@foren.Ognl@isNotEmpty(HITCH_KIND)">   AND H1.HITCH_KIND  = #{HITCH_KIND} </if>
    
    <choose>
    	<when test="@foren.Ognl@isNotEmpty(startYear)">
    		<choose>
    			<when test="@foren.Ognl@isNotEmpty(startMonth)">
    				AND unilite.fnHumanDateDiff(H.JOIN_DATE,CASE WHEN H.RETR_DATE != '00000000' THEN H.RETR_DATE ELSE CONVERT(NVARCHAR(8),GETDATE(),112) END,'LONG_TOT_ALL') 
    				&gt;= RIGHT('00' + LTRIM(RTRIM(#{startYear})), '2') + '.' + RIGHT('00' + LTRIM(RTRIM(#{startMonth})), '2') + '.00'
    			</when>
    			<otherwise>
    				AND unilite.fnHumanDateDiff(H.JOIN_DATE,CASE WHEN H.RETR_DATE != '00000000' THEN H.RETR_DATE ELSE CONVERT(NVARCHAR(8),GETDATE(),112) END,'LONG_TOT_ALL') 
    				&gt;= RIGHT('00' + LTRIM(RTRIM(#{startYear})), '2') + '.00.00'
    			</otherwise>
    		</choose>
    	</when>
    	<otherwise>
    		<choose>
    			<when test="@foren.Ognl@isNotEmpty(startMonth)">
    				AND unilite.fnHumanDateDiff(H.JOIN_DATE,CASE WHEN H.RETR_DATE != '00000000' THEN H.RETR_DATE ELSE CONVERT(NVARCHAR(8),GETDATE(),112) END,'LONG_TOT_ALL') 
    				&gt;= '00.' + RIGHT('00' + LTRIM(RTRIM(#{startMonth})), '2') + '.00'
    			</when>
    			<otherwise>
    				AND unilite.fnHumanDateDiff(H.JOIN_DATE,CASE WHEN H.RETR_DATE != '00000000' THEN H.RETR_DATE ELSE CONVERT(NVARCHAR(8),GETDATE(),112) END,'LONG_TOT_ALL') 
    				&gt;= '00.' + RIGHT('00' + LTRIM(RTRIM(#{startMonth})), '2') + '.00'
    			</otherwise>
    		</choose>
    	</otherwise>
    </choose>
    
    <choose>
    	<when test="@foren.Ognl@isNotEmpty(endYear)">
    		<choose>
    			<when test="@foren.Ognl@isNotEmpty(endMonth)">
    				AND unilite.fnHumanDateDiff(H.JOIN_DATE,CASE WHEN H.RETR_DATE != '00000000' THEN H.RETR_DATE ELSE CONVERT(NVARCHAR(8),GETDATE(),112) END,'LONG_TOT_ALL') 
    				&lt;= RIGHT('00' + LTRIM(RTRIM(#{endYear})), '2') + '.' + RIGHT('00' + LTRIM(RTRIM(#{endMonth})), '2') + '.00'
    			</when>
    			<otherwise>
    				AND unilite.fnHumanDateDiff(H.JOIN_DATE,CASE WHEN H.RETR_DATE != '00000000' THEN H.RETR_DATE ELSE CONVERT(NVARCHAR(8),GETDATE(),112) END,'LONG_TOT_ALL') 
    				&lt;= RIGHT('00' + LTRIM(RTRIM(#{endYear})), '2') + '.00.00'
    			</otherwise>
    		</choose>
    	</when>
    	<otherwise>
    		<choose>
    			<when test="@foren.Ognl@isNotEmpty(startmonth)">
    				AND unilite.fnHumanDateDiff(H.JOIN_DATE,CASE WHEN H.RETR_DATE != '00000000' THEN H.RETR_DATE ELSE CONVERT(NVARCHAR(8),GETDATE(),112) END,'LONG_TOT_ALL') 
    				&lt;= '00.' + RIGHT('00' + LTRIM(RTRIM(#{endMonth})), '2') + '.00'
    			</when>
    		</choose>
    	</otherwise>
    </choose>
    
     GROUP BY H.DEPT_NAME,H.DIV_CODE,H.POST_CODE,H.PERSON_NUMB,H.ORI_JOIN_DATE,H.JOIN_DATE 
            , H.RETR_DATE,H.PAY_GUBUN,H.ABIL_CODE,H.JOB_CODE, H.SCHSHIP_CODE
            , H.GRADU_TYPE,H.HIRE_INSUR_TYPE,H.PENS_GRADE,H.MED_INSUR_I,H.PAY_GRADE_01,H.PAY_GRADE_02 ,H.TELEPHON 
            , H.PHONE_NO , H.KOR_ADDR, H.BIRTH_DATE, H.WEDDING_DATE, H.SOLAR_YN, H.DEPT_CODE
            , H.NAME, unilite.fnCipherDecrypt(H.REPRE_NUM, 'A'),H.EMPLOY_TYPE,H.EMAIL_ADDR, H.MED_AVG_I, H.COMP_CODE 
            , H.ANU_BASE_I, H.ANU_INSUR_I, C.COST_POOL_NAME, H1.AGENCY_GRADE,H1.HITCH_GRADE, H1.HITCH_DATE 
     ORDER BY H.DIV_CODE, H.DEPT_CODE, H.POST_CODE, H.JOIN_DATE, H.NAME, H.PERSON_NUMB 
	</select>
</mapper>