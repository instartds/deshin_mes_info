<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sof103ukrvServiceImpl">
	<insert id="sof103ukrvServiceImpl.insertExcelsof103ukrv" parameterType="Map">	   /* 엑셀insert */
		/*sof103ukrvServiceImpl.insertExcelsof103ukrv*/
		INSERT INTO SOF103UKRV_XLS (
		       _EXCEL_JOBID
		     , _EXCEL_ROWNUM
		     , _EXCEL_HAS_ERROR
		     , _EXCEL_ERROR_MSG
		     , COMP_CODE             /* 법인           */
		     , DIV_CODE              /* 사업장코드     */
		     , GROUP_SEQ             /* 그룹순번       */
		     , ORDER_DATE            /* 수주일         */
		     , CUSTOM_CODE           /* 거래처코드     */
		     , PAY_TERMS             /* 결제조건       */
		     , PAY_METHODE1          /* 대금결제방법   */
		     , TERMS_PRICE           /* 가격 조건      */
		     , MONEY_UNIT            /* 화폐단위       */
		     , OUT_DIV_CODE          /* 출고사업장     */
		     , INOUT_TYPE_DETAIL     /* 매출유형       */
		     , ITEM_CODE             /* 품목코드       */
		     , ORDER_UNIT            /* 수주단위       */
		     , TRANS_RATE            /* 입수           */
		     , ORDER_UNIT_Q          /* 단위수주수량   */
		     , ORDER_Q               /* 수주량         */
		<if test="@foren.Ognl@isNotEmpty(ORDER_P)">
		     , ORDER_P               /* 수주단가       */
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_O)">
		     , ORDER_O               /* 수주금액       */
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_TAX_O)">
		     , ORDER_TAX_O           /* 부가세금액     */
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_TOT_O)">
		     , ORDER_TOT_O           /* 수주총액       */
		</if>
		     , DVRY_DATE             /* 납기일자       */
		     , PO_NUM                /* 발주번호       */
		<if test="@foren.Ognl@isNotEmpty(PO_SEQ)">
		     , PO_SEQ                /* 발주순번       */
		</if>
		     , PROJECT_NO            /* 관리번호       */
		     , REMARK
			 , REMARK_INTER
		     , INSERT_DB_USER        /* 입력자         */
		     , INSERT_DB_TIME        /* 입력일         */
		     , UPDATE_DB_USER        /* 수정자         */
		     , UPDATE_DB_TIME        /* 수정일         */
		)
		SELECT #{_EXCEL_JOBID}
		     , #{_EXCEL_ROWNUM}
		     , #{_EXCEL_HAS_ERROR}
		     , #{_EXCEL_ERROR_MSG}
		     , #{S_COMP_CODE}           /* 법인           */
		     , #{DIV_CODE}              /* 사업장코드     */
		     , #{GROUP_SEQ}             /* 그룹순번       */
		     , #{ORDER_DATE}            /* 수주일         */
		     , #{CUSTOM_CODE}           /* 거래처코드     */
		     , #{PAY_TERMS}             /* 결제조건       */
		     , #{PAY_METHODE1}          /* 대금결제방법   */
		     , #{TERMS_PRICE}           /* 가격 조건      */
		     , #{MONEY_UNIT}            /* 화폐단위       */
		     , #{OUT_DIV_CODE}          /* 출고사업장     */
		     , #{INOUT_TYPE_DETAIL}     /* 매출유형       */
		     , #{ITEM_CODE}             /* 품목코드       */
		     , #{ORDER_UNIT}            /* 수주단위       */
		     , #{TRANS_RATE}            /* 입수           */
		     , ${ORDER_Q}*${TRANS_RATE} /* 단위수주수량   */
		     , #{ORDER_Q}               /* 수주량         */
		<if test="@foren.Ognl@isNotEmpty(ORDER_P)">
		     , #{ORDER_P}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_O)">
		     , #{ORDER_O}               /* 수주금액       */
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_TAX_O)">
		     , #{ORDER_TAX_O}           /* 부가세금액     */
		</if>
		<if test="@foren.Ognl@isNotEmpty(ORDER_TOT_O)">
		     , #{ORDER_TOT_O}           /* 수주총액       */
		</if>
		     , #{DVRY_DATE}             /* 납기일자       */
		     , #{PO_NUM}                /* 발주번호       */
		<if test="@foren.Ognl@isNotEmpty(PO_SEQ)">
		     , #{PO_SEQ}                /* 발주순번       */
		</if>
		     , #{PROJECT_NO}            /* 관리번호       */
		     , #{REMARK}
			 , #{REMARK_INTER}
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
	</insert>

	<select id="sof103ukrvServiceImpl.selectExcelUploadSheet" parameterType="Map" resultType="rMap">
		/* sof103ukrvServiceImpl.selectExcelUploadSheet */
		SELECT A._EXCEL_JOBID
		     , A._EXCEL_ROWNUM
		     , A._EXCEL_HAS_ERROR
		     , A._EXCEL_ERROR_MSG
		     --20191223 수정: 구분 A.ORDER_DATE, A.GROUP_SEQ 추가
		     , DENSE_RANK() OVER(ORDER BY A.CUSTOM_CODE, A.ORDER_DATE, A.GROUP_SEQ) AS CUST_NO
		     , RANK() OVER(PARTITION BY A.CUSTOM_CODE, A.ORDER_DATE, A.GROUP_SEQ ORDER BY A._EXCEL_ROWNUM ASC) AS CUST_SEQ
		     , A.DIV_CODE
		     , A.OUT_DIV_CODE
		     , A.ORDER_DATE
		     , A.CUSTOM_CODE
		     , A.CUSTOM_NAME
		     , A.PAY_TERMS
		     , A.PAY_METHODE1
		     , A.TERMS_PRICE
		     , A.INOUT_TYPE_DETAIL
		     , A.ITEM_CODE
		     , A.ITEM_NAME
		     , A.ORDER_UNIT
		     , A.TRANS_RATE
		     , A.ORDER_Q
		     , A.MONEY_UNIT
		     , A.ORDER_P
		     , A.ORDER_O
		     , A.ORDER_TAX_O
		     , A.ORDER_TOT_O
		     , A.DVRY_DATE
		     , A.PO_NUM
		     , A.PO_SEQ
		     , A.PROJECT_NO
		     , A.REMARK
			 , A.REMARK_INTER
		     , A.ORDER_PRSN
		     , A.NATION_INOUT
		     , A.ORDER_TYPE
		     , A.BILL_TYPE
		     , A.EXCHANGE_RATE
		     , A.TAX_INOUT
		     , B.WON_CALC_BAS
		  FROM       SOF103UKRV_XLS A WITH(NOLOCK)
		  LEFT  JOIN BCM100T        B WITH(NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                          AND B.CUSTOM_CODE = A.CUSTOM_CODE
		 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</select>

	<update id="excelValidate">
		/* sof103ukrvServiceImpl.excelValidate */
		/* 필요한 거래처, 품목정보 update - 오류체크 포함 */
		/* 1. 거래처 정보 UPDATE */
		IF EXISTS (SELECT TOP 1 1
		             FROM  SOF103UKRV_XLS A  WITH(NOLOCK)
		             INNER JOIN BCM100T   B1 WITH(NOLOCK) ON B1.COMP_CODE    = A.COMP_CODE
		                                                 AND B1.CUSTOM_CODE  = A.CUSTOM_CODE
		            WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		)
		    BEGIN
		        UPDATE A
		           SET A.CUSTOM_NAME  = B1.CUSTOM_NAME
		             , A.ORDER_PRSN   = S1.SUB_CODE
		             , A.NATION_INOUT = CASE WHEN S2.SUB_CODE = B1.NATION_CODE THEN '1'
		                                     ELSE '2'
		                                END
		             , A.ORDER_TYPE   = CASE WHEN S2.SUB_CODE = B1.NATION_CODE THEN '10'
		                                     ELSE '40'
		                                END
		             , A.BILL_TYPE    = CASE WHEN S2.SUB_CODE = B1.NATION_CODE THEN '10'
		                                     ELSE '60'
		                                END
		             , A.EXCHANGE_RATE= ISNULL(B2.BASE_EXCHG, 1)
		             , A.TAX_INOUT    = B1.TAX_TYPE
		          FROM       SOF103UKRV_XLS A  WITH(NOLOCK)
		          LEFT  JOIN BCM100T        B1 WITH(NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
		                                                   AND B1.CUSTOM_CODE = A.CUSTOM_CODE
		          LEFT  JOIN BCM510T        B2 WITH(NOLOCK) ON B2.COMP_CODE   = A.COMP_CODE
		                                                   AND B2.EXCHG_DIVI  = '2'
		                                                   AND B2.MONEY_UNIT  = A.MONEY_UNIT
		                                                   AND B2.AC_DATE     = A.ORDER_DATE
		          LEFT  JOIN BSA100T        S1 WITH(NOLOCK) ON S1.COMP_CODE   = A.COMP_CODE
		                                                   AND S1.MAIN_CODE   = 'S010'
		                                                   AND S1.REF_CODE5   = #{S_USER_ID}
		          LEFT  JOIN BSA100T        S2 WITH(NOLOCK) ON S2.COMP_CODE   = A.COMP_CODE
		                                                   AND S2.MAIN_CODE   = 'B012'
		                                                   AND S2.REF_CODE1   = 'Y'
		         WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		    END
		ELSE
		    BEGIN
		        UPDATE A
		           SET A._EXCEL_HAS_ERROR = 'Y'
		             , A._EXCEL_ERROR_MSG = ISNULL(_EXCEL_ERROR_MSG,'') + '거래처 정보가 없습니다.'
		          FROM SOF103UKRV_XLS A WITH(NOLOCK)
		         WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		    END



		/* 2. 품목 정보 UPDATE */
		IF EXISTS (SELECT TOP 1 1
		             FROM  SOF103UKRV_XLS A  WITH(NOLOCK)
		             INNER JOIN BPR200T   B1 WITH(NOLOCK) ON B1.COMP_CODE    = A.COMP_CODE
		                                                 AND B1.DIV_CODE     = A.DIV_CODE
		                                                 AND B1.ITEM_CODE    = A.ITEM_CODE
		            WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		)
		    BEGIN
		        UPDATE A
		           SET A.ITEM_NAME    = P1.ITEM_NAME
		             , A.ORDER_P      = CASE WHEN ISNULL(A.ORDER_P, 0) = 0 THEN CASE WHEN ISNULL(P2.ITEM_P, 0) = 0 THEN ISNULL(P3.ITEM_P, 0)
		                                                                             ELSE ISNULL(P2.ITEM_P, 0)
		                                                                        END
		                                     ELSE ISNULL(A.ORDER_P, 0)
		                                END 
		          FROM       SOF103UKRV_XLS A  WITH(NOLOCK)
		          LEFT  JOIN BPR200T        P1 WITH(NOLOCK) ON P1.COMP_CODE   = A.COMP_CODE
		                                                   AND P1.DIV_CODE    = A.DIV_CODE
		                                                   AND P1.ITEM_CODE   = A.ITEM_CODE
		          LEFT  JOIN BPR400T        P2 WITH(NOLOCK) ON P2.COMP_CODE   = A.COMP_CODE
		                                                   AND P2.TYPE        = '2'
		                                                   AND P2.DIV_CODE    = A.DIV_CODE
		                                                   AND P2.ITEM_CODE   = A.ITEM_CODE
		                                                   AND P2.CUSTOM_CODE = A.CUSTOM_CODE
		                                                   AND P2.MONEY_UNIT  = A.MONEY_UNIT
		                                                   AND P2.ORDER_UNIT  = A.ORDER_UNIT
		                                                   AND CONVERT(NVARCHAR(08), A.ORDER_DATE, 112) BETWEEN P2.APLY_START_DATE AND P2.APLY_END_DATE
		          LEFT  JOIN BPR400T        P3 WITH(NOLOCK) ON P3.COMP_CODE   = A.COMP_CODE
		                                                   AND P3.TYPE        = '2'
		                                                   AND P3.DIV_CODE    = '*'
		                                                   AND P3.ITEM_CODE   = A.ITEM_CODE
		                                                   AND P3.CUSTOM_CODE = A.CUSTOM_CODE
		                                                   AND P3.MONEY_UNIT  = A.MONEY_UNIT
		                                                   AND P3.ORDER_UNIT  = A.ORDER_UNIT
		                                                   AND CONVERT(NVARCHAR(08), A.ORDER_DATE, 112) BETWEEN P3.APLY_START_DATE AND P3.APLY_END_DATE
		         WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		    END
		ELSE
		    BEGIN
		        UPDATE A
		           SET A._EXCEL_HAS_ERROR = 'Y'
		             , A._EXCEL_ERROR_MSG = ISNULL(_EXCEL_ERROR_MSG,'') + '품목 정보가 없습니다.'
		          FROM SOF103UKRV_XLS A WITH(NOLOCK)
		         WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		    END



		/* 같은 발주번호 발주순번으로 수주등록 할 수 없도록 */
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = (CASE WHEN B.PO_NUM IS NOT NULL OR B.PO_SEQ IS NOT NULL	  THEN 'Y'
		                                  ELSE A._EXCEL_HAS_ERROR 
		                             END)
		     , A._EXCEL_ERROR_MSG = (CASE WHEN B.PO_NUM IS NOT NULL OR B.PO_SEQ IS NOT NULL	  THEN ISNULL(_EXCEL_ERROR_MSG,'') + '기 등록된 수주건입니다. 발주번호와 발주항번을 확인해주십시오.'
		                                  ELSE A._EXCEL_ERROR_MSG 
		                             END)
		  FROM      SOF103UKRV_XLS A WITH(NOLOCK)
		  LEFT JOIN SOF110T        B WITH(NOLOCK) ON B.COMP_CODE = #{S_COMP_CODE}
		                                         AND B.DIV_CODE  = #{DIV_CODE}
		                                         AND B.PO_NUM    = A.PO_NUM
		                                         AND B.PO_SEQ    = A.PO_SEQ
		                                         AND ISNULL(A.PO_NUM, '') != ''
		                                         AND A.PO_SEQ   != 0
		 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}



		/* 존재하지않는 사업장 출고사업장으로 입력시 */
		UPDATE A
		   SET A._EXCEL_HAS_ERROR = (CASE WHEN B.DIV_CODE IS  NULL	  THEN 'Y'
		                                  ELSE A._EXCEL_HAS_ERROR 
		                             END)
		     , A._EXCEL_ERROR_MSG = (CASE WHEN B.DIV_CODE IS  NULL	  THEN ISNULL(_EXCEL_ERROR_MSG,'') + '존재하지 않는 출고사업장입니다.'
		                                  ELSE A._EXCEL_ERROR_MSG 
		                             END)
		  FROM      SOF103UKRV_XLS A WITH(NOLOCK)
		  LEFT JOIN BOR120T        B WITH(NOLOCK) ON B.COMP_CODE = #{S_COMP_CODE}
		                                         AND B.DIV_CODE  = A.OUT_DIV_CODE
		 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>

	<select id="sof103ukrvServiceImpl.checkB141" parameterType="Map" resultType="rMap">
		SELECT SUB_CODE
		  FROM BSA100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'B141'
		   AND SUB_CODE != '$'
		   AND REF_CODE1 = 'Y'
	</select>

	<select id="sof103ukrvServiceImpl.checkItemCode" parameterType="Map" resultType="rMap">
		/* sof103ukrvServiceImpl.checkItemCode */
		SELECT A.ITEM_CODE , A.ITEM_NAME
		  FROM      SOF103UKRV_XLS A WITH(NOLOCK)
		  LEFT JOIN BPR200T        B WITH(NOLOCK) ON B.COMP_CODE = #{S_COMP_CODE}
		                                         AND B.DIV_CODE  = #{DIV_CODE}
		                                         AND B.ITEM_CODE = A.ITEM_CODE
		 WHERE A._EXCEL_JOBID         = #{_EXCEL_JOBID}
		   AND ISNULL(B.ITEM_CODE,'') = ''
	</select>

	<update id="sof103ukrvServiceImpl.insertItemCode" parameterType="Map">
		/* sof103ukrvServiceImpl.insertItemCode */
		DECLARE @ITEM_ACCOUNT   NVARCHAR(2)
		      , @SUPPLY_TYPE    NVARCHAR(1)
		      , @WH_CODE        NVARCHAR(8)
		      , @STOCK_UNIT     NVARCHAR(3)
		      , @SALE_UNIT      NVARCHAR(3)
		      , @ORDER_UNIT     NVARCHAR(3)
		      , @SALE_TRNS_RATE NUMERIC(12,6)
		      , @PUR_TRNS_RATE  NUMERIC(12,6)
		      , @ORDER_PLAN     NVARCHAR(1)
		      , @TAX_TYPE       NVARCHAR(1)
		      , @WORK_SHOP_CODE NVARCHAR(8)
		      , @ITEM_NAME      NVARCHAR(200)

		    SET @ITEM_NAME = (CASE WHEN #{ITEM_NAME} IS NULL THEN ''
		                           ELSE #{ITEM_NAME} 
		                      END)

		SELECT @ITEM_ACCOUNT   = ITEM_ACCOUNT
		     , @SUPPLY_TYPE    = SUPPLY_TYPE
		     , @WH_CODE        = WH_CODE
		     , @STOCK_UNIT     = STOCK_UNIT
		     , @SALE_UNIT      = SALE_UNIT
		     , @ORDER_UNIT     = ORDER_UNIT
		     , @SALE_TRNS_RATE = SALE_TRNS_RATE
		     , @PUR_TRNS_RATE  = PUR_TRNS_RATE
		     , @ORDER_PLAN     = ORDER_PLAN
		     , @TAX_TYPE       = TAX_TYPE
		     , @WORK_SHOP_CODE = WORK_SHOP_CODE
		  FROM BPR220T WITH (NOLOCK)
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND DIV_CODE     = #{DIV_CODE}
		   AND ITEM_ACCOUNT = '10'

		IF NOT EXISTS ( SELECT  TOP 1 1
		                  FROM  BPR100T WITH (NOLOCK)
		                 WHERE  COMP_CODE = #{S_COMP_CODE}
		                   AND  ITEM_CODE = #{ITEM_CODE}
		)
		    BEGIN
		        INSERT INTO BPR100T(
		              COMP_CODE
		            , ITEM_CODE
		            , ITEM_NAME
		            , STOCK_UNIT
		            , SALE_UNIT
		            , TAX_TYPE
		            , TRNS_RATE
		            , INSERT_DB_USER
		            , INSERT_DB_TIME
		            , UPDATE_DB_USER
		            , UPDATE_DB_TIME
		        ) VALUES (
		              #{S_COMP_CODE}
		            , #{ITEM_CODE}
		            , @ITEM_NAME
		            , @STOCK_UNIT
		            , @SALE_UNIT
		            , @TAX_TYPE
		            , @SALE_TRNS_RATE
		            , #{S_USER_ID}
		            , GETDATE()
		            , #{S_USER_ID}
		            , GETDATE()
		        )
		    END

		INSERT INTO BPR200T(
		      COMP_CODE
		    , DIV_CODE
		    , ITEM_CODE
		    , ITEM_NAME
		    , ITEM_ACCOUNT
		    , SUPPLY_TYPE
		    , WH_CODE
		    , ORDER_UNIT
		    , ORDER_PLAN
		    , WORK_SHOP_CODE
		    , TRNS_RATE
		    , INSERT_DB_USER
		    , INSERT_DB_TIME
		    , UPDATE_DB_USER
		    , UPDATE_DB_TIME
		)VALUES(
		      #{S_COMP_CODE}
		    , #{DIV_CODE}
		    , #{ITEM_CODE}
		    , @ITEM_NAME
		    , @ITEM_ACCOUNT
		    , @SUPPLY_TYPE
		    , @WH_CODE
		    , @ORDER_UNIT
		    , @ORDER_PLAN
		    , @WORK_SHOP_CODE
		    , @PUR_TRNS_RATE
		    , #{S_USER_ID}
		    , GETDATE()
		    , #{S_USER_ID}
		    , GETDATE()
		)
	</update>

	<update id="sof103ukrvServiceImpl.updateItemCode" parameterType="Map">
		/* sof103ukrvServiceImpl.updateItemCode */
		UPDATE SOF103UKRV_XLS
		   SET _EXCEL_HAS_ERROR =  'Y'
		     , _EXCEL_ERROR_MSG = ISNULL(_EXCEL_ERROR_MSG,'') + '사업장에 대한 품목정보가 존재하지 않습니다. '
		WHERE _EXCEL_JOBID  = #{_EXCEL_JOBID}
		  AND _EXCEL_ROWNUM = #{_EXCEL_ROWNUM}
		  --AND ITEM_CODE    = {ITEM_CODE}
	</update>

	<insert id="sof103ukrvServiceImpl.insertLogMaster" parameterType="Map">
		/*sof103ukrvServiceImpl.insertLogMaster*/
		DECLARE @OFFER_NO NVARCHAR(50),
		        @REGDATE  NVARCHAR(8)

		    SET @OFFER_NO = #{OFFER_NO}
		    SET @REGDATE  = CONVERT(NVARCHAR(8), GETDATE(), 112)

		IF     #{OPR_FLAG}           = 'N'
		   AND #{NATION_INOUT}       = '2'
		   AND ISNULL(@OFFER_NO, '') = ''
		   AND 'Y' = (SELECT ISNULL(REF_CODE1, 'N')
		                FROM BSA100T WITH(NOLOCK)
		               WHERE MAIN_CODE = 'T100'
		                 AND SUB_CODE  = '01')
		    BEGIN
		        EXEC SP_GetAutoNumComp #{S_COMP_CODE}, #{DIV_CODE}, 'TEA100T', 'T', @REGDATE, '1', @OFFER_NO OUTPUT
		    END

		INSERT INTO L_SOF100T
		     ( KEY_VALUE		, OPR_FLAG
		     , COMP_CODE		, DIV_CODE			, ORDER_NUM			, CUSTOM_CODE
		     , ORDER_O			, ORDER_TAX_O		, TAX_INOUT
		     , ORDER_DATE		, ORDER_TYPE		, MONEY_UNIT		, PO_NUM
		     , BILL_TYPE		, NATION_INOUT		, ORDER_PRSN
		     , OFFER_NO			, PAY_TERMS			, DATE_DEPART
		     , PAY_METHODE1		, TERMS_PRICE		, EXCHG_RATE_O		, EXCHANGE_RATE
		     , INSERT_DB_USER	, INSERT_DB_TIME	, UPDATE_DB_USER	, UPDATE_DB_TIME
		)
		SELECT #{KEY_VALUE}		, #{OPR_FLAG}
		     , #{S_COMP_CODE}	, #{DIV_CODE}		, ''				, #{CUSTOM_CODE}
		     , SUM(ORDER_O)		, SUM(ORDER_TAX_O)	, #{TAX_INOUT}
		     , #{ORDER_DATE}	, #{ORDER_TYPE}		, #{MONEY_UNIT}		, #{PO_NUM}
		     , #{BILL_TYPE}		, #{NATION_INOUT}	, #{ORDER_PRSN}
		     , @OFFER_NO		, #{PAY_TERMS}		, CONVERT(NVARCHAR(08), GETDATE(), 112)
		     , #{PAY_METHODE1}	, #{TERMS_PRICE}	, #{EXCHANGE_RATE}	, #{EXCHANGE_RATE}
		     , #{S_USER_ID}		, GETDATE()			, #{S_USER_ID}		, GETDATE()
		  FROM L_SOF110T WITH(NOLOCK)
		 WHERE KEY_VALUE = #{KEY_VALUE}
		 GROUP BY KEY_VALUE
	</insert>

	<insert id="sof103ukrvServiceImpl.insertLogDetail" parameterType="Map">
		/*sof103ukrvServiceImpl.insertLogDetail*/
		INSERT INTO L_SOF110T
		     ( KEY_VALUE		, OPR_FLAG
		     , COMP_CODE		, DIV_CODE			, ORDER_NUM		, SER_NO		, ITEM_CODE
		     , DVRY_DATE		, ORDER_Q			, ORDER_P		, ORDER_O		, ORDER_TAX_O
		     , ORDER_UNIT		, DVRY_CUST_CD		, PO_NUM		, PO_SEQ		, PO_DATE
		     , REMARK			, PRICE_YN
		     , TAX_TYPE
		     , OUT_DIV_CODE		, INOUT_TYPE_DETAIL
		     , WEEK_NUM
		     , INIT_DVRY_DATE	, ORDER_UNIT_Q
		     , TRANS_RATE		, PROJECT_NO
		     , SALE_CUST_CD		, PROD_END_DATE		, PROD_Q			, PROD_PLAN_Q
		     , INSERT_DB_USER	, INSERT_DB_TIME	, UPDATE_DB_USER	, UPDATE_DB_TIME
			 , ACCOUNT_YNC
			 , REMARK_INTER
		) VALUES (
		       #{KEY_VALUE}		, #{OPR_FLAG}
		     , #{S_COMP_CODE}	, #{DIV_CODE}		, ''			, #{SER_NO}		, #{ITEM_CODE}
		     , #{DVRY_DATE}		, #{ORDER_Q}		, #{ORDER_P}	, #{ORDER_O}	, #{ORDER_TAX_O}
		     , #{ORDER_UNIT}	, #{DVRY_CUST_CD}	, #{PO_NUM}		, #{PO_SEQ}		, #{PO_DATE}
		     , #{REMARK}		, '2'                  --단가구분(S003) 2 진단가
		     , CASE WHEN #{NATION_INOUT} = '1' THEN '1'
		            ELSE '2'
		       END                                     --세 구분 (B059) 1 과세
		     , #{OUT_DIV_CODE}	, #{INOUT_TYPE_DETAIL}
		     , (SELECT TOP 1 CAL_NO FROM BCM420T WITH(NOLOCK)
		         WHERE COMP_CODE   = #{S_COMP_CODE}
		           AND CAL_TYPE    = '3'
		           AND START_DATE &lt;= #{DVRY_DATE}
		           AND END_DATE   &gt;= #{DVRY_DATE})  --납품예정일 연도별 몇주차인지
		     , #{DVRY_DATE}		, #{ORDER_UNIT_Q}
		     , #{TRANS_RATE}	, #{PROJECT_NO}
		     , #{CUSTOM_CODE}	, #{DVRY_DATE}		, #{ORDER_UNIT_Q}	, 0
		     , #{S_USER_ID}		, GETDATE()			, #{S_USER_ID}		, GETDATE()
			 , ISNULL(( SELECT TOP 1 REF_CODE1 
						FROM BSA100T WITH (NOLOCK) 
						WHERE COMP_CODE=#{S_COMP_CODE} 
						AND MAIN_CODE='S007' 
						AND SUB_CODE=#{INOUT_TYPE_DETAIL}), 'Y')
			 , #{REMARK_INTER}
		)
	</insert>

	<update id="sof103ukrvServiceImpl.spSalesOrder" parameterType="Map" statementType="CALLABLE">
		{call SP_SALES_SalesOrder (
			#{KeyValue	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{LangCode	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{OrderNum	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{ErrorDesc	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update>
</mapper>