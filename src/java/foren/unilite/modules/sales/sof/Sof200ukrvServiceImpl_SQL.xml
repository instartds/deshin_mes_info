<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sof200ukrvServiceImpl">
	<select id="sof200ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">	
		/* Sof02Krv.CSof200Ukr[fnSof200QSt1] Query01 */
		BEGIN
		     SET NOCOUNT ON
		     SET ARITHABORT ON
		
		     DECLARE @CompCode    NVARCHAR(08) /* 법인코드  */
		           , @UserId      NVARCHAR(100) /* 사용자ID  */
		           , @LangType    NVARCHAR(2)  /* 언어구분  */
		
		    SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}   
		
		    /*데이터 조회*/
            SELECT CAST(0 AS BIT)                                                           AS CHOICE                                                                  
                 , B.ORDER_STATUS                                                           AS ORDER_STATUS                          
                 , uniLITE.fnGetUserdate(A.COMP_CODE, A.ORDER_DATE)                         AS ORDER_DATE                            
                 , A.CUSTOM_CODE                                                            AS CUSTOM_CODE2                                                             
                 , uniLITE.fnCustNameComp(C.COMP_CODE, @UserId, C.CUSTOM_CODE)              AS CUSTOM_NAME2                   
                 , B.ITEM_CODE                                                              AS ITEM_CODE                         
                 , uniLITE.fnItemNameComp(D.COMP_CODE, @UserId, D.ITEM_CODE)                AS ITEM_NAME                      
                 , D.SPEC                                                                   AS SPEC                         
                 , B.ORDER_UNIT                                                             AS ORDER_UNIT                         
                 , B.TRANS_RATE                                                             AS TRANS_RATE                          
                 , B.ORDER_Q                                                                AS ORDER_UNIT_Q                         
                 , ISNULL(B.ISSUE_REQ_Q, 0)                                                 AS ISSUE_REQ_Q
                 , ISNULL(B.OUTSTOCK_Q, 0)                                                  AS OUTSTOCK_Q 
                 , ISNULL(B.RETURN_Q, 0)                                                    AS RETURN_Q   
                 , (ISNULL(B.ORDER_Q, 0) - ISNULL(B.OUTSTOCK_Q, 0) + ISNULL(B.RETURN_Q, 0)) AS ORDER_REM_Q   
                 , ISNULL(SALE_Q, 0)                                                        AS SALE_Q                                                               
                 , D.STOCK_UNIT                                                             AS STOCK_UNIT                                                                        
                 , B.ORDER_UNIT_Q                                                           AS STOCK_Q                                                              
                 , A.MONEY_UNIT                                                             AS MONEY_UNIT                                                                        
                 , B.ORDER_P                                                                AS ORDER_P                                                                        
                 , B.ORDER_O                                                                AS ORDER_O                                                                        
                 , A.EXCHG_RATE_O                                                           AS EXCHG_RATE_O                                                                        
                 , (B.ORDER_O * A.EXCHG_RATE_O)                                             AS SO_AMT_WON                                                
                 , (SELECT (CASE WHEN @LangType = 'ko' THEN X.CODE_NAME
                                 WHEN @LangType = 'en' THEN X.CODE_NAME_EN
                                 WHEN @LangType = 'zh' THEN X.CODE_NAME_CN
                                 WHEN @LangType = 'ja' THEN X.CODE_NAME_JP
                                                       ELSE X.CODE_NAME
                           END)																AS CODE_NAME                 
                      FROM BSA100T X                                                                         
                     WHERE X.COMP_CODE = A.COMP_CODE                                                         
                       AND X.MAIN_CODE = 'B059'                                                              
                       AND X.SUB_CODE  = B.TAX_TYPE)                                        AS TAX_TYPE                                             
                 , B.ORDER_TAX_O                                                            AS ORDER_TAX_O
          /* 20170831 - 추가 */                 
                 , B.CLOSE_REMARK
                 , B.CLOSE_ID
                 , B.CLOSE_DATE
                 , B.CLOSE_REMARK                                                           AS CLOSE_REMARK_bak
                 , B.CLOSE_ID                                                               AS CLOSE_ID_bak    
                 , B.CLOSE_DATE                                                             AS CLOSE_DATE_bak  
                 
                 , A.ORDER_TYPE                                                             AS ORDER_TYPE                
                 , (SELECT (CASE WHEN @LangType = 'ko' THEN X.CODE_NAME
                                 WHEN @LangType = 'en' THEN X.CODE_NAME_EN
                                 WHEN @LangType = 'zh' THEN X.CODE_NAME_CN
                                 WHEN @LangType = 'ja' THEN X.CODE_NAME_JP
                                                       ELSE X.CODE_NAME
                           END)																AS CODE_NAME
                      FROM BSA100T X                                                                         
                     WHERE X.COMP_CODE = A.COMP_CODE                                                         
                       AND X.MAIN_CODE = 'S002'                                                              
                       AND X.SUB_CODE  = A.ORDER_TYPE)                                      AS ORDER_TYPE_NM                                      
                 , A.ORDER_NUM                                                              AS ORDER_NUM                 
                 , B.SER_NO                                                                 AS SER_NO                 
                 , A.ORDER_PRSN                                                             AS ORDER_PRSN                 
                 , (SELECT (CASE WHEN @LangType = 'ko' THEN X.CODE_NAME
                                 WHEN @LangType = 'en' THEN X.CODE_NAME_EN
                                 WHEN @LangType = 'zh' THEN X.CODE_NAME_CN
                                 WHEN @LangType = 'ja' THEN X.CODE_NAME_JP
                                                       ELSE X.CODE_NAME
                           END)																AS CODE_NAME
                      FROM BSA100T X                                                                         
                     WHERE X.COMP_CODE = A.COMP_CODE                                                         
                       AND X.MAIN_CODE = 'S010'                                                              
                       AND X.SUB_CODE  = A.ORDER_PRSN)                                      AS ORDER_PRSN_NM                                      
                 , B.PO_NUM                                                                 AS PO_NUM                 
                 , uniLITE.fnGetUserdate(A.COMP_CODE, B.DVRY_DATE)                          AS DVRY_DATE2                         
                 , uniLITE.fnGetUserdate(A.COMP_CODE, B.PROD_END_DATE)                      AS PROD_END_DATE                      
                 , B.PROD_Q                                                                 AS PROD_Q  
                 , B.OUT_DIV_CODE                                                           AS OUT_DIV_CODE               
                 , RTRIM(A.ORDER_NUM) + RTRIM(CONVERT(VARCHAR(4),B.SER_NO))                 AS SORT_KEY                      
                 , B.UPDATE_DB_USER                                                         AS UPDATE_DB_USER                 
                 , B.UPDATE_DB_TIME                                                         AS UPDATE_DB_TIME                 
                 , A.COMP_CODE                                                              AS COMP_CODE                
		      FROM SOF100T A                                                                                 
		                   INNER JOIN SOF110T B                                                              
		                           ON A.COMP_CODE   = B.COMP_CODE                                            
		                          AND A.DIV_CODE    = B.DIV_CODE                                             
		                          AND A.ORDER_NUM   = B.ORDER_NUM                                            
		                   INNER JOIN BCM100T C                                                              
		                           ON A.COMP_CODE   = C.COMP_CODE                                            
		                          AND A.CUSTOM_CODE = C.CUSTOM_CODE                                          
		                   INNER JOIN BPR100T D                                                              
		                           ON B.COMP_CODE   = D.COMP_CODE                                            
		                          AND B.ITEM_CODE   = D.ITEM_CODE                                            
			WHERE A.COMP_CODE = @CompCode   /* 법인코드 */
			  <if test="RDO_SELECT != &quot;1&quot;"> 
		      AND (ISNULL(B.ORDER_Q, 0) - ISNULL(B.OUTSTOCK_Q, 0) + ISNULL(B.RETURN_Q, 0)) &gt; 0
			  </if>
		      <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		      AND A.DIV_CODE       = #{DIV_CODE}    /* 사업장(권한체크필수) */
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
		      AND A.ORDER_DATE &gt;= #{ORDER_DATE_FR}    /* 시작 수주 */
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
		      AND A.ORDER_DATE &lt;= #{ORDER_DATE_TO}    /* 종료 수주일 */
		      </if>
		      
		      <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		      AND A.CUSTOM_CODE = #{CUSTOM_CODE}					/* 거래처코드  */
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		      AND A.CUSTOM_CODE LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
		      AND C.CUSTOM_NAME LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
		      </if>

		      <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		      AND A.ORDER_PRSN     = #{ORDER_PRSN}    /* 담당 */
		      </if>
		      
		      <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		      AND B.ITEM_CODE   = #{ITEM_CODE}						/* 품목코드  */
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
		      AND B.ITEM_CODE   LIKE #{ITEM_CODE} + '%'				/* 품목코드  */
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
		      AND D.ITEM_NAME   LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
		      </if>
		      
		      <if test="@foren.Ognl@isNotEmpty(ORDER_STATUS)">
		      AND B.ORDER_STATUS   = #{ORDER_STATUS}    /* 마감여부 */
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		      AND A.ORDER_TYPE     = #{ORDER_TYPE}    /* 수주구분 */
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(ORDER_NUM_FR)">
		      AND A.ORDER_NUM  &gt;= #{ORDER_NUM_FR}   /* 수주번호 */
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(ORDER_NUM_TO)">
		      AND A.ORDER_NUM  &lt;= #{ORDER_NUM_TO}   /* 수주번호 */
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(DVRY_DATE_FR)">
		      AND B.DVRY_DATE  &gt;= #{DVRY_DATE_FR}   /* 종료 납기일(FROM) */
		      </if>
		      <if test="@foren.Ognl@isNotEmpty(DVRY_DATE_TO)">
		      AND B.DVRY_DATE  &lt;= #{DVRY_DATE_TO}   /* 종료 납기일(TO) */
			  </if>  
		      <if test="@foren.Ognl@isNotEmpty(OUT_DIV_CODE)">
		      AND B.OUT_DIV_CODE     = #{OUT_DIV_CODE}    /*출고사업장*/
		      </if>
		     ORDER BY A.ORDER_DATE, A.CUSTOM_CODE, B.ITEM_CODE, A.ORDER_NUM, B.SER_NO
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
	
	<select id="sof200ukrvServiceImpl.checkExistOrder" parameterType="Map" resultType="rMap">
	        SELECT COUNT(1) AS CNT                                                          
              FROM SOF100T A INNER JOIN SOF110T B                                           
                                     ON A.COMP_CODE = B.COMP_CODE                           
                                    AND A.DIV_CODE  = B.DIV_CODE                            
                                    AND A.ORDER_NUM = B.ORDER_NUM                           
                                    AND A.COMP_CODE = #{S_COMP_CODE}
                                    AND A.ORDER_NUM = #{ORDER_NUM}
                                    AND B.SER_NO    = #{SER_NO}
	</select>
	
	<update id="sof200ukrvServiceImpl.updateOrderStatus" parameterType="Map">
	    UPDATE SOF110T                                                     
           SET ORDER_STATUS   = #{ORDER_STATUS}
         /* 20170831 - 추가 */                 
		<if test="ORDER_STATUS == &quot;Y&quot;">
             , CLOSE_REMARK   = #{CLOSE_REMARK}
             , CLOSE_ID       = #{CLOSE_ID}
             , CLOSE_DATE     = #{CLOSE_DATE}
		</if>
		<if test="ORDER_STATUS == &quot;N&quot;">
             , CLOSE_REMARK   = ''
             , CLOSE_ID       = ''
             , CLOSE_DATE     = NULL
		</if>
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = GetDate()                                  
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND ORDER_NUM = #{ORDER_NUM}
           AND SER_NO    = #{SER_NO}
	</update>
</mapper>