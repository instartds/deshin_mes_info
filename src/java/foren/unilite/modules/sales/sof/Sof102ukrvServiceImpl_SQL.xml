<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sof102ukrvServiceImpl">
	
	
	<select id="sof102ukrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
SELECT 
	DENSE_RANK() OVER ( ORDER BY A.ORDER_NUM) AS CUST_NO
	,RANK() OVER (PARTITION BY A.ORDER_NUM ORDER BY A.ORDER_NUM, A.SER_NO ASC) AS CUST_SEQ
	,A.COMP_CODE
	,A.DIV_CODE
	,A.OUT_DIV_CODE
	,A.ORDER_NUM
	,A.SER_NO
	,R2.ITEM_LEVEL1--대분류
	,A.PO_NUM
	,A.PO_SEQ
	,A.ITEM_CODE
	,R1.ITEM_NAME--품목명
	,A.ORDER_Q
	,A.PO_DATE
	,A.DVRY_DATE
	,A.WEEK_NUM		--계획주차
	,B.CUSTOM_CODE
	,R3.CUSTOM_NAME--거래처명
	,A.DVRY_CUST_CD
	,R4.CUSTOM_NAME AS DVRY_CUST_NM--납품처명
	,A.ORDER_UNIT 
	,B.MONEY_UNIT
	,A.ORDER_O
	,A.ORDER_P
	,B.NATION_INOUT	--내/외자구분
	,B.ORDER_TYPE	--공장구분
	,A.REMARK
	,A.INIT_DVRY_DATE --최초납기일
             
 FROM SOF110T A WITH(NOLOCK) 
INNER JOIN SOF100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
								 AND B.DIV_CODE = A.DIV_CODE
								 AND B.ORDER_NUM = A.ORDER_NUM
LEFT JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
								 AND R1.DIV_CODE = A.DIV_CODE
								 AND R1.ITEM_CODE = A.ITEM_CODE
LEFT JOIN BPR100T R2 WITH(NOLOCK) ON R2.COMP_CODE = R1.COMP_CODE
								 AND R2.ITEM_CODE = R1.ITEM_CODE
LEFT JOIN BCM100T R3 WITH(NOLOCK) ON R3.COMP_CODE = B.COMP_CODE
							     AND R3.CUSTOM_CODE = B.CUSTOM_CODE
LEFT JOIN BCM100T R4 WITH(NOLOCK) ON R4.COMP_CODE = A.COMP_CODE
							     AND R4.CUSTOM_CODE = A.DVRY_CUST_CD
WHERE A.COMP_CODE = #{S_COMP_CODE}
  AND A.DIV_CODE = #{DIV_CODE}

<if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
  AND A.ORDER_NUM IN (${ORDER_NUM})
</if>
    </select>
    
    
    
    
<insert id="sof102ukrvServiceImpl.insertLogMaster" parameterType="Map">
        /*sof102ukrvServiceImpl.insertLogMaster*/
        INSERT INTO L_SOF100T
             ( KEY_VALUE        , OPR_FLAG
             , COMP_CODE        , DIV_CODE          , ORDER_NUM         , CUSTOM_CODE      
             , ORDER_DATE       
             
             , ORDER_TYPE        
             
             , MONEY_UNIT        , PO_NUM      
       		
       		
       		 , BILL_TYPE        
       		 
       		 
       		 , NATION_INOUT
       		 
             , INSERT_DB_USER   , INSERT_DB_TIME    , UPDATE_DB_USER    , UPDATE_DB_TIME  
             
             , ORDER_PRSN
             , RECEIPT_SET_METH
             )
        VALUES
             ( 
               #{KEY_VALUE}        , #{OPR_FLAG}
             , #{S_COMP_CODE}      , #{DIV_CODE}          , #{ORDER_NUM}         , #{CUSTOM_CODE}     
             , CONVERT(NVARCHAR(08), GETDATE(), 112)  --수주일    
             
             , '20'   --   OEM?   판매유형(S002) 20 내수OEM판매
             
             
             , #{MONEY_UNIT}        , #{PO_NUM}      
       		 
       		 
       		 , '10'       --부가세유형(S024) 10 과제매출
       		 
       		 
       		 , '1'    --국내외구분  (T109) 1 국내
             , #{S_USER_ID}		   , GETDATE()            ,#{S_USER_ID}			 , GETDATE()
             
             ,(SELECT BUSI_PRSN FROM BCM100T WHERE COMP_CODE = #{S_COMP_CODE} AND CUSTOM_CODE = #{CUSTOM_CODE}) 
             ,'100' -- 현금
             )
    </insert>
    
<insert id="sof102ukrvServiceImpl.insertLogDetail" parameterType="Map">
        /*sof102ukrvServiceImpl.insertLogDetail*/
        INSERT INTO L_SOF110T
             ( KEY_VALUE        , OPR_FLAG
             , COMP_CODE        , DIV_CODE          , ORDER_NUM         , SER_NO            , ITEM_CODE
             , DVRY_DATE        , ORDER_Q           , ORDER_P           , ORDER_O
         
             , ORDER_UNIT       , DVRY_CUST_CD      , PO_NUM		    , PO_SEQ             , PO_DATE
             , REMARK
             
             , PRICE_YN			
             , TAX_TYPE			
             , OUT_DIV_CODE
                  
          
             , INSERT_DB_USER, INSERT_DB_TIME , UPDATE_DB_USER    , UPDATE_DB_TIME
             
             , WEEK_NUM
             , INIT_DVRY_DATE
             
             , ORDER_UNIT_Q
             , TRANS_RATE 
             , SALE_CUST_CD
             , PROD_END_DATE
             , PROD_Q
             , PROD_PLAN_Q
             )

        VALUES
             ( #{KEY_VALUE}        , #{OPR_FLAG}
             , #{S_COMP_CODE}      , #{DIV_CODE}          , #{ORDER_NUM}         , #{SER_NO}            , #{ITEM_CODE}
             , #{DVRY_DATE}        , #{ORDER_Q}           , #{ORDER_P}           , #{ORDER_O}
         
             , #{ORDER_UNIT}       , #{DVRY_CUST_CD}      , #{PO_NUM}		    , #{PO_SEQ}          , #{PO_DATE}      
             , #{REMARK}
             
             , '2'		   --단가구분(S003) 2 진단가
             , '1'		  --세 구분 (B059) 1 과세
             ,  #{OUT_DIV_CODE}	--출고사업장
            
            
            
             , #{S_USER_ID}, GETDATE(), #{S_USER_ID}, GETDATE()
             
             , (SELECT TOP 1 CAL_NO FROM BCM420T WHERE COMP_CODE = #{S_COMP_CODE} AND CAL_TYPE = '3' AND START_DATE &lt;= #{DVRY_DATE} AND END_DATE &gt;= #{DVRY_DATE})  --납품예정일 연도별 몇주차인지
             , #{DVRY_DATE}
             
             , #{ORDER_Q}
             , (SELECT TRNS_RATE FROM BPR100T WHERE COMP_CODE = #{S_COMP_CODE} AND ITEM_CODE = #{ITEM_CODE})
             , #{CUSTOM_CODE}
             , #{DVRY_DATE}
             , #{ORDER_Q}
             , #{ORDER_Q}
             
             ) 
    </insert>    
    
<update id="sof102ukrvServiceImpl.spSalesOrder" parameterType="Map" statementType="CALLABLE">

    {call SP_SALES_SalesOrder (
        #{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
        #{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
        #{OrderNum, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
        #{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
    )}

</update>    
    

<update id="sof102ukrvServiceImpl.updateDetail" parameterType="Map">
	UPDATE SOF110T
	   SET ORDER_Q = #{ORDER_Q}
	     , ORDER_P = #{ORDER_P}
	     , ORDER_O = #{ORDER_O}
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND DIV_CODE = #{DIV_CODE}
	   AND ORDER_NUM = #{ORDER_NUM}
	   AND SER_NO = #{SER_NO}
	
</update>
    
    
<insert id="sof102ukrvServiceImpl.insertExcelSof102ukrv" parameterType="Map">       /* 엑셀insert */
/*sof102ukrvServiceImpl.insertExcelSof102ukrv*/
INSERT INTO SOF102UKRV_EXCEL(
	_EXCEL_JOBID
   ,_EXCEL_ROWNUM
   ,_EXCEL_HAS_ERROR
   ,_EXCEL_ERROR_MSG
   ,OUT_DIV_CODE
   ,PO_NUM
   ,PO_SEQ
   ,ITEM_CODE
   ,ORDER_Q
   ,PO_DATE
   ,DVRY_DATE
   ,CUSTOM_CODE
   ,DVRY_CUST_CD
   ,ORDER_UNIT
   ,MONEY_UNIT
   ,ORDER_O
   ,ORDER_P
   ,REMARK
   ,INSERT_DB_USER
   ,INSERT_DB_TIME
   ,UPDATE_DB_USER
   ,UPDATE_DB_TIME
)VALUES(
   #{_EXCEL_JOBID}
  ,#{_EXCEL_ROWNUM}
  ,#{_EXCEL_HAS_ERROR}
  ,#{_EXCEL_ERROR_MSG}
  ,#{OUT_DIV_CODE}
  ,#{PO_NUM}
  ,#{PO_SEQ}
  ,#{ITEM_CODE}
  ,#{ORDER_Q}
  ,#{PO_DATE}
  ,#{DVRY_DATE}
  ,#{CUSTOM_CODE}
  ,#{DVRY_CUST_CD}
  ,#{ORDER_UNIT}
  ,#{MONEY_UNIT}
  ,#{ORDER_O}
  ,#{ORDER_P}
  ,#{REMARK}
  ,#{S_USER_ID}
  ,GETDATE()
  ,#{S_USER_ID}
  ,GETDATE()
)
</insert>


<update id="excelValidate" >
/* sof102ukrvServiceImpl.excelValidate */

/* 현재 카렌더에 생성된 주차 정보 없을시 수주등록 할 수 없도록 */
UPDATE A
	SET 
		A._EXCEL_HAS_ERROR = (CASE WHEN B.CAL_NO IS NULL THEN 'Y'
                                  ELSE A._EXCEL_HAS_ERROR 
                                  END),
                                 
		A._EXCEL_ERROR_MSG = (CASE WHEN B.CAL_NO IS NULL THEN ISNULL(_EXCEL_ERROR_MSG,'') + '카렌더 정보가 없습니다.'  
                                 ELSE A._EXCEL_ERROR_MSG 
                                 END)

		FROM SOF102UKRV_EXCEL A WITH(NOLOCK)
	LEFT JOIN BCM420T B WITH(NOLOCK) ON B.COMP_CODE = #{S_COMP_CODE}
									AND B.CAL_TYPE = '3'
									AND B.START_DATE &lt;= A.DVRY_DATE
									AND B.END_DATE &gt;= A.DVRY_DATE
    WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}

/* 같은 발주번호 발주순번으로 수주등록 할 수 없도록 */
   UPDATE   A
    SET 
            A._EXCEL_HAS_ERROR = (CASE WHEN B.PO_NUM IS NOT NULL OR B.PO_SEQ IS NOT NULL      THEN 'Y'
                                  ELSE A._EXCEL_HAS_ERROR 
                                  END),
                                 
            A._EXCEL_ERROR_MSG = (CASE WHEN B.PO_NUM IS NOT NULL OR B.PO_SEQ IS NOT NULL      THEN ISNULL(_EXCEL_ERROR_MSG,'') + '기 등록된 수주건입니다. 발주번호와 발주항번을 확인해주십시오.'  
                                 ELSE A._EXCEL_ERROR_MSG 
                                 END)
                                 
    FROM SOF102UKRV_EXCEL A WITH(NOLOCK)
LEFT JOIN SOF110T B WITH(NOLOCK) ON B.COMP_CODE = #{S_COMP_CODE}
								AND B.DIV_CODE = #{DIV_CODE}
								AND B.PO_NUM = A.PO_NUM
								AND B.PO_SEQ = A.PO_SEQ
    WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}

/* 존재하지않는 사업장 출고사업장으로 입력시 */
   UPDATE   A
    SET 
            A._EXCEL_HAS_ERROR = (CASE WHEN B.DIV_CODE IS  NULL      THEN 'Y'
                                  ELSE A._EXCEL_HAS_ERROR 
                                  END),
                                 
            A._EXCEL_ERROR_MSG = (CASE WHEN B.DIV_CODE IS  NULL      THEN ISNULL(_EXCEL_ERROR_MSG,'') + '존재하지 않는 출고사업장입니다.'  
                                 ELSE A._EXCEL_ERROR_MSG 
                                 END)
                                 
    FROM SOF102UKRV_EXCEL A WITH(NOLOCK)
LEFT JOIN BOR120T B WITH(NOLOCK) ON B.COMP_CODE =#{S_COMP_CODE}
								AND B.DIV_CODE = A.OUT_DIV_CODE
    WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
</update>

<select id="sof102ukrvServiceImpl.checkItemCode" parameterType="Map" resultType="rMap">
		
SELECT A.ITEM_CODE , A.ITEM_NAME
  FROM SOF102UKRV_EXCEL A
  LEFT JOIN  BPR200T B ON B.COMP_CODE= #{S_COMP_CODE}
                      AND B.DIV_CODE = #{DIV_CODE}
                      AND B.ITEM_CODE = A.ITEM_CODE
 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
   AND ISNULL(B.ITEM_CODE,'') = ''

</select>

<select id="sof102ukrvServiceImpl.checkB141" parameterType="Map" resultType="rMap">
	SELECT 
		SUB_CODE
	  FROM BSA100T WITH(NOLOCK)
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND MAIN_CODE = 'B141'
	   AND SUB_CODE != '$'
	   AND REF_CODE1 = 'Y'
	
</select>

<update id="sof102ukrvServiceImpl.insertItemCode" parameterType="Map">
/* sof102ukrvServiceImpl.insertItemCode */

DECLARE 

	@ITEM_ACCOUNT	NVARCHAR(2)
	,@SUPPLY_TYPE	NVARCHAR(1)
	,@WH_CODE		NVARCHAR(8)
	,@STOCK_UNIT	NVARCHAR(3)
	,@SALE_UNIT		NVARCHAR(3)
	,@ORDER_UNIT	NVARCHAR(3)
	,@SALE_TRNS_RATE	NUMERIC(12,6)
	,@PUR_TRNS_RATE		NUMERIC(12,6)
	,@ORDER_PLAN	NVARCHAR(1)
	,@TAX_TYPE		NVARCHAR(1)
	,@WORK_SHOP_CODE	NVARCHAR(8)
	
	,@ITEM_NAME NVARCHAR(200)
	
	SET @ITEM_NAME = (CASE WHEN #{ITEM_NAME} IS NULL THEN ''
						   ELSE #{ITEM_NAME} 
					 END)
	

SELECT 
	 @ITEM_ACCOUNT	= ITEM_ACCOUNT
	,@SUPPLY_TYPE	= SUPPLY_TYPE
	,@WH_CODE		= WH_CODE
	,@STOCK_UNIT	= STOCK_UNIT
	,@SALE_UNIT		= SALE_UNIT
	,@ORDER_UNIT	= ORDER_UNIT
	,@SALE_TRNS_RATE= SALE_TRNS_RATE
	,@PUR_TRNS_RATE	= PUR_TRNS_RATE
	,@ORDER_PLAN	= ORDER_PLAN
	,@TAX_TYPE		= TAX_TYPE
	,@WORK_SHOP_CODE= WORK_SHOP_CODE

FROM BPR220T WITH (NOLOCK)
WHERE COMP_CODE = #{S_COMP_CODE}
  AND DIV_CODE = #{DIV_CODE}
  AND ITEM_ACCOUNT ='10'
	IF NOT EXISTS ( 
		SELECT  TOP 1 1
			FROM	BPR100T WITH (NOLOCK)
			WHERE   COMP_CODE = #{S_COMP_CODE}
			AND	 ITEM_CODE = #{ITEM_CODE}
		  )
	BEGIN
		INSERT INTO BPR100T(
			COMP_CODE
			,ITEM_CODE
			,ITEM_NAME
			,STOCK_UNIT
			,SALE_UNIT
			,TAX_TYPE
			,TRNS_RATE
			,INSERT_DB_USER
			,INSERT_DB_TIME
			,UPDATE_DB_USER
			,UPDATE_DB_TIME
		)VALUES(
			#{S_COMP_CODE}
			,#{ITEM_CODE}
			,@ITEM_NAME
			,@STOCK_UNIT
			,@SALE_UNIT
			,@TAX_TYPE
			,@SALE_TRNS_RATE
			,#{S_USER_ID}
			,GETDATE()
			,#{S_USER_ID}
			,GETDATE()
		)
	END
	
	
	INSERT INTO BPR200T(
		COMP_CODE
		,DIV_CODE
		,ITEM_CODE
		,ITEM_NAME
		,ITEM_ACCOUNT
		,SUPPLY_TYPE
		,WH_CODE
		,ORDER_UNIT
		,ORDER_PLAN
		,WORK_SHOP_CODE
		,TRNS_RATE
		,INSERT_DB_USER
		,INSERT_DB_TIME
		,UPDATE_DB_USER
		,UPDATE_DB_TIME
	)VALUES(
		#{S_COMP_CODE}
		,#{DIV_CODE}
		,#{ITEM_CODE}
		,@ITEM_NAME
		,@ITEM_ACCOUNT
		,@SUPPLY_TYPE
		,@WH_CODE
		,@ORDER_UNIT
		,@ORDER_PLAN
		,@WORK_SHOP_CODE
		,@PUR_TRNS_RATE
		,#{S_USER_ID}
		,GETDATE()
		,#{S_USER_ID}
		,GETDATE()
	)
</update>
<update id="sof102ukrvServiceImpl.updateItemCode" parameterType="Map">
	/* sof102ukrvServiceImpl.updateItemCode */

UPDATE SOF102UKRV_EXCEL SET
	_EXCEL_HAS_ERROR =  'Y'
	, _EXCEL_ERROR_MSG = ISNULL(_EXCEL_ERROR_MSG,'') + '사업장에 대한 품목정보가 존재하지 않습니다. '
WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
  AND ITEM_CODE = #{ITEM_CODE}

</update>
<select id="sof102ukrvServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">   /* 엑셀업로드 */
/* sof102ukrvServiceImpl.selectExcelUploadSheet1 */

SELECT A._EXCEL_JOBID
, A._EXCEL_ROWNUM
, A._EXCEL_HAS_ERROR
, A._EXCEL_ERROR_MSG

,DENSE_RANK() OVER ( ORDER BY A.CUSTOM_CODE) AS CUST_NO
,RANK() OVER (PARTITION BY A.CUSTOM_CODE ORDER BY A.PO_NUM, A.PO_SEQ ASC) AS CUST_SEQ

, A.PO_NUM
, A.PO_SEQ
, A.OUT_DIV_CODE
, A.ITEM_CODE
,R1.ITEM_NAME
, A.ORDER_Q
, A.PO_DATE
, A.DVRY_DATE
, A.CUSTOM_CODE
,R2.CUSTOM_NAME
, A.DVRY_CUST_CD
,R3.CUSTOM_NAME AS DVRY_CUST_NM
, A.ORDER_UNIT
, A.MONEY_UNIT
, A.ORDER_O
, A.ORDER_P
, A.REMARK

      FROM SOF102UKRV_EXCEL A WITH (NOLOCK)
LEFT JOIN BPR200T R1 WITH(NOLOCK) ON R1.COMP_CODE = #{S_COMP_CODE}
								 AND R1.DIV_CODE = #{DIV_CODE}
								 AND R1.ITEM_CODE = A.ITEM_CODE
LEFT JOIN BCM100T R2 WITH(NOLOCK) ON R2.COMP_CODE = #{S_COMP_CODE}
								 AND R2.CUSTOM_CODE = A.CUSTOM_CODE
LEFT JOIN BCM100T R3 WITH(NOLOCK) ON R3.COMP_CODE = #{S_COMP_CODE}
								 AND R3.CUSTOM_CODE = A.DVRY_CUST_CD
                     
     WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
  ORDER BY A._EXCEL_JOBID, A._EXCEL_ROWNUM


</select>
    
    
    
    
</mapper>