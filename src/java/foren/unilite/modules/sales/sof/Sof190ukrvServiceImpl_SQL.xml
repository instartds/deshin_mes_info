<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sof190ukrvServiceImpl">
	<select id="sof190ukrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		/* sof190ukrvServiceImpl.selectList1 */
		BEGIN
			SELECT A.COMP_CODE
				 , A.DIV_CODE
				 , A.SO_NUM
				 , A.CUSTOM_CODE
				 , D.CUSTOM_NAME
				 , A.SO_DATE
				 , SUM(B.ORDER_O)							AS ORDER_O
				 , SUM(B.ORDER_Q)							AS ORDER_Q
				 , SUM(B.ORDER_TAX_O)						AS ORDER_TAX_O
				 , MAX(B.STATUS_FLAG)						AS STATUS_FLAG
				 , E.ORDER_NUM								AS ORDER_NUM
				 , MAX(ISNULL(F.ORDER_TYPE, '10'))			AS ORDER_TYPE
				 , MAX(ISNULL(F.MONEY_UNIT, #{MONEY_UNIT}))	AS MONEY_UNIT
				 , MAX(ISNULL(F.EXCHG_RATE_O, '1'))			AS EXCHG_RATE_O
				 , CASE WHEN MAX(ISNULL(F.ORDER_PRSN, '')) = '' THEN CASE WHEN MAX(ISNULL(D.BUSI_PRSN, '')) = '' THEN MAX(G.SUB_CODE)
						                                                  ELSE MAX(D.BUSI_PRSN)
				                                                     END
				        ELSE MAX(ISNULL(F.ORDER_PRSN, ''))
				   END										AS ORDER_PRSN
				 , '' AS ITEM_LIST
			  FROM       SOF200T A WITH(NOLOCK)
			  INNER JOIN SOF220T B WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
											   AND B.DIV_CODE     = A.DIV_CODE
											   AND B.SO_NUM       = A.SO_NUM
			  INNER JOIN BCM100T D WITH(NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
											   AND D.CUSTOM_CODE  = A.CUSTOM_CODE
			  LEFT  JOIN SOF110T E WITH(NOLOCK) ON E.COMP_CODE    = B.COMP_CODE
											   --AND E.DIV_CODE   = B.DIV_CODE
											   AND E.PO_NUM       = B.SO_NUM
											   AND E.PO_SEQ       = B.SO_SEQ
											   AND E.SALE_CUST_CD = B.SALE_CUST_CD
											   AND E.ITEM_CODE    = B.ITEM_CODE
			  LEFT  JOIN SOF100T F WITH(NOLOCK) ON F.COMP_CODE    = E.COMP_CODE
											   AND F.DIV_CODE     = E.DIV_CODE
											   AND F.ORDER_NUM    = E.ORDER_NUM
			  --20190716 추가
			  LEFT  JOIN BSA100T G WITH(NOLOCK) ON G.COMP_CODE = A.COMP_CODE
											   AND G.MAIN_CODE = 'S010'
											   AND G.SUB_CODE != '$'
											   AND G.REF_CODE5 = #{S_USER_ID}
			 WHERE A.COMP_CODE   = #{S_COMP_CODE}
			   AND B.STATUS_FLAG = #{STATUS_FLAG}
			<if test="@foren.Ognl@isNotEmpty(SO_DATE_FR)">
			   AND A.SO_DATE &gt;= #{SO_DATE_FR}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SO_DATE_TO)">
			   AND A.SO_DATE &lt;= #{SO_DATE_TO}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			   AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			   AND D.CUSTOM_NAME LIKE #{CUSTOM_NAME} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(SO_NUM)">
			   AND A.SO_NUM      = #{SO_NUM}
			</if>

			 GROUP BY A.COMP_CODE, A.DIV_CODE, A.SO_NUM, A.SO_DATE, A.CUSTOM_CODE, D.CUSTOM_NAME, E.ORDER_NUM
			 ORDER BY SO_NUM
		END
	</select>

	<select id="sof190ukrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		/* sof190ukrvServiceImpl.selectList2 */
		BEGIN
			SELECT B.COMP_CODE
				 , B.DIV_CODE
				 , B.SO_NUM
				 , B.SO_SEQ
				 , B.SALE_CUST_CD							AS CUSTOM_CODE
				 , A.SO_DATE
				 , B.ORDER_O
				 , B.ORDER_Q
				 , B.STATUS_FLAG
				 , B.ITEM_CODE
				 , C.ITEM_NAME
				 , B.ORDER_Q
				 , B.ORDER_UNIT
				 , B.TRANS_RATE								AS TRNS_RATE
				 , B.ORDER_P
				 , B.ORDER_O
				 , B.ORDER_TAX_O
				 , B.ORDER_O + B.ORDER_TAX_O				AS ORDER_TOT_O
				 , B.REMARK
				 , B.DVRY_DATE
				 , B.STATUS_REMARK
				 , B.SO_ITEM_SEQ
				 , E.ORDER_NUM								AS ORDER_NUM
				 , E.SER_NO									AS SER_NO
				 --20190711 추가
				 , CASE WHEN ISNULL(B.POSS_DVRY_DATE, B.DVRY_DATE) = '' THEN B.DVRY_DATE
				        ELSE ISNULL(B.POSS_DVRY_DATE, B.DVRY_DATE)
				   END										AS POSS_DVRY_DATE
				 , E.REMARK_INTER							AS SO_REMARK_INTER
				 --20190716 추가
				 , E.REMARK									AS SO_REMARK
				 --20210319 추가
				 , B.DELIV_METHOD
				 , B.RECEIVER_NAME
				 , B.TELEPHONE_NUM1
				 , B.ZIP_NUM
				 , B.ADDRESS1
				 -- 20210421
				 , B.ADDRESS
			  FROM       SOF200T A WITH(NOLOCK)
			  INNER JOIN SOF220T B WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
											   AND B.DIV_CODE     = A.DIV_CODE
											   AND B.SO_NUM       = A.SO_NUM
			  INNER JOIN BPR100T C WITH(NOLOCK) ON C.COMP_CODE    = B.COMP_CODE
											   AND C.ITEM_CODE    = B.ITEM_CODE
			  INNER JOIN BCM100T D WITH(NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
											   AND D.CUSTOM_CODE  = A.CUSTOM_CODE
			  LEFT  JOIN SOF110T E WITH(NOLOCK) ON E.COMP_CODE    = B.COMP_CODE
											   --AND E.DIV_CODE   = B.DIV_CODE
											   AND E.PO_NUM       = B.SO_NUM
											   AND E.PO_SEQ       = B.SO_SEQ
											   AND E.SALE_CUST_CD = B.SALE_CUST_CD
											   AND E.ITEM_CODE    = B.ITEM_CODE
			 WHERE A.COMP_CODE   = #{S_COMP_CODE}
			   AND B.STATUS_FLAG = #{STATUS_FLAG}
			<if test="@foren.Ognl@isNotEmpty(SO_DATE_FR)">
			   AND A.SO_DATE &gt;= #{SO_DATE_FR}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SO_DATE_TO)">
			   AND A.SO_DATE &lt;= #{SO_DATE_TO}
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
			   AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
			   AND D.CUSTOM_NAME LIKE #{CUSTOM_NAME} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(SO_NUM)">
			   AND B.SO_NUM      = #{SO_NUM}
			</if>
			<if test="@foren.Ognl@isNotEmpty(SO_SEQ)">
			   AND B.SO_SEQ      = #{SO_SEQ}
			</if>

			 ORDER BY SO_NUM, SO_SEQ
		END
	</select>



<!-- 저장 로직 -->
	<insert id="sof190ukrvServiceImpl.insertLogMaster" parameterType="Map">
		/*sof190ukrvServiceImpl.insertLogMaster*/
		INSERT INTO L_SOF100T
			 ( KEY_VALUE		, OPR_FLAG
			 , COMP_CODE		, DIV_CODE			, ORDER_NUM			, CUSTOM_CODE
			 , ORDER_DATE
			 , ORDER_TYPE		, MONEY_UNIT		, ORDER_O			, ORDER_TAX_O
			 , EXCHG_RATE_O
			 , ORDER_PRSN		, DEPT_CODE			, PO_NUM			, CREATE_LOC
			 , TAX_INOUT		, BILL_TYPE			, REMARK			, STATUS
			 , NATION_INOUT
			 , INSERT_DB_USER	, INSERT_DB_TIME	, UPDATE_DB_USER	, UPDATE_DB_TIME  )
		SELECT
			   #{KEY_VALUE}		, #{OPR_FLAG}
			 , #{S_COMP_CODE}	, #{DIV_CODE}		, #{ORDER_NUM}		, #{CUSTOM_CODE}
			 , CONVERT(NVARCHAR(08), GETDATE(), 112)
			 , #{ORDER_TYPE}	, #{MONEY_UNIT}		, #{ORDER_O}		, #{ORDER_TAX_O}
			 , #{EXCHG_RATE_O}
			 , #{ORDER_PRSN}	, #{DEPT_CODE}		, #{SO_NUM}			, '1'
			 , TAX_TYPE			, '10'				, #{REMARK}			, '6'
			 , CASE #{sMONEY_UNIT} WHEN #{MONEY_UNIT} THEN '1'
								   ELSE '2'
			   END
			 , #{S_USER_ID}		, GETDATE()			, #{S_USER_ID}		, GETDATE()
		  FROM BCM100T A WITH(NOLOCK)
		 WHERE A.COMP_CODE   = #{S_COMP_CODE}
		   AND A.CUSTOM_CODE = #{CUSTOM_CODE}
	</insert>

	<insert id="sof190ukrvServiceImpl.insertLogDetail" parameterType="Map">
		/*sof110ukrvServiceImpl.insertLogDetail*/
		--납기가능일 값이 없을 때, 납기일을 납기가능일 대신 SOF110T.DVRY_DATE에 INSERT하도록 수정
		DECLARE @DVRY_DATE NVARCHAR(08)

		SET @DVRY_DATE = #{POSS_DVRY_DATE}

		IF ISNULL(@DVRY_DATE, '') = ''
			BEGIN
				SET @DVRY_DATE = #{DVRY_DATE}
			END

		INSERT INTO L_SOF110T
			 ( KEY_VALUE		, OPR_FLAG
			 , COMP_CODE		, DIV_CODE			, ORDER_NUM			, SER_NO			, ITEM_CODE
			 , DVRY_DATE		, DVRY_TIME			, ORDER_Q			, ORDER_P			, ORDER_O
			 , ORDER_TAX_O		, ORDER_UNIT_Q
			 , ORDER_UNIT		, TRANS_RATE		, OUT_DIV_CODE		, SALE_CUST_CD
			 , PO_NUM			, PO_SEQ			, REMARK
			 , PRICE_YN			, TAX_TYPE
			 , WEEK_NUM
			 , INIT_DVRY_DATE
			 , INSERT_DB_USER	, INSERT_DB_TIME	, UPDATE_DB_USER	, UPDATE_DB_TIME
			 --20190711 추가
			 , REMARK_INTER
			 --20210319 추가
			 , DELIV_METHOD
			 , RECEIVER_NAME
			 , TELEPHONE_NUM1
			 , ZIP_NUM
			 , ADDRESS1
			 -- 20210422 ADDRESS(주소) 추가
			 , ADDRESS
			 --20210506 추가: SOF110T.WH_CODE에 BPR200T.WH_CODE 들어가도록 수정
			 , WH_CODE
			 )
		SELECT
			   #{KEY_VALUE}		, #{OPR_FLAG}
			 , #{S_COMP_CODE}	, #{DIV_CODE}		, #{ORDER_NUM}		, #{SER_NO}			, #{ITEM_CODE}
			 , @DVRY_DATE
			 , (SELECT SUBSTRING(CONVERT(VARCHAR(8), CAST(#{DVRY_TIME} AS smalldatetime), 108),1,8))
			 , #{ORDER_Q}		, #{ORDER_P}		, #{ORDER_O}
			 , #{ORDER_TAX_O}	, #{ORDER_Q} * #{TRNS_RATE}
			 , #{ORDER_UNIT}	, #{TRNS_RATE}		, #{DIV_CODE}		, #{CUSTOM_CODE}
			 --주문확정 시에는 PO_NUM, PO_SEQ에 주문번호(SO_NUM), 주문순번(SO_SEQ) 입력
			 , #{SO_NUM}		, #{SO_SEQ}			, CASE WHEN NULLIF(#{SO_REMARK},'') IS NULL THEN #{REMARK} ELSE #{SO_REMARK} END
			 , '2'				, A.TAX_TYPE
			 , (SELECT TOP 1 CAL_NO FROM BCM420T WHERE COMP_CODE = #{S_COMP_CODE} AND CAL_TYPE = '3' AND START_DATE &lt;= #{DVRY_DATE} AND END_DATE &gt;= #{DVRY_DATE})  --납품예정일 연도별 몇주차인지
			 , #{DVRY_DATE}
			 , #{S_USER_ID}		, GETDATE()			, #{S_USER_ID}		, GETDATE()
			 --20190711 추가
			 , #{SO_REMARK_INTER}
			 --20210319 추가
			 , #{DELIV_METHOD}
			 , #{RECEIVER_NAME}
			 , #{TELEPHONE_NUM1}
			 , #{ZIP_NUM}
			 , #{ADDRESS1}
			 -- 200210421 추가
			 , #{ADDRESS}
			 --20210506 추가: SOF110T.WH_CODE에 BPR200T.WH_CODE 들어가도록 수정
			 , B.WH_CODE
		  FROM       BPR100T A WITH(NOLOCK)
		  INNER JOIN BPR200T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                   AND B.DIV_CODE  = #{DIV_CODE}
		                                   AND B.ITEM_CODE = A.ITEM_CODE
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.ITEM_CODE = #{ITEM_CODE}
	</insert>

	<update id="sof190ukrvServiceImpl.spSalesOrder" parameterType="Map" statementType="CALLABLE">
		{call SP_SALES_SalesOrder (
			#{KeyValue	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{LangCode	, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{OrderNum	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{ErrorDesc	, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update>

<!-- 저장 후 비고 / 상태값 UPDATE -->
	<update id="sof190ukrvServiceImpl.updateDetail" parameterType="Map">
		/*sof190ukrvServiceImpl.updateDetail*/
		UPDATE SOF220T
		   SET STATUS_REMARK  = #{STATUS_REMARK}
		     --20190716 추가
		     , REMARK         = #{REMARK}
		     , SO_REMARK      = #{SO_REMARK}
		     , SO_REMARK_INTER= #{SO_REMARK_INTER}
		     --20190711 추가
		     , POSS_DVRY_DATE = #{POSS_DVRY_DATE}
			<if test="OPR_FLAG == &quot;N&quot;">
		     , STATUS_FLAG    = '9'
			</if>
			<if test="OPR_FLAG == &quot;D&quot;">
		     , STATUS_FLAG    = '2'
			</if>
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND SALE_CUST_CD = #{CUSTOM_CODE}
		   AND DIV_CODE     = ''
		   AND SO_NUM       = #{SO_NUM}
		   AND SO_SEQ       = #{SO_SEQ}
		   AND SO_ITEM_SEQ  = #{SO_ITEM_SEQ}
	</update>

	<update id="sof190ukrvServiceImpl.deleteDetail" parameterType="Map">
		/*sof190ukrvServiceImpl.updateDetail*/
		UPDATE SOF220T
		   SET STATUS_REMARK  = #{STATUS_REMARK}
		     --20190716 추가
		     , REMARK         = #{REMARK}
		     , SO_REMARK      = #{SO_REMARK}
		     , SO_REMARK_INTER= #{SO_REMARK_INTER}
		     --20190711 추가
		     , POSS_DVRY_DATE = #{POSS_DVRY_DATE}
		     , STATUS_FLAG    = '1'
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND SALE_CUST_CD = #{CUSTOM_CODE}
		   AND DIV_CODE     = ''
		   AND SO_NUM       = #{SO_NUM}
		   AND SO_SEQ       = #{SO_SEQ}
		   AND SO_ITEM_SEQ  = #{SO_ITEM_SEQ}
	</update>



<!-- 주문 디테일 데이터 저장 로직 -->
	<update id="sof190ukrvServiceImpl.updateDetail2" parameterType="Map">
		/*sof190ukrvServiceImpl.updateDetail*/
		UPDATE SOF220T
		   SET STATUS_REMARK  = #{STATUS_REMARK}
		     --20190711 추가
		     , POSS_DVRY_DATE = #{POSS_DVRY_DATE}
		     , UPDATE_DB_USER = #{S_USER_ID}
		     , UPDATE_DB_TIME = GETDATE()
		     --20201126 추가
		     , REMARK		  = #{REMARK}
		 WHERE COMP_CODE    = #{S_COMP_CODE}
		   AND SALE_CUST_CD = #{CUSTOM_CODE}
		   AND DIV_CODE     = ''
		   AND SO_NUM       = #{SO_NUM}
		   AND SO_SEQ       = #{SO_SEQ}
		   AND SO_ITEM_SEQ  = #{SO_ITEM_SEQ}
	</update>
	
<!-- 20201207 뱃지기능 추가 -->
	<update id="sof190ukrvServiceImpl.updateAlert" parameterType="Map">
		-- 알람정보 생성
		BEGIN
		    IF EXISTS(SELECT TOP 1 1
		                FROM BSB020T WITH (NOLOCK)
		               WHERE COMP_CODE   = #{S_COMP_CODE}
		                 AND DIV_CODE    = #{S_DIV_CODE}
		                 AND PROGRAM_ID IN ('sof190ukrv','w_sof100ukrv_yp')
		                 AND 'N'         = #{OPR_FLAG})
		    BEGIN
		            INSERT INTO BSB100T
		                 ( COMP_CODE         , DIV_CODE          , ALERT_USER_ID     , ALERT_TYPE        , ALERT_PROGRAM_ID
		                 , ALERT_CNT
		                 , PROGRAM_ID
		                 , REF_NUM
		                 , JSON_PARAMETER
		                 , REF_VAL_1         , REF_VAL_2         , REF_VAL_3         , REF_VAL_4
		                 , REF_VAL_5         , REF_VAL_6         , REF_VAL_7         , REF_VAL_8
		                 , ALERT_MESSAGE     , ALERT_MESSAGE_EN  , ALERT_MESSAGE_CN  , ALERT_MESSAGE_JP  , ALERT_MESSAGE_VI
		                 , REMARK
		                 , INSERT_DB_USER    , INSERT_DB_TIME    , UPDATE_DB_USER    , UPDATE_DB_TIME )
		            SELECT DISTINCT 
		                   #{S_COMP_CODE}    , #{S_DIV_CODE}     , A.ALERT_USER_ID   , '1'               , B.ALERT_PROGRAM_ID
		                 , 1
		                 , 'sof190ukrv'
		                 , CONCAT(#{S_COMP_CODE}, #{CUSTOM_CODE}, #{SO_DATE}, #{SO_NUM}, #{SO_SEQ})
		                 , '{"PGM_ID":"sof190ukrv","STATUS_FLAG":"9","SO_DATE":"' + #{SO_DATE} + '","CUSTOM_CODE":"' + #{CUSTOM_CODE} + '","CUSTOM_NAME":"' + #{CUSTOM_NAME} + '"}'
		                 , #{S_COMP_CODE} , '9'    , #{SO_DATE}        , #{SO_NUM}
		                 , #{SO_SEQ}      , NULL              , NULL              , NULL
		                 , CONCAT('주문일자 : ' + CONVERT(NVARCHAR(10),CONVERT(DATETIME,#{SO_DATE}),102)
		                  , ' / ', '주문번호 : ' + #{SO_NUM}
		                  , ' / ', '거래처 : ' + #{CUSTOM_NAME})
		                 , ''
		                 , ''
		                 , ''
		                 , ''
		                 , ''
		                 , #{S_USER_ID}   , GETDATE()         , #{S_USER_ID}      , GETDATE()
		              FROM            BSB010T A WITH (NOLOCK)
		                   INNER JOIN BSB020T B WITH (NOLOCK) ON B.COMP_CODE  = A.COMP_CODE
		                                                     AND B.DIV_CODE   = A.DIV_CODE
		                                                     AND B.PROGRAM_ID = A.PROGRAM_ID
		             WHERE A.COMP_CODE   = #{S_COMP_CODE}
		               AND A.DIV_CODE    = #{S_DIV_CODE}
		               AND A.PROGRAM_ID IN ('w_sof100ukrv_yp','sof190ukrv')
		    END
		    ELSE
		    BEGIN
			    DELETE FROM BSB100T
			     WHERE COMP_CODE   = #{S_COMP_CODE}
			       AND DIV_CODE    = #{S_DIV_CODE}
			       AND REF_VAL_2   = '9'
			       AND REF_VAL_3   = #{SO_DATE}
			       AND REF_VAL_4   = #{SO_NUM}
			       AND REF_VAL_5   = #{SO_SEQ}    
			       AND PROGRAM_ID IN ('w_sof100ukrv_yp','sof190ukrv')
		    
		    END
		END

	</update>
</mapper>