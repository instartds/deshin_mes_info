<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sfa160skrvServiceImpl">
	
	<select id="sfa160skrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED                      
    SELECT    A AS SALE_CUSTOM_CODE, B AS CUSTOM_NAME,   C AS DIV_CODE,      D AS DIV_NAME,      E AS ITEM_CODE
         , F AS ITEM_NAME,        G AS SPEC,          H AS SALE_UNIT,     I AS TRNS_RATE,     J AS SALE_BASIS_P
         , K AS SALE_Q,           L AS BASIS_AMT_O,   M AS SALE_AMT_O,    N AS MINUS_AMT_O,   O AS SALE_RATE
         , P As AGENT_TYPE,       Q As AREA_TYPE,     SORT
      FROM (--sfa160skrv.Csfa160skrv[fnsfa160nq]Query01 
    SELECT    M.SALE_CUSTOM_CODE AS A        
         , uniLITE.fnCustNameComp(O.COMP_CODE, N'UNILITE5', O.CUSTOM_CODE) AS B 
         , M.DIV_CODE         AS C        
         , (SELECT DIV_NAME FROM BOR120T WHERE COMP_CODE = M.COMP_CODE AND DIV_CODE = M.DIV_CODE) AS D        
         , M.ITEM_CODE        AS E        
         , uniLITE.fnItemNameComp(N.COMP_CODE, N'UNILITE5', N.ITEM_CODE) AS F 
         , N.SPEC             AS G        
         , N.SALE_UNIT        AS H        
         , N.TRNS_RATE        AS I       
         , N.SALE_BASIS_P     AS J       
         , M.SALE_Q           AS K       
         , M.BASIS_AMT_O      AS L        
         , M.SALE_AMT_O       AS M        
         , (CASE WHEN M.BASIS_AMT_O != 0 
                      THEN (M.BASIS_AMT_O - M.SALE_AMT_O)
                      ELSE M.SALE_AMT_O 
             END) AS N       
         , (CASE WHEN M.SALE_AMT_O != 0 
                      THEN (100 - (M.BASIS_AMT_O/M.SALE_AMT_O*100))
                      ELSE 0
             END) AS O        
         , (SELECT CODE_NAME 
              FROM BSA100T 
             WHERE MAIN_CODE = 'B055'
               AND COMP_CODE = O.COMP_CODE 
               AND SUB_CODE  = O.AGENT_TYPE) AS P       
         , (SELECT CODE_NAME 
              FROM BSA100T 
             WHERE MAIN_CODE = 'B056'
               AND COMP_CODE = O.COMP_CODE 
               AND SUB_CODE  = O.AREA_TYPE) AS Q       
         , M.SALE_CUSTOM_CODE+M.DIV_CODE+M.ITEM_CODE AS SORT
      FROM (SELECT    A.DIV_CODE
                 , A.COMP_CODE
                 , A.SALE_CUSTOM_CODE
                 , B.ITEM_CODE
                 , SUM(ISNULL(B.SALE_Q, 0)) AS SALE_Q
                 , SUM(ISNULL(B.SALE_AMT_O,0)) AS SALE_AMT_O
                 , SUM((IsNull(C.SALE_BASIS_P, 1) * SALE_Q)) AS BASIS_AMT_O
              FROM SSA100T A
                           INNER JOIN SSA110T B 
                                   ON A.DIV_CODE  = B.DIV_CODE
                                  AND A.BILL_NUM  = B.BILL_NUM  
                                  AND A.COMP_CODE = B.COMP_CODE 
                           INNER JOIN BPR100T C 
                                   ON B.ITEM_CODE = C.ITEM_CODE
                                  AND A.COMP_CODE = C.COMP_CODE 
             WHERE A.SALE_CUSTOM_CODE IS NOT NULL
               AND A.COMP_CODE  = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(SALES_DATE_FR)">            
               AND A.SALE_DATE &gt;= #{SALES_DATE_FR}
            </if>
            <if test="@foren.Ognl@isNotEmpty(SALES_DATE_TO)"> 
               AND A.SALE_DATE &lt;= #{SALES_DATE_TO}
            </if>
             GROUP BY A.DIV_CODE,A.COMP_CODE, A.SALE_CUSTOM_CODE, B.ITEM_CODE
           ) M
             INNER JOIN BPR100T N 
                     ON M.ITEM_CODE = N.ITEM_CODE
                    AND M.COMP_CODE = N.COMP_CODE
             INNER JOIN BCM100T O
                     ON M.SALE_CUSTOM_CODE = O.CUSTOM_CODE
                    AND M.COMP_CODE        = O.COMP_CODE
             LEFT OUTER JOIN BPR100T P
                          ON N.ITEM_GROUP = P.ITEM_CODE        
                         AND N.COMP_CODE  = P.COMP_CODE
     WHERE M.SALE_CUSTOM_CODE IS NOT NULL
       AND M.COMP_CODE   = #{S_COMP_CODE}
     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
       AND M.DIV_CODE    = #{DIV_CODE}
     </if>
     
     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
       AND M.SALE_CUSTOM_CODE		= #{CUSTOM_CODE}					/* 거래처코드  */
     </if>
     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
       AND M.SALE_CUSTOM_CODE		LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
     </if>
     <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
       AND O.CUSTOM_NAME 			LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
     </if>

     <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
       AND O.AGENT_TYPE  = #{AGENT_TYPE}
     </if>
     <if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">
       AND O.AREA_TYPE   = #{AREA_TYPE}
     </if>
     <if test="@foren.Ognl@isNotEmpty(TXTLV_L1)">
       AND N.ITEM_LEVEL1 = #{TXTLV_L1}
     </if>
     <if test="@foren.Ognl@isNotEmpty(TXTLV_L2)">
       AND N.ITEM_LEVEL2 = #{TXTLV_L2}
     </if>
     <if test="@foren.Ognl@isNotEmpty(TXTLV_L3)">
       AND N.ITEM_LEVEL3 = #{TXTLV_L3}
     </if>
     
     
     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
       AND N.ITEM_GROUP 	= #{ITEM_CODE}						/* 품목코드  */
     </if>
     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
       AND N.ITEM_GROUP 	LIKE #{ITEM_CODE} + '%'				/* 품목코드  */
     </if>
     <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
       AND P.ITEM_NAME 		LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
     </if>

     <if test="@foren.Ognl@isNotEmpty(SALE_AMT_O_FR)">
       AND M.SALE_AMT_O  &gt;=  #{SALE_AMT_O_FR}
     </if>
     <if test="@foren.Ognl@isNotEmpty(SALE_AMT_O_TO)">
       AND M.SALE_AMT_O  &lt;=  #{SALE_AMT_O_TO}
     </if>
           ) X
     ORDER BY 1, 2, 3
    </select>	
    
    
    
    <select id="sfa160skrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED                      
    SELECT    A AS SALE_CUSTOM_CODE, B AS CUSTOM_NAME,   C AS DIV_CODE,      D AS DIV_NAME,      E AS ITEM_CODE
         , F AS ITEM_NAME,        G AS SPEC,          H AS SALE_UNIT,     I AS TRNS_RATE,     J AS SALE_BASIS_P
         , K AS SALE_Q,           L AS BASIS_AMT_O,   M AS SALE_AMT_O,    N AS MINUS_AMT_O,   O AS SALE_RATE
         , P As AGENT_TYPE,       Q As AREA_TYPE,     SORT
      FROM (--sfa160skrv.Csfa160skrv[fnsfa160nq]Query02 
    SELECT    M.ITEM_CODE        AS A       
         , uniLITE.fnItemNameComp(N.COMP_CODE, N'UNILITE5', N.ITEM_CODE) AS B 
         , N.SPEC             AS C        
         , M.DIV_CODE         AS D        
         , (SELECT DIV_NAME 
              FROM BOR120T                 
             WHERE DIV_CODE  = M.DIV_CODE   
               AND COMP_CODE = M.COMP_CODE) AS E       
         , M.SALE_CUSTOM_CODE AS F       
         , uniLITE.fnCustNameComp(O.COMP_CODE, N'UNILITE5', O.CUSTOM_CODE) AS G 
         , N.SALE_UNIT        AS H      
         , N.TRNS_RATE        AS I       
         , N.SALE_BASIS_P     AS J       
         , M.SALE_Q           AS K       
         , M.BASIS_AMT_O      AS L        
         , M.SALE_AMT_O       AS M       
         , (CASE WHEN M.BASIS_AMT_O != 0 
                      THEN (M.BASIS_AMT_O - M.SALE_AMT_O)
                      ELSE M.SALE_AMT_O 
             END) AS N         
         , (CASE WHEN M.SALE_AMT_O != 0
                      THEN (100 - (M.BASIS_AMT_O/M.SALE_AMT_O*100))
                      ELSE 0
             END) AS O       
         , (SELECT CODE_NAME 
              FROM BSA100T   
             WHERE MAIN_CODE = 'B055'       
               AND COMP_CODE = O.COMP_CODE  
               AND SUB_CODE  = O.AGENT_TYPE) AS P      
         , (SELECT CODE_NAME 
              FROM BSA100T   
             WHERE MAIN_CODE = 'B056'       
               AND COMP_CODE = O.COMP_CODE  
               AND SUB_CODE  = O.AREA_TYPE) AS Q      
         , M.SALE_CUSTOM_CODE+M.DIV_CODE+M.ITEM_CODE AS SORT
      FROM (SELECT    A.DIV_CODE
                 , A.COMP_CODE
                 , A.SALE_CUSTOM_CODE
                 , B.ITEM_CODE
                 , SUM(ISNULL(B.SALE_Q, 0)) AS SALE_Q
                 , SUM(ISNULL(B.SALE_AMT_O,0)) AS SALE_AMT_O
                 , SUM((IsNull(C.SALE_BASIS_P, 1) * SALE_Q)) As BASIS_AMT_O
              FROM SSA100T A
                           INNER JOIN SSA110T B 
                                   ON A.DIV_CODE  = B.DIV_CODE
                                  AND A.BILL_NUM  = B.BILL_NUM
                                  AND A.COMP_CODE = B.COMP_CODE
                           INNER JOIN BPR100T C
                                   ON B.ITEM_CODE = C.ITEM_CODE
                                  AND B.COMP_CODE = C.COMP_CODE
             WHERE A.SALE_CUSTOM_CODE IS NOT NULL
               AND  A.COMP_CODE  = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(SALES_DATE_FR)">            
               AND  A.SALE_DATE &gt;= #{SALES_DATE_FR}
            </if>
            <if test="@foren.Ognl@isNotEmpty(SALES_DATE_TO)"> 
               AND  A.SALE_DATE &lt;= #{SALES_DATE_TO}
            </if>
             GROUP BY A.DIV_CODE,A.COMP_CODE, A.SALE_CUSTOM_CODE, B.ITEM_CODE
           ) M
             INNER JOIN BPR100T N 
                     ON M.ITEM_CODE = N.ITEM_CODE
                    AND M.COMP_CODE = N.COMP_CODE
             INNER JOIN BCM100T O 
                     ON M.SALE_CUSTOM_CODE = O.CUSTOM_CODE
                    AND M.COMP_CODE        = O.COMP_CODE
             LEFT OUTER JOIN BPR100T P
                          ON N.ITEM_GROUP  = P.ITEM_CODE
                         AND N.COMP_CODE   = P.COMP_CODE
     WHERE M.SALE_CUSTOM_CODE IS NOT NULL
       AND M.COMP_CODE   = #{S_COMP_CODE}
     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
       AND M.DIV_CODE    = #{DIV_CODE}
     </if>
     
     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
       AND M.SALE_CUSTOM_CODE		= #{CUSTOM_CODE}					/* 거래처코드  */
     </if>
     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
       AND M.SALE_CUSTOM_CODE		LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
     </if>
     <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
       AND O.CUSTOM_NAME 			LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
     </if>

     <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
       AND O.AGENT_TYPE  = #{AGENT_TYPE}
     </if>
     <if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">
       AND O.AREA_TYPE   = #{AREA_TYPE}
     </if>
     <if test="@foren.Ognl@isNotEmpty(TXTLV_L1)">
       AND N.ITEM_LEVEL1 = #{TXTLV_L1}
     </if>
     <if test="@foren.Ognl@isNotEmpty(TXTLV_L2)">
       AND N.ITEM_LEVEL2 = #{TXTLV_L2}
     </if>
     <if test="@foren.Ognl@isNotEmpty(TXTLV_L3)">
       AND N.ITEM_LEVEL3 = #{TXTLV_L3}
     </if>
     
     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
       AND N.ITEM_GROUP 	= #{ITEM_CODE}						/* 품목코드  */
     </if>
     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
       AND N.ITEM_GROUP 	LIKE #{ITEM_CODE} + '%'				/* 품목코드  */
     </if>
     <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
       AND P.ITEM_NAME 		LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
     </if>

     <if test="@foren.Ognl@isNotEmpty(SALE_AMT_O_FR)">
       AND M.SALE_AMT_O  &gt;=  #{SALE_AMT_O_FR}
     </if>
     <if test="@foren.Ognl@isNotEmpty(SALE_AMT_O_TO)">
       AND M.SALE_AMT_O  &lt;=  #{SALE_AMT_O_TO}
     </if>
           ) X
     ORDER BY 1, 4
    </select>   
	
</mapper>