<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sma310skrvServiceImpl">
	
	<select id="sma310skrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
	<if test="rdoSelect == &quot;1&quot;">
    --Case 1    'Choosed Number
                    
    --sma310skrv.Csma310skrv[fnSma310nq] Query01 
    SELECT AA.CUSTOM_CODE
         , MAX(uniLITE.fnCustNameComp(AA.COMP_CODE, #{S_USER_ID}, AA.CUSTOM_CODE)) AS CUSTOM_NAME
         , unilite.fnFormat(AA.COMP_CODE, SUM(AA.SALE_Q1), 'S_FSET_Q') SALE_Q1
         , unilite.fnFormat(AA.COMP_CODE, SUM(AA.SALE_Q2), 'S_FSET_Q') SALE_Q2
         , unilite.fnFormat(AA.COMP_CODE, (CASE WHEN SUM(AA.SALE_Q1) = 0 
                                                     THEN 0
                                                WHEN SUM(AA.SALE_Q1) &gt; 0 
                                                     THEN (CASE WHEN SUM(AA.SALE_Q2) &gt; 0 
                                                                     THEN ((SUM(AA.SALE_Q2) - SUM(AA.SALE_Q1)) / SUM(AA.SALE_Q1) * 100 )
                                                                WHEN SUM(AA.SALE_Q2) &lt; 0 
                                                                     THEN ((SUM(AA.SALE_Q2) - SUM(AA.SALE_Q1)) / SUM(AA.SALE_Q1) * 100) 
                                                                WHEN SUM(AA.SALE_Q2) = 0 
                                                                     THEN -100 
                                                            END)  
                                                WHEN SUM(AA.SALE_Q1) &lt; 0 
                                                     THEN (CASE WHEN SUM(AA.SALE_Q2) &gt; 0 
                                                                     THEN ((SUM(AA.SALE_Q2) - SUM(AA.SALE_Q1)) / SUM(AA.SALE_Q1) * -100 )
                                                                WHEN SUM(AA.SALE_Q2) &lt; 0 
                                                                     THEN ((SUM(AA.SALE_Q2) - SUM(AA.SALE_Q1)) / SUM(AA.SALE_Q1) * -100) 
                                                                WHEN SUM(AA.SALE_Q2) = 0 
                                                                     THEN 100 
                                                            END)  
                                            END), 'S_FSET_Q') SALE_Q3
         , unilite.fnFormat(AA.COMP_CODE, SUM(AA.SALE_Q4), 'S_FSET_Q') SALE_Q4
         , unilite.fnFormat(AA.COMP_CODE, SUM(AA.SALE_Q5), 'S_FSET_Q') SALE_Q5
         , unilite.fnFormat(AA.COMP_CODE, (CASE WHEN SUM(AA.SALE_Q4) = 0 
                                                     THEN 0
                                                WHEN SUM(AA.SALE_Q4) &gt; 0 
                                                     THEN (CASE WHEN SUM(AA.SALE_Q5) &gt; 0 
                                                                     THEN ((SUM(AA.SALE_Q5) - SUM(AA.SALE_Q4)) / SUM(AA.SALE_Q4) * 100 )
                                                                WHEN SUM(AA.SALE_Q5) &lt; 0 
                                                                     THEN ((SUM(AA.SALE_Q5) - SUM(AA.SALE_Q4)) / SUM(AA.SALE_Q4) * 100) 
                                                                WHEN SUM(AA.SALE_Q5) = 0 
                                                                     THEN -100 
                                                            END)  
                                                WHEN SUM(AA.SALE_Q4) &lt; 0 
                                                     THEN (CASE WHEN SUM(AA.SALE_Q5) &gt; 0 
                                                                     THEN ((SUM(AA.SALE_Q5) - SUM(AA.SALE_Q4)) / SUM(AA.SALE_Q4) * -100 )
                                                                WHEN SUM(AA.SALE_Q5) &lt; 0 
                                                                     THEN ((SUM(AA.SALE_Q5) - SUM(AA.SALE_Q4)) / SUM(AA.SALE_Q4) * -100) 
                                                                WHEN SUM(AA.SALE_Q5) = 0 
                                                                     THEN 100 
                                                            END)  
                                            END), 'S_FSET_Q') SALE_Q6
         , unilite.fnFormat(AA.COMP_CODE, SUM(AA.SALE_Q7), 'S_FSET_Q') SALE_Q7
         , unilite.fnFormat(AA.COMP_CODE, SUM(AA.SALE_Q8), 'S_FSET_Q') SALE_Q8
         , unilite.fnFormat(AA.COMP_CODE, (CASE WHEN SUM(AA.SALE_Q7) = 0 
                                                     THEN 0
                                                WHEN SUM(AA.SALE_Q7) &gt; 0 
                                                     THEN (CASE WHEN SUM(AA.SALE_Q8) &gt; 0 
                                                                     THEN ((SUM(AA.SALE_Q8) - SUM(AA.SALE_Q7)) / SUM(AA.SALE_Q7) * 100 )
                                                                WHEN SUM(AA.SALE_Q8) &lt; 0 
                                                                     THEN ((SUM(AA.SALE_Q8) - SUM(AA.SALE_Q7)) / SUM(AA.SALE_Q7) * 100) 
                                                                WHEN SUM(AA.SALE_Q8) = 0 
                                                                     THEN -100 
                                                            END)  
                                                WHEN SUM(AA.SALE_Q7) &lt; 0 
                                                     THEN (CASE WHEN SUM(AA.SALE_Q8) &gt; 0 
                                                                     THEN ((SUM(AA.SALE_Q8) - SUM(AA.SALE_Q7)) / SUM(AA.SALE_Q7) * -100 )
                                                                WHEN SUM(AA.SALE_Q8) &lt; 0 
                                                                     THEN ((SUM(AA.SALE_Q8) - SUM(AA.SALE_Q7)) / SUM(AA.SALE_Q7) * -100) 
                                                                WHEN SUM(AA.SALE_Q8) = 0 
                                                                     THEN 100 
                                                            END)  
                                            END), 'S_FSET_Q') SALE_Q9
      FROM (
                    --'--1.수주정보에서
            SELECT Z.COMP_CODE    
                 , Z.CUSTOM_CODE  
                 , uniLITE.fnCustNameComp(Z.COMP_CODE, #{S_USER_ID}, Z.CUSTOM_CODE) AS CUSTOM_NAME 
                 , Z.SALE_Q1
                 , Z.SALE_Q2
                 , 0.0 SALE_Q3
                 , 0.0 SALE_Q4
                 , 0.0 SALE_Q5
                 , 0.0 SALE_Q6
                 , 0.0 SALE_Q7
                 , 0.0 SALE_Q8
                 , 0.0 SALE_Q9 
              FROM (SELECT A.COMP_CODE
                         , A.CUSTOM_CODE CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME 
                         , SUM(B.ORDER_Q) SALE_Q1
                         , 0.0  SALE_Q2
                      FROM SOF100T A WITH (NOLOCK)
                         , SOF110T B WITH (NOLOCK)
                         , BCM100T C WITH (NOLOCK)
                     WHERE A.COMP_CODE   = B.COMP_CODE 
                       AND A.DIV_CODE    = B.DIV_CODE 
                       AND A.ORDER_NUM   = B.ORDER_NUM
                       AND A.COMP_CODE   = C.COMP_CODE 
                       AND A.CUSTOM_CODE = C.CUSTOM_CODE 
                       AND SUBSTRING(ORDER_DATE,1,6) = #{INOUT_DATE_FR}
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                       AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>
                       AND A.COMP_CODE   = #{S_COMP_CODE}
                       AND A.DIV_CODE = #{DIV_CODE}
                     GROUP BY A.COMP_CODE, A.CUSTOM_CODE 
                     UNION ALL
                    SELECT A.COMP_CODE
                         , A.CUSTOM_CODE   CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME
                         , 0.0 SALE_Q1
                         , SUM(B.ORDER_Q)   SALE_Q2
                      FROM SOF100T A WITH (NOLOCK)
                         , SOF110T B WITH (NOLOCK)
                         , BCM100T C WITH (NOLOCK)
                     WHERE A.COMP_CODE   = B.COMP_CODE 
                       AND A.DIV_CODE    = B.DIV_CODE 
                       AND A.ORDER_NUM   = B.ORDER_NUM
                       AND A.COMP_CODE   = C.COMP_CODE 
                       AND A.CUSTOM_CODE = C.CUSTOM_CODE 
                       AND SUBSTRING(ORDER_DATE,1,6) = #{INOUT_DATE}
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                       AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>
                       AND A.COMP_CODE   = #{S_COMP_CODE}
                       AND A.DIV_CODE = #{DIV_CODE}
                     GROUP BY A.COMP_CODE,  A.CUSTOM_CODE 
                   ) Z
             UNION ALL
                    --'--2.수불정보에서
            SELECT Y.COMP_CODE 
                 , Y.CUSTOM_CODE
                 , uniLITE.fnCustNameComp(Y.COMP_CODE, #{S_USER_ID}, Y.CUSTOM_CODE) AS CUSTOM_NAME 
                 , 0.0 SALE_Q1
                 , 0.0 SALE_Q2
                 , 0.0 SALE_Q3
                 , Y.SALE_Q4
                 , Y.SALE_Q5
                 , 0.0  SALE_Q6
                 , 0.0 SALE_Q7
                 , 0.0 SALE_Q8
                 , 0.0 SALE_Q9
              FROM (SELECT    A.COMP_CODE
                         , A.INOUT_CODE CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME 
                         , SUM(INOUT_Q)  SALE_Q4
                         , 0.0 SALE_Q5   
                      FROM BTR100T A WITH (NOLOCK)
                         , BCM100T C WITH (NOLOCK)
                     WHERE A.INOUT_CODE = C.CUSTOM_CODE
                       AND A.COMP_CODE  = C.COMP_CODE
                       AND SUBSTRING(A.INOUT_DATE,1,6) = #{INOUT_DATE_FR}
                       AND A.CREATE_LOC = '1' 
                       AND A.INOUT_TYPE = '2' 
                       AND A.INOUT_CODE LIKE #{CUSTOM_CODE} + '%'
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                       AND A.INOUT_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>
                       AND A.COMP_CODE  = #{S_COMP_CODE}
                       AND A.DIV_CODE = #{DIV_CODE}
                     GROUP BY A.COMP_CODE, A.INOUT_CODE 
                     UNION ALL
                    SELECT A.COMP_CODE
                         , A.INOUT_CODE CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME 
                         , 0.0 SALE_Q4
                         , SUM(INOUT_Q) SALE_Q5
                      FROM BTR100T A WITH (NOLOCK)
                         , BCM100T C WITH (NOLOCK)
                     WHERE A.INOUT_CODE = C.CUSTOM_CODE
                       AND A.COMP_CODE  = C.COMP_CODE
                       AND SUBSTRING(A.INOUT_DATE,1,6) = #{INOUT_DATE}
                       AND A.CREATE_LOC = '1' 
                       AND A.INOUT_TYPE = '2' 
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                       AND A.INOUT_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>
                       AND A.COMP_CODE  = #{S_COMP_CODE}
                       AND A.DIV_CODE = #{DIV_CODE}
                     GROUP BY A.COMP_CODE, A.INOUT_CODE  
                     UNION ALL 
                    SELECT    A.COMP_CODE
                         , A.INOUT_CODE CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME
                         , SUM(INOUT_Q * (-1))  SALE_Q4
                         , 0.0 SALE_Q5   
                      FROM BTR100T A WITH (NOLOCK)
                         , BCM100T C WITH (NOLOCK)
                     WHERE A.INOUT_CODE = C.CUSTOM_CODE
                       AND A.COMP_CODE  = C.COMP_CODE
                       AND SUBSTRING(A.INOUT_DATE,1,6) = #{INOUT_DATE_FR}
                       AND A.CREATE_LOC = '1' 
                       AND A.INOUT_TYPE = '3' 
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                       AND A.INOUT_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>
                       AND A.COMP_CODE  = #{S_COMP_CODE}
                      AND A.DIV_CODE = #{DIV_CODE}
                    GROUP BY A.COMP_CODE, A.INOUT_CODE 
                    UNION ALL
                   SELECT    A.COMP_CODE
                        , A.INOUT_CODE CUSTOM_CODE
                        , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME 
                        , 0.0 SALE_Q4
                        , SUM(INOUT_Q * (-1)) SALE_Q5
                     FROM BTR100T A WITH (NOLOCK)
                        , BCM100T C WITH (NOLOCK)
                    WHERE A.INOUT_CODE = C.CUSTOM_CODE
                      AND A.COMP_CODE  = C.COMP_CODE
                      AND SUBSTRING(A.INOUT_DATE,1,6) = #{INOUT_DATE}
                      AND A.CREATE_LOC = '1' 
                      AND A.INOUT_TYPE = '3' 
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                       AND A.INOUT_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>
                       AND A.COMP_CODE  = #{S_COMP_CODE}
                      AND A.DIV_CODE = #{DIV_CODE}
                    GROUP BY A.COMP_CODE, A.INOUT_CODE 
                   ) Y
             UNION ALL
                    --'--3. 매출정보에서
            SELECT X.COMP_CODE  
                 , X.CUSTOM_CODE
                 , uniLITE.fnCustNameComp(X.COMP_CODE, #{S_USER_ID}, X.CUSTOM_CODE) AS CUSTOM_NAME 
                 , 0.0 SALE_Q1
                 , 0.0 SALE_Q2
                 , 0.0 SALE_Q3
                 , 0.0 SALE_Q4
                 , 0.0 SALE_Q5
                 , 0.0 SALE_Q6  
                 , X.SALE_Q7
                 , X.SALE_Q8
                 , 0.0  SALE_Q9
              FROM (SELECT    A.COMP_CODE
                         , A.SALE_CUSTOM_CODE CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME 
                         , SUM(B.SALE_Q) SALE_Q7
                         , 0.0 SALE_Q8
                      FROM SSA100T A WITH (NOLOCK)
                         , SSA110T B WITH (NOLOCK)
                         , BCM100T C WITH (NOLOCK)
                     WHERE A.COMP_CODE        = B.COMP_CODE
                       AND A.DIV_CODE         = B.DIV_CODE
                       AND A.BILL_NUM         = B.BILL_NUM
                       AND A.COMP_CODE        = C.COMP_CODE
                       AND A.SALE_CUSTOM_CODE = C.CUSTOM_CODE
                       AND SUBSTRING(A.SALE_DATE,1,6) = #{INOUT_DATE_FR}
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">                   
                       AND A.SALE_CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>
                       AND A.COMP_CODE = #{S_COMP_CODE}
                       AND A.DIV_CODE = #{DIV_CODE}
                     GROUP BY A.COMP_CODE, A.SALE_CUSTOM_CODE 
                     UNION ALL
                    SELECT    A.COMP_CODE
                         , A.SALE_CUSTOM_CODE CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME 
                         , 0.0 SALE_Q7
                         , SUM(B.SALE_Q) SALE_Q8
                      FROM SSA100T A WITH (NOLOCK)
                         , SSA110T B WITH (NOLOCK)
                         , BCM100T C WITH (NOLOCK)
                     WHERE A.COMP_CODE        = B.COMP_CODE
                       AND A.DIV_CODE         = B.DIV_CODE
                       AND A.BILL_NUM         = B.BILL_NUM
                       AND A.COMP_CODE        = C.COMP_CODE
                       AND A.SALE_CUSTOM_CODE = C.CUSTOM_CODE
                       AND SUBSTRING(A.SALE_DATE,1,6) = #{INOUT_DATE}
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">                   
                       AND A.SALE_CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>
                       AND A.COMP_CODE = #{S_COMP_CODE}
                       AND A.DIV_CODE = #{DIV_CODE}
                     GROUP BY A.COMP_CODE, A.SALE_CUSTOM_CODE 
                   ) X
           ) AA
     GROUP BY AA.COMP_CODE, AA.CUSTOM_CODE 
     </if>
     <if test="rdoSelect == &quot;2&quot;">                     
                --Case 2    '-- 금액을 선택했을때
                
    --sma310skrv.Csma310skrv[fnSma310nq] Query02 
    SELECT AA.CUSTOM_CODE
         , MAX(uniLITE.fnCustNameComp(AA.COMP_CODE, #{S_USER_ID}, AA.CUSTOM_CODE)) as CUSTOM_NAME 
         , unilite.fnFormat(AA.COMP_CODE, SUM(AA.SALE_Q1), 'S_FSET_I') SALE_Q1
         , unilite.fnFormat(AA.COMP_CODE, SUM(AA.SALE_Q2), 'S_FSET_I') SALE_Q2
         , unilite.fnFormat(AA.COMP_CODE, (CASE WHEN SUM(AA.SALE_Q1) = 0 
                                                     THEN 0
                                                WHEN SUM(AA.SALE_Q1) &gt; 0 
                                                     THEN (CASE WHEN SUM(AA.SALE_Q2) &gt; 0 
                                                                     THEN ((SUM(AA.SALE_Q2) - SUM(AA.SALE_Q1)) / SUM(AA.SALE_Q1) * 100 )
                                                                WHEN SUM(AA.SALE_Q2) &lt; 0 
                                                                     THEN ((SUM(AA.SALE_Q2) - SUM(AA.SALE_Q1)) / SUM(AA.SALE_Q1) * 100) 
                                                                WHEN SUM(AA.SALE_Q2) = 0 
                                                                     THEN -100 
                                                            END)  
                                                WHEN SUM(AA.SALE_Q1) &lt; 0 
                                                     THEN (CASE WHEN SUM(AA.SALE_Q2) &gt; 0 
                                                                     THEN ((SUM(AA.SALE_Q2) - SUM(AA.SALE_Q1)) / SUM(AA.SALE_Q1) * -100 )
                                                                WHEN SUM(AA.SALE_Q2) &lt; 0 
                                                                     THEN ((SUM(AA.SALE_Q2) - SUM(AA.SALE_Q1)) / SUM(AA.SALE_Q1) * 100) 
                                                                WHEN SUM(AA.SALE_Q2) = 0 
                                                                     THEN 100 
                                                            END)  
                                            END), 'S_FSET_I') SALE_Q3
         , unilite.fnFormat(AA.COMP_CODE, SUM(AA.SALE_Q4), 'S_FSET_I') SALE_Q4
         , unilite.fnFormat(AA.COMP_CODE, SUM(AA.SALE_Q5), 'S_FSET_I') SALE_Q5
         , unilite.fnFormat(AA.COMP_CODE, (CASE WHEN SUM(AA.SALE_Q4) = 0 
                                                     THEN 0
                                                WHEN SUM(AA.SALE_Q4) &gt; 0 
                                                     THEN (CASE WHEN SUM(AA.SALE_Q5) &gt; 0 
                                                                     THEN ((SUM(AA.SALE_Q5) - SUM(AA.SALE_Q4)) / SUM(AA.SALE_Q4) * 100 )
                                                                WHEN SUM(AA.SALE_Q5) &lt; 0 
                                                                     THEN ((SUM(AA.SALE_Q5) - ABS(SUM(AA.SALE_Q4))) / SUM(AA.SALE_Q4) * 100) 
                                                                WHEN SUM(AA.SALE_Q5) = 0 
                                                                     THEN -100 
                                                            END)  
                                                WHEN SUM(AA.SALE_Q4) &lt; 0 
                                                     THEN (CASE WHEN SUM(AA.SALE_Q5) &gt; 0 
                                                                     THEN ((SUM(AA.SALE_Q5) - SUM(AA.SALE_Q4)) / SUM(AA.SALE_Q4) * -100 )
                                                                WHEN SUM(AA.SALE_Q5) &lt; 0 
                                                                     THEN ((SUM(AA.SALE_Q5) - ABS(SUM(AA.SALE_Q4))) / SUM(AA.SALE_Q4) * 100) 
                                                                WHEN SUM(AA.SALE_Q5) = 0 
                                                                     THEN 100 
                                                            END)  
                                            END), 'S_FSET_I') SALE_Q6
         , unilite.fnFormat(AA.COMP_CODE, SUM(AA.SALE_Q7), 'S_FSET_I') SALE_Q7
         , unilite.fnFormat(AA.COMP_CODE, SUM(AA.SALE_Q8), 'S_FSET_I') SALE_Q8
         , unilite.fnFormat(AA.COMP_CODE, (CASE WHEN SUM(AA.SALE_Q7) = 0 
                                                     THEN 0
                                                WHEN SUM(AA.SALE_Q7) &gt; 0 
                                                     THEN (CASE WHEN SUM(AA.SALE_Q8) &gt; 0 
                                                                     THEN ((SUM(AA.SALE_Q8) - SUM(AA.SALE_Q7)) / SUM(AA.SALE_Q7) * 100 )
                                                                WHEN SUM(AA.SALE_Q8) &lt; 0 
                                                                     THEN ((SUM(AA.SALE_Q8) - SUM(AA.SALE_Q7)) / SUM(AA.SALE_Q7) * 100) 
                                                                WHEN SUM(AA.SALE_Q8) = 0 
                                                                     THEN -100 
                                                            END)  
                                                WHEN SUM(AA.SALE_Q7) &lt; 0 
                                                     THEN (CASE WHEN SUM(AA.SALE_Q8) &gt; 0 
                                                                     THEN ((SUM(AA.SALE_Q8) - SUM(AA.SALE_Q7)) / SUM(AA.SALE_Q7) * -100 )
                                                                WHEN SUM(AA.SALE_Q8) &lt; 0 
                                                                     THEN ((SUM(AA.SALE_Q8) - SUM(AA.SALE_Q7)) / SUM(AA.SALE_Q7) * 100) 
                                                                WHEN SUM(AA.SALE_Q8) = 0 
                                                                     THEN 100 
                                                            END)  
                                            END), 'S_FSET_I') SALE_Q9
      FROM (
                    --'--1.수주정보에서
            SELECT Z.COMP_CODE  
                 , Z.CUSTOM_CODE 
                 , uniLITE.fnCustNameComp(Z.COMP_CODE, #{S_USER_ID}, Z.CUSTOM_CODE) AS CUSTOM_NAME 
                 , Z.SALE_Q1
                 , Z.SALE_Q2
                 , 0.0 SALE_Q3
                 , 0.0 SALE_Q4
                 , 0.0 SALE_Q5
                 , 0.0 SALE_Q6
                 , 0.0 SALE_Q7
                 , 0.0 SALE_Q8
                 , 0.0 SALE_Q9
              FROM (SELECT A.COMP_CODE,A.CUSTOM_CODE CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME 
                         , SUM(A.ORDER_O * A.EXCHG_RATE_O)         SALE_Q1
                         , 0.0 SALE_Q2
                      FROM SOF100T A WITH (NOLOCK)
                         , BCM100T C WITH (NOLOCK)
                     WHERE A.CUSTOM_CODE = C.CUSTOM_CODE 
                       AND A.COMP_CODE   = C.COMP_CODE 
                       AND SUBSTRING(ORDER_DATE,1,6) = #{INOUT_DATE_FR}
                       AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">                   
                       AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>   
                       AND A.COMP_CODE   = #{S_COMP_CODE}
                       AND A.DIV_CODE = #{DIV_CODE}
                     GROUP BY A.COMP_CODE,A.CUSTOM_CODE 
                     UNION ALL
                    SELECT A.COMP_CODE
                         , A.CUSTOM_CODE  CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME 
                         , 0.0  SALE_Q1
                         , SUM(A.ORDER_O * A.EXCHG_RATE_O)  SALE_Q2
                      FROM SOF100T A WITH (NOLOCK)
                         , BCM100T C WITH (NOLOCK)
                     WHERE A.CUSTOM_CODE = C.CUSTOM_CODE 
                       AND A.COMP_CODE   = C.COMP_CODE 
                       AND SUBSTRING(ORDER_DATE,1,6) = #{INOUT_DATE}
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">                   
                       AND A.CUSTOM_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>   
                       AND A.COMP_CODE   = #{S_COMP_CODE}
                       AND A.DIV_CODE = #{DIV_CODE}
                     GROUP BY A.COMP_CODE, A.CUSTOM_CODE 
                   ) Z
             UNION ALL
                    --'--2.수불정보에서
            SELECT Y.COMP_CODE   
                 , Y.CUSTOM_CODE 
                 , uniLITE.fnCustNameComp(Y.COMP_CODE, #{S_USER_ID}, Y.CUSTOM_CODE) AS CUSTOM_NAME 
                 , 0.0 SALE_Q1
                 , 0.0 SALE_Q2
                 , 0.0 SALE_Q3
                 , Y.SALE_Q4
                 , Y.SALE_Q5
                 , 0.0  SALE_Q6
                 , 0.0 SALE_Q7
                 , 0.0 SALE_Q8
                 , 0.0 SALE_Q9
              FROM (SELECT A.COMP_CODE
                         , A.INOUT_CODE CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME
                         , SUM(INOUT_I)  SALE_Q4
                         , 0.0 SALE_Q5   
                      FROM BTR100T A WITH (NOLOCK)
                         , BCM100T C WITH (NOLOCK)
                     WHERE A.INOUT_CODE  = C.CUSTOM_CODE
                       AND A.COMP_CODE   = C.COMP_CODE 
                       AND A.CREATE_LOC  = '1' 
                       AND SUBSTRING(A.INOUT_DATE,1,6) = #{INOUT_DATE}
                       AND A.INOUT_TYPE  = '2' 
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">                     
                       AND A.INOUT_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>
                       AND A.COMP_CODE  = #{S_COMP_CODE}
                       AND A.DIV_CODE = #{DIV_CODE}
                     GROUP BY A.COMP_CODE, A.INOUT_CODE 
                     UNION ALL
                    SELECT A.COMP_CODE
                         , A.INOUT_CODE CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME 
                         , 0.0 SALE_Q4   
                         , SUM(INOUT_I)  SALE_Q5
                      FROM BTR100T A WITH (NOLOCK)
                         , BCM100T C WITH (NOLOCK)
                     WHERE A.INOUT_CODE  = C.CUSTOM_CODE
                       AND A.COMP_CODE   = C.COMP_CODE 
                       AND A.CREATE_LOC  = '1' 
                       AND SUBSTRING(A.INOUT_DATE,1,6) = #{INOUT_DATE}
                       AND A.INOUT_TYPE  = '2' 
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">                     
                       AND A.INOUT_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>
                       AND A.COMP_CODE  = #{S_COMP_CODE}
                       AND A.DIV_CODE = #{DIV_CODE}
                     GROUP BY A.COMP_CODE, A.INOUT_CODE 
                     UNION ALL
                    SELECT A.COMP_CODE
                         , A.INOUT_CODE CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME 
                         , SUM(INOUT_I * (-1)) SALE_Q4 
                         , 0.0 SALE_Q5
                      FROM BTR100T A WITH (NOLOCK)
                         , BCM100T C WITH (NOLOCK)
                     WHERE A.INOUT_CODE = C.CUSTOM_CODE
                       AND A.COMP_CODE  = C.COMP_CODE 
                       AND A.CREATE_LOC = '1' 
                       AND SUBSTRING(A.INOUT_DATE,1,6) = #{INOUT_DATE_FR}
                       AND A.INOUT_TYPE ='3' 
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">                     
                       AND A.INOUT_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>
                       AND A.COMP_CODE  = #{S_COMP_CODE}
                       AND A.DIV_CODE = #{DIV_CODE}
                     GROUP BY A.COMP_CODE, A.INOUT_CODE 
                     UNION ALL
                    SELECT A.COMP_CODE
                         , A.INOUT_CODE CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME 
                         , 0.0 SALE_Q4
                         , SUM(INOUT_I * (-1)) SALE_Q5
                      FROM BTR100T A WITH (NOLOCK)
                         , BCM100T C WITH (NOLOCK)
                     WHERE A.INOUT_CODE = C.CUSTOM_CODE
                       AND A.COMP_CODE  = C.COMP_CODE 
                       AND A.CREATE_LOC = '1' 
                       AND SUBSTRING(A.INOUT_DATE,1,6) = #{INOUT_DATE}
                       AND A.INOUT_TYPE ='3' 
                    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">                      
                       AND A.INOUT_CODE LIKE #{CUSTOM_CODE} + '%'
                    </if>   
                       AND A.DIV_CODE = #{DIV_CODE}
                     GROUP BY A.COMP_CODE,A.INOUT_CODE 
                   ) Y
             UNION ALL
                    --'--3. 매출정보에서
            SELECT X.COMP_CODE  
                 , X.CUSTOM_CODE
                 , uniLITE.fnCustNameComp(X.COMP_CODE, #{S_USER_ID}, X.CUSTOM_CODE) AS CUSTOM_NAME 
                 , 0.0 SALE_Q1
                 , 0.0 SALE_Q2
                 , 0.0 SALE_Q3
                 , 0.0 SALE_Q4
                 , 0.0 SALE_Q5
                 , 0.0 SALE_Q6  
                 , X.SALE_Q7
                 , X.SALE_Q8
                 , 0.0 SALE_Q9
              FROM (SELECT A.COMP_CODE
                         , A.SALE_CUSTOM_CODE CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME 
                         , SUM(B.SALE_LOC_AMT_I) SALE_Q7 
                         , 0.0 SALE_Q8
                      FROM SSA100T A WITH (NOLOCK)
                                   INNER JOIN SSA110T B WITH (NOLOCK)
                                           ON A.COMP_CODE = B.COMP_CODE
                                          AND A.DIV_CODE  = B.DIV_CODE
                                          AND A.BILL_NUM  = B.BILL_NUM 
                                   INNER JOIN BCM100T C WITH (NOLOCK)
                                           ON A.SALE_CUSTOM_CODE = C.CUSTOM_CODE
                                          AND A.COMP_CODE        = C.COMP_CODE
                     WHERE SUBSTRING(A.SALE_DATE,1,6) = #{INOUT_DATE_FR}
                       AND A.DIV_CODE                 = #{DIV_CODE}
                       AND A.COMP_CODE = #{S_COMP_CODE}
                     GROUP BY A.COMP_CODE, A.SALE_CUSTOM_CODE 
                     UNION ALL
                    SELECT A.COMP_CODE
                         , A.SALE_CUSTOM_CODE CUSTOM_CODE
                         , MAX(uniLITE.fnCustNameComp(C.COMP_CODE, #{S_USER_ID}, C.CUSTOM_CODE)) AS CUSTOM_NAME 
                         , 0.0 SALE_Q7
                         , SUM(B.SALE_LOC_AMT_I) SALE_Q8
                      FROM SSA100T A WITH (NOLOCK)
                                   INNER JOIN SSA110T B WITH (NOLOCK)
                                           ON A.COMP_CODE = B.COMP_CODE
                                          AND A.DIV_CODE  = B.DIV_CODE
                                          AND A.BILL_NUM  = B.BILL_NUM 
                                   INNER JOIN BCM100T C WITH (NOLOCK)
                                           ON A.SALE_CUSTOM_CODE = C.CUSTOM_CODE
                                          AND A.COMP_CODE        = C.COMP_CODE
                     WHERE SUBSTRING(A.SALE_DATE,1,6) = #{INOUT_DATE}
                       AND A.DIV_CODE                 = #{DIV_CODE}
                       AND A.COMP_CODE = #{S_COMP_CODE}
                     GROUP BY A.COMP_CODE, A.SALE_CUSTOM_CODE 
                   ) X
           ) AA
     GROUP BY AA.COMP_CODE, AA.CUSTOM_CODE
     </if>
    </select>   
	
</mapper>