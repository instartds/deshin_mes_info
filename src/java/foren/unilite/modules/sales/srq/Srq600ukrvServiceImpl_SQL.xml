<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="srq600ukrvServiceImpl">
	
	<select id="srq600ukrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		/* srq600ukrvServiceImpl.selectList1 */
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
			
			DECLARE @CompCode		NVARCHAR(08)	/* 법인코드    */
				  , @UserId			NVARCHAR(100)	/* 사용자ID    */
				  , @RefItem		NVARCHAR(01)	/* 명칭 참조 유형  */
			
			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			
			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId
			
			SET @RefItem = ISNULL(@RefItem, N'0')
			
			SELECT DISTINCT
				   A.COMP_CODE
				 , A.DIV_CODE
				 , C.ISSUE_REQ_NUM
				 --, C.ISSUE_REQ_SEQ
				 , A.PACK_NO
				 , D.PACK_NO		AS ISSUE_PACK_NO
				 , D.ISSUE_DATE
				 , D.ISSUE_PRSN
				 , C.CUSTOM_CODE
				 , CASE WHEN @RefItem = '1' THEN E.CUSTOM_NAME1
						WHEN @RefItem = '2' THEN E.CUSTOM_NAME2
											ELSE E.CUSTOM_NAME
					END									AS CUSTOM_NAME
			  FROM					SRQ500T A	WITH (NOLOCK)
					INNER JOIN		SRQ510T B	WITH (NOLOCK)
								 ON A.COMP_CODE		= B.COMP_CODE
								AND A.DIV_CODE		= B.DIV_CODE
								AND A.PACK_NO		= B.PACK_NO
					INNER JOIN		SRQ100T C	WITH (NOLOCK)
								 ON B.COMP_CODE		= C.COMP_CODE
								AND B.DIV_CODE		= C.DIV_CODE
								AND B.ISSUE_REQ_NUM	= C.ISSUE_REQ_NUM
								AND B.ISSUE_REQ_SEQ	= C.ISSUE_REQ_SEQ
					LEFT OUTER JOIN	SRQ600T D	WITH (NOLOCK)
								 ON A.COMP_CODE		= D.COMP_CODE
								AND A.DIV_CODE		= D.DIV_CODE
								AND A.PACK_NO		= D.PACK_NO
					LEFT OUTER JOIN BCM100T E	WITH (NOLOCK)
								 ON C.COMP_CODE		= E.COMP_CODE
								AND C.CUSTOM_CODE	= E.CUSTOM_CODE
			 WHERE A.COMP_CODE		= @CompCode
			   AND A.DIV_CODE		= #{DIV_CODE}
			   AND C.ISSUE_REQ_NUM	= #{ISSUE_REQ_NUM}
			 ORDER BY A.COMP_CODE
				 , A.DIV_CODE
				 , A.PACK_NO
			
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

	<update id="srq600ukrvServiceImpl.insert" parameterType="Map">
		/* srq600rkrvServiceImpl.insert */
		INSERT INTO SRQ600T
			 ( COMP_CODE		, DIV_CODE			, PACK_NO
			 , ISSUE_DATE		, CUSTOM_CODE		, ISSUE_PRSN
			 , INSERT_DB_USER	, INSERT_DB_TIME	, UPDATE_DB_USER	, UPDATE_DB_TIME	)
		VALUES
			 ( #{S_COMP_CODE}	, #{DIV_CODE}		, #{ISSUE_PACK_NO}
			 , #{ISSUE_DATE}	, #{CUSTOM_CODE}	, #{ISSUE_PRSN}
			 , #{S_USER_ID}		, GETDATE()			, #{S_USER_ID}		, GETDATE()	)
	</update>

	<update id="srq600ukrvServiceImpl.insertLogTransaction" parameterType="Map">
		/* srq600rkrvServiceImpl.insertLogTransaction */
		INSERT INTO L_BTR100T
			 ( KEY_VALUE			, OPR_FLAG
			 , COMP_CODE			, DIV_CODE
			 , INOUT_NUM			, INOUT_SEQ
			 , INOUT_TYPE			, INOUT_METH		, INOUT_TYPE_DETAIL	, INOUT_CODE_TYPE
			 , INOUT_CODE			, WH_CODE			, INOUT_DATE		, ITEM_CODE
			 , ITEM_STATUS			, INOUT_Q
			 , INOUT_P
			 , INOUT_I
			 , MONEY_UNIT			, INOUT_FOR_P
			 , INOUT_FOR_O
			 , EXCHG_RATE_O			, ORDER_TYPE		, ORDER_NUM			, ORDER_SEQ
			 , INOUT_PRSN			, BASIS_NUM			, BASIS_SEQ			, ACCOUNT_YNC
			 , ACCOUNT_Q			, CREATE_LOC		, SALE_C_YN			, REMARK
			 , ORDER_UNIT			, TRNS_RATE			, PROJECT_NO		, ORDER_UNIT_Q
			 , ORDER_UNIT_P			, ORDER_UNIT_FOR_P	, ISSUE_REQ_NUM		, ISSUE_REQ_SEQ
			 , DVRY_CUST_CD			, DISCOUNT_RATE
			 , INOUT_TAX_AMT
			 , TAX_TYPE				, LOT_NO			, SALE_DIV_CODE		, SALE_CUSTOM_CODE
			 , BILL_TYPE			, SALE_TYPE			, PRICE_YN			, ORDER_UNIT_O
			 , SALE_PRSN			, FR_ACCOUNT		, TO_ACCOUNT		, LC_NUM
			 , TRADE_LOC			, DELIVERY_DATE		, DELIVERY_TIME		, WH_CELL_CODE
			 , AGENT_TYPE			, DEPT_CODE			, TRANS_COST		, PRICE_TYPE
			 , INOUT_WGT_Q			, INOUT_FOR_WGT_P	, INOUT_WGT_P		, INOUT_VOL_Q
			 , INOUT_FOR_VOL_P		, INOUT_VOL_P		, WGT_UNIT			, UNIT_WGT
			 , VOL_UNIT				, UNIT_VOL			, NATION_INOUT		, SALE_C_DATE
			 , INSERT_DB_USER		, INSERT_DB_TIME	, UPDATE_DB_USER	, UPDATE_DB_TIME
			 , PACK_UNIT_Q			, BOX_Q				, EACH_Q			, LOSS_Q
			 , REMARK_INTER
			 )
		SELECT #{KEY_VALUE}			, 'N'
			 , A.COMP_CODE			, A.DIV_CODE
			 , ''					, ROW_NUMBER() OVER (ORDER BY A.ITEM_CODE, A.LOT_NO)
			 , N'2'					, '1'				, '10'				, N'4'
			 , B.CUSTOM_CODE		, A.PACK_WH_CODE	, C.ISSUE_DATE		, A.ITEM_CODE
			 , '1'					, CAST(A.PACK_QTY AS NUMERIC(30, 6)) * ISNULL(B.TRANS_RATE, 1)
			 , CAST(B.ISSUE_REQ_PRICE AS NUMERIC(30, 6)) / ISNULL(B.TRANS_RATE, 1) * B.EXCHANGE_RATE / unilite.fnGetExchangeRateBasis(A.COMP_CODE, B.MONEY_UNIT)
			 , CAST(B.ISSUE_REQ_AMT / B.ISSUE_REQ_QTY AS NUMERIC(30, 6)) * B.EXCHANGE_RATE / unilite.fnGetExchangeRateBasis(A.COMP_CODE, B.MONEY_UNIT)
			 , B.MONEY_UNIT			, CAST(B.ISSUE_REQ_PRICE AS NUMERIC(30, 6)) / ISNULL(B.TRANS_RATE, 1)
			 , B.ISSUE_FOR_AMT / B.ISSUE_REQ_QTY
			 , B.EXCHANGE_RATE		, B.ORDER_TYPE		, B.ORDER_NUM		, B.SER_NO
			 , C.ISSUE_PRSN			, ''				, '0'				, 'Y'
			 , 0					, '1'				, N'N'				, ''
			 , B.ORDER_UNIT			, B.TRANS_RATE		, B.PROJECT_NO		, A.PACK_QTY
			 , B.ISSUE_REQ_PRICE	, B.ISSUE_FOR_PRICE	, A.ISSUE_REQ_NUM	, A.ISSUE_REQ_SEQ
			 , ''					, '0'
			 , CAST(B.ISSUE_REQ_TAX_AMT / B.ISSUE_REQ_QTY AS NUMERIC(30, 6)) * B.EXCHANGE_RATE / unilite.fnGetExchangeRateBasis(A.COMP_CODE, B.MONEY_UNIT)
			 , B.TAX_TYPE			, A.LOT_NO			, A.DIV_CODE		, B.CUSTOM_CODE
			 , B.BILL_TYPE			, B.ORDER_TYPE		, '2'				, B.ISSUE_REQ_AMT / B.ISSUE_REQ_QTY
			 , D.ORDER_PRSN			, ''				, ''				, ''
			 , '1'					, E.DVRY_DATE		, E.DVRY_TIME		, A.PACK_WH_CELL_CODE
			 , ''					, '*'				, NULL				, ''
			 , '0'					, '0'				, '0'				, '0'
			 , '0'					, '0'				, ''				, '0'
			 , ''					, '0'				, '1'				, B.ISSUE_DATE
			 , 'omega+'				, GETDATE()			, 'omega+'			, GETDATE()
			 , '0'					, '0'				, '0'				, '0'
			 , ''
		FROM SRQ510T A WITH (NOLOCK)
			INNER JOIN SRQ100T B WITH (NOLOCK)	ON B.COMP_CODE=A.COMP_CODE	AND B.DIV_CODE=A.DIV_CODE	AND B.ISSUE_REQ_NUM=A.ISSUE_REQ_NUM		AND B.ISSUE_REQ_SEQ=A.ISSUE_REQ_SEQ
			INNER JOIN SRQ600T C WITH (NOLOCK)	ON C.COMP_CODE=A.COMP_CODE	AND C.DIV_CODE=A.DIV_CODE	AND C.PACK_NO=A.PACK_NO 
			INNER JOIN SOF100T D WITH (NOLOCK)	ON D.COMP_CODE=B.COMP_CODE	AND D.DIV_CODE=B.DIV_CODE	AND D.ORDER_NUM=B.ORDER_NUM
			INNER JOIN SOF110T E WITH (NOLOCK)	ON E.COMP_CODE=B.COMP_CODE	AND E.DIV_CODE=B.DIV_CODE	AND E.ORDER_NUM=B.ORDER_NUM				AND E.SER_NO=B.SER_NO
		WHERE A.COMP_CODE		= #{S_COMP_CODE}
		  AND A.DIV_CODE		= #{DIV_CODE}
		  AND A.ISSUE_YN		= 'N'
		  AND A.ISSUE_REQ_NUM	= #{ISSUE_REQ_NUM}
	</update>

	<update id="srq600ukrvServiceImpl.updateMaster" parameterType="Map">
		/* srq600rkrvServiceImpl.updateMaster */
		UPDATE A
		   SET A.ISSUE_YN		= 'Y'
			 , A.UPDATE_DB_USER	= #{S_USER_ID}
			 , A.UPDATE_DB_TIME	= GETDATE()
		  FROM SRQ510T A
				INNER JOIN		SRQ600T B
							 ON A.COMP_CODE		= B.COMP_CODE
							AND A.DIV_CODE		= B.DIV_CODE
							AND A.PACK_NO		= B.PACK_NO
		 WHERE A.COMP_CODE		= #{S_COMP_CODE}
		   AND A.DIV_CODE		= #{DIV_CODE}
		   AND A.ISSUE_REQ_NUM	= #{ISSUE_REQ_NUM}
		   AND A.ISSUE_YN		= 'N'
	</update>

	<update id="srq600ukrvServiceImpl.spUSP_SALES_Str103ukr" parameterType="Map" statementType="CALLABLE">
		{call USP_SALES_Str103ukr (
			#{KEY_VALUE			, mode=IN	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{INOUT_NUM			, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{ERROR_DESC		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String},
			#{SALE_PRSN_CHK		, mode=OUT	, jdbcType=VARCHAR	, javaType=java.lang.String}
		)}
	</update>
	
	<select id="srq600ukrvServiceImpl.checkBarcode" parameterType="Map" resultType="rMap">
		/* srq600rkrvServiceImpl.checkBarcode */
		SELECT *
		  FROM uniLITE.fnGetBarcodeInfo_SITE(#{S_COMP_CODE}, #{DIV_CODE}, #{BARCODE})
	</select>

	<select id="srq600ukrvServiceImpl.selectRequestList" parameterType="Map" resultType="rMap">
		BEGIN
			SET NOCOUNT ON
			SET ARITHABORT ON
			
			DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
				  , @UserId      NVARCHAR(100) /* 사용자ID    */
				  , @LangType    NVARCHAR(2)  /* 언어구분    */
				  , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
				  , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
				  , @TimeSI      NVARCHAR(01)
				  , @TimeSR      NVARCHAR(01)
				  , @TimeSS      NVARCHAR(01)
		
			SET @CompCode = #{S_COMP_CODE}
			SET @UserId   = #{S_USER_ID}
			SET @LangType = #{S_LANG_CODE}    
		
			/* 명칭 참조 유형 */
			SELECT TOP 1 @RefItem = REF_ITEM
			  FROM BSA300T WITH (NOLOCK)
			 WHERE USER_ID = @UserId
		
			SET @RefItem = ISNULL(@RefItem, N'0')
		
			/* 날짜 포맷 유형 설정 */
			SELECT TOP 1 @DateFormat = CODE_NAME
			  FROM BSA100T WITH (NOLOCK)
			 WHERE COMP_CODE = @CompCode
			   AND MAIN_CODE = N'B044'
			   AND REF_CODE1 = N'Y'
		
			SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		
		
			/* 데이터 조회 */
			SELECT CAST(0 AS BIT)										AS CHOICE
				 , A.COMP_CODE
				 , A.DIV_CODE
				 , A.CUSTOM_CODE
				 , A.CUSTOM_NAME
				 , A.ISSUE_REQ_NUM
				 , MAX(CASE WHEN A.ITEM_SEQ = 1 THEN ITEM_NAME ELSE '' END) +
					   CASE WHEN COUNT(A.ISSUE_REQ_SEQ) > 1 THEN ' 외 ' + CONVERT(NVARCHAR, COUNT(A.ISSUE_REQ_SEQ) - 1) + '건'
							ELSE ''
						END												AS ITEM_NAME
				 , MIN(A.ISSUE_REQ_DATE)								AS ISSUE_REQ_DATE
			  FROM (
					SELECT A.COMP_CODE
						 , A.DIV_CODE
						 , A.CUSTOM_CODE
						 ,(CASE WHEN @RefItem = '1' THEN C1.CUSTOM_NAME1
								WHEN @RefItem = '2' THEN C1.CUSTOM_NAME2
													ELSE C1.CUSTOM_NAME
							END)																	AS CUSTOM_NAME
						 , A.ISSUE_REQ_NUM
						 , A.ISSUE_REQ_SEQ
						 , A.ITEM_CODE
						 ,(CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
								WHEN @RefItem = '2' THEN C2.ITEM_NAME2
													ELSE C2.ITEM_NAME
							END)																	AS ITEM_NAME
						 , ROW_NUMBER() OVER(PARTITION BY A.ISSUE_REQ_NUM ORDER BY A.ISSUE_REQ_SEQ)	AS ITEM_SEQ
						 ,(CASE WHEN ISNULL(A.ISSUE_REQ_DATE , '') = '' THEN ''
								ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY', SUBSTRING(A.ISSUE_REQ_DATE, 1, 4))
																		 , 'MM'  , SUBSTRING(A.ISSUE_REQ_DATE, 5, 2))
																		 , 'DD'  , SUBSTRING(A.ISSUE_REQ_DATE, 7, 2))
							END)																	AS ISSUE_REQ_DATE
						 ,(CASE WHEN ISNULL(A.ISSUE_DATE , '') = '' THEN ''
								ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY', SUBSTRING(A.ISSUE_DATE, 1, 4))
																		 , 'MM'  , SUBSTRING(A.ISSUE_DATE, 5, 2))
																		 , 'DD'  , SUBSTRING(A.ISSUE_DATE, 7, 2))
							END)																	AS ISSUE_DATE
						 ,(A.ISSUE_REQ_QTY - A.ISSUE_QTY)											AS NOT_REQ_Q
						 , A.ISSUE_REQ_QTY
						 , A.ISSUE_REQ_PRSN															AS ISSUE_REQ_PRSN
						 , (SELECT COUNT(DISTINCT E.PACK_NO)
							  FROM SRQ510T E	WITH (NOLOCK)
							 WHERE E.COMP_CODE		= A.COMP_CODE
							   AND E.DIV_CODE		= A.DIV_CODE
							   AND E.ISSUE_REQ_NUM	= A.ISSUE_REQ_NUM
							   AND ISNULL(E.ISSUE_YN, 'N')	!= 'Y')									AS PACK_CNT
					  FROM				SRQ100T A  WITH (NOLOCK)
							INNER JOIN  BCM100T C1 WITH (NOLOCK) ON C1.COMP_CODE		= A.COMP_CODE
																AND C1.CUSTOM_CODE		= A.CUSTOM_CODE
							INNER JOIN  BPR100T C2 WITH (NOLOCK) ON C2.COMP_CODE		= A.COMP_CODE
																AND C2.ITEM_CODE		= A.ITEM_CODE
					 WHERE A.COMP_CODE				= @CompCode
			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
					   AND A.ISSUE_DIV_CODE			= #{DIV_CODE}		/*마스터폼 param*/
			</if>
			<if test="@foren.Ognl@isNotEmpty(ISSUE_DATE_FR)">
					   AND A.ISSUE_REQ_DATE		   &gt;= #{ISSUE_DATE_FR}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ISSUE_DATE_TO)">
					   AND A.ISSUE_REQ_DATE		   &lt;= #{ISSUE_DATE_TO}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ISSUE_REQ_NUM)">
					   AND A.ISSUE_REQ_NUM		 LIKE #{ISSUE_REQ_NUM} + '%'
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
					   AND A.CUSTOM_CODE			= #{CUSTOM_CODE}		/* 거래처코드  */
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
					   AND A.CUSTOM_CODE		 LIKE #{CUSTOM_CODE} + '%'	/* 거래처코드  */
			</if>
			<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
					   AND C1.CUSTOM_NAME		 LIKE '%' + #{CUSTOM_NAME} + '%'	/* 거래처명  */
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
					   AND A.ITEM_CODE				= #{ITEM_CODE}		/* 품목코드  */
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
					   AND A.ITEM_CODE			 LIKE #{ITEM_CODE} + '%'	/* 품목코드  */
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
					   AND C2.ITEM_NAME			 LIKE '%' + #{ITEM_NAME} + '%'	/* 품목명  */
			</if>
				   ) A
			 WHERE A.PACK_CNT	&gt; 0
			 GROUP BY A.COMP_CODE
				 , A.DIV_CODE
				 , A.CUSTOM_CODE
				 , A.CUSTOM_NAME
				 , A.ISSUE_REQ_NUM
			 ORDER BY A.ISSUE_REQ_NUM, A.CUSTOM_NAME
			
			SET NOCOUNT OFF
			SET ARITHABORT OFF
		END
	</select>

</mapper>