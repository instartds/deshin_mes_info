<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sco300skrvServiceImpl">
	
	<select id="sco300skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	BEGIN
DECLARE @START_TIME DATETIME
      , @END_TIME   DATETIME
      , @DIFF_TIME  NUMERIC(10, 0)

SET @START_TIME = GETDATE()

			
		/* sco300skrv.Csco300skrv[fnsco300nq] Query01 */
         SELECT A AS CUSTOM_CODE
              , B AS CUSTOM_NAME
              , C AS COLLECT_DATE
              , D AS COLLECT_TYPE
              , MONEY_UNIT
              , E AS COLLECT_AMT
              , EXCHANGE_RATE
              , COLLECT_SUM_AMT
              , Y AS REPAY_AMT
              , F AS NOTE_NUM
              , G AS NOTE_TYPE
              , H AS PUB_CUST_CD
              , I AS NOTE_PUB_DATE
              , J AS PUB_PRSN
              , K AS NOTE_DUE_DATE
              , L AS PUB_ENDOSER
              , X.SAVE_CODE
              , X.SAVE_NAME
              , X.BANK_ACCOUNT
              , M AS COLET_CUST_CD
              , N AS DIV_CODE
              , O AS COLLECT_DIV
              , P AS COLLECT_PRSN
              , Q AS MANAGE_CUSTOM
              , R AS AREA_TYPE
              , S AS AGENT_TYPE
              , T AS PROJECT_NO
              , PJT_CODE
              , PJT_NAME
              , U AS COLLECT_NUM
              , V AS PUB_NUM
              , W AS EX_NUM
              , X AS REMARK
              , SORT
              , NOTE_CREDIT_RATE
              , STB_REMARK
              , ZA AS CARD_ACC_NUM
              , ZB AS RECEIPT_NAME
              , SIGN_DATA 
              , SIGN_DIV_CODE 
              , COLLECT_SEQ
              , DEPT_CODE
            , DEPT_NAME
            , POS_NO
            , RECEIPT_NO
         FROM (SELECT  
                      A.CUSTOM_CODE                                                                        AS 'A'                 /* 고객CD */
                    , uniLITE.fnCustNameComp(#{S_COMP_CODE}, #{S_USER_ID}, B.CUSTOM_CODE)  AS 'B'
                    , unilite.fnGetUserdate(#{S_COMP_CODE}, A.COLLECT_DATE)                         AS 'C'                 /* 수금일 */
                    , (SELECT X.CODE_NAME 
                         FROM BSA100T X WITH (NOLOCK)
                        WHERE X.COMP_CODE = A.COMP_CODE
                          AND X.MAIN_CODE = 'S017'
                          AND X.SUB_CODE  = A.COLLECT_TYPE)                                                AS 'D'                 /* 수금유형 */
                    , (CASE WHEN ISNULL(C1.REF_CODE1,'N') = 'Y'
                            THEN ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 ELSE A.COLLECT_AMT     END), 0)
                            ELSE (CASE WHEN (CASE WHEN C2.SYSTEM_CODE_YN = '1'
                                                  THEN C2.SUB_CODE
                                                  ELSE ISNULL(C2.REF_CODE1,'')
                                              END) IN ('55','56','62')
                                       THEN (CASE WHEN A.EXCHANGE_RATE = 0 
                                                  THEN 0
                                                  ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 ELSE A.COLLECT_AMT / A.EXCHANGE_RATE END), 0)
                                              END)
                                       ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 ELSE A.COLLECT_FOR_AMT END), 0)
                                   END) 
                        END)                                                                               AS 'E'                 /* 수금액 */
                    , (CASE WHEN ISNULL(C1.REF_CODE1,'N') = 'Y'
                            THEN ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN A.COLLECT_AMT     ELSE 0 END), 0) 
                            ELSE (CASE WHEN (CASE WHEN C2.SYSTEM_CODE_YN = '1'
                                                  THEN C2.SUB_CODE
                                                  ELSE ISNULL(C2.REF_CODE1,'')
                                              END) IN ('55','56','62')
                                       THEN (CASE WHEN A.EXCHANGE_RATE = 0 
                                                  THEN 0
                                                  ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN A.COLLECT_AMT / A.EXCHANGE_RATE ELSE 0 END), 0)
                                              END)
                                       ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN A.COLLECT_FOR_AMT ELSE 0 END), 0) 
                                   END) 
                        END)                                                                               AS 'Y'                 /*선수반제액*/
                    , A.NOTE_NUM                                                                           AS 'F'                 /*어음번호*/
                    , (SELECT X.CODE_NAME 
                         FROM BSA100T X WITH (NOLOCK)
                        WHERE X.COMP_CODE = A.COMP_CODE
                          AND X.MAIN_CODE = 'B064'
                          AND X.SUB_CODE  = A.NOTE_TYPE)                                                   AS 'G'                 /*어음구분*/
                    , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, C.CUSTOM_CODE)   AS 'H'
                    , unilite.fnGetUserdate(#{S_COMP_CODE},A.NOTE_PUB_DATE)                         AS 'I'                 /*발행일*/
                    , A.PUB_PRSN                                                                           AS 'J'                 /*발행인*/
                    , unilite.fnGetUserdate(#{S_COMP_CODE},A.NOTE_DUE_DATE)                         AS 'K'                 /*만기일*/
                    , A.PUB_ENDOSER                                                                        AS 'L'                 /*배서인*/
                    , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, D.CUSTOM_CODE)   AS 'M'
                    , E.DIV_NAME                                                                           AS 'N'                 /*사업장*/
                    , F.DIV_NAME                                                                           AS 'O'                 /*수금사업장*/
                    , (SELECT X.CODE_NAME 
                         FROM BSA100T X WITH (NOLOCK)
                        WHERE X.COMP_CODE = A.COMP_CODE
                          AND X.MAIN_CODE = 'S010'
                          AND X.SUB_CODE  = A.COLLECT_PRSN)                                                AS 'P'                 /*수금담당*/
                    , uniLITE.fnCustNameComp(#{S_COMP_CODE},#{S_USER_ID}, G.CUSTOM_CODE)   AS 'Q'
                    , (SELECT X.CODE_NAME 
                         FROM BSA100T X WITH (NOLOCK)
                        WHERE X.COMP_CODE = B.COMP_CODE
                          AND X.MAIN_CODE = 'B056'
                          AND X.SUB_CODE  = B.AREA_TYPE)                                                   AS 'R'                 /*지역*/
                    , (SELECT X.CODE_NAME 
                         FROM BSA100T X WITH (NOLOCK)
                        WHERE X.COMP_CODE = B.COMP_CODE
                          AND X.MAIN_CODE = 'B055'
                          AND X.SUB_CODE  = B.AGENT_TYPE)                                                  AS 'S'                 /* 고객구분*/
                    , A.PROJECT_NO                                                                         AS 'T'                 /* 관리번호*/
                    , A.PJT_CODE                                                                           AS PJT_CODE
                    , K.PJT_NAME                                                                           AS PJT_NAME
                    , A.COLLECT_NUM                                                                        AS 'U'                 /* 수금번호*/
                    , A.PUB_NUM                                                                            AS 'V'                 /* 계산서번호*/
                    , A.EX_NUM                                                                             AS 'W'                 /* 전표번호*/
                    , A.REMARK                                                                             AS 'X'                 /* 비고*/
                    , A.COLLECT_NUM + CAST(A.COLLECT_SEQ AS VARCHAR(8))                                    AS SORT
                    , A.NOTE_CREDIT_RATE                                                                   AS NOTE_CREDIT_RATE    /* 어음인정율*/
                    , ISNULL((SELECT X.REMARK
                                FROM STB100T X WITH (NOLOCK)
                               WHERE X.COMP_CODE = A.COMP_CODE
                                 AND X.PUB_NUM   = A.PUB_NUM), '')                                         AS STB_REMARK          /* 세금계산서의비고 */
                    , A.MONEY_UNIT
                    , A.EXCHANGE_RATE
                    , (CASE WHEN ISNULL(C1.REF_CODE1,'N') = 'Y'                                                                                /*자국화폐여부 */
                            THEN ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 ELSE A.COLLECT_AMT END), 0) * A.EXCHANGE_RATE                  /*자국화폐인 경우 자국금액 * 환율(환율=1) */
                            ELSE (CASE WHEN (CASE WHEN C2.SYSTEM_CODE_YN = '1'
                                                  THEN C2.SUB_CODE
                                                  ELSE ISNULL(C2.REF_CODE1,'')
                                              END) IN ('55','56','62')                                                                         /*타국화폐인 경우 외환차익/외환차손/수수료*/
                                       THEN ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 ELSE A.COLLECT_AMT     END), 0)                     /*자국금액 */
                                       ELSE ISNULL((CASE WHEN A.COLLECT_TYPE = '80' THEN 0 ELSE A.COLLECT_AMT     END), 0)                    /*타국화계 * 환율 */
                                   END) 
                        END)                                                                               AS COLLECT_SUM_AMT
                    , A.CARD_ACC_NUM                                                                       AS 'ZA'
                    , A.RECEIPT_NAME                                                                       AS 'ZB'
                    , Q.SAVE_CODE                                                                          AS SAVE_CODE
                    , Q.SAVE_NAME                                                                          AS SAVE_NAME
                    , uniLITE.fnCipherDecrypt(Q.BANK_ACCOUNT, 'B')                                         AS BANK_ACCOUNT
                    , CASE WHEN A.SIGN_DATA IS NULL THEN 'N' ELSE 'Y' END AS SIGN_DATA
                    , A.DIV_CODE AS SIGN_DIV_CODE
                    , A.COLLECT_SEQ 
                    , A.DEPT_CODE
                    , H.TREE_NAME AS DEPT_NAME
                    , A.POS_NO
                    , A.RECEIPT_NO
                 FROM            SCO100T A WITH (NOLOCK)
                      INNER JOIN BCM100T B WITH (NOLOCK) ON B.COMP_CODE          = A.COMP_CODE
                                                        AND B.CUSTOM_CODE        = A.CUSTOM_CODE
                      LEFT  JOIN BCM100T C WITH (NOLOCK) ON C.COMP_CODE          = A.COMP_CODE
                                                        AND C.CUSTOM_CODE        = A.PUB_CUST_CD          /*발행기관 */
                                                        AND C.CUSTOM_TYPE        = '4'
                      LEFT  JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE          = A.COMP_CODE
                                                        AND D.CUSTOM_CODE        = A.COLET_CUST_CD        /*수금처*/
                      INNER JOIN BOR120T E WITH (NOLOCK) ON E.COMP_CODE          = A.COMP_CODE
                                                        AND E.DIV_CODE           = A.DIV_CODE             /*사업장*/
                      INNER JOIN BOR120T F WITH (NOLOCK) ON F.COMP_CODE          = A.COMP_CODE
                                                        AND F.DIV_CODE           = A.COLLECT_DIV          /*수금사업장*/
                      LEFT  JOIN BCM100T G WITH (NOLOCK) ON G.COMP_CODE          = B.COMP_CODE
                                                        AND G.CUSTOM_CODE        = B.MANAGE_CUSTOM        /*집계거래처*/
                      LEFT  JOIN PJT100T K WITH (NOLOCK) ON K.COMP_CODE          = A.COMP_CODE
                                                        AND K.DIV_CODE           = A.DIV_CODE
                                                        AND K.PJT_CODE           = A.PJT_CODE
                      LEFT  JOIN AFS100T Q WITH (NOLOCK) ON Q.COMP_CODE          = A.COMP_CODE
                                                        AND Q.SAVE_CODE          = A.SAVE_CODE
                                                        AND ISNULL(Q.USE_YN,'Y') = N'Y'
                      LEFT  JOIN BSA100T C1 WITH (NOLOCK) ON C1.COMP_CODE        = A.COMP_CODE
                                                         AND C1.MAIN_CODE        = 'B004'
                                                         AND C1.SUB_CODE         = A.MONEY_UNIT
                      LEFT  JOIN BSA100T C2 WITH (NOLOCK) ON C2.COMP_CODE        = A.COMP_CODE
                                                         AND C2.MAIN_CODE        = 'S017'
                                                         AND C2.SUB_CODE         = A.COLLECT_TYPE
					  LEFT JOIN BSA210T H WITH (NOLOCK)  ON  H.COMP_CODE 		 = A.COMP_CODE
          											     AND  H.TYPE_LEVEL 		 = A.DIV_CODE
          										         AND  H.TREE_CODE 		 = A.DEPT_CODE	
                WHERE A.COMP_CODE   = #{S_COMP_CODE}
                  AND (A.DISHONOR_DATE = '' OR A.DISHONOR_DATE IS NULL)                                    /*부도어음제외*/
    
    
    			 <if test="RDO == &quot;Y&quot;">
                  AND ISNULL(A.EX_DATE, '') != #{RDO}
    			 </if>
    
				 <if test="RDO == &quot;N&quot;">
                  AND ISNULL(A.EX_DATE, '')  = #{RDO}
				 </if>
    
    			<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	             AND A.DIV_CODE       = #{DIV_CODE}
    			</if> 
	            <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)"> 
	             AND A.COLLECT_PRSN   = #{ORDER_PRSN}
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">  
	             AND A.COLLECT_DIV    = #{DIV_CODE}
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)"> 
	             AND A.CUSTOM_CODE    = #{CUSTOM_CODE}
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(FR_DATE)"> 
	             AND A.COLLECT_DATE  &gt;= #{FR_DATE}
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(TO_DATE)"> 
	             AND A.COLLECT_DATE  &lt;= #{TO_DATE}
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(COLLECT_TYPE)"> 
	             AND A.COLLECT_TYPE   = #{COLLECT_TYPE}
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)"> 
	             AND B.AGENT_TYPE     = #{AGENT_TYPE}
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">  
	             AND B.AREA_TYPE      = #{AREA_TYPE}
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(COLET_CUST_CD)"> 
	             AND A.COLET_CUST_CD  = #{COLET_CUST_CD}
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM)"> 
	             AND B.MANAGE_CUSTOM  = #{MANAGE_CUSTOM}
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(COLLECT_AMT_FR)"> 
	             AND A.COLLECT_AMT   &gt;= #{COLLECT_AMT_FR} 
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(COLLECT_AMT_TO)"> 
	             AND A.COLLECT_AMT   &lt;= #{COLLECT_AMT_TO} 
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(COLLECT_NUM_FR)"> 
	             AND A.COLLECT_NUM   &gt;= #{COLLECT_NUM_FR}
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(COLLECT_TO)"> 
	             AND A.COLLECT_NUM   &lt;= #{COLLECT_TO}
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(PJT_CODE)"> 
	             AND A.PJT_CODE    LIKE '%' + #{PJT_CODE} + '%'
	            </if> 
	            <if test="@foren.Ognl@isNotEmpty(PJT_NAME)"> 
	             AND K.PJT_NAME    LIKE '%' + #{PJT_NAME} + '%'
    			</if>
    			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">		/*부서*/
			    AND    H.TREE_LEVEL          LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE =H.COMP_CODE AND TYPE_LEVEL=H.TYPE_LEVEL AND TREE_CODE = #{DEPT_CODE}) + '%'
			   </if>
               ) X
         ORDER BY 1, 2, 3

SET @END_TIME   = GETDATE()

SET @DIFF_TIME = DATEDIFF(S, @START_TIME, @END_TIME)

EXEC uniLITE.SP_QRY_TIME 'sco300skrv', '수금현황 조회', #{FR_DATE}, #{TO_DATE}, @DIFF_TIME
         
	END         
    </select>    
	<select id="sco300skrvServiceImpl.getSign" parameterType="Map" resultType="rMap">
		SELECT TOP 1 SIGN_DATA
		FROM SCO100T
		WHERE COMP_CODE = 'MASTER'
		  AND DIV_CODE = #{DIV_CODE}
		  AND COLLECT_NUM = #{COLLECT_NUM}
		  AND COLLECT_SEQ = #{COLLECT_SEQ}
		  AND SIGN_DATA IS NOT NULL
	</select>
	
</mapper>