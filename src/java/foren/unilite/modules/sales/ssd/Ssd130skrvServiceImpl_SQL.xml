<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssd130skrvServiceImpl">
					
	<select id="ssd130skrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		BEGIN
		
		   SET NOCOUNT ON
		   SET ARITHABORT ON
		
DECLARE @START_TIME DATETIME
      , @END_TIME   DATETIME
      , @DIFF_TIME  NUMERIC(10, 0)

SET @START_TIME = GETDATE()
		
		   DECLARE @COMP_CODE   NVARCHAR(08) /* 법인코드    */
		          ,@DIV_CODE    NVARCHAR(08) /* 사업장    */
		
		    SET @COMP_CODE = #{S_COMP_CODE}
		    SET @DIV_CODE  = #{DIV_CODE}
		
		 SELECT 
			A.COMP_CODE,
			A.DIV_CODE,
			A.DEPT_CODE,
			E.TREE_NAME		AS	DEPT_NAME,
			D.ITEM_LEVEL1,
			D.ITEM_LEVEL2,
			D.ITEM_LEVEL3,
			SUM(CASE C.PURCHASE_TYPE WHEN '1' THEN B.SALE_Q ELSE 0 END) AS SALE_Q1,
			SUM(CASE C.PURCHASE_TYPE WHEN '1' THEN B.SALE_Q * B.DISCOUNT_P ELSE 0 END) AS DISCOUNT_AMT1,
			SUM(CASE C.PURCHASE_TYPE WHEN '1' THEN B.SALE_AMT_O ELSE 0 END) AS SALE_AMT_O1,
			SUM(CASE C.PURCHASE_TYPE WHEN '1' THEN B.TAX_AMT_O ELSE 0 END) AS TAX_AMT_O1,
			SUM(CASE C.PURCHASE_TYPE WHEN '1' THEN B.SALE_AMT_O + B.TAX_AMT_O ELSE 0 END) SALE_TAX_AMT1,
		
			SUM(CASE C.PURCHASE_TYPE WHEN '2' THEN B.SALE_Q ELSE 0 END) AS SALE_Q2,
			SUM(CASE C.PURCHASE_TYPE WHEN '2' THEN B.SALE_Q * B.DISCOUNT_P ELSE 0 END) AS DISCOUNT_AMT2,
			SUM(CASE C.PURCHASE_TYPE WHEN '2' THEN B.SALE_AMT_O ELSE 0 END) AS SALE_AMT_O2,
			SUM(CASE C.PURCHASE_TYPE WHEN '2' THEN B.TAX_AMT_O ELSE 0 END) AS TAX_AMT_O2,
			SUM(CASE C.PURCHASE_TYPE WHEN '2' THEN B.SALE_AMT_O + B.TAX_AMT_O ELSE 0 END) SALE_TAX_AMT2,
		
			SUM(CASE WHEN C.PURCHASE_TYPE IN ('1','2') THEN B.SALE_Q ELSE 0 END)	AS SUM_SALE_Q,
			SUM(CASE WHEN C.PURCHASE_TYPE IN ('1','2') THEN B.SALE_Q * B.DISCOUNT_P ELSE 0 END) AS SUM_DISCOUNT_AMT,
			SUM(CASE WHEN C.PURCHASE_TYPE IN ('1','2') THEN B.SALE_AMT_O ELSE 0 END) AS SUM_SALE_AMT_O,
			SUM(CASE WHEN C.PURCHASE_TYPE IN ('1','2') THEN B.TAX_AMT_O ELSE 0 END) AS SUM_TAX_AMT_O,
			SUM(CASE WHEN C.PURCHASE_TYPE IN ('1','2') THEN B.SALE_AMT_O + B.TAX_AMT_O ELSE 0 END) SUM_SALE_TAX_AMT
		
		    FROM       SSA100T A WITH(NOLOCK)
			INNER JOIN SSA110T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
											 AND A.DIV_CODE  = B.DIV_CODE
											 AND A.BILL_NUM  = B.BILL_NUM
			INNER JOIN BTR100T C WITH(NOLOCK) ON C.COMP_CODE  = B.COMP_CODE
											 AND C.DIV_CODE   = B.OUT_DIV_CODE
											 AND C.INOUT_NUM  = B.INOUT_NUM
											 AND C.INOUT_SEQ  = B.INOUT_SEQ
											 AND C.INOUT_TYPE = B.INOUT_TYPE
			INNER JOIN BPR100T D WITH(NOLOCK) ON D.COMP_CODE = C.COMP_CODE
											 AND D.ITEM_CODE = C.ITEM_CODE
			INNER JOIN BSA210T E WITH(NOLOCK) ON E.COMP_CODE  = A.COMP_CODE
											 AND E.TYPE_LEVEL = A.DIV_CODE
											 AND E.TREE_CODE  = A.DEPT_CODE
		
		  WHERE A.COMP_CODE = @COMP_CODE
			AND A.DIV_CODE  = @DIV_CODE
			AND A.SALE_DATE &gt;= #{SALE_DATE_FR}
			AND A.SALE_DATE &lt;= #{SALE_DATE_TO}
		
			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">  
			   /*부서*/
				AND E.TREE_LEVEL  LIKE  (SELECT TREE_LEVEL FROM BSA210T WITH(NOLOCK) WHERE COMP_CODE = @COMP_CODE AND TYPE_LEVEL= @DIV_CODE AND TREE_CODE = #{DEPT_CODE}) + '%'
			</if>
				
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">  
				AND D.ITEM_LEVEL1 = #{ITEM_LEVEL1}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">  
				AND D.ITEM_LEVEL2 = #{ITEM_LEVEL2}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">  
				AND D.ITEM_LEVEL3 = #{ITEM_LEVEL3}
			</if>
		
			GROUP BY A.COMP_CODE, A.DIV_CODE, A.DEPT_CODE, E.TREE_NAME, D.ITEM_LEVEL1, D.ITEM_LEVEL2, D.ITEM_LEVEL3
			
			
SET @END_TIME   = GETDATE()

SET @DIFF_TIME = DATEDIFF(S, @START_TIME, @END_TIME)

EXEC uniLITE.SP_QRY_TIME 'ssd130skrv', '매입조건별 매출현황 조회', #{SALE_DATE_FR}, #{SALE_DATE_TO}, @DIFF_TIME

			
		    SET ARITHABORT OFF
		    SET NOCOUNT OFF
		END
    </select>
    
    <select id="ssd130skrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		BEGIN
	
		 SET NOCOUNT ON
		 SET ARITHABORT ON
		 
DECLARE @START_TIME DATETIME
      , @END_TIME   DATETIME
      , @DIFF_TIME  NUMERIC(10, 0)

SET @START_TIME = GETDATE()
		 
		 DECLARE
		       @COMP_CODE       NVARCHAR(08)
		      ,@DIV_CODE        NVARCHAR(08)
		      ,@DEPT_CODE       NVARCHAR(08)
		      ,@SALE_DATE_FR    NVARCHAR(08)
		      ,@SALE_DATE_TO    NVARCHAR(08)
		
		 SET @COMP_CODE        = #{S_COMP_CODE}         /* 법인 */
		 SET @DIV_CODE         = #{DIV_CODE}         /* 사업장 */
		 SET @DEPT_CODE        = #{DEPT_CODE}            /* 부서 */
		
		 SET @SALE_DATE_FR     = #{SALE_DATE_FR}             /* 매출일(FROM) */
		 SET @SALE_DATE_TO     = #{SALE_DATE_TO}            /* 매출일(TO) */
		
		  SELECT
		  K.COMP_CODE, K.DIV_CODE 
		 ,K.ITEM_CODE, A.ITEM_NAME, ISNULL(A.SPEC, '') AS SPEC, STOCK_UNIT                                           /* 품목코드/품목명/규격/단위 */
		 ,K.STOCK_Q                               /* 현재고 */
		 ,K.CON_Q,    K.CON_DISCOUNT_AMT,   K.CON_SALE_AMT,  K.CON_TAX_AMT,    K.CON_TOT_AMT        /* 위탁-매출량/할인금액/매출금액/부가세/매출합계 */
		 ,K.CASH_Q,  K.CASH_DISCOUNT_AMT,  K.CASH_SALE_AMT, K.CASH_TAX_AMT,  K.CASH_TOT_AMT      /* 현매-매출량/할인금액/매출금액/부가세/매출합계 */
		 ,K.TOT_Q,    K.TOT_DISCOUNT_AMT,     K.TOT_SALE_AMT,    K.TOT_TAX_AMT,     K.TOT_AMT_SUM        /* 합계-매출량/할인금액/매출금액/부가세/매출합계 */
		 FROM 
		 (
			SELECT 
			 A.COMP_CODE
			,A.DIV_CODE
			,ISNULL(B.PURCHASE_CUSTOM_CODE, '') AS CUSTOM_CODE
			,B.ITEM_CODE
			,SUM(CASE WHEN C.PURCHASE_TYPE = '1' THEN B.SALE_Q ELSE 0 END) AS CON_Q
			,SUM(CASE WHEN C.PURCHASE_TYPE = '1' THEN (B.SALE_Q * ISNULL(B.DISCOUNT_P, 0)) ELSE 0 END) AS CON_DISCOUNT_AMT
			,SUM(CASE WHEN C.PURCHASE_TYPE = '1' THEN B.SALE_AMT_O ELSE 0 END) AS CON_SALE_AMT
			,SUM(CASE WHEN C.PURCHASE_TYPE = '1' THEN B.TAX_AMT_O ELSE 0 END) AS CON_TAX_AMT
			,SUM(CASE WHEN C.PURCHASE_TYPE = '1' THEN B.SALE_AMT_O + B.TAX_AMT_O ELSE 0 END) AS CON_TOT_AMT
		
			/* 현매-매출수량/할인금액/매출금액/부가세/합계금액 */
			,SUM(CASE WHEN C.PURCHASE_TYPE = '2' THEN B.SALE_Q ELSE 0 END) AS CASH_Q
			,SUM(CASE WHEN C.PURCHASE_TYPE = '2' THEN (B.SALE_Q * ISNULL(B.DISCOUNT_P, 0)) ELSE 0 END) AS CASH_DISCOUNT_AMT
			,SUM(CASE WHEN C.PURCHASE_TYPE = '2' THEN B.SALE_AMT_O ELSE 0 END) AS CASH_SALE_AMT
			,SUM(CASE WHEN C.PURCHASE_TYPE = '2' THEN B.TAX_AMT_O ELSE 0 END)  AS CASH_TAX_AMT
			,SUM(CASE WHEN C.PURCHASE_TYPE = '2' THEN B.SALE_AMT_O + B.TAX_AMT_O ELSE 0 END) AS CASH_TOT_AMT
		
			/* 현매-매출수량/할인금액/매출금액/부가세/합계금액 */
			,SUM(CASE WHEN C.PURCHASE_TYPE IN ('1', '2')  THEN B.SALE_Q ELSE 0 END) AS TOT_Q
			,SUM(CASE WHEN C.PURCHASE_TYPE IN ('1', '2')  THEN (B.SALE_Q * ISNULL(B.DISCOUNT_P, 0)) ELSE 0 END) AS TOT_DISCOUNT_AMT
			,SUM(CASE WHEN C.PURCHASE_TYPE IN ('1', '2')  THEN B.SALE_AMT_O ELSE 0 END) AS TOT_SALE_AMT
			,SUM(CASE WHEN C.PURCHASE_TYPE IN ('1', '2')  THEN B.TAX_AMT_O ELSE 0 END) AS TOT_TAX_AMT
			,SUM(CASE WHEN C.PURCHASE_TYPE IN ('1', '2')  THEN B.SALE_AMT_O + B.TAX_AMT_O ELSE 0 END) AS TOT_AMT_SUM
			,SUM(ISNULL(D.STOCK_Q, 0)) AS STOCK_Q
			FROM       SSA100T  A WITH(NOLOCK)
			INNER JOIN SSA110T  B WITH(NOLOCK) ON A.COMP_CODE   = B.COMP_CODE 
											  AND A.DIV_CODE    = B.DIV_CODE
											  AND A.BILL_NUM    = B.BILL_NUM
			LEFT   JOIN BTR100T C WITH(NOLOCK) ON B.COMP_CODE    = C.COMP_CODE 
											  AND B.OUT_DIV_CODE = C.DIV_CODE
											  AND B.INOUT_NUM    = C.INOUT_NUM 
											  AND B.INOUT_SEQ    = C.INOUT_SEQ
											  AND B.INOUT_TYPE   = C.INOUT_TYPE
			LEFT   JOIN (SELECT 
		                  COMP_CODE, DIV_CODE, ITEM_CODE, SUM(STOCK_Q) AS STOCK_Q
		                  FROM BIV100T WITH(NOLOCK) 
						  WHERE COMP_CODE = @COMP_CODE AND DIV_CODE = @DIV_CODE
						  GROUP BY COMP_CODE, DIV_CODE, ITEM_CODE
						 ) D ON D.COMP_CODE  = B.COMP_CODE 
							AND D.DIV_CODE   = B.DIV_CODE
							AND D.ITEM_CODE  = B.ITEM_CODE
			LEFT JOIN   BSA210T  F WITH(NOLOCK) ON A.COMP_CODE  = F.COMP_CODE  AND A.DIV_CODE = F.TYPE_LEVEL AND A.DEPT_CODE = F.TREE_CODE
		
		  WHERE A.COMP_CODE  = @COMP_CODE
		    AND A.DIV_CODE   = @DIV_CODE
		    AND A.SALE_DATE &gt;= @SALE_DATE_FR
		    AND A.SALE_DATE &lt;= @SALE_DATE_TO
		
		 <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">     
		     AND  F.TREE_LEVEL LIKE (SELECT X.TREE_LEVEL FROM BSA210T X WITH(NOLOCK) WHERE X.COMP_CODE = @COMP_CODE AND X.TYPE_LEVEL = @DIV_CODE AND X.TREE_CODE = #{DEPT_CODE}) + '%'
		 </if> 
		 
			GROUP BY A.COMP_CODE, A.DIV_CODE, B.PURCHASE_CUSTOM_CODE, B.ITEM_CODE
		
		 ) K
			INNER  JOIN BPR100T A WITH(NOLOCK) ON A.COMP_CODE = @COMP_CODE AND A.ITEM_CODE   = K.ITEM_CODE
			LEFT   JOIN BCM100T B WITH(NOLOCK) ON B.COMP_CODE = @COMP_CODE AND K.CUSTOM_CODE = B.CUSTOM_CODE
			
		 WHERE 1 = 1
		
		 <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">  
			AND A.ITEM_LEVEL1 = #{ITEM_LEVEL1}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">  
			AND A.ITEM_LEVEL2 = #{ITEM_LEVEL2}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">  
			AND A.ITEM_LEVEL3 = #{ITEM_LEVEL3}
		</if>
		
SET @END_TIME   = GETDATE()

SET @DIFF_TIME = DATEDIFF(S, @START_TIME, @END_TIME)

EXEC uniLITE.SP_QRY_TIME 'ssd130skrv', '매입조건별 매출현황 조회', #{SALE_DATE_FR}, #{SALE_DATE_TO}, @DIFF_TIME
		
		  SET ARITHABORT OFF
		  SET NOCOUNT OFF
		
		END
    </select>
    
    <select id="ssd130skrvServiceImpl.selectList3" parameterType="Map" resultType="rMap">
		BEGIN

			SET NOCOUNT ON
			SET ARITHABORT ON
			
DECLARE @START_TIME DATETIME
      , @END_TIME   DATETIME
      , @DIFF_TIME  NUMERIC(10, 0)

SET @START_TIME = GETDATE()
			
			DECLARE 
			      @COMP_CODE     NVARCHAR(08)
	             ,@DIV_CODE      NVARCHAR(08)
				 ,@SALE_DATE_FR  NVARCHAR(08)
				 ,@SALE_DATE_TO  NVARCHAR(08)
				 ,@DEPT_CODE     NVARCHAR(08)
				 ,@CUSTOM_CODE   NVARCHAR(20)
				 ,@GUBUN         NVARCHAR(01)
			
			SET @COMP_CODE     = #{S_COMP_CODE}     	/* 법인 */
			SET @DIV_CODE      = #{DIV_CODE}         	/* 사업장 */
			SET @SALE_DATE_FR  = #{SALE_DATE_FR}   	    /* 매출일자(FROM) */
			SET @SALE_DATE_TO  = #{SALE_DATE_TO}  		/* 매출일자(TO) */
			SET @DEPT_CODE     = #{DEPT_CODE}   		/* 부서 */
			SET @CUSTOM_CODE   = #{CUSTOM_CODE}   		/* 매출처(거래처코드) */
			SET @GUBUN         = #{GUBUN}   			/* 매출처별('1'), 합계표('2') */
			
			/* 매출처별 판매현황 */
			
			SELECT
			(CASE WHEN @GUBUN = '1' THEN A.SALE_DATE  ELSE '' END)  AS SALE_DATE
			,A.SALE_CUSTOM_CODE										AS CUSTOM_CODE
			,ISNULL(MAX(C.CUSTOM_NAME), '')							AS CUSTOM_NAME
			,SUM(ISNULL(B.SALE_Q, 0))                               AS SALE_Q
			,SUM(ISNULL(B.DISCOUNT_P, 0) * ISNULL(B.SALE_Q, 0))     AS DISCOUNT_AMT 
			,SUM(B.SALE_AMT_O)                                      AS SALE_AMT_O
			,SUM(B.TAX_AMT_O)                                       AS TAX_AMT_O
			,SUM(B.SALE_AMT_O + B.TAX_AMT_O)                        AS SALE_AMT_TOT
			FROM           SSA100T A WITH(NOLOCK)
			 INNER JOIN  SSA110T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE 
	                                           AND A.DIV_CODE  = B.DIV_CODE 
											   AND A.BILL_NUM  = B.BILL_NUM
			INNER JOIN  BCM100T C WITH(NOLOCK) ON A.COMP_CODE        = C.COMP_CODE 
	                                          AND A.SALE_CUSTOM_CODE = C.CUSTOM_CODE
			INNER JOIN  BSA210T D WITH(NOLOCK) ON A.COMP_CODE = D.COMP_CODE 
	                                          AND A.DIV_CODE  = D.TYPE_LEVEL 
											  AND A.DEPT_CODE = D.TREE_CODE
											  AND (   (@DEPT_CODE = '') 
											        OR(@DEPT_CODE != '' AND D.TREE_LEVEL LIKE (SELECT TREE_LEVEL 
											                                                    FROM BSA210T WITH(NOLOCK) 
											                                                    WHERE COMP_CODE  = @COMP_CODE 
											                                                      AND TYPE_LEVEL = @DIV_CODE 
											                                                      AND TREE_CODE  = @DEPT_CODE) + '%'))
			WHERE  A.COMP_CODE  = @COMP_CODE
			   AND A.DIV_CODE   = @DIV_CODE
			   AND A.SALE_DATE &gt;= @SALE_DATE_FR
			   AND A.SALE_DATE &lt;= @SALE_DATE_TO
			   AND ((@CUSTOM_CODE != '' AND A.SALE_CUSTOM_CODE = @CUSTOM_CODE) OR (@CUSTOM_CODE = ''))
			
			GROUP BY (CASE WHEN @GUBUN = '1' THEN A.SALE_DATE ELSE '' END), A.SALE_CUSTOM_CODE
			ORDER BY 1, 2
	
SET @END_TIME   = GETDATE()

SET @DIFF_TIME = DATEDIFF(S, @START_TIME, @END_TIME)

EXEC uniLITE.SP_QRY_TIME 'ssd130skrv', '매입조건별 매출현황 조회', #{SALE_DATE_FR}, #{SALE_DATE_TO}, @DIFF_TIME
	
			SET ARITHABORT OFF		
			SET NOCOUNT OFF

		END
    </select>
	
	
</mapper>