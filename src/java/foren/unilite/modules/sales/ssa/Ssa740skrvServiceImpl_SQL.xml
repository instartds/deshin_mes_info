<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssa740skrvServiceImpl">
    
     <select id="ssa740skrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		
		BEGIN
		
		SET NOCOUNT ON
		SET ARITHABORT ON
		
		DECLARE  @COMP_CODE      NVARCHAR(08)    /*법인*/
				,@DIV_CODE       NVARCHAR(08)    /*사업장*/
				,@DEPT_CODE      NVARCHAR(08)    /*부서*/
				,@BASIS_DAY      NVARCHAR(08)    /*조회기준일자*/
		        ,@WEEK_FRIST_DAY NVARCHAR(08)    /*기준주차(시작일-일)*/
				,@WEEK_LAST_DAY  NVARCHAR(08)    /*기준주차(종료일-토)*/
				,@DIFF_DAY           INT         /*차이일자*/
		
		SET @COMP_CODE       = #{S_COMP_CODE}
		SET @DIV_CODE        = #{DIV_CODE}
		SET @DEPT_CODE       = #{DEPT_CODE}
		SET @BASIS_DAY       = #{BASIS_DAY}
		SET @WEEK_FRIST_DAY  = #{WEEK_FRIST_DAY}
		SET @WEEK_LAST_DAY   = #{WEEK_LAST_DAY}
		
		SET @DIFF_DAY       = DATEPART(DW, @BASIS_DAY) - 1
		SET @WEEK_FRIST_DAY = CONVERT(NVARCHAR(08), DATEADD(DAY, - @DIFF_DAY, @BASIS_DAY), 112)
		SET @WEEK_LAST_DAY  = CONVERT(NVARCHAR(08), DATEADD(DAY, 6, @WEEK_FRIST_DAY), 112) 
		
		SELECT
		 A.DEPT_CODE AS DEPT_CODE
		,MAX(C.TREE_NAME) AS DEPT_NAME
		,SUM(CASE WHEN DATEPART(DW, A.SALE_DATE ) = 1 THEN (B.SALE_AMT_O + B.TAX_AMT_O) ELSE 0 END) AS SUNDAY_AMT
		,SUM(CASE WHEN DATEPART(DW, A.SALE_DATE ) = 2 THEN (B.SALE_AMT_O + B.TAX_AMT_O) ELSE 0 END) AS MONDAY_AMT
		,SUM(CASE WHEN DATEPART(DW, A.SALE_DATE ) = 3 THEN (B.SALE_AMT_O + B.TAX_AMT_O) ELSE 0 END) AS TUESDAY_AMT
		,SUM(CASE WHEN DATEPART(DW, A.SALE_DATE ) = 4 THEN (B.SALE_AMT_O + B.TAX_AMT_O) ELSE 0 END) AS WEDNESDAY_AMT
		,SUM(CASE WHEN DATEPART(DW, A.SALE_DATE ) = 5 THEN (B.SALE_AMT_O + B.TAX_AMT_O) ELSE 0 END) AS THURSDAY_AMT
		,SUM(CASE WHEN DATEPART(DW, A.SALE_DATE ) = 6 THEN (B.SALE_AMT_O + B.TAX_AMT_O) ELSE 0 END) AS FRIDAY_AMT
		,SUM(CASE WHEN DATEPART(DW, A.SALE_DATE ) = 7 THEN (B.SALE_AMT_O + B.TAX_AMT_O) ELSE 0 END) AS SATURDAY_AMT
		,SUM(B.SALE_AMT_O + B.TAX_AMT_O)              AS WEEK_SALES_TOT
		,@WEEK_FRIST_DAY + '~' + @WEEK_LAST_DAY       AS SALES_WEEK
		FROM         SSA100T A WITH(NOLOCK)
		INNER JOIN SSA110T B WITH(NOLOCK) ON A.COMP_CODE = B.COMP_CODE
															 AND A.DIV_CODE   = B.DIV_CODE
															 AND A.BILL_NUM   = B.BILL_NUM
		INNER JOIN BSA210T C WITH(NOLOCK) ON A.COMP_CODE = C.COMP_CODE
															 AND A.DIV_CODE    = C.TYPE_LEVEL
															 AND A.DEPT_CODE   = C.TREE_CODE
															 AND (    (@DEPT_CODE  = '') 
															       OR (@DEPT_CODE != '' AND C.TREE_LEVEL LIKE (SELECT TREE_LEVEL
															                                                    FROM BSA210T WITH(NOLOCK)
															                                                   WHERE COMP_CODE  = @COMP_CODE
																											     AND TYPE_LEVEL = @DIV_CODE
																											     AND TREE_CODE  = @DEPT_CODE) + '%'))
	
	   WHERE A.COMP_CODE  = @COMP_CODE 
	     AND A.DIV_CODE   = @DIV_CODE
		 AND A.SALE_DATE  &gt;= @WEEK_FRIST_DAY
		 AND A.SALE_DATE  &lt;= @WEEK_LAST_DAY
	
	
	    GROUP BY A.DEPT_CODE
	    ORDER BY A.DEPT_CODE
		
		SET NOCOUNT OFF
		SET ARITHABORT OFF
		
	 END
     </select>
</mapper>