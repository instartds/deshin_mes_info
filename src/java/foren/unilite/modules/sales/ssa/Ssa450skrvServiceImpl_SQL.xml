<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssa450skrvServiceImpl">
	<select id="ssa450skrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
		/* ssa450skrvServiceImpl.selectList1 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		    DECLARE @CompCode       NVARCHAR(08)    /* 법인코드     */
		          , @UserId         NVARCHAR(100)   /* 사용자ID        */
		          , @LangType       NVARCHAR(2)     /* 언어구분     */
		          , @RefItem        NVARCHAR(01)
		          , @DateFormat     NVARCHAR(10)
		          , @MonthFormat    NVARCHAR(10)
		
		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}
		
		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId
		
		    SET @RefItem = ISNULL(@RefItem, N'0')
		
		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME, @MonthFormat = REF_CODE2
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'
		
		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
		    SET @MonthFormat = ISNULL(@MonthFormat, 'YYYY.MM')
		
		    IF EXISTS (SELECT TOP 1 1 FROM tempdb.sys.objects WHERE object_id = OBJECT_ID('tempdb..#SALES_TMP'))
		        DROP TABLE #SALES_TMP
		
		    SELECT A.* 
		    INTO #SALES_TMP
		    FROM SALES_V A  WITH (NOLOCK) 
		    WHERE A.COMP_CODE  = #{S_COMP_CODE}
		    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		    AND A.DIV_CODE     = #{DIV_CODE}
		    </if>
		    AND   A.SALE_DATE &gt;= #{SALE_FR_DATE}
		    AND   A.SALE_DATE &lt;= #{SALE_TO_DATE}
<!-- 20210802 추가: 수정세금계산서 포함여부 -->
		<if test="ENCLUDE_YN == &quot;N&quot;">
		    AND   A.ORDER_TYPE != '99'
		</if>

		    /* 데이터 조회 */
		    /* 생성경로가 영업일 경우 */
		    <if test="TXT_CREATE_LOC != 5"> /* 무역이 아닐경우 실행 */
		    SELECT A.SALE_CUSTOM_CODE
		         , A.SALE_CUSTOM_NAME
		         , A.BILL_TYPE
		         , A.BILL_TYPE_NAME
		         , A.SALE_MONTH
		         , A.SALE_DATE
		         , A.INOUT_TYPE_DETAIL
		         , A.ITEM_CODE
		         , A.ITEM_NAME
		         , A.ITEM_NAME1
		         , A.SPEC
		         , A.SALE_UNIT
		         , A.TRANS_RATE
		         , A.SALE_Q
		         , A.SALE_P
		         , A.MONEY_UNIT
		         , A.EXCHG_RATE_O
		         , A.SALE_LOC_AMT_F
		         , A.SALE_LOC_AMT_I
		         , A.TAX_TYPE
		         , A.TAX_AMT_O
		         , A.SUM_SALE_AMT
		         --20190528 추가
		         , CASE WHEN A.ORDER_TYPE='99' THEN 0
		                ELSE ISNULL(A.SALE_COST_AMT, 0)
		           END                                 AS SALE_COST_AMT
		         , A.SALE_AMT_WON       --매출액(자사)
		         , A.TAX_AMT_WON        --세액(자사)
		         , A.SUM_SALE_AMT_WON   --매출계(자사)
		         , A.CUSTOM_CODE
		         , A.CUSTOM_NAME
		         , A.NATION_NAME        --국가명
		         , A.CONTINENT          --대륙
		         , A.ORDER_TYPE
		         , A.SALE_PRSN
		         , A.MANAGE_CUSTOM
		         , A.MANAGE_CUSTOM_NM
		         , A.AREA_TYPE
		         , A.AGENT_TYPE
		         , A.PROJECT_NO
		         --20200103 추가: 프로젝트명 가져오기 위해 추가
		         , Z1.PJT_NAME
		         , A.PUB_NUM
		         , A.EX_NUM
		         , A.BILL_NUM
		         , A.ORDER_NUM
		         , A.DISCOUNT_RATE
		         , A.PRICE_YN
		         , A.SALE_WGT_Q
		         , A.SALE_VOL_Q
		         , A.SALE_FOR_WGT_P
		         , A.SALE_FOR_VOL_P
		         , A.PRICE_TYPE
		         , A.WGT_UNIT
		         , A.UNIT_WGT
		         , A.VOL_UNIT
		         , A.UNIT_VOL
		         , A.COMP_CODE
		         , A.DIV_CODE
		         , A.BILL_SEQ
		         , A.CREATE_LOC
		         , A.LOT_NO
		         , A.NEW_PRODUCT
		         , A.SAVING_Q
		         , A.SALE_CUSTOM_CODE + A.ITEM_CODE AS CUSTOM_ITEM_CODE
		         , A.REMARK
		         , A.INIT_DVRY_DATE
		         , A.DVRY_DATE
		         , A.ORDER_DATE
		         , A.WH_NAME
		         , A.WH_CELL_NAME
		         , A.ORDER_Q
		         , A.ITEM_LEVEL1
		         , A.ITEM_LEVEL2
		         , A.INOUT_DATE
		      FROM (SELECT A.SALE_CUSTOM_CODE                                                                           AS SALE_CUSTOM_CODE
		                 , (CASE WHEN @RefItem = '1' THEN C.CUSTOM_NAME1
		                         WHEN @RefItem = '2' THEN C.CUSTOM_NAME2
		                                             ELSE C.CUSTOM_NAME
		                     END)                                                                                       AS SALE_CUSTOM_NAME
		                 , A.BILL_TYPE                                                                                  AS BILL_TYPE
		                 , ISNULL(B1.CODE_NAME, '')                                                                     AS BILL_TYPE_NAME
		                 , (CASE WHEN ISNULL(A.SALE_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.SALE_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(A.SALE_DATE, 5, 2))
		                                                                 , 'DD'  , SUBSTRING(A.SALE_DATE, 7, 2))
		                     END)                                                                                       AS SALE_DATE
		                 , (CASE WHEN ISNULL(A.SALE_DATE, '') = ''
		                         THEN ''
		                         ELSE REPLACE(REPLACE(@MonthFormat, 'YYYY', SUBSTRING(A.SALE_DATE, 1, 4))
		                                                                 , 'MM'  , SUBSTRING(A.SALE_DATE, 5, 2))
		                     END)                                                                                       AS SALE_MONTH
		                 , ISNULL(A.INOUT_TYPE_DETAIL, D1.INOUT_TYPE_DETAIL)                                AS INOUT_TYPE_DETAIL
		                 , A.ITEM_CODE                                                                                  AS ITEM_CODE
		                 , (CASE WHEN @RefItem = '1' THEN D.ITEM_NAME1
		                         WHEN @RefItem = '2' THEN D.ITEM_NAME2
		                                             ELSE D.ITEM_NAME
		                     END)                                                                                       AS ITEM_NAME
		                 , D.ITEM_NAME1
		                 , D.SPEC                                                                                       AS SPEC
		                 , A.SALE_UNIT                                                                                  AS SALE_UNIT
		                 , A.TRANS_RATE                                                                                 AS TRANS_RATE
		                 , A.SALE_Q                                                                                     AS SALE_Q
		                 , A.SALE_P                                                                                     AS SALE_P
		                 , A.MONEY_UNIT                                                                                 AS MONEY_UNIT
		                 , A.EXCHG_RATE_O                                                                               AS EXCHG_RATE_O
		                 , A.SALE_AMT_O                                                                                 AS SALE_LOC_AMT_F
		                 , A.SALE_LOC_AMT_I                                                                             AS SALE_LOC_AMT_I
		                 , A.TAX_TYPE                                                                                   AS TAX_TYPE
		                 , A.TAX_AMT_O                                                                                  AS TAX_AMT_O
		                 , ISNULL(A.SALE_AMT_O, 0) + ISNULL(A.TAX_AMT_O, 0)                                             AS SUM_SALE_AMT
		                 --20190528 추가
		                 , ISNULL(H.AVERAGE_P,0) * ISNULL(A.SALE_Q,0) * A.TRANS_RATE                                    AS SALE_COST_AMT       --매출원가
		                 --, ISNULL(A.SALE_AMT_O, 0)  * ISNULL(A.EXCHG_RATE_O, 1)                                         AS SALE_AMT_WON     --매출액(자사)
		                 --, ISNULL(A.TAX_AMT_O, 0)   * ISNULL(A.EXCHG_RATE_O, 1)                                         AS TAX_AMT_WON      --세액(자사)
		                 --, (ISNULL(A.SALE_AMT_O, 0) + ISNULL(A.TAX_AMT_O, 0)) * ISNULL(A.EXCHG_RATE_O, 1)               AS SUM_SALE_AMT_WON --매출계(자사)
		                 , ISNULL(A.SALE_LOC_AMT_I, 0) AS SALE_AMT_WON                                  --매출액(자사)
		                 , ISNULL(A.TAX_AMT_O, 0)  AS TAX_AMT_WON                                       --세액(자사)
		                 , (ISNULL(A.SALE_LOC_AMT_I, 0) + ISNULL(A.TAX_AMT_O, 0)) AS SUM_SALE_AMT_WON       --매출계(자사)
		                 , A.SALE_CUSTOM_CODE                                                                           AS CUSTOM_CODE
		                 , (CASE WHEN @RefItem = '1' THEN L.CUSTOM_NAME1
		                         WHEN @RefItem = '2' THEN L.CUSTOM_NAME2
		                                             ELSE L.CUSTOM_NAME
		                     END)                                                                                       AS CUSTOM_NAME
		                 , A.ORDER_TYPE                                                                                 AS ORDER_TYPE
		                 , A.SALE_PRSN                                                                                  AS SALE_PRSN
		                 , C.MANAGE_CUSTOM                                                                              AS MANAGE_CUSTOM
		                 , (CASE WHEN @RefItem = '1' THEN K.CUSTOM_NAME1
		                         WHEN @RefItem = '2' THEN K.CUSTOM_NAME2
		                                             ELSE K.CUSTOM_NAME
		                     END)                                                                                       AS MANAGE_CUSTOM_NM
		                 , C.AREA_TYPE                                                                                  AS AREA_TYPE
		                 , C.AGENT_TYPE                                                                                 AS AGENT_TYPE
		                 , A.PROJECT_NO                                                                                 AS PROJECT_NO
		                 , A.PUB_NUM                                                                                    AS PUB_NUM
		                 , (CASE WHEN A.BILL_TYPE = '10' OR A.BILL_TYPE = '50'
		                         THEN ISNULL(CAST(G.EX_NUM AS NVARCHAR(10)),'')
		                         ELSE ISNULL(CAST(A.EX_NUM AS NVARCHAR(10)),'')
		                     END)                                                                                       AS EX_NUM
		                 , A.BILL_NUM                                                                                   AS BILL_NUM
		                 , A.ORDER_NUM                                                                                  AS ORDER_NUM
		                 , ISNULL(A.DISCOUNT_RATE, 0)                                                                   AS DISCOUNT_RATE
		                 , A.PRICE_YN                                                                                   AS PRICE_YN
		                 , A.SALE_WGT_Q                                                                                 AS SALE_WGT_Q
		                 , A.SALE_VOL_Q                                                                                 AS SALE_VOL_Q
		                 , A.SALE_FOR_WGT_P                                                                             AS SALE_FOR_WGT_P
		                 , A.SALE_FOR_VOL_P                                                                             AS SALE_FOR_VOL_P
		                 , A.PRICE_TYPE                                                                                 AS PRICE_TYPE
		                 , A.WGT_UNIT                                                                                   AS WGT_UNIT
		                 , A.UNIT_WGT                                                                                   AS UNIT_WGT
		                 , A.VOL_UNIT                                                                                   AS VOL_UNIT
		                 , A.UNIT_VOL                                                                                   AS UNIT_VOL
		                 , A.COMP_CODE                                                                                  AS COMP_CODE
		                 , A.DIV_CODE                                                                                   AS DIV_CODE
		                 , A.BILL_SEQ                                                                                   AS BILL_SEQ
		                 , '1'                                                                                          AS CREATE_LOC
		                 , D1.LOT_NO                                                                                    AS LOT_NO
		                 , A.REMARK
		                 , R1.INIT_DVRY_DATE
		                 , R1.DVRY_DATE
		                 , R1.ORDER_Q
		                 , R2.ORDER_DATE
		                 , R3.TREE_NAME AS WH_NAME
		                 , R4.WH_CELL_NAME
		                 , B2.CODE_NAME AS NATION_NAME
		                 , B3.CODE_NAME AS CONTINENT
		                 , D.ITEM_LEVEL1
		                 , D.ITEM_LEVEL2
		                 --, CASE WHEN (SELECT NEW_PRODUCT
		                 --           FROM BTR100T
		                 --           WHERE COMP_CODE = A.COMP_CODE
		                 --           AND INOUT_NUM = A.INOUT_NUM
		                 --           AND INOUT_SEQ = A.INOUT_SEQ)  = '1' THEN 'Y'
		                 --     ELSE 'N'
		                 --   END                                                                                           AS NEW_PRODUCT
		                 , CASE WHEN F.NEW_PRODUCT = '1' THEN 'Y' ELSE 'N' END NEW_PRODUCT
		                 , D2.SAVING_Q
		                 , D1.INOUT_DATE
		              FROM            #SALES_TMP A  WITH (NOLOCK)
		                   LEFT  JOIN BTR100T D1 WITH (NOLOCK) ON D1.COMP_CODE       = A.COMP_CODE
		                                                      AND D1.SALE_DIV_CODE   = A.DIV_CODE
		                                                      AND D1.INOUT_NUM       = A.INOUT_NUM
		                                                      AND D1.INOUT_SEQ       = A.INOUT_SEQ
		                                                      AND D1.INOUT_TYPE      = A.INOUT_TYPE
		                   LEFT  JOIN (
		                               SELECT A.COMP_CODE, A.DIV_CODE, A.NEW_PRODUCT, B.ITEM_CODE, B.LOT_NO, SUM(B.SAVING_Q) AS SAVING_Q
		                               FROM BTR100T AS A WITH(NOLOCK)
		                               INNER JOIN (
		                                           SELECT A.COMP_CODE, A.DIV_CODE, A.PRODT_NUM, B.LOT_NO, B.ITEM_CODE, A.SAVING_Q
		                                           FROM       PMR100T A WITH(NOLOCK)
		                                           INNER JOIN PMR200T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                                                            AND B.DIV_CODE  = A.DIV_CODE
		                                                                            AND B.PRODT_NUM = A.PRODT_NUM
		                                           ) AS B  ON B.COMP_CODE = A.COMP_CODE
		                                                  AND B.DIV_CODE  = A.DIV_CODE
		                                                  AND B.PRODT_NUM = A.BASIS_NUM
		                                                  AND B.ITEM_CODE = A.ITEM_CODE
		                                                  AND B.LOT_NO    = A.LOT_NO
		                                WHERE A.COMP_CODE  = #{S_COMP_CODE}
		                                AND   A.INOUT_TYPE = '1'
		                                GROUP BY A.COMP_CODE, A.DIV_CODE, B.ITEM_CODE, B.LOT_NO, A.NEW_PRODUCT
		                               ) AS D2 ON D2.COMP_CODE = D1.COMP_CODE
		                                      AND D2.DIV_CODE  = D1.DIV_CODE
		                                      AND D2.ITEM_CODE = D1.ITEM_CODE
		                                      AND D2.LOT_NO    = D1.LOT_NO
		                   LEFT  JOIN BCM100T C  WITH (NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                                      AND C.CUSTOM_CODE  = A.SALE_CUSTOM_CODE
		                   LEFT  JOIN BCM100T K  WITH (NOLOCK) ON K.COMP_CODE    = C.COMP_CODE
		                                                      AND K.CUSTOM_CODE  = C.MANAGE_CUSTOM
		                   LEFT  JOIN BCM100T L  WITH (NOLOCK) ON L.COMP_CODE    = A.COMP_CODE
		                                                      AND L.CUSTOM_CODE  = A.SALE_CUSTOM_CODE       ---180807
		                   LEFT  JOIN BPR100T D  WITH (NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
		                                                      AND D.ITEM_CODE    = A.ITEM_CODE
		                   LEFT  JOIN BPR200T E  WITH (NOLOCK) ON E.COMP_CODE    = A.COMP_CODE
		                                                      AND E.DIV_CODE     = A.DIV_CODE
		                                                      AND E.ITEM_CODE    = A.ITEM_CODE
		                   LEFT  JOIN STB100T G  WITH (NOLOCK) ON G.COMP_CODE    = A.COMP_CODE
		                                                      AND G.DIV_CODE     = A.DIV_CODE
		                                                      AND G.PUB_NUM      = A.PUB_NUM
		                   LEFT  JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE   = A.COMP_CODE
		                                                      AND B1.MAIN_CODE   = 'S024'
		                                                      AND B1.SUB_CODE    = A.BILL_TYPE
		                  --20190528 추가
		                  LEFT  JOIN BTR100T  F WITH (NOLOCK) ON F.COMP_CODE    =  A.COMP_CODE
		                                                     AND F.DIV_CODE     =  A.OUT_DIV_CODE
		                                                     AND F.INOUT_NUM    =  A.INOUT_NUM
		                                                     AND F.INOUT_SEQ    =  A.INOUT_SEQ
		                                                     AND F.INOUT_TYPE   =  A.INOUT_TYPE
		                  --20190528 추가
		                  LEFT  JOIN BIV200T  H WITH (NOLOCK) ON H.COMP_CODE    =  F.COMP_CODE
		                                                     AND H.DIV_CODE     =  F.DIV_CODE
		                <if test="@foren.Ognl@isNotEmpty(INOUT_FR_DATE)">
		                                                     AND H.BASIS_YYYYMM =  SUBSTRING(#{INOUT_FR_DATE}, 1, 6)
		                </if>
		                <if test="@foren.Ognl@isEmpty(INOUT_FR_DATE)">
		                                                     AND H.BASIS_YYYYMM =  SUBSTRING(F.INOUT_DATE, 1, 6)
		                </if>
		                                                     AND H.WH_CODE      =  F.WH_CODE
		                                                     AND H.ITEM_CODE    =  F.ITEM_CODE
		                LEFT JOIN SOF110T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
		                                                AND R1.OUT_DIV_CODE = A.OUT_DIV_CODE
		                                                AND R1.ORDER_NUM = A.ORDER_NUM
		                                                AND R1.SER_NO = A.SER_NO
		                --20200131 추가
		                LEFT JOIN SOF100T R2 WITH(NOLOCK) ON R2.COMP_CODE = R1.COMP_CODE
		                                                AND R2.DIV_CODE = R1.DIV_CODE
		                                                AND R2.ORDER_NUM = R1.ORDER_NUM
		                LEFT JOIN BSA220T R3 WITH (NOLOCK) ON R3.COMP_CODE=D1.COMP_CODE
		                                                AND R3.TYPE_LEVEL=D1.DIV_CODE
		                                                AND R3.TREE_CODE=D1.WH_CODE
		                LEFT JOIN BSA225T R4 WITH (NOLOCK) ON R4.COMP_CODE=D1.COMP_CODE
		                                                AND R4.DIV_CODE=D1.DIV_CODE
		                                                AND R4.WH_CODE=D1.WH_CODE
		                                                AND R4.WH_CELL_CODE=D1.WH_CELL_CODE
		               LEFT  JOIN BSA100T B2 WITH (NOLOCK) ON B2.COMP_CODE   = C.COMP_CODE
		                                                  AND B2.MAIN_CODE   = 'B012'
		                                                  AND B2.SUB_CODE    = C.NATION_CODE
		               LEFT  JOIN BSA100T B3 WITH (NOLOCK) ON B3.COMP_CODE   = B2.COMP_CODE
		                                                  AND B3.MAIN_CODE   = 'B707'
		                                                  AND B3.SUB_CODE    = B2.REF_CODE3
		               LEFT  JOIN BSA100T B4 WITH (NOLOCK) ON B4.COMP_CODE   = D2.COMP_CODE
		                                                  AND B4.MAIN_CODE   = 'B010'
		                                                  AND B4.SUB_CODE    = D2.NEW_PRODUCT
		
		             WHERE A.COMP_CODE           = @CompCode
		               --20200212 추가
		               <if test="NATION_INOUT != 3">
		               AND A.NATION_CODE         = #{NATION_INOUT}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		               AND A.DIV_CODE            = #{DIV_CODE}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(SALE_PRSN)">
		                    AND     A.SALE_PRSN IN
		                    <foreach collection="SALE_PRSN" item="item" separator="," close=")" open="(">
		                        #{item}
		                    </foreach>
		               </if>
		               
		               <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
                       AND A.ITEM_CODE   = #{ITEM_CODE}						/* 품목코드  */
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
                       AND A.ITEM_CODE   LIKE #{ITEM_CODE} + '%'			/* 품목코드  */
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
                       AND CASE WHEN @RefItem = '1' THEN D.ITEM_NAME1
                                WHEN @RefItem = '2' THEN D.ITEM_NAME2
                                                    ELSE D.ITEM_NAME
                             END   LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
                       </if>

		               <if test="@foren.Ognl@isNotEmpty(SALE_FR_DATE)">
		               AND A.SALE_DATE          &gt;= #{SALE_FR_DATE}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(SALE_TO_DATE)">
		               AND A.SALE_DATE          &lt;= #{SALE_TO_DATE}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(BILL_TYPE)">
		               AND A.BILL_TYPE           = #{BILL_TYPE}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
		               AND A.PROJECT_NO          = #{PROJECT_NO}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
		               AND C.AGENT_TYPE          = #{AGENT_TYPE}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">
		               AND C.AREA_TYPE IN
		                <foreach collection="AREA_TYPE" item="item" separator="," close=")" open="(">
		                    #{item}
		                </foreach>
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
		               AND ISNULL(A.INOUT_TYPE_DETAIL, D1.INOUT_TYPE_DETAIL) IN     --20210708 수정: A.INOUT_TYPE_DETAIL -> ISNULL(A.INOUT_TYPE_DETAIL, D1.INOUT_TYPE_DETAIL)
		                <foreach collection="INOUT_TYPE_DETAIL" item="item" separator="," close=")" open="(">
		                    #{item}
		                </foreach>
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		               AND A.ORDER_TYPE IN
		                <foreach collection="ORDER_TYPE" item="item" separator="," close=")" open="(">
		                    #{item}
		                </foreach>
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
		               AND D.ITEM_LEVEL1         = #{ITEM_LEVEL1}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
		               AND D.ITEM_LEVEL2         = #{ITEM_LEVEL2}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
		               AND D.ITEM_LEVEL3         = #{ITEM_LEVEL3}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
		               AND D.ITEM_GROUP       LIKE #{ITEM_GROUP} + '%'
		               </if>
		               
		               <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM) and @foren.Ognl@isNotEmpty(MANAGE_CUSTOM_NAME)">
                       AND C.MANAGE_CUSTOM = #{MANAGE_CUSTOM}						/* 집계거래처코드  */
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM) and @foren.Ognl@isEmpty(MANAGE_CUSTOM_NAME)">
                       AND C.MANAGE_CUSTOM LIKE  #{MANAGE_CUSTOM} + '%'				/* 집계거래처코드  */
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM_NAME) and @foren.Ognl@isEmpty(MANAGE_CUSTOM)">
                       AND CASE WHEN @RefItem = '1' THEN K.CUSTOM_NAME1
                                WHEN @RefItem = '2' THEN K.CUSTOM_NAME2
                                                    ELSE K.CUSTOM_NAME
                             END      LIKE '%' + #{MANAGE_CUSTOM_NAME} + '%'		/* 집계거래처명  */
                       </if>

		               <if test="@foren.Ognl@isNotEmpty(SALE_FR_Q)">
		               AND A.SALE_Q             &gt;= #{SALE_FR_Q}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(SALE_TO_Q)">
		               AND A.SALE_Q             &lt;= #{SALE_TO_Q}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(BILL_FR_NO)">
		               AND A.BILL_NUM           &gt;= #{BILL_FR_NO}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(BILL_TO_NO)">
		               AND A.BILL_NUM           &lt;= #{BILL_TO_NO}
		               </if>
		
		               <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		               AND E.ITEM_ACCOUNT IN
		                <foreach collection="ITEM_ACCOUNT" item="item" separator="," close=")" open="(">
		                    #{item}
		                </foreach>
		               </if>
		
		               <if test="@foren.Ognl@isNotEmpty(PUB_FR_NUM)">
		               AND A.PUB_NUM            &gt;= #{PUB_FR_NUM}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(PUB_TO_NUM)">
		               AND A.PUB_NUM            &lt;= #{PUB_TO_NUM}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(INOUT_FR_DATE)">
		               AND F.INOUT_DATE         &gt;= #{INOUT_FR_DATE}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(INOUT_TO_DATE)">
		               AND F.INOUT_DATE         &lt;= #{INOUT_TO_DATE}
		               </if>
		               <if test="@foren.Ognl@isNotEmpty(TAX_TYPE)">
		               AND A.TAX_TYPE           = #{TAX_TYPE}
		               </if>
		           --20200526 수정: 멀티 선택(WH_CODE, WH_cell_CODE)
		           <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		               AND D1.WH_CODE IN
		                        <foreach collection="WH_CODE" item="item" separator="," close=")" open="(">
		                            #{item}
		                        </foreach>                                     -- 창고
		           </if>
		           <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
		               AND D1.WH_CELL_CODE IN
		                        <foreach collection="WH_CELL_CODE" item="item2" separator="," close=")" open="(">
		                            #{item2}
		                        </foreach>                                     -- 창고CELL
		           </if>
		         ) A
		           --20200103 추가: 프로젝트명 가져오기 위해 추가
		           LEFT  JOIN BCM600T  Z1 WITH (NOLOCK) ON Z1.COMP_CODE   = A.COMP_CODE
		                                               AND Z1.PJT_CODE    = A.PROJECT_NO
		   WHERE A.COMP_CODE      = @CompCode
		   <if test="@foren.Ognl@isNotEmpty(SALE_CUSTOM_CODE) and @foren.Ognl@isNotEmpty(SALE_CUSTOM_NAME)">
		     AND A.SALE_CUSTOM_CODE = #{SALE_CUSTOM_CODE}					/* 거래처코드  */
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(SALE_CUSTOM_CODE) and @foren.Ognl@isEmpty(SALE_CUSTOM_NAME)">
		     AND A.SALE_CUSTOM_CODE LIKE  #{SALE_CUSTOM_CODE} + '%'			/* 거래처코드  */
		   </if>
		   <if test="@foren.Ognl@isNotEmpty(SALE_CUSTOM_NAME) and @foren.Ognl@isEmpty(SALE_CUSTOM_CODE)">
		     AND A.SALE_CUSTOM_NAME LIKE '%' + #{SALE_CUSTOM_NAME} + '%'	/* 거래처명  */
		   </if>


		       <if test="SALE_YN == &quot;Y&quot;">
		       AND A.EX_NUM        NOT IN ('','0')                <!-- 매출기표유무:기표 -->
		       </if>
		       <if test="SALE_YN == &quot;N&quot;">
		       AND A.EX_NUM        IN ('','0')               <!-- 매출기표유무:미기표 -->
		       </if>
		
		   </if>
		    <if test="@foren.Ognl@isNotEmpty(REMARK) and @foren.Ognl@isNotEmpty(REMARK)">
		     AND A.REMARK LIKE '%' + #{REMARK} + '%'
		    </if>
		    <if test="@foren.Ognl@isNotEmpty(SALE_PRSN)">     
		        AND A.SALE_PRSN IN
		        <foreach collection="SALE_PRSN" item="item" separator="," close=")" open="(">
		            #{item}
		        </foreach>
		    </if>
		   <!-- 고객별 -->
		   <if test="ACTIVE_TAB == &quot;ssa450skrvGrid1&quot;">
		   ORDER BY A.CREATE_LOC, A.SALE_CUSTOM_CODE, A.SALE_DATE, A.INOUT_DATE
		   </if>
		   /*
		   <if test="ACTIVE_TAB == &quot;ssa450skrvGrid2&quot;">
		   <!-- 품목별 -->
		   ORDER BY A.CREATE_LOC, A.ITEM_CODE, A.SALE_DATE, A.INOUT_DATE
		   </if>
		   <if test="ACTIVE_TAB == &quot;ssa450skrvGrid3&quot;">
		   <!-- 영업담당별 -->
		   ORDER BY A.CREATE_LOC, A.SALE_PRSN, A.SALE_DATE, A.INOUT_DATE
		   </if>
		    */
		   SET NOCOUNT OFF
		   SET ARITHABORT OFF
		END
	</select>


    <!-- 출력 데이터 조회 쿼리 -->
    <select id="ssa450skrvServiceImpl.printList" parameterType="Map" resultType="rMap">
        /* ssa450skrvServiceImpl.selectList1 */
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON

      
            DECLARE @CompCode       NVARCHAR(08)    /* 법인코드     */
                  , @UserId         NVARCHAR(100)   /* 사용자ID        */
                  , @LangType       NVARCHAR(2)     /* 언어구분     */
                  , @RefItem        NVARCHAR(01)
                  , @DateFormat     NVARCHAR(10)
                  , @MonthFormat    NVARCHAR(10)

            SET @CompCode = #{S_COMP_CODE}
            SET @UserId   = #{S_USER_ID}
            SET @LangType = #{S_LANG_CODE}

            /* 명칭 참조 유형 */
            SELECT TOP 1 @RefItem = REF_ITEM
              FROM BSA300T WITH (NOLOCK)
             WHERE USER_ID = @UserId

            SET @RefItem = ISNULL(@RefItem, N'0')

            /* 날짜 포맷 유형 설정 */
            SELECT TOP 1 @DateFormat = CODE_NAME, @MonthFormat = REF_CODE2
              FROM BSA100T WITH (NOLOCK)
             WHERE COMP_CODE = @CompCode
               AND MAIN_CODE = N'B044'
               AND REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')
            SET @MonthFormat = ISNULL(@MonthFormat, 'YYYY.MM')


            IF EXISTS (SELECT TOP 1 1 FROM tempdb.sys.objects WHERE object_id = OBJECT_ID('tempdb..#SALES_TMP'))        
                DROP TABLE #SALES_TMP

            SELECT A.* 
            INTO #SALES_TMP
            FROM SALES_V A  WITH (NOLOCK) 
            WHERE A.COMP_CODE  = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
            AND A.DIV_CODE     = #{DIV_CODE}
            </if>
            AND   A.SALE_DATE &gt;= #{SALE_FR_DATE}
            AND   A.SALE_DATE &lt;= #{SALE_TO_DATE}


            /* 데이터 조회 */

            /* 생성경로가 영업일 경우 */
            <if test="TXT_CREATE_LOC != 5"> /* 무역이 아닐경우 실행 */
            SELECT A.SALE_CUSTOM_CODE
                 , A.SALE_CUSTOM_NAME
                 , A.BILL_TYPE
                 , A.BILL_TYPE_NAME
                 , A.SALE_MONTH
                 , A.SALE_DATE
                 , A.INOUT_TYPE_DETAIL
                 , A.ITEM_CODE
                 , A.ITEM_NAME
                 , A.ITEM_NAME1
                 , A.SPEC
                 , A.SALE_UNIT
                 , A.TRANS_RATE
                 , A.SALE_Q
                 , A.SALE_P
                 , A.MONEY_UNIT
                 , A.EXCHG_RATE_O
                 , A.SALE_LOC_AMT_F
                 , A.SALE_LOC_AMT_I
                 , A.TAX_TYPE
                 , A.TAX_AMT_O
                 , A.SUM_SALE_AMT
                 --20190528 추가
                 , CASE WHEN A.ORDER_TYPE='99' THEN 0
                        ELSE ISNULL(A.SALE_COST_AMT, 0)
                   END                                      AS SALE_COST_AMT
                 , A.SALE_AMT_WON       --매출액(자사)
                 , A.TAX_AMT_WON        --세액(자사)
                 , A.SUM_SALE_AMT_WON   --매출계(자사)

                 , A.CUSTOM_CODE
                 , A.CUSTOM_NAME
                 , A.ORDER_TYPE
                 , A.SALE_PRSN
                 , A.MANAGE_CUSTOM
                 , A.MANAGE_CUSTOM_NM
                 , A.AREA_TYPE
                 , A.AGENT_TYPE
                 , A.PROJECT_NO
                 , A.PUB_NUM
                 , A.EX_NUM
                 , A.BILL_NUM
                 , A.ORDER_NUM
                 , A.DISCOUNT_RATE
                 , A.PRICE_YN
                 , A.SALE_WGT_Q
                 , A.SALE_VOL_Q
                 , A.SALE_FOR_WGT_P
                 , A.SALE_FOR_VOL_P
                 , A.PRICE_TYPE
                 , A.WGT_UNIT
                 , A.UNIT_WGT
                 , A.VOL_UNIT
                 , A.UNIT_VOL
                 , A.COMP_CODE
                 , A.DIV_CODE
                 , A.BILL_SEQ
                 , A.CREATE_LOC
                 , A.LOT_NO
                 , A.SALE_CUSTOM_CODE + A.ITEM_CODE AS CUSTOM_ITEM_CODE
                 , A.REMARK
                 , A.INIT_DVRY_DATE
                 , A.DVRY_DATE
                 , A.COMP_NAME
                 , A.ADDR
                 , A.TELEPHON
                 , A.FAX_NUM
                 , A.YEAR1
                 , A.MONTH1
                 , A.DAY1
                 , A.DATE
                 , uniLITE.fnGetUserDate(A.COMP_CODE, #{SALE_FR_DATE})   AS FR_DATE
                 , uniLITE.fnGetUserDate(A.COMP_CODE, #{SALE_TO_DATE})   AS TO_DATE
              FROM (SELECT A.SALE_CUSTOM_CODE                                                                           AS SALE_CUSTOM_CODE
                         , (CASE WHEN @RefItem = '1' THEN C.CUSTOM_NAME1
                                 WHEN @RefItem = '2' THEN C.CUSTOM_NAME2
                                                     ELSE C.CUSTOM_NAME
                             END)                                                                                       AS SALE_CUSTOM_NAME
                         , A.BILL_TYPE                                                                                  AS BILL_TYPE
                         , ISNULL(B1.CODE_NAME, '')                                                                     AS BILL_TYPE_NAME
                         , (CASE WHEN ISNULL(A.SALE_DATE, '') = ''
                                 THEN ''
                                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.SALE_DATE, 1, 4))
                                                                         , 'MM'  , SUBSTRING(A.SALE_DATE, 5, 2))
                                                                         , 'DD'  , SUBSTRING(A.SALE_DATE, 7, 2))
                             END)                                                                                       AS SALE_DATE
                         , (CASE WHEN ISNULL(A.SALE_DATE, '') = ''
                                 THEN ''
                                 ELSE REPLACE(REPLACE(@MonthFormat, 'YYYY', SUBSTRING(A.SALE_DATE, 1, 4))
                                                                         , 'MM'  , SUBSTRING(A.SALE_DATE, 5, 2))
                             END)                                                                                       AS SALE_MONTH
                         , ISNULL(A.INOUT_TYPE_DETAIL, D1.INOUT_TYPE_DETAIL)                                AS INOUT_TYPE_DETAIL
                         , A.ITEM_CODE                                                                                  AS ITEM_CODE
                         , (CASE WHEN @RefItem = '1' THEN D.ITEM_NAME1
                                 WHEN @RefItem = '2' THEN D.ITEM_NAME2
                                                     ELSE D.ITEM_NAME
                             END)                                                                                       AS ITEM_NAME
                         , D.ITEM_NAME1
                         , D.SPEC                                                                                       AS SPEC
                         , A.SALE_UNIT                                                                                  AS SALE_UNIT
                         , A.TRANS_RATE                                                                                 AS TRANS_RATE
                         , A.SALE_Q                                                                                     AS SALE_Q
                         , A.SALE_P                                                                                     AS SALE_P
                         , A.MONEY_UNIT                                                                                 AS MONEY_UNIT
                         , A.EXCHG_RATE_O                                                                               AS EXCHG_RATE_O
                         , A.SALE_AMT_O                                                                                 AS SALE_LOC_AMT_F
                         , A.SALE_LOC_AMT_I                                                                             AS SALE_LOC_AMT_I
                         , A.TAX_TYPE                                                                                   AS TAX_TYPE
                         , A.TAX_AMT_O                                                                                  AS TAX_AMT_O
                         , ISNULL(A.SALE_AMT_O, 0) + ISNULL(A.TAX_AMT_O, 0)                                             AS SUM_SALE_AMT
                         --20190528 추가
                         , ISNULL(H.AVERAGE_P,0) * ISNULL(A.SALE_Q,0) * A.TRANS_RATE                                    AS SALE_COST_AMT       --매출원가

                         --, ISNULL(A.SALE_AMT_O, 0)  * ISNULL(A.EXCHG_RATE_O, 1)                                         AS SALE_AMT_WON     --매출액(자사)
                         --, ISNULL(A.TAX_AMT_O, 0)   * ISNULL(A.EXCHG_RATE_O, 1)                                         AS TAX_AMT_WON      --세액(자사)
                         --, (ISNULL(A.SALE_AMT_O, 0) + ISNULL(A.TAX_AMT_O, 0)) * ISNULL(A.EXCHG_RATE_O, 1)               AS SUM_SALE_AMT_WON --매출계(자사)

                                 , ISNULL(A.SALE_LOC_AMT_I, 0) AS SALE_AMT_WON                                  --매출액(자사)
                                 , ISNULL(A.TAX_AMT_O, 0)  AS TAX_AMT_WON                                       --세액(자사)
                         , (ISNULL(A.SALE_LOC_AMT_I, 0) + ISNULL(A.TAX_AMT_O, 0)) AS SUM_SALE_AMT_WON       --매출계(자사)

                         , A.SALE_CUSTOM_CODE                                                                           AS CUSTOM_CODE
                         , (CASE WHEN @RefItem = '1' THEN L.CUSTOM_NAME1
                                 WHEN @RefItem = '2' THEN L.CUSTOM_NAME2
                                                     ELSE L.CUSTOM_NAME
                             END)                                                                                       AS CUSTOM_NAME
                         , A.ORDER_TYPE                                                                                 AS ORDER_TYPE
                         , A.SALE_PRSN                                                                                  AS SALE_PRSN
                         , C.MANAGE_CUSTOM                                                                              AS MANAGE_CUSTOM
                         , (CASE WHEN @RefItem = '1' THEN K.CUSTOM_NAME1
                                 WHEN @RefItem = '2' THEN K.CUSTOM_NAME2
                                                     ELSE K.CUSTOM_NAME
                             END)                                                                                       AS MANAGE_CUSTOM_NM
                         , C.AREA_TYPE                                                                                  AS AREA_TYPE
                         , C.AGENT_TYPE                                                                                 AS AGENT_TYPE
                         , A.PROJECT_NO                                                                                 AS PROJECT_NO
                         , A.PUB_NUM                                                                                    AS PUB_NUM
                         , (CASE WHEN A.BILL_TYPE = '10' OR A.BILL_TYPE = '50'
                                 THEN ISNULL(CAST(G.EX_NUM AS NVARCHAR(10)),'')
                                 ELSE ISNULL(CAST(A.EX_NUM AS NVARCHAR(10)),'')
                             END)                                                                                       AS EX_NUM
                         , A.BILL_NUM                                                                                   AS BILL_NUM
                         , A.ORDER_NUM                                                                                  AS ORDER_NUM
                         , ISNULL(A.DISCOUNT_RATE, 0)                                                                   AS DISCOUNT_RATE
                         , A.PRICE_YN                                                                                   AS PRICE_YN
                         , A.SALE_WGT_Q                                                                                 AS SALE_WGT_Q
                         , A.SALE_VOL_Q                                                                                 AS SALE_VOL_Q
                         , A.SALE_FOR_WGT_P                                                                             AS SALE_FOR_WGT_P
                         , A.SALE_FOR_VOL_P                                                                             AS SALE_FOR_VOL_P
                         , A.PRICE_TYPE                                                                                 AS PRICE_TYPE
                         , A.WGT_UNIT                                                                                   AS WGT_UNIT
                         , A.UNIT_WGT                                                                                   AS UNIT_WGT
                         , A.VOL_UNIT                                                                                   AS VOL_UNIT
                         , A.UNIT_VOL                                                                                   AS UNIT_VOL
                         , A.COMP_CODE                                                                                  AS COMP_CODE
                         , A.DIV_CODE                                                                                   AS DIV_CODE
                         , A.BILL_SEQ                                                                                   AS BILL_SEQ
                         , '1'                                                                                          AS CREATE_LOC
                         , D1.LOT_NO                                                                                    AS LOT_NO
                         , A.REMARK
                         , R1.INIT_DVRY_DATE
                         , R1.DVRY_DATE
                         , B0.COMP_NAME
                         , B0.ADDR
                         , 'TEL: ' + B0.TELEPHON                            AS TELEPHON
                         , 'FAX: ' + B0.FAX_NUM                             AS FAX_NUM
                         , SUBSTRING(A.SALE_DATE, 1, 4)                     AS YEAR1
                         , SUBSTRING(A.SALE_DATE, 5, 2)                     AS MONTH1
                         , SUBSTRING(A.SALE_DATE, 7, 2)                     AS DAY1
                         , 'DATE: ' + uniLITE.fnGetUserDate(A.COMP_CODE, CONVERT(NVARCHAR(10), GETDATE(), 112)) AS DATE
                      FROM        #SALES_TMP A  WITH (NOLOCK)
                      LEFT  JOIN BTR100T D1 WITH (NOLOCK) ON D1.COMP_CODE        = A.COMP_CODE
                                                         AND D1.SALE_DIV_CODE    = A.DIV_CODE
                                                         AND D1.INOUT_NUM        = A.INOUT_NUM
                                                         AND D1.INOUT_SEQ        = A.INOUT_SEQ
                                                         AND D1.INOUT_TYPE       = A.INOUT_TYPE
                      LEFT  JOIN BCM100T C  WITH (NOLOCK) ON C.COMP_CODE         = A.COMP_CODE
                                                         AND C.CUSTOM_CODE       = A.SALE_CUSTOM_CODE
                      LEFT  JOIN BCM100T K  WITH (NOLOCK) ON K.COMP_CODE         = C.COMP_CODE
                                                         AND K.CUSTOM_CODE       = C.MANAGE_CUSTOM
                      LEFT  JOIN BCM100T L  WITH (NOLOCK) ON L.COMP_CODE         = A.COMP_CODE
                                                         AND L.CUSTOM_CODE       = A.SALE_CUSTOM_CODE       ---180807
                      LEFT  JOIN BPR100T D  WITH (NOLOCK) ON D.COMP_CODE         = A.COMP_CODE
                                                         AND D.ITEM_CODE         = A.ITEM_CODE
                      LEFT  JOIN BPR200T E  WITH (NOLOCK) ON E.COMP_CODE         = A.COMP_CODE
                                                         AND E.DIV_CODE          = A.DIV_CODE
                                                         AND E.ITEM_CODE         = A.ITEM_CODE
                      LEFT  JOIN STB100T G  WITH (NOLOCK) ON G.COMP_CODE         = A.COMP_CODE
                                                         AND G.DIV_CODE          = A.DIV_CODE
                                                         AND G.PUB_NUM           = A.PUB_NUM
                      LEFT  JOIN BSA100T B1 WITH (NOLOCK) ON B1.COMP_CODE        = A.COMP_CODE
                                                         AND B1.MAIN_CODE        = 'S024'
                                                         AND B1.SUB_CODE         = A.BILL_TYPE
                      --20190528 추가
                      LEFT  JOIN BTR100T  F WITH (NOLOCK) ON F.COMP_CODE         =  A.COMP_CODE
                                                         AND F.DIV_CODE          =  A.OUT_DIV_CODE
                                                         AND F.INOUT_NUM         =  A.INOUT_NUM
                                                         AND F.INOUT_SEQ         =  A.INOUT_SEQ
                                                         AND F.INOUT_TYPE        =  A.INOUT_TYPE
                      --20190528 추가
                      LEFT  JOIN BIV200T  H WITH (NOLOCK) ON H.COMP_CODE         =  F.COMP_CODE
                                                         AND H.DIV_CODE          =  F.DIV_CODE
                        <if test="@foren.Ognl@isNotEmpty(INOUT_FR_DATE)">
                                                             AND H.BASIS_YYYYMM =  SUBSTRING(@INOUT_FR_DATE, 1, 6)
                        </if>
                        <if test="@foren.Ognl@isEmpty(INOUT_FR_DATE)">
                                                             AND H.BASIS_YYYYMM =  SUBSTRING(F.INOUT_DATE, 1, 6)
                        </if>
                                                             AND H.WH_CODE      =  F.WH_CODE
                                                             AND H.ITEM_CODE    =  F.ITEM_CODE
                        LEFT JOIN SOF110T R1 WITH(NOLOCK) ON R1.COMP_CODE = A.COMP_CODE
                                                        AND R1.OUT_DIV_CODE = A.OUT_DIV_CODE
                                                        AND R1.ORDER_NUM = A.ORDER_NUM
                                                        AND R1.SER_NO = A.SER_NO
                        LEFT JOIN BOR100T B0 WITH(NOLOCK) ON B0.COMP_CODE = A.COMP_CODE
                     WHERE A.COMP_CODE           = @CompCode
                       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                       AND A.DIV_CODE            = #{DIV_CODE}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(SALE_PRSN)">
                       AND A.SALE_PRSN           = #{SALE_PRSN}
                       </if>
                       
                       <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
                       AND A.ITEM_CODE   = #{ITEM_CODE}						/* 품목코드  */
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
                       AND A.ITEM_CODE   LIKE #{ITEM_CODE} + '%'			/* 품목코드  */
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
                       AND CASE WHEN @RefItem = '1' THEN D.ITEM_NAME1
                                WHEN @RefItem = '2' THEN D.ITEM_NAME2
                                                    ELSE D.ITEM_NAME
                             END   LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
                       </if>

                       <if test="@foren.Ognl@isNotEmpty(SALE_FR_DATE)">
                       AND A.SALE_DATE          &gt;= #{SALE_FR_DATE}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(SALE_TO_DATE)">
                       AND A.SALE_DATE          &lt;= #{SALE_TO_DATE}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(BILL_TYPE)">
                       AND A.BILL_TYPE           = #{BILL_TYPE}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(PROJECT_NO)">
                       AND A.PROJECT_NO          = #{PROJECT_NO}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
                       AND C.AGENT_TYPE          = #{AGENT_TYPE}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(AREA_TYPE)">
                       AND C.AREA_TYPE           = #{AREA_TYPE}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(INOUT_TYPE_DETAIL)">
                       AND A.INOUT_TYPE_DETAIL   = #{INOUT_TYPE_DETAIL}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
                       AND A.ORDER_TYPE          = #{ORDER_TYPE}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
                       AND D.ITEM_LEVEL1         = #{ITEM_LEVEL1}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
                       AND D.ITEM_LEVEL2         = #{ITEM_LEVEL2}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
                       AND D.ITEM_LEVEL3         = #{ITEM_LEVEL3}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(ITEM_GROUP)">
                       AND D.ITEM_GROUP       LIKE #{ITEM_GROUP} + '%'
                       </if>
                       
                       
                       <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM) and @foren.Ognl@isNotEmpty(MANAGE_CUSTOM_NAME)">
                       AND C.MANAGE_CUSTOM = #{MANAGE_CUSTOM}						/* 집계거래처코드  */
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM) and @foren.Ognl@isEmpty(MANAGE_CUSTOM_NAME)">
                       AND C.MANAGE_CUSTOM LIKE  #{MANAGE_CUSTOM} + '%'				/* 집계거래처코드  */
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(MANAGE_CUSTOM_NAME) and @foren.Ognl@isEmpty(MANAGE_CUSTOM)">
                       AND CASE WHEN @RefItem = '1' THEN K.CUSTOM_NAME1
                                WHEN @RefItem = '2' THEN K.CUSTOM_NAME2
                                                    ELSE K.CUSTOM_NAME
                             END      LIKE '%' + #{MANAGE_CUSTOM_NAME} + '%'		/* 집계거래처명  */
                       </if>
                       
                       <if test="@foren.Ognl@isNotEmpty(SALE_FR_Q)">
                       AND A.SALE_Q             &gt;= #{SALE_FR_Q}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(SALE_TO_Q)">
                       AND A.SALE_Q             &lt;= #{SALE_TO_Q}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(BILL_FR_NO)">
                       AND A.BILL_NUM           &gt;= #{BILL_FR_NO}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(BILL_TO_NO)">
                       AND A.BILL_NUM           &lt;= #{BILL_TO_NO}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
                       AND E.ITEM_ACCOUNT        = #{ITEM_ACCOUNT}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(PUB_FR_NUM)">
                       AND A.PUB_NUM            &gt;= #{PUB_FR_NUM}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(PUB_TO_NUM)">
                       AND A.PUB_NUM            &lt;= #{PUB_TO_NUM}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(INOUT_FR_DATE)">
                       AND F.INOUT_DATE         &gt;= #{INOUT_FR_DATE}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(INOUT_TO_DATE)">
                       AND F.INOUT_DATE         &lt;= #{INOUT_TO_DATE}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(TAX_TYPE)">
                       AND A.TAX_TYPE           = #{TAX_TYPE}
                       </if>
                   --20200526 수정: 멀티 선택(WH_CODE, WH_cell_CODE)
                   <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
                       AND D1.WH_CODE IN
                                <foreach collection="WH_CODE" item="item" separator="," close=")" open="(">
                                    #{item}
                                </foreach>                                     -- 창고
                   </if>
                   <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
                       AND D1.WH_CELL_CODE IN
                                <foreach collection="WH_CELL_CODE" item="item2" separator="," close=")" open="(">
                                    #{item2}
                                </foreach>                                     -- 창고CELL
                   </if>
                 ) A
           WHERE A.COMP_CODE      = @CompCode
           
           <if test="@foren.Ognl@isNotEmpty(SALE_CUSTOM_CODE) and @foren.Ognl@isNotEmpty(SALE_CUSTOM_NAME)">
           AND A.SALE_CUSTOM_CODE = #{SALE_CUSTOM_CODE}					/* 거래처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(SALE_CUSTOM_CODE) and @foren.Ognl@isEmpty(SALE_CUSTOM_NAME)">
           AND A.SALE_CUSTOM_CODE LIKE  #{SALE_CUSTOM_CODE} + '%'			/* 거래처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(SALE_CUSTOM_NAME) and @foren.Ognl@isEmpty(SALE_CUSTOM_CODE)">
           AND A.SALE_CUSTOM_NAME LIKE '%' + #{SALE_CUSTOM_NAME} + '%'	/* 거래처명  */
           </if>

            <if test="SALE_YN == &quot;Y&quot;">
            AND A.EX_NUM        NOT IN ('','0')                <!-- 매출기표유무:기표 -->
            </if>
            <if test="SALE_YN == &quot;N&quot;">
            AND A.EX_NUM        IN ('','0')               <!-- 매출기표유무:미기표 -->
            </if>
           </if>
            <if test="@foren.Ognl@isNotEmpty(REMARK) and @foren.Ognl@isNotEmpty(REMARK)">
             AND A.REMARK LIKE '%' + #{REMARK} + '%'
            </if>

           <!-- 고객별 -->
           <if test="ACTIVE_TAB == &quot;ssa450skrvGrid1&quot;">
           ORDER BY A.CREATE_LOC, A.SALE_CUSTOM_CODE, A.SALE_DATE, A.INOUT_DATE
           </if>
           SET NOCOUNT OFF
           SET ARITHABORT OFF
        END
    </select>














    <select id="ssa450skrvServiceImpl.selectList1_무역포함 쿼리 정리" parameterType="Map" resultType="rMap">
        /* ssa450skrv.Cssa450skrv[fnssa450Tnq] Query01 */
            BEGIN

                DECLARE   @TAB_TYPE            NVARCHAR(01)   -- (필수) 고객별 : 1, 품목별 : 2, 영업담당별 : 3
                        , @SALE_PRSN           NVARCHAR(02)   -- (선택) 영업담당
                        , @DIV_CODE            NVARCHAR(08)   -- (선택) 사업장
                        , @CUSTOM_CODE         NVARCHAR(08)   -- (선택) 고객코드
                        , @CUSTOM_NAME         NVARCHAR(20)   -- (선택) 고객명
                        , @ITEM_CODE           NVARCHAR(20)   -- (선택) 품목코드
                        , @ITEM_NAME           NVARCHAR(200)   -- (선택) 품목명
                        , @BILL_FR_DATE        NVARCHAR(08)   -- (선택) 매출일(FR)
                        , @BILL_TO_DATE        NVARCHAR(08)   -- (선택) 매출일(TO)
                        , @BILL_TYPE           NVARCHAR(04)   -- (선택) 부가세유형
                        , @PROJECT_NO          NVARCHAR(20)   -- (선택) 관리번호
                        , @SALE_YN             NVARCHAR(01)   -- (필수) 매출기표유무  전체 : '', 기표 : Y, 미기표 : N
                        , @AGENT_TYPE          NVARCHAR(08)   -- (선택) 고객분류
                        , @AREA_TYPE           NVARCHAR(04)   -- (선택) 지역
                        , @INOUT_TYPE          NVARCHAR(02)   -- (선택) 출고유형
                        , @ORDER_TYPE          NVARCHAR(02)   -- (선택) 판매유형
                        , @ITEM_LEVEL1         NVARCHAR(10)   -- (선택) 대분류
                        , @ITEM_LEVEL2         NVARCHAR(10)   -- (선택) 중분류
                        , @ITEM_LEVEL3         NVARCHAR(10)   -- (선택) 소분류
                        , @ITEM_GROUP_CODE     NVARCHAR(20)   -- (선택) 대표모델코드
                        , @ITEM_GROUP_NAME     NVARCHAR(40)   -- (선택) 대표모델명
                        , @MANAGE_CUSTOM_CODE  NVARCHAR(08)   -- (선택) 집계거래처코드
                        , @MANAGE_CUSTOM_NAME  NVARCHAR(20)   -- (선택) 집계거래처명
                        , @SALE_FR_Q           NUMERIC(18,6)  -- (선택) 매출량(FR)
                        , @SALE_TO_Q           NUMERIC(18,6)  -- (선택) 매출량(TO)
                        , @BILL_FR_NO          NVARCHAR(20)   -- (선택) 매출번호(FR)
                        , @BILL_TO_NO          NVARCHAR(20)   -- (선택) 매출번호(TO)
                        , @USER_ID             NVARCHAR(20)   -- (필수) 유저ID
                        , @TRADE_TYPE          NVARCHAR(01)   -- (필수) 무역포함여부  포함안함 : 1, 포함 : ''
                        , @ITEM_ACCOUNT        NVARCHAR(02)   -- (선택) 품목계정
                        , @PUB_FR_NUM          NVARCHAR(20)   -- (선택) 계산서번호(FR)
                        , @PUB_TO_NUM          NVARCHAR(20)   -- (선택) 계산서번호(TO)
                        , @INOUT_FR_DATE       NVARCHAR(08)   -- (선택) 출고일(FR)
                        , @INOUT_TO_DATE       NVARCHAR(08)   -- (선택) 출고일(TO)
                        , @COMP_CODE           NVARCHAR(08)   -- (필수) COMP_CODE

                    SET NOCOUNT ON
                    SET ARITHABORT ON


                    SET @TAB_TYPE            = #{TAB_TYPE}
                    SET @SALE_PRSN           = #{SALE_PRSN}
                    SET @DIV_CODE            = #{DIV_CODE}
                    SET @CUSTOM_CODE         = #{SALE_CUSTOM_CODE}
                    SET @CUSTOM_NAME         = #{SALE_CUSTOM_NAME}
                    SET @ITEM_CODE           = #{ITEM_CODE}
                    SET @ITEM_NAME           = #{ITEM_NAME}
                    SET @BILL_FR_DATE        = #{SALE_FR_DATE}
                    SET @BILL_TO_DATE        = #{SALE_TO_DATE}
                    SET @BILL_TYPE           = #{BILL_TYPE}
                    SET @PROJECT_NO          = #{PROJECT_NO}
                    SET @SALE_YN             = #{SALE_YN}
                    SET @AGENT_TYPE          = #{AGENT_TYPE}
                    SET @AREA_TYPE           = #{AREA_TYPE}
                    SET @INOUT_TYPE          = #{INOUT_TYPE_DETAIL}
                    SET @ORDER_TYPE          = #{ORDER_TYPE}
                    SET @ITEM_LEVEL1         = #{ITEM_LEVEL1}
                    SET @ITEM_LEVEL2         = #{ITEM_LEVEL2}
                    SET @ITEM_LEVEL3         = #{ITEM_LEVEL3}
                    SET @ITEM_GROUP_CODE     = #{ITEM_GROUP_CODE}
                    SET @ITEM_GROUP_NAME     = #{ITEM_GROUP_NAME}
                    SET @MANAGE_CUSTOM_CODE  = #{MANAGE_CUSTOM}
                    SET @MANAGE_CUSTOM_NAME  = #{MANAGE_CUSTOM_NAME}
                    SET @SALE_FR_Q           = #{SALE_FR_Q}
                    SET @SALE_TO_Q           = #{SALE_TO_Q}
                    SET @BILL_FR_NO          = #{BILL_FR_NO}
                    SET @BILL_TO_NO          = #{BILL_TO_NO}
                    SET @USER_ID             = #{S_USER_ID}
                    SET @TRADE_TYPE          = #{TXT_CREATE_LOC}
                    SET @ITEM_ACCOUNT        = #{ITEM_ACCOUNT}
                    SET @PUB_FR_NUM          = #{PUB_FR_NUM}
                    SET @PUB_TO_NUM          = #{PUB_TO_NUM}
                    SET @INOUT_FR_DATE       = #{INOUT_FR_DATE}
                    SET @INOUT_TO_DATE       = #{INOUT_TO_DATE}
                    SET @COMP_CODE           = #{S_COMP_CODE}


                SELECT
                         CASE WHEN @TAB_TYPE = '3' THEN ISNULL(B6.CODE_NAME /*  sBwrLangFld  */ , '')
                              ELSE TA.INDEX01
                         END                             AS INDEX01
                       , TA.INDEX02
                       , CASE WHEN TA.GUBUN = '1' THEN (CASE WHEN @TAB_TYPE = '1' THEN ISNULL(B1.CODE_NAME /*  sBwrLangFld  */ , '')     --국내영업
                                                                                  ELSE TA.INDEX03
                                                         END)
                                                  ELSE (CASE WHEN @TAB_TYPE = '1' THEN ISNULL(B11.CODE_NAME /*  sBwrLangFld  */ , '')    --해외무역
                                                                                  ELSE TA.INDEX03
                                                         END)
                          END                            AS INDEX03
                       , CASE WHEN TA.GUBUN = '1' THEN (CASE WHEN @TAB_TYPE = '3' THEN ISNULL(B1.CODE_NAME /*  sBwrLangFld  */ , '')     --국내영업
                                                                                  ELSE TA.INDEX04
                                                         END)
                                                  ELSE (CASE WHEN @TAB_TYPE = '3' THEN ISNULL(B11.CODE_NAME /*  sBwrLangFld  */ , '')    --해외무역
                                                                                  ELSE TA.INDEX04
                                                         END)
                          END                            AS INDEX04
                       , TA.INDEX05
                       , CASE WHEN @TAB_TYPE = '1' THEN ISNULL(B2.CODE_NAME /*  sBwrLangFld  */ , '')
                              ELSE TA.INDEX06
                         END                             AS INDEX06
                       , CASE WHEN @TAB_TYPE = '3' THEN ISNULL(B2.CODE_NAME /*  sBwrLangFld  */ , '')
                              ELSE TA.INDEX07
                         END                             AS INDEX07
                       , TA.ITEM_CODE
                       , TA.ITEM_NAME
                       , TA.SPEC
                       , TA.SALE_UNIT
                       , B10.CODE_NAME                                    AS PRICE_TYPE
                       , TA.TRANS_RATE
                       , TA.SALE_MONTH1
                       , uniLITE.fnGetUserDate(@COMP_CODE, TA.SALE_DATE1) AS SALE_DATE1
                       , TA.SALE_Q
                       , TA.SALE_Q * TA.TRANS_RATE AS SALE_STOCK_Q --재고단위 판매수량
                       , TA.SALE_WGT_Q
                       , TA.SALE_VOL_Q
                       , TA.WGT_UNIT
                       , TA.UNIT_WGT
                       , TA.VOL_UNIT
                       , TA.UNIT_VOL
                       , TA.SALE_CUSTOM_CODE1
                       , TA.CUSTOM_NAME1
                       , TA.SOF_CUSTOM_CODE
                       , TA.SOF_CUSTOM_NAME
                       , ISNULL(B2.CODE_NAME /*  sBwrLangFld  */ , '')        AS INOUT_TYPE_DETAIL1
                       , uniLITE.fnGetUserDate(@COMP_CODE, TA.INOUT_DATE1) AS INOUT_DATE1
                       , TA.SALE_Q1
                       , TA.SALE_WGT_Q AS SALE_WGT_Q1
                       , TA.SALE_VOL_Q AS SALE_VOL_Q1
                       , TA.SALE_P
                       , TA.SALE_FOR_WGT_P
                       , TA.SALE_FOR_VOL_P
                       , TA.MONEY_UNIT
                       , TA.EXCHG_RATE_O
                       , TA.SALE_LOC_AMT_F
                       , TA.SALE_LOC_AMT_I
                       , B4.CODE_NAME /*  sBwrLangFld  */                     AS TAX_TYPE
                       , TA.TAX_AMT_O
                       , TA.SUM_SALE_AMT
            --수정세금계산서일경우 매출원가, 매출이익, 마진율 0 처리 20130311 BY CHO
                       , CASE WHEN TA.ORDER_TYPE='99' THEN 0 ELSE ISNULL(TA.SALE_COST_AMT,0) END AS SALE_COST_AMT
                       , CASE WHEN TA.ORDER_TYPE='99' THEN 0 ELSE ISNULL((TA.SALE_LOC_AMT_I - TA.SALE_COST_AMT),0) END AS PROFIT_AMT
                       , CASE WHEN TA.ORDER_TYPE='99' THEN 0 ELSE ISNULL((
                                                                    CASE WHEN TA.SALE_LOC_AMT_I = 0 THEN 0
                                                                         ELSE ((TA.SALE_LOC_AMT_I - TA.SALE_COST_AMT) / TA.SALE_LOC_AMT_I) * 100
                                                                    END
                                                                   ),0) END    AS MARGIN_RATE
                       , ISNULL(B5.CODE_NAME /*  sBwrLangFld  */ , '')        AS ORDER_TYPE
                       , B9.DIV_NAME                     AS DIV_CODE
                       , ISNULL(B6.CODE_NAME /*  sBwrLangFld  */ , '')        AS SALE_PRSN
                       , TA.MANAGE_CUSTOM
                       , TA.MANAGE_CUSTOM_NM
                       , ISNULL(B8.CODE_NAME /*  sBwrLangFld  */ , '')        AS AREA_TYPE
                       , ISNULL(B7.CODE_NAME /*  sBwrLangFld  */ , '')        AS AGENT_TYPE
                       , ISNULL(TA.DVRY_CUST_NM, '')                        AS DVRY_CUST_NM
                       , TA.PROJECT_NO
                       , TA.PUB_NUM
                       , TA.EX_NUM
                       , TA.BILL_NUM
                       , TA.ORDER_NUM
                       , TA.DVRY_DATE
                       , TA.DISCOUNT_RATE
                       , ISNULL(B3.CODE_NAME /*  sBwrLangFld  */ , '')        AS PRICE_YN
                       , TA.GUBUN
                       , TA.SORT
--                       , TA.ITEM_GROUP

                FROM
                     (
                        SELECT
                                CASE WHEN @TAB_TYPE = '1' THEN A.SALE_CUSTOM_CODE
                                     WHEN @TAB_TYPE = '3' THEN A.SALE_PRSN
                                     ELSE ''
                                END                                                                                          AS INDEX01
                              , CASE WHEN @TAB_TYPE = '1' THEN uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID, C.CUSTOM_CODE)
                                     WHEN @TAB_TYPE = '3' THEN A.SALE_CUSTOM_CODE
                                     ELSE ''
                                END                                                                                          AS INDEX02
                              , CASE WHEN @TAB_TYPE = '1' THEN A.BILL_TYPE
                                     WHEN @TAB_TYPE = '3' THEN uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID, C.CUSTOM_CODE)
                                     ELSE ''
                                END                                                                                          AS INDEX03
                              , CASE WHEN @TAB_TYPE = '1' THEN LEFT(A.SALE_DATE, 6)
                                     WHEN @TAB_TYPE = '3' THEN A.BILL_TYPE
                                     ELSE ''
                                END                                                                                          AS INDEX04
                              , CASE WHEN @TAB_TYPE = '1' THEN uniLITe.fnGetUserDate(@COMP_CODE, A.SALE_DATE)
                                     WHEN @TAB_TYPE = '3' THEN LEFT(A.SALE_DATE, 6)
                                     ELSE ''
                                END                                                                                          AS INDEX05
                              , CASE WHEN @TAB_TYPE = '1' THEN B.INOUT_TYPE_DETAIL
                                     WHEN @TAB_TYPE = '3' THEN uniLITe.fnGetUserDate(@COMP_CODE, A.SALE_DATE)
                                     ELSE ''
                                END                                                                                          AS INDEX06
            --수정세금계산서 발행된 매출일경우 수불은 없으므로 수불일 공백처리 20130311 BY CHO
            --                  , CASE WHEN @TAB_TYPE = '1' THEN uniLITe.fnGetUserDate(@COMP_CODE, F.INOUT_DATE)
                              , CASE WHEN @TAB_TYPE = '1' THEN (CASE WHEN A.ORDER_TYPE='99' THEN '' ELSE uniLITe.fnGetUserDate(@COMP_CODE, F.INOUT_DATE) END)
                                     WHEN @TAB_TYPE = '3' THEN B.INOUT_TYPE_DETAIL
                                     ELSE ''
                                END                                                                                          AS INDEX07

                              , B.ITEM_CODE                                                                                  AS ITEM_CODE
                              , uniLITE.fnItemNameComp(@COMP_CODE, @USER_ID, B.ITEM_CODE)                                    AS ITEM_NAME
                              , D.SPEC                                                                                       AS SPEC
                              , B.SALE_UNIT                                                                                  AS SALE_UNIT
                              , B.TRANS_RATE                                                                                 AS TRANS_RATE
                              , LEFT(A.SALE_DATE, 6)                                                                         AS SALE_MONTH1
                              , A.SALE_DATE                                                                                  AS SALE_DATE1
                              , B.SALE_Q                                                                                    AS SALE_Q
                              , B.WGT_UNIT                                                                                   AS WGT_UNIT
                              , B.UNIT_WGT                                                                                   AS UNIT_WGT
                              , B.VOL_UNIT                                                                                   AS VOL_UNIT
                              , B.UNIT_VOL                                                                                   AS UNIT_VOL
                              , A.SALE_CUSTOM_CODE                                                                           AS SALE_CUSTOM_CODE1
                              , uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID, C.CUSTOM_CODE)                                  AS CUSTOM_NAME1
                              , B.INOUT_TYPE_DETAIL                                                                          AS INOUT_TYPE_DETAIL1
                              , CASE WHEN A.ORDER_TYPE='99' THEN '' ELSE ISNULL(F.INOUT_DATE, '') END                        AS INOUT_DATE1
                              , B.SALE_Q                                                                                     AS SALE_Q1
                              , B.SALE_P                                                                                     AS SALE_P
                              , A.MONEY_UNIT                                                                                 AS MONEY_UNIT
                              , A.EXCHG_RATE_O                                                                               AS EXCHG_RATE_O
--                              , CAST(0 AS NUMERIC(18, 4))                                                                    AS SALE_LOC_AMT_F
                              , B.SALE_AMT_O                                                                                 AS SALE_LOC_AMT_F
                              , B.SALE_LOC_AMT_I                                                                             AS SALE_LOC_AMT_I
                              , B.TAX_TYPE                                                                                   AS TAX_TYPE
                              , B.TAX_AMT_O                                                                                  AS TAX_AMT_O
                              , ISNULL(B.SALE_LOC_AMT_I, 0) + ISNULL(B.TAX_AMT_O, 0)                                         AS SUM_SALE_AMT
                              , A.ORDER_TYPE                                                                                 AS ORDER_TYPE
                              , B.DIV_CODE                                                                                   AS DIV_CODE
                              , A.SALE_PRSN                                                                                  AS SALE_PRSN
                              , C.MANAGE_CUSTOM                                                                              AS MANAGE_CUSTOM
                              , uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID, C.MANAGE_CUSTOM)                                AS MANAGE_CUSTOM_NM
                              , C.AREA_TYPE                                                                                  AS AREA_TYPE
                              , C.AGENT_TYPE                                                                                 AS AGENT_TYPE
                              , ISNULL(J.DVRY_CUST_NM, '')                                                                   AS DVRY_CUST_NM
                              , B.PROJECT_NO                                                                                 AS PROJECT_NO
                              , B.PUB_NUM                                                                                    AS PUB_NUM
                              , CASE WHEN A.BILL_TYPE = '10' OR A.BILL_TYPE = '50' THEN CAST(G.EX_NUM AS NVARCHAR(10))
                                     ELSE CAST(A.EX_NUM AS NVARCHAR(10))
                                END                                                                                          AS EX_NUM
                              , B.BILL_NUM                                                                                   AS BILL_NUM
                              , B.ORDER_NUM                                                                                  AS ORDER_NUM
                              , uniLITE.fnGetUserDate(@COMP_CODE, ISNULL(S.DVRY_DATE, ''))                                   AS DVRY_DATE
                              , ISNULL(B.DISCOUNT_RATE, 0)                                                                   AS DISCOUNT_RATE
                              , B.PRICE_YN                                                                                   AS PRICE_YN
                              , CAST('1' AS NVARCHAR(1))                                                                     AS GUBUN               --영업
                              , B.BILL_NUM + CAST(B.BILL_SEQ AS VARCHAR(8))                                                  AS SORT
                              , D.ITEM_GROUP                                                                                 AS ITEM_GROUP
                              , A.COMP_CODE                                                                                  AS COMP_CODE
                              , A.BILL_TYPE                                                                                  AS BILL_TYPE
                              , D.ITEM_LEVEL1
                              , D.ITEM_LEVEL2
                              , D.ITEM_LEVEL3
                              , E.ITEM_ACCOUNT
                              , ISNULL(H.AVERAGE_P,0) * ISNULL(B.SALE_Q,0) * B.TRANS_RATE                                    AS SALE_COST_AMT       --매출원가
                              , I.CUSTOM_CODE                                                                                AS SOF_CUSTOM_CODE
                              , uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID, I.CUSTOM_CODE)                                  AS SOF_CUSTOM_NAME
                              , B.SALE_WGT_Q                                                                                 AS SALE_WGT_Q
                              , B.SALE_VOL_Q                                                                                 AS SALE_VOL_Q
                              , B.SALE_FOR_WGT_P                                                                             AS SALE_FOR_WGT_P
                              , B.SALE_FOR_VOL_P                                                                             AS SALE_FOR_VOL_P
                              , B.PRICE_TYPE                                                                                 AS PRICE_TYPE
--                              , B.WGT_UNIT                                                                                   AS WGT_UNIT
--                              , B.UNIT_WGT                                                                                   AS UNIT_WGT
--                              , B.VOL_UNIT                                                                                   AS VOL_UNIT
--                              , B.UNIT_VOL                                                                                   AS UNIT_VOL
                        FROM             SSA100T  A WITH (NOLOCK)
                              INNER JOIN SSA110T  B WITH (NOLOCK) ON B.COMP_CODE    =  A.COMP_CODE
                                                                 AND B.DIV_CODE     =  A.DIV_CODE
                                                                 AND B.BILL_NUM     =  A.BILL_NUM
                              LEFT  JOIN BCM100T  C WITH (NOLOCK) ON C.COMP_CODE    =  A.COMP_CODE
                                                                 AND C.CUSTOM_CODE  =  A.SALE_CUSTOM_CODE
                              LEFT  JOIN BPR100T  D WITH (NOLOCK) ON D.COMP_CODE    =  B.COMP_CODE
                                                                 AND D.ITEM_CODE    =  B.ITEM_CODE
                              LEFT  JOIN BPR200T  E WITH (NOLOCK) ON E.COMP_CODE    =  B.COMP_CODE
                                                                 AND E.DIV_CODE     =  B.DIV_CODE
                                                                 AND E.ITEM_CODE    =  B.ITEM_CODE
                              LEFT  JOIN BTR100T  F WITH (NOLOCK) ON F.COMP_CODE    =  B.COMP_CODE
                                                                 AND F.DIV_CODE     =  B.OUT_DIV_CODE
                                                                 AND F.INOUT_NUM    =  B.INOUT_NUM
                                                                 AND F.INOUT_SEQ    =  B.INOUT_SEQ
                                                                 AND F.INOUT_TYPE   =  B.INOUT_TYPE
                              LEFT  JOIN SOF100T  I WITH (NOLOCK) ON I.COMP_CODE    =  B.COMP_CODE
                                                                 AND I.DIV_CODE     =  B.DIV_CODE
                                                                 AND I.ORDER_NUM    =  B.ORDER_NUM
                              LEFT  JOIN STB100T  G WITH (NOLOCK) ON G.COMP_CODE    =  B.COMP_CODE
                                                                 AND G.DIV_CODE     =  B.DIV_CODE
                                                                 AND G.PUB_NUM      =  B.PUB_NUM
                              LEFT  JOIN BIV200T  H WITH (NOLOCK) ON H.COMP_CODE    =  F.COMP_CODE
                                                                 AND H.DIV_CODE     =  F.DIV_CODE
            <if test="@foren.Ognl@isNotEmpty(INOUT_TO_DATE)">
                                                                 AND H.BASIS_YYYYMM =  SUBSTRING(@INOUT_FR_DATE, 1, 6)
            </if>
            <if test="@foren.Ognl@isEmpty(INOUT_TO_DATE)">
                                                                 AND H.BASIS_YYYYMM =  SUBSTRING(F.INOUT_DATE, 1, 6)
            </if>
                                                                 AND H.WH_CODE      =  F.WH_CODE
                                                                 AND H.ITEM_CODE    =  F.ITEM_CODE
                              LEFT  JOIN SCM100T  J WITH (NOLOCK) ON J.COMP_CODE    =  B.COMP_CODE
                                                                 AND J.CUSTOM_CODE  =  B.CUSTOM_CODE
                                                                 AND CONVERT(NVARCHAR, J.DVRY_CUST_SEQ) = B.DVRY_CUST_CD
                              LEFT  JOIN SOF110T  S WITH (NOLOCK) ON S.COMP_CODE    = B.COMP_CODE
                                                                 AND S.DIV_CODE     = B.DIV_CODE
                                                                 AND S.ORDER_NUM    = B.ORDER_NUM
                                                                 AND S.SER_NO       = B.SER_NO

                       UNION
             /**(무역)국내매출**/
                       SELECT

                               CASE WHEN @TAB_TYPE = '1' THEN  A.APPLICANT
                                    WHEN @TAB_TYPE = '3' THEN  A.EXPORT_NM
                                    ELSE ''
                               END                                                            AS INDEX01
                             , CASE WHEN @TAB_TYPE = '1' THEN uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID,  C.CUSTOM_CODE)
                                    WHEN @TAB_TYPE = '3' THEN C.CUSTOM_CODE
                                    ELSE ''
                               END                                                            AS INDEX02
                             , CASE WHEN @TAB_TYPE = '1' THEN CAST('' AS NVARCHAR(4))
                                    WHEN @TAB_TYPE = '3' THEN uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID,  C.CUSTOM_CODE)
                                    ELSE ''
                               END                                                            AS INDEX03
                             , CASE WHEN @TAB_TYPE = '1' THEN LEFT(A.ACCEPT_DATE, 6)
                                    WHEN @TAB_TYPE = '3' THEN ''
                                    ELSE ''
                               END                                                            AS INDEX04
                             , CASE WHEN @TAB_TYPE = '1' THEN uniLITE.fnGetUserDate(@COMP_CODE, A.ACCEPT_DATE)
                                    WHEN @TAB_TYPE = '3' THEN LEFT(A.ACCEPT_DATE, 6)
                                    ELSE ''
                               END                                                            AS INDEX05
                             , CASE WHEN @TAB_TYPE = '1' THEN ''
                                    WHEN @TAB_TYPE = '3' THEN uniLITE.fnGetUserDate(@COMP_CODE, A.ACCEPT_DATE)
                                    ELSE ''
                               END                                                            AS INDEX06
                             , CASE WHEN @TAB_TYPE = '1' THEN CAST('' AS NVARCHAR(3))
                                    WHEN @TAB_TYPE = '3' THEN ''
                                    ELSE ''
                               END                                                            AS INDEX07

                             , B.ITEM_CODE                                                    AS ITEM_CODE
                             , uniLITE.fnItemNameComp(@COMP_CODE, @USER_ID, D.ITEM_CODE)      AS ITEM_NAME
                             , B.STANDARD                                                     AS SPEC
                             , B.UNIT                                                         AS SALE_UNIT
                             , B.TRANS_RATE                                                   AS TRANS_RATE
                             , LEFT(A.ACCEPT_DATE, 6)                                         AS SALE_MONTH1
                             , A.ACCEPT_DATE                                                  AS SALE_DATE1
                             , B.QTY                                                          AS SALE_Q
                             , B.WGT_UNIT                                                     AS WGT_UNIT
                             , B.UNIT_WGT                                                     AS UNIT_WGT
                             , B.VOL_UNIT                                                     AS VOL_UNIT
                             , B.UNIT_VOL                                                     AS UNIT_VOL
                             , A.APPLICANT                                                    AS SALE_CUSTOM_CODE1
                             , uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID,  C.CUSTOM_CODE)   AS CUSTOM_NAME1
                             , CAST('' AS NVARCHAR(3))                                        AS INOUT_TYPE_DETAIL1
                              , ''                                                            AS INOUT_DATE1
                             , B.QTY                                                          AS SALE_Q1
                             , B.PRICE                                                        AS SALE_P
                             , A.AMT_UNIT                                                     AS MONEY_UNIT
                             , B.EXCHANGE_RATE                                                AS EXCHG_RATE_O
                             , B.ACCEPT_AMT                                                   AS SALE_LOC_AMT_F
                             , B.ACCEPT_AMT_WON                                               AS SALE_LOC_AMT_I
                             , J.SUB_CODE                                                     AS TAX_TYPE
                             , CAST(0 AS NUMERIC(18,4))                                       AS TAX_AMT_O
                             , ISNULL(B.ACCEPT_AMT_WON, 0)                                    AS SUM_SALE_AMT
                             , A.ORDER_TYPE                                                   AS ORDER_TYPE
                             , A.DIV_CODE                                                     AS DIV_CODE
                             , A.EXPORT_NM                                                    AS SALE_PRSN
                             , C.MANAGE_CUSTOM                                                AS MANAGE_CUSTOM
                             , uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID,  C.CUSTOM_CODE)   AS MANAGE_CUSTOM_NM
                             , C.AREA_TYPE                                                    AS AREA_TYPE
                             , C.AGENT_TYPE                                                   AS AGENT_TYPE
                             , ''                                                             AS DVRY_CUST_NM
                             , A.PROJECT_NO                                                   AS PROJECT_NO
                             , CAST('' AS NVARCHAR(20))                                       AS PUB_NUM
                             , CAST(A.EX_NUM AS NVARCHAR(10))                                 AS EX_NUM
                             , A.ACCEPT_NO                                                    AS BILL_NUM
                             , B.SO_SER_NO                                                    AS ORDER_NUM
                             , ''                                                             AS DVRY_DATE
                             , CAST(0 AS NUMERIC(5,2))                                        AS DISCOUNT_RATE
                             , I.SUB_CODE                                                     AS PRICE_YN
                             , CAST('5' AS NVARCHAR(25))                                      AS GUBUN                   --무역
                             , B.ACCEPT_NO + CAST(B.ACCEPT_SEQ AS VARCHAR(8))                 AS SORT
                             , D.ITEM_GROUP                                                   AS ITEM_GROUP
                             , A.COMP_CODE                                                    AS COMP_CODE
                             , '20'                                                           AS BILL_TYPE --선적등록:'10'직수출/Local매출:'20'영세매출
                             , D.ITEM_LEVEL1
                             , D.ITEM_LEVEL2
                             , D.ITEM_LEVEL3
                             , Z.ITEM_ACCOUNT
                             , ISNULL(H.AVERAGE_P,0) * ISNULL(B.QTY,0) * B.TRANS_RATE          AS SALE_COST_AMT
                             , M.IMPORTER                                                     AS SOF_CUSTOM_CODE
                             , uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID, M.IMPORTER)       AS SOF_CUSTOM_NAME
                             , B.WGT_QTY                                                      AS SALE_WGT_Q
                             , B.VOL_QTY                                                      AS SALE_VOL_Q
                             , B.WGT_PRICE                                                    AS SALE_FOR_WGT_P
                             , B.VOL_PRICE                                                    AS SALE_FOR_VOL_P
                             , B.PRICE_TYPE                                                   AS PRICE_TYPE
--                             , B.WGT_UNIT                                                     AS WGT_UNIT
--                             , B.UNIT_WGT                                                     AS UNIT_WGT
--                             , B.VOL_UNIT                                                     AS VOL_UNIT
--                             , B.UNIT_VOL                                                     AS UNIT_VOL
                        FROM            TEC120T A WITH (NOLOCK)
                             INNER JOIN TEC130T B WITH (NOLOCK) ON B.COMP_CODE    =  A.COMP_CODE
                                                               AND B.DIV_CODE     =  A.DIV_CODE
                                                               AND B.ACCEPT_NO    =  A.ACCEPT_NO
                             LEFT  JOIN BCM100T C WITH (NOLOCK) ON C.COMP_CODE    =  A.COMP_CODE
                                                               AND C.CUSTOM_CODE  =  A.APPLICANT
                             LEFT  JOIN BPR100T D WITH (NOLOCK) ON D.COMP_CODE    =  B.COMP_CODE
                                                               AND D.ITEM_CODE    =  B.ITEM_CODE
                             LEFT  JOIN BPR200T Z WITH (NOLOCK) ON Z.COMP_CODE    =  B.COMP_CODE
                                                               AND Z.DIV_CODE     =  B.DIV_CODE
                                                               AND Z.ITEM_CODE    =  B.ITEM_CODE
                             LEFT  JOIN BSA100T I WITH (NOLOCK) ON I.COMP_CODE    =  A.COMP_CODE
                                                               AND I.MAIN_CODE    =  'S003'
                                                               AND I.SUB_CODE     =  '2'
                             LEFT  JOIN BSA100T J WITH (NOLOCK) ON J.COMP_CODE    =  A.COMP_CODE
                                                               AND J.MAIN_CODE    =  'B059'
                                                               AND J.SUB_CODE     =  '2'
                             LEFT  JOIN BTR100T K WITH (NOLOCK) ON K.COMP_CODE    =   B.COMP_CODE
                                                               AND K.DIV_CODE     =   B.OUT_DIV_CODE
                                                               AND K.INOUT_TYPE  IN   ('2','3')
                                                               AND K.ORDER_NUM    =   B.SO_SER_NO
                                                               AND K.ORDER_SEQ    =   B.SO_SER
                             LEFT  JOIN BIV200T H WITH (NOLOCK) ON H.COMP_CODE    =   K.COMP_CODE
                                                               AND H.DIV_CODE     =   K.DIV_CODE
            <if test="@foren.Ognl@isNotEmpty(INOUT_TO_DATE)">
                                                               AND H.BASIS_YYYYMM =  SUBSTRING(@INOUT_FR_DATE, 1, 6)
            </if>
            <if test="@foren.Ognl@isEmpty(INOUT_TO_DATE)">
                                                               AND H.BASIS_YYYYMM =  SUBSTRING(K.INOUT_DATE, 1, 6)
            </if>
                                                               AND H.WH_CODE      =   K.WH_CODE
                                                               AND H.ITEM_CODE    =   K.ITEM_CODE
                             LEFT  JOIN TEA100T M WITH (NOLOCK) ON M.COMP_CODE    =   B.COMP_CODE
                                                               AND M.DIV_CODE     =   B.OUT_DIV_CODE
                                                               AND M.SO_SER_NO    =   B.SO_SER_NO

                    UNION
             /*(무역)해외매출*/
                        SELECT

                                CASE WHEN @TAB_TYPE = '1' THEN C.IMPORTER
                                     WHEN @TAB_TYPE = '3' THEN C.EXPORT_NM
                                     ELSE ''
                                END                                                           AS INDEX01
                              , CASE WHEN @TAB_TYPE = '1' THEN uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID,  D.CUSTOM_CODE)
                                     WHEN @TAB_TYPE = '3' THEN D.CUSTOM_CODE
                                     ELSE ''
                                END                                                           AS INDEX02
                              , CASE WHEN @TAB_TYPE = '1' THEN CAST('' AS NVARCHAR(4))
                                     WHEN @TAB_TYPE = '3' THEN uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID,  D.CUSTOM_CODE)
                                     ELSE ''
                                END                                                           AS INDEX03
                              , CASE WHEN @TAB_TYPE = '1' THEN LEFT(A.DATE_SHIPPING, 6)
                                     WHEN @TAB_TYPE = '3' THEN ''
                                     ELSE ''
                                END                                                           AS INDEX04
                              , CASE WHEN @TAB_TYPE = '1' THEN uniLITe.fnGetUserDate(@COMP_CODE, A.DATE_SHIPPING)
                                     WHEN @TAB_TYPE = '3' THEN LEFT(A.DATE_SHIPPING, 6)
                                     ELSE ''
                                END                                                           AS INDEX05
                              , CASE WHEN @TAB_TYPE = '1' THEN ''
                                     WHEN @TAB_TYPE = '3' THEN uniLITE.fnGetUserDate(@COMP_CODE, A.DATE_SHIPPING)
                                     ELSE ''
                                END                                                           AS INDEX06
                              , CAST('' AS NVARCHAR(3))                                       AS INDEX07

                              , B.ITEM_CODE                                                   AS ITEM_CODE
                              , uniLITE.fnItemNameComp(@COMP_CODE, @USER_ID, E.ITEM_CODE)     AS ITEM_NAME
                              , B.STANDARD                                                    AS SPEC
                              , B.UNIT                                                        AS SALE_UNIT
                              , G.TRANS_RATE                                                  AS TRANS_RATE
                              , LEFT(A.DATE_SHIPPING, 6)                                      AS SALE_MONTH1
                              , A.DATE_SHIPPING                                               AS SALE_DATE1
                              , B.QTY                                                         AS SALE_Q
                              , B.WGT_UNIT                                                    AS WGT_UNIT
                              , B.UNIT_WGT                                                    AS UNIT_WGT
                              , B.VOL_UNIT                                                    AS VOL_UNIT
                              , B.UNIT_VOL                                                    AS UNIT_VOL
                              , C.IMPORTER                                                    AS SALE_CUSTOM_CODE1
                              , uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID,  D.CUSTOM_CODE)  AS CUSTOM_NAME1
                              , CAST('' AS NVARCHAR(3))                                       AS INOUT_TYPE_DETAIL1
                              , ''                                                            AS INOUT_DATE1
                              , B.QTY                                                         AS SALE_Q1
                              , B.PRICE                                                       AS SALE_P
                              , A.AMT_UNIT                                                    AS MONEY_UNIT
                              , A.EXCHANGE_RATE                                               AS EXCHG_RATE_O
                              , B.BL_AMT                                                      AS SALE_LOC_AMT_F
                              , B.BL_AMT_WON                                                  AS SALE_LOC_AMT_I
                              , J.SUB_CODE                                                    AS TAX_TYPE
                              , CAST(0 AS NUMERIC(18,4))                                      AS TAX_AMT_O
                              , ISNULL(B.BL_AMT_WON, 0)                                       AS SUM_SALE_AMT
                              , A.ORDER_TYPE                                                  AS ORDER_TYPE
                              , A.DIV_CODE                                                    AS DIV_CODE
                              , C.EXPORT_NM                                                   AS SALE_PRSN
                              , D.MANAGE_CUSTOM                                               AS MANAGE_CUSTOM
                              , uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID,  D.CUSTOM_CODE)  AS MANAGE_CUSTOM_NM
                              , D.AREA_TYPE                                                   AS AREA_TYPE
                              , D.AGENT_TYPE                                                  AS AGENT_TYPE
                              , ''                                                            AS DVRY_CUST_NM
                              , A.PROJECT_NO                                                  AS PROJECT_NO
                              , CAST('' AS NVARCHAR(20))                                      AS PUB_NUM
                              , CAST(A.EX_NUM AS NVARCHAR(10))                                AS EX_NUM
                              , A.BL_SER_NO                                                   AS BILL_NUM
                              , B.SO_SER_NO                                                   AS ORDER_NUM
                              , ''                                                            AS DVRY_DATE
                              , CAST(0 AS NUMERIC(5,2))                                       AS DISCOUNT_RATE
                              , I.SUB_CODE                                                    AS PRICE_YN
                              , CAST('5' AS NVARCHAR(25))                                     AS GUBUN                 --무역
                              , B.BL_SER_NO + CAST(B.BL_SEQ AS VARCHAR(8))                    AS SORT
                              , E.ITEM_GROUP                                                  AS ITEM_GROUP
                              , A.COMP_CODE                                                   AS COMP_CODE
                              , '10'                                                          AS BILL_TYPE --선적등록:'10'직수출/Local매출:'20'영세매출
                              , E.ITEM_LEVEL1
                              , E.ITEM_LEVEL2
                              , E.ITEM_LEVEL3
                              , Z.ITEM_ACCOUNT
                              , ISNULL(H.AVERAGE_P,0) * ISNULL(B.QTY,0) * G.TRANS_RATE                      AS SALE_COST_AMT
                              , C.IMPORTER                                                    AS SOF_CUSTOM_CODE
                              , uniLITE.fnCustNameComp(@COMP_CODE, @USER_ID, C.IMPORTER)      AS SOF_CUSTOM_NAME
                             , B.WGT_QTY                                                      AS SALE_WGT_Q
                             , B.VOL_QTY                                                      AS SALE_VOL_Q
                             , B.WGT_PRICE                                                    AS SALE_FOR_WGT_P
                             , B.VOL_PRICE                                                    AS SALE_FOR_VOL_P
                             , B.PRICE_TYPE                                                   AS PRICE_TYPE
--                             , B.WGT_UNIT                                                     AS WGT_UNIT
--                             , B.UNIT_WGT                                                     AS UNIT_WGT
--                             , B.VOL_UNIT                                                     AS VOL_UNIT
--                             , B.UNIT_VOL                                                     AS UNIT_VOL
                        FROM            TED100T A
                             INNER JOIN TED110T B WITH (NOLOCK) ON B.COMP_CODE    =   A.COMP_CODE
                                                               AND B.DIV_CODE     =   A.DIV_CODE
                                                               AND B.BL_SER_NO    =   A.BL_SER_NO
                             INNER JOIN TEA100T C WITH (NOLOCK) ON C.COMP_CODE    =   A.COMP_CODE
                                                               AND C.DIV_CODE     =   A.DIV_CODE
                                                               AND C.SO_SER_NO    =   A.SO_SER_NO
                             INNER JOIN TEA110T G WITH (NOLOCK) ON G.COMP_CODE    =   B.COMP_CODE
                                                               AND G.DIV_CODE     =   B.DIV_CODE
                                                               AND G.SO_SER_NO    =   B.SO_SER_NO
                                                               AND G.SO_SER       =   B.SO_SER
                             LEFT  JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE    =   A.COMP_CODE
                                                               AND D.CUSTOM_CODE  =   C.IMPORTER
                             LEFT  JOIN BPR100T E WITH (NOLOCK) ON E.COMP_CODE    =   B.COMP_CODE
                                                               AND E.ITEM_CODE    =   B.ITEM_CODE
                             LEFT  JOIN BPR200T Z WITH (NOLOCK) ON Z.COMP_CODE    =   B.COMP_CODE
                                                               AND Z.DIV_CODE     =   B.DIV_CODE
                                                               AND Z.ITEM_CODE    =   B.ITEM_CODE
                             LEFT  JOIN BSA100T I WITH (NOLOCK) ON I.COMP_CODE    =   A.COMP_CODE
                                                               AND I.MAIN_CODE    =   'S003'
                                                               AND I.SUB_CODE     =   '2'
                             LEFT  JOIN BSA100T J WITH (NOLOCK) ON J.COMP_CODE    =   A.COMP_CODE
                                                               AND J.MAIN_CODE    =   'B059'
                                                               AND J.SUB_CODE     =   '2'
                             LEFT  JOIN BTR100T K WITH (NOLOCK) ON K.COMP_CODE    =   B.COMP_CODE
                                                               AND K.DIV_CODE     =   B.OUT_DIV_CODE
                                                               AND K.INOUT_TYPE  IN   ('2','3')
                                                               AND K.ORDER_NUM    =   B.SO_SER_NO
                                                               AND K.ORDER_SEQ    =   B.SO_SER
                             LEFT  JOIN BIV200T H WITH (NOLOCK) ON H.COMP_CODE    =   K.COMP_CODE
                                                               AND H.DIV_CODE     =   K.DIV_CODE
            <if test="@foren.Ognl@isNotEmpty(INOUT_TO_DATE)">
                                                               AND H.BASIS_YYYYMM =  SUBSTRING(@INOUT_FR_DATE, 1, 6)
            </if>
            <if test="@foren.Ognl@isEmpty(INOUT_TO_DATE)">
                                                               AND H.BASIS_YYYYMM =  SUBSTRING(K.INOUT_DATE, 1, 6)
            </if>
                                                               AND H.WH_CODE      =   K.WH_CODE
                                                               AND H.ITEM_CODE    =   K.ITEM_CODE

                            ) TA

                              LEFT  JOIN BSA100T B1  WITH (NOLOCK) ON B1.COMP_CODE   =  TA.COMP_CODE
                                                                  AND B1.MAIN_CODE   =  'S024'
                                                                  AND B1.SUB_CODE    =  TA.BILL_TYPE
                              LEFT  JOIN BSA100T B11 WITH (NOLOCK) ON B11.COMP_CODE  =  TA.COMP_CODE
                                                                  AND B11.MAIN_CODE  =  'S118'
                                                                  AND B11.SUB_CODE   =  TA.BILL_TYPE
                              LEFT  JOIN BSA100T B2  WITH (NOLOCK) ON B2.COMP_CODE   =  TA.COMP_CODE
                                                                  AND B2.MAIN_CODE   =  'S007'
                                                                  AND B2.SUB_CODE    =  TA.INOUT_TYPE_DETAIL1
                              LEFT  JOIN BSA100T B3  WITH (NOLOCK) ON B3.COMP_CODE   =  TA.COMP_CODE
                                                                  AND B3.MAIN_CODE   =  'S003'
                                                                  AND B3.SUB_CODE    =  TA.PRICE_YN
                              LEFT  JOIN BSA100T B4  WITH (NOLOCK) ON B4.COMP_CODE   =  TA.COMP_CODE
                                                                  AND B4.MAIN_CODE   =  'B059'
                                                                  AND B4.SUB_CODE    =  TA.TAX_TYPE
                              LEFT  JOIN BSA100T B5  WITH (NOLOCK) ON B5.COMP_CODE   =  TA.COMP_CODE
                                                                  AND B5.MAIN_CODE   =  'S002'
                                                                  AND B5.SUB_CODE    =  TA.ORDER_TYPE
                              LEFT  JOIN BSA100T B6  WITH (NOLOCK) ON B6.COMP_CODE   =  TA.COMP_CODE
                                                                  AND B6.MAIN_CODE   =  'S010'
                                                                  AND B6.SUB_CODE    =  TA.SALE_PRSN
                              LEFT  JOIN BSA100T B7  WITH (NOLOCK) ON B7.COMP_CODE   =  TA.COMP_CODE
                                                                  AND B7.MAIN_CODE   =  'B055'
                                                                  AND B7.SUB_CODE    =  TA.AGENT_TYPE
                              LEFT  JOIN BSA100T B8  WITH (NOLOCK) ON B8.COMP_CODE   =  TA.COMP_CODE
                                                                  AND B8.MAIN_CODE   =  'B056'
                                                                  AND B8.SUB_CODE    =  TA.AREA_TYPE
                              LEFT  JOIN BOR120T B9  WITH (NOLOCK) ON B9.COMP_CODE   =  TA.COMP_CODE
                                                                  AND B9.DIV_CODE    =  TA.DIV_CODE
                              LEFT  JOIN BSA100T B10 WITH (NOLOCK) ON B10.COMP_CODE  =  TA.COMP_CODE
                                                                  AND B10.MAIN_CODE  =  'B116'
                                                                  AND B10.SUB_CODE   =  TA.PRICE_TYPE


                WHERE     TA.COMP_CODE = @COMP_CODE
                    AND ((TA.SALE_PRSN            =  @SALE_PRSN                   AND @SALE_PRSN            != '') OR (@SALE_PRSN           = ''))
                    AND ((TA.DIV_CODE             =  @DIV_CODE                    AND @DIV_CODE             != '') OR (@DIV_CODE            = ''))
                    AND ((TA.SALE_CUSTOM_CODE1 LIKE  @CUSTOM_CODE + '%'           AND @CUSTOM_CODE          != '') OR (@CUSTOM_CODE         = ''))
                    AND ((TA.CUSTOM_NAME1      LIKE  @CUSTOM_NAME + '%'           AND @CUSTOM_NAME          != '') OR (@CUSTOM_NAME         = ''))
                    AND ((TA.ITEM_CODE         LIKE  @ITEM_CODE + '%'             AND @ITEM_CODE            != '') OR (@ITEM_CODE           = ''))
                    AND ((TA.ITEM_NAME         LIKE  @ITEM_NAME + '%'             AND @ITEM_NAME            != '') OR (@ITEM_NAME           = ''))
                    AND ((TA.SALE_DATE1       &gt;= @BILL_FR_DATE                 AND @BILL_FR_DATE         != '') OR (@BILL_FR_DATE        = ''))
                    AND ((TA.SALE_DATE1       &lt;= @BILL_TO_DATE                 AND @BILL_TO_DATE         != '') OR (@BILL_TO_DATE        = ''))
                    AND ((TA.BILL_TYPE            =  @BILL_TYPE                   AND @BILL_TYPE            != '') OR (@BILL_TYPE           = ''))
                    AND ((TA.PROJECT_NO           =  @PROJECT_NO                  AND @PROJECT_NO           != '') OR (@PROJECT_NO          = ''))

--20080721 ex_num 이 디폴트값이 0 으로 변경되어 조건수정
                    AND ( ( ISNULL(TA.EX_NUM,0) != 0  AND @SALE_YN = 'Y')     -- 기표
                     OR   ( ISNULL(TA.EX_NUM,0)  = 0  AND @SALE_YN = 'N')     -- 미기표
                     OR  (@SALE_YN = ''))                                -- 전체
                    AND ((TA.AGENT_TYPE           =  @AGENT_TYPE                  AND @AGENT_TYPE           != '') OR (@AGENT_TYPE          = ''))
                    AND ((TA.AREA_TYPE            =  @AREA_TYPE                   AND @AREA_TYPE            != '') OR (@AREA_TYPE           = ''))
                    AND ((TA.INOUT_TYPE_DETAIL1   =  @INOUT_TYPE                  AND @INOUT_TYPE           != '') OR (@INOUT_TYPE          = ''))
                    AND ((TA.ORDER_TYPE           =  @ORDER_TYPE                  AND @ORDER_TYPE           != '') OR (@ORDER_TYPE          = ''))
                    AND ((TA.ITEM_LEVEL1          =  @ITEM_LEVEL1                 AND @ITEM_LEVEL1          != '') OR (@ITEM_LEVEL1         = ''))
                    AND ((TA.ITEM_LEVEL2          =  @ITEM_LEVEL2                 AND @ITEM_LEVEL2          != '') OR (@ITEM_LEVEL2         = ''))
                    AND ((TA.ITEM_LEVEL3          =  @ITEM_LEVEL3                 AND @ITEM_LEVEL3          != '') OR (@ITEM_LEVEL3         = ''))
                    AND ((TA.ITEM_GROUP        LIKE  @ITEM_GROUP_CODE + '%'       AND @ITEM_GROUP_CODE      != '') OR (@ITEM_GROUP_CODE     = ''))
                    AND ((TA.MANAGE_CUSTOM     LIKE  @MANAGE_CUSTOM_CODE + '%'    AND @MANAGE_CUSTOM_CODE   != '') OR (@MANAGE_CUSTOM_CODE  = ''))
                    AND ((TA.SALE_Q1          &gt;= CONVERT(NUMERIC, @SALE_FR_Q)  AND @SALE_FR_Q  IS NOT NULL) OR (@SALE_FR_Q IS NULL))
                    AND ((TA.SALE_Q1          &lt;= CONVERT(NUMERIC, @SALE_TO_Q)  AND @SALE_TO_Q  IS NOT NULL) OR (@SALE_TO_Q IS NULL))
                    AND ((TA.BILL_NUM         &gt;= @BILL_FR_NO                   AND @BILL_FR_NO           != '') OR (@BILL_FR_NO          = ''))
                    AND ((TA.BILL_NUM         &lt;= @BILL_TO_NO                   AND @BILL_TO_NO           != '') OR (@BILL_TO_NO          = ''))
            <if test="@foren.Ognl@isNotEmpty(TXT_CREATE_LOC)">
                    AND ((TA.GUBUN                =  @TRADE_TYPE                  AND @TRADE_TYPE           != '') OR (@TRADE_TYPE          = ''))        -- 무역포함여부
            </if>
                    AND ((TA.ITEM_ACCOUNT         =  @ITEM_ACCOUNT                AND @ITEM_ACCOUNT         != '') OR (@ITEM_ACCOUNT        = ''))
                    AND ((TA.PUB_NUM          &gt;= @PUB_FR_NUM                   AND @PUB_FR_NUM           != '') OR (@PUB_FR_NUM          = ''))
                    AND ((TA.PUB_NUM          &lt;= @PUB_TO_NUM                   AND @PUB_TO_NUM           != '') OR (@PUB_TO_NUM          = ''))
                    AND ((TA.INOUT_DATE1      &gt;= @INOUT_FR_DATE                AND @INOUT_FR_DATE        != '') OR (@INOUT_FR_DATE       = ''))
                    AND ((TA.INOUT_DATE1      &lt;= @INOUT_TO_DATE                AND @INOUT_TO_DATE        != '') OR (@INOUT_TO_DATE       = ''))
           <if test="ACTIVE_TAB == &quot;ssa450skrvGrid1&quot;">
           ORDER BY GUBUN, INDEX01, SALE_DATE1, INOUT_DATE1
           </if>
           <if test="ACTIVE_TAB == &quot;ssa450skrvGrid2&quot;">
           <!-- 품목별 -->
           ORDER BY GUBUN, ITEM_CODE, SALE_DATE1, INOUT_DATE1
           </if>
           <if test="ACTIVE_TAB == &quot;ssa450skrvGrid3&quot;">
           <!-- 영업담당별 -->
           ORDER BY GUBUN, SALE_PRSN, SALE_DATE1, INOUT_DATE1
           </if>
            END
    </select>
</mapper>