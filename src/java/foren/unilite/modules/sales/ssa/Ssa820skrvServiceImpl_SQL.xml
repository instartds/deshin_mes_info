<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="ssa820skrvServiceImpl">
  
  <select id="ssa820skrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">  
   SELECT '1.매출현황'      																 AS GUBUN             --매출구분 1.매출현황 2.일일평균
		   ,   SUBSTRING(LEFT(A.SALE_DATE,6),1,4)+'-'+RIGHT(LEFT(A.SALE_DATE,6),2)+'월'   AS SALE_MONTH        --매출월
		   , B.CODE_NAME    															 AS STORE_NAME        --매장명
		   , A.STORE_CODE                     																  --매장코드
		   , COUNT(*)    																 AS SALE_CNT          --영업일수
		   , SUM(A.SALE_AMT_O)  														 AS SALE_AMT_O        --순매출액
		   , SUM(A.CONSIGNMENT_O) 														 AS CONSIGNMENT_O     --위탁수수료
		   , SUM(A.SALE_CNT)   															 AS SALE_PRSN_CNT     --이용고객수
		   , SUM(A.DISCOUNT_O)     														 AS DISCOUNT_O        --할인 
    FROM SSA120T A
   INNER JOIN BSA100T B ON B.COMP_CODE  = #{S_COMP_CODE}
           AND B.MAIN_CODE  = 'YP43'
           AND B.SUB_CODE  = A.STORE_CODE
   WHERE  A.SALE_DATE LIKE #{SALE_DATE} + '%'     --조회년/월
  <if test="@foren.Ognl@isNotEmpty(GUBUN)">
    <if test="GUBUN == &quot;1&quot;">
      AND ISNULL(B.REF_CODE1,'') = 'Y'   --매장구분(REF_CODE1 = 'Y' 백양로, REF_CODE2 = 'Y' CU)
    </if>
     <if test="GUBUN == &quot;2&quot;">
      AND ISNULL(B.REF_CODE2,'') = 'Y' 
    </if>
   </if>
   <if test="@foren.Ognl@isNotEmpty(STORE_CODE)">
     AND A.STORE_CODE = #{STORE_CODE}
   </if>    
   GROUP BY A.STORE_CODE, B.CODE_NAME, LEFT(A.SALE_DATE,6)
   UNION ALL 
   SELECT '2.일일평균'      			AS GUBUN                   --매출구분 1.매출현황 2.일일평균
		   ,   SUBSTRING(LEFT(A.SALE_DATE,6),1,4)+'-'+RIGHT(LEFT(A.SALE_DATE,6),2)+'월'  AS SALE_MONTH               --매출월
		   , B.CODE_NAME    		AS STORE_NAME              --매장명
		   , A.STORE_CODE                     				   --매장코드
		   , COUNT(*)    			AS SALE_CNT                --영업일수
		   , AVG(A.SALE_AMT_O)  	AS SALE_AMT_O              --순매출액
		   , AVG(A.CONSIGNMENT_O) 	AS CONSIGNMENT_O           --위탁수수료
		   , AVG(A.SALE_CNT)   		AS SALE_CNT                --이용고객수
		   , AVG(A.DISCOUNT_O)  	AS DISCOUNT_O              --할인   
   FROM SSA120T A
   INNER JOIN BSA100T B ON B.COMP_CODE  = #{S_COMP_CODE}
           AND B.MAIN_CODE  = 'YP43'
           AND B.SUB_CODE  = A.STORE_CODE
   WHERE  A.SALE_DATE LIKE #{SALE_DATE} + '%'     --조회년/월
  <if test="@foren.Ognl@isNotEmpty(GUBUN)">
    <if test="GUBUN == &quot;1&quot;">
      AND ISNULL(B.REF_CODE1,'') = 'Y'   --매장구분(REF_CODE1 = 'Y' 백양로, REF_CODE2 = 'Y' CU)
    </if>
     <if test="GUBUN == &quot;2&quot;">
      AND ISNULL(B.REF_CODE2,'') = 'Y' 
    </if>
   </if>
   <if test="@foren.Ognl@isNotEmpty(STORE_CODE)">
     AND A.STORE_CODE = #{STORE_CODE}
   </if>
   GROUP BY A.STORE_CODE, B.CODE_NAME, LEFT(A.SALE_DATE,6)
   ORDER BY GUBUN, SALE_MONTH
     </select>
     
     <select id="ssa820skrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">  
   SELECT A.STORE_CODE              --매장코드
		   , A.STORE_NAME              --매장명
		   , SUM(A.JAN)    AS JAN           --1월
		   , SUM(A.FEB)    AS FEB           --2월
		   , SUM(A.MAR)    AS MAR           --3월
		   , SUM(A.APR)    AS APR           --4월
		   , SUM(A.MAY)    AS MAY           --5월
		   , SUM(A.JUN)    AS JUN           --6월
		   , SUM(A.JUL)    AS JUL           --7월
		   , SUM(A.AUG)    AS AUG           --8월
		   , SUM(A.SEP)    AS SEP           --9월
		   , SUM(A.OCT)    AS OCT           --10월
		   , SUM(A.NOV)    AS NOV           --11월
		   , SUM(A.DECE)    AS DECE           --12월
		   , SUM(A.JAN) + SUM(A.FEB) + SUM(A.MAR) + SUM(A.APR) + SUM(A.MAY) + SUM(A.JUN)      
		    + SUM(A.JUL) + SUM(A.AUG) + SUM(A.SEP) + SUM(A.OCT) + SUM(A.NOV) + SUM(A.DECE) AS TOTAL    --합계
  FROM ( 
    SELECT A.STORE_CODE
		     , B.CODE_NAME    AS STORE_NAME
		     , ISNULL(CASE WHEN SUBSTRING(A.SALE_DATE,5,2) = '01' THEN SUM(A.CONSIGNMENT_O) END,0) AS JAN 
		     , ISNULL(CASE WHEN SUBSTRING(A.SALE_DATE,5,2) = '02' THEN SUM(A.CONSIGNMENT_O) END,0) AS FEB 
		     , ISNULL(CASE WHEN SUBSTRING(A.SALE_DATE,5,2) = '03' THEN SUM(A.CONSIGNMENT_O) END,0) AS MAR 
		     , ISNULL(CASE WHEN SUBSTRING(A.SALE_DATE,5,2) = '04' THEN SUM(A.CONSIGNMENT_O) END,0) AS APR 
		     , ISNULL(CASE WHEN SUBSTRING(A.SALE_DATE,5,2) = '05' THEN SUM(A.CONSIGNMENT_O) END,0) AS MAY 
		     , ISNULL(CASE WHEN SUBSTRING(A.SALE_DATE,5,2) = '06' THEN SUM(A.CONSIGNMENT_O) END,0) AS JUN 
		     , ISNULL(CASE WHEN SUBSTRING(A.SALE_DATE,5,2) = '07' THEN SUM(A.CONSIGNMENT_O) END,0) AS JUL 
		     , ISNULL(CASE WHEN SUBSTRING(A.SALE_DATE,5,2) = '08' THEN SUM(A.CONSIGNMENT_O) END,0) AS AUG 
		     , ISNULL(CASE WHEN SUBSTRING(A.SALE_DATE,5,2) = '09' THEN SUM(A.CONSIGNMENT_O) END,0) AS SEP 
		     , ISNULL(CASE WHEN SUBSTRING(A.SALE_DATE,5,2) = '10' THEN SUM(A.CONSIGNMENT_O) END,0) AS OCT 
		     , ISNULL(CASE WHEN SUBSTRING(A.SALE_DATE,5,2) = '11' THEN SUM(A.CONSIGNMENT_O) END,0) AS NOV 
		     , ISNULL(CASE WHEN SUBSTRING(A.SALE_DATE,5,2) = '12' THEN SUM(A.CONSIGNMENT_O) END,0) AS DECE 
    FROM SSA120T A
    INNER JOIN BSA100T B ON B.COMP_CODE  = #{S_COMP_CODE}
            AND B.MAIN_CODE  = 'YP43'
            AND B.SUB_CODE  = A.STORE_CODE
    WHERE A.SALE_DATE LIKE SUBSTRING(#{SALE_DATE}, 1,4) + '%'     --조회년
   <if test="@foren.Ognl@isNotEmpty(GUBUN)">
     <if test="GUBUN == &quot;1&quot;">
       AND ISNULL(B.REF_CODE1,'') = 'Y'   --매장구분(REF_CODE1 = 'Y' 백양로, REF_CODE2 = 'Y' CU)
     </if>
      <if test="GUBUN == &quot;2&quot;">
       AND ISNULL(B.REF_CODE2,'') = 'Y' 
     </if>
    </if>
    <if test="@foren.Ognl@isNotEmpty(STORE_CODE)">
      AND A.STORE_CODE = #{STORE_CODE}
    </if>
    GROUP BY A.STORE_CODE, B.CODE_NAME, SUBSTRING(A.SALE_DATE,5,2)
   ) A
   GROUP BY A.STORE_CODE, A.STORE_NAME
     </select>
     
     <select id="ssa820skrvServiceImpl.selectList3" parameterType="Map" resultType="rMap">  
   SELECT A.SALE_DATE           --일자
		   , A.STORE_CODE          --매장코드
		   , B.CODE_NAME     AS STORE_NAME   --매장명
		   , SUM(A.SALE_CNT)    AS SALE_CNT    --객수
		   , SUM(A.SALE_AMT_O)   AS SALE_AMT_O   --순매출
  FROM SSA120T A
   INNER JOIN BSA100T B ON B.COMP_CODE  = #{S_COMP_CODE}
           AND B.MAIN_CODE  = 'YP43'
           AND B.SUB_CODE  = A.STORE_CODE
   WHERE (DATEPART(WEEKDAY,A.SALE_DATE) = 7 OR DATEPART(WEEKDAY,A.SALE_DATE) = 1)
   AND A.SALE_DATE LIKE #{SALE_DATE} + '%'    --조회년월
  <if test="@foren.Ognl@isNotEmpty(GUBUN)">
    <if test="GUBUN == &quot;1&quot;">
      AND ISNULL(B.REF_CODE1,'') = 'Y'   --매장구분(REF_CODE1 = 'Y' 백양로, REF_CODE2 = 'Y' CU)
    </if>
     <if test="GUBUN == &quot;2&quot;">
      AND ISNULL(B.REF_CODE2,'') = 'Y' 
    </if>
   </if> 
   <if test="@foren.Ognl@isNotEmpty(STORE_CODE)">
     AND A.STORE_CODE = #{STORE_CODE}
   </if>
   GROUP BY A.SALE_DATE, A.STORE_CODE, B.CODE_NAME
     </select>
     
     <select id="ssa820skrvServiceImpl.selectList4" parameterType="Map" resultType="rMap">  
   SELECT A.SALE_DATE          --일자
		   , A.STORE_CODE         --매장코드
		   , B.CODE_NAME    AS STORE_NAME   --매장명
		   , A.DAY_WEEK          --요일  
		    , A.SALE_CNT    AS SALE_CNT    --객수
		   , A.SALE_AMT_O   AS SALE_AMT_O   --순매출
		   , A.TAX_AMT_O    AS TAX_AMT_O   --부가세
		   , A.DISCOUNT_O   AS DISCOUNT_O   --할인
		   , A.COUPON    AS COUPON    --쿠폰
		   , A.TOTAL_AMT_O   AS TOTAL_AMT_O   --총매출
		   , A.CONSIGNMENT_O   AS CONSIGNMENT_O  --수수료
		   ,   A.REMARK  
   FROM SSA120T A
   INNER JOIN BSA100T B ON B.COMP_CODE  = #{S_COMP_CODE}
           AND B.MAIN_CODE  = 'YP43'
           AND B.SUB_CODE  = A.STORE_CODE
   WHERE  A.SALE_DATE LIKE #{SALE_DATE} + '%'     --조회년/월       
   <if test="@foren.Ognl@isNotEmpty(GUBUN)">
    <if test="GUBUN == &quot;1&quot;">
      AND ISNULL(B.REF_CODE1,'') = 'Y'   --매장구분(REF_CODE1 = 'Y' 백양로, REF_CODE2 = 'Y' CU)
    </if>
     <if test="GUBUN == &quot;2&quot;">
      AND ISNULL(B.REF_CODE2,'') = 'Y' 
    </if>
   </if>
   <if test="@foren.Ognl@isNotEmpty(STORE_CODE)">
     AND A.STORE_CODE = #{STORE_CODE}
   </if>  
   ORDER BY A.STORE_CODE, A.SALE_DATE
     </select>
 </mapper>