<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssa430skrvServiceImpl">

	<select id="ssa430skrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
	/*ssa430skrv.Cssa430skrv[fnSsa430Q1] Query02*/
    SELECT      A.DIV_CODE
         ,  A.DIV_CODE AS DIV_CODE_NAME
         , ISNULL(A.CUSTOM_CODE,'') AS CUSTOM_CODE
         , ISNULL(B.CUSTOM_NAME,'') AS CUSTOM_NAME
         , ISNULL(A.MONEY_UNIT,'') AS MONEY_UNIT
         , A.COMP_CODE
         , ISNULL(C.UNCOLLECT_AMT, 0) AS BASIS_AMT_O
      FROM (SELECT CUSTOM_CODE
                 , COMP_CODE
                 , MONEY_UNIT
                 , DIV_CODE
              FROM SAR200T WITH (NOLOCK)
             WHERE  COMP_CODE  = #{S_COMP_CODE}
        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
             AND 	    DIV_CODE   = #{DIV_CODE}
         </if>
        <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
               AND MONEY_UNIT = #{MONEY_UNIT}
        </if>
        <if test="@foren.Ognl@isEmpty(MONEY_UNIT)">
             <if test="@foren.Ognl@isNotEmpty(GS_MONEY_UNIT)">
               AND MONEY_UNIT = #{GS_MONEY_UNIT}
             </if>
        </if>
             GROUP BY COMP_CODE, DIV_CODE, CUSTOM_CODE, money_unit) A
           INNER JOIN BCM100T B WITH (NOLOCK) ON A.CUSTOM_CODE = B.CUSTOM_CODE
                                             AND A.COMP_CODE   = B.COMP_CODE
           LEFT JOIN unilite.fnGetBalance4CustomTbl(#{S_COMP_CODE}, #{DIV_CODE}, #{CUSTOM_CODE}, #{BILL_FR_DATE}, #{GS_MONEY_UNIT}, '3') C
                                              ON A.CUSTOM_CODE = C.CUSTOM_CODE
                                              AND A.DIV_CODE    = C.div_code
                                              AND A.MONEY_UNIT  = C.MONEY_UNIT
     WHERE 1=1

        AND A.COMP_CODE      = #{S_COMP_CODE}
        
        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		AND A.CUSTOM_CODE = #{CUSTOM_CODE}					/* 거래처코드  */
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		AND A.CUSTOM_CODE LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
		AND B.CUSTOM_NAME LIKE '%' + #{CUSTOM_NAME} + '%'	/* 거래처명  */
		</if>

        <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
        AND B.AGENT_TYPE     = #{AGENT_TYPE}
        </if>
        <if test="@foren.Ognl@isNotEmpty(TXT_AREA_TYPE)">
        AND B.AREA_TYPE      = #{TXT_AREA_TYPE}
        </if>

     ORDER BY A.CUSTOM_CODE, A.MONEY_UNIT
    </select>

	<select id="ssa430skrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
	/*ssa430skrv.Cssa430skrv, SetSsa430[fnSsa430Q2]*/
	DECLARE @BLAN_AMT NUMERIC(30,6)
	SET @BLAN_AMT = #{BASIS_AMT_O}

	SET NOCOUNT ON
		IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID=OBJECT_ID('tempdb..#TMP_SSA430'))
			DROP TABLE #TMP_SSA430

	    SELECT
	           SALE_CUSTOM_CODE
	         , SALE_CUSTOM_NAME
	         , LEFT(SALE_DATE, 7) AS SALE_MONTH
	         , SALE_DATE
	         , INOUT_TYPE_DETAIL
	         , ITEM_CODE
	         , ITEM_NAME
	         , SPEC
	         , SALE_UNIT
	         , TRANS_RATE
	         , SALE_Q
	         , CONVERT(NUMERIC(30,6), 0) AS CARRIED_OVER_AMT	--이월금액
	         , SALE_AMT_O
	         , TAX_TYPE
	         , TAX_AMT_O
	         , (SALE_AMT_O + TAX_AMT_O) AS SUM_SALE_AMT
	         , MONEY_UNIT
	         , COLLECT_AMT
	         , COLLECT_TYPE
	         , NOTE_DUE_DATE
	         , UN_COLLECT_AMT
	         , CARD_TYPE
	         , ISNULL(SALE_P, 0) AS SALE_P
	         , GUBUN
	         , ROW_NUMBER() OVER(ORDER BY SALE_DATE, INOUT_TYPE_DETAIL) AS SEQ
	         , SALE_NAME
	      INTO #TMP_SSA430
	      FROM (/*매출정보(SSA100T,SSA110T)에서 SEARCH*/
	            SELECT
	                   A.SALE_CUSTOM_CODE
	                 , D.CUSTOM_NAME AS SALE_CUSTOM_NAME
	                 , unilite.fnGetUserdate(#{S_COMP_CODE}, A.SALE_DATE)                        AS SALE_DATE
	                 , C1.CODE_NAME                                                   AS INOUT_TYPE_DETAIL
	                 , B.ITEM_CODE                                                                     AS ITEM_CODE
	                 , uniLITE.fnItemNameComp(#{S_COMP_CODE}, #{S_USER_ID}, B.ITEM_CODE) AS ITEM_NAME
	                 , C.SPEC                    AS SPEC
	                 , B.SALE_UNIT               AS SALE_UNIT
	                 , B.TRANS_RATE              AS TRANS_RATE
	                 , ISNULL(B.SALE_Q,0)        AS SALE_Q
	                 , ISNULL(B.SALE_AMT_O,0)    AS SALE_AMT_O
	                 , B.TAX_TYPE                AS TAX_TYPE
	                 , ISNULL(B.TAX_AMT_O,0)     AS TAX_AMT_O
	                 , ISNULL(A.MONEY_UNIT,'')  AS MONEY_UNIT
	                 , 0                         AS COLLECT_AMT
	                 , ''                        AS COLLECT_TYPE
	                 , ''                        AS NOTE_DUE_DATE
	                 , 0                         AS UN_COLLECT_AMT
	                 , (CASE WHEN A.BILL_TYPE = '40'
	                         THEN 'Y'
	                         ELSE 'N'
	                     END)                    AS CARD_TYPE
	                 ,  B.SALE_P
	                 , '1'                       AS GUBUN
	                 , C2.CODE_NAME AS SALE_NAME
	              FROM            SSA100T A  WITH (NOLOCK)
	                   INNER JOIN SSA110T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
	                                                      AND B.DIV_CODE    = A.DIV_CODE
	                                                      AND B.BILL_NUM    = A.BILL_NUM
	                   INNER JOIN BCM100T D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
	                                                      AND D.CUSTOM_CODE = A.SALE_CUSTOM_CODE
	                   INNER JOIN BPR100T C  WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
	                                                      AND C.ITEM_CODE   = B.ITEM_CODE
	                   INNER JOIN BSA100T C1 WITH (NOLOCK) ON C1.COMP_CODE  = B.COMP_CODE
	                                                      AND C1.MAIN_CODE  = 'S007'
	                                                      AND C1.SUB_CODE   = B.INOUT_TYPE_DETAIL
						LEFT JOIN BSA100T C2 WITH(NOLOCK) ON C2.COMP_CODE = A.COMP_CODE
															AND C2.MAIN_CODE = 'S010'
															AND C2.SUB_CODE = A.SALE_PRSN
	             WHERE A.COMP_CODE           = #{S_COMP_CODE}
	               <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	               			AND A.DIV_CODE            = #{DIV_CODE}
	               </if>
	               AND A.SALE_DATE          &gt;= #{BILL_FR_DATE}
	               AND A.SALE_DATE          &lt;= #{BILL_TO_DATE}
	               
	               <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
					AND A.SALE_CUSTOM_CODE = #{CUSTOM_CODE}					/* 거래처코드  */
					</if>
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
					AND A.SALE_CUSTOM_CODE LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
					</if>
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
					AND D.CUSTOM_NAME LIKE '%' + #{CUSTOM_NAME} + '%'	/* 거래처명  */
					</if>

	    <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
	               AND A.MONEY_UNIT          = #{MONEY_UNIT}    --'왼쪽그리드의 화폐단위
	    </if>

	            UNION ALL

	            /*수금정보(SCO100T)에서 SEARCH*/
	            SELECT
	                   A.CUSTOM_CODE                                               AS SALE_CUSTOM_CODE
	                 , D.CUSTOM_NAME AS SALE_CUSTOM_NAME
	                 , unilite.fnGetUserdate(#{S_COMP_CODE}, A.COLLECT_DATE) AS SALE_DATE
	                 , C1.CODE_NAME                               AS INOUT_TYPE_DETAIL
	                 , ''                        AS ITEM_CODE
	                 , ''                        AS ITEM_NAME
	                 , ''                        AS SPEC
	                 , ''                        AS SALE_UNIT
	                 , 0                         AS TRANS_RATE
	                 , 0                         AS SALE_Q
	                 , 0                         AS SALE_AMT_O
	                 , ''                        AS TAX_TYPE
	                 , 0                         AS TAX_AMT_O
	                 , ISNULL(A.MONEY_UNIT,'') AS MONEY_UNIT
	                , (CASE WHEN ISNULL(C2.REF_CODE1,'N') = 'Y'
	                        THEN ISNULL(A.COLLECT_AMT, 0)
	                        ELSE (CASE WHEN (CASE WHEN C3.SYSTEM_CODE_YN = '1'
	                                              THEN C3.SUB_CODE
	                                              ELSE ISNULL(C2.REF_CODE1,'')
	                                          END) IN ('55','56','62')
	                                   THEN (CASE WHEN ISNULL(A.EXCHANGE_RATE,0) = 0
	                                              THEN 0
	                                              ELSE ISNULL(A.COLLECT_AMT,0) / ISNULL(A.EXCHANGE_RATE,0)
	                                          END)
	                                   ELSE ISNULL(A.COLLECT_FOR_AMT, 0)
	                               END)
	                    END)                     AS COLLECT_AMT
	                 , A.COLLECT_TYPE            AS COLLECT_TYPE
	                 , (CASE WHEN A.NOTE_DUE_DATE IS NULL
	                         THEN ''
	                         ELSE unilite.fnGetUserdate (#{S_COMP_CODE}, A.NOTE_DUE_DATE)
	                     END)                    AS NOTE_DUE_DATE
	                 , 0                         AS UN_COLLECT_AMT
	                 , ''                        AS CARD_TYPE
	                 , 0						 AS SALE_P
	                 , '2'                       AS GUBUN
					 , C5.CODE_NAME   AS SALE_NAME
	              FROM            SCO100T A  WITH (NOLOCK)
	                   INNER JOIN BCM100T D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
	                                                      AND D.CUSTOM_CODE = A.CUSTOM_CODE
	                   INNER JOIN BSA100T C1 WITH (NOLOCK) ON C1.COMP_CODE  = A.COMP_CODE
	                                                      AND C1.MAIN_CODE  = 'S017'
	                                                      AND C1.SUB_CODE   = A.COLLECT_TYPE
	                                                      AND (CASE WHEN ISNULL(C1.REF_CODE1,'') = ''
	                                                                THEN C1.SUB_CODE
	                                                                ELSE C1.REF_CODE1
	                                                            END) != '80'
	                   LEFT  JOIN BSA100T C2 WITH (NOLOCK) ON C2.COMP_CODE  = A.COMP_CODE
	                                                      AND C2.MAIN_CODE  = 'B004'
	                                                      AND C2.SUB_CODE   = A.MONEY_UNIT
	                   LEFT  JOIN BSA100T C3 WITH (NOLOCK) ON C3.COMP_CODE  = A.COMP_CODE
	                                                      AND C3.MAIN_CODE  = 'S017'
	                                                      AND C3.SUB_CODE   = A.COLLECT_TYPE
						LEFT JOIN BSA100T C5 WITH(NOLOCK) ON C5.COMP_CODE = A.COMP_CODE
															AND C5.MAIN_CODE = 'S010'
															AND C5.SUB_CODE = A.COLLECT_PRSN
	             WHERE A.COMP_CODE      = #{S_COMP_CODE}
	         <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	         	  AND A.DIV_CODE       = #{DIV_CODE}
	         </if>
	               AND A.COLLECT_DATE  &gt;= #{BILL_FR_DATE}
	               AND A.COLLECT_DATE  &lt;= #{BILL_TO_DATE}
	               AND (A.DISHONOR_DATE IS NULL OR A.DISHONOR_DATE = '')
	               
	               <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
					AND A.CUSTOM_CODE = #{CUSTOM_CODE}					/* 거래처코드  */
					</if>
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
					AND A.CUSTOM_CODE LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
					</if>
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
					AND D.CUSTOM_NAME LIKE '%' + #{CUSTOM_NAME} + '%'	/* 거래처명  */
					</if>

	    <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
	               AND A.MONEY_UNIT     = #{MONEY_UNIT}    --'왼쪽그리드의 화폐단위
	    </if>

	    <if test="rdoSelect1 == &quot;T&quot;"> --'무역포함

	            UNION ALL

	            /* 무역 LOCAL매출정보(TEC120T)에서 SEARCH*/
	            SELECT
	                   A.APPLICANT                                                                     AS SALE_CUSTOM_CODE
	                 , D.CUSTOM_NAME AS SALE_CUSTOM_NAME
	                 , unilite.fnGetUserdate(#{S_COMP_CODE}, A.ACCEPT_DATE)                      AS SALE_DATE
	                 , ''                                                                              AS INOUT_TYPE_DETAIL
	                 , B.ITEM_CODE               AS ITEM_CODE
	                 , uniLITE.fnItemNameComp(#{S_COMP_CODE}, #{S_USER_ID}, B.ITEM_CODE) AS ITEM_NAME
	                 , C.SPEC                    AS SPEC
	                 , B.UNIT                    AS SALE_UNIT
	                 , B.TRANS_RATE              AS TRANS_RATE
	                 , ISNULL(B.QTY,0)           AS SALE_Q
	                 , ISNULL(B.ACCEPT_AMT,0)    AS SALE_AMT_O
	                 , ''                        AS TAX_TYPE
	                 , 0                         AS TAX_AMT_O
	                 , ISNULL(A.AMT_UNIT, '')   AS MONEY_UNIT
	                 , 0                         AS COLLECT_AMT
	                 , ''                        AS COLLECT_TYPE
	                 , ''                        AS NOTE_DUE_DATE
	                 , 0                         AS UN_COLLECT_AMT
	                 , 'N'                       AS CARD_TYPE
	                 , 0						 AS SALE_P
	                 , '1'                       AS GUBUN
	                 , '' 						AS SALE_NAME
	              FROM            TEC120T A  WITH (NOLOCK)
	                   INNER JOIN TEC130T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                                      AND B.DIV_CODE     = A.DIV_CODE
	                                                      AND B.ACCEPT_NO    = A.ACCEPT_NO
	                   INNER JOIN TEA100T M  WITH (NOLOCK) ON M.COMP_CODE    = B.COMP_CODE
	                                                      AND M.DIV_CODE     = B.OUT_DIV_CODE
	                                                      AND M.SO_SER_NO    = B.SO_SER_NO
	                   INNER JOIN BCM100T D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
	                                                      AND D.CUSTOM_CODE = A.APPLICANT
	                   INNER JOIN BPR100T C  WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
	                                                      AND C.ITEM_CODE   = B.ITEM_CODE
	             WHERE A.COMP_CODE     = #{S_COMP_CODE}
	     <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	          		AND A.DIV_CODE      = #{DIV_CODE}
	      </if>
	               AND A.ACCEPT_DATE  &gt;= #{BILL_FR_DATE}
	               AND A.ACCEPT_DATE  &lt;= #{BILL_TO_DATE}
	               
	               <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
					AND A.APPLICANT = #{CUSTOM_CODE}					/* 거래처코드  */
					</if>
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
					AND A.APPLICANT LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
					</if>
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
					AND D.CUSTOM_NAME LIKE '%' + #{CUSTOM_NAME} + '%'	/* 거래처명  */
					</if>

	    <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
	               AND A.AMT_UNIT          = #{MONEY_UNIT}    --'왼쪽그리드의 화폐단위
	    </if>

	            UNION ALL

	            /* 무역 매출정보(TED100T)에서 SEARCH*/
	            SELECT
	                   C.IMPORTER                                             AS SALE_CUSTOM_CODE
	                 , D.CUSTOM_NAME AS SALE_CUSTOM_NAME
	                 , unilite.fnGetUserdate(#{S_COMP_CODE}, A.BL_DATE) AS SALE_DATE
	                 , ''                                                     AS INOUT_TYPE_DETAIL
	                 , B.ITEM_CODE               AS ITEM_CODE
	                 , uniLITE.fnItemNameComp(#{S_COMP_CODE}, #{S_USER_ID}, B.ITEM_CODE) AS ITEM_NAME
	                 , M1.SPEC                   AS SPEC
	                 , B.UNIT                    AS SALE_UNIT
	                 , G.TRANS_RATE              AS TRANS_RATE
	                 , ISNULL(B.QTY,0)           AS SALE_Q
	                 , ISNULL(B.BL_AMT,0)        AS SALE_AMT_O
	                 , ''                        AS TAX_TYPE
	                 , 0                         AS TAX_AMT_O
	                 , ISNULL(A.AMT_UNIT, '')    AS MONEY_UNIT
	                 , 0                         AS COLLECT_AMT
	                 , ''                        AS COLLECT_TYPE
	                 , ''                        AS NOTE_DUE_DATE
	                 , 0                         AS UN_COLLECT_AMT
	                 , 'N'                       AS CARD_TYPE
	                 , 0						 AS SALE_P
	                 , '1' AS GUBUN
	                 , '' AS SALE_NAME
	              FROM            TED100T A  WITH (NOLOCK)
	                   INNER JOIN TED110T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
	                                                      AND B.DIV_CODE    = A.DIV_CODE
	                                                      AND B.BL_SER_NO   = A.BL_SER_NO
	                   INNER JOIN TEA100T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
	                                                      AND C.DIV_CODE    = A.DIV_CODE
	                                                      AND C.SO_SER_NO   = A.SO_SER_NO
	                   LEFT  JOIN TEA110T G  WITH (NOLOCK) ON G.COMP_CODE   = B.COMP_CODE
	                                                      AND G.DIV_CODE    = B.DIV_CODE
	                                                      AND G.SO_SER_NO   = B.SO_SER_NO
	                                                      AND G.SO_SER      = B.SO_SER
	                   INNER JOIN BCM100T D  WITH (NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
	                                                      AND D.CUSTOM_CODE = C.IMPORTER
	                   INNER JOIN BPR100T M1 WITH (NOLOCK) ON M1.COMP_CODE  = B.COMP_CODE
	                                                      AND M1.ITEM_CODE  = B.ITEM_CODE
	             WHERE A.COMP_CODE     = #{S_COMP_CODE}
	       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	               AND A.DIV_CODE      = #{DIV_CODE}
	        </if>
	               AND A.BL_DATE      &gt;= #{BILL_FR_DATE}
	               AND A.BL_DATE      &lt;= #{BILL_TO_DATE}
	               
	               <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
					AND A.IMPORTER = #{CUSTOM_CODE}					/* 거래처코드  */
					</if>
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
					AND A.IMPORTER LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
					</if>
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
					AND D.CUSTOM_NAME LIKE '%' + #{CUSTOM_NAME} + '%'	/* 거래처명  */
					</if>

	    <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
	               AND A.AMT_UNIT      = #{MONEY_UNIT}     --'왼쪽그리드의 화폐단위
	    </if>

	            UNION ALL

	            /*수금정보(TEE100T:NEGO_TYPE='1')에서 SEARCH*/
	            SELECT
	                   A.IMPORTER                                               AS SALE_CUSTOM_CODE
	                 , D.CUSTOM_NAME AS SALE_CUSTOM_NAME
	                 , unilite.fnGetUserdate(#{S_COMP_CODE}, A.NEGO_DATE) AS SALE_DATE
	                 , C1.CODE_NAME                            AS INOUT_TYPE_DETAIL
	                 , ''                        AS ITEM_CODE
	                 , ''                        AS ITEM_NAME
	                 , ''                        AS SPEC
	                 , ''                        AS SALE_UNIT
	                 , 0                         AS TRANS_RATE
	                 , 0                         AS SALE_Q
	                 , 0                         AS SALE_AMT_O
	                 , ''                        AS TAX_TYPE
	                 , 0                         AS TAX_AMT_O
	                 , ISNULL(A.MONEY_UNIT, '')    AS MONEY_UNIT
	                 , ISNULL(A.PAY_AMT,0)       AS COLLECT_AMT
	                 , A.COLET_TYPE              AS COLLECT_TYPE
	                 , (CASE WHEN A.EXPIRY_DATE IS NULL
	                         THEN ''
	                         ELSE unilite.fnGetUserdate (#{S_COMP_CODE}, A.EXPIRY_DATE)
	                     END)                    AS NOTE_DUE_DATE
	                 , 0                         AS UN_COLLECT_AMT
	                 , ''                        AS CARD_TYPE
	                 , 0						 AS SALE_P
	                 , '2' AS GUBUN
	                 , '' AS SALE_NAME
	              FROM            TEE100T A WITH (NOLOCK)
	                   INNER JOIN BSA100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                                      AND C1.MAIN_CODE = 'T060'
	                                                      AND C1.SUB_CODE  = A.COLET_TYPE
	                                                      AND C1.REF_CODE1 = '10'
	                   INNER JOIN BCM100T D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
	                                                      AND D.CUSTOM_CODE = A.IMPORTER                                                    
	             WHERE A.COMP_CODE     = #{S_COMP_CODE}
	   <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	               AND A.DIV_CODE      = #{DIV_CODE}
	    </if>
	               AND A.NEGO_DATE    &gt;= #{BILL_FR_DATE}
	               AND A.NEGO_DATE    &lt;= #{BILL_TO_DATE}
	               AND A.NEGO_TYPE     = '1'
	               
	               
	               <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
					AND A.IMPORTER = #{CUSTOM_CODE}					/* 거래처코드  */
					</if>
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
					AND A.IMPORTER LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
					</if>
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
					AND D.CUSTOM_NAME LIKE '%' + #{CUSTOM_NAME} + '%'	/* 거래처명  */
					</if>

	    <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
	               AND A.MONEY_UNIT      = #{MONEY_UNIT}     --'왼쪽그리드의 화폐단위
	    </if>

	            UNION ALL

	            /*수금정보(TEE100T:NEGO_TYPE='2')에서 SEARCH*/
	            SELECT
	                   A.IMPORTER                                           AS SALE_CUSTOM_CODE
	                 , D.CUSTOM_NAME AS SALE_CUSTOM_NAME
	                 , unilite.fnGetUserdate(#{S_COMP_CODE},A.PAY_DATE) AS SALE_DATE
	                 , C1.CODE_NAME                          AS INOUT_TYPE_DETAIL
	                 , ''                        AS ITEM_CODE
	                 , ''                        AS ITEM_NAME
	                 , ''                        AS SPEC
	                 , ''                        AS SALE_UNIT
	                 , 0                         AS TRANS_RATE
	                 , 0                         AS SALE_Q
	                 , 0                         AS SALE_AMT_O
	                 , ''                        AS TAX_TYPE
	                 , 0                         AS TAX_AMT_O
	                 , ISNULL(A.MONEY_UNIT, '')    AS MONEY_UNIT
	                 , ISNULL(A.PAY_AMT,0)       AS COLLECT_AMT
	                 , A.COLET_TYPE              AS COLLECT_TYPE
	                 , (CASE WHEN A.EXPIRY_DATE IS NULL
	                         THEN ''
	                         ELSE unilite.fnGetUserdate (#{S_COMP_CODE}, A.EXPIRY_DATE)
	                     END)                    AS NOTE_DUE_DATE
	                 , 0                         AS UN_COLLECT_AMT
	                 , ''                        AS CARD_TYPE
	                 , 0						 AS SALE_P
	                 , '2'	 AS GUBUN
	                 , '' 	AS SALE_NAME
	              FROM            TEE100T A  WITH (NOLOCK)
	                   INNER JOIN BSA100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
	                                                      AND C1.MAIN_CODE = 'T060'
	                                                      AND C1.SUB_CODE  = A.COLET_TYPE
	                                                      AND C1.REF_CODE1 = '10'
	                   INNER JOIN BCM100T D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
	                                                      AND D.CUSTOM_CODE = A.IMPORTER                                                      
	             WHERE A.COMP_CODE     = #{S_COMP_CODE}
	      <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
	               AND A.DIV_CODE      = #{DIV_CODE}
	      </if>
	               AND A.PAY_DATE     &gt;= #{BILL_FR_DATE}
	               AND A.PAY_DATE     &lt;= #{BILL_TO_DATE}
	               AND A.NEGO_TYPE     = '2'
	               
	               <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
					AND A.IMPORTER = #{CUSTOM_CODE}					/* 거래처코드  */
					</if>
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
					AND A.IMPORTER LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
					</if>
					<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
					AND D.CUSTOM_NAME LIKE '%' + #{CUSTOM_NAME} + '%'	/* 거래처명  */
					</if>

	    <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
	               AND A.MONEY_UNIT      = #{MONEY_UNIT}     --'왼쪽그리드의 화폐단위
	    </if>

	    </if>

	    ) X
	    ORDER BY SALE_CUSTOM_CODE, SALE_DATE, GUBUN


		INSERT INTO #TMP_SSA430 (SALE_CUSTOM_CODE, SALE_CUSTOM_NAME, SALE_MONTH, SALE_DATE, INOUT_TYPE_DETAIL, ITEM_CODE, ITEM_NAME, SPEC, SALE_UNIT, TRANS_RATE
								, SALE_Q, CARRIED_OVER_AMT, SALE_AMT_O, TAX_TYPE, TAX_AMT_O, SUM_SALE_AMT, MONEY_UNIT, COLLECT_AMT, COLLECT_TYPE, NOTE_DUE_DATE, UN_COLLECT_AMT, CARD_TYPE, GUBUN, SEQ, SALE_P
								, SALE_NAME )
		SELECT TOP 1 SALE_CUSTOM_CODE, SALE_CUSTOM_NAME, SALE_MONTH, SALE_MONTH AS SALE_DATE, '이월' AS INOUT_TYPE_DETAIL, '' AS ITEM_CODE, '' AS ITEM_NAME, '' AS SPEC, '' AS SALE_UNIT, 0 AS TRANS_RATE
				, 0 AS SALE_Q
				, @BLAN_AMT AS CARRIED_OVER_AMT
				, 0 AS SALE_AMT_O, '' AS TAX_TYPE, 0 AS TAX_AMT_O, 0 AS SUM_SALE_AMT, MONEY_UNIT, 0 AS COLLECT_AMT, '' AS COLLECT_TYPE, '' AS NOTE_DUE_DATE, 0 AS UN_COLLECT_AMT, '' AS CARD_TYPE, '9' AS GUBUN
				, 0 AS SEQ
				, 0 AS SALE_P
				, '' AS SALE_NAME
		FROM #TMP_SSA430;


		WITH ACCOUNT_BOOK
		AS (
			SELECT *
			FROM #TMP_SSA430
			)

		SELECT  A.SALE_CUSTOM_CODE
		        , A.SALE_CUSTOM_NAME
		        , A.SALE_MONTH
				, A.SALE_DATE
				, A.INOUT_TYPE_DETAIL, A.ITEM_CODE, A.ITEM_NAME, A.SPEC, A.SALE_UNIT, A.TRANS_RATE, A.SALE_Q, A.SALE_AMT_O, A.TAX_TYPE, A.TAX_AMT_O, A.SUM_SALE_AMT
				, A.MONEY_UNIT
				, A.COLLECT_AMT
				, A.COLLECT_TYPE, A.NOTE_DUE_DATE
				
				--미수금액에서 카드매출 제외. 2021.03.19
				--, SUM(ISNULL(B.CARRIED_OVER_AMT,0)+ISNULL(B.SUM_SALE_AMT,0)-ISNULL(B.COLLECT_AMT,0)) AS UN_COLLECT_AMT
				, SUM(ISNULL(B.CARRIED_OVER_AMT,0)-ISNULL(B.COLLECT_AMT,0)+CASE WHEN B.CARD_TYPE = 'Y' THEN 0 ELSE ISNULL(B.SUM_SALE_AMT,0) END)	AS UN_COLLECT_AMT
				
				, CASE WHEN A.CARD_TYPE = 'Y' THEN '카드' ELSE '' END   AS CARD_TYPE
				, A.GUBUN
				, A.SEQ
				, A.SALE_P
				, A.SALE_NAME
		FROM ACCOUNT_BOOK A
			 LEFT JOIN ACCOUNT_BOOK B ON A.SALE_CUSTOM_CODE=B.SALE_CUSTOM_CODE AND A.SEQ &gt;= B.SEQ
		GROUP BY A.SALE_CUSTOM_CODE, A.SALE_CUSTOM_NAME, A.SALE_MONTH, A.SALE_DATE, A.INOUT_TYPE_DETAIL, A.ITEM_CODE, A.ITEM_NAME, A.SPEC, A.SALE_UNIT, A.TRANS_RATE, A.MONEY_UNIT
		        , A.SALE_Q, A.SALE_AMT_O, A.TAX_TYPE, A.TAX_AMT_O, A.SUM_SALE_AMT, A.COLLECT_AMT
				, A.COLLECT_TYPE, A.NOTE_DUE_DATE
				, A.CARD_TYPE, A.GUBUN, A.SEQ, A.SALE_P, A.SALE_NAME
		ORDER BY A.SEQ

	SET NOCOUNT OFF
	</select>


	<!-- 출력 데이터 조회 쿼리 -->
	<select id="ssa430skrvServiceImpl.printList" parameterType="Map" resultType="rMap">
		/* ssa430skrvServiceImpl.printList */
		DECLARE @COMP_CODE    NVARCHAR(08)
		      , @DIV_CODE     NVARCHAR(08)
			  , @CUSTOM_CODE  NVARCHAR(08)
			  , @SALE_DATE_FR NVARCHAR(08)
			  , @SALE_DATE_TO NVARCHAR(08)
			  , @MONEY_UNIT   NVARCHAR(03)

		    SET @COMP_CODE    = #{S_COMP_CODE}
		    SET @DIV_CODE     = #{DIV_CODE}
		    SET @CUSTOM_CODE  = #{CUSTOM_CODE}
		    SET @SALE_DATE_FR = #{BILL_FR_DATE}
		    SET @SALE_DATE_TO = #{BILL_TO_DATE}
		    SET @MONEY_UNIT   = #{MONEY_UNIT}

		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.CUSTOM_CODE
		     , A.MY_NAME
		     , A.MY_REPRE_NAME
		     , A.MY_TELEPHON
		     , A.MY_COMPANY_NUM
		     , A.MY_FAX_NUM
		     , A.MY_COMP_CLASS
		     , A.MY_COMP_TYPE
		     , A.MY_ADDR
		     , A.CUSTOM_NAME
		     , A.CUSTOM_TOP_NAME
		     , A.CUSTOM_TELEPHON
		     , A.CUSTOM_COMPANY_NUM
		     , A.CUSTOM_FAX_NUM
		     , A.CUSTOM_COMP_CLASS
		     , A.CUSTOM_COMP_TYPE
		     , A.CUSTOM_ADDR
             , A.SALE_DATE
             , A.ITEM_CODE
             , A.ITEM_NAME
             , A.DVRY_Q
             , A.SALE_Q
             , A.SALE_P
             , A.SALE_AMT_O
             , A.TAX_AMT_O
             , A.SALE_AMT_O + A.TAX_AMT_O           AS SALE_AMT
             , A.ORDER_Q
		     --, SUM(A.SALE_Q)                        AS SUM_SALE_Q
		     --, SUM(A.SALE_AMT_O)                    AS SUM_SALE_AMT_O
		     --, SUM(A.TAX_AMT_O)                     AS SUM_TAX_AMT_O
		     --, SUM(A.SALE_AMT_O) + SUM(A.TAX_AMT_O) AS SUM_SALE_AMT
		  FROM (
		        SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , A.SALE_CUSTOM_CODE                          AS CUSTOM_CODE
		             , E.INOUT_DATE                                AS SALE_DATE
		             , A.SALE_DATE                                 AS SALE_DATE2
		             , ISNULL(B.SALE_Q, 0)                         AS SALE_Q
		             , ISNULL(B.SALE_AMT_O, 0)                     AS SALE_AMT_O
		             , ISNULL(B.TAX_AMT_O, 0)                      AS TAX_AMT_O
		             , M1.DIV_NAME                                 AS MY_NAME
		             , M1.REPRE_NAME                               AS MY_REPRE_NAME
		             , M1.TELEPHON                                 AS MY_TELEPHON
		             , M1.COMPANY_NUM                              AS MY_COMPANY_NUM
		             , M1.FAX_NUM                                  AS MY_FAX_NUM
		             , M1.COMP_CLASS                               AS MY_COMP_CLASS
		             , M1.COMP_TYPE                                AS MY_COMP_TYPE
		             , M1.ADDR                                     AS MY_ADDR
		             , M2.CUSTOM_NAME                              AS CUSTOM_NAME
		             , M2.TOP_NAME                                 AS CUSTOM_TOP_NAME
		             , M2.TELEPHON                                 AS CUSTOM_TELEPHON
		             , M2.COMPANY_NUM                              AS CUSTOM_COMPANY_NUM
		             , M2.FAX_NUM                                  AS CUSTOM_FAX_NUM
		             , M2.COMP_CLASS                               AS CUSTOM_COMP_CLASS
		             , M2.COMP_TYPE                                AS CUSTOM_COMP_TYPE
		             , ISNULL(M2.ADDR1, '') + ISNULL(M2.ADDR2, '') AS CUSTOM_ADDR
                     , B.ITEM_CODE
                     , uniLITE.fnItemNameComp(@COMP_CODE, #{S_USER_ID}, B.ITEM_CODE) AS ITEM_NAME
		             , B.SALE_P
		             , ISNULL(E.LOSS_Q, 0) + ISNULL(E.ORDER_UNIT_Q, 0)               AS DVRY_Q
		             , ISNULL(D.ORDER_Q, 0)                        AS ORDER_Q
		        FROM       SSA100T A  WITH(NOLOCK)
		        INNER JOIN SSA110T B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                          AND B.DIV_CODE     = A.DIV_CODE
		                                          AND B.BILL_NUM     = A.BILL_NUM
		        INNER JOIN BTR100T E  WITH(NOLOCK) ON E.COMP_CODE    = B.COMP_CODE
		                                          AND E.DIV_CODE     = B.DIV_CODE
		                                          AND E.INOUT_NUM    = B.INOUT_NUM
		                                          AND E.INOUT_SEQ    = B.INOUT_SEQ
		        LEFT  JOIN SOF110T D  WITH(NOLOCK) ON D.COMP_CODE    = E.COMP_CODE
		                                          AND D.OUT_DIV_CODE = E.DIV_CODE
		                                          AND D.ORDER_NUM    = E.ORDER_NUM
		                                          AND D.SER_NO       = E.ORDER_SEQ
		        INNER JOIN BOR120T M1 WITH(NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                          AND M1.DIV_CODE    = A.DIV_CODE
		        INNER JOIN BCM100T M2 WITH(NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
		                                          AND M2.CUSTOM_CODE = A.SALE_CUSTOM_CODE
		       WHERE A.COMP_CODE        = @COMP_CODE
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		         AND A.DIV_CODE         = @DIV_CODE
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BILL_FR_DATE)">
		         AND A.SALE_DATE    &gt;= @SALE_DATE_FR
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BILL_TO_DATE)">
		         AND A.SALE_DATE    &lt;= @SALE_DATE_TO
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		         AND A.SALE_CUSTOM_CODE LIKE @CUSTOM_CODE + '%'
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		         AND A.MONEY_UNIT       = @MONEY_UNIT    --'왼쪽그리드의 화폐단위
			 </if>
		<if test="rdoSelect1 == &quot;T&quot;"> --'무역포함
		        UNION ALL
		        SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , A.APPLICANT                                 AS CUSTOM_CODE
		             , E.INOUT_DATE                                AS SALE_DATE
		             , A.ACCEPT_DATE                               AS SALE_DATE2
		             , ISNULL(B.QTY,0)                             AS SALE_Q
		             , ISNULL(B.ACCEPT_AMT,0)                      AS SALE_AMT_O
		             , 0                                           AS TAX_AMT_O
		             , M1.DIV_NAME                                 AS MY_NAME
		             , M1.REPRE_NAME                               AS MY_REPRE_NAME
		             , M1.TELEPHON                                 AS MY_TELEPHON
		             , M1.COMPANY_NUM                              AS MY_COMPANY_NUM
		             , M1.FAX_NUM                                  AS MY_FAX_NUM
		             , M1.COMP_CLASS                               AS MY_COMP_CLASS
		             , M1.COMP_TYPE                                AS MY_COMP_TYPE
		             , M1.ADDR                                     AS MY_ADDR
		             , M2.CUSTOM_NAME                              AS CUSTOM_NAME
		             , M2.TOP_NAME                                 AS CUSTOM_TOP_NAME
		             , M2.TELEPHON                                 AS CUSTOM_TELEPHON
		             , M2.COMPANY_NUM                              AS CUSTOM_COMPANY_NUM
		             , M2.FAX_NUM                                  AS CUSTOM_FAX_NUM
		             , M2.COMP_CLASS                               AS CUSTOM_COMP_CLASS
		             , M2.COMP_TYPE                                AS CUSTOM_COMP_TYPE
		             , ISNULL(M2.ADDR1, '') + ISNULL(M2.ADDR2, '') AS CUSTOM_ADDR
                     , B.ITEM_CODE
                     , uniLITE.fnItemNameComp(@COMP_CODE, #{S_USER_ID}, B.ITEM_CODE) AS ITEM_NAME
                     , B.ACCEPT_AMT                                                  AS SALE_P
		             , ISNULL(E.LOSS_Q, 0) + ISNULL(E.ORDER_UNIT_Q, 0)               AS DVRY_Q
		             , ISNULL(D.ORDER_Q, 0)                        AS ORDER_Q
		        FROM       TEC120T A  WITH(NOLOCK)
		        INNER JOIN TEC130T B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                          AND B.DIV_CODE     = A.DIV_CODE
		                                          AND B.ACCEPT_NO    = A.ACCEPT_NO
		        INNER JOIN BTR100T E  WITH(NOLOCK) ON E.COMP_CODE    = B.COMP_CODE
		                                          AND E.DIV_CODE     = B.DIV_CODE
		                                          AND E.INOUT_NUM    = B.INOUT_NUM
		                                          AND E.INOUT_SEQ    = B.INOUT_SEQ
		        LEFT  JOIN SOF110T D  WITH(NOLOCK) ON D.COMP_CODE    = E.COMP_CODE
		                                          AND D.OUT_DIV_CODE = E.DIV_CODE
		                                          AND D.ORDER_NUM    = E.ORDER_NUM
		                                          AND D.SER_NO       = E.ORDER_SEQ
		        INNER JOIN BOR120T M1 WITH(NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                          AND M1.DIV_CODE    = A.DIV_CODE
		        INNER JOIN BCM100T M2 WITH(NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
		                                          AND M2.CUSTOM_CODE = A.APPLICANT
		       WHERE A.COMP_CODE        = @COMP_CODE
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		         AND A.DIV_CODE         = @DIV_CODE
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BILL_FR_DATE)">
		         AND A.ACCEPT_DATE  &gt;= @SALE_DATE_FR
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BILL_TO_DATE)">
		         AND A.ACCEPT_DATE  &lt;= @SALE_DATE_TO
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		         AND A.APPLICANT        LIKE @CUSTOM_CODE + '%'
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		         AND A.AMT_UNIT         = @MONEY_UNIT    --'왼쪽그리드의 화폐단위
			 </if>
		        UNION ALL
		        SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , C.IMPORTER                                  AS CUSTOM_CODE
		             , E.INOUT_DATE                                AS SALE_DATE
		             , A.BL_DATE                                   AS SALE_DATE2
		             , ISNULL(B.QTY,0)                             AS SALE_Q
		             , ISNULL(B.BL_AMT,0)                          AS SALE_AMT_O
		             , 0                                           AS TAX_AMT_O
		             , M1.DIV_NAME                                 AS MY_NAME
		             , M1.REPRE_NAME                               AS MY_REPRE_NAME
		             , M1.TELEPHON                                 AS MY_TELEPHON
		             , M1.COMPANY_NUM                              AS MY_COMPANY_NUM
		             , M1.FAX_NUM                                  AS MY_FAX_NUM
		             , M1.COMP_CLASS                               AS MY_COMP_CLASS
		             , M1.COMP_TYPE                                AS MY_COMP_TYPE
		             , M1.ADDR                                     AS MY_ADDR
		             , M2.CUSTOM_NAME                              AS CUSTOM_NAME
		             , M2.TOP_NAME                                 AS CUSTOM_TOP_NAME
		             , M2.TELEPHON                                 AS CUSTOM_TELEPHON
		             , M2.COMPANY_NUM                              AS CUSTOM_COMPANY_NUM
		             , M2.FAX_NUM                                  AS CUSTOM_FAX_NUM
		             , M2.COMP_CLASS                               AS CUSTOM_COMP_CLASS
		             , M2.COMP_TYPE                                AS CUSTOM_COMP_TYPE
		             , ISNULL(M2.ADDR1, '') + ISNULL(M2.ADDR2, '') AS CUSTOM_ADDR
                     , B.ITEM_CODE
                     , uniLITE.fnItemNameComp(@COMP_CODE, #{S_USER_ID}, B.ITEM_CODE) AS ITEM_NAME
		             , B.PRICE                                                       AS SALE_P
                     , ISNULL(E.LOSS_Q, 0) + ISNULL(E.ORDER_UNIT_Q, 0)               AS DVRY_Q
		             , ISNULL(D.ORDER_Q, 0)                        AS ORDER_Q
		        FROM       TED100T A  WITH(NOLOCK)
		        INNER JOIN TED110T B  WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                          AND B.DIV_CODE     = A.DIV_CODE
		                                          AND B.BL_SER_NO    = A.BL_SER_NO
		        INNER JOIN TEA100T C  WITH(NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                          AND C.DIV_CODE     = A.DIV_CODE
		                                          AND C.SO_SER_NO    = A.SO_SER_NO
		        INNER JOIN BTR100T E  WITH(NOLOCK) ON E.COMP_CODE    = B.COMP_CODE
		                                          AND E.DIV_CODE     = B.DIV_CODE
		                                          AND E.INOUT_NUM    = B.INOUT_NUM
		                                          AND E.INOUT_SEQ    = B.INOUT_SEQ
		        LEFT  JOIN SOF110T D  WITH(NOLOCK) ON D.COMP_CODE    = E.COMP_CODE
		                                          AND D.OUT_DIV_CODE = E.DIV_CODE
		                                          AND D.ORDER_NUM    = E.ORDER_NUM
		                                          AND D.SER_NO       = E.ORDER_SEQ
		        INNER JOIN BOR120T M1 WITH(NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                          AND M1.DIV_CODE    = A.DIV_CODE
		        INNER JOIN BCM100T M2 WITH(NOLOCK) ON M2.COMP_CODE   = C.COMP_CODE
		                                          AND M2.CUSTOM_CODE = C.IMPORTER
		       WHERE A.COMP_CODE        = @COMP_CODE
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		         AND A.DIV_CODE         = @DIV_CODE
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BILL_FR_DATE)">
		         AND A.BL_DATE      &gt;= @SALE_DATE_FR
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(BILL_TO_DATE)">
		         AND A.BL_DATE      &lt;= @SALE_DATE_TO
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		         AND C.IMPORTER         LIKE @CUSTOM_CODE + '%'
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		         AND A.AMT_UNIT         = @MONEY_UNIT    --'왼쪽그리드의 화폐단위
			 </if>
		</if>
		) A
		--GROUP BY A.COMP_CODE
		--       , A.DIV_CODE
		--       , A.CUSTOM_CODE
		--       , A.MONEY_UNIT
		--       , A.MY_NAME
		--       , A.MY_REPRE_NAME
		--       , A.MY_TELEPHON
		--       , A.MY_COMPANY_NUM
		--       , A.MY_FAX_NUM
		--       , A.MY_COMP_CLASS
		--       , A.MY_COMP_TYPE
		--       , A.MY_ADDR
		--       , A.CUSTOM_NAME
		--       , A.CUSTOM_TOP_NAME
		--       , A.CUSTOM_TELEPHON
		--       , A.CUSTOM_COMPANY_NUM
		--       , A.CUSTOM_FAX_NUM
		--       , A.CUSTOM_COMP_CLASS
		--       , A.CUSTOM_COMP_TYPE
		--       , A.CUSTOM_ADDR
		ORDER BY A.CUSTOM_CODE, A.SALE_DATE
	</select>


























	<select id="ssa430skrvServiceImpl.mainReport_BACKUP" parameterType="Map" resultType="rMap">
		/* ssa430skrvServiceImpl.mainReport */
		DECLARE @COMP_CODE    NVARCHAR(08)
		      , @DIV_CODE     NVARCHAR(08)
			  , @CUSTOM_CODE  NVARCHAR(08)
			  , @SALE_DATE_FR NVARCHAR(08)
			  , @SALE_DATE_TO NVARCHAR(08)
			  , @MONEY_UNIT   NVARCHAR(03)

		    SET @COMP_CODE    = #{COMP_CODE}
		    SET @DIV_CODE     = #{DIV_CODE}
		    SET @CUSTOM_CODE  = #{CUSTOM_CODE}
		    SET @SALE_DATE_FR = #{BILL_FR_DATE}
		    SET @SALE_DATE_TO = #{BILL_FR_DATE}
		    SET @MONEY_UNIT   = #{MONEY_UNIT}

		SELECT A.*
		  FROM (
		        SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , A.SALE_CUSTOM_CODE                          AS CUSTOM_CODE
		             , A.SALE_DATE
		             , A.MONEY_UNIT
		             , M1.DIV_NAME                                 AS MY_NAME
		             , M1.REPRE_NAME                               AS MY_REPRE_NAME
		             , M1.TELEPHON                                 AS MY_TELEPHON
		             , M1.COMPANY_NUM                              AS MY_COMPANY_NUM
		             , M1.FAX_NUM                                  AS MY_FAX_NUM
		             , M1.COMP_CLASS                               AS MY_COMP_CLASS
		             , M1.COMP_TYPE                                AS MY_COMP_TYPE
		             , M1.ADDR                                     AS MY_ADDR
		             , M2.CUSTOM_NAME                              AS CUSTOM_NAME
		             , M2.TOP_NAME                                 AS CUSTOM_TOP_NAME
		             , M2.TELEPHON                                 AS CUSTOM_TELEPHON
		             , M2.COMPANY_NUM                              AS CUSTOM_COMPANY_NUM
		             , M2.FAX_NUM                                  AS CUSTOM_FAX_NUM
		             , M2.COMP_CLASS                               AS CUSTOM_COMP_CLASS
		             , M2.COMP_TYPE                                AS CUSTOM_COMP_TYPE
		             , ISNULL(M2.ADDR1, '') + ISNULL(M2.ADDR2, '') AS CUSTOM_ADDR
		        FROM       SSA100T A  WITH(NOLOCK)
		        INNER JOIN BOR120T M1 WITH(NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                          AND M1.DIV_CODE    = A.DIV_CODE
		        INNER JOIN BCM100T M2 WITH(NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
		                                          AND M2.CUSTOM_CODE = A.SALE_CUSTOM_CODE
		       WHERE A.COMP_CODE        = @COMP_CODE
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		         AND A.DIV_CODE         = @DIV_CODE
			 </if>
		         AND A.SALE_DATE    &gt;= @SALE_DATE_FR
		         AND A.SALE_DATE    &lt;= @SALE_DATE_TO
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		         AND A.SALE_CUSTOM_CODE LIKE @CUSTOM_CODE + '%'
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		         AND A.MONEY_UNIT       = @MONEY_UNIT    --'왼쪽그리드의 화폐단위
			 </if>
		        UNION ALL
		        SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , A.CUSTOM_CODE                               AS CUSTOM_CODE
		             , A.COLLECT_DATE                              AS SALE_DATE
		             , A.MONEY_UNIT
		             , M1.DIV_NAME                                 AS MY_NAME
		             , M1.REPRE_NAME                               AS MY_REPRE_NAME
		             , M1.TELEPHON                                 AS MY_TELEPHON
		             , M1.COMPANY_NUM                              AS MY_COMPANY_NUM
		             , M1.FAX_NUM                                  AS MY_FAX_NUM
		             , M1.COMP_CLASS                               AS MY_COMP_CLASS
		             , M1.COMP_TYPE                                AS MY_COMP_TYPE
		             , M1.ADDR                                     AS MY_ADDR

		             , M2.CUSTOM_NAME                              AS CUSTOM_NAME
		             , M2.TOP_NAME                                 AS CUSTOM_TOP_NAME
		             , M2.TELEPHON                                 AS CUSTOM_TELEPHON
		             , M2.COMPANY_NUM                              AS CUSTOM_COMPANY_NUM
		             , M2.FAX_NUM                                  AS CUSTOM_FAX_NUM
		             , M2.COMP_CLASS                               AS CUSTOM_COMP_CLASS
		             , M2.COMP_TYPE                                AS CUSTOM_COMP_TYPE
		             , ISNULL(M2.ADDR1, '') + ISNULL(M2.ADDR2, '') AS CUSTOM_ADDR
		        FROM       SCO100T A WITH(NOLOCK)
		        INNER JOIN BOR120T M1 WITH(NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                          AND M1.DIV_CODE    = A.DIV_CODE
		        INNER JOIN BCM100T M2 WITH(NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
		                                          AND M2.CUSTOM_CODE = A.CUSTOM_CODE
		       WHERE A.COMP_CODE        = @COMP_CODE
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		         AND A.DIV_CODE         = @DIV_CODE
			 </if>
		         AND A.COLLECT_DATE &gt;= @SALE_DATE_FR
		         AND A.COLLECT_DATE &lt;= @SALE_DATE_TO
		         AND (A.DISHONOR_DATE IS NULL OR A.DISHONOR_DATE = '')
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		         AND A.CUSTOM_CODE     LIKE @CUSTOM_CODE + '%'
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		         AND A.MONEY_UNIT       = @MONEY_UNIT    --'왼쪽그리드의 화폐단위
			 </if>
		<if test="rdoSelect1 == &quot;T&quot;"> --'무역포함
		        UNION ALL
		        SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , A.APPLICANT                                 AS CUSTOM_CODE
		             , A.ACCEPT_DATE                               AS SALE_DATE
		             , A.AMT_UNIT                                  AS MONEY_UNIT
		             , M1.DIV_NAME                                 AS MY_NAME
		             , M1.REPRE_NAME                               AS MY_REPRE_NAME
		             , M1.TELEPHON                                 AS MY_TELEPHON
		             , M1.COMPANY_NUM                              AS MY_COMPANY_NUM
		             , M1.FAX_NUM                                  AS MY_FAX_NUM
		             , M1.COMP_CLASS                               AS MY_COMP_CLASS
		             , M1.COMP_TYPE                                AS MY_COMP_TYPE
		             , M1.ADDR                                     AS MY_ADDR
		             , M2.CUSTOM_NAME                              AS CUSTOM_NAME
		             , M2.TOP_NAME                                 AS CUSTOM_TOP_NAME
		             , M2.TELEPHON                                 AS CUSTOM_TELEPHON
		             , M2.COMPANY_NUM                              AS CUSTOM_COMPANY_NUM
		             , M2.FAX_NUM                                  AS CUSTOM_FAX_NUM
		             , M2.COMP_CLASS                               AS CUSTOM_COMP_CLASS
		             , M2.COMP_TYPE                                AS CUSTOM_COMP_TYPE
		             , ISNULL(M2.ADDR1, '') + ISNULL(M2.ADDR2, '') AS CUSTOM_ADDR
		        FROM       TEC120T A WITH(NOLOCK)
		        INNER JOIN BOR120T M1 WITH(NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                          AND M1.DIV_CODE    = A.DIV_CODE
		        INNER JOIN BCM100T M2 WITH(NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
		                                          AND M2.CUSTOM_CODE = A.APPLICANT
		       WHERE A.COMP_CODE        = @COMP_CODE
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		         AND A.DIV_CODE         = @DIV_CODE
			 </if>
		         AND A.ACCEPT_DATE  &gt;= @SALE_DATE_FR
		         AND A.ACCEPT_DATE  &lt;= @SALE_DATE_TO
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		         AND A.APPLICANT        LIKE @CUSTOM_CODE + '%'
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		         AND A.AMT_UNIT         = @MONEY_UNIT    --'왼쪽그리드의 화폐단위
			 </if>
		        UNION ALL
		        SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , C.IMPORTER                                  AS CUSTOM_CODE
		             , A.BL_DATE                                   AS SALE_DATE
		             , A.AMT_UNIT                                  AS MONEY_UNIT
		             , M1.DIV_NAME                                 AS MY_NAME
		             , M1.REPRE_NAME                               AS MY_REPRE_NAME
		             , M1.TELEPHON                                 AS MY_TELEPHON
		             , M1.COMPANY_NUM                              AS MY_COMPANY_NUM
		             , M1.FAX_NUM                                  AS MY_FAX_NUM
		             , M1.COMP_CLASS                               AS MY_COMP_CLASS
		             , M1.COMP_TYPE                                AS MY_COMP_TYPE
		             , M1.ADDR                                     AS MY_ADDR
		             , M2.CUSTOM_NAME                              AS CUSTOM_NAME
		             , M2.TOP_NAME                                 AS CUSTOM_TOP_NAME
		             , M2.TELEPHON                                 AS CUSTOM_TELEPHON
		             , M2.COMPANY_NUM                              AS CUSTOM_COMPANY_NUM
		             , M2.FAX_NUM                                  AS CUSTOM_FAX_NUM
		             , M2.COMP_CLASS                               AS CUSTOM_COMP_CLASS
		             , M2.COMP_TYPE                                AS CUSTOM_COMP_TYPE
		             , ISNULL(M2.ADDR1, '') + ISNULL(M2.ADDR2, '') AS CUSTOM_ADDR
		        FROM       TED100T A  WITH(NOLOCK)
		        INNER JOIN TEA100T C  WITH(NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
		                                          AND C.DIV_CODE     = A.DIV_CODE
		                                          AND C.SO_SER_NO    = A.SO_SER_NO
		        INNER JOIN BOR120T M1 WITH(NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                          AND M1.DIV_CODE    = A.DIV_CODE
		        INNER JOIN BCM100T M2 WITH(NOLOCK) ON M2.COMP_CODE   = C.COMP_CODE
		                                          AND M2.CUSTOM_CODE = C.IMPORTER
		       WHERE A.COMP_CODE        = @COMP_CODE
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		         AND A.DIV_CODE         = @DIV_CODE
			 </if>
		         AND A.BL_DATE      &gt;= @SALE_DATE_FR
		         AND A.BL_DATE      &lt;= @SALE_DATE_TO
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		         AND C.IMPORTER         LIKE @CUSTOM_CODE + '%'
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		         AND A.AMT_UNIT         = @MONEY_UNIT    --'왼쪽그리드의 화폐단위
			 </if>
		        UNION ALL
		        SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , A.IMPORTER                                  AS CUSTOM_CODE
		             , A.NEGO_DATE                                 AS SALE_DATE
		             , A.MONEY_UNIT                                AS MONEY_UNIT
		             , M1.DIV_NAME                                 AS MY_NAME
		             , M1.REPRE_NAME                               AS MY_REPRE_NAME
		             , M1.TELEPHON                                 AS MY_TELEPHON
		             , M1.COMPANY_NUM                              AS MY_COMPANY_NUM
		             , M1.FAX_NUM                                  AS MY_FAX_NUM
		             , M1.COMP_CLASS                               AS MY_COMP_CLASS
		             , M1.COMP_TYPE                                AS MY_COMP_TYPE
		             , M1.ADDR                                     AS MY_ADDR
		             , M2.CUSTOM_NAME                              AS CUSTOM_NAME
		             , M2.TOP_NAME                                 AS CUSTOM_TOP_NAME
		             , M2.TELEPHON                                 AS CUSTOM_TELEPHON
		             , M2.COMPANY_NUM                              AS CUSTOM_COMPANY_NUM
		             , M2.FAX_NUM                                  AS CUSTOM_FAX_NUM
		             , M2.COMP_CLASS                               AS CUSTOM_COMP_CLASS
		             , M2.COMP_TYPE                                AS CUSTOM_COMP_TYPE
		             , ISNULL(M2.ADDR1, '') + ISNULL(M2.ADDR2, '') AS CUSTOM_ADDR
		        FROM       TEE100T A  WITH(NOLOCK)
		        INNER JOIN BOR120T M1 WITH(NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                          AND M1.DIV_CODE    = A.DIV_CODE
		        INNER JOIN BCM100T M2 WITH(NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
		                                          AND M2.CUSTOM_CODE = A.IMPORTER
		       WHERE A.COMP_CODE        = @COMP_CODE
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		         AND A.DIV_CODE         = @DIV_CODE
			 </if>
		         AND A.NEGO_DATE    &gt;= @SALE_DATE_FR
		         AND A.NEGO_DATE    &lt;= @SALE_DATE_TO
		         AND A.NEGO_TYPE        = '1'
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		         AND A.IMPORTER         LIKE @CUSTOM_CODE + '%'
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		         AND A.MONEY_UNIT       = @MONEY_UNIT    --'왼쪽그리드의 화폐단위
			 </if>
		        UNION ALL
		        SELECT A.COMP_CODE
		             , A.DIV_CODE
		             , A.IMPORTER                                  AS CUSTOM_CODE
		             , A.NEGO_DATE                                 AS SALE_DATE
		             , A.MONEY_UNIT                                AS MONEY_UNIT
		             , M1.DIV_NAME                                 AS MY_NAME
		             , M1.REPRE_NAME                               AS MY_REPRE_NAME
		             , M1.TELEPHON                                 AS MY_TELEPHON
		             , M1.COMPANY_NUM                              AS MY_COMPANY_NUM
		             , M1.FAX_NUM                                  AS MY_FAX_NUM
		             , M1.COMP_CLASS                               AS MY_COMP_CLASS
		             , M1.COMP_TYPE                                AS MY_COMP_TYPE
		             , M1.ADDR                                     AS MY_ADDR
		             , M2.CUSTOM_NAME                              AS CUSTOM_NAME
		             , M2.TOP_NAME                                 AS CUSTOM_TOP_NAME
		             , M2.TELEPHON                                 AS CUSTOM_TELEPHON
		             , M2.COMPANY_NUM                              AS CUSTOM_COMPANY_NUM
		             , M2.FAX_NUM                                  AS CUSTOM_FAX_NUM
		             , M2.COMP_CLASS                               AS CUSTOM_COMP_CLASS
		             , M2.COMP_TYPE                                AS CUSTOM_COMP_TYPE
		             , ISNULL(M2.ADDR1, '') + ISNULL(M2.ADDR2, '') AS CUSTOM_ADDR
		        FROM       TEE100T A  WITH(NOLOCK)
		        INNER JOIN BOR120T M1 WITH(NOLOCK) ON M1.COMP_CODE   = A.COMP_CODE
		                                          AND M1.DIV_CODE    = A.DIV_CODE
		        INNER JOIN BCM100T M2 WITH(NOLOCK) ON M2.COMP_CODE   = A.COMP_CODE
		                                          AND M2.CUSTOM_CODE = A.IMPORTER
		       WHERE A.COMP_CODE        = @COMP_CODE
			 <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		         AND A.DIV_CODE         = @DIV_CODE
			 </if>
		         AND A.PAY_DATE     &gt;= @SALE_DATE_FR
		         AND A.PAY_DATE     &lt;= @SALE_DATE_TO
		         AND A.NEGO_TYPE        = '2'
			 <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		         AND A.IMPORTER         LIKE @CUSTOM_CODE + '%'
			 </if>
			 <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		         AND A.MONEY_UNIT       = @MONEY_UNIT    --'왼쪽그리드의 화폐단위
			 </if>
		</if>
		) A
		GROUP BY A.COMP_CODE
		       , A.DIV_CODE
		       , A.CUSTOM_CODE
		       , A.SALE_DATE
		       , A.MONEY_UNIT
		       , A.MY_NAME
		       , A.MY_REPRE_NAME
		       , A.MY_TELEPHON
		       , A.MY_COMPANY_NUM
		       , A.MY_FAX_NUM
		       , A.MY_COMP_CLASS
		       , A.MY_COMP_TYPE
		       , A.MY_ADDR
		       , A.CUSTOM_NAME
		       , A.CUSTOM_TOP_NAME
		       , A.CUSTOM_TELEPHON
		       , A.CUSTOM_COMPANY_NUM
		       , A.CUSTOM_FAX_NUM
		       , A.CUSTOM_COMP_CLASS
		       , A.CUSTOM_COMP_TYPE
		       , A.CUSTOM_ADDR
		ORDER BY A.CUSTOM_CODE, A.SALE_DATE
	</select>
	<select id="ssa430skrvServiceImpl.printList_BACKUP" parameterType="Map" resultType="rMap">
		/*ssa430skrv.Cssa430skrv, SetSsa430[fnSsa430Q2]*/
		DECLARE @BLAN_AMT NUMERIC(30,6)
		SET @BLAN_AMT = #{BASIS_AMT_O}
		SET NOCOUNT ON

			IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE ID=OBJECT_ID('tempdb..#TMP_SSA430'))
				DROP TABLE #TMP_SSA430

		    SELECT
		           SALE_CUSTOM_CODE
		         , LEFT(SALE_DATE, 7) AS SALE_MONTH
		         , SALE_DATE
		         , INOUT_TYPE_DETAIL
		         , ITEM_CODE
		         , ITEM_NAME
		         , SPEC
		         , SALE_UNIT
		         , TRANS_RATE
		         , SALE_Q
		         , CONVERT(NUMERIC(30,6), 0) AS CARRIED_OVER_AMT	--이월금액
		         , SALE_AMT_O
		         , TAX_TYPE
		         , TAX_AMT_O
		         , (SALE_AMT_O + TAX_AMT_O) AS SUM_SALE_AMT
		         , COLLECT_AMT
		         , COLLECT_TYPE
		         , NOTE_DUE_DATE
		         , UN_COLLECT_AMT
		         , CARD_TYPE
		         , GUBUN
		         , ROW_NUMBER() OVER(ORDER BY SALE_DATE, INOUT_TYPE_DETAIL) AS SEQ
		         , DVRY_Q
		         , SALE_P
		      INTO #TMP_SSA430
		      FROM (/*매출정보(SSA100T,SSA110T)에서 SEARCH*/
		            SELECT
		                   A.SALE_CUSTOM_CODE
		                 , unilite.fnGetUserdate(#{S_COMP_CODE}, A.SALE_DATE)                        AS SALE_DATE
		                 , C1.CODE_NAME                                                   AS INOUT_TYPE_DETAIL
		                 , B.ITEM_CODE                                                                     AS ITEM_CODE
		                 , uniLITE.fnItemNameComp(#{S_COMP_CODE}, #{S_USER_ID}, B.ITEM_CODE) AS ITEM_NAME
		                 , C.SPEC                    AS SPEC
		                 , B.SALE_UNIT               AS SALE_UNIT
		                 , B.TRANS_RATE              AS TRANS_RATE
		                 , ISNULL(B.SALE_Q,0)        AS SALE_Q
		                 , B.SALE_P
		                 , ISNULL(B.SALE_AMT_O,0)    AS SALE_AMT_O
		                 , B.TAX_TYPE                AS TAX_TYPE
		                 , ISNULL(B.TAX_AMT_O,0)     AS TAX_AMT_O
		                 , 0                         AS COLLECT_AMT
		                 , ''                        AS COLLECT_TYPE
		                 , ''                        AS NOTE_DUE_DATE
		                 , 0                         AS UN_COLLECT_AMT
		                 , (CASE WHEN A.BILL_TYPE = '40'
		                         THEN 'Y'
		                         ELSE 'N'
		                     END)                    AS CARD_TYPE
		                 , '1'                       AS GUBUN
		                 , ISNULL(E.LOSS_Q, 0) + ISNULL(E.ORDER_UNIT_Q, 0) AS DVRY_Q
		              FROM            SSA100T A  WITH (NOLOCK)
		                   INNER JOIN SSA110T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                                      AND B.DIV_CODE    = A.DIV_CODE
		                                                      AND B.BILL_NUM    = A.BILL_NUM
		                   INNER JOIN BCM100T D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
		                                                      AND D.CUSTOM_CODE = A.SALE_CUSTOM_CODE
		                   INNER JOIN BPR100T C  WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
		                                                      AND C.ITEM_CODE   = B.ITEM_CODE
		                   INNER JOIN BSA100T C1 WITH (NOLOCK) ON C1.COMP_CODE  = B.COMP_CODE
		                                                      AND C1.MAIN_CODE  = 'S007'
		                                                      AND C1.SUB_CODE   = B.INOUT_TYPE_DETAIL
		                   LEFT  JOIN BTR100T E  WITH (NOLOCK) ON E.COMP_CODE   = B.COMP_CODE
		                                                      AND E.DIV_CODE    = B.DIV_CODE
		                                                      AND E.INOUT_NUM   = B.INOUT_NUM
		                                                      AND E.INOUT_SEQ   = B.INOUT_SEQ
		             WHERE A.COMP_CODE           = #{S_COMP_CODE}
		        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		               AND A.DIV_CODE            = #{DIV_CODE}
		        </if>
		               AND A.SALE_DATE          &gt;= #{BILL_FR_DATE}
		               AND A.SALE_DATE          &lt;= #{BILL_TO_DATE}
		        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		               AND A.SALE_CUSTOM_CODE    = #{CUSTOM_CODE}
		        </if>
		        <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		               AND A.MONEY_UNIT          = #{MONEY_UNIT}    --'왼쪽그리드의 화폐단위
		        </if>
		        <if test="rdoSelect1 == &quot;T&quot;"> --'무역포함

		            UNION ALL

		            /* 무역 LOCAL매출정보(TEC120T)에서 SEARCH*/
		            SELECT
		                   A.APPLICANT                                                                     AS SALE_CUSTOM_CODE
		                 , unilite.fnGetUserdate(#{S_COMP_CODE}, A.ACCEPT_DATE)                      AS SALE_DATE
		                 , ''                                                                              AS INOUT_TYPE_DETAIL
		                 , B.ITEM_CODE               AS ITEM_CODE
		                 , uniLITE.fnItemNameComp(#{S_COMP_CODE}, #{S_USER_ID}, B.ITEM_CODE) AS ITEM_NAME
		                 , C.SPEC                    AS SPEC
		                 , B.UNIT                    AS SALE_UNIT
		                 , B.TRANS_RATE              AS TRANS_RATE
		                 , ISNULL(B.QTY,0)           AS SALE_Q
		                 , B.ACCEPT_AMT              AS SALE_P
		                 , ISNULL(B.ACCEPT_AMT,0)    AS SALE_AMT_O
		                 , ''                        AS TAX_TYPE
		                 , 0                         AS TAX_AMT_O
		                 , 0                         AS COLLECT_AMT
		                 , ''                        AS COLLECT_TYPE
		                 , ''                        AS NOTE_DUE_DATE
		                 , 0                         AS UN_COLLECT_AMT
		                 , 'N'                       AS CARD_TYPE
		                 , '1'                       AS GUBUN
		                 , ISNULL(E.LOSS_Q, 0) + ISNULL(E.ORDER_UNIT_Q, 0) AS DVRY_Q
		              FROM            TEC120T A  WITH (NOLOCK)
		                   INNER JOIN TEC130T B  WITH (NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
		                                                      AND B.DIV_CODE     = A.DIV_CODE
		                                                      AND B.ACCEPT_NO    = A.ACCEPT_NO
		                   INNER JOIN TEA100T M  WITH (NOLOCK) ON M.COMP_CODE    = B.COMP_CODE
		                                                      AND M.DIV_CODE     = B.OUT_DIV_CODE
		                                                      AND M.SO_SER_NO    = B.SO_SER_NO
		                   INNER JOIN BCM100T D  WITH (NOLOCK) ON D.COMP_CODE   = A.COMP_CODE
		                                                      AND D.CUSTOM_CODE = A.APPLICANT
		                   INNER JOIN BPR100T C  WITH (NOLOCK) ON C.COMP_CODE   = B.COMP_CODE
		                                                      AND C.ITEM_CODE   = B.ITEM_CODE
		                   LEFT  JOIN BTR100T E  WITH (NOLOCK) ON E.COMP_CODE   = B.COMP_CODE
		                                                      AND E.DIV_CODE    = B.DIV_CODE
		                                                      AND E.INOUT_NUM   = B.INOUT_NUM
		                                                      AND E.INOUT_SEQ   = B.INOUT_SEQ
		                   LEFT  JOIN BTR100T E  WITH (NOLOCK) ON E.COMP_CODE   = B.COMP_CODE
		                                                      AND E.DIV_CODE    = B.DIV_CODE
		                                                      AND E.INOUT_NUM   = B.INOUT_NUM
		                                                      AND E.INOUT_SEQ   = B.INOUT_SEQ
		             WHERE A.COMP_CODE     = #{S_COMP_CODE}
		        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		          		AND A.DIV_CODE      = #{DIV_CODE}
		        </if>
		               AND A.ACCEPT_DATE  &gt;= #{BILL_FR_DATE}
		               AND A.ACCEPT_DATE  &lt;= #{BILL_TO_DATE}
		        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		               AND A.APPLICANT    = #{CUSTOM_CODE}
		        </if>
		        <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		               AND A.AMT_UNIT          = #{MONEY_UNIT}    --'왼쪽그리드의 화폐단위
		        </if>

		            UNION ALL

		            /* 무역 매출정보(TED100T)에서 SEARCH*/
		            SELECT
		                   C.IMPORTER                                             AS SALE_CUSTOM_CODE
		                 , unilite.fnGetUserdate(#{S_COMP_CODE}, A.BL_DATE) AS SALE_DATE
		                 , ''                                                     AS INOUT_TYPE_DETAIL
		                 , B.ITEM_CODE               AS ITEM_CODE
		                 , uniLITE.fnItemNameComp(#{S_COMP_CODE}, #{S_USER_ID}, B.ITEM_CODE) AS ITEM_NAME
		                 , M1.SPEC                   AS SPEC
		                 , B.UNIT                    AS SALE_UNIT
		                 , G.TRANS_RATE              AS TRANS_RATE
		                 , ISNULL(B.QTY,0)           AS SALE_Q
		                 , B.PRICE                   AS SALE_P
		                 , ISNULL(B.BL_AMT,0)        AS SALE_AMT_O
		                 , ''                        AS TAX_TYPE
		                 , 0                         AS TAX_AMT_O
		                 , 0                         AS COLLECT_AMT
		                 , ''                        AS COLLECT_TYPE
		                 , ''                        AS NOTE_DUE_DATE
		                 , 0                         AS UN_COLLECT_AMT
		                 , 'N'                       AS CARD_TYPE
		                 , '1'                       AS GUBUN
		                 , ISNULL(E.LOSS_Q, 0) + ISNULL(E.ORDER_UNIT_Q, 0) AS DVRY_Q
		              FROM            TED100T A  WITH (NOLOCK)
		                   INNER JOIN TED110T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                                      AND B.DIV_CODE    = A.DIV_CODE
		                                                      AND B.BL_SER_NO   = A.BL_SER_NO
		                   INNER JOIN TEA100T C  WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                                      AND C.DIV_CODE    = A.DIV_CODE
		                                                      AND C.SO_SER_NO   = A.SO_SER_NO
		                   LEFT  JOIN TEA110T G  WITH (NOLOCK) ON G.COMP_CODE   = B.COMP_CODE
		                                                      AND G.DIV_CODE    = B.DIV_CODE
		                                                      AND G.SO_SER_NO   = B.SO_SER_NO
		                                                      AND G.SO_SER      = B.SO_SER
		                   INNER JOIN BCM100T D  WITH (NOLOCK) ON D.COMP_CODE   = C.COMP_CODE
		                                                      AND D.CUSTOM_CODE = C.IMPORTER
		                   INNER JOIN BPR100T M1 WITH (NOLOCK) ON M1.COMP_CODE  = B.COMP_CODE
		                                                      AND M1.ITEM_CODE  = B.ITEM_CODE
		                   LEFT  JOIN BTR100T E  WITH (NOLOCK) ON E.COMP_CODE   = B.COMP_CODE
		                                                      AND E.DIV_CODE    = B.DIV_CODE
		                                                      AND E.INOUT_NUM   = B.INOUT_NUM
		                                                      AND E.INOUT_SEQ   = B.INOUT_SEQ
		             WHERE A.COMP_CODE     = #{S_COMP_CODE}
		        <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		               AND A.DIV_CODE      = #{DIV_CODE}
		        </if>
		               AND A.BL_DATE      &gt;= #{BILL_FR_DATE}
		               AND A.BL_DATE      &lt;= #{BILL_TO_DATE}
		        <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		               AND C.IMPORTER      = #{CUSTOM_CODE}
		        </if>
		        <if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		               AND A.AMT_UNIT      = #{MONEY_UNIT}     --'왼쪽그리드의 화폐단위
		        </if>

		    </if>

		    ) X
		    ORDER BY SALE_CUSTOM_CODE, SALE_DATE, GUBUN;


			WITH ACCOUNT_BOOK
			AS (
				SELECT *
				FROM #TMP_SSA430
				)

			SELECT  A.SALE_CUSTOM_CODE, A.SALE_MONTH
					, A.SALE_DATE
					, A.INOUT_TYPE_DETAIL, A.ITEM_CODE, A.ITEM_NAME, A.SPEC, A.SALE_UNIT, A.TRANS_RATE, A.SALE_Q, A.SALE_AMT_O, A.TAX_TYPE, A.TAX_AMT_O, A.SUM_SALE_AMT, A.COLLECT_AMT
					, A.COLLECT_TYPE, A.NOTE_DUE_DATE
					, SUM(ISNULL(B.CARRIED_OVER_AMT,0)+ISNULL(B.SUM_SALE_AMT,0)-ISNULL(B.COLLECT_AMT,0)) AS UN_COLLECT_AMT
					, A.CARD_TYPE, A.GUBUN
					, A.SEQ
					, A.DVRY_Q, A.SALE_P
			FROM ACCOUNT_BOOK A
				 LEFT JOIN ACCOUNT_BOOK B ON A.SALE_CUSTOM_CODE=B.SALE_CUSTOM_CODE AND A.SEQ &gt;= B.SEQ
			GROUP BY A.SALE_CUSTOM_CODE, A.SALE_MONTH, A.SALE_DATE, A.INOUT_TYPE_DETAIL, A.ITEM_CODE, A.ITEM_NAME, A.SPEC, A.SALE_UNIT, A.TRANS_RATE, A.SALE_Q, A.SALE_AMT_O, A.TAX_TYPE, A.TAX_AMT_O, A.SUM_SALE_AMT, A.COLLECT_AMT
					, A.COLLECT_TYPE, A.NOTE_DUE_DATE
					, A.CARD_TYPE, A.GUBUN, A.SEQ, A.DVRY_Q, A.SALE_P
			ORDER BY A.SEQ

		SET NOCOUNT OFF
	</select>
</mapper>