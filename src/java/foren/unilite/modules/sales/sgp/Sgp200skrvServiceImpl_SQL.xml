<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sgp200skrvServiceImpl">
	
	<select id="sgp200skrvServiceImpl.selectGubun" parameterType="Map" resultType="rMap">
		/* sgp200skrv.Csgp200skrv[fnSgp200nq]Query01 (구분설정) */
		DECLARE @COMP_CODE NVARCHAR(08)
			  , @LANG_CODE NVARCHAR(02)
			  
		SET @COMP_CODE = #{S_COMP_CODE}
		SET @LANG_CODE = #{S_LANG_CODE}

		SELECT (SELECT RTRIM(CASE WHEN @LANG_CODE = 'ko' THEN CODE_NAME
								  WHEN @LANG_CODE = 'ja' THEN CODE_NAME_JP
								  WHEN @LANG_CODE = 'vi' THEN CODE_NAME_VI
								  WHEN @LANG_CODE = 'zh' THEN CODE_NAME_CN
								  WHEN @LANG_CODE = 'en' THEN CODE_NAME_EN
								  ELSE CODE_NAME
							  END) 
		          FROM BSA100T WITH(NOLOCK) 
		         WHERE MAIN_CODE = 'S030'
		           AND SUB_CODE  = '11'
		           AND COMP_CODE = @COMP_CODE)								AS GUBUN1
		     , (SELECT RTRIM(CASE WHEN @LANG_CODE = 'ko' THEN CODE_NAME
								  WHEN @LANG_CODE = 'ja' THEN CODE_NAME_JP
								  WHEN @LANG_CODE = 'vi' THEN CODE_NAME_VI
								  WHEN @LANG_CODE = 'zh' THEN CODE_NAME_CN
								  WHEN @LANG_CODE = 'en' THEN CODE_NAME_EN
								  ELSE CODE_NAME
							  END)
		          FROM BSA100T WITH(NOLOCK) 
		         WHERE MAIN_CODE = 'S030' 
		           AND SUB_CODE  = '12' 
		           AND COMP_CODE = @COMP_CODE)								AS GUBUN2
		     , (SELECT RTRIM(CASE WHEN @LANG_CODE = 'ko' THEN CODE_NAME
								  WHEN @LANG_CODE = 'ja' THEN CODE_NAME_JP
								  WHEN @LANG_CODE = 'vi' THEN CODE_NAME_VI
								  WHEN @LANG_CODE = 'zh' THEN CODE_NAME_CN
								  WHEN @LANG_CODE = 'en' THEN CODE_NAME_EN
								  ELSE CODE_NAME
							  END) 
		          FROM BSA100T WITH(NOLOCK)
		         WHERE MAIN_CODE = 'S030'
		           AND SUB_CODE  = '13' 
		           AND COMP_CODE = @COMP_CODE)								AS GUBUN3 
	</select>
	
	<select id="sgp200skrvServiceImpl.selectCalNo" parameterType="Map" resultType="rMap">
		SELECT TOP 11 CAL_NO, LEFT(CAL_NO, 4) AS SYEAR
		  FROM BCM420T WITH (NOLOCK)
		 WHERE CAL_NO &gt;= #{PLAN_DATE_FR}
		   AND CAL_TYPE   = '3'
		 ORDER BY CAL_NO
	</select>
	
	<select id="sgp200skrvServiceImpl.selectList" parameterType="Map" resultType="rMap">
	    /* 주간판매계획대 실적현황 조회 */
	    /* 계획 데이터 생성 */
		/* sgp200skrv.Csgp200skrv[fnSgp200nq]Query02 */
		SELECT A.CUSTOM_CODE, A.CUSTOM_NAME, A.ITEM_CODE, A.ITEM_NAME, A.SPEC 
		     , A.PLAN_TYPE1,                       A.ENT_MONEY_UNIT,                   A.MONEY_UNIT
		     , #{sGubun1}  GUBUN,                  '1'     BIT_CD,                     A.MONEYUNIT_FACTOR
		     , A.ITEM_ACCOUNT,                     B.SUM_PLANQTY,                      B.SUM_PLANAMT / A.MONEYUNIT_FACTOR AS SUM_PLANAMT
		     , MAX(A.PLAN_QTY0)        AS PLAN_QTY0,       MAX(A.PLAN_AMT0)        AS PLAN_AMT0
		     , MAX(A.PLAN_QTY1)        AS PLAN_QTY1,       MAX(A.PLAN_AMT1)        AS PLAN_AMT1
		     , MAX(A.PLAN_QTY2)        AS PLAN_QTY2,       MAX(A.PLAN_AMT2)        AS PLAN_AMT2
		     , MAX(A.PLAN_QTY3)        AS PLAN_QTY3,       MAX(A.PLAN_AMT3)        AS PLAN_AMT3
		     , MAX(A.PLAN_QTY4)        AS PLAN_QTY4,       MAX(A.PLAN_AMT4)        AS PLAN_AMT4
		     , MAX(A.PLAN_QTY5)        AS PLAN_QTY5,       MAX(A.PLAN_AMT5)        AS PLAN_AMT5
		     , MAX(A.PLAN_QTY6)        AS PLAN_QTY6,       MAX(A.PLAN_AMT6)        AS PLAN_AMT6
		     , MAX(A.PLAN_QTY7)        AS PLAN_QTY7,       MAX(A.PLAN_AMT7)        AS PLAN_AMT7
		     , MAX(A.PLAN_QTY8)        AS PLAN_QTY8,       MAX(A.PLAN_AMT8)        AS PLAN_AMT8
		     , MAX(A.PLAN_QTY9)        AS PLAN_QTY9,       MAX(A.PLAN_AMT9)        AS PLAN_AMT9
		     , MAX(A.PLAN_QTY10)       AS PLAN_QTY10,      MAX(A.PLAN_AMT10)       AS PLAN_AMT10
		  FROM (                                         -- 주간판매계획 내역
		        SELECT A.ITEM_CODE
		             , uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) ITEM_NAME
		             , M1.SPEC
		             , A.CUSTOM_CODE
		             , uniLITE.fnCustNameComp(A.COMP_CODE, #{S_USER_ID}, A.CUSTOM_CODE) CUSTOM_NAME
		             , A.WW_DD_TYPE
		             , A.PLAN_TYPE1
		             , A.MONEY_UNIT
		             --, A.ENT_MONEY_UNIT
		             , #{ENT_MONEY_UNIT}							AS ENT_MONEY_UNIT
		             , ISNULL(M3.REF_CODE1, 1.0)					AS MONEYUNIT_FACTOR
		             , M2.ITEM_ACCOUNT
		    --해당주차까지 Loop 돌면서 쿼리생성
			<foreach collection="calNos" item="month" index="index" >
		             , CASE WHEN A.PLAN_WEEK = #{sWeek${index}}
		                    THEN A.PLAN_QTY 
		                    ELSE 0 
		               END AS PLAN_QTY${index}
		             , CASE WHEN A.PLAN_WEEK = #{sWeek${index}}
		                    THEN A.PLAN_AMT / M3.REF_CODE1
		                    ELSE 0 
		               END AS PLAN_AMT${index}
			</foreach>
		          FROM SSP200T A   WITH (NOLOCK)
		                       INNER JOIN BPR100T M1  WITH (NOLOCK)   
		                               ON M1.ITEM_CODE    = A.ITEM_CODE  
		                              AND M1.COMP_CODE    = A.COMP_CODE  
		                       INNER JOIN BPR200T M2  WITH (NOLOCK)  
		                               ON M2.DIV_CODE     = A.DIV_CODE 
		                              AND M2.ITEM_CODE    = A.ITEM_CODE 
		                              AND M2.COMP_CODE    = A.COMP_CODE  
		                       LEFT  JOIN BSA100T M3  WITH (NOLOCK)   
		                               ON M3.MAIN_CODE    = 'B042'    
		                              AND M3.SUB_CODE     = #{ENT_MONEY_UNIT}
		                              AND M3.COMP_CODE    = A.COMP_CODE  
		         WHERE A.DIV_CODE   = #{DIV_CODE}
		           AND A.WW_DD_TYPE = N'10'
		           AND A.APPL_DATE  = ISNULL((SELECT MAX(APPL_DATE)
		                                        FROM SSP200T WITH (NOLOCK)
		                                       WHERE DIV_CODE    = A.DIV_CODE
		                                         AND ITEM_CODE   = A.ITEM_CODE
		                                         AND COMP_CODE   = A.COMP_CODE
		                                         AND WW_DD_TYPE  = A.WW_DD_TYPE
		                                         AND PLAN_TYPE1  = A.PLAN_TYPE1
		                                         AND CUSTOM_CODE = A.CUSTOM_CODE
		                                         --AND APPL_DATE   = A.APPL_DATE
		                                         AND BASE_DATE   = A.BASE_DATE
		                                         AND PLAN_WEEK   = A.PLAN_WEEK), '')
		           AND A.PLAN_WEEK  &gt;= #{PLAN_DATE_FR}
		           AND A.PLAN_WEEK  &lt;= #{PLAN_DATE_TO}
				<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		           AND A.MONEY_UNIT =  #{MONEY_UNIT}
				</if>
				<if test="@foren.Ognl@isNotEmpty(OUT_IN_TYPE)">
		           AND A.PLAN_TYPE1 =  #{OUT_IN_TYPE}
				</if>
		           AND A.COMP_CODE  =  #{S_COMP_CODE}
		       ) A 
		        -- 주간판매계획 합계
		         INNER JOIN (
		                     SELECT A.ITEM_CODE, A.CUSTOM_CODE
		                          , SUM(ISNULL(A.PLAN_QTY,0)) AS SUM_PLANQTY
		                          , SUM(ISNULL(A.PLAN_AMT,0)) AS SUM_PLANAMT
		                       FROM SSP200T A WITH(NOLOCK)
		                      WHERE DIV_CODE   =  #{DIV_CODE}
		                        AND WW_DD_TYPE =  N'10'
		                        AND PLAN_WEEK  &gt;= #{PLAN_DATE_FR}
		                        AND PLAN_WEEK  &lt;= #{PLAN_DATE_TO}
							<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
					            AND MONEY_UNIT =  #{MONEY_UNIT}
							</if>
							<if test="@foren.Ognl@isNotEmpty(OUT_IN_TYPE)">
					            AND PLAN_TYPE1 =  #{OUT_IN_TYPE}
							</if>
		                        AND A.COMP_CODE=  #{S_COMP_CODE}
		                        AND APPL_DATE  =  ISNULL((SELECT MAX(APPL_DATE)
		                                                    FROM SSP200T WITH (NOLOCK)
		                                                   WHERE DIV_CODE    = A.DIV_CODE
		                                                     AND ITEM_CODE   = A.ITEM_CODE
		                                                     AND COMP_CODE   = A.COMP_CODE
		                                                     AND WW_DD_TYPE  = A.WW_DD_TYPE
		                                                     AND PLAN_TYPE1  = A.PLAN_TYPE1
		                                                     AND CUSTOM_CODE = A.CUSTOM_CODE
		                                                     --AND APPL_DATE   = A.APPL_DATE
		                                                     AND BASE_DATE   = A.BASE_DATE
		                                                     AND PLAN_WEEK   = A.PLAN_WEEK), '')
		                      GROUP BY CUSTOM_CODE, ITEM_CODE
		                    ) B 
		                 ON A.ITEM_CODE = B.ITEM_CODE AND A.CUSTOM_CODE = B.CUSTOM_CODE
		 WHERE  1 = 1
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		   AND A.ITEM_ACCOUNT  =  #{ITEM_ACCOUNT}					--계정구분
		</if>
		
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_FR)">
		   AND A.ITEM_CODE     &gt;= #{ITEM_CODE_FR}				--품목코드
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_TO)">
		   AND A.ITEM_CODE     &lt;= #{ITEM_CODE_TO}				--품목코드
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_FR) and @foren.Ognl@isEmpty(ITEM_CODE_FR)">
		   AND A.ITEM_NAME     &gt;= #{ITEM_NAME_FR}				--품목명
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_TO) and @foren.Ognl@isEmpty(ITEM_CODE_TO)">
		   AND A.ITEM_NAME     &lt;= #{ITEM_NAME_TO}				--품목명
		</if>
		
		 GROUP BY A.ITEM_CODE,       A.ITEM_NAME,        A.SPEC,         A.PLAN_TYPE1,  A.MONEY_UNIT
		        , A.ENT_MONEY_UNIT , A.MONEYUNIT_FACTOR, A.ITEM_ACCOUNT, B.SUM_PLANQTY, B.SUM_PLANAMT
		        , A.CUSTOM_CODE,     A.CUSTOM_NAME
		        
		UNION ALL
		    
		-- 실적(매출) 데이터 생성
		SELECT A.CUSTOM_CODE, A.CUSTOM_NAME, A.ITEM_CODE, A.ITEM_NAME, A.SPEC 
		     , A.PLAN_TYPE1
		     --, A.ENT_MONEY_UNIT
		     , #{ENT_MONEY_UNIT}							AS ENT_MONEY_UNIT
		     , A.MONEY_UNIT
		     , #{sGubun2}  GUBUN,                  '2'     BIT_CD,                     A.MONEYUNIT_FACTOR
		     , A.ITEM_ACCOUNT,                     B.SUM_PLANQTY,                      B.SUM_PLANAMT / A.MONEYUNIT_FACTOR AS SUM_PLANAMT
		     , MAX(A.PLAN_QTY0)        AS PLAN_QTY0,       MAX(A.PLAN_AMT0)        AS PLAN_AMT0
		     , MAX(A.PLAN_QTY1)        AS PLAN_QTY1,       MAX(A.PLAN_AMT1)        AS PLAN_AMT1
		     , MAX(A.PLAN_QTY2)        AS PLAN_QTY2,       MAX(A.PLAN_AMT2)        AS PLAN_AMT2
		     , MAX(A.PLAN_QTY3)        AS PLAN_QTY3,       MAX(A.PLAN_AMT3)        AS PLAN_AMT3
		     , MAX(A.PLAN_QTY4)        AS PLAN_QTY4,       MAX(A.PLAN_AMT4)        AS PLAN_AMT4
		     , MAX(A.PLAN_QTY5)        AS PLAN_QTY5,       MAX(A.PLAN_AMT5)        AS PLAN_AMT5
		     , MAX(A.PLAN_QTY6)        AS PLAN_QTY6,       MAX(A.PLAN_AMT6)        AS PLAN_AMT6
		     , MAX(A.PLAN_QTY7)        AS PLAN_QTY7,       MAX(A.PLAN_AMT7)        AS PLAN_AMT7
		     , MAX(A.PLAN_QTY8)        AS PLAN_QTY8,       MAX(A.PLAN_AMT8)        AS PLAN_AMT8
		     , MAX(A.PLAN_QTY9)        AS PLAN_QTY9,       MAX(A.PLAN_AMT9)        AS PLAN_AMT9
		     , MAX(A.PLAN_QTY10)       AS PLAN_QTY10,      MAX(A.PLAN_AMT10)       AS PLAN_AMT10
		  FROM (
		        -- 주간판매실적 내역
		        SELECT A.ITEM_CODE
		             , uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) ITEM_NAME
		             , M1.SPEC
		             , A.CUSTOM_CODE
		             , uniLITE.fnCustNameComp(A.COMP_CODE, #{S_USER_ID}, A.CUSTOM_CODE) CUSTOM_NAME
		             , A.WW_DD_TYPE
		             , A.PLAN_TYPE1
		             , A.MONEY_UNIT
		             , A.ENT_MONEY_UNIT
		             , ISNULL(M3.REF_CODE1, 1.0) MONEYUNIT_FACTOR
		             , M2.ITEM_ACCOUNT
		    --해당주차까지 Loop 돌면서 쿼리생성
			<foreach collection="calNos" item="month" index="index" >
	                 , CASE WHEN A.ENT_MONEY_UNIT = '1'   --원단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN ISNULL(B.SALE_Q,0)
	                                            ELSE 0
	                                   END
	                        WHEN A.ENT_MONEY_UNIT = '2'   --천단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN ISNULL(B.SALE_Q,0) / 1000
	                                            ELSE 0 
	                                   END
	                        WHEN A.ENT_MONEY_UNIT = '3'   --백만단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}} 
	                                            THEN ISNULL(B.SALE_Q,0) / 1000000
	                                            ELSE 0
	                                   END
	                        WHEN A.ENT_MONEY_UNIT = '4'   --억단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}} 
	                                            THEN ISNULL(B.SALE_Q,0) / 100000000
	                                            ELSE 0 
	                                   END
	                    END  AS PLAN_QTY${index}
	                 , CASE WHEN ISNULL(M3.REF_CODE1, 1.0) = '1'   --원단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}} 
	                                            THEN ISNULL(B.SALE_AMT_O,0)
	                                            ELSE 0 
	                                   END
	                        WHEN ISNULL(M3.REF_CODE1, 1.0) = '2'   --천단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}} 
	                                            THEN ISNULL(B.SALE_AMT_O,0) / 1000
	                                            ELSE 0 
	                                   END
	                        WHEN ISNULL(M3.REF_CODE1, 1.0) = '3'   --백만단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}} 
	                                            THEN ISNULL(B.SALE_AMT_O,0) / 1000000 
	                                            ELSE 0 
	                                   END
	                        WHEN ISNULL(M3.REF_CODE1, 1.0) = '4'   --억단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}} 
	                                            THEN ISNULL(B.SALE_AMT_O,0) / 100000000 
	                                            ELSE 0 
	                                   END
	                    END  AS PLAN_AMT${index}
			</foreach>
		          FROM SSP200T A   WITH (NOLOCK)
		                       LEFT  JOIN (
		                                   SELECT B0.DIV_CODE
		                                        , B0.MONEY_UNIT
		                                        , B0.ITEM_CODE
		                                        , B0.SALE_CUSTOM_CODE
		                                        , B0.SALE_DATE
		                                        , SUM(B0.SALE_Q)         AS SALE_Q
		                                        , SUM(B0.SALE_AMT_O)     AS SALE_AMT_O
		                                        , SUM(B0.SALE_LOC_AMT_I) AS SALE_LOC_AMT_I
		                                        , SUM(B0.TAX_AMT_O)      AS TAX_AMT_O
		                                     FROM (
		                                           SELECT B1.DIV_CODE
		                                                , B1.MONEY_UNIT
		                                                , B1.SALE_CUSTOM_CODE
		                                                , B2.ITEM_CODE
		                                                , LEFT(B1.SALE_DATE, 4) + RIGHT('000' + CAST(DATEPART(WK, B1.SALE_DATE) + 1 AS CHAR(02)), 3) AS SALE_DATE
		                                                , B2.SALE_Q
		                                                , B2.SALE_AMT_O
		                                                , B2.SALE_LOC_AMT_I
		                                                , B2.TAX_AMT_O
		                                             FROM SSA100T B1 WITH(NOLOCK)
		                                                  INNER JOIN SSA110T B2 WITH(NOLOCK) 
		                                                          ON B1.DIV_CODE  = B2.DIV_CODE
		                                                         AND B1.BILL_NUM  = B2.BILL_NUM
		                                                         AND  B1.COMP_CODE= B2.COMP_CODE  
		                                            WHERE B1.COMP_CODE = #{S_COMP_CODE}
		                                          ) B0
		                                    GROUP BY B0.DIV_CODE, B0.MONEY_UNIT, B0.ITEM_CODE, B0.SALE_DATE, B0.SALE_CUSTOM_CODE
		                                  ) B 
		                               ON A.DIV_CODE   = B.DIV_CODE 
		                              AND A.CUSTOM_CODE= B.SALE_CUSTOM_CODE
		                              AND A.ITEM_CODE  = B.ITEM_CODE
		                              AND A.MONEY_UNIT= B.MONEY_UNIT
		                              AND A.PLAN_WEEK = B.SALE_DATE
		                       INNER JOIN BPR100T M1  WITH (NOLOCK)  
		                               ON  M1.ITEM_CODE  = A.ITEM_CODE  
		                              AND  M1.COMP_CODE  = A.COMP_CODE  
		                       INNER JOIN BPR200T M2  WITH (NOLOCK)
		                               ON  M2.DIV_CODE   = A.DIV_CODE
		                              AND  M2.ITEM_CODE  = A.ITEM_CODE 
		                              AND  M2.COMP_CODE  = A.COMP_CODE  
		                       LEFT  JOIN BSA100T M3  WITH (NOLOCK) 
		                               ON  M3.MAIN_CODE  = 'B042' 
		                              AND  M3.COMP_CODE  = A.COMP_CODE  
		                              AND  M3.SUB_CODE   = #{ENT_MONEY_UNIT}
		         WHERE A.DIV_CODE    = #{DIV_CODE}
		           AND A.WW_DD_TYPE  = N'10'
		           AND A.APPL_DATE   = ISNULL((SELECT MAX(APPL_DATE)
		                                           FROM SSP200T WITH (NOLOCK)
		                                          WHERE DIV_CODE    = A.DIV_CODE
		                                            AND ITEM_CODE   = A.ITEM_CODE
		                                            AND COMP_CODE   = A.COMP_CODE
		                                            AND WW_DD_TYPE  = A.WW_DD_TYPE
		                                            AND PLAN_TYPE1  = A.PLAN_TYPE1
		                                            AND CUSTOM_CODE = A.CUSTOM_CODE
		                                            --AND APPL_DATE   = A.APPL_DATE
		                                            AND BASE_DATE   = A.BASE_DATE
		                                            AND PLAN_WEEK   = A.PLAN_WEEK), '')
		           AND A.PLAN_WEEK   &gt;= #{PLAN_DATE_FR}
		           AND A.PLAN_WEEK   &lt;= #{PLAN_DATE_TO}
				<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		           AND A.MONEY_UNIT =  #{MONEY_UNIT}
				</if>
				<if test="@foren.Ognl@isNotEmpty(OUT_IN_TYPE)">
		           AND A.PLAN_TYPE1 =  #{OUT_IN_TYPE}
				</if>
		           AND A.COMP_CODE   =  #{S_COMP_CODE}   --COMP CODE ADD
		       ) A 
		        -- 주간판매실적 합계
		         INNER JOIN (
		                     SELECT A.ITEM_CODE, A.CUSTOM_CODE
		                          , CASE WHEN A.ENT_MONEY_UNIT = '1' THEN ISNULL(SUM(B.SALE_Q), 0)                     --원단위
		                                 WHEN A.ENT_MONEY_UNIT = '2' THEN ISNULL(SUM(B.SALE_Q), 0) / 1000              --천단위
		                                 WHEN A.ENT_MONEY_UNIT = '3' THEN ISNULL(SUM(B.SALE_Q), 0) / 1000000           --백만단위
		                                 WHEN A.ENT_MONEY_UNIT = '4' THEN ISNULL(SUM(B.SALE_Q), 0) / 100000000         --억단위
		                             END  AS SUM_PLANQTY
		                          , CASE WHEN A.ENT_MONEY_UNIT = '1' THEN ISNULL(SUM(B.SALE_AMT_O), 0)                 --원단위
		                                 WHEN A.ENT_MONEY_UNIT = '2' THEN ISNULL(SUM(B.SALE_AMT_O), 0) / 1000          --천단위
		                                 WHEN A.ENT_MONEY_UNIT = '3' THEN ISNULL(SUM(B.SALE_AMT_O), 0) / 1000000       --백만단위
		                                 WHEN A.ENT_MONEY_UNIT = '4' THEN ISNULL(SUM(B.SALE_AMT_O), 0) / 100000000     --억단위
		                             END  AS SUM_PLANAMT
		                       FROM SSP200T A WITH(NOLOCK)
		                                    LEFT  JOIN (
		                                                SELECT B1.DIV_CODE, B1.SALE_CUSTOM_CODE
		                                                     , B1. MONEY_UNIT
		                                                     , B2.ITEM_CODE
		                                                     , LEFT(B1.SALE_DATE, 4) + RIGHT('000' + CAST(DATEPART(WK, B1.SALE_DATE) + 1 AS CHAR(02)), 3) AS SALE_DATE
		                                                     , B2.SALE_Q
		                                                     , B2.SALE_AMT_O
		                                                     , B2.SALE_LOC_AMT_I
		                                                     , B2.TAX_AMT_O
		                                                  FROM SSA100T B1 WITH(NOLOCK)
		                                                               INNER JOIN SSA110T B2 WITH(NOLOCK) 
		                                                                       ON B1.DIV_CODE = B2.DIV_CODE
		                                                                      AND B1.BILL_NUM = B2.BILL_NUM
		                                                                      AND B1.COMP_CODE= B2.COMP_CODE  
		                                                 WHERE B1.COMP_CODE = #{S_COMP_CODE}
		                                               ) B
		                                            ON A.DIV_CODE  = B.DIV_CODE
		                                           AND A.ITEM_CODE = B.ITEM_CODE
		                                           AND A.CUSTOM_CODE= B.SALE_CUSTOM_CODE
		                                           AND A.MONEY_UNIT= B.MONEY_UNIT
		                                           AND A.PLAN_WEEK = B.SALE_DATE
		                      WHERE A.DIV_CODE   =  #{DIV_CODE}
		                        AND A.WW_DD_TYPE = N'10'
		                        AND A.PLAN_WEEK  &gt;= #{PLAN_DATE_FR}
		                        AND A.PLAN_WEEK  &lt;= #{PLAN_DATE_TO}
							<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
					            AND A.MONEY_UNIT =  #{MONEY_UNIT}
							</if>
							<if test="@foren.Ognl@isNotEmpty(OUT_IN_TYPE)">
					            AND A.PLAN_TYPE1 =  #{OUT_IN_TYPE}
							</if>
		                        AND A.COMP_CODE =  #{S_COMP_CODE}
		                        AND A.APPL_DATE  =  ISNULL((SELECT MAX(APPL_DATE)
		                                                      FROM SSP200T WITH (NOLOCK)
		                                                     WHERE DIV_CODE    = A.DIV_CODE
		                                                       AND ITEM_CODE   = A.ITEM_CODE
		                                                       AND COMP_CODE   = A.COMP_CODE
		                                                       AND WW_DD_TYPE  = A.WW_DD_TYPE
		                                                       AND PLAN_TYPE1  = A.PLAN_TYPE1
		                                                       AND CUSTOM_CODE = A.CUSTOM_CODE
		                                                       --AND APPL_DATE   = A.APPL_DATE
		                                                       AND BASE_DATE   = A.BASE_DATE
		                                                       AND PLAN_WEEK   = A.PLAN_WEEK), '')
		                      GROUP BY A.CUSTOM_CODE, A.ITEM_CODE, A.ENT_MONEY_UNIT
		                    ) B
		                 ON A.ITEM_CODE     = B.ITEM_CODE
		                AND A.CUSTOM_CODE     = B.CUSTOM_CODE
		 WHERE 1=1
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		   AND A.ITEM_ACCOUNT  =  #{ITEM_ACCOUNT}					--계정구분
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_FR)">
		   AND A.ITEM_CODE     &gt;= #{ITEM_CODE_FR}				--품목코드
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_TO)">
		   AND A.ITEM_CODE     &lt;= #{ITEM_CODE_TO}				--품목코드
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_FR) and @foren.Ognl@isEmpty(ITEM_CODE_FR)">
		   AND A.ITEM_NAME     &gt;= #{ITEM_NAME_FR}				--품목명
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_TO) and @foren.Ognl@isEmpty(ITEM_CODE_TO)">
		   AND A.ITEM_NAME     &lt;= #{ITEM_NAME_TO}				--품목명
		</if>
		
		 GROUP BY A.ITEM_CODE,       A.ITEM_NAME,        A.SPEC,         A.PLAN_TYPE1,  A.MONEY_UNIT
		        , A.ENT_MONEY_UNIT,  A.MONEYUNIT_FACTOR, A.ITEM_ACCOUNT, B.SUM_PLANQTY, B.SUM_PLANAMT
		        , A.CUSTOM_CODE,     A.CUSTOM_NAME

		UNION ALL
		
		-- 달성률(%) 데이터 생성
		SELECT A.CUSTOM_CODE, A.CUSTOM_NAME, A.ITEM_CODE, A.ITEM_NAME, A.SPEC 
		     , A.PLAN_TYPE1
		     --, A.ENT_MONEY_UNIT
		     , #{ENT_MONEY_UNIT}							AS ENT_MONEY_UNIT
		     , A.MONEY_UNIT
		     , #{sGubun3}  GUBUN,                  '3'     BIT_CD,                     A.MONEYUNIT_FACTOR
		     , A.ITEM_ACCOUNT,                     B.SUM_PLANQTY,                      B.SUM_PLANAMT / A.MONEYUNIT_FACTOR AS SUM_PLANAMT
		     , MAX(A.PLAN_QTY0)        AS PLAN_QTY0,       MAX(A.PLAN_AMT0)        AS PLAN_AMT0
		     , MAX(A.PLAN_QTY1)        AS PLAN_QTY1,       MAX(A.PLAN_AMT1)        AS PLAN_AMT1
		     , MAX(A.PLAN_QTY2)        AS PLAN_QTY2,       MAX(A.PLAN_AMT2)        AS PLAN_AMT2
		     , MAX(A.PLAN_QTY3)        AS PLAN_QTY3,       MAX(A.PLAN_AMT3)        AS PLAN_AMT3
		     , MAX(A.PLAN_QTY4)        AS PLAN_QTY4,       MAX(A.PLAN_AMT4)        AS PLAN_AMT4
		     , MAX(A.PLAN_QTY5)        AS PLAN_QTY5,       MAX(A.PLAN_AMT5)        AS PLAN_AMT5
		     , MAX(A.PLAN_QTY6)        AS PLAN_QTY6,       MAX(A.PLAN_AMT6)        AS PLAN_AMT6
		     , MAX(A.PLAN_QTY7)        AS PLAN_QTY7,       MAX(A.PLAN_AMT7)        AS PLAN_AMT7
		     , MAX(A.PLAN_QTY8)        AS PLAN_QTY8,       MAX(A.PLAN_AMT8)        AS PLAN_AMT8
		     , MAX(A.PLAN_QTY9)        AS PLAN_QTY9,       MAX(A.PLAN_AMT9)        AS PLAN_AMT9
		     , MAX(A.PLAN_QTY10)       AS PLAN_QTY10,      MAX(A.PLAN_AMT10)       AS PLAN_AMT10
		  FROM (
		        -- 주간달성률 내역
		        SELECT A.ITEM_CODE
		             , uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) ITEM_NAME
		             , M1.SPEC
		             , A.CUSTOM_CODE
		             , uniLITE.fnCustNameComp(A.COMP_CODE, #{S_USER_ID}, A.CUSTOM_CODE) CUSTOM_NAME
		             , A.WW_DD_TYPE
		             , A.PLAN_TYPE1
		             , A.MONEY_UNIT
		             , A.ENT_MONEY_UNIT
		             , ISNULL(M3.REF_CODE1, 1.0) MONEYUNIT_FACTOR
		             , M2.ITEM_ACCOUNT
		    --해당주차까지 Loop 돌면서 쿼리생성
			<foreach collection="calNos" item="month" index="index" >
	                 , CASE WHEN A.ENT_MONEY_UNIT = '1'   --원단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN CASE WHEN ISNULL(A.PLAN_QTY,0) = 0 
	                                                           THEN 0 
	                                                           ELSE (ISNULL(B.SALE_Q,0) / ISNULL(A.PLAN_QTY,0)) * 100 
	                                                  END 
	                                            ELSE 0 
	                                   END
	                        WHEN A.ENT_MONEY_UNIT = '2'   --천단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN CASE WHEN ISNULL(A.PLAN_QTY,0) = 0 
	                                                           THEN 0 
	                                                           ELSE ((ISNULL(B.SALE_Q,0) / 1000) / ISNULL(A.PLAN_QTY,0)) * 100
	                                                  END 
	                                            ELSE 0
	                                   END
	                        WHEN A.ENT_MONEY_UNIT = '3'   --백만단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN CASE WHEN ISNULL(A.PLAN_QTY,0) = 0 
	                                                           THEN 0 
	                                                           ELSE ((ISNULL(B.SALE_Q,0) / 1000000) / ISNULL(A.PLAN_QTY,0)) * 100
	                                                  END  
	                                            ELSE 0
	                                   END
	                        WHEN A.ENT_MONEY_UNIT = '4'   --억단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN CASE WHEN ISNULL(A.PLAN_QTY,0) = 0
	                                                           THEN 0 
	                                                           ELSE ((ISNULL(B.SALE_Q,0) / 100000000) / ISNULL(A.PLAN_QTY,0)) * 100 
	                                                  END  
	                                            ELSE 0
	                                   END
	                    END  AS PLAN_QTY${index}
	                 , CASE WHEN ISNULL(M3.REF_CODE1, 1.0) = '1'   --원단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN CASE WHEN ISNULL(A.PLAN_AMT,0) = 0 
	                                                           THEN 0 
	                                                           ELSE (ISNULL(B.SALE_AMT_O,0) / ISNULL(A.PLAN_AMT,0)) * 100
	                                                  END
	                                            ELSE 0 
	                                   END
	                        WHEN ISNULL(M3.REF_CODE1, 1.0) = '2'   --천단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN CASE WHEN ISNULL(A.PLAN_AMT,0) = 0 
	                                                           THEN 0 
	                                                           ELSE ((ISNULL(B.SALE_AMT_O,0) / 1000) / ISNULL(A.PLAN_AMT,0)) * 100
	                                                  END 
	                                            ELSE 0
	                                   END
	                        WHEN ISNULL(M3.REF_CODE1, 1.0) = '3'   --백만단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN CASE WHEN ISNULL(A.PLAN_AMT,0) = 0 
	                                                           THEN 0 
	                                                           ELSE ((ISNULL(B.SALE_AMT_O,0) / 1000000) / ISNULL(A.PLAN_AMT,0)) * 100 
	                                                  END 
	                                            ELSE 0 
	                                   END
	                        WHEN ISNULL(M3.REF_CODE1, 1.0) = '4'   --억단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN CASE WHEN ISNULL(A.PLAN_AMT,0) = 0 
	                                                           THEN 0 
	                                                           ELSE ((ISNULL(B.SALE_AMT_O,0) / 100000000) / ISNULL(A.PLAN_AMT,0)) * 100 
	                                                  END
	                                            ELSE 0
	                                   END
	                    END  AS PLAN_AMT${index}
			</foreach>
		          FROM SSP200T A   WITH (NOLOCK)
		                       LEFT  JOIN (
		                                   SELECT B0.DIV_CODE, B0.SALE_CUSTOM_CODE
		                                        , B0.MONEY_UNIT
		                                        , B0.ITEM_CODE
		                                        , B0.SALE_DATE
		                                        , SUM(B0.SALE_Q)         AS SALE_Q
		                                        , SUM(B0.SALE_AMT_O)     AS SALE_AMT_O
		                                        , SUM(B0.SALE_LOC_AMT_I) AS SALE_LOC_AMT_I
		                                        , SUM(B0.TAX_AMT_O)      AS TAX_AMT_O
		                                     FROM (
		                                           SELECT B1.DIV_CODE, B1.SALE_CUSTOM_CODE
		                                                , B1.MONEY_UNIT
		                                                , B2.ITEM_CODE
		                                                , LEFT(B1.SALE_DATE, 4) + RIGHT('000' + CAST(DATEPART(WK, B1.SALE_DATE) + 1 AS CHAR(02)), 3) AS SALE_DATE
		                                                , B2.SALE_Q
		                                                , B2.SALE_AMT_O
		                                                , B2.SALE_LOC_AMT_I
		                                                , B2.TAX_AMT_O
		                                             FROM SSA100T B1 WITH(NOLOCK)
		                                                          INNER JOIN SSA110T B2 WITH(NOLOCK) 
		                                                                  ON B1.DIV_CODE = B2.DIV_CODE
		                                                                 AND B1.BILL_NUM = B2.BILL_NUM
		                                                                 AND B1.COMP_CODE= B2.COMP_CODE  
		                                            WHERE B1.COMP_CODE = #{S_COMP_CODE}
		                                          ) B0
		                                    GROUP BY B0.DIV_CODE, B0.SALE_CUSTOM_CODE, B0.MONEY_UNIT, B0.ITEM_CODE, B0.SALE_DATE
		                                  ) B 
		                               ON A.DIV_CODE  = B.DIV_CODE
		                              AND A.CUSTOM_CODE = B.SALE_CUSTOM_CODE
		                              AND A.ITEM_CODE = B.ITEM_CODE
		                              AND A.MONEY_UNIT= B.MONEY_UNIT
		                              AND A.PLAN_WEEK = B.SALE_DATE
		                       INNER JOIN BPR100T M1  WITH (NOLOCK)
		                               ON M1.ITEM_CODE = A.ITEM_CODE  
		                              AND M1.COMP_CODE = A.COMP_CODE  
		                       INNER JOIN BPR200T M2  WITH (NOLOCK)
		                               ON M2.DIV_CODE  = A.DIV_CODE
		                              AND M2.COMP_CODE = A.COMP_CODE  
		                              AND M2.ITEM_CODE = A.ITEM_CODE 
		                       LEFT  JOIN BSA100T M3  WITH (NOLOCK) 
		                               ON M3.MAIN_CODE = 'B042'  
		                              AND M3.SUB_CODE  = #{ENT_MONEY_UNIT}
		                              AND M3.COMP_CODE = A.COMP_CODE  
		         WHERE A.DIV_CODE   = #{DIV_CODE}
		           AND A.WW_DD_TYPE = N'10'
		           AND A.APPL_DATE  = ISNULL((SELECT MAX(APPL_DATE)
		                                        FROM SSP200T WITH (NOLOCK)
		                                       WHERE DIV_CODE    = A.DIV_CODE
		                                         AND ITEM_CODE   = A.ITEM_CODE
		                                         AND COMP_CODE   = A.COMP_CODE
		                                         AND WW_DD_TYPE  = A.WW_DD_TYPE
		                                         AND PLAN_TYPE1  = A.PLAN_TYPE1
		                                         AND CUSTOM_CODE = A.CUSTOM_CODE
		                                         --AND APPL_DATE   = A.APPL_DATE
		                                         AND BASE_DATE   = A.BASE_DATE
		                                         AND PLAN_WEEK   = A.PLAN_WEEK), '')
		           AND A.COMP_CODE  =  #{S_COMP_CODE}   --COMP CODE ADD
		           AND A.PLAN_WEEK  &gt;= #{PLAN_DATE_FR}
		           AND A.PLAN_WEEK  &lt;= #{PLAN_DATE_TO}
				<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
		           AND A.MONEY_UNIT =  #{MONEY_UNIT}
				</if>
				<if test="@foren.Ognl@isNotEmpty(OUT_IN_TYPE)">
		           AND A.PLAN_TYPE1 =  #{OUT_IN_TYPE}
				</if>
		       ) A 
		        -- 주간달성률 합계
		         INNER JOIN (
		                     SELECT A.ITEM_CODE, A.CUSTOM_CODE
		                          , CASE WHEN A.ENT_MONEY_UNIT = '1'   --원단위
		                                      THEN CASE WHEN ISNULL(SUM(A.PLAN_QTY),0) = 0 
		                                                     THEN 0 
		                                                     ELSE (ISNULL(SUM(B.SALE_Q), 0) / ISNULL(SUM(A.PLAN_QTY),0)) * 100 
		                                            END
		                                 WHEN A.ENT_MONEY_UNIT = '2'   --천단위
		                                      THEN CASE WHEN ISNULL(SUM(A.PLAN_QTY),0) = 0 
		                                                     THEN 0 
		                                                     ELSE ((ISNULL(SUM(B.SALE_Q), 0) / 1000) / ISNULL(SUM(A.PLAN_QTY),0)) * 100
		                                            END
		                                 WHEN A.ENT_MONEY_UNIT = '3'   --백만단위
		                                      THEN CASE WHEN ISNULL(SUM(A.PLAN_QTY),0) = 0 
		                                                     THEN 0 
		                                                     ELSE ((ISNULL(SUM(B.SALE_Q), 0) / 1000000) / ISNULL(SUM(A.PLAN_QTY),0)) * 100 
		                                            END
		                                 WHEN A.ENT_MONEY_UNIT = '4'   --억단위
		                                      THEN CASE WHEN ISNULL(SUM(A.PLAN_QTY),0) = 0
		                                                     THEN 0 
		                                                     ELSE ((ISNULL(SUM(B.SALE_Q), 0) / 100000000) / ISNULL(SUM(A.PLAN_QTY),0)) * 100
		                                            END
		                             END  AS SUM_PLANQTY
		                          , CASE WHEN A.ENT_MONEY_UNIT = '1'   --원단위
		                                      THEN CASE WHEN ISNULL(SUM(A.PLAN_AMT),0) = 0
		                                                     THEN 0
		                                                     ELSE (ISNULL(SUM(B.SALE_AMT_O), 0) / ISNULL(SUM(A.PLAN_AMT),0)) * 100
		                                            END
		                                 WHEN A.ENT_MONEY_UNIT = '2'   --천단위
		                                      THEN CASE WHEN ISNULL(SUM(A.PLAN_AMT),0) = 0 
		                                                     THEN 0
		                                                     ELSE ((ISNULL(SUM(B.SALE_AMT_O), 0) / 1000) / ISNULL(SUM(A.PLAN_AMT),0)) * 100
		                                            END
		                                 WHEN A.ENT_MONEY_UNIT = '3'   --백만단위
		                                      THEN CASE WHEN ISNULL(SUM(A.PLAN_AMT),0) = 0
		                                                     THEN 0
		                                                     ELSE ((ISNULL(SUM(B.SALE_AMT_O), 0) / 1000000) / ISNULL(SUM(A.PLAN_AMT),0)) * 100
		                                            END
		                                 WHEN A.ENT_MONEY_UNIT = '4'   --억단위
		                                      THEN CASE WHEN ISNULL(SUM(A.PLAN_AMT),0) = 0 
		                                                     THEN 0 
		                                                     ELSE ((ISNULL(SUM(B.SALE_AMT_O), 0) / 100000000) / ISNULL(SUM(A.PLAN_AMT),0)) * 100
		                                            END
		                             END  AS SUM_PLANAMT
		                       FROM SSP200T A WITH(NOLOCK)
		                                    LEFT  JOIN (
		                                                SELECT B1.DIV_CODE, B1.SALE_CUSTOM_CODE
		                                                     , B1. MONEY_UNIT
		                                                     , B2.ITEM_CODE
		                                                     , LEFT(B1.SALE_DATE, 4) + RIGHT('000' + CAST(DATEPART(WK, B1.SALE_DATE) + 1 AS CHAR(02)), 3) AS SALE_DATE
		                                                     , SUM(B2.SALE_Q) AS SALE_Q
		                                                     , SUM(B2.SALE_AMT_O) AS SALE_AMT_O
		                                                     , SUM(B2.SALE_LOC_AMT_I) AS SALE_LOC_AMT_I
		                                                     , SUM(B2.TAX_AMT_O) AS TAX_AMT_O
		                                                  FROM SSA100T B1 WITH(NOLOCK)
		                                                               INNER JOIN SSA110T B2 WITH(NOLOCK) 
		                                                                       ON B1.DIV_CODE = B2.DIV_CODE
		                                                                      AND B1.BILL_NUM = B2.BILL_NUM
		                                                                      AND B1.COMP_CODE= B2.COMP_CODE  
		                                                 WHERE B1.COMP_CODE = #{S_COMP_CODE}
		                                                 GROUP BY B1.DIV_CODE, B1. MONEY_UNIT, B2.ITEM_CODE, B1.SALE_CUSTOM_CODE
		                                                        , LEFT(B1.SALE_DATE, 4) + RIGHT('000' + CAST(DATEPART(WK, B1.SALE_DATE) + 1 AS CHAR(02)), 3)
		                                               ) B
		                                            ON A.DIV_CODE      = B.DIV_CODE
		                                           AND A.CUSTOM_CODE     = B.SALE_CUSTOM_CODE
		                                           AND A.ITEM_CODE     = B.ITEM_CODE
		                                           AND A.MONEY_UNIT    = B.MONEY_UNIT  AND A.PLAN_WEEK = B.SALE_DATE
		                      WHERE A.DIV_CODE       =  #{DIV_CODE}
		                        AND A.WW_DD_TYPE     = N'10'
		                        AND A.PLAN_WEEK  &gt;= #{PLAN_DATE_FR}
		                        AND A.PLAN_WEEK  &lt;= #{PLAN_DATE_TO}
							<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
					            AND A.MONEY_UNIT =  #{MONEY_UNIT}
							</if>
							<if test="@foren.Ognl@isNotEmpty(OUT_IN_TYPE)">
					            AND A.PLAN_TYPE1 =  #{OUT_IN_TYPE}
							</if>
		                        AND A.COMP_CODE     =  #{S_COMP_CODE}
		                        AND A.APPL_DATE     =  ISNULL((SELECT MAX(APPL_DATE)
		                                                         FROM SSP200T WITH (NOLOCK)
		                                                        WHERE DIV_CODE    = A.DIV_CODE
		                                                          AND ITEM_CODE   = A.ITEM_CODE
		                                                          AND COMP_CODE   = A.COMP_CODE
		                                                          AND WW_DD_TYPE  = A.WW_DD_TYPE
		                                                          AND PLAN_TYPE1  = A.PLAN_TYPE1
		                                                          AND CUSTOM_CODE = A.CUSTOM_CODE
		                                                          --AND APPL_DATE   = A.APPL_DATE
		                                                          AND BASE_DATE   = A.BASE_DATE
		                                                          AND PLAN_WEEK   = A.PLAN_WEEK), '')
		                      GROUP BY A.CUSTOM_CODE, A.ITEM_CODE, A.ENT_MONEY_UNIT
		                    ) B
		                 ON A.ITEM_CODE     = B.ITEM_CODE
		                AND A.CUSTOM_CODE     = B.CUSTOM_CODE
		 WHERE  1=1
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		   AND A.ITEM_ACCOUNT  =  #{ITEM_ACCOUNT}					--계정구분
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_FR)">
		   AND A.ITEM_CODE     &gt;= #{ITEM_CODE_FR}				--품목코드
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_TO)">
		   AND A.ITEM_CODE     &lt;= #{ITEM_CODE_TO}				--품목코드
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_FR) and @foren.Ognl@isEmpty(ITEM_CODE_FR)">
		   AND A.ITEM_NAME     &gt;= #{ITEM_NAME_FR}				--품목명
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_TO) and @foren.Ognl@isEmpty(ITEM_CODE_TO)">
		   AND A.ITEM_NAME     &lt;= #{ITEM_NAME_TO}				--품목명
		</if>
		
		 GROUP BY A.ITEM_CODE,      A.ITEM_NAME,        A.SPEC,         A.PLAN_TYPE1,  A.MONEY_UNIT
		        , A.ENT_MONEY_UNIT, A.MONEYUNIT_FACTOR, A.ITEM_ACCOUNT, B.SUM_PLANQTY, B.SUM_PLANAMT
		        , A.CUSTOM_CODE,    A.CUSTOM_NAME
		 --ORDER BY A.CUSTOM_CODE, A.ITEM_CODE, BIT_CD
		 
		 
		 
		 
		 
		UNION ALL 
		 
		/* 주간판매계획대 실적현황 합계생성 */
		/* 계획합계 데이터 생성 */
		/* sgp200skrv.Csgp200skrv[fnSgp200nq]Query03 */
		SELECT '합    계' AS CUSTOM_CODE,              ''  AS CUSTOM_NAME
		     , ' ' AS ITEM_CODE,                   ' '  AS ITEM_NAME,                  ' ' AS SPEC 
		     , ' ' AS PLAN_TYPE1,                  ' ' AS ENT_MONEY_UNIT,              ' ' AS MONEY_UNIT
		     ,  #{sGubun1}  GUBUN,                 '1'     BIT_CD,                     ' ' AS MONEYUNIT_FACTOR
		     , ' ' AS ITEM_ACCOUNT,                B.SUM_PLANQTY,                      B.SUM_PLANAMT / A.MONEYUNIT_FACTOR AS SUM_PLANAMT
		     , SUM(A.PLAN_QTY0)        AS PLAN_QTY0,       SUM(A.PLAN_AMT0)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT0
		     , SUM(A.PLAN_QTY1)        AS PLAN_QTY1,       SUM(A.PLAN_AMT1)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT1
		     , SUM(A.PLAN_QTY2)        AS PLAN_QTY2,       SUM(A.PLAN_AMT2)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT2
		     , SUM(A.PLAN_QTY3)        AS PLAN_QTY3,       SUM(A.PLAN_AMT3)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT3
		     , SUM(A.PLAN_QTY4)        AS PLAN_QTY4,       SUM(A.PLAN_AMT4)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT4
		     , SUM(A.PLAN_QTY5)        AS PLAN_QTY5,       SUM(A.PLAN_AMT5)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT5
		     , SUM(A.PLAN_QTY6)        AS PLAN_QTY6,       SUM(A.PLAN_AMT6)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT6
		     , SUM(A.PLAN_QTY7)        AS PLAN_QTY7,       SUM(A.PLAN_AMT7)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT7
		     , SUM(A.PLAN_QTY8)        AS PLAN_QTY8,       SUM(A.PLAN_AMT8)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT8
		     , SUM(A.PLAN_QTY9)        AS PLAN_QTY9,       SUM(A.PLAN_AMT9)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT9
		     , SUM(A.PLAN_QTY10)       AS PLAN_QTY10,      SUM(A.PLAN_AMT10) / A.MONEYUNIT_FACTOR       AS PLAN_AMT10
		  FROM (
		        -- 주간판매계획 내역
		        SELECT A.ITEM_CODE
		             , uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) ITEM_NAME
		             , M1.SPEC
		             , A.PLAN_TYPE1
		             , A.MONEY_UNIT
		             , A.ENT_MONEY_UNIT
		             , ISNULL(M3.REF_CODE1, 1.0) MONEYUNIT_FACTOR
		             , M2.ITEM_ACCOUNT
		        --해당주차까지 Loop 돌면서 쿼리생성
			<foreach collection="calNos" item="month" index="index" >
		             , CASE WHEN A.PLAN_WEEK = #{sWeek${index}}
		                         THEN A.PLAN_QTY 
		                         ELSE 0 
		                END AS PLAN_QTY${index}
		             , CASE WHEN A.PLAN_WEEK = #{sWeek${index}}
		                         THEN A.PLAN_AMT 
		                         ELSE 0 
		                END AS PLAN_AMT${index}
			</foreach>
		          FROM SSP200T A   WITH (NOLOCK)
		                       INNER JOIN BPR100T M1  WITH (NOLOCK)
		                               ON M1.ITEM_CODE = A.ITEM_CODE  
		                              AND M1.COMP_CODE = A.COMP_CODE 
		                       INNER JOIN BPR200T M2  WITH (NOLOCK) 
		                               ON M2.DIV_CODE  = A.DIV_CODE
		                              AND M2.ITEM_CODE = A.ITEM_CODE 
		                              AND M2.COMP_CODE = A.COMP_CODE 
		                       LEFT  JOIN BSA100T M3  WITH (NOLOCK)
		                               ON M3.MAIN_CODE = 'B042'
		                              AND M3.SUB_CODE  = #{ENT_MONEY_UNIT}
		                              AND M3.COMP_CODE = A.COMP_CODE 
		         WHERE A.DIV_CODE      = #{DIV_CODE}
		           AND A.WW_DD_TYPE    = N'10'
		           AND A.APPL_DATE     = ISNULL((SELECT MAX(APPL_DATE)
		                                           FROM SSP200T WITH (NOLOCK)
		                                          WHERE DIV_CODE    = A.DIV_CODE
		                                            AND ITEM_CODE   = A.ITEM_CODE
		                                            AND COMP_CODE   = A.COMP_CODE
		                                            AND WW_DD_TYPE  = A.WW_DD_TYPE
		                                            AND PLAN_TYPE1  = A.PLAN_TYPE1
		                                            AND CUSTOM_CODE = A.CUSTOM_CODE
		                                            --AND APPL_DATE   = A.APPL_DATE
		                                            AND BASE_DATE   = A.BASE_DATE
		                                            AND PLAN_WEEK   = A.PLAN_WEEK), '')
				    AND A.PLAN_WEEK  &gt;= #{PLAN_DATE_FR}
				    AND A.PLAN_WEEK  &lt;= #{PLAN_DATE_TO}
				<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
				    AND A.MONEY_UNIT =  #{MONEY_UNIT}
				</if>
				<if test="@foren.Ognl@isNotEmpty(OUT_IN_TYPE)">
				    AND A.PLAN_TYPE1 =  #{OUT_IN_TYPE}
				</if>
				    AND A.COMP_CODE  =  #{S_COMP_CODE}
		    
				<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
				   AND M2.ITEM_ACCOUNT  =  #{ITEM_ACCOUNT}					--계정구분
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_FR)">
				   AND A.ITEM_CODE     &gt;= #{ITEM_CODE_FR}				--품목코드
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_TO)">
				   AND A.ITEM_CODE     &lt;= #{ITEM_CODE_TO}				--품목코드
				</if>
				
				<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_FR) and @foren.Ognl@isEmpty(ITEM_CODE_FR)">
				   AND M1.ITEM_NAME     &gt;= #{ITEM_NAME_FR}				--품목명
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_TO) and @foren.Ognl@isEmpty(ITEM_CODE_TO)">
				   AND M1.ITEM_NAME     &lt;= #{ITEM_NAME_TO}				--품목명
				</if>
		       ) A 
		        -- 주간판매계획 합계
		         INNER JOIN (
		                     SELECT SUM(ISNULL(A.PLAN_QTY,0)) AS SUM_PLANQTY
		                          , SUM(ISNULL(A.PLAN_AMT,0)) AS SUM_PLANAMT
		                       FROM SSP200T A WITH(NOLOCK)
		                                    INNER JOIN BPR200T M1  WITH (NOLOCK) 
		                                            ON M1.DIV_CODE  = A.DIV_CODE
		                                           AND M1.ITEM_CODE = A.ITEM_CODE 
		                                           AND M1.COMP_CODE = A.COMP_CODE 
		                      WHERE A.DIV_CODE      =  #{DIV_CODE}
		                        AND A.WW_DD_TYPE    = N'10'
		                        AND A.PLAN_WEEK     &gt;= #{PLAN_DATE_FR}
		                        AND A.PLAN_WEEK     &lt;= #{PLAN_DATE_TO}
		                        AND A.MONEY_UNIT    =  #{MONEY_UNIT}
		                        AND A.PLAN_TYPE1    =  #{OUT_IN_TYPE}
		                        AND A.APPL_DATE     =  ISNULL((SELECT MAX(APPL_DATE)
		                                                         FROM SSP200T WITH (NOLOCK)
		                                                        WHERE DIV_CODE    = A.DIV_CODE
		                                                          AND ITEM_CODE   = A.ITEM_CODE
		                                                          AND COMP_CODE   = A.COMP_CODE
		                                                          AND WW_DD_TYPE  = A.WW_DD_TYPE
		                                                          AND PLAN_TYPE1  = A.PLAN_TYPE1
		                                                          AND CUSTOM_CODE = A.CUSTOM_CODE
		                                                          --AND APPL_DATE   = A.APPL_DATE
		                                                          AND BASE_DATE   = A.BASE_DATE
		                                                          AND PLAN_WEEK   = A.PLAN_WEEK), '')
		                        AND A.COMP_CODE     =  #{S_COMP_CODE}
							<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
							    AND M1.ITEM_ACCOUNT  =  #{ITEM_ACCOUNT}					--계정구분
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_FR)">
							    AND A.ITEM_CODE     &gt;= #{ITEM_CODE_FR}				--품목코드
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_TO)">
							    AND A.ITEM_CODE     &lt;= #{ITEM_CODE_TO}				--품목코드
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_FR) and @foren.Ognl@isEmpty(ITEM_CODE_FR)">
							   AND uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE)     &gt;= #{ITEM_NAME_FR}				--품목명
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_TO) and @foren.Ognl@isEmpty(ITEM_CODE_TO)">
							   AND uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE)     &lt;= #{ITEM_NAME_TO}				--품목명
							</if>
		                    ) B ON 1 = 1
		 WHERE  1 = 1
		 GROUP BY B.SUM_PLANQTY, B.SUM_PLANAMT, A.MONEYUNIT_FACTOR
		 
		 UNION ALL
		 
		    
		/* 실적(매출) 데이터 생성 */
		SELECT '합    계' AS CUSTOM_CODE,              ''  AS CUSTOM_NAME
		     , ' ' AS ITEM_CODE,                   ' '  AS ITEM_NAME,                  ' ' AS SPEC 
		     , ' ' AS PLAN_TYPE1,                  ' ' AS ENT_MONEY_UNIT,              ' ' AS MONEY_UNIT
		     ,  #{sGubun2}  GUBUN,                 '2'     BIT_CD,                     ' ' AS MONEYUNIT_FACTOR
		     , ' ' AS ITEM_ACCOUNT,                B.SUM_PLANQTY,                      B.SUM_PLANAMT / A.MONEYUNIT_FACTOR AS SUM_PLANAMT
		     , SUM(A.PLAN_QTY0)        AS PLAN_QTY0,       SUM(A.PLAN_AMT0)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT0
		     , SUM(A.PLAN_QTY1)        AS PLAN_QTY1,       SUM(A.PLAN_AMT1)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT1
		     , SUM(A.PLAN_QTY2)        AS PLAN_QTY2,       SUM(A.PLAN_AMT2)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT2
		     , SUM(A.PLAN_QTY3)        AS PLAN_QTY3,       SUM(A.PLAN_AMT3)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT3
		     , SUM(A.PLAN_QTY4)        AS PLAN_QTY4,       SUM(A.PLAN_AMT4)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT4
		     , SUM(A.PLAN_QTY5)        AS PLAN_QTY5,       SUM(A.PLAN_AMT5)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT5
		     , SUM(A.PLAN_QTY6)        AS PLAN_QTY6,       SUM(A.PLAN_AMT6)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT6
		     , SUM(A.PLAN_QTY7)        AS PLAN_QTY7,       SUM(A.PLAN_AMT7)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT7
		     , SUM(A.PLAN_QTY8)        AS PLAN_QTY8,       SUM(A.PLAN_AMT8)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT8
		     , SUM(A.PLAN_QTY9)        AS PLAN_QTY9,       SUM(A.PLAN_AMT9)  / A.MONEYUNIT_FACTOR       AS PLAN_AMT9
		     , SUM(A.PLAN_QTY10)       AS PLAN_QTY10,      SUM(A.PLAN_AMT10) / A.MONEYUNIT_FACTOR       AS PLAN_AMT10
		  FROM (
		        -- 주간판매실적 내역
		        SELECT A.ITEM_CODE, uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) ITEM_NAME, M1.SPEC
		             , A.PLAN_TYPE1, A.MONEY_UNIT, A.ENT_MONEY_UNIT, ISNULL(M3.REF_CODE1, 1.0) MONEYUNIT_FACTOR, M2.ITEM_ACCOUNT
		        --해당주차까지 Loop 돌면서 쿼리생성
			<foreach collection="calNos" item="month" index="index" >
		             , CASE WHEN A.ENT_MONEY_UNIT = '1'   --원단위
		                         THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
		                                        THEN ISNULL(B.SALE_Q,0) 
		                                        ELSE 0
		                               END
		                    WHEN A.ENT_MONEY_UNIT = '2'   --천단위
		                         THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
		                                        THEN ISNULL(B.SALE_Q,0) / 1000
		                                        ELSE 0 
		                               END
		                    WHEN A.ENT_MONEY_UNIT = '3'   --백만단위
		                         THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
		                                        THEN ISNULL(B.SALE_Q,0) / 1000000
		                                        ELSE 0
		                               END
		                    WHEN A.ENT_MONEY_UNIT = '4'   --억단위
		                         THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
		                                        THEN ISNULL(B.SALE_Q,0) / 100000000
		                                        ELSE 0
		                               END
		                END  AS PLAN_QTY${index}
		             , CASE WHEN ISNULL(M3.REF_CODE1, 1.0) = '1'   --원단위
		                         THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
		                                        THEN ISNULL(B.SALE_AMT_O,0)
		                                        ELSE 0 
		                               END
		                    WHEN ISNULL(M3.REF_CODE1, 1.0) = '2'   --천단위
		                         THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
		                                        THEN ISNULL(B.SALE_AMT_O,0) / 1000 
		                                        ELSE 0 
		                               END
		                    WHEN ISNULL(M3.REF_CODE1, 1.0) = '3'   --백만단위
		                         THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
		                                        THEN ISNULL(B.SALE_AMT_O,0) / 1000000 
		                                        ELSE 0
		                               END
		                    WHEN ISNULL(M3.REF_CODE1, 1.0) = '4'   --억단위
		                         THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
		                                        THEN ISNULL(B.SALE_AMT_O,0) / 100000000 
		                                        ELSE 0
		                               END
		                END  AS PLAN_AMT${index}
			</foreach>
		          FROM SSP200T A   WITH (NOLOCK)
		                       LEFT  JOIN (
		                                   SELECT B0.DIV_CODE
		                                        , B0.MONEY_UNIT
		                                        , B0.SALE_CUSTOM_CODE
		                                        , B0.ITEM_CODE
		                                        , B0.SALE_DATE
		                                        , SUM(B0.SALE_Q)         AS SALE_Q
		                                        , SUM(B0.SALE_AMT_O)     AS SALE_AMT_O
		                                        , SUM(B0.SALE_LOC_AMT_I) AS SALE_LOC_AMT_I
		                                        , SUM(B0.TAX_AMT_O)      AS TAX_AMT_O
		                                     FROM (
		                                           SELECT B1.DIV_CODE
		                                                , B1.SALE_CUSTOM_CODE
		                                                , B1.MONEY_UNIT
		                                                , B2.ITEM_CODE
		                                                , LEFT(B1.SALE_DATE, 4) + RIGHT('000' + CAST(DATEPART(WK, B1.SALE_DATE) + 1 AS CHAR(02)), 3) AS SALE_DATE
		                                                , B2.SALE_Q
		                                                , B2.SALE_AMT_O
		                                                , B2.SALE_LOC_AMT_I
		                                                , B2.TAX_AMT_O
		                                             FROM SSA100T B1 WITH(NOLOCK)
		                                                          INNER JOIN SSA110T B2 WITH(NOLOCK) 
		                                                                  ON B1.DIV_CODE = B2.DIV_CODE
		                                                                 AND B1.BILL_NUM = B2.BILL_NUM
		                                                                 AND B1.COMP_CODE= B2.COMP_CODE  
		                                            WHERE B1.COMP_CODE = #{S_COMP_CODE}
		                                          ) B0
		                                    GROUP BY B0.DIV_CODE, B0.MONEY_UNIT, B0.ITEM_CODE, B0.SALE_DATE, B0.SALE_CUSTOM_CODE
		                                  ) B 
		                               ON A.DIV_CODE  = B.DIV_CODE
		                              AND A.ITEM_CODE = B.ITEM_CODE
		                              AND A.CUSTOM_CODE= B.SALE_CUSTOM_CODE
		                              AND A.MONEY_UNIT= B.MONEY_UNIT
		                              AND A.PLAN_WEEK = B.SALE_DATE
		                       INNER JOIN BPR100T M1  WITH (NOLOCK)
		                               ON M1.ITEM_CODE = A.ITEM_CODE  
		                              AND M1.COMP_CODE = A.COMP_CODE  
		                       INNER JOIN BPR200T M2  WITH (NOLOCK)
		                               ON M2.DIV_CODE  = A.DIV_CODE
		                              AND M2.ITEM_CODE = A.ITEM_CODE 
		                              AND M2.COMP_CODE = A.COMP_CODE  
		                       LEFT  JOIN BSA100T M3  WITH (NOLOCK)
		                               ON M3.MAIN_CODE = 'B042'
		                              AND M3.SUB_CODE  = #{ENT_MONEY_UNIT}
		                              AND M3.COMP_CODE = A.COMP_CODE  
		         WHERE A.DIV_CODE      = #{DIV_CODE}
		           AND A.WW_DD_TYPE    = N'10'
		           AND A.APPL_DATE     = ISNULL((SELECT MAX(APPL_DATE)
		                                           FROM SSP200T WITH (NOLOCK)
		                                          WHERE DIV_CODE    = A.DIV_CODE
		                                            AND ITEM_CODE   = A.ITEM_CODE
		                                            AND COMP_CODE   = A.COMP_CODE
		                                            AND WW_DD_TYPE  = A.WW_DD_TYPE
		                                            AND PLAN_TYPE1  = A.PLAN_TYPE1
		                                            AND CUSTOM_CODE = A.CUSTOM_CODE
		                                            --AND APPL_DATE   = A.APPL_DATE
		                                            AND BASE_DATE   = A.BASE_DATE
		                                            AND PLAN_WEEK   = A.PLAN_WEEK), '')
		           AND A.COMP_CODE     =  #{S_COMP_CODE}   -- COMPANY CODE ADD
				   AND A.PLAN_WEEK  &gt;= #{PLAN_DATE_FR}
				   AND A.PLAN_WEEK  &lt;= #{PLAN_DATE_TO}
				<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
				   AND A.MONEY_UNIT =  #{MONEY_UNIT}
				</if>
				<if test="@foren.Ognl@isNotEmpty(OUT_IN_TYPE)">
				   AND A.PLAN_TYPE1 =  #{OUT_IN_TYPE}
				</if>
		    
				<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
				   AND M2.ITEM_ACCOUNT  =  #{ITEM_ACCOUNT}					--계정구분
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_FR)">
				   AND A.ITEM_CODE     &gt;= #{ITEM_CODE_FR}				--품목코드
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_TO)">
				   AND A.ITEM_CODE     &lt;= #{ITEM_CODE_TO}				--품목코드
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_FR) and @foren.Ognl@isEmpty(ITEM_CODE_FR)">
				   AND M1.ITEM_NAME     &gt;= #{ITEM_NAME_FR}				--품목명
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_TO) and @foren.Ognl@isEmpty(ITEM_CODE_TO)">
				   AND M1.ITEM_NAME     &lt;= #{ITEM_NAME_TO}				--품목명
				</if>
		       ) A 
		        -- 주간판매실적 합계
		         INNER JOIN (
		                     SELECT CASE WHEN A.ENT_MONEY_UNIT = '1' THEN ISNULL(SUM(B.SALE_Q), 0)                     --원단위
		                                 WHEN A.ENT_MONEY_UNIT = '2' THEN ISNULL(SUM(B.SALE_Q), 0) / 1000              --천단위
		                                 WHEN A.ENT_MONEY_UNIT = '3' THEN ISNULL(SUM(B.SALE_Q), 0) / 1000000           --백만단위
		                                 WHEN A.ENT_MONEY_UNIT = '4' THEN ISNULL(SUM(B.SALE_Q), 0) / 100000000         --억단위
		                             END  AS SUM_PLANQTY
		                          , CASE WHEN A.ENT_MONEY_UNIT = '1' THEN ISNULL(SUM(B.SALE_AMT_O), 0)                 --원단위
		                                 WHEN A.ENT_MONEY_UNIT = '2' THEN ISNULL(SUM(B.SALE_AMT_O), 0) / 1000          --천단위
		                                 WHEN A.ENT_MONEY_UNIT = '3' THEN ISNULL(SUM(B.SALE_AMT_O), 0) / 1000000       --백만단위
		                                 WHEN A.ENT_MONEY_UNIT = '4' THEN ISNULL(SUM(B.SALE_AMT_O), 0) / 100000000     --억단위
		                             END  AS SUM_PLANAMT
		                       FROM SSP200T A WITH(NOLOCK)
		                                    LEFT  JOIN (
		                                                SELECT B1.DIV_CODE
		                                                     , B1.SALE_CUSTOM_CODE
		                                                     , B1. MONEY_UNIT
		                                                     , B2.ITEM_CODE
		                                                     , LEFT(B1.SALE_DATE, 4) + RIGHT('000' + CAST(DATEPART(WK, B1.SALE_DATE) + 1 AS CHAR(02)), 3) AS SALE_DATE
		                                                     , SUM(B2.SALE_Q)         AS SALE_Q
		                                                     , SUM(B2.SALE_AMT_O)     AS SALE_AMT_O
		                                                     , SUM(B2.SALE_LOC_AMT_I) AS SALE_LOC_AMT_I
		                                                     , SUM(B2.TAX_AMT_O)      AS TAX_AMT_O
		                                                  FROM SSA100T B1 WITH(NOLOCK)
		                                                               INNER JOIN SSA110T B2 WITH(NOLOCK)
		                                                                       ON B1.DIV_CODE = B2.DIV_CODE 
		                                                                      AND B1.BILL_NUM = B2.BILL_NUM
		                                                                      AND B1.COMP_CODE= B2.COMP_CODE  
		                                                 WHERE B1.COMP_CODE = #{S_COMP_CODE}
		                                                 GROUP BY B1.DIV_CODE,        B1. MONEY_UNIT,     B2.ITEM_CODE, B1.SALE_CUSTOM_CODE
		                                                        , LEFT(B1.SALE_DATE, 4) + RIGHT('000' + CAST(DATEPART(WK, B1.SALE_DATE) + 1 AS CHAR(02)), 3)
		                                               ) B 
		                                            ON A.DIV_CODE    = B.DIV_CODE
		                                           AND A.CUSTOM_CODE = B.SALE_CUSTOM_CODE
		                                           AND A.ITEM_CODE   = B.ITEM_CODE
		                                           AND A.MONEY_UNIT  = B.MONEY_UNIT
		                                           AND A.PLAN_WEEK   = B.SALE_DATE
		                                    INNER JOIN BPR200T M1  WITH (NOLOCK) 
		                                            ON M1.DIV_CODE  = A.DIV_CODE
		                                           AND M1.ITEM_CODE = A.ITEM_CODE 
		                                           AND M1.COMP_CODE = A.COMP_CODE  
		                      WHERE A.DIV_CODE      =  #{DIV_CODE}
		                        AND A.WW_DD_TYPE    = N'10'
		                        AND A.PLAN_WEEK     &gt;= #{PLAN_DATE_FR}
		                        AND A.PLAN_WEEK     &lt;= #{PLAN_DATE_TO}
							<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
							    AND A.MONEY_UNIT =  #{MONEY_UNIT}
							</if>
							<if test="@foren.Ognl@isNotEmpty(OUT_IN_TYPE)">
							    AND A.PLAN_TYPE1 =  #{OUT_IN_TYPE}
							</if>
		                        AND A.APPL_DATE     =  ISNULL((SELECT MAX(APPL_DATE)
		                                                         FROM SSP200T WITH (NOLOCK)
		                                                        WHERE DIV_CODE    = A.DIV_CODE
		                                                          AND ITEM_CODE   = A.ITEM_CODE
		                                                          AND COMP_CODE   = A.COMP_CODE
		                                                          AND WW_DD_TYPE  = A.WW_DD_TYPE
		                                                          AND PLAN_TYPE1  = A.PLAN_TYPE1
		                                                          AND CUSTOM_CODE = A.CUSTOM_CODE
		                                                          --AND APPL_DATE   = A.APPL_DATE
		                                                          AND BASE_DATE   = A.BASE_DATE
		                                                          AND PLAN_WEEK   = A.PLAN_WEEK), '')
		                        AND A.COMP_CODE     =  #{S_COMP_CODE}   -- COMPANY CODE ADD
							<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
							    AND M1.ITEM_ACCOUNT  =  #{ITEM_ACCOUNT}					--계정구분
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_FR)">
							    AND A.ITEM_CODE     &gt;= #{ITEM_CODE_FR}				--품목코드
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_TO)">
							    AND A.ITEM_CODE     &lt;= #{ITEM_CODE_TO}				--품목코드
							</if>
							
							<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_FR) and @foren.Ognl@isEmpty(ITEM_CODE_FR)">
							   AND uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE)     &gt;= #{ITEM_NAME_FR}				--품목명
							</if>
							<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_TO) and @foren.Ognl@isEmpty(ITEM_CODE_TO)">
							   AND uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE)     &lt;= #{ITEM_NAME_TO}				--품목명
							</if>
		                      GROUP BY A.ENT_MONEY_UNIT
		                    ) B
		                 ON 1 = 1
		 WHERE  1 = 1
		 GROUP BY B.SUM_PLANQTY, B.SUM_PLANAMT, A.MONEYUNIT_FACTOR
		 
		 UNION ALL
		 
		    
		/* 달성률(%) 데이터 생성 */
		SELECT '합    계' AS CUSTOM_CODE,              ''  AS CUSTOM_NAME
		     , ' ' AS ITEM_CODE,                   ' '  AS ITEM_NAME,                  ' ' AS SPEC 
		     , ' ' AS PLAN_TYPE1,                  ' ' AS ENT_MONEY_UNIT,              ' ' AS MONEY_UNIT
		     ,  #{sGubun3}  GUBUN,                 '3'     BIT_CD,                     ' ' AS MONEYUNIT_FACTOR
		     , ' ' AS ITEM_ACCOUNT,                B.SUM_PLANQTY,                      B.SUM_PLANAMT / A.MONEYUNIT_FACTOR AS SUM_PLANAMT
		     , CASE WHEN ISNULL(SUM(A.PLAN_QTY0), 0) = 0   THEN 0  ELSE (SUM(A.SALE_Q_0) / SUM(A.PLAN_QTY0)) * 100         END AS PLAN_QTY0
		     , CASE WHEN ISNULL(SUM(A.PLAN_AMT0), 0) = 0   THEN 0  ELSE (SUM(A.SALE_AMT_O_0) / SUM(A.PLAN_AMT0)) * 100     END AS PLAN_AMT0
		     , CASE WHEN ISNULL(SUM(A.PLAN_QTY1), 0) = 0   THEN 0  ELSE (SUM(A.SALE_Q_1) / SUM(A.PLAN_QTY1)) * 100         END AS PLAN_QTY1
		     , CASE WHEN ISNULL(SUM(A.PLAN_AMT1), 0) = 0   THEN 0  ELSE (SUM(A.SALE_AMT_O_1) / SUM(A.PLAN_AMT1)) * 100     END AS PLAN_AMT1
		     , CASE WHEN ISNULL(SUM(A.PLAN_QTY2), 0) = 0   THEN 0  ELSE (SUM(A.SALE_Q_2) / SUM(A.PLAN_QTY2)) * 100         END AS PLAN_QTY2
		     , CASE WHEN ISNULL(SUM(A.PLAN_AMT2), 0) = 0   THEN 0  ELSE (SUM(A.SALE_AMT_O_2) / SUM(A.PLAN_AMT2)) * 100     END AS PLAN_AMT2
		     , CASE WHEN ISNULL(SUM(A.PLAN_QTY3), 0) = 0   THEN 0  ELSE (SUM(A.SALE_Q_3) / SUM(A.PLAN_QTY3)) * 100         END AS PLAN_QTY3
		     , CASE WHEN ISNULL(SUM(A.PLAN_AMT3), 0) = 0   THEN 0  ELSE (SUM(A.SALE_AMT_O_3) / SUM(A.PLAN_AMT3)) * 100     END AS PLAN_AMT3
		     , CASE WHEN ISNULL(SUM(A.PLAN_QTY4), 0) = 0   THEN 0  ELSE (SUM(A.SALE_Q_4) / SUM(A.PLAN_QTY4)) * 100         END AS PLAN_QTY4
		     , CASE WHEN ISNULL(SUM(A.PLAN_AMT4), 0) = 0   THEN 0  ELSE (SUM(A.SALE_AMT_O_4) / SUM(A.PLAN_AMT4)) * 100     END AS PLAN_AMT4
		     , CASE WHEN ISNULL(SUM(A.PLAN_QTY5), 0) = 0   THEN 0  ELSE (SUM(A.SALE_Q_5) / SUM(A.PLAN_QTY5)) * 100         END AS PLAN_QTY5
		     , CASE WHEN ISNULL(SUM(A.PLAN_AMT5), 0) = 0   THEN 0  ELSE (SUM(A.SALE_AMT_O_5) / SUM(A.PLAN_AMT5)) * 100     END AS PLAN_AMT5
		     , CASE WHEN ISNULL(SUM(A.PLAN_QTY6), 0) = 0   THEN 0  ELSE (SUM(A.SALE_Q_6) / SUM(A.PLAN_QTY6)) * 100         END AS PLAN_QTY6
		     , CASE WHEN ISNULL(SUM(A.PLAN_AMT6), 0) = 0   THEN 0  ELSE (SUM(A.SALE_AMT_O_6) / SUM(A.PLAN_AMT6)) * 100     END AS PLAN_AMT6
		     , CASE WHEN ISNULL(SUM(A.PLAN_QTY7), 0) = 0   THEN 0  ELSE (SUM(A.SALE_Q_7) / SUM(A.PLAN_QTY7)) * 100         END AS PLAN_QTY7
		     , CASE WHEN ISNULL(SUM(A.PLAN_AMT7), 0) = 0   THEN 0  ELSE (SUM(A.SALE_AMT_O_7) / SUM(A.PLAN_AMT7)) * 100     END AS PLAN_AMT7
		     , CASE WHEN ISNULL(SUM(A.PLAN_QTY8), 0) = 0   THEN 0  ELSE (SUM(A.SALE_Q_8) / SUM(A.PLAN_QTY8)) * 100         END AS PLAN_QTY8
		     , CASE WHEN ISNULL(SUM(A.PLAN_AMT8), 0) = 0   THEN 0  ELSE (SUM(A.SALE_AMT_O_8) / SUM(A.PLAN_AMT8)) * 100     END AS PLAN_AMT8
		     , CASE WHEN ISNULL(SUM(A.PLAN_QTY9), 0) = 0   THEN 0  ELSE (SUM(A.SALE_Q_9) / SUM(A.PLAN_QTY9)) * 100         END AS PLAN_QTY9
		     , CASE WHEN ISNULL(SUM(A.PLAN_AMT9), 0) = 0   THEN 0  ELSE (SUM(A.SALE_AMT_O_9) / SUM(A.PLAN_AMT9)) * 100     END AS PLAN_AMT9
		     , CASE WHEN ISNULL(SUM(A.PLAN_QTY10), 0) = 0  THEN 0  ELSE (SUM(A.SALE_Q_10) / SUM(A.PLAN_QTY10)) * 100       END AS PLAN_QTY10
		     , CASE WHEN ISNULL(SUM(A.PLAN_AMT10), 0) = 0  THEN 0  ELSE (SUM(A.SALE_AMT_O_10) / SUM(A.PLAN_AMT10)) * 100   END AS PLAN_AMT10
		  FROM (
		        -- 주간달성률 내역
		        SELECT A.ITEM_CODE
		             , uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) ITEM_NAME
		             , M1.SPEC
		             , A.PLAN_TYPE1
		             , A.MONEY_UNIT
		             , A.ENT_MONEY_UNIT
		             , ISNULL(M3.REF_CODE1, 1.0) MONEYUNIT_FACTOR
		             , M2.ITEM_ACCOUNT
		        --해당주차까지 Loop 돌면서 쿼리생성
			<foreach collection="calNos" item="month" index="index" >
	                 , CASE WHEN A.PLAN_WEEK = #{sWeek${index}}
	                             THEN A.PLAN_QTY 
	                             ELSE 0
	                    END AS PLAN_QTY${index}
	                 , CASE WHEN A.PLAN_WEEK = #{sWeek${index}}
	                             THEN A.PLAN_AMT
	                             ELSE 0 
	                    END AS PLAN_AMT${index}
	                 , CASE WHEN A.ENT_MONEY_UNIT = '1'   --원단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN ISNULL(B.SALE_Q,0)
	                                            ELSE 0 
	                                   END
	                        WHEN A.ENT_MONEY_UNIT = '2'   --천단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN ISNULL(B.SALE_Q,0) / 1000
	                                            ELSE 0 
	                                   END
	                        WHEN A.ENT_MONEY_UNIT = '3'   --백만단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN ISNULL(B.SALE_Q,0) / 1000000 
	                                            ELSE 0 
	                                   END
	                        WHEN A.ENT_MONEY_UNIT = '4'   --억단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN ISNULL(B.SALE_Q,0) / 100000000 
	                                            ELSE 0 
	                                   END
	                    END  AS SALE_Q_${index}
	                 , CASE WHEN ISNULL(M3.REF_CODE1, 1.0) = '1'   --원단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN ISNULL(B.SALE_AMT_O,0) 
	                                            ELSE 0 
	                                   END
	                        WHEN ISNULL(M3.REF_CODE1, 1.0) = '2'   --천단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN ISNULL(B.SALE_AMT_O,0) / 1000 
	                                            ELSE 0 
	                                   END
	                        WHEN ISNULL(M3.REF_CODE1, 1.0) = '3'   --백만단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN ISNULL(B.SALE_AMT_O,0) / 1000000 
	                                            ELSE 0
	                                   END
	                        WHEN ISNULL(M3.REF_CODE1, 1.0) = '4'   --억단위
	                             THEN CASE WHEN B.SALE_DATE = #{sWeek${index}}
	                                            THEN ISNULL(B.SALE_AMT_O,0) / 100000000
	                                            ELSE 0 
	                                   END
	                    END  AS SALE_AMT_O_${index}
			</foreach>
		          FROM SSP200T A   WITH (NOLOCK)
		                       LEFT  JOIN (
		                                   SELECT B0.DIV_CODE
		                                        , B0.MONEY_UNIT
		                                        , B0.SALE_CUSTOM_CODE
		                                        , B0.ITEM_CODE
		                                        , B0.SALE_DATE
		                                        , SUM(B0.SALE_Q)         AS SALE_Q
		                                        , SUM(B0.SALE_AMT_O)     AS SALE_AMT_O
		                                        , SUM(B0.SALE_LOC_AMT_I) AS SALE_LOC_AMT_I
		                                        , SUM(B0.TAX_AMT_O)      AS TAX_AMT_O
		                                     FROM (
		                                           SELECT B1.DIV_CODE
		                                                , B1.MONEY_UNIT
		                                                , B1.SALE_CUSTOM_CODE
		                                                , B2.ITEM_CODE
		                                                , LEFT(B1.SALE_DATE, 4) + RIGHT('000' + CAST(DATEPART(WK, B1.SALE_DATE) + 1 AS CHAR(02)), 3) AS SALE_DATE
		                                                , B2.SALE_Q, B2.SALE_AMT_O, B2.SALE_LOC_AMT_I, B2.TAX_AMT_O
		                                             FROM SSA100T B1 WITH(NOLOCK)
		                                                          INNER JOIN SSA110T B2 WITH(NOLOCK) 
		                                                                  ON B1.DIV_CODE = B2.DIV_CODE
		                                                                 AND B1.BILL_NUM = B2.BILL_NUM
		                                                                 AND B1.COMP_CODE= B2.COMP_CODE  
		                                            WHERE B1.COMP_CODE = #{S_COMP_CODE}
		                                          ) B0
		                                    GROUP BY B0.DIV_CODE, B0.MONEY_UNIT, B0.ITEM_CODE, B0.SALE_DATE, B0.SALE_CUSTOM_CODE
		                                  ) B
		                               ON A.DIV_CODE      = B.DIV_CODE 
		                              AND A.CUSTOM_CODE   = B.SALE_CUSTOM_CODE
		                              AND A.ITEM_CODE     = B.ITEM_CODE
		                              AND A.MONEY_UNIT    = B.MONEY_UNIT
		                              AND A.PLAN_WEEK     = B.SALE_DATE
		                       INNER JOIN BPR100T M1  WITH (NOLOCK)
		                               ON M1.ITEM_CODE = A.ITEM_CODE  
		                              AND M1.COMP_CODE = A.COMP_CODE  
		                       INNER JOIN BPR200T M2  WITH (NOLOCK)
		                               ON M2.DIV_CODE  = A.DIV_CODE 
		                              AND M2.ITEM_CODE = A.ITEM_CODE 
		                              AND M2.COMP_CODE = A.COMP_CODE  
		                       LEFT  JOIN BSA100T M3  WITH (NOLOCK) 
		                               ON M3.MAIN_CODE = 'B042' 
		                              AND M3.SUB_CODE  = #{ENT_MONEY_UNIT}
		                              AND M3.COMP_CODE = A.COMP_CODE  
		         WHERE A.DIV_CODE      = #{DIV_CODE}
		           AND A.WW_DD_TYPE    = N'10'
		           AND A.APPL_DATE     = ISNULL((SELECT MAX(APPL_DATE)
		                                           FROM SSP200T WITH (NOLOCK)
		                                          WHERE DIV_CODE    = A.DIV_CODE
		                                            AND ITEM_CODE   = A.ITEM_CODE
		                                            AND COMP_CODE   = A.COMP_CODE
		                                            AND WW_DD_TYPE  = A.WW_DD_TYPE
		                                            AND PLAN_TYPE1  = A.PLAN_TYPE1
		                                            AND CUSTOM_CODE = A.CUSTOM_CODE
		                                            --AND APPL_DATE   = A.APPL_DATE
		                                            AND BASE_DATE   = A.BASE_DATE
		                                            AND PLAN_WEEK   = A.PLAN_WEEK), '')
		           AND A.COMP_CODE     =  #{S_COMP_CODE}   -- COMPANY CODE ADD
		           AND A.PLAN_WEEK     &gt;= #{PLAN_DATE_FR}
		           AND A.PLAN_WEEK     &lt;= #{PLAN_DATE_TO}
				<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
				   AND A.MONEY_UNIT =  #{MONEY_UNIT}
				</if>
				<if test="@foren.Ognl@isNotEmpty(OUT_IN_TYPE)">
				   AND A.PLAN_TYPE1 =  #{OUT_IN_TYPE}
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
				   AND M2.ITEM_ACCOUNT  =  #{ITEM_ACCOUNT}					--계정구분
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_FR)">
				   AND A.ITEM_CODE     &gt;= #{ITEM_CODE_FR}				--품목코드
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_TO)">
				   AND A.ITEM_CODE     &lt;= #{ITEM_CODE_TO}				--품목코드
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_FR) and @foren.Ognl@isEmpty(ITEM_CODE_FR)">
				   AND M1.ITEM_NAME     &gt;= #{ITEM_NAME_FR}				--품목명
				</if>
				<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_TO) and @foren.Ognl@isEmpty(ITEM_CODE_TO)">
				   AND M1.ITEM_NAME     &lt;= #{ITEM_NAME_TO}				--품목명
				</if>
		       ) A 
		        -- 주간달성률 합계
		         INNER JOIN (
		                     SELECT CASE WHEN ISNULL(B.PLAN_QTY,0) = 0
		                                      THEN 0 
		                                      ELSE (ISNULL(B.SALE_Q, 0) / ISNULL(B.PLAN_QTY,0)) * 100
		                             END AS SUM_PLANQTY
		                          , CASE WHEN ISNULL(B.PLAN_AMT,0) = 0 
		                                      THEN 0 
		                                      ELSE (ISNULL(B.SALE_AMT_O, 0) / ISNULL(B.PLAN_AMT,0)) * 100 
		                             END AS SUM_PLANAMT
		                       FROM (
		                             SELECT SUM(A.PLAN_QTY)     AS PLAN_QTY
		                                  , SUM(A.PLAN_AMT)     AS PLAN_AMT
		                                  , CASE WHEN A.ENT_MONEY_UNIT = '1' THEN ISNULL(SUM(B.SALE_Q), 0)                     --원단위
		                                         WHEN A.ENT_MONEY_UNIT = '2' THEN ISNULL(SUM(B.SALE_Q), 0) / 1000              --천단위
		                                         WHEN A.ENT_MONEY_UNIT = '3' THEN ISNULL(SUM(B.SALE_Q), 0) / 1000000           --백만단위
		                                         WHEN A.ENT_MONEY_UNIT = '4' THEN ISNULL(SUM(B.SALE_Q), 0) / 100000000         --억단위
		                                     END  AS SALE_Q
		                                  , CASE WHEN A.ENT_MONEY_UNIT = '1' THEN ISNULL(SUM(B.SALE_AMT_O), 0)                 --원단위
		                                         WHEN A.ENT_MONEY_UNIT = '2' THEN ISNULL(SUM(B.SALE_AMT_O), 0) / 1000          --천단위
		                                         WHEN A.ENT_MONEY_UNIT = '3' THEN ISNULL(SUM(B.SALE_AMT_O), 0) / 1000000       --백만단위
		                                         WHEN A.ENT_MONEY_UNIT = '4' THEN ISNULL(SUM(B.SALE_AMT_O), 0) / 100000000     --억단위
		                                     END  AS SALE_AMT_O
		                               FROM SSP200T A WITH(NOLOCK)
		                                            LEFT  JOIN (
		                                                        SELECT B.DIV_CODE
		                                                             , B.MONEY_UNIT
		                                                             , B.SALE_CUSTOM_CODE
		                                                             , B.ITEM_CODE
		                                                             , B.SALE_DATE
		                                                             , SUM(B.SALE_Q)         AS SALE_Q
		                                                             , SUM(B.SALE_AMT_O)     AS SALE_AMT_O
		                                                             , SUM(B.SALE_LOC_AMT_I) AS SALE_LOC_AMT_I
		                                                             , SUM(B.TAX_AMT_O)      AS TAX_AMT_O
		                                                          FROM (
		                                                                SELECT B1.DIV_CODE
		                                                                     , B1. MONEY_UNIT
		                                                                     , B1.SALE_CUSTOM_CODE
		                                                                     , B2.ITEM_CODE
		                                                                     , LEFT(B1.SALE_DATE, 4) + RIGHT('000' + CAST(DATEPART(WK, B1.SALE_DATE) + 1 AS CHAR(02)), 3) AS SALE_DATE
		                                                                     , B2.SALE_Q
		                                                                     , B2.SALE_AMT_O
		                                                                     , B2.SALE_LOC_AMT_I
		                                                                     , B2.TAX_AMT_O
		                                                                  FROM SSA100T B1 WITH(NOLOCK)
		                                                                               INNER JOIN SSA110T B2 WITH(NOLOCK) 
		                                                                                       ON B1.DIV_CODE = B2.DIV_CODE 
		                                                                                      AND B1.BILL_NUM = B2.BILL_NUM
		                                                                                      AND B1.COMP_CODE= B2.COMP_CODE  
		                                                                 WHERE B1.COMP_CODE = #{S_COMP_CODE}
		                                                               ) B
		                                                         GROUP BY B.DIV_CODE, B.MONEY_UNIT, B.ITEM_CODE, B.SALE_DATE, B.SALE_CUSTOM_CODE
		                                                       ) B 
		                                                    ON A.DIV_CODE    = B.DIV_CODE
		                                                   AND A.CUSTOM_CODE = B.SALE_CUSTOM_CODE
		                                                   AND A.ITEM_CODE   = B.ITEM_CODE
		                                                   AND A.MONEY_UNIT  = B.MONEY_UNIT
		                                                   AND A.PLAN_WEEK   = B.SALE_DATE
		                                            INNER JOIN BPR200T M1  WITH (NOLOCK)  
		                                                    ON M1.DIV_CODE  = A.DIV_CODE
		                                                   AND M1.ITEM_CODE = A.ITEM_CODE 
		                                                   AND M1.COMP_CODE = A.COMP_CODE  
		                              WHERE A.DIV_CODE      =  #{DIV_CODE}
		                                AND A.WW_DD_TYPE    =  N'10'
		                                AND A.PLAN_WEEK     &gt;= #{PLAN_DATE_FR}
		                                AND A.PLAN_WEEK     &lt;= #{PLAN_DATE_TO}
									<if test="@foren.Ognl@isNotEmpty(MONEY_UNIT)">
									    AND A.MONEY_UNIT =  #{MONEY_UNIT}
									</if>
									<if test="@foren.Ognl@isNotEmpty(OUT_IN_TYPE)">
									    AND A.PLAN_TYPE1 =  #{OUT_IN_TYPE}
									</if>
		                                AND A.APPL_DATE     =  ISNULL((SELECT MAX(APPL_DATE)
		                                                                 FROM SSP200T WITH (NOLOCK)
		                                                                WHERE DIV_CODE    = A.DIV_CODE
		                                                                  AND ITEM_CODE   = A.ITEM_CODE
		                                                                  AND COMP_CODE   = A.COMP_CODE
		                                                                  AND WW_DD_TYPE  = A.WW_DD_TYPE
		                                                                  AND PLAN_TYPE1  = A.PLAN_TYPE1
		                                                                  AND CUSTOM_CODE = A.CUSTOM_CODE
		                                                                  --AND APPL_DATE   = A.APPL_DATE
		                                                                  AND BASE_DATE   = A.BASE_DATE
		                                                                  AND PLAN_WEEK   = A.PLAN_WEEK), '')
		                                AND A.COMP_CODE     =  #{S_COMP_CODE}   -- COMPANY CODE ADD
									<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
									    AND M1.ITEM_ACCOUNT  =  #{ITEM_ACCOUNT}					--계정구분
									</if>
									<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_FR)">
									    AND A.ITEM_CODE     &gt;= #{ITEM_CODE_FR}				--품목코드
									</if>
									<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_TO)">
									    AND A.ITEM_CODE     &lt;= #{ITEM_CODE_TO}				--품목코드
									</if>
									<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_FR) and @foren.Ognl@isEmpty(ITEM_CODE_FR)">
									   AND uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE)     &gt;= #{ITEM_NAME_FR}				--품목명
									</if>
									<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_TO) and @foren.Ognl@isEmpty(ITEM_CODE_TO)">
									   AND uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE)     &lt;= #{ITEM_NAME_TO}				--품목명
									</if>
		                              GROUP BY A.ENT_MONEY_UNIT
		                            ) B
		                    ) B ON 1 = 1
		 WHERE  1 = 1
		 GROUP BY B.SUM_PLANQTY, B.SUM_PLANAMT, A.MONEYUNIT_FACTOR
		 --ORDER BY BIT_CD
		 ORDER BY A.CUSTOM_CODE, A.ITEM_CODE, BIT_CD
	</select>
</mapper>