<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sgp200ukrvServiceImpl">
	
	<select id="sgp200ukrvServiceImpl.planYear" parameterType="Map" resultType="rMap">
	--'계획년도의 주간 카렌더가 존재 하는지 확인
	--sgp200ukrv.Csgp200ukrv[fnSgp200Week] Query14
	SELECT CAL_NO
		 , START_DATE
	  FROM BCM420T 
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND CAL_TYPE = '3' 
	   AND GETDATE() BETWEEN START_DATE AND END_DATE
	 ORDER BY CAL_NO
	</select>
	
	<select id="sgp200ukrvServiceImpl.baseDate" parameterType="Map" resultType="rMap">
	-- 계획기간구하기
	BEGIN
		  DECLARE  @COMP_CODE  NVARCHAR(08)
				  ,@BASE_DATE  NVARCHAR(10)
				  ,@WEEKTO	   NVARCHAR(10)
				  ,@WEEKTO10   NVARCHAR(10)
	
		  SET @COMP_CODE  = #{S_COMP_CODE}
		  SET @BASE_DATE  = CONVERT(NVARCHAR(10), GETDATE(), 112)
	
		  SELECT @WEEKTO = CAL_NO
			FROM BCM420T WITH (NOLOCK)
		   WHERE COMP_CODE = @COMP_CODE
			 AND CAL_TYPE  = '3'
			 AND CONVERT(NVARCHAR, DATEADD(WK, 15, @BASE_DATE), 112) BETWEEN START_DATE AND END_DATE
	
		  SELECT @WEEKTO10 = CAL_NO
			FROM BCM420T WITH (NOLOCK)
		   WHERE COMP_CODE = @COMP_CODE
			 AND CAL_TYPE  = '3'
			 AND CONVERT(NVARCHAR, DATEADD(WK, 10, @BASE_DATE), 112) BETWEEN START_DATE AND END_DATE
	
		  SET NOCOUNT ON
		  SET ARITHABORT ON
	
		  SELECT CAL_NO AS WEEKFR, @WEEKTO AS WEEKTO, @WEEKTO10 AS WEEKTO10
			FROM BCM420T WITH (NOLOCK)
		   WHERE COMP_CODE = @COMP_CODE
			 AND CAL_TYPE  = '3'
			 AND @BASE_DATE BETWEEN START_DATE AND END_DATE
	
		  SET NOCOUNT OFF
		  SET ARITHABORT OFF
	END
	</select>
	
	<select id="sgp200ukrvServiceImpl.planDateFrSet" parameterType="Map" resultType="rMap">
	-- 계획기간구하기
	BEGIN
		  DECLARE  @COMP_CODE  NVARCHAR(08)
				  ,@BASE_DATE  NVARCHAR(10)
				  ,@WEEKTO	 NVARCHAR(10)
	
		  SET @COMP_CODE  = #{S_COMP_CODE}
		  SET @BASE_DATE  = #{PLAN_DATE}
	
		  SELECT @WEEKTO = CAL_NO
			FROM BCM420T WITH (NOLOCK)
		   WHERE COMP_CODE = @COMP_CODE
			 AND CAL_TYPE  = '3'
			 AND CONVERT(NVARCHAR, DATEADD(WK, 15, @BASE_DATE), 112) BETWEEN START_DATE AND END_DATE
	
		  SET NOCOUNT ON
		  SET ARITHABORT ON
	
		  SELECT CAL_NO AS WEEKFR, @WEEKTO AS WEEKTO
			FROM BCM420T WITH (NOLOCK)
		   WHERE COMP_CODE = @COMP_CODE
			 AND CAL_TYPE  = '3'
			 AND @BASE_DATE BETWEEN START_DATE AND END_DATE
	
		  SET NOCOUNT OFF
		  SET ARITHABORT OFF
	END
	</select>
	
	<select id="sgp200ukrvServiceImpl.defaultSet" parameterType="Map" resultType="rMap">
	--sgp200ukrv.Csgp200ukrv[fnSgp200DefaultSet] Query16
	SELECT TOP 1 PLAN_TYPE1
		 , MONEY_UNIT
		 , ENT_MONEY_UNIT
	  FROM SSP100T WITH(NOLOCK)
	 WHERE COMP_CODE  = #{S_COMP_CODE}
	   AND DIV_CODE   = #{DIV_CODE}
	   AND PLAN_YEAR  = #{PLAN_YEAR}
	   AND PLAN_TYPE2 = '3'		
	</select>
	
	<select id="sgp200ukrvServiceImpl.fnGetDate" parameterType="Map" resultType="rMap">
		SELECT uniLITE.fnGetUserDate(#{S_COMP_CODE}, CAL_DATE) AS BASIC_DATE
		  FROM BCM400T WITH (NOLOCK)
		 WHERE COMP_CODE	= #{S_COMP_CODE}
		   AND CAL_TYPE		= '3'
		   AND CAL_DATE	&gt;= (SELECT MIN(START_DATE)
								 FROM BCM420T WITH(NOLOCK)
								WHERE COMP_CODE		= #{S_COMP_CODE}
								  AND CAL_TYPE		= '3'
								  AND CAL_NO	&gt;= #{PLAN_DATE_FR}
								  AND CAL_NO	&lt;= #{PLAN_DATE_TO})
		   AND CAL_DATE &lt;= (SELECT MAX(END_DATE)
								 FROM BCM420T WITH(NOLOCK)
								WHERE COMP_CODE		= #{S_COMP_CODE}
								  AND CAL_TYPE		= '3'
								  AND CAL_NO	&gt;= #{PLAN_DATE_FR}
								  AND CAL_NO	&lt;= #{PLAN_DATE_TO})
		   AND WEEK_DAY  = #{BASE_WEEK}
	</select>
	
	<select id="sgp200ukrvServiceImpl.selectYear" parameterType="Map" resultType="rMap">
	--sgp200ukrv.Csgp200ukrv[fnSgp200QStd] Query0
	SELECT TOP 16 LEFT(CAL_NO, 4) AS SYEAR
	  FROM BCM420T WITH (NOLOCK)
	 WHERE COMP_CODE  = #{S_COMP_CODE}
	   AND CAL_TYPE   = '3'
	   AND CAL_NO	&gt;= #{PLAN_DATE_FR}
	 ORDER BY CAL_NO
	</select>
	
	<select id="sgp200ukrvServiceImpl.selectWeek" parameterType="Map" resultType="rMap">
	--sgp200ukrv.Csgp200ukrv[fnSgp200QStd] Query0
	SELECT TOP 16 CAL_NO
	  FROM BCM420T WITH (NOLOCK)
	 WHERE COMP_CODE  = #{S_COMP_CODE}
	   AND CAL_TYPE   = '3'
	   AND CAL_NO	&gt;= #{PLAN_DATE_FR}
	 ORDER BY CAL_NO
	</select>
	







	<select id="sgp200ukrvServiceImpl.BACKUP" parameterType="Map" resultType="rMap">
		/* REG_YN 조회하는 쿼리 (주차계산 하는 로직 추가된) BACKUP */
					 , (SELECT COUNT(COMP_CODE)
						 FROM BPR500T WITH(NOLOCK) 
						WHERE COMP_CODE = A.COMP_CODE
						  AND DIV_CODE  = A.DIV_CODE
						  AND ( PROD_ITEM_CODE = A.ITEM_CODE OR CHILD_ITEM_CODE = A.ITEM_CODE )
						  AND START_DATE &lt;= (CASE WHEN A.PLAN_WEEK = {#sWeek0}
													 THEN A.BASE_DATE		
													 ELSE ISNULL((SELECT TOP 1 CAL_DATE
																	FROM BCM400T WITH (NOLOCK)
																   WHERE CAL_TYPE	= '3'
																	 AND COMP_CODE   = {#S_COMP_CODE}
																	 AND CAL_DATE LIKE {#sYear0} + '%'
																	 AND CAL_NO	  = SUBSTRING({#sWeek0}, 5, 3)
																	 AND WEEK_DAY	= {#BASE_WEEK}), '')
												END)
						  AND STOP_DATE  &gt;= (CASE WHEN A.PLAN_WEEK = {#sWeek15}
													 THEN A.BASE_DATE		
													 ELSE ISNULL((SELECT TOP 1 CAL_DATE
																	FROM BCM400T WITH (NOLOCK)
																   WHERE CAL_TYPE	= '3'
																	 AND COMP_CODE   = {#S_COMP_CODE}
																	 AND CAL_DATE LIKE {#sYear15} + '%'
																	 AND CAL_NO	  = SUBSTRING({#sWeek15}, 5, 3)
																	 AND WEEK_DAY	= {#BASE_WEEK}), '')
												END)
					)																AS REG_YN
	</select>

	<select id="sgp200ukrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
	--sgp200ukrv.Csgp200ukrv[fnSgp200QStd] Query1
	
	 SELECT A.PLAN_TYPE1, 
		<if test="USE_CUSTOM == &quot;Y&quot;">
			   A.CUSTOM_CODE, C.CUSTOM_NAME, 
		</if>
		<if test="USE_CUSTOM != &quot;Y&quot;">
			   '' AS CUSTOM_CODE, '' AS CUSTOM_NAME, 
		</if>
		   A.ITEM_CODE, A.ITEM_NAME, A.SPEC, A.MONEY_UNIT, '' AS ENT_MONEY_UNIT
		 , A.MONEYUNIT_FACTOR, A.ITEM_ACCOUNT
		 , ISNULL(B.SUM_PLANQTY,0) AS SUM_PLANQTY, ISNULL(B.SUM_PLANAMT,0) / A.MONEYUNIT_FACTOR AS SUM_PLANAMT
		 , MAX(A.APPL_DATE0)  AS APPL_DATE0,  ISNULL(MAX(A.WK_PLAN_QTY0),0)  AS WK_PLAN_QTY0,  ISNULL(MAX(A.PLAN_QTY0),0)  AS PLAN_QTY0
		 , ISNULL(MAX(A.PLAN_AMT0),0)   AS PLAN_AMT0,   MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE0))	AS BASE_DATE0
		 , MAX(A.APPL_DATE1)  AS APPL_DATE1,  ISNULL(MAX(A.WK_PLAN_QTY1),0)  AS WK_PLAN_QTY1,  ISNULL(MAX(A.PLAN_QTY1),0)  AS PLAN_QTY1
		 , ISNULL(MAX(A.PLAN_AMT1),0)   AS PLAN_AMT1,   MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE1))	AS BASE_DATE1
		 , MAX(A.APPL_DATE2)  AS APPL_DATE2,  ISNULL(MAX(A.WK_PLAN_QTY2),0)  AS WK_PLAN_QTY2,  ISNULL(MAX(A.PLAN_QTY2),0)  AS PLAN_QTY2
		 , ISNULL(MAX(A.PLAN_AMT2),0)   AS PLAN_AMT2,   MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE2))	AS BASE_DATE2
		 , MAX(A.APPL_DATE3)  AS APPL_DATE3,  ISNULL(MAX(A.WK_PLAN_QTY3), 0)  AS WK_PLAN_QTY3, ISNULL(MAX(A.PLAN_QTY3),0)  AS PLAN_QTY3
		 , ISNULL(MAX(A.PLAN_AMT3),0)   AS PLAN_AMT3,   MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE3))	AS BASE_DATE3
		 , MAX(A.APPL_DATE4)  AS APPL_DATE4,  ISNULL(MAX(A.WK_PLAN_QTY4),0)  AS WK_PLAN_QTY4,  ISNULL(MAX(A.PLAN_QTY4),0)  AS PLAN_QTY4
		 , ISNULL(MAX(A.PLAN_AMT4),0)   AS PLAN_AMT4,   MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE4))	AS BASE_DATE4
		 , MAX(A.APPL_DATE5)  AS APPL_DATE5,  ISNULL(MAX(A.WK_PLAN_QTY5),0)  AS WK_PLAN_QTY5,  ISNULL(MAX(A.PLAN_QTY5),0)  AS PLAN_QTY5
		 , ISNULL(MAX(A.PLAN_AMT5),0)   AS PLAN_AMT5,   MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE5))	AS BASE_DATE5
		 , MAX(A.APPL_DATE6)  AS APPL_DATE6,  ISNULL(MAX(A.WK_PLAN_QTY6),0)  AS WK_PLAN_QTY6,  ISNULL(MAX(A.PLAN_QTY6),0)  AS PLAN_QTY6
		 , ISNULL(MAX(A.PLAN_AMT6),0)   AS PLAN_AMT6,   MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE6))	AS BASE_DATE6
		 , MAX(A.APPL_DATE7)  AS APPL_DATE7,  ISNULL(MAX(A.WK_PLAN_QTY7),0)  AS WK_PLAN_QTY7,  ISNULL(MAX(A.PLAN_QTY7),0)  AS PLAN_QTY7
		 , ISNULL(MAX(A.PLAN_AMT7),0)   AS PLAN_AMT7,   MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE7))	AS BASE_DATE7
		 , MAX(A.APPL_DATE8)  AS APPL_DATE8,  ISNULL(MAX(A.WK_PLAN_QTY8),0)  AS WK_PLAN_QTY8,  ISNULL(MAX(A.PLAN_QTY8),0)  AS PLAN_QTY8
		 , ISNULL(MAX(A.PLAN_AMT8),0)   AS PLAN_AMT8,   MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE8))	AS BASE_DATE8
		 , MAX(A.APPL_DATE9)  AS APPL_DATE9,  ISNULL(MAX(A.WK_PLAN_QTY9),0)  AS WK_PLAN_QTY9,  ISNULL(MAX(A.PLAN_QTY9),0)  AS PLAN_QTY9
		 , ISNULL(MAX(A.PLAN_AMT9),0)   AS PLAN_AMT9,   MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE9))	AS BASE_DATE9
		 , MAX(A.APPL_DATE10) AS APPL_DATE10, ISNULL(MAX(A.WK_PLAN_QTY10),0) AS WK_PLAN_QTY10, ISNULL(MAX(A.PLAN_QTY10),0) AS PLAN_QTY10
		 , ISNULL(MAX(A.PLAN_AMT10),0)  AS PLAN_AMT10,  MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE10))   AS BASE_DATE10
		 , MAX(A.APPL_DATE11) AS APPL_DATE11, ISNULL(MAX(A.WK_PLAN_QTY11),0) AS WK_PLAN_QTY11, ISNULL(MAX(A.PLAN_QTY11),0) AS PLAN_QTY11
		 , ISNULL(MAX(A.PLAN_AMT11),0)  AS PLAN_AMT11,  MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE11))   AS BASE_DATE11
		 , MAX(A.APPL_DATE12) AS APPL_DATE12, ISNULL(MAX(A.WK_PLAN_QTY12),0) AS WK_PLAN_QTY12, ISNULL(MAX(A.PLAN_QTY12),0) AS PLAN_QTY12
		 , ISNULL(MAX(A.PLAN_AMT12),0)  AS PLAN_AMT12,  MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE12))   AS BASE_DATE12
		 , MAX(A.APPL_DATE13) AS APPL_DATE13, ISNULL(MAX(A.WK_PLAN_QTY13),0) AS WK_PLAN_QTY13, ISNULL(MAX(A.PLAN_QTY13),0) AS PLAN_QTY13
		 , ISNULL(MAX(A.PLAN_AMT13),0)  AS PLAN_AMT13,  MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE13))   AS BASE_DATE13
		 , MAX(A.APPL_DATE14) AS APPL_DATE14, ISNULL(MAX(A.WK_PLAN_QTY14),0) AS WK_PLAN_QTY14, ISNULL(MAX(A.PLAN_QTY14),0) AS PLAN_QTY14
		 , ISNULL(MAX(A.PLAN_AMT14),0)  AS PLAN_AMT14,  MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE14))   AS BASE_DATE14
		 , MAX(A.APPL_DATE15) AS APPL_DATE15, ISNULL(MAX(A.WK_PLAN_QTY15),0) AS WK_PLAN_QTY15, ISNULL(MAX(A.PLAN_QTY15),0) AS PLAN_QTY15
		 , ISNULL(MAX(A.PLAN_AMT15),0)  AS PLAN_AMT15,  MAX(uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE15))   AS BASE_DATE15
		 --20181120 추가
		 , D.ITEM_TYPE
		 , CASE WHEN A.REG_YN &gt; 0 THEN '1'
		 		ELSE '2'
		   END																										AS REG_YN
	  FROM (SELECT A.COMP_CODE
				 , A.DIV_CODE
				 , A.ITEM_CODE
		<if test="USE_CUSTOM == &quot;Y&quot;">
				 , A.CUSTOM_CODE
		</if>
		<if test="USE_CUSTOM != &quot;Y&quot;">
				 , '' AS CUSTOM_CODE
		</if>
				 , (SELECT COUNT(COMP_CODE)
						 FROM BPR500T WITH(NOLOCK) 
						WHERE COMP_CODE = A.COMP_CODE
						  AND DIV_CODE  = A.DIV_CODE
						  AND ( PROD_ITEM_CODE = A.ITEM_CODE OR CHILD_ITEM_CODE = A.ITEM_CODE )
						  AND START_DATE &lt;= CONVERT(NVARCHAR(08), GETDATE(), 112)
						  AND STOP_DATE  &gt;= CONVERT(NVARCHAR(08), GETDATE(), 112)
					)																AS REG_YN
				 , UNILITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) ITEM_NAME
				 , M1.SPEC
				 , A.PLAN_TYPE1
				 , A.MONEY_UNIT
				 , A.ENT_MONEY_UNIT
				 , ISNULL(M3.REF_CODE1, 1.0) MONEYUNIT_FACTOR
				 , M2.ITEM_ACCOUNT
				 , CASE WHEN A.PLAN_WEEK = #{sWeek0} 
							 THEN A.APPL_DATE 
					END APPL_DATE0
				 , CASE WHEN A.PLAN_WEEK = #{sWeek0}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY0
				 , CASE WHEN A.PLAN_WEEK = #{sWeek0}
							 THEN A.PLAN_QTY 
					END PLAN_QTY0
				 , CASE WHEN A.PLAN_WEEK = #{sWeek0}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT0
				 , CASE WHEN A.PLAN_WEEK = #{sWeek0}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear0} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek0}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE0
				 , CASE WHEN A.PLAN_WEEK = #{sWeek1} 
							 THEN A.APPL_DATE 
					END APPL_DATE1
				 , CASE WHEN A.PLAN_WEEK = #{sWeek1}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY1
				 , CASE WHEN A.PLAN_WEEK = #{sWeek1}
							 THEN A.PLAN_QTY 
					END PLAN_QTY1
				 , CASE WHEN A.PLAN_WEEK = #{sWeek1}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT1
				 , CASE WHEN A.PLAN_WEEK = #{sWeek1}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear1} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek1}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE1
				 , CASE WHEN A.PLAN_WEEK = #{sWeek2} 
							 THEN A.APPL_DATE 
					END APPL_DATE2
				 , CASE WHEN A.PLAN_WEEK = #{sWeek2}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY2
				 , CASE WHEN A.PLAN_WEEK = #{sWeek2}
							 THEN A.PLAN_QTY 
					END PLAN_QTY2
				 , CASE WHEN A.PLAN_WEEK = #{sWeek2}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT2
				 , CASE WHEN A.PLAN_WEEK = #{sWeek2}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear2} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek2}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE2
				 , CASE WHEN A.PLAN_WEEK = #{sWeek3} 
							 THEN A.APPL_DATE 
					END APPL_DATE3
				 , CASE WHEN A.PLAN_WEEK = #{sWeek3}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY3
				 , CASE WHEN A.PLAN_WEEK = #{sWeek3}
							 THEN A.PLAN_QTY 
					END PLAN_QTY3
				 , CASE WHEN A.PLAN_WEEK = #{sWeek3}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT3
				 , CASE WHEN A.PLAN_WEEK = #{sWeek3}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear3} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek3}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE3
				 , CASE WHEN A.PLAN_WEEK = #{sWeek4} 
							 THEN A.APPL_DATE 
					END APPL_DATE4
				 , CASE WHEN A.PLAN_WEEK = #{sWeek4}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY4
				 , CASE WHEN A.PLAN_WEEK = #{sWeek4}
							 THEN A.PLAN_QTY 
					END PLAN_QTY4
				 , CASE WHEN A.PLAN_WEEK = #{sWeek4}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT4
				 , CASE WHEN A.PLAN_WEEK = #{sWeek4}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear4} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek4}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE4
		
				 , CASE WHEN A.PLAN_WEEK = #{sWeek5} 
							 THEN A.APPL_DATE 
					END APPL_DATE5
				 , CASE WHEN A.PLAN_WEEK = #{sWeek5}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY5
				 , CASE WHEN A.PLAN_WEEK = #{sWeek5}
							 THEN A.PLAN_QTY 
					END PLAN_QTY5
				 , CASE WHEN A.PLAN_WEEK = #{sWeek5}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT5
				 , CASE WHEN A.PLAN_WEEK = #{sWeek5}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear5} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek5}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE5
		
				 , CASE WHEN A.PLAN_WEEK = #{sWeek6} 
							 THEN A.APPL_DATE 
					END APPL_DATE6
				 , CASE WHEN A.PLAN_WEEK = #{sWeek6}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY6
				 , CASE WHEN A.PLAN_WEEK = #{sWeek6}
							 THEN A.PLAN_QTY 
					END PLAN_QTY6
				 , CASE WHEN A.PLAN_WEEK = #{sWeek6}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT6
				 , CASE WHEN A.PLAN_WEEK = #{sWeek6}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear6} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek6}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE6
		
				 , CASE WHEN A.PLAN_WEEK = #{sWeek7} 
							 THEN A.APPL_DATE 
					END APPL_DATE7
				 , CASE WHEN A.PLAN_WEEK = #{sWeek7}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY7
				 , CASE WHEN A.PLAN_WEEK = #{sWeek7}
							 THEN A.PLAN_QTY 
					END PLAN_QTY7
				 , CASE WHEN A.PLAN_WEEK = #{sWeek7}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT7
				 , CASE WHEN A.PLAN_WEEK = #{sWeek7}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear7} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek7}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE7
		
				 , CASE WHEN A.PLAN_WEEK = #{sWeek8} 
							 THEN A.APPL_DATE 
					END APPL_DATE8
				 , CASE WHEN A.PLAN_WEEK = #{sWeek8}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY8
				 , CASE WHEN A.PLAN_WEEK = #{sWeek8}
							 THEN A.PLAN_QTY 
					END PLAN_QTY8
				 , CASE WHEN A.PLAN_WEEK = #{sWeek8}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT8
				 , CASE WHEN A.PLAN_WEEK = #{sWeek8}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear8} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek8}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE8
		
				 , CASE WHEN A.PLAN_WEEK = #{sWeek9} 
							 THEN A.APPL_DATE 
					END APPL_DATE9
				 , CASE WHEN A.PLAN_WEEK = #{sWeek9}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY9
				 , CASE WHEN A.PLAN_WEEK = #{sWeek9}
							 THEN A.PLAN_QTY 
					END PLAN_QTY9
				 , CASE WHEN A.PLAN_WEEK = #{sWeek9}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT9
				 , CASE WHEN A.PLAN_WEEK = #{sWeek9}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear9} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek9}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE9
		
				 , CASE WHEN A.PLAN_WEEK = #{sWeek10} 
							 THEN A.APPL_DATE 
					END APPL_DATE10
				 , CASE WHEN A.PLAN_WEEK = #{sWeek10}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY10
				 , CASE WHEN A.PLAN_WEEK = #{sWeek10}
							 THEN A.PLAN_QTY 
					END PLAN_QTY10
				 , CASE WHEN A.PLAN_WEEK = #{sWeek10}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT10
				 , CASE WHEN A.PLAN_WEEK = #{sWeek10}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear10} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek10}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE10
		
				 , CASE WHEN A.PLAN_WEEK = #{sWeek11} 
							 THEN A.APPL_DATE 
					END APPL_DATE11
				 , CASE WHEN A.PLAN_WEEK = #{sWeek11}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY11
				 , CASE WHEN A.PLAN_WEEK = #{sWeek11}
							 THEN A.PLAN_QTY 
					END PLAN_QTY11
				 , CASE WHEN A.PLAN_WEEK = #{sWeek11}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT11
				 , CASE WHEN A.PLAN_WEEK = #{sWeek11}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear11} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek11}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE11
		
				 , CASE WHEN A.PLAN_WEEK = #{sWeek12} 
							 THEN A.APPL_DATE 
					END APPL_DATE12
				 , CASE WHEN A.PLAN_WEEK = #{sWeek12}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY12
				 , CASE WHEN A.PLAN_WEEK = #{sWeek12}
							 THEN A.PLAN_QTY 
					END PLAN_QTY12
				 , CASE WHEN A.PLAN_WEEK = #{sWeek12}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT12
				 , CASE WHEN A.PLAN_WEEK = #{sWeek12}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear12} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek12}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE12
		
				 , CASE WHEN A.PLAN_WEEK = #{sWeek13} 
							 THEN A.APPL_DATE 
					END APPL_DATE13
				 , CASE WHEN A.PLAN_WEEK = #{sWeek13}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY13
				 , CASE WHEN A.PLAN_WEEK = #{sWeek13}
							 THEN A.PLAN_QTY 
					END PLAN_QTY13
				 , CASE WHEN A.PLAN_WEEK = #{sWeek13}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT13
				 , CASE WHEN A.PLAN_WEEK = #{sWeek13}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear13} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek13}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE13
		
				 , CASE WHEN A.PLAN_WEEK = #{sWeek14} 
							 THEN A.APPL_DATE 
					END APPL_DATE14
				 , CASE WHEN A.PLAN_WEEK = #{sWeek14}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY14
				 , CASE WHEN A.PLAN_WEEK = #{sWeek14}
							 THEN A.PLAN_QTY 
					END PLAN_QTY14
				 , CASE WHEN A.PLAN_WEEK = #{sWeek14}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT14
				 , CASE WHEN A.PLAN_WEEK = #{sWeek14}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear14} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek14}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE14
		
				 , CASE WHEN A.PLAN_WEEK = #{sWeek15} 
							 THEN A.APPL_DATE 
					END APPL_DATE15
				 , CASE WHEN A.PLAN_WEEK = #{sWeek15}
							 THEN A.WK_PLAN_QTY 
							 ELSE 0
					END WK_PLAN_QTY15
				 , CASE WHEN A.PLAN_WEEK = #{sWeek15}
							 THEN A.PLAN_QTY 
					END PLAN_QTY15
				 , CASE WHEN A.PLAN_WEEK = #{sWeek15}
							 THEN A.PLAN_AMT / M3.REF_CODE1  
					END PLAN_AMT15
				 , CASE WHEN A.PLAN_WEEK = #{sWeek15}
							 THEN A.BASE_DATE		
							 ELSE ISNULL((SELECT TOP 1 CAL_DATE
											FROM BCM400T WITH (NOLOCK)
										   WHERE CAL_TYPE	= '3'
											 AND COMP_CODE   = #{S_COMP_CODE}
											 AND CAL_DATE LIKE #{sYear15} + '%'
											 AND CAL_NO	  = SUBSTRING(#{sWeek15}, 5, 3)
											 AND WEEK_DAY	= #{BASE_WEEK}), '')
					END BASE_DATE15
				 , A.WW_DD_TYPE
			  FROM SSP200T A   WITH (NOLOCK)
						   LEFT JOIN  BPR100T M1  WITH (NOLOCK) 
								  ON  M1.COMP_CODE   = A.COMP_CODE
								 AND  M1.ITEM_CODE   = A.ITEM_CODE  
						   LEFT JOIN  BPR200T M2  WITH (NOLOCK)
								  ON  M2.COMP_CODE   = A.COMP_CODE
								 AND  M2.DIV_CODE	= A.DIV_CODE  
								 AND M2.ITEM_CODE	= A.ITEM_CODE 
						   LEFT JOIN  BSA100T M3  WITH (NOLOCK) 
								  ON M3.COMP_CODE = A.COMP_CODE 
								 AND M3.MAIN_CODE   = 'B042'   
								 AND M3.SUB_CODE	 = #{ENT_MONEY_UNIT}
			 WHERE A.DIV_CODE   =   #{DIV_CODE}
			   AND A.COMP_CODE  =  #{S_COMP_CODE}
			   AND A.APPL_DATE  =   ISNULL((SELECT MAX(APPL_DATE)
											 FROM SSP200T WITH (NOLOCK)
											WHERE DIV_CODE	= A.DIV_CODE
											  AND COMP_CODE   = A.COMP_CODE
											  AND WW_DD_TYPE  = A.WW_DD_TYPE
											  AND PLAN_TYPE1  = A.PLAN_TYPE1
											  AND ITEM_CODE   = A.ITEM_CODE
											  AND CUSTOM_CODE = A.CUSTOM_CODE
											  AND PLAN_WEEK   = A.PLAN_WEEK), '')
			   AND A.PLAN_WEEK &gt;=  #{PLAN_DATE_FR}
			   AND A.PLAN_WEEK &lt;=  #{PLAN_DATE_TO}
			   AND A.MONEY_UNIT =  #{MONEY_UNIT}
		<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">		   
			   AND A.PLAN_TYPE1 =  #{ORDER_TYPE}
		</if>
		   ) A INNER JOIN (SELECT A.COMP_CODE
								, A.ITEM_CODE
								, A.PLAN_TYPE1
		<if test="USE_CUSTOM == &quot;Y&quot;">
								, A.CUSTOM_CODE
		</if>
								, SUM(ISNULL(A.PLAN_QTY,0)) AS SUM_PLANQTY
								, SUM(ISNULL(A.PLAN_AMT,0)) AS SUM_PLANAMT
							 FROM SSP200T A
							WHERE DIV_CODE   = #{DIV_CODE}
							  AND COMP_CODE  =#{S_COMP_CODE}
							  AND WW_DD_TYPE = N'10'
							  AND PLAN_WEEK &gt;= #{PLAN_DATE_FR} 
							  AND PLAN_WEEK &lt;= #{PLAN_DATE_TO} 
							  AND MONEY_UNIT = #{MONEY_UNIT}
		<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
							  AND PLAN_TYPE1 = #{ORDER_TYPE}
		</if>
							  AND APPL_DATE  = ISNULL((SELECT MAX(APPL_DATE)
														 FROM SSP200T WITH (NOLOCK)
														WHERE DIV_CODE	= A.DIV_CODE
														  AND COMP_CODE   = A.COMP_CODE
														  AND WW_DD_TYPE  = A.WW_DD_TYPE
														  AND PLAN_TYPE1  = A.PLAN_TYPE1
														  AND ITEM_CODE   = A.ITEM_CODE
														  AND CUSTOM_CODE = A.CUSTOM_CODE
														  AND PLAN_WEEK   = A.PLAN_WEEK), '')
							GROUP BY COMP_CODE, ITEM_CODE, PLAN_TYPE1
		<if test="USE_CUSTOM == &quot;Y&quot;">
									, CUSTOM_CODE
		</if>
						  ) B ON A.COMP_CODE = B.COMP_CODE
							 AND A.ITEM_CODE = B.ITEM_CODE
							 AND A.PLAN_TYPE1 = B.PLAN_TYPE1
		<if test="USE_CUSTOM == &quot;Y&quot;">
							 AND A.CUSTOM_CODE = B.CUSTOM_CODE
		</if>
			LEFT JOIN BCM100T C ON C.COMP_CODE = A.COMP_CODE
							   AND C.CUSTOM_CODE = A.CUSTOM_CODE
			LEFT JOIN BPR200T D ON D.COMP_CODE = A.COMP_CODE
							   AND D.DIV_CODE  = A.DIV_CODE
							   AND D.ITEM_CODE = A.ITEM_CODE
	 WHERE  1=1
	   AND  A.COMP_CODE  =#{S_COMP_CODE}
	   AND  A.WW_DD_TYPE = N'10'
	
	   <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		--'계정구분
		AND A.ITEM_ACCOUNT = #{ITEM_ACCOUNT}
	   </if>
	
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_FR)">
		--품목코드 fr
		AND A.ITEM_CODE &gt;= #{ITEM_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_TO)">
		--품목코드 to
		AND A.ITEM_CODE &lt;= #{ITEM_CODE_TO}
		</if>
		
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_FR) and @foren.Ognl@isEmpty(ITEM_CODE_FR)">
		--품목명 fr
		AND D.ITEM_NAME &gt;= #{ITEM_NAME_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_TO) and @foren.Ognl@isEmpty(ITEM_CODE_TO)">
		--품목명 fr
		AND D.ITEM_NAME &lt;= #{ITEM_NAME_TO}
		</if>
	
	 GROUP BY 
		<if test="USE_CUSTOM == &quot;Y&quot;">
		 A.CUSTOM_CODE, C.CUSTOM_NAME, 
		</if>
	  A.ITEM_CODE,			A.ITEM_NAME,	A.SPEC,			A.PLAN_TYPE1,	A.MONEY_UNIT 
	, A.MONEYUNIT_FACTOR,	A.ITEM_ACCOUNT,	B.SUM_PLANQTY,	B.SUM_PLANAMT--, A.ENT_MONEY_UNIT
	--20181120 추가
	, D.ITEM_TYPE,			A.REG_YN
	 ORDER BY A.ITEM_CODE
	</select>
	
	<select id="sgp200ukrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
		--sgp200ukrv.Csgp200ukrv[fnSgp200QStdHistory] Query1
		SELECT M4.CODE_NAME AS PLAN_TYPE1, 
			<if test="USE_CUSTOM == &quot;Y&quot;">
			 A.CUSTOM_CODE, M3.CUSTOM_NAME, 
			</if>
			<if test="USE_CUSTOM != &quot;Y&quot;">
			 '' AS CUSTOM_CODE, '' AS CUSTOM_NAME, 
			</if>
			   A.ITEM_CODE
			 , UNILITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) ITEM_NAME
			 , M1.SPEC
			--20181120 추가
			 , M2.ITEM_TYPE
			 , CASE WHEN (SELECT COUNT(COMP_CODE)
						    FROM BPR500T WITH(NOLOCK) 
						   WHERE COMP_CODE = A.COMP_CODE
							 AND DIV_CODE  = A.DIV_CODE
							 AND ( PROD_ITEM_CODE = A.ITEM_CODE OR CHILD_ITEM_CODE = A.ITEM_CODE )
							 AND START_DATE &lt;= A.BASE_DATE
							 AND STOP_DATE  &gt;= A.BASE_DATE
						  ) &gt; 0 THEN '1'
					ELSE '2'
				END													AS REG_YN
			 
			 , A.PLAN_WEEK 
			 , uniLite.fnGetUserdate(A.COMP_CODE, A.APPL_DATE) AS APPL_DATE
			 , A.PLAN_QTY
			 , A.PLAN_AMT 
			 , uniLite.fnGetUserdate(A.COMP_CODE, A.BASE_DATE) AS BASE_DATE
		  FROM		SSP200T A   WITH (NOLOCK)
		  LEFT JOIN BPR100T M1  WITH (NOLOCK)	 ON  M1.ITEM_CODE	= A.ITEM_CODE
												AND  M1.COMP_CODE	= A.COMP_CODE
		  LEFT JOIN BPR200T M2  WITH (NOLOCK)	 ON  M2.COMP_CODE	= A.COMP_CODE
												AND  M2.DIV_CODE	= A.DIV_CODE
												AND  M2.ITEM_CODE	= A.ITEM_CODE
		  LEFT JOIN BCM100T M3  WITH (NOLOCK)	 ON  M3.COMP_CODE	= A.COMP_CODE
												AND  M3.CUSTOM_CODE	= A.CUSTOM_CODE
		  LEFT JOIN BSA100T M4  WITH (NOLOCK)	 ON  M4.COMP_CODE	= A.COMP_CODE
												AND  M4.MAIN_CODE	= 'S002'
												AND  M4.SUB_CODE	= A.PLAN_TYPE1
		 WHERE A.DIV_CODE		= #{DIV_CODE}
		   AND A.COMP_CODE		= #{S_COMP_CODE}
		   AND A.WW_DD_TYPE		= '10'
		   AND A.PLAN_WEEK	&gt;= #{PLAN_DATE_FR} 
		   AND A.PLAN_WEEK	&lt;= #{PLAN_DATE_TO} 
		   <if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
		   AND A.PLAN_TYPE1		= #{ORDER_TYPE}
		   </if>
		   AND A.MONEY_UNIT		= #{MONEY_UNIT}
		   AND A.ENT_MONEY_UNIT	= #{ENT_MONEY_UNIT}
		<if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
		--'계정구분
		   AND M2.ITEM_ACCOUNT	= #{ITEM_ACCOUNT}
		</if>
		
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_FR)">
		--품목코드 fr
		   AND A.ITEM_CODE	&gt;= #{ITEM_CODE_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE_TO)">
		--품목코드 to
		   AND A.ITEM_CODE	&lt;= #{ITEM_CODE_TO}
		</if>

		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_FR) and @foren.Ognl@isEmpty(ITEM_CODE_FR)">
		--품목명 fr
		   AND M1.ITEM_NAME &gt;= #{ITEM_NAME_FR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_NAME_TO) and @foren.Ognl@isEmpty(ITEM_CODE_TO)">
		--품목명 to
		   AND M1.ITEM_NAME &lt;= #{ITEM_NAME_TO}
		</if>
		

		 GROUP BY A.PLAN_TYPE1, M4.CODE_NAME, A.ITEM_CODE, M1.SPEC, A.PLAN_WEEK
				, A.APPL_DATE, A.PLAN_QTY, A.PLAN_AMT, A.BASE_DATE, A.COMP_CODE
				--20181120 추가
				, M2.ITEM_TYPE, A.DIV_CODE
		<if test="USE_CUSTOM == &quot;Y&quot;">
				, A.CUSTOM_CODE, M3.CUSTOM_NAME 
		</if>
			
		<if test="USE_CUSTOM == &quot;Y&quot;">
		 ORDER BY A.CUSTOM_CODE, M3.CUSTOM_NAME, A.ITEM_CODE, A.PLAN_WEEK DESC, A.APPL_DATE DESC
		</if>
		<if test="USE_CUSTOM != &quot;Y&quot;">
		 ORDER BY A.PLAN_TYPE1, M4.CODE_NAME, A.ITEM_CODE, A.PLAN_WEEK DESC, A.APPL_DATE DESC
		</if>
	</select>
	
	
	
	
	
	<!-- 기준요일 확인 -->	
	<select id="sgp200ukrvServiceImpl.selectRefCode" parameterType="Map" resultType="rMap">
		/* sgp200ukrvServiceImpl.selectRefCode */
		SELECT SUB_CODE
		  FROM BSA100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'B604'
		   AND REF_CODE1 = 'Y'
	</select>
	
	<!-- 고객관리여부 확인 -->	
	<select id="sgp200ukrvServiceImpl.selectRefCode2" parameterType="Map" resultType="rMap">
		/* sgp200ukrvServiceImpl.selectRefCode2 */
		SELECT TOP 1 REF_CODE1
		  FROM BSA100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'S060'
		   AND SUB_CODE != '$'
	</select>
	
	<!-- 판매단가 조회 -->
	<select id="sgp200ukrvServiceImpl.getSaleCost" parameterType="Map" resultType="rMap">
		/* sgp200ukrvServiceImpl.getSaleCost */
		SELECT SALE_BASIS_P 
		  FROM BPR100T WITH (NOLOCK)
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND ITEM_CODE  = #{ITEM_CODE}
	</select>
	
	
	
	
	
	<!-- 입력(신규/수정) 1. 적용일자가 존재하고 수량/금액이 0이 아닌 경우 -->
	<insert id="sgp200ukrvServiceImpl.insertList" parameterType="Map">
		/* sgp200ukrvServiceImpl.insertList */
		DECLARE @COMP_CODE			NVARCHAR(08)
			  , @DIV_CODE			NVARCHAR(08)
			  , @ITEM_CODE			NVARCHAR(20)
			  , @WW_DD_TYPE			NVARCHAR(04)
			  , @PLAN_TYPE1			NVARCHAR(02)
			  , @CUSTOM_CODE		NVARCHAR(20)
			  , @PLAN_WEEK			NVARCHAR(07)
			  , @APPL_DATE			NVARCHAR(08)
			  , @BASE_DATE			NVARCHAR(08)
			  , @realAmt			NUMERIC(30, 6)

		   SET @COMP_CODE	= #{S_COMP_CODE}
		   SET @DIV_CODE	= #{DIV_CODE}
		   SET @ITEM_CODE	= #{ITEM_CODE}
		   SET @WW_DD_TYPE	= '10'
		   SET @PLAN_TYPE1	= #{PLAN_TYPE1}
		   SET @CUSTOM_CODE	= #{CUSTOM_CODE}
		   SET @PLAN_WEEK	= #{PLAN_WEEK}
		   SET @APPL_DATE	= #{APPL_DATE}
		   SET @BASE_DATE	= #{BASE_DATE}
		   
		   SET @COMP_CODE	= ISNULL(@COMP_CODE		, '')
		   SET @DIV_CODE	= ISNULL(@DIV_CODE		, '')
		   SET @ITEM_CODE	= ISNULL(@ITEM_CODE		, '')
		   SET @PLAN_TYPE1	= ISNULL(@PLAN_TYPE1	, '')
		   SET @CUSTOM_CODE	= ISNULL(@CUSTOM_CODE	, '')
		   SET @PLAN_WEEK	= ISNULL(@PLAN_WEEK		, '')
		   SET @APPL_DATE	= ISNULL(@APPL_DATE		, '')
		   SET @BASE_DATE	= ISNULL(@BASE_DATE		, '')
		   

		SELECT @PLAN_WEEK = CAL_NO
		  FROM BCM420T WITH (NOLOCK)
		 WHERE COMP_CODE = @COMP_CODE
		   AND CAL_TYPE  = '3'
		   AND @BASE_DATE BETWEEN START_DATE AND END_DATE

		SELECT @realAmt = REF_CODE1
		  FROM BSA100T WITH (NOLOCK)
		 WHERE COMP_CODE = @COMP_CODE
		   AND MAIN_CODE = 'B042'
		   AND SUB_CODE  = #{P_ENT_MONEY_UNIT}
		   
		   
		MERGE INTO SSP200T									A
		USING ( SELECT @COMP_CODE		AS COMP_CODE
					 , @DIV_CODE		AS DIV_CODE
					 , @ITEM_CODE		AS ITEM_CODE
					 , @WW_DD_TYPE		AS WW_DD_TYPE
					 , @PLAN_TYPE1		AS PLAN_TYPE1
					 , @CUSTOM_CODE		AS CUSTOM_CODE
					 , @PLAN_WEEK		AS PLAN_WEEK
					 , @APPL_DATE		AS APPL_DATE
					 , @BASE_DATE		AS BASE_DATE
			  )												B		ON B.COMP_CODE		= A.COMP_CODE
																   AND B.DIV_CODE		= A.DIV_CODE
																   AND B.ITEM_CODE		= A.ITEM_CODE
																   AND B.WW_DD_TYPE		= A.WW_DD_TYPE
																   AND B.PLAN_TYPE1		= A.PLAN_TYPE1
																   AND B.CUSTOM_CODE	= A.CUSTOM_CODE
																   AND B.PLAN_WEEK		= A.PLAN_WEEK
																   AND B.APPL_DATE		= A.APPL_DATE
																   AND B.BASE_DATE		= A.BASE_DATE
							   
		WHEN MATCHED THEN
			UPDATE
			   SET PLAN_QTY			= #{PLAN_QTY}
				 , PLAN_AMT			= #{PLAN_AMT} * @realAmt
				 , PLAN_TYPE1		= #{PLAN_TYPE1}
				 , MONEY_UNIT		= #{MONEY_UNIT}
				 , ENT_MONEY_UNIT	= #{P_ENT_MONEY_UNIT}
				 , UPDATE_DB_USER	= #{S_USER_ID}
				 , UPDATE_DB_TIME	= GETDATE()

		WHEN NOT MATCHED THEN
			INSERT (
					  COMP_CODE,		CUSTOM_CODE,		WW_DD_TYPE
					, DIV_CODE,			ITEM_CODE,			PLAN_WEEK,			APPL_DATE,			PLAN_TYPE1
					, MONEY_UNIT,		ENT_MONEY_UNIT,		PLAN_QTY,			PLAN_AMT,			BASE_DATE
					, BASE_WEEKDAY,		INSERT_DB_USER,		INSERT_DB_TIME,		UPDATE_DB_USER,		UPDATE_DB_TIME

			) VALUES(
					  @COMP_CODE,		@CUSTOM_CODE,		@WW_DD_TYPE
					, @DIV_CODE,		@ITEM_CODE,			@PLAN_WEEK,			@APPL_DATE,				@PLAN_TYPE1
					, #{MONEY_UNIT},	#{P_ENT_MONEY_UNIT},#{PLAN_QTY},		#{PLAN_AMT} * @realAmt,	@BASE_DATE
					, #{BASE_WEEK},		#{S_USER_ID},		GETDATE(),			#{S_USER_ID},			GETDATE()
			);
	</insert>
	
	<!-- 삭제 1. 적용일자가 존재하고 수량/금액이 0인 경우 또는 삭제-->
	<update id="sgp200ukrvServiceImpl.deleteList1" parameterType="Map">
		/* sgp200ukrvServiceImpl.deleteList1 */
		DECLARE @COMP_CODE			NVARCHAR(08)			--법인
			  , @DIV_CODE			NVARCHAR(08)			--사업장
			  , @ITEM_CODE			NVARCHAR(20)			--품목
			  , @WW_DD_TYPE			NVARCHAR(04)			--주간 일간 구분(10:주간, 20:일간)
			  , @PLAN_TYPE1			NVARCHAR(02)			--판매유형
			  , @CUSTOM_CODE		NVARCHAR(20)			--거래처
			  , @PLAN_WEEK			NVARCHAR(07)			--계획주간
			  , @APPL_DATE			NVARCHAR(08)			--적용일자
			  , @BASE_DATE			NVARCHAR(08)			--기준일자
--			  , @BASE_MONTH			NVARCHAR(08)			--기준월
			  , @BASE_YEAR			NVARCHAR(08)			--기준년도

		   SET @COMP_CODE	= #{S_COMP_CODE}
		   SET @DIV_CODE	= #{DIV_CODE}
		   SET @ITEM_CODE	= #{ITEM_CODE}
		   SET @WW_DD_TYPE	= '10'
		   SET @PLAN_TYPE1	= #{PLAN_TYPE1}
		   SET @CUSTOM_CODE	= #{CUSTOM_CODE}
		   SET @PLAN_WEEK	= #{PLAN_WEEK}
		   SET @APPL_DATE	= #{APPL_DATE}
		   SET @BASE_DATE	= #{BASE_DATE}
--		   SET @BASE_MONTH	= BASE_MONTH
		   
		   SET @COMP_CODE	= ISNULL(@COMP_CODE		, '')
		   SET @DIV_CODE	= ISNULL(@DIV_CODE		, '')
		   SET @ITEM_CODE	= ISNULL(@ITEM_CODE		, '')
		   SET @PLAN_TYPE1	= ISNULL(@PLAN_TYPE1	, '')
		   SET @CUSTOM_CODE	= ISNULL(@CUSTOM_CODE	, '')
		   SET @PLAN_WEEK	= ISNULL(@PLAN_WEEK		, '')
		   SET @APPL_DATE	= ISNULL(@APPL_DATE		, '')
		   SET @BASE_DATE	= ISNULL(@BASE_DATE		, '')
		   SET @BASE_YEAR	= SUBSTRING(@BASE_DATE, 1, 4)
		   
		   
		 /* sgp200ukrv.Csgp200ukrv[fnSgp200Save] Query5 */
		 UPDATE SSP100T
			SET MOD_PLAN_Q${BASE_MONTH}		= 0
			  , MOD_PLAN_AMT${BASE_MONTH}	= 0
			  , UPDATE_DB_USER				= #{S_USER_ID}
			  , UPDATE_DB_TIME				= GETDATE()
		  WHERE COMP_CODE		= @COMP_CODE
			AND DIV_CODE		= @DIV_CODE
			AND PLAN_YEAR		= @BASE_YEAR
			AND PLAN_TYPE1		= @PLAN_TYPE1
			AND PLAN_TYPE2		= '3'
			AND PLAN_TYPE2_CODE	= @ITEM_CODE
			AND LEVEL_KIND		= '*'
			AND MONEY_UNIT		= #{MONEY_UNIT}
	</update>

	<!-- 삭제 2. 적용일자가 존재하고 수량/금액이 0인 경우 또는 삭제 -->
	<update id="sgp200ukrvServiceImpl.deleteList2" parameterType="Map">
		/* sgp200ukrvServiceImpl.deleteList2 */
		DECLARE @COMP_CODE			NVARCHAR(08)
			  , @DIV_CODE			NVARCHAR(08)
			  , @ITEM_CODE			NVARCHAR(20)
			  , @WW_DD_TYPE			NVARCHAR(04)
			  , @PLAN_TYPE1			NVARCHAR(02)
			  , @CUSTOM_CODE		NVARCHAR(20)
			  , @PLAN_WEEK			NVARCHAR(07)
			  , @APPL_DATE			NVARCHAR(08)
			  , @BASE_DATE			NVARCHAR(08)

		   SET @COMP_CODE	= #{S_COMP_CODE}
		   SET @DIV_CODE	= #{DIV_CODE}
		   SET @ITEM_CODE	= #{ITEM_CODE}
		   SET @WW_DD_TYPE	= '10'
		   SET @PLAN_TYPE1	= #{PLAN_TYPE1}
		   SET @CUSTOM_CODE	= #{CUSTOM_CODE}
		   SET @PLAN_WEEK	= #{PLAN_WEEK}
		   SET @APPL_DATE	= #{APPL_DATE}
		   SET @BASE_DATE	= #{BASE_DATE}
		   
		   SET @COMP_CODE	= ISNULL(@COMP_CODE		, '')
		   SET @DIV_CODE	= ISNULL(@DIV_CODE		, '')
		   SET @ITEM_CODE	= ISNULL(@ITEM_CODE		, '')
		   SET @PLAN_TYPE1	= ISNULL(@PLAN_TYPE1	, '')
		   SET @CUSTOM_CODE	= ISNULL(@CUSTOM_CODE	, '')
		   SET @PLAN_WEEK	= ISNULL(@PLAN_WEEK		, '')
		   SET @APPL_DATE	= ISNULL(@APPL_DATE		, '')
		   SET @BASE_DATE	= ISNULL(@BASE_DATE		, '')
		   

		SELECT @PLAN_WEEK = CAL_NO
		  FROM BCM420T WITH (NOLOCK)
		 WHERE COMP_CODE = @COMP_CODE
		   AND CAL_TYPE  = '3'
		   AND @BASE_DATE BETWEEN START_DATE AND END_DATE
		   
		/* sgp200ukrv.Csgp200ukrv[fnSgp200Save] Query6  */
		DELETE SSP200T 
		 WHERE COMP_CODE	= @COMP_CODE
		   AND DIV_CODE		= @DIV_CODE
		   AND WW_DD_TYPE	= '10'
		   AND PLAN_TYPE1	= @PLAN_TYPE1
		   AND CUSTOM_CODE	= @CUSTOM_CODE
		   AND ITEM_CODE	= @ITEM_CODE
		   AND PLAN_WEEK	= @PLAN_WEEK
		   AND APPL_DATE	= @APPL_DATE
		   AND BASE_DATE	= @BASE_DATE
	</update>


	<!-- 월간 품목별 판매계획에 반영 -->
	<select id="sgp200ukrvServiceImpl.getDataInfo" parameterType="Map" resultType="rMap">
		/* sgp200ukrvServiceImpl.getDataInfo */
		--sgp200ukrv.Csgp200ukrv[fnSgp200Save] Query9
		SELECT COMP_CODE
			 , DIV_CODE
			 , ITEM_CODE
			 , SUBSTRING(BASE_DATE, 1, 4) PLAN_YEAR 
			 , SUBSTRING(BASE_DATE, 1, 6) BASE_MONTH
			 , PLAN_TYPE1
			 , MONEY_UNIT
			 , ENT_MONEY_UNIT
			 , ISNULL(SUM(PLAN_QTY), 0.0) PLAN_QTY
			 , ISNULL(SUM(PLAN_AMT), 0.0) PLAN_AMT
		  FROM SSP200T A WITH (NOLOCK)
		 WHERE COMP_CODE		= #{S_COMP_CODE}
		   AND DIV_CODE			= #{DIV_CODE}
		   AND APPL_DATE		= ISNULL((SELECT MAX(APPL_DATE)
											FROM SSP200T WITH (NOLOCK)
										   WHERE COMP_CODE	= A.COMP_CODE
											 AND DIV_CODE	= A.DIV_CODE
											 AND WW_DD_TYPE	= A.WW_DD_TYPE
											 AND PLAN_TYPE1	= A.PLAN_TYPE1
											 AND ITEM_CODE	= A.ITEM_CODE
											 AND PLAN_WEEK	= A.PLAN_WEEK), '')
		   AND PLAN_TYPE1		= #{PLAN_TYPE1}
		   AND MONEY_UNIT		= #{MONEY_UNIT}
		   AND ENT_MONEY_UNIT	= #{ENT_MONEY_UNIT}
		   AND PLAN_WEEK BETWEEN #{PLAN_WEEK_FR} AND #{PLAN_WEEK_TO}
		 GROUP BY COMP_CODE,	DIV_CODE,	ITEM_CODE,	SUBSTRING(BASE_DATE, 1, 4),	SUBSTRING(BASE_DATE, 1, 6)
				, PLAN_TYPE1,	MONEY_UNIT,	ENT_MONEY_UNIT
	</select>

	<insert id="sgp200ukrvServiceImpl.insertMonth" parameterType="Map">
		/* sgp200ukrvServiceImpl.insertMonth */
		DECLARE @COMP_CODE			NVARCHAR(08)
			  , @DIV_CODE			NVARCHAR(08)
			  , @PLAN_YEAR			NVARCHAR(04)
			  , @PLAN_TYPE1			NVARCHAR(02)
			  , @PLAN_TYPE2			NVARCHAR(02)
			  , @PLAN_TYPE2_CODE	NVARCHAR(20)
			  , @MONEY_UNIT			NVARCHAR(08)
--			  , @BASE_MONTH			NVARCHAR(08)			--기준월

		   SET @COMP_CODE		= #{S_COMP_CODE}
		   SET @DIV_CODE		= #{DIV_CODE}
		   SET @PLAN_YEAR		= #{PLAN_YEAR}
		   SET @PLAN_TYPE1		= #{PLAN_TYPE1}
		   SET @PLAN_TYPE2		= '3'
		   SET @PLAN_TYPE2_CODE	= #{ITEM_CODE}
		   SET @MONEY_UNIT		= #{MONEY_UNIT}
--		   SET @BASE_MONTH		= BASE_MONTH
		   
		   SET @COMP_CODE		= ISNULL(@COMP_CODE			, '')
		   SET @DIV_CODE		= ISNULL(@DIV_CODE			, '')
		   SET @PLAN_YEAR		= ISNULL(@PLAN_YEAR			, '')
		   SET @PLAN_TYPE1		= ISNULL(@PLAN_TYPE1		, '')
		   SET @PLAN_TYPE2		= ISNULL(@PLAN_TYPE2		, '')
		   SET @PLAN_TYPE2_CODE	= ISNULL(@PLAN_TYPE2_CODE	, '')
		   SET @MONEY_UNIT		= ISNULL(@MONEY_UNIT		, 'KRW')
		   
		   
		MERGE INTO SSP100T									A
		USING ( SELECT @COMP_CODE		AS COMP_CODE
					 , @DIV_CODE		AS DIV_CODE
					 , @PLAN_YEAR		AS PLAN_YEAR
					 , @PLAN_TYPE1		AS PLAN_TYPE1
					 , @PLAN_TYPE2		AS PLAN_TYPE2
					 , @PLAN_TYPE2_CODE	AS PLAN_TYPE2_CODE
					 , '*'				AS LEVEL_KIND
					 , @MONEY_UNIT		AS MONEY_UNIT
			  )												B		ON B.COMP_CODE			= A.COMP_CODE
																   AND B.DIV_CODE			= A.DIV_CODE
																   AND B.PLAN_YEAR			= A.PLAN_YEAR
																   AND B.PLAN_TYPE1			= A.PLAN_TYPE1
																   AND B.PLAN_TYPE2			= A.PLAN_TYPE2
																   AND B.PLAN_TYPE2_CODE	= A.PLAN_TYPE2_CODE
																   AND B.LEVEL_KIND			= A.LEVEL_KIND
																   AND B.MONEY_UNIT			= A.MONEY_UNIT
							   
		WHEN MATCHED THEN
			UPDATE
			   SET MOD_PLAN_Q${BASE_MONTH}		= #{PLAN_QTY}
			     , MOD_PLAN_AMT${BASE_MONTH}	= #{PLAN_AMT}
				 , UPDATE_DB_USER	= #{S_USER_ID}
				 , UPDATE_DB_TIME	= GETDATE()

		WHEN NOT MATCHED THEN
			INSERT (
					  COMP_CODE,		DIV_CODE,			PLAN_YEAR
					, MOD_PLAN_Q${BASE_MONTH}
					, MOD_PLAN_AMT${BASE_MONTH}
					, PLAN_TYPE1,		PLAN_TYPE2,			PLAN_TYPE2_CODE,	LEVEL_KIND,			MONEY_UNIT
					, ENT_MONEY_UNIT,	CONFIRM_YN,			INSERT_DB_USER,		INSERT_DB_TIME,		UPDATE_DB_USER,		UPDATE_DB_TIME

			) VALUES(
					  @COMP_CODE,		@DIV_CODE,			@PLAN_YEAR
					, #{PLAN_QTY}
					, #{PLAN_AMT}
					, @PLAN_TYPE1,		'3',				@PLAN_TYPE2_CODE,	'*',			@MONEY_UNIT
					, #{ENT_MONEY_UNIT},'Y',				#{S_USER_ID},		GETDATE(),		#{S_USER_ID},		GETDATE()
			);
	</insert>





<!-- Excel Upload-->
	<update id="sgp200ukrvServiceImpl.insertExcelSgp200ukrvUpload" parameterType="Map">
		/* temp Table에 insert */	
		INSERT INTO SGP200T_XLS
			(
			   _EXCEL_JOBID
			 , _EXCEL_ROWNUM
			 , _EXCEL_HAS_ERROR
			 , _EXCEL_ERROR_MSG
			 , COMP_CODE
			 
			 , CUSTOM_CODE
			 , CUSTOM_NAME
			 , ITEM_CODE
			 , W1
			 , W2
			 , W3
			 , W4
			 , W5
			 , W6
			 , W7
			 , W8
			 , W9
			 , W10
			 , W11
			 , W12
			 
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
		)
		VALUES (
			   #{_EXCEL_JOBID} 
			 , #{_EXCEL_ROWNUM} 
			 , #{_EXCEL_HAS_ERROR	,jdbcType=VARCHAR}
			 , #{_EXCEL_ERROR		,jdbcType=VARCHAR}
			 , #{S_COMP_CODE}
			 
			 , #{CUSTOM_CODE}
			 , #{CUSTOM_NAME}
			 , #{ITEM_CODE}
			 , #{W1}
			 , #{W2}
			 , #{W3}
			 , #{W4}
			 , #{W5}
			 , #{W6}
			 , #{W7}
			 , #{W8}
			 , #{W9}
			 , #{W10}
			 , #{W11}
			 , #{W12}
			 
			 , #{S_USER_ID}
			 , GETDATE()
		)
	</update>

	<!-- 임시 테이블에 insert된 데이터 조회 -->
	<select id="sgp200ukrvServiceImpl.getData" parameterType="Map" resultType="rMap">
		SELECT *
		  FROM		SGP200T_XLS WITH(NOLOCK)
		 WHERE _EXCEL_JOBID	= #{_EXCEL_JOBID}
		   AND CUSTOM_CODE != 'CUSTOM CODE'
	</select>
	
	<!-- 업로드 된 데이터의 유효성 체크 1) -->
	<select id="sgp200ukrvServiceImpl.checkItem" parameterType="Map" resultType="String">
		DECLARE @CHECK_DATA NVARCHAR(01)
			SET @CHECK_DATA = 'N'
			
		IF EXISTS (
					SELECT TOP 1 1
					  FROM BPR100T WITH(NOLOCK)
					 WHERE COMP_CODE = #{COMP_CODE}
					   AND ITEM_CODE = #{ITEM_CODE}
				  )
			BEGIN 
				SET @CHECK_DATA = 'Y'
			END

  		IF EXISTS (
					SELECT TOP 1 1
					  FROM BPR300T WITH(NOLOCK)
					 WHERE COMP_CODE		= #{COMP_CODE}
					   AND TYPE				= '2'
					   AND DIV_CODE			= #{DIV_CODE}
					   AND CUSTOM_CODE		= #{CUSTOM_CODE}
					   AND CUSTOM_ITEM_CODE		= #{ITEM_CODE}
					   AND APLY_START_DATE	= (SELECT MAX(APLY_START_DATE)
												 FROM BPR300T WITH(NOLOCK)
												WHERE COMP_CODE 		= #{COMP_CODE}
												  AND TYPE				= '2'
												  AND DIV_CODE			= #{DIV_CODE}
												  AND CUSTOM_CODE		= #{CUSTOM_CODE}
												  AND CUSTOM_ITEM_CODE	= #{ITEM_CODE})
				  )
			BEGIN 
				SET @CHECK_DATA = 'Y'
			END
			
		SELECT @CHECK_DATA AS CHECK_DATA
	</select>

	<!-- 업로드 된 데이터의 유효성 체크 2 -->
	<select id="sgp200ukrvServiceImpl.checkCust" parameterType="Map" resultType="String">
		DECLARE @CHECK_DATA NVARCHAR(01)
			SET @CHECK_DATA = 'N'
			
		IF EXISTS (
					SELECT TOP 1 1
					  FROM BCM100T WITH(NOLOCK)
					 WHERE COMP_CODE	= #{COMP_CODE}
					   AND CUSTOM_CODE	= #{CUSTOM_CODE}
				  )
			BEGIN 
				SET @CHECK_DATA = 'Y'
			END
			
		SELECT @CHECK_DATA AS CHECK_DATA
	</select>

	<!-- 에러메세지 insert -->
	<update id="sgp200ukrvServiceImpl.insertErrorMsg">
		UPDATE SGP200T_XLS 
		   SET _EXCEL_ERROR_MSG = #{MSG}
			 , _EXCEL_HAS_ERROR	= 'Y'
		 WHERE _EXCEL_JOBID	 = #{_EXCEL_JOBID}
		   AND _EXCEL_ROWNUM	= #{ROWNUM}
	</update>  

	<select id="sgp200ukrvServiceImpl.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
		/*sgp200ukrvServiceImpl.selectExcelUploadSheet1*/
		--1.주차 확인
		SELECT A._EXCEL_JOBID
			 , A._EXCEL_ROWNUM
			 , A._EXCEL_HAS_ERROR
			 , A._EXCEL_ERROR_MSG
			 , A.COMP_CODE
			 , A.CUSTOM_CODE
			 , A.CUSTOM_NAME
			 , A.ITEM_CODE
			 , A.W1
			 , A.W2
			 , A.W3
			 , A.W4
			 , A.W5
			 , A.W6
			 , A.W7
			 , A.W8
			 , A.W9
			 , A.W10
			 , A.W11
			 , A.W12
		  FROM		 SGP200T_XLS A WITH(NOLOCK)
		 WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
		   AND A.CUSTOM_CODE != 'CUSTOM CODE'
		 ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
	</select>

	<!-- 업로드 한 데이터를 masterGrid1에 set하기 위해 select -->
	<select id="sgp200ukrvServiceImpl.selectUploadData" parameterType="Map" resultType="rMap">
		/*sgp200ukrvServiceImpl.selectUploadData */
		DECLARE @EXCEL_JOBID		NVARCHAR(32)
			  , @COMP_CODE			NVARCHAR(08)
			  , @DIV_CODE			NVARCHAR(08)
			  , @PLAN_TYPE1			NVARCHAR(02)
			  , @PLAN_YEAR			NVARCHAR(04)
			  , @APPL_DATE			NVARCHAR(08)
			  , @MONEY_UNIT			NVARCHAR(03)
			  , @ENT_MONEY_UNIT		NVARCHAR(01)
			  , @BASE_WEEK			NVARCHAR(01)
			  , @START_WEEK			NVARCHAR(07)

		   SET @EXCEL_JOBID	= #{_EXCEL_JOBID}
		   SET @COMP_CODE	= #{S_COMP_CODE}
		   SET @DIV_CODE	= #{DIV_CODE}
		   SET @PLAN_TYPE1	= #{ORDER_TYPE}
		   SET @PLAN_YEAR	= #{PLAN_YEAR}
		   SET @APPL_DATE	= CONVERT(NVARCHAR(08), GETDATE(), 112)
		   SET @MONEY_UNIT		= #{MONEY_UNIT}
		   SET @ENT_MONEY_UNIT	= #{ENT_MONEY_UNIT}
		   SET @BASE_WEEK		= #{BASE_WEEK}
		   

		   SET @COMP_CODE	= ISNULL(@COMP_CODE		, '')
		   SET @DIV_CODE	= ISNULL(@DIV_CODE		, '')
		   SET @PLAN_TYPE1	= ISNULL(@PLAN_TYPE1	, '')
		   SET @PLAN_YEAR	= ISNULL(@PLAN_YEAR		, '')
		   SET @MONEY_UNIT		= ISNULL(@MONEY_UNIT	, 'KRW')
		   SET @ENT_MONEY_UNIT	= ISNULL(@ENT_MONEY_UNIT, 1)
		   SET @BASE_WEEK		= ISNULL(@BASE_WEEK		, 1)
		   

		--화면에 SET할 데이터 가져오기
		SELECT @START_WEEK = @PLAN_YEAR + RIGHT(('00' + REPLACE(W1, 'W', '')), 3)
		  FROM SGP200T_XLS WITH(NOLOCK)
		 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
		   AND CUSTOM_CODE	= 'CUSTOM CODE'

		SELECT A.COMP_CODE
			 , A.CUSTOM_CODE
			 , C.CUSTOM_NAME
			 , CASE WHEN ISNULL(B.ITEM_NAME, '') ='' THEN B1.ITEM_CODE
					ELSE B.ITEM_CODE
			   END													AS ITEM_CODE
			 , CASE WHEN ISNULL(B.ITEM_NAME, '') ='' THEN B2.ITEM_NAME
					ELSE B.ITEM_NAME
			   END													AS ITEM_NAME
			 , B.SPEC
			 , @START_WEEK											AS START_WEEK
			 , @PLAN_TYPE1											AS PLAN_TYPE1
			 , @MONEY_UNIT											AS MONEY_UNIT
			 , @ENT_MONEY_UNIT										AS ENT_MONEY_UNIT
			 , ISNULL(M3.REF_CODE1, 1.0)							AS MONEYUNIT_FACTOR
			 , M2.ITEM_ACCOUNT										AS ITEM_ACCOUNT
			 , (CONVERT(FLOAT,  A.W1)
			  + CONVERT(FLOAT,  A.W2)
			  + CONVERT(FLOAT,  A.W3)
			  + CONVERT(FLOAT,  A.W4)
			  + CONVERT(FLOAT,  A.W5)
			  + CONVERT(FLOAT,  A.W6)
			  + CONVERT(FLOAT,  A.W7)
			  + CONVERT(FLOAT,  A.W8)
			  + CONVERT(FLOAT,  A.W9)
			  + CONVERT(FLOAT,  A.W10)
			  + CONVERT(FLOAT,  A.W11)
			  + CONVERT(FLOAT,  A.W12))								AS SUM_PLANQTY
			 , (CONVERT(FLOAT,  A.W1)
			  + CONVERT(FLOAT,  A.W2)
			  + CONVERT(FLOAT,  A.W3)
			  + CONVERT(FLOAT,  A.W4)
			  + CONVERT(FLOAT,  A.W5)
			  + CONVERT(FLOAT,  A.W6)
			  + CONVERT(FLOAT,  A.W7)
			  + CONVERT(FLOAT,  A.W8)
			  + CONVERT(FLOAT,  A.W9)
			  + CONVERT(FLOAT,  A.W10)
			  + CONVERT(FLOAT,  A.W11)
			  + CONVERT(FLOAT,  A.W12))	* B.SALE_BASIS_P			AS SUM_PLANAMT

			--W1
			 , @APPL_DATE											AS APPL_DATE0
			 , 0													AS WK_PLAN_QTY0
			 , A.W1													AS PLAN_QTY0
			 , CASE WHEN ISNULL(B1.ORDER_P, 0) = 0 THEN B.SALE_BASIS_P * CONVERT(FLOAT,  A.W1)
					ELSE B1.ORDER_P * CONVERT(FLOAT,  A.W1)
			   END													AS PLAN_AMT0
			 , (		
				SELECT uniLITE.fnGetUserDate(@COMP_CODE, CAL_DATE) AS BASIC_DATE
				  FROM BCM400T WITH (NOLOCK)
				 WHERE COMP_CODE	= @COMP_CODE
				   AND CAL_TYPE		= '3'
				   AND CAL_DATE	&gt;= (SELECT MIN(START_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @START_WEEK
									)
				   AND CAL_DATE &lt;= (SELECT MAX(END_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @START_WEEK
									)
				   AND WEEK_DAY  = @BASE_WEEK)						AS BASE_DATE0
				   
			--W2
			 , @APPL_DATE											AS APPL_DATE1
			 , 0													AS WK_PLAN_QTY1
			 , A.W2													AS PLAN_QTY1
			 , CASE WHEN ISNULL(B1.ORDER_P, 0) = 0 THEN B.SALE_BASIS_P * CONVERT(FLOAT,  A.W2)
					ELSE B1.ORDER_P * CONVERT(FLOAT,  A.W2)
			   END													AS PLAN_AMT1
			 , (		
				SELECT uniLITE.fnGetUserDate(@COMP_CODE, CAL_DATE) AS BASIC_DATE
				  FROM BCM400T WITH (NOLOCK)
				 WHERE COMP_CODE	= @COMP_CODE
				   AND CAL_TYPE		= '3'
				   AND CAL_DATE	&gt;= (SELECT MIN(START_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W2, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND CAL_DATE &lt;= (SELECT MAX(END_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W2, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND WEEK_DAY  = @BASE_WEEK)						AS BASE_DATE1

			--W3
			 , @APPL_DATE											AS APPL_DATE2
			 , 0													AS WK_PLAN_QTY2
			 , A.W3													AS PLAN_QTY2
			 , CASE WHEN ISNULL(B1.ORDER_P, 0) = 0 THEN B.SALE_BASIS_P * CONVERT(FLOAT,  A.W3)
					ELSE B1.ORDER_P * CONVERT(FLOAT,  A.W3)
			   END													AS PLAN_AMT2
			 , (		
				SELECT uniLITE.fnGetUserDate(@COMP_CODE, CAL_DATE) AS BASIC_DATE
				  FROM BCM400T WITH (NOLOCK)
				 WHERE COMP_CODE	= @COMP_CODE
				   AND CAL_TYPE		= '3'
				   AND CAL_DATE	&gt;= (SELECT MIN(START_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W3, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND CAL_DATE &lt;= (SELECT MAX(END_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W3, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND WEEK_DAY  = @BASE_WEEK)						AS BASE_DATE2

			--W4
			 , @APPL_DATE											AS APPL_DATE3
			 , 0													AS WK_PLAN_QTY3
			 , A.W4													AS PLAN_QTY3
			 , CASE WHEN ISNULL(B1.ORDER_P, 0) = 0 THEN B.SALE_BASIS_P * CONVERT(FLOAT,  A.W4)
					ELSE B1.ORDER_P * CONVERT(FLOAT,  A.W4)
			   END																	AS PLAN_AMT3
			 , (		
				SELECT uniLITE.fnGetUserDate(@COMP_CODE, CAL_DATE) AS BASIC_DATE
				  FROM BCM400T WITH (NOLOCK)
				 WHERE COMP_CODE	= @COMP_CODE
				   AND CAL_TYPE		= '3'
				   AND CAL_DATE	&gt;= (SELECT MIN(START_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W4, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND CAL_DATE &lt;= (SELECT MAX(END_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W4, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND WEEK_DAY  = @BASE_WEEK)						AS BASE_DATE3

			--W5
			 , @APPL_DATE											AS APPL_DATE4
			 , 0													AS WK_PLAN_QTY4
			 , A.W5													AS PLAN_QTY4
			 , CASE WHEN ISNULL(B1.ORDER_P, 0) = 0 THEN B.SALE_BASIS_P * CONVERT(FLOAT,  A.W5)
					ELSE B1.ORDER_P * CONVERT(FLOAT,  A.W5)
			   END													AS PLAN_AMT4
			 , (		
				SELECT uniLITE.fnGetUserDate(@COMP_CODE, CAL_DATE) AS BASIC_DATE
				  FROM BCM400T WITH (NOLOCK)
				 WHERE COMP_CODE	= @COMP_CODE
				   AND CAL_TYPE		= '3'
				   AND CAL_DATE	&gt;= (SELECT MIN(START_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W5, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND CAL_DATE &lt;= (SELECT MAX(END_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W5, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND WEEK_DAY  = @BASE_WEEK)						AS BASE_DATE4

			--W6
			 , @APPL_DATE											AS APPL_DATE5
			 , 0													AS WK_PLAN_QTY5
			 , A.W6													AS PLAN_QTY5
			 , CASE WHEN ISNULL(B1.ORDER_P, 0) = 0 THEN B.SALE_BASIS_P * CONVERT(FLOAT,  A.W6)
					ELSE B1.ORDER_P * CONVERT(FLOAT,  A.W6)
			   END													AS PLAN_AMT5
			 , (		
				SELECT uniLITE.fnGetUserDate(@COMP_CODE, CAL_DATE) AS BASIC_DATE
				  FROM BCM400T WITH (NOLOCK)
				 WHERE COMP_CODE	= @COMP_CODE
				   AND CAL_TYPE		= '3'
				   AND CAL_DATE	&gt;= (SELECT MIN(START_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W6, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND CAL_DATE &lt;= (SELECT MAX(END_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W6, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND WEEK_DAY  = @BASE_WEEK)						AS BASE_DATE5

			--W7
			 , @APPL_DATE											AS APPL_DATE6
			 , 0													AS WK_PLAN_QTY6
			 , A.W7													AS PLAN_QTY6
			 , CASE WHEN ISNULL(B1.ORDER_P, 0) = 0 THEN B.SALE_BASIS_P * CONVERT(FLOAT,  A.W7)
					ELSE B1.ORDER_P * CONVERT(FLOAT,  A.W7)
			   END													AS PLAN_AMT6
			 , (		
				SELECT uniLITE.fnGetUserDate(@COMP_CODE, CAL_DATE) AS BASIC_DATE
				  FROM BCM400T WITH (NOLOCK)
				 WHERE COMP_CODE	= @COMP_CODE
				   AND CAL_TYPE		= '3'
				   AND CAL_DATE	&gt;= (SELECT MIN(START_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W7, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND CAL_DATE &lt;= (SELECT MAX(END_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W7, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND WEEK_DAY  = @BASE_WEEK)						AS BASE_DATE6

			--W8
			 , @APPL_DATE											AS APPL_DATE7
			 , 0													AS WK_PLAN_QTY7
			 , A.W8													AS PLAN_QTY7
			 , CASE WHEN ISNULL(B1.ORDER_P, 0) = 0 THEN B.SALE_BASIS_P * CONVERT(FLOAT,  A.W8)
					ELSE B1.ORDER_P * CONVERT(FLOAT,  A.W8)
			   END													AS PLAN_AMT7
			 , (		
				SELECT uniLITE.fnGetUserDate(@COMP_CODE, CAL_DATE) AS BASIC_DATE
				  FROM BCM400T WITH (NOLOCK)
				 WHERE COMP_CODE	= @COMP_CODE
				   AND CAL_TYPE		= '3'
				   AND CAL_DATE	&gt;= (SELECT MIN(START_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W8, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND CAL_DATE &lt;= (SELECT MAX(END_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W8, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND WEEK_DAY  = @BASE_WEEK)						AS BASE_DATE7

			--W9
			 , @APPL_DATE											AS APPL_DATE8
			 , 0													AS WK_PLAN_QTY8
			 , A.W9													AS PLAN_QTY8
			 , CASE WHEN ISNULL(B1.ORDER_P, 0) = 0 THEN B.SALE_BASIS_P * CONVERT(FLOAT,  A.W9)
					ELSE B1.ORDER_P * CONVERT(FLOAT,  A.W9)
			   END													AS PLAN_AMT8
			 , (		
				SELECT uniLITE.fnGetUserDate(@COMP_CODE, CAL_DATE) AS BASIC_DATE
				  FROM BCM400T WITH (NOLOCK)
				 WHERE COMP_CODE	= @COMP_CODE
				   AND CAL_TYPE		= '3'
				   AND CAL_DATE	&gt;= (SELECT MIN(START_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W9, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND CAL_DATE &lt;= (SELECT MAX(END_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W9, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND WEEK_DAY  = @BASE_WEEK)						AS BASE_DATE8

			--W10
			 , @APPL_DATE											AS APPL_DATE9
			 , 0													AS WK_PLAN_QTY9
			 , A.W10												AS PLAN_QTY9
			 , CASE WHEN ISNULL(B1.ORDER_P, 0) = 0 THEN B.SALE_BASIS_P * CONVERT(FLOAT,  A.W10)
					ELSE B1.ORDER_P * CONVERT(FLOAT,  A.W10)
			   END													AS PLAN_AMT9
			 , (		
				SELECT uniLITE.fnGetUserDate(@COMP_CODE, CAL_DATE) AS BASIC_DATE
				  FROM BCM400T WITH (NOLOCK)
				 WHERE COMP_CODE	= @COMP_CODE
				   AND CAL_TYPE		= '3'
				   AND CAL_DATE	&gt;= (SELECT MIN(START_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W10, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND CAL_DATE &lt;= (SELECT MAX(END_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W10, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND WEEK_DAY  = @BASE_WEEK)						AS BASE_DATE9

			--W11
			 , @APPL_DATE											AS APPL_DATE10
			 , 0													AS WK_PLAN_QTY10
			 , A.W11												AS PLAN_QTY10
			 , CASE WHEN ISNULL(B1.ORDER_P, 0) = 0 THEN B.SALE_BASIS_P * CONVERT(FLOAT,  A.W11)
					ELSE B1.ORDER_P * CONVERT(FLOAT,  A.W11)
			   END													AS PLAN_AMT10
			 , (		
				SELECT uniLITE.fnGetUserDate(@COMP_CODE, CAL_DATE) AS BASIC_DATE
				  FROM BCM400T WITH (NOLOCK)
				 WHERE COMP_CODE	= @COMP_CODE
				   AND CAL_TYPE		= '3'
				   AND CAL_DATE	&gt;= (SELECT MIN(START_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W11, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND CAL_DATE &lt;= (SELECT MAX(END_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W11, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND WEEK_DAY  = @BASE_WEEK)						AS BASE_DATE10

			--W12
			 , @APPL_DATE											AS APPL_DATE11
			 , 0													AS WK_PLAN_QTY11
			 , A.W12												AS PLAN_QTY11
			 , CASE WHEN ISNULL(B1.ORDER_P, 0) = 0 THEN B.SALE_BASIS_P * CONVERT(FLOAT,  A.W12)
					ELSE B1.ORDER_P * CONVERT(FLOAT,  A.W12)
			   END													AS PLAN_AMT11
			 , (		
				SELECT uniLITE.fnGetUserDate(@COMP_CODE, CAL_DATE) AS BASIC_DATE
				  FROM BCM400T WITH (NOLOCK)
				 WHERE COMP_CODE	= @COMP_CODE
				   AND CAL_TYPE		= '3'
				   AND CAL_DATE	&gt;= (SELECT MIN(START_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W12, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND CAL_DATE &lt;= (SELECT MAX(END_DATE)
										 FROM BCM420T WITH(NOLOCK)
										WHERE COMP_CODE		= @COMP_CODE
										  AND CAL_TYPE		= '3'
										  AND CAL_NO		= @PLAN_YEAR + (SELECT RIGHT(('00' + REPLACE(W12, 'W', '')), 3)
																			  FROM SGP200T_XLS WITH(NOLOCK)
																			 WHERE _EXCEL_JOBID	= @EXCEL_JOBID
																			   AND CUSTOM_CODE	= 'CUSTOM CODE'	)
									)
				   AND WEEK_DAY  = @BASE_WEEK)						AS BASE_DATE11
			 , 'Y'													AS EXCEL_YN

		  FROM		 SGP200T_XLS A WITH(NOLOCK)
		  LEFT JOIN  BPR100T	 B WITH(NOLOCK) ON B.COMP_CODE	= A.COMP_CODE
											   AND B.ITEM_CODE	= A.ITEM_CODE
		  LEFT JOIN  BPR300T	B1 WITH(NOLOCK) ON B1.COMP_CODE			= @COMP_CODE
											   AND B1.TYPE				= '2'			/* 구분(1:구매, 2:판매)                   */
											   AND B1.DIV_CODE			= @DIV_CODE		/* 사업장                                 */
											   AND B1.CUSTOM_ITEM_CODE	= A.ITEM_CODE	/* 품목코드                               */
											   AND B1.CUSTOM_CODE		= A.CUSTOM_CODE	/* 거래처코드                             */
											   AND @APPL_DATE BETWEEN B1.APLY_START_DATE AND B1.APLY_END_DATE		/* 적용시작일                             */
		  LEFT JOIN  BPR100T	B2 WITH(NOLOCK) ON B2.COMP_CODE	= B1.COMP_CODE
											   AND B2.ITEM_CODE	= B1.ITEM_CODE
		  INNER JOIN BCM100T	 C WITH(NOLOCK) ON C.COMP_CODE	= A.COMP_CODE
											   AND C.CUSTOM_CODE= A.CUSTOM_CODE
		  LEFT JOIN  BPR200T	M2 WITH(NOLOCK) ON M2.COMP_CODE	= A.COMP_CODE 
											   AND M2.DIV_CODE	= @DIV_CODE
											   AND M2.ITEM_CODE	= A.ITEM_CODE
		  LEFT JOIN  BSA100T	M3 WITH(NOLOCK) ON M3.COMP_CODE	= A.COMP_CODE 
											   AND M3.MAIN_CODE	= 'B042'   
											   AND M3.SUB_CODE	= @ENT_MONEY_UNIT
		 WHERE A._EXCEL_JOBID	= @EXCEL_JOBID
		   AND A.CUSTOM_CODE   != 'CUSTOM CODE'
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- SRM 데이터 수신 -->
	<select id="sgp200ukrvServiceImpl.receiveSRM" parameterType="Map" resultType="rMap">
		/*sgp200ukrvServiceImpl.receiveSRM */
		DECLARE @COMP_CODE		NVARCHAR(08)
			  , @DIV_CODE		NVARCHAR(08)
--			  , @CUSTOM_CODE	NVARCHAR(08)
			  , @PLAN_TYPE1		NVARCHAR(02)
			  , @MONEY_UNIT		NVARCHAR(03)
			  , @ENT_MONEY_UNIT	NVARCHAR(01)
		
			SET @COMP_CODE		= #{S_COMP_CODE}
			SET @DIV_CODE		= #{DIV_CODE}
--			SET @CUSTOM_CODE	= '00008'
			SET @PLAN_TYPE1		= #{ORDER_TYPE}					--판매유형
			SET @MONEY_UNIT		= #{MONEY_UNIT}					--화폐단위
			SET @ENT_MONEY_UNIT	= #{ENT_MONEY_UNIT}				--금액단위
		
			SET @COMP_CODE		= ISNULL(@COMP_CODE		, 'MASTER')
			SET @DIV_CODE		= ISNULL(@DIV_CODE		, '01')
			SET @PLAN_TYPE1		= ISNULL(@PLAN_TYPE1	, '10')
			SET @MONEY_UNIT		= ISNULL(@MONEY_UNIT	, 'KRW')
			SET @ENT_MONEY_UNIT	= ISNULL(@ENT_MONEY_UNIT, 1)
		
		SELECT Z.*
		  FROM (
				SELECT 'Registered'											AS SRM_FLAG
					 , ROW_NUMBER() OVER(PARTITION BY A.BUYER_COMPANY, A.BUYER_DIVISION, A.ITEM_CODE ORDER BY  WFC_VERSION DESC, IF_VERSION DESC) AS RowIdx
					 , @COMP_CODE											AS COMP_CODE
					 , A1.REF_CODE1											AS CUSTOM_CODE
					 , D.CUSTOM_NAME
					 , C.ITEM_CODE
					 , C.ITEM_NAME
					 , C.SPEC
					 , LEFT(A.PLAN_WEEK, 4) + '0' + RIGHT(A.PLAN_WEEK, 2)	AS START_WEEK
					 , @PLAN_TYPE1											AS PLAN_TYPE1
					 , @MONEY_UNIT											AS MONEY_UNIT
					 , @ENT_MONEY_UNIT										AS ENT_MONEY_UNIT
					 , ISNULL(M3.REF_CODE1, 1.0)							AS MONEYUNIT_FACTOR
					 , M2.ITEM_ACCOUNT										AS ITEM_ACCOUNT
				
					 , (CONVERT(FLOAT,  A.WEEK1_QTY)
					  + CONVERT(FLOAT,  A.WEEK2_QTY)
					  + CONVERT(FLOAT,  A.WEEK3_QTY)
					  + CONVERT(FLOAT,  A.WEEK4_QTY)
					  + CONVERT(FLOAT,  A.WEEK5_QTY)
					  + CONVERT(FLOAT,  A.WEEK6_QTY)
					  + CONVERT(FLOAT,  A.WEEK7_QTY)
					  + CONVERT(FLOAT,  A.WEEK8_QTY)
					  + CONVERT(FLOAT,  A.WEEK9_QTY)
					  + CONVERT(FLOAT,  A.WEEK10_QTY)
					  + CONVERT(FLOAT,  A.WEEK11_QTY)
					  + CONVERT(FLOAT,  A.WEEK12_QTY))						AS SUM_PLANQTY
					 , (CONVERT(FLOAT,  A.WEEK1_QTY)
					  + CONVERT(FLOAT,  A.WEEK2_QTY)
					  + CONVERT(FLOAT,  A.WEEK3_QTY)
					  + CONVERT(FLOAT,  A.WEEK4_QTY)
					  + CONVERT(FLOAT,  A.WEEK5_QTY)
					  + CONVERT(FLOAT,  A.WEEK6_QTY)
					  + CONVERT(FLOAT,  A.WEEK7_QTY)
					  + CONVERT(FLOAT,  A.WEEK8_QTY)
					  + CONVERT(FLOAT,  A.WEEK9_QTY)
					  + CONVERT(FLOAT,  A.WEEK10_QTY)
					  + CONVERT(FLOAT,  A.WEEK11_QTY)
					  + CONVERT(FLOAT,  A.WEEK12_QTY))	* C.SALE_BASIS_P	AS SUM_PLANAMT
				
					 --글로넷 DB 정보
					 , A.PLAN_DATE
					 , A.PLAN_WEEK
					 , A.CATEGORY
					 , A.ITEM_CODE											AS SRM_ITEM_CODE
					 , A.BUYER_DIVISION
					 , A.DESCRIPTION
					 , A.SPECIFICATION
				
					 --주차별 가공 데이터
					 , GETDATE()											AS APPL_DATE0
					 , 0													AS WK_PLAN_QTY0
					 , A.WEEK1_QTY											AS PLAN_QTY0
					 , CASE WHEN ISNULL(B.ORDER_P, 0) = 0 THEN C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK2_QTY)
							ELSE B.ORDER_P * CONVERT(FLOAT,  A.WEEK2_QTY)
					   END													AS PLAN_AMT0
					 , A.WEEK1_DATE											AS BASE_DATE0
				
					 , GETDATE()											AS APPL_DATE1
					 , 0													AS WK_PLAN_QTY1
					 , A.WEEK2_QTY											AS PLAN_QTY1
					 , CASE WHEN ISNULL(B.ORDER_P, 0) = 0 THEN C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK2_QTY)
							ELSE B.ORDER_P * CONVERT(FLOAT,  A.WEEK2_QTY)
					   END													AS PLAN_AMT1
					 , A.WEEK2_DATE											AS BASE_DATE1
				
					 , GETDATE()											AS APPL_DATE2
					 , 0													AS WK_PLAN_QTY2
					 , A.WEEK3_QTY											AS PLAN_QTY2
					 , CASE WHEN ISNULL(B.ORDER_P, 0) = 0 THEN C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK3_QTY)
							ELSE B.ORDER_P * CONVERT(FLOAT,  A.WEEK3_QTY)
					   END													AS PLAN_AMT2
					 , A.WEEK3_DATE											AS BASE_DATE2
				
					 , GETDATE()											AS APPL_DATE3
					 , 0													AS WK_PLAN_QTY3
					 , A.WEEK4_QTY											AS PLAN_QTY3
					 , CASE WHEN ISNULL(B.ORDER_P, 0) = 0 THEN C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK4_QTY)
							ELSE B.ORDER_P * CONVERT(FLOAT,  A.WEEK4_QTY)
					   END													AS PLAN_AMT3
					 , A.WEEK4_DATE											AS BASE_DATE3
				
					 , GETDATE()											AS APPL_DATE4
					 , 0													AS WK_PLAN_QTY4
					 , A.WEEK5_QTY											AS PLAN_QTY4
					 , CASE WHEN ISNULL(B.ORDER_P, 0) = 0 THEN C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK5_QTY)
							ELSE B.ORDER_P * CONVERT(FLOAT,  A.WEEK5_QTY)
					   END													AS PLAN_AMT4
					 , A.WEEK5_DATE											AS BASE_DATE4
				
					 , GETDATE()											AS APPL_DATE5
					 , 0													AS WK_PLAN_QTY5
					 , A.WEEK6_QTY											AS PLAN_QTY5
					 , CASE WHEN ISNULL(B.ORDER_P, 0) = 0 THEN C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK6_QTY)
							ELSE B.ORDER_P * CONVERT(FLOAT,  A.WEEK6_QTY)
					   END													AS PLAN_AMT5
					 , A.WEEK6_DATE											AS BASE_DATE5
				
					 , GETDATE()											AS APPL_DATE6
					 , 0													AS WK_PLAN_QTY6
					 , A.WEEK7_QTY											AS PLAN_QTY6
					 , CASE WHEN ISNULL(B.ORDER_P, 0) = 0 THEN C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK7_QTY)
							ELSE B.ORDER_P * CONVERT(FLOAT,  A.WEEK7_QTY)
					   END													AS PLAN_AMT6
					 , A.WEEK7_DATE											AS BASE_DATE6
				
					 , GETDATE()											AS APPL_DATE7
					 , 0													AS WK_PLAN_QTY7
					 , A.WEEK8_QTY											AS PLAN_QTY7
					 , CASE WHEN ISNULL(B.ORDER_P, 0) = 0 THEN C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK8_QTY)
							ELSE B.ORDER_P * CONVERT(FLOAT,  A.WEEK8_QTY)
					   END													AS PLAN_AMT7
					 , A.WEEK8_DATE											AS BASE_DATE7
				
					 , GETDATE()											AS APPL_DATE8
					 , 0													AS WK_PLAN_QTY8
					 , A.WEEK9_QTY											AS PLAN_QTY8
					 , CASE WHEN ISNULL(B.ORDER_P, 0) = 0 THEN C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK9_QTY)
							ELSE B.ORDER_P * CONVERT(FLOAT,  A.WEEK9_QTY)
					   END													AS PLAN_AMT8
					 , A.WEEK9_DATE											AS BASE_DATE8
				
					 , GETDATE()											AS APPL_DATE9
					 , 0													AS WK_PLAN_QTY9
					 , A.WEEK10_QTY											AS PLAN_QTY9
					 , CASE WHEN ISNULL(B.ORDER_P, 0) = 0 THEN C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK10_QTY)
							ELSE B.ORDER_P * CONVERT(FLOAT,  A.WEEK10_QTY)
					   END													AS PLAN_AMT9
					 , A.WEEK10_DATE										AS BASE_DATE9
				
					 , GETDATE()											AS APPL_DATE10
					 , 0													AS WK_PLAN_QTY10
					 , A.WEEK11_QTY											AS PLAN_QTY10
					 , CASE WHEN ISNULL(B.ORDER_P, 0) = 0 THEN C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK11_QTY)
							ELSE B.ORDER_P * CONVERT(FLOAT,  A.WEEK11_QTY)
					   END													AS PLAN_AMT10
					 , A.WEEK11_DATE										AS BASE_DATE10
				
					 , GETDATE()											AS APPL_DATE11
					 , 0													AS WK_PLAN_QTY11
					 , A.WEEK12_QTY											AS PLAN_QTY11
					 , CASE WHEN ISNULL(B.ORDER_P, 0) = 0 THEN C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK12_QTY)
							ELSE B.ORDER_P * CONVERT(FLOAT,  A.WEEK12_QTY)
					   END													AS PLAN_AMT11
					 , A.WEEK12_DATE										AS BASE_DATE11
				
				  FROM GLONETS.glonet.WYFC A WITH(NOLOCK)
				  LEFT JOIN BSA100T	A1 WITH(NOLOCK) ON A1.COMP_CODE			= @COMP_CODE
												   AND A1.MAIN_CODE			= 'S145'		/* SRM 거래처 정보 */
												   AND A1.CODE_NAME			= A.BUYER_DIVISION
												   AND A.P_DIVISION			= CASE WHEN ISNULL(A1.REF_CODE2, '') = '' THEN A.P_DIVISION
																				   ELSE A1.REF_CODE2
																			  END
				  --거래처품목정보 테이블에서 CUSTOM_ITEM_CODE로 우리 ITEM_CODE 가져오기
				 INNER JOIN BPR300T	B  WITH(NOLOCK) ON B.COMP_CODE			= @COMP_CODE
												   AND B.TYPE				= '2'			/* 구분(1:구매, 2:판매)                   */
												   AND B.DIV_CODE			= @DIV_CODE		/* 사업장                                 */
												   AND B.CUSTOM_ITEM_CODE	= A.ITEM_CODE	/* 품목코드                               */
												   AND B.CUSTOM_CODE		= A1.REF_CODE1	/* 거래처코드                             */
												   AND CONVERT(NVARCHAR(08), GETDATE(), 112) BETWEEN B.APLY_START_DATE AND B.APLY_END_DATE		/* 적용시작일                             */
				  LEFT JOIN BPR100T	C  WITH(NOLOCK) ON C.COMP_CODE	= @COMP_CODE
												   AND C.ITEM_CODE	= B.ITEM_CODE
				  LEFT JOIN BCM100T	D  WITH(NOLOCK) ON D.COMP_CODE	= @COMP_CODE
												   AND D.CUSTOM_CODE= A1.REF_CODE1
				  LEFT JOIN BPR200T	M2 WITH(NOLOCK) ON M2.COMP_CODE	= @COMP_CODE
												   AND M2.DIV_CODE	= @DIV_CODE
												   AND M2.ITEM_CODE	= B.ITEM_CODE
				  LEFT JOIN BSA100T	M3 WITH(NOLOCK) ON M3.COMP_CODE	= @COMP_CODE
												   AND M3.MAIN_CODE	= 'B042'   
												   AND M3.SUB_CODE	= @ENT_MONEY_UNIT
				 WHERE A.CATEGORY	= 'FCST'
				   AND A.PLAN_DATE	= ( SELECT MAX(PLAN_DATE) 
										  FROM GLONETS.glonet.WYFC WITH(NOLOCK)
										 WHERE CATEGORY	= 'FCST' )
				   AND (A.WEEK1_QTY != 0 OR A.WEEK2_QTY  != 0 OR A.WEEK3_QTY  != 0 OR A.WEEK4_QTY  != 0
					 OR A.WEEK5_QTY != 0 OR A.WEEK6_QTY  != 0 OR A.WEEK7_QTY  != 0 OR A.WEEK8_QTY  != 0
					 OR A.WEEK9_QTY != 0 OR A.WEEK10_QTY != 0 OR A.WEEK11_QTY != 0 OR A.WEEK12_QTY != 0)
				
				 
			UNION ALL
				
				SELECT 'Not Registered'										AS SRM_FLAG
					 , ROW_NUMBER() OVER(PARTITION BY A.BUYER_COMPANY, A.BUYER_DIVISION, A.ITEM_CODE ORDER BY  WFC_VERSION DESC, IF_VERSION DESC) AS RowIdx
					 , @COMP_CODE											AS COMP_CODE
					 , A1.REF_CODE1											AS CUSTOM_CODE
					 , D.CUSTOM_NAME
					 , C.ITEM_CODE
					 , C.ITEM_NAME
					 , C.SPEC
					 , LEFT(A.PLAN_WEEK, 4) + '0' + RIGHT(A.PLAN_WEEK, 2)	AS START_WEEK
					 , @PLAN_TYPE1											AS PLAN_TYPE1
					 , @MONEY_UNIT											AS MONEY_UNIT
					 , @ENT_MONEY_UNIT										AS ENT_MONEY_UNIT
					 , ISNULL(M3.REF_CODE1, 1.0)							AS MONEYUNIT_FACTOR
					 , M2.ITEM_ACCOUNT										AS ITEM_ACCOUNT
				
					 , (CONVERT(FLOAT,  A.WEEK1_QTY)
					  + CONVERT(FLOAT,  A.WEEK2_QTY)
					  + CONVERT(FLOAT,  A.WEEK3_QTY)
					  + CONVERT(FLOAT,  A.WEEK4_QTY)
					  + CONVERT(FLOAT,  A.WEEK5_QTY)
					  + CONVERT(FLOAT,  A.WEEK6_QTY)
					  + CONVERT(FLOAT,  A.WEEK7_QTY)
					  + CONVERT(FLOAT,  A.WEEK8_QTY)
					  + CONVERT(FLOAT,  A.WEEK9_QTY)
					  + CONVERT(FLOAT,  A.WEEK10_QTY)
					  + CONVERT(FLOAT,  A.WEEK11_QTY)
					  + CONVERT(FLOAT,  A.WEEK12_QTY))						AS SUM_PLANQTY
					 , (CONVERT(FLOAT,  A.WEEK1_QTY)
					  + CONVERT(FLOAT,  A.WEEK2_QTY)
					  + CONVERT(FLOAT,  A.WEEK3_QTY)
					  + CONVERT(FLOAT,  A.WEEK4_QTY)
					  + CONVERT(FLOAT,  A.WEEK5_QTY)
					  + CONVERT(FLOAT,  A.WEEK6_QTY)
					  + CONVERT(FLOAT,  A.WEEK7_QTY)
					  + CONVERT(FLOAT,  A.WEEK8_QTY)
					  + CONVERT(FLOAT,  A.WEEK9_QTY)
					  + CONVERT(FLOAT,  A.WEEK10_QTY)
					  + CONVERT(FLOAT,  A.WEEK11_QTY)
					  + CONVERT(FLOAT,  A.WEEK12_QTY))	* C.SALE_BASIS_P	AS SUM_PLANAMT
				
					 --글로넷 DB 정보
					 , A.PLAN_DATE
					 , A.PLAN_WEEK
					 , A.CATEGORY
					 , A.ITEM_CODE											AS SRM_ITEM_CODE
					 , A.BUYER_DIVISION
					 , A.DESCRIPTION
					 , A.SPECIFICATION
				
					 --주차별 가공 데이터
					 , GETDATE()											AS APPL_DATE0
					 , 0													AS WK_PLAN_QTY0
					 , A.WEEK1_QTY											AS PLAN_QTY0
					 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK1_QTY)		AS PLAN_AMT0
					 , A.WEEK1_DATE											AS BASE_DATE0
				
					 , GETDATE()											AS APPL_DATE1
					 , 0													AS WK_PLAN_QTY1
					 , A.WEEK2_QTY											AS PLAN_QTY1
					 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK2_QTY)		AS PLAN_AMT1
					 , A.WEEK2_DATE											AS BASE_DATE1
				
					 , GETDATE()											AS APPL_DATE2
					 , 0													AS WK_PLAN_QTY2
					 , A.WEEK3_QTY											AS PLAN_QTY2
					 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK3_QTY)		AS PLAN_AMT2
					 , A.WEEK3_DATE											AS BASE_DATE2
				
					 , GETDATE()											AS APPL_DATE3
					 , 0													AS WK_PLAN_QTY3
					 , A.WEEK4_QTY											AS PLAN_QTY3
					 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK4_QTY)		AS PLAN_AMT3
					 , A.WEEK4_DATE											AS BASE_DATE3
				
					 , GETDATE()											AS APPL_DATE4
					 , 0													AS WK_PLAN_QTY4
					 , A.WEEK5_QTY											AS PLAN_QTY4
					 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK5_QTY)		AS PLAN_AMT4
					 , A.WEEK5_DATE											AS BASE_DATE4
				
					 , GETDATE()											AS APPL_DATE5
					 , 0													AS WK_PLAN_QTY5
					 , A.WEEK6_QTY											AS PLAN_QTY5
					 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK6_QTY)		AS PLAN_AMT5
					 , A.WEEK6_DATE											AS BASE_DATE5
				
					 , GETDATE()											AS APPL_DATE6
					 , 0													AS WK_PLAN_QTY6
					 , A.WEEK7_QTY											AS PLAN_QTY6
					 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK7_QTY)		AS PLAN_AMT6
					 , A.WEEK7_DATE											AS BASE_DATE6
				
					 , GETDATE()											AS APPL_DATE7
					 , 0													AS WK_PLAN_QTY7
					 , A.WEEK8_QTY											AS PLAN_QTY7
					 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK8_QTY)		AS PLAN_AMT7
					 , A.WEEK8_DATE											AS BASE_DATE7
				
					 , GETDATE()											AS APPL_DATE8
					 , 0													AS WK_PLAN_QTY8
					 , A.WEEK9_QTY											AS PLAN_QTY8
					 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK9_QTY)		AS PLAN_AMT8
					 , A.WEEK9_DATE											AS BASE_DATE8
				
					 , GETDATE()											AS APPL_DATE9
					 , 0													AS WK_PLAN_QTY9
					 , A.WEEK10_QTY											AS PLAN_QTY9
					 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK10_QTY)		AS PLAN_AMT9
					 , A.WEEK10_DATE										AS BASE_DATE9
				
					 , GETDATE()											AS APPL_DATE10
					 , 0													AS WK_PLAN_QTY10
					 , A.WEEK11_QTY											AS PLAN_QTY10
					 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK11_QTY)		AS PLAN_AMT10
					 , A.WEEK11_DATE										AS BASE_DATE10
				
					 , GETDATE()											AS APPL_DATE11
					 , 0													AS WK_PLAN_QTY11
					 , A.WEEK12_QTY											AS PLAN_QTY11
					 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK12_QTY)		AS PLAN_AMT11
					 , A.WEEK12_DATE										AS BASE_DATE11
				
				  FROM GLONETS.glonet.WYFC A WITH(NOLOCK)
				  LEFT JOIN BSA100T	A1 WITH(NOLOCK) ON A1.COMP_CODE			= @COMP_CODE
												   AND A1.MAIN_CODE			= 'S145'		/* SRM 거래처 정보 */
												   AND A1.CODE_NAME			= A.BUYER_DIVISION
												   AND A.P_DIVISION			= CASE WHEN ISNULL(A1.REF_CODE2, '') = '' THEN A.P_DIVISION
																				   ELSE A1.REF_CODE2
																			  END
				  --거래처품목정보 테이블에서 CUSTOM_ITEM_CODE로 우리 ITEM_CODE 가져오기
				  LEFT JOIN BPR300T	B  WITH(NOLOCK) ON B.COMP_CODE			= @COMP_CODE
												   AND B.TYPE				= '2'			/* 구분(1:구매, 2:판매) */
												   AND B.DIV_CODE			= @DIV_CODE		/* 사업장                                 */
												   AND B.CUSTOM_ITEM_CODE	= A.ITEM_CODE	/* 품목코드                              */
												   AND B.CUSTOM_CODE		= A1.REF_CODE1	/* 거래처코드                           */
												   AND B.APLY_START_DATE	= (SELECT MAX(APLY_START_DATE)
												   								 FROM BPR300T WITH(NOLOCK)
												   								WHERE COMP_CODE 		= @COMP_CODE
												   								  AND TYPE				= '2'
												   								  AND DIV_CODE			= @DIV_CODE
												   								  AND CUSTOM_ITEM_CODE	= A.ITEM_CODE
												   								  AND CUSTOM_CODE		= A1.REF_CODE1)				/* 적용시작일                             */
				  LEFT JOIN BPR100T	C  WITH(NOLOCK) ON C.COMP_CODE	= @COMP_CODE
												   AND C.ITEM_CODE	= B.ITEM_CODE
				  LEFT JOIN BCM100T	D  WITH(NOLOCK) ON D.COMP_CODE	= @COMP_CODE
												   AND D.CUSTOM_CODE= A1.REF_CODE1
				  LEFT JOIN BPR200T	M2 WITH(NOLOCK) ON M2.COMP_CODE	= @COMP_CODE
												   AND M2.DIV_CODE	= @DIV_CODE
												   AND M2.ITEM_CODE	= B.ITEM_CODE
				  LEFT JOIN BSA100T	M3 WITH(NOLOCK) ON M3.COMP_CODE	= @COMP_CODE
												   AND M3.MAIN_CODE	= 'B042'   
												   AND M3.SUB_CODE	= @ENT_MONEY_UNIT
				 WHERE A.CATEGORY	= 'FCST'
				--사업장별 품목정보등록에 등록되지 않은 데이터 조회
				   AND B.COMP_CODE IS NULL
				   AND A.PLAN_DATE	= ( SELECT MAX(PLAN_DATE) 
										  FROM GLONETS.glonet.WYFC WITH(NOLOCK)
										 WHERE CATEGORY	= 'FCST' )
				   AND (A.WEEK1_QTY != 0 OR A.WEEK2_QTY  != 0 OR A.WEEK3_QTY  != 0 OR A.WEEK4_QTY  != 0
					 OR A.WEEK5_QTY != 0 OR A.WEEK6_QTY  != 0 OR A.WEEK7_QTY  != 0 OR A.WEEK8_QTY  != 0
					 OR A.WEEK9_QTY != 0 OR A.WEEK10_QTY != 0 OR A.WEEK11_QTY != 0 OR A.WEEK12_QTY != 0)
			) Z
			WHERE Z.RowIdx = '1'
			ORDER BY Z.CUSTOM_CODE, Z.ITEM_CODE
	</select>	
	<select id="sgp200ukrvServiceImpl.receiveSRM_BACKUP" parameterType="Map" resultType="rMap">
		/*sgp200ukrvServiceImpl.receiveSRM */
		DECLARE @COMP_CODE		NVARCHAR(08)
			  , @DIV_CODE		NVARCHAR(08)
			  , @CUSTOM_CODE	NVARCHAR(08)
			  , @PLAN_TYPE1		NVARCHAR(02)
			  , @MONEY_UNIT		NVARCHAR(03)
			  , @ENT_MONEY_UNIT	NVARCHAR(01)
		
			SET @COMP_CODE		= #{S_COMP_CODE}
			SET @DIV_CODE		= #{DIV_CODE}
			SET @CUSTOM_CODE	= '삼성'
			SET @PLAN_TYPE1		= #{ORDER_TYPE}					--판매유형
			SET @MONEY_UNIT		= #{MONEY_UNIT}					--화폐단위
			SET @ENT_MONEY_UNIT	= #{ENT_MONEY_UNIT}				--금액단위
		
			SET @COMP_CODE		= ISNULL(@COMP_CODE		, 'MASTER')
			SET @DIV_CODE		= ISNULL(@DIV_CODE		, '01')
			SET @PLAN_TYPE1		= ISNULL(@PLAN_TYPE1	, '10')
			SET @MONEY_UNIT		= ISNULL(@MONEY_UNIT	, 'KRW')
			SET @ENT_MONEY_UNIT	= ISNULL(@ENT_MONEY_UNIT, 1)
		
		
		SELECT @COMP_CODE
			 , @CUSTOM_CODE
			 , D.CUSTOM_NAME
			 , C.ITEM_CODE
			 , C.ITEM_NAME
			 , C.SPEC
			 , LEFT(A.PLAN_WEEK, 4) + '0' + RIGHT(A.PLAN_WEEK, 2)	AS START_WEEK
			 , @PLAN_TYPE1											AS PLAN_TYPE1
			 , @MONEY_UNIT											AS MONEY_UNIT
			 , @ENT_MONEY_UNIT										AS ENT_MONEY_UNIT
			 , ISNULL(M3.REF_CODE1, 1.0)							AS MONEYUNIT_FACTOR
			 , M2.ITEM_ACCOUNT										AS ITEM_ACCOUNT
		
			 , (CONVERT(FLOAT,  A.WEEK1_QTY)
			  + CONVERT(FLOAT,  A.WEEK2_QTY)
			  + CONVERT(FLOAT,  A.WEEK3_QTY)
			  + CONVERT(FLOAT,  A.WEEK4_QTY)
			  + CONVERT(FLOAT,  A.WEEK5_QTY)
			  + CONVERT(FLOAT,  A.WEEK6_QTY)
			  + CONVERT(FLOAT,  A.WEEK7_QTY)
			  + CONVERT(FLOAT,  A.WEEK8_QTY)
			  + CONVERT(FLOAT,  A.WEEK9_QTY)
			  + CONVERT(FLOAT,  A.WEEK10_QTY)
			  + CONVERT(FLOAT,  A.WEEK11_QTY)
			  + CONVERT(FLOAT,  A.WEEK12_QTY))						AS SUM_PLANQTY
			 , (CONVERT(FLOAT,  A.WEEK1_QTY)
			  + CONVERT(FLOAT,  A.WEEK2_QTY)
			  + CONVERT(FLOAT,  A.WEEK3_QTY)
			  + CONVERT(FLOAT,  A.WEEK4_QTY)
			  + CONVERT(FLOAT,  A.WEEK5_QTY)
			  + CONVERT(FLOAT,  A.WEEK6_QTY)
			  + CONVERT(FLOAT,  A.WEEK7_QTY)
			  + CONVERT(FLOAT,  A.WEEK8_QTY)
			  + CONVERT(FLOAT,  A.WEEK9_QTY)
			  + CONVERT(FLOAT,  A.WEEK10_QTY)
			  + CONVERT(FLOAT,  A.WEEK11_QTY)
			  + CONVERT(FLOAT,  A.WEEK12_QTY))	* C.SALE_BASIS_P	AS SUM_PLANAMT
		
			 --글로넷 DB 정보
			 , A.PLAN_DATE
			 , A.PLAN_WEEK
			 , A.ITEM_CODE
			 , A.CATEGORY
		
			 --주차별 가공 데이터
			 , GETDATE()											AS APPL_DATE0
			 , 0													AS WK_PLAN_QTY0
			 , A.WEEK1_QTY											AS PLAN_QTY0
			 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK1_QTY)		AS PLAN_AMT0
			 , A.WEEK1_DATE											AS BASE_DATE0
		
			 , GETDATE()											AS APPL_DATE1
			 , 0													AS WK_PLAN_QTY1
			 , A.WEEK2_QTY											AS PLAN_QTY1
			 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK2_QTY)		AS PLAN_AMT1
			 , A.WEEK2_DATE											AS BASE_DATE1
		
			 , GETDATE()											AS APPL_DATE2
			 , 0													AS WK_PLAN_QTY2
			 , A.WEEK3_QTY											AS PLAN_QTY2
			 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK3_QTY)		AS PLAN_AMT2
			 , A.WEEK3_DATE											AS BASE_DATE2
		
			 , GETDATE()											AS APPL_DATE3
			 , 0													AS WK_PLAN_QTY3
			 , A.WEEK4_QTY											AS PLAN_QTY3
			 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK4_QTY)		AS PLAN_AMT3
			 , A.WEEK4_DATE											AS BASE_DATE3
		
			 , GETDATE()											AS APPL_DATE4
			 , 0													AS WK_PLAN_QTY4
			 , A.WEEK5_QTY											AS PLAN_QTY4
			 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK5_QTY)		AS PLAN_AMT4
			 , A.WEEK5_DATE											AS BASE_DATE4
		
			 , GETDATE()											AS APPL_DATE5
			 , 0													AS WK_PLAN_QTY5
			 , A.WEEK6_QTY											AS PLAN_QTY5
			 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK6_QTY)		AS PLAN_AMT5
			 , A.WEEK6_DATE											AS BASE_DATE5
		
			 , GETDATE()											AS APPL_DATE6
			 , 0													AS WK_PLAN_QTY6
			 , A.WEEK7_QTY											AS PLAN_QTY6
			 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK7_QTY)		AS PLAN_AMT6
			 , A.WEEK7_DATE											AS BASE_DATE6
		
			 , GETDATE()											AS APPL_DATE7
			 , 0													AS WK_PLAN_QTY7
			 , A.WEEK8_QTY											AS PLAN_QTY7
			 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK8_QTY)		AS PLAN_AMT7
			 , A.WEEK8_DATE											AS BASE_DATE7
		
			 , GETDATE()											AS APPL_DATE8
			 , 0													AS WK_PLAN_QTY8
			 , A.WEEK9_QTY											AS PLAN_QTY8
			 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK9_QTY)		AS PLAN_AMT8
			 , A.WEEK9_DATE											AS BASE_DATE8
		
			 , GETDATE()											AS APPL_DATE9
			 , 0													AS WK_PLAN_QTY9
			 , A.WEEK10_QTY											AS PLAN_QTY9
			 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK10_QTY)		AS PLAN_AMT9
			 , A.WEEK10_DATE										AS BASE_DATE9
		
			 , GETDATE()											AS APPL_DATE10
			 , 0													AS WK_PLAN_QTY10
			 , A.WEEK11_QTY											AS PLAN_QTY10
			 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK11_QTY)		AS PLAN_AMT10
			 , A.WEEK11_DATE										AS BASE_DATE10
		
			 , GETDATE()											AS APPL_DATE11
			 , 0													AS WK_PLAN_QTY11
			 , A.WEEK12_QTY											AS PLAN_QTY11
			 , C.SALE_BASIS_P * CONVERT(FLOAT,  A.WEEK12_QTY)		AS PLAN_AMT11
			 , A.WEEK12_DATE										AS BASE_DATE11
		
		  FROM GLONETS.glonet.WYFC A WITH(NOLOCK)
		  --거래처품목정보 테이블에서 CUSTOM_ITEM_CODE로 우리 ITEM_CODE 가져오기
		  LEFT JOIN BPR300T  B WITH(NOLOCK) ON B.COMP_CODE			= @COMP_CODE
										   AND B.TYPE				= '2'			/* 구분(1:구매, 2:판매)                   */
										   AND B.DIV_CODE			= @DIV_CODE		/* 사업장                                 */
										   AND B.CUSTOM_ITEM_CODE	= A.ITEM_CODE	/* 품목코드                               */
										   AND B.CUSTOM_CODE		= @CUSTOM_CODE	/* 거래처코드                             */
										   AND CONVERT(NVARCHAR(08), GETDATE(), 112) BETWEEN B.APLY_START_DATE AND B.APLY_END_DATE	/* 적용시작일                             */
		 INNER JOIN BPR100T	 C WITH(NOLOCK) ON C.COMP_CODE	= @COMP_CODE
										   AND C.ITEM_CODE	= B.ITEM_CODE
		 INNER JOIN BCM100T	 D WITH(NOLOCK) ON D.COMP_CODE	= @COMP_CODE
										   AND D.CUSTOM_CODE= @CUSTOM_CODE
		 LEFT JOIN  BPR200T	M2 WITH(NOLOCK) ON M2.COMP_CODE	= @COMP_CODE
										   AND M2.DIV_CODE	= @DIV_CODE
										   AND M2.ITEM_CODE	= B.ITEM_CODE
		 LEFT JOIN  BSA100T	M3 WITH(NOLOCK) ON M3.COMP_CODE	= @COMP_CODE
										   AND M3.MAIN_CODE	= 'B042'   
										   AND M3.SUB_CODE	= @ENT_MONEY_UNIT
		 WHERE A.CATEGORY	= 'FCST'
		   AND A.PLAN_DATE	= ( SELECT MAX(PLAN_DATE) 
								  FROM GLONETS.glonet.WYFC WITH(NOLOCK)
								 WHERE CATEGORY	= 'FCST' )
		   AND A.WFC_VERSION= ( SELECT MAX(WFC_VERSION) 
								  FROM GLONETS.glonet.WYFC WITH(NOLOCK)
								 WHERE CATEGORY	= 'FCST'
								   AND PLAN_DATE= ( SELECT MAX(PLAN_DATE) 
													  FROM GLONETS.glonet.WYFC WITH(NOLOCK)
													 WHERE CATEGORY	= 'FCST' )
							  )
		   AND A.IF_VERSION	= ( SELECT MAX(IF_VERSION) 
								  FROM GLONETS.glonet.WYFC WITH(NOLOCK)
								 WHERE CATEGORY	= 'FCST'
								   AND PLAN_DATE= ( SELECT MAX(PLAN_DATE) 
													  FROM GLONETS.glonet.WYFC WITH(NOLOCK)
													 WHERE CATEGORY	= 'FCST' )
								   AND A.WFC_VERSION= ( SELECT MAX(WFC_VERSION) 
														  FROM GLONETS.glonet.WYFC WITH(NOLOCK)
														 WHERE CATEGORY	= 'FCST'
														   AND PLAN_DATE= ( SELECT MAX(PLAN_DATE) 
																			  FROM GLONETS.glonet.WYFC WITH(NOLOCK)
																			 WHERE CATEGORY	= 'FCST' )
							  )
		   AND (A.WEEK1_QTY != 0 OR A.WEEK2_QTY  != 0 OR A.WEEK3_QTY  != 0 OR A.WEEK4_QTY  != 0
			 OR A.WEEK5_QTY != 0 OR A.WEEK6_QTY  != 0 OR A.WEEK7_QTY  != 0 OR A.WEEK8_QTY  != 0
			 OR A.WEEK9_QTY != 0 OR A.WEEK10_QTY != 0 OR A.WEEK11_QTY != 0 OR A.WEEK12_QTY != 0)
		
		 ORDER BY A.PLAN_DATE 
	</select>	
</mapper>