<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sbs030ukrsService">
	<select id="sbs030ukrsService.selectList0_1" parameterType="Map" resultType="rMap">
        --Sbs01Krv.CSbs100UKr[fnSbs100QStd] Query04
        
	SELECT DISTINCT A.ITEM_CODE                                               
	     , uniLITE.fnItemNameComp(A.COMP_CODE, #{S_USER_ID}, A.ITEM_CODE) AS ITEM_NAME  
	     , A.SPEC                                                             
	     , A.STOCK_UNIT                                                       
	     , A.SALE_UNIT                                                        
	     , ISNULL(A.SALE_BASIS_P, 0) AS BASIS_P                               
	     , M1.CODE_NAME AS DOM_FORIGN                      
	     , M2.CODE_NAME AS ITEM_ACCOUNT                    
	     , A.TRNS_RATE                                                        
	     , A.COMP_CODE                                                        
	  FROM BPR100T A WITH(NOLOCK)                                             
    LEFT JOIN BPR200T B WITH(NOLOCK)                          
           ON A.ITEM_CODE  = B.ITEM_CODE                      
          AND A.COMP_CODE  = B.COMP_CODE                      
   INNER JOIN BSA100T M1 WITH(NOLOCK)                         
           ON M1.MAIN_CODE = 'B019'                           
          AND M1.SUB_CODE  = A.DOM_FORIGN                     
          AND M1.COMP_CODE = A.COMP_CODE                      
   INNER JOIN BSA100T M2 WITH(NOLOCK)                         
           ON M2.MAIN_CODE = 'B020'                           
          AND M2.SUB_CODE  = B.ITEM_ACCOUNT                   
          AND M2.COMP_CODE = B.COMP_CODE                           
         WHERE A.USE_YN    = 'Y'                                                        
           AND A.COMP_CODE = #{S_COMP_CODE}
           AND B.DIV_CODE  = #{DIV_CODE}
           <if test="@foren.Ognl@isNotEmpty(ITEM_ACCOUNT)">
           AND B.ITEM_ACCOUNT LIKE #{ITEM_ACCOUNT} + '%'
           </if>
           <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL1)">
           AND A.ITEM_LEVEL1  LIKE #{ITEM_LEVEL1} + '%'
           </if>
           <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL2)">
           AND A.ITEM_LEVEL2  LIKE #{ITEM_LEVEL2} + '%'
           </if>
           <if test="@foren.Ognl@isNotEmpty(ITEM_LEVEL3)">
           AND A.ITEM_LEVEL3  LIKE #{ITEM_LEVEL3} + '%'
           </if>
           
           <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
           AND A.ITEM_CODE 		= #{ITEM_CODE}						/* 품목코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
           AND A.ITEM_CODE 		LIKE #{ITEM_CODE} + '%'				/* 품목코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
           AND A.ITEM_NAME 		LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
           </if>
    </select>
    
    <!--=============================================================================== 판매단가 =============================================================================-->
    <select id="sbs030ukrsService.selectList0_2" parameterType="Map" resultType="rMap">
    	<if test="ITEM_FLAG == &quot;C&quot;">
            --Sbs01Krv.CSbs100UKr[fnSbs100QStd] Query02
            SELECT A.TYPE
                 , A.ITEM_CODE
                 , A.CUSTOM_CODE
                 , MAX(uniLITE.fnCustNameComp(B.COMP_CODE, #{S_COMP_CODE}, B.CUSTOM_CODE)) AS CUSTOM_NAME                                                       
                 , A.MONEY_UNIT
                 , A.ORDER_UNIT
                 , (SELECT C.ITEM_P
                      FROM BPR400T C
                     WHERE C.TYPE            = '2'
                       AND C.COMP_CODE       = A.COMP_CODE
                       AND C.DIV_CODE        = A.DIV_CODE
                       AND C.ITEM_CODE       = A.ITEM_CODE
                       AND C.CUSTOM_CODE     = A.CUSTOM_CODE
                       AND C.MONEY_UNIT      = A.MONEY_UNIT
                       AND C.ORDER_UNIT      = A.ORDER_UNIT
                       AND C.APLY_START_DATE = MAX(A.APLY_START_DATE)) AS ITEM_P
                 , uniLITE.fnGetUserDate(A.COMP_CODE, MAX(A.APLY_START_DATE)) AS APLY_START_DATE
                 , A.DIV_CODE
                 , MAX(A.UPDATE_DB_USER) AS UPDATE_DB_USER
                 , MAX(A.UPDATE_DB_TIME) AS UPDATE_DB_TIME
                 , (SELECT ISNULL(Z.REMARK, '')
                      FROM BPR400T Z
                     WHERE Z.TYPE            = '2'
                       AND Z.COMP_CODE       = A.COMP_CODE
                       AND Z.DIV_CODE        = A.DIV_CODE
                       AND Z.ITEM_CODE       = A.ITEM_CODE
                       AND Z.CUSTOM_CODE     = A.CUSTOM_CODE
                       AND Z.MONEY_UNIT      = A.MONEY_UNIT
                       AND Z.ORDER_UNIT      = A.ORDER_UNIT
                       AND Z.APLY_START_DATE = MAX(A.APLY_START_DATE)) AS REMARK
                 , A.COMP_CODE
              FROM BPR400T A WITH (NOLOCK)
                   LEFT JOIN BCM100T B  WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE AND A.CUSTOM_CODE      = B.CUSTOM_CODE
             WHERE A.COMP_CODE        = #{S_COMP_CODE}
               AND A.TYPE             = '2'
               AND A.ITEM_CODE        = #{ITEM_CODE_TEMP}
               AND A.APLY_START_DATE &lt;= CONVERT(VARCHAR(8), GETDATE(), 112)
               AND A.DIV_CODE         = CASE WHEN A.TYPE='2' THEN '*' ELSE #{DIV_CODE} END
             GROUP BY A.TYPE    , A.ITEM_CODE, A.CUSTOM_CODE, A.MONEY_UNIT, A.ORDER_UNIT
                    , A.DIV_CODE, A.COMP_CODE
             ORDER BY A.TYPE, A.ITEM_CODE, A.CUSTOM_CODE, A.MONEY_UNIT
    	</if>
    	<if test="ITEM_FLAG == &quot;A&quot;">  
            --Sbs01Krv.CSbs100UKr[fnSbs100QStd] Query03
            SELECT A.TYPE
                 , A.ITEM_CODE
                 , A.CUSTOM_CODE
                 , uniLITE.fnCustNameComp(A.COMP_CODE, #{S_COMP_CODE}, B.CUSTOM_CODE) AS CUSTOM_NAME
                 , A.MONEY_UNIT
                 , A.ORDER_UNIT
                 , A.ITEM_P
                 , uniLITE.fnGetUserDate(A.COMP_CODE,A.APLY_START_DATE) AS APLY_START_DATE
                 , A.DIV_CODE
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
                 , ISNULL(A.REMARK, '') AS REMARK
                 , A.COMP_CODE
              FROM BPR400T A WITH (NOLOCK)
                   LEFT JOIN BCM100T B WITH (NOLOCK) ON A.COMP_CODE = B.COMP_CODE AND A.CUSTOM_CODE = B.CUSTOM_CODE
             WHERE A.COMP_CODE   = #{S_COMP_CODE}
               AND A.TYPE        = N'2'
               AND A.ITEM_CODE   = #{ITEM_CODE_TEMP}
               AND A.DIV_CODE    = CASE WHEN A.TYPE='2' THEN '*' ELSE #{DIV_CODE} END
    	</if>      
    </select>
    
    <insert id="sbs030ukrsService.insertDetail0_2" parameterType="Map">    
        --sbs100ukrv.Csbs100ukrv[fnSbs100Save] Query01
        INSERT INTO BPR400T
             ( TYPE
             , ITEM_CODE
             , CUSTOM_CODE
             , MONEY_UNIT
             , ORDER_UNIT
             , ITEM_P
             , APLY_START_DATE
             , DIV_CODE
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             , COMP_CODE
             , REMARK
             ) 
        VALUES
             ( #{TYPE}               
             , #{ITEM_CODE}          
             , #{CUSTOM_CODE}        
             , #{MONEY_UNIT}         
             , #{ORDER_UNIT}         
             , #{ITEM_P}             
             , #{APLY_START_DATE}    
             , CASE WHEN #{TYPE}='2' THEN '*' ELSE #{DIV_CODE} END
             , #{S_USER_ID}     
             , GETDATE()    
             , #{S_COMP_CODE}     
             ,  #{REMARK}
             )        
    </insert>
    
    <update id="sbs030ukrsService.updateDetail0_2" parameterType="Map">     
        --sbs100ukrv.Csbs100ukrv[fnSbs100Save] Query01
        UPDATE BPR400T
           SET ITEM_P          = #{ITEM_P}
             , UPDATE_DB_USER  = #{S_USER_ID}
             , UPDATE_DB_TIME  = GETDATE()
             , REMARK          = #{REMARK}
             
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = CASE WHEN TYPE='2' THEN '*' ELSE #{DIV_CODE} END           
           AND TYPE            = #{TYPE}
           AND ITEM_CODE       = #{ITEM_CODE}
           AND CUSTOM_CODE     = #{CUSTOM_CODE}
           AND MONEY_UNIT      = #{MONEY_UNIT}
           AND ORDER_UNIT      = #{ORDER_UNIT}
           AND APLY_START_DATE = #{APLY_START_DATE}
    </update>
    
    <delete id="sbs030ukrsService.deleteDetail0_2" parameterType="Map">     
        --sbs100ukrv.Csbs100ukrv[fnSbs100Save] Query01
        DELETE FROM BPR400T 
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = CASE WHEN TYPE='2' THEN '*' ELSE #{DIV_CODE} END
           AND TYPE            = #{TYPE}
           AND ITEM_CODE       = #{ITEM_CODE}
           AND CUSTOM_CODE     = #{CUSTOM_CODE}
           AND MONEY_UNIT      = #{MONEY_UNIT}
           AND ORDER_UNIT      = #{ORDER_UNIT}
           AND APLY_START_DATE = #{APLY_START_DATE}
    </delete>
    
    <!--=============================================================================== 고객품목 =============================================================================-->
    <select id="sbs030ukrsService.selectList0_3" parameterType="Map" resultType="rMap">
        --Sbs01Krv.CSbs101UKr[fnSbs101QStd] Query02
        SELECT A.TYPE                                                                       
             , A.ITEM_CODE                                                                  
             , A.CUSTOM_CODE                                                                
             , uniLITE.fnCustNameComp(B.COMP_CODE, #{S_COMP_CODE}, B.CUSTOM_CODE) AS CUSTOM_NAME        
             , A.CUSTOM_ITEM_CODE                                                           
             , A.CUSTOM_ITEM_NAME                                                           
             , A.CUSTOM_ITEM_SPEC                                                           
             , A.ORDER_UNIT                                                                 
             , A.BASIS_P                                                                    
             , A.ORDER_P                                                                    
             , A.TRNS_RATE                                                                  
             , A.AGENT_P                                                                    
             , uniLITE.fnGetUserDate(A.COMP_CODE, A.APLY_START_DATE) AS APLY_START_DATE     
             , A.ORDER_PRSN                                                                 
             , A.MAKER_NAME                                                                 
             , A.AGREE_DATE                                                                 
             , A.ORDER_RATE                                                                 
             , A.REMARK                                                                     
             , A.DIV_CODE                                                                   
             , A.UPDATE_DB_USER                                                             
             , A.UPDATE_DB_TIME                                                             
             , A.COMP_CODE                                                                  
          FROM            BPR300T A WITH(NOLOCK)                                            
               INNER JOIN BCM100T B WITH(NOLOCK) ON A.CUSTOM_CODE = B.CUSTOM_CODE           
                                                AND A.COMP_CODE   = B.COMP_CODE             
         WHERE A.TYPE      = '2'                                                            
           AND A.ITEM_CODE = #{ITEM_CODE_TEMP}                                           
           AND A.COMP_CODE = #{S_COMP_CODE}                                           
           AND A.DIV_CODE  = #{DIV_CODE}                                           
           <if test="ITEM_FLAG == &quot;C&quot;">  
               AND A.APLY_START_DATE = (SELECT MAX(APLY_START_DATE)                   
                                          FROM BPR300T                                
                                         WHERE TYPE             = A.TYPE              
                                           AND COMP_CODE        = A.COMP_CODE         
                                           AND DIV_CODE         = A.DIV_CODE          
                                           AND ITEM_CODE        = A.ITEM_CODE         
                                           AND CUSTOM_CODE      = A.CUSTOM_CODE       
                                           AND APLY_START_DATE &lt;= GETDATE())
          </if>
    </select>
    
    <insert id="sbs030ukrsService.insertDetail0_3" parameterType="Map">    
        --sbs100ukrv.Csbs101ukrv[fnSbs101Save] Query04
        INSERT INTO BPR300T
             ( TYPE
             , ITEM_CODE
             , CUSTOM_CODE
             , CUSTOM_ITEM_CODE
             , CUSTOM_ITEM_NAME
             , CUSTOM_ITEM_SPEC
             , ORDER_UNIT
             , BASIS_P
             , ORDER_P
             , TRNS_RATE
             , AGENT_P
             , APLY_START_DATE
             , ORDER_PRSN
             , MAKER_NAME
             , AGREE_DATE
             , ORDER_RATE
             , REMARK
             , DIV_CODE
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             , COMP_CODE
             ) 
        VALUES
             ( #{TYPE}
             , #{ITEM_CODE}
             , #{CUSTOM_CODE}
             , #{CUSTOM_ITEM_CODE}
             , #{CUSTOM_ITEM_NAME}
             , #{CUSTOM_ITEM_SPEC}
             , #{ORDER_UNIT}
             , #{BASIS_P}   
             , #{ORDER_P}
             , #{TRNS_RATE}
             , #{AGENT_P}
             , #{APLY_START_DATE}
             , #{ORDER_PRSN}
             , #{MAKER_NAME}
             , #{AGREE_DATE}
             , #{ORDER_RATE}
             , #{REMARK}
             , #{DIV_CODE}
             , #{S_USER_ID}
             , GETDATE()
             , #{S_COMP_CODE}
             )        
    </insert>
    
    <select id="sbs030ukrsService.updateCheck" parameterType="Map" resultType="rMap">
        --sbs100ukrv.Csbs101ukrv[fnSbs101Save] Query03
        SELECT TYPE                                                             
             , DIV_CODE                                                         
             , ITEM_CODE                                                        
          FROM BPR300T                                                          
         WHERE TYPE             = #{TYPE}
           AND DIV_CODE         = #{DIV_CODE}
           AND ITEM_CODE        = #{ITEM_CODE}   
           AND CUSTOM_CODE      = #{CUSTOM_CODE}
           AND CUSTOM_ITEM_CODE = #{CUSTOM_ITEM_CODE}
           AND COMP_CODE        = #{S_COMP_CODE}   
    </select>
    
    <update id="sbs030ukrsService.updateDetail0_3" parameterType="Map">     
        --sbs100ukrv.Csbs101ukrv[fnSbs101Save] Query04
        UPDATE BPR300T
           SET CUSTOM_ITEM_NAME = #{CUSTOM_ITEM_NAME}
             , CUSTOM_ITEM_SPEC = #{CUSTOM_ITEM_SPEC}
             , ORDER_UNIT       = #{ORDER_UNIT}      
             , BASIS_P          = #{BASIS_P}         
             , ORDER_P          = #{ORDER_P}         
             , TRNS_RATE        = #{TRNS_RATE}       
             , AGENT_P          = #{AGENT_P}         
             , APLY_START_DATE  = #{APLY_START_DATE} 
             , ORDER_PRSN       = #{ORDER_PRSN}      
             , MAKER_NAME       = #{MAKER_NAME}      
             , AGREE_DATE       = #{AGREE_DATE}      
             , ORDER_RATE       = #{ORDER_RATE}      
             , REMARK           = #{REMARK}          
             , UPDATE_DB_USER   = #{S_USER_ID}  
             , UPDATE_DB_TIME   = GETDATE()
             
         WHERE TYPE             = #{TYPE}
           AND ITEM_CODE        = #{ITEM_CODE}
           AND CUSTOM_CODE      = #{CUSTOM_CODE}
           AND CUSTOM_ITEM_CODE = #{CUSTOM_ITEM_CODE}
           AND DIV_CODE         = #{DIV_CODE}
           AND COMP_CODE        = #{S_COMP_CODE}
                  
    </update>
    
    <select id="sbs030ukrsService.deleteCheck" parameterType="Map" resultType="rMap">
        --sbs100ukrv.Csbs101ukrv[fnSbs101Save] Query01
        SELECT TYPE                                                             
             , DIV_CODE                                                         
             , ITEM_CODE                                                        
          FROM BPR300T                                                          
         WHERE TYPE             = #{TYPE}
           AND DIV_CODE         = #{DIV_CODE}
           AND ITEM_CODE        = #{ITEM_CODE}
           AND CUSTOM_CODE      = #{CUSTOM_CODE}
           AND CUSTOM_ITEM_CODE = #{CUSTOM_ITEM_CODE}
           AND COMP_CODE        = #{S_COMP_CODE}
    </select>
    
    <delete id="sbs030ukrsService.deleteDetail0_3" parameterType="Map">     
        --sbs100ukrv.Csbs101ukrv[fnSbs101Save] Query02
        DELETE FROM BPR300T 
         WHERE TYPE             = #{TYPE}
           AND ITEM_CODE        = #{ITEM_CODE}
           AND CUSTOM_CODE      = #{CUSTOM_CODE}
           AND CUSTOM_ITEM_CODE = #{CUSTOM_ITEM_CODE}
           AND DIV_CODE         = #{DIV_CODE}
           AND COMP_CODE        = #{S_COMP_CODE}
                 
    </delete>
    
    <!--============================================================================= 배송처등록 =============================================================================-->
    <select id="sbs030ukrsService.selectList2" parameterType="Map" resultType="rMap">
        --sbs150ukrv.Csbs150ukrv[fnSbs150QStd] Query02
        SELECT CUSTOM_CODE                                                         
             , uniLITE.fnCustNameComp(COMP_CODE, #{S_COMP_CODE}, CUSTOM_CODE) AS CUSTOM_NAME 
             , CUSTOM_TYPE                                                         
             , AGENT_TYPE                                                          
             , TOP_NAME                                                            
             , TELEPHON                                                            
             , ADDR1 + ' ' + ADDR2 AS ADDRESS                                      
             , COMP_CODE                                                           
          FROM BCM100T       WITH (NOLOCK)                                                      
         WHERE USE_YN       = 'Y'                                                  
           AND CUSTOM_TYPE IN ('1','3')                                            
           AND COMP_CODE    = #{S_COMP_CODE}                                 
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_TYPE)">     
           AND CUSTOM_TYPE  = #{CUSTOM_TYPE}
           </if>                              
           <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
           AND AGENT_TYPE   = #{AGENT_TYPE}
           </if>
           
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE_FR)">
           AND CUSTOM_CODE     &gt;= #{CUSTOM_CODE_FR}				--거래처코드
           </if>
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE_TO)">
           AND CUSTOM_CODE     &lt;= #{CUSTOM_CODE_TO}				--거래처코드
           </if>
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME_FR) and @foren.Ognl@isEmpty(CUSTOM_CODE_FR)">
           AND CUSTOM_NAME     &gt;= #{CUSTOM_NAME_FR}				--거래처
           </if>
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME_TO) and @foren.Ognl@isEmpty(CUSTOM_CODE_TO)">
           AND CUSTOM_NAME     &lt;= #{CUSTOM_NAME_TO}				--거래처
           </if>
        ORDER BY CUSTOM_CODE
    </select>
    
    <select id="sbs030ukrsService.selectList2_2" parameterType="Map" resultType="rMap">
        --sbs150ukrv.Csbs150ukrv[fnSbs150QStd] Query03
        SELECT CUSTOM_CODE     
             , DVRY_CUST_SEQ   
             , DVRY_CUST_NM    
             , DVRY_CUST_PRSN  
             , DVRY_CUST_TEL   
             , DVRY_CUST_FAX   
             , DVRY_CUST_ZIP   
             , DVRY_CUST_ADD   
             , REMARK          
             , COMP_CODE       
             , BARCODE         
          FROM SCM100T         
         WHERE CUSTOM_CODE = #{CUSTOM_CODE_TEMP}
           AND COMP_CODE   = #{S_COMP_CODE}       
    </select>
    
    <insert id="sbs030ukrsService.insertDetail2_2" parameterType="Map">    
        --sbs150ukrv.Csbs150ukrv[fnSbs150Save] Query02
        INSERT INTO SCM100T
             ( CUSTOM_CODE
             , DVRY_CUST_SEQ
             , DVRY_CUST_NM
             , DVRY_CUST_PRSN
             , DVRY_CUST_TEL
             , DVRY_CUST_ADD
             , REMARK
             , COMP_CODE
             , BARCODE
             ) 
        VALUES
             ( #{CUSTOM_CODE}         
             , #{DVRY_CUST_SEQ}       
             , #{DVRY_CUST_NM}        
             , #{DVRY_CUST_PRSN}      
             , #{DVRY_CUST_TEL}       
             , #{DVRY_CUST_ADD}       
             , #{REMARK}              
             , #{S_COMP_CODE}           
             , #{BARCODE}             
             )           
    </insert>
    
    <update id="sbs030ukrsService.updateDetail2_2" parameterType="Map">     
        --sbs150ukrv.Csbs150ukrv[fnSbs150Save] Query02
        UPDATE SCM100T
           SET DVRY_CUST_NM   = #{DVRY_CUST_NM}  
             , DVRY_CUST_PRSN = #{DVRY_CUST_PRSN}
             , DVRY_CUST_TEL  = #{DVRY_CUST_TEL} 
             , DVRY_CUST_FAX  = #{DVRY_CUST_FAX} 
             , DVRY_CUST_ZIP  = #{DVRY_CUST_ZIP} 
             , DVRY_CUST_ADD  = #{DVRY_CUST_ADD} 
             , REMARK         = #{REMARK}        
             , BARCODE        = #{BARCODE}       
             
         WHERE CUSTOM_CODE    = #{CUSTOM_CODE}
           AND DVRY_CUST_SEQ  = #{DVRY_CUST_SEQ}
           AND COMP_CODE      = #{S_COMP_CODE}
    </update>
    
    <delete id="sbs030ukrsService.deleteDetail2_2" parameterType="Map">     
        --sbs150ukrv.Csbs150ukrv[fnSbs150Save] Query01
        DELETE FROM SCM100T 
         WHERE CUSTOM_CODE   = #{CUSTOM_CODE}
           AND DVRY_CUST_SEQ = #{DVRY_CUST_SEQ}
           AND COMP_CODE     = #{S_COMP_CODE}
    </delete>
    
    <!--============================================================================= 적요등록 =============================================================================-->
    <select id="sbs030ukrsService.selectList3" parameterType="Map" resultType="rMap">
        --sbs170ukrv.Csbs170ukrv[fnSbs170QStd] Query01
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
        SELECT REMARK_TYPE                         
             , REMARK_CD                           
             , REMARK_NAME                         
             , COMP_CODE                           
          FROM SBI100T      WITH (NOLOCK)                       
         WHERE COMP_CODE      = #{S_COMP_CODE}
           AND REMARK_TYPE    = #{REMARK_TYPE}
           <if test="@foren.Ognl@isNotEmpty(REMARK_CD)"> 
           AND REMARK_CD   LIKE #{REMARK_CD}
           </if>
           <if test="@foren.Ognl@isNotEmpty(REMARK_NAME)"> 
           AND REMARK_NAME LIKE #{REMARK_NAME}
           </if>
        ORDER BY REMARK_CD              
    </select>
    
    <insert id="sbs030ukrsService.insertDetail3" parameterType="Map">    
        --sbs170ukrv.Csbs170ukrv[fnSbs170Save] Query02
        INSERT INTO SBI100T
             ( REMARK_TYPE
             , REMARK_CD
             , REMARK_NAME
             , COMP_CODE
             ) 
        VALUES
             ( #{REMARK_TYPE} 
             , #{REMARK_CD}   
             , #{REMARK_NAME} 
             , #{S_COMP_CODE}   
             )                  
    </insert>
    
    <update id="sbs030ukrsService.updateDetail3" parameterType="Map">     
        --sbs170ukrv.Csbs170ukrv[fnSbs170Save] Query02
        UPDATE SBI100T
           SET REMARK_NAME = #{REMARK_NAME}
             
         WHERE REMARK_TYPE = #{REMARK_TYPE}  
           AND REMARK_CD   = #{REMARK_CD}    
           AND COMP_CODE   = #{S_COMP_CODE}
    </update>
    
    <delete id="sbs030ukrsService.deleteDetail3" parameterType="Map">     
        --sbs170ukrv.Csbs170ukrv[fnSbs170Save] Query01
        DELETE FROM SBI100T 
         WHERE REMARK_TYPE = #{REMARK_TYPE}  
           AND REMARK_CD   = #{REMARK_CD}    
           AND COMP_CODE   = #{S_COMP_CODE}
    </delete>
    
    <!--============================================================================= 고객기초잔액등록 =============================================================================-->
    <select id="sbs030ukrsService.selectSubCode" parameterType="Map" resultType="rMap">
        --sbs160ukrv.Csbs160ukrv[fnSbs160QStd] Query01
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
        SELECT ISNULL(SUB_CODE,'KRW') AS SUB_CODE
          FROM BSA100T WITH (NOLOCK)
         WHERE COMP_CODE  = #{S_COMP_CODE}
           AND MAIN_CODE  = 'B004'
           AND REF_CODE1 != 'NULL'
   </select>
    
    <select id="sbs030ukrsService.selectBasisYyyymm" parameterType="Map" resultType="rMap">
        --sbs160ukrv.Csbs160ukrv[fnSbs160QStd] Query02
        SELECT DISTINCT BASIS_YYYYMM
          FROM SAR100T WITH (NOLOCK)
         WHERE DIV_CODE  = #{DIV_CODE}
           AND COMP_CODE = #{S_COMP_CODE}     
    </select>
    
    <select id="sbs030ukrsService.selectSubCode2" parameterType="Map" resultType="rMap">
        --sbs160ukrv.Csbs160ukrv[fnSbs160QStd] Query03
        SELECT SUB_CODE
          FROM BSA100T WITH (NOLOCK)
         WHERE COMP_CODE = #{S_COMP_CODE} 
           AND MAIN_CODE = 'S025'
           AND REF_CODE1 = 'Y'                    
    </select>
    
    <select id="sbs030ukrsService.selectList4" parameterType="Map" resultType="rMap">
        --sbs160ukrv.Csbs160ukrv[fnSbs160QStd] Query04
        SELECT A.DIV_CODE                                                   
             , A.CUSTOM_CODE                                                
             , (SELECT uniLITE.fnCustNameComp(COMP_CODE, #{S_USER_ID}, CUSTOM_CODE) 
                  FROM BCM100T  WITH (NOLOCK)                                             
                 WHERE A.COMP_CODE   = COMP_CODE                            
                   AND A.CUSTOM_CODE = CUSTOM_CODE) AS CUSTOM_NAME          
             , A.MONEY_UNIT                                                 
             , A.BASIS_AMT_O                                                
             , A.BASIS_YYYYMM AS BASIS_YYYYMM                               
             , A.CREATE_LOC                                                 
             , A.UPDATE_DB_USER                                             
             , A.UPDATE_DB_TIME                                             
             , A.COMP_CODE                                                  
          FROM SAR100T A                                                    
             , BCM100T B                                                    
         WHERE A.COMP_CODE   = B.COMP_CODE                                  
           AND A.CUSTOM_CODE = B.CUSTOM_CODE                                
           AND A.DIV_CODE    = #{DIV_CODE}    
           AND A.COMP_CODE   = #{S_COMP_CODE}
           <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)"> 
           AND B.AGENT_TYPE     = #{AGENT_TYPE}
           </if>
           <if test="@foren.Ognl@isNotEmpty(BASIS_YYYYMM)"> 
           AND A.BASIS_YYYYMM   = #{BASIS_YYYYMM}
           </if>
           
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
           AND A.CUSTOM_CODE 		= #{CUSTOM_CODE}					/* 거래처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
           AND A.CUSTOM_CODE 		LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
           </if>
           <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
           AND B.CUSTOM_NAME 		LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
           </if>

         ORDER BY A.BASIS_YYYYMM, A.CUSTOM_CODE, A.MONEY_UNIT     
    </select>
    <select id="sbs030ukrsService.validate4" parameterType="Map" resultType="rMap">
    	BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @ERR_DESC   NVARCHAR(4000),
                    @ExistYN    NVARCHAR(01),
                    @subCode    NVARCHAR(2),
                    @sCloseFlag NVARCHAR(2),
                    @LANG_CODE	NVARCHAR(02)
                    
            SET     @ERR_DESC   = ''
            SET     @ExistYN    = 'N'
            SET     @subCode    = ''
            SET     @LANG_CODE	= #{S_LANG_CODE}

            SELECT @subCode = SUB_CODE
              FROM  BSA100T
             WHERE COMP_CODE = #{S_COMP_CODE}
               AND MAIN_CODE = 'S025'
               AND REF_CODE1 = 'Y'
               
            IF(@subCode = '1')
            BEGIN
                --SET @ERR_DESC = '54480; 미수잔액생성경로가 1.회계인 경우 입력할수 없습니다. 확인하시기 바랍니다.' 
				SET @ERR_DESC = uniLITE.fnGetErrorMsg_omega('54480', '', @LANG_CODE) + ';'			--54480
                GOTO ERROR_HANDLER
            END
            
            SELECT @ExistYN = 'Y'
              FROM SAR000T
             WHERE COMP_CODE = #{S_COMP_CODE}
               AND DIV_CODE  = #{DIV_CODE}
               AND LAST_YYYYMM = #{BASIS_YYYYMM}
            IF(@ExistYN = 'Y')
            BEGIN
                --SET @ERR_DESC = '54240; 이미 마감된 자료입니다.' 
				SET @ERR_DESC = uniLITE.fnGetErrorMsg_omega('54240', '', @LANG_CODE) + ';'			--54240
                GOTO ERROR_HANDLER
            END   
    
        ERROR_HANDLER:
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        
            IF @ERR_DESC != ''
                SELECT @ERR_DESC  AS ERROR_DESC
            ELSE
                SELECT TOP 1 '' ERROR_CODE, '' ERROR_DESC
        END
    </select>
    <update id="sbs030ukrsService.insertDetail4" parameterType="Map">  
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @EXIST_YN   NVARCHAR(1)
            
            SET @EXIST_YN = 'N'
            
            INSERT INTO SAR100T
                 ( COMP_CODE
                 , DIV_CODE
                 , CUSTOM_CODE
                 , MONEY_UNIT
                 , BASIS_AMT_O
                 , BASIS_YYYYMM
                 , CREATE_LOC
                 , UPDATE_DB_USER
                 , UPDATE_DB_TIME
                 ) 
            VALUES
                 ( #{S_COMP_CODE}          
                 , #{DIV_CODE}           
                 , #{CUSTOM_CODE}        
                 , #{MONEY_UNIT}         
                 , #{BASIS_AMT_O}        
                 , #{BASIS_YYYYMM}       
                 , #{CREATE_LOC}         
                 , #{S_USER_ID}     
                 , GETDATE()  
             )  
  
            --채권누계정보(SAT200T)에서 채권발생여부확인
            --sbs160ukrv.Csbs160ukrv[fnSbs160Save] Query06
            SELECT TOP 1 @EXIST_YN = 'Y'                                   
              FROM SAR200T                                     
             WHERE DIV_CODE     = #{DIV_CODE}   
               AND CUSTOM_CODE  = #{CUSTOM_CODE}
               AND MONEY_UNIT   = #{MONEY_UNIT} 
               AND BASIS_YYYYMM = #{BASIS_YYYYMM}
               AND COMP_CODE    = #{S_COMP_CODE}
           
           IF @EXIST_YN = 'N'       --SAR200T에 데이터가 없으면 INSERT
           BEGIN
                INSERT INTO SAR200T
                    ( DIV_CODE,    
                      CUSTOM_CODE, 
                      MONEY_UNIT,  
                      BASIS_AMT_O, 
                      BASIS_YYYYMM,
                      COMP_CODE, 
                      INSERT_DB_USER,
                      INSERT_DB_TIME,
                      UPDATE_DB_USER,
                      UPDATE_DB_TIME
                    )VALUES(
                      #{DIV_CODE},      
                      #{CUSTOM_CODE},   
                      #{MONEY_UNIT},    
                      #{BASIS_AMT_O},   
                      #{BASIS_YYYYMM},  
                      #{S_COMP_CODE},
                      #{S_USER_ID},     
                      GETDATE(),
                      #{S_USER_ID},     
                      GETDATE() 
                    )
           END
           ELSE                     --SAR200T에 데이터가 있으면 UPDATE
           BEGIN
                UPDATE SAR200T                                     
                   SET BASIS_AMT_O  =  #{BASIS_AMT_O},
                       UPDATE_DB_USER    = #{S_USER_ID},       
                       UPDATE_DB_TIME    = GETDATE() 
                 WHERE DIV_CODE     = #{DIV_CODE}
                   AND CUSTOM_CODE  = #{CUSTOM_CODE}
                   AND MONEY_UNIT   = #{MONEY_UNIT}
                   AND BASIS_YYYYMM = #{BASIS_YYYYMM}
                   AND COMP_CODE    = #{S_COMP_CODE}
           END     
                
               
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </update>
    
    <update id="sbs030ukrsService.updateDetail4" parameterType="Map">    
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @EXIST_YN   NVARCHAR(1)
            
            SET @EXIST_YN = 'N'
            
            UPDATE SAR100T
               SET BASIS_AMT_O       = #{BASIS_AMT_O}     
                 , BASIS_YYYYMM      = #{BASIS_YYYYMM}       
                 , CREATE_LOC        = #{CREATE_LOC}   
                 , UPDATE_DB_USER    = #{S_USER_ID}       
                 , UPDATE_DB_TIME    = GETDATE()             
             WHERE COMP_CODE       =  #{S_COMP_CODE}   
               AND DIV_CODE        =  #{DIV_CODE}      
               AND CUSTOM_CODE     =  #{CUSTOM_CODE}   
               AND MONEY_UNIT      =  #{MONEY_UNIT}
  
  
            --채권누계정보(SAT200T)에서 채권발생여부확인
            --sbs160ukrv.Csbs160ukrv[fnSbs160Save] Query06
            SELECT TOP 1 @EXIST_YN = 'Y'                                   
              FROM SAR200T                                     
             WHERE DIV_CODE     = #{DIV_CODE}   
               AND CUSTOM_CODE  = #{CUSTOM_CODE}
               AND MONEY_UNIT   = #{MONEY_UNIT} 
               AND BASIS_YYYYMM = #{BASIS_YYYYMM}
               AND COMP_CODE    = #{S_COMP_CODE}
           
           IF @EXIST_YN = 'N'       --SAR200T에 데이터가 없으면 INSERT
           BEGIN
                INSERT INTO SAR200T
                    ( DIV_CODE,    
                      CUSTOM_CODE, 
                      MONEY_UNIT,  
                      BASIS_AMT_O, 
                      BASIS_YYYYMM,
                      COMP_CODE, 
                      INSERT_DB_USER,
                      INSERT_DB_TIME,
                      UPDATE_DB_USER,
                      UPDATE_DB_TIME
                    )VALUES(
                      #{DIV_CODE},      
                      #{CUSTOM_CODE},   
                      #{MONEY_UNIT},    
                      #{BASIS_AMT_O},   
                      #{BASIS_YYYYMM},  
                      #{S_COMP_CODE},
                      #{S_USER_ID},     
                      GETDATE(),
                      #{S_USER_ID},     
                      GETDATE() 
                    )
           END
           ELSE                     --SAR200T에 데이터가 있으면 UPDATE
           BEGIN
                UPDATE SAR200T                                     
                   SET BASIS_AMT_O  =  #{BASIS_AMT_O},
                       UPDATE_DB_USER    = #{S_USER_ID},       
                       UPDATE_DB_TIME    = GETDATE() 
                 WHERE DIV_CODE     = #{DIV_CODE}
                   AND CUSTOM_CODE  = #{CUSTOM_CODE}
                   AND MONEY_UNIT   = #{MONEY_UNIT}
                   AND BASIS_YYYYMM = #{BASIS_YYYYMM}
                   AND COMP_CODE    = #{S_COMP_CODE}
           END     
                
               
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </update>
    
    <delete id="sbs030ukrsService.deleteDetail4" parameterType="Map">  
        BEGIN
            SET NOCOUNT ON
            SET ARITHABORT ON
        
            DECLARE @SALE_AMT_O   NUMERIC(30, 6)
            
            SET @SALE_AMT_O = 0
            
            --UBsa01Krv.CBsa300UKr[fnBsa300Save] Query05
            DELETE FROM SAR100T 
             WHERE DIV_CODE    = #{DIV_CODE}
               AND CUSTOM_CODE = #{CUSTOM_CODE}
               AND MONEY_UNIT  = #{MONEY_UNIT}
               AND COMP_CODE   = #{S_COMP_CODE}
  
  
            --채권누계정보(SAT200T)에서 채권발생여부확인
            --sbs160ukrv.Csbs160ukrv[fnSbs160Save] Query06
            SELECT @SALE_AMT_O = SALE_AMT_O                                  
              FROM SAR200T                                     
             WHERE DIV_CODE     = #{DIV_CODE}   
               AND CUSTOM_CODE  = #{CUSTOM_CODE}
               AND MONEY_UNIT   = #{MONEY_UNIT} 
               AND BASIS_YYYYMM = #{BASIS_YYYYMM}
               AND COMP_CODE    = #{S_COMP_CODE}
           
           IF @SALE_AMT_O &gt; 0
           BEGIN
                UPDATE SAR200T
                 SET BASIS_AMT_O = 0 
                 WHERE DIV_CODE     = #{DIV_CODE}   
                   AND CUSTOM_CODE  = #{CUSTOM_CODE}
                   AND MONEY_UNIT   = #{MONEY_UNIT} 
                   AND BASIS_YYYYMM = #{BASIS_YYYYMM}
                   AND COMP_CODE    = #{S_COMP_CODE}
           END
           ELSE
           BEGIN
                DELETE FROM SAR200T 
                 WHERE COMP_CODE       =  #{S_COMP_CODE}  
                   AND DIV_CODE        =  #{DIV_CODE}     
                   AND CUSTOM_CODE     =  #{CUSTOM_CODE}  
                   AND MONEY_UNIT      =  #{MONEY_UNIT}
                   AND BASIS_YYYYMM    =  #{BASIS_YYYYMM}
           END     
                
               
            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END
    </delete>
    
    <!--============================================================================= SET품목등록 =============================================================================-->
    <select id="sbs030ukrsService.selectList8_1" parameterType="Map" resultType="rMap">
        --set100ukrv.Cset100ukrv[fnSet100QStd] Query01
        BEGIN
            DECLARE         @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
                          , @DIV_CODE           NVARCHAR(08)                -- (필수) 사업장
                          , @ITEM_CODE          NVARCHAR(20)                -- (선택) 품목코드
                          , @ITEM_NAME          NVARCHAR(200)                -- (선택) 품목명
                          , @USER_ID            NVARCHAR(100)                -- (필수) USER ID
        
        --  1. 변수 값 할당 -------------------------------------------------------------------------------------------------
            SET @COMP_CODE          = #{S_COMP_CODE}
            SET @DIV_CODE           = #{DIV_CODE }
            SET @ITEM_CODE          = #{ITEM_CODE}
            SET @ITEM_NAME          = #{ITEM_NAME}
            SET @USER_ID            = #{S_USER_ID}
                        
        -----------------------------------------------------------------------------------------------------------------------
            DECLARE @RefItem            NVARCHAR(01)
        
            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  USER_ID = @USER_ID
        
            SET @RefItem = ISNULL(@RefItem, '0')
        
        -----------------------------------------------------------------------------------------------------------------------
            SELECT A.COMP_CODE
                 , A.DIV_CODE
                 , A.SET_ITEM_CODE
                 , A.CONST_ITEM_CODE
                 , A.CONST_SEQ
                 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                        WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                        WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                        ELSE C1.ITEM_NAME
                   END                          AS ITEM_NAME
                 , C1.SPEC
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
            FROM              SET100T A  WITH (NOLOCK)
                   INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
                                                      AND C1.ITEM_CODE = A.SET_ITEM_CODE
            WHERE  A.COMP_CODE          = @COMP_CODE
            AND    A.DIV_CODE           = @DIV_CODE
            AND    A.CONST_ITEM_CODE    = '$'  
            
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
            AND A.SET_ITEM_CODE 		= @ITEM_CODE						/* 품목코드  */
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
            AND A.SET_ITEM_CODE 		LIKE @ITEM_CODE + '%'				/* 품목코드  */
            </if>
            <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
            AND CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                     WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                     WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                         ELSE C1.ITEM_NAME
                   END					LIKE '%' + @ITEM_NAME + '%'			/* 품목명  */
            </if>
            ORDER BY A.SET_ITEM_CODE
        END                              
    </select>
    
    <insert id="sbs030ukrsService.insertDetail8_1" parameterType="Map">    
        --set100ukrv.Cset100ukrv[fnSet100Save] Query07
        INSERT INTO SET100T
             ( COMP_CODE
             , DIV_CODE
             , SET_ITEM_CODE
             , CONST_ITEM_CODE
             , CONST_SEQ
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             ) 
        VALUES
             ( #{COMP_CODE}       
             , #{DIV_CODE}        
             , #{SET_ITEM_CODE}   
             , '$'
             , #{CONST_SEQ}       
             , #{S_USER_ID}  
             , GETDATE()
             )        
    </insert>
    
    <select id="sbs030ukrsService.selectdelteCheck2" parameterType="Map" resultType="rMap">
        --set100ukrv.Cset100ukrv[fnSet100Save] Query02
        -- SET품목 삭제시 구성품목 존재여부 확인
        SELECT A.*
        FROM   SET100T A WITH (NOLOCK)
        WHERE  A.COMP_CODE        = #{COMP_CODE}
        AND    A.DIV_CODE         = #{DIV_CODE}
        AND    A.SET_ITEM_CODE    = #{SET_ITEM_CODE}
        AND    A.CONST_ITEM_CODE != '$'                               
    </select>
    
    <delete id="sbs030ukrsService.deleteDetail8_1" parameterType="Map">     
        --set100ukrv.Cset100ukrv[fnSet100Save] Query04
        DELETE FROM SET100T 
         WHERE COMP_CODE     = #{COMP_CODE}      
           AND DIV_CODE      = #{DIV_CODE}       
           AND SET_ITEM_CODE = #{SET_ITEM_CODE}  
    </delete>
    
    <select id="sbs030ukrsService.selectList8_2" parameterType="Map" resultType="rMap">
        --set100ukrv.Cset100ukrv[fnSet100QSt1] Query01
        BEGIN
            DECLARE         @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
                          , @DIV_CODE           NVARCHAR(08)                -- (필수) 사업장
                          , @SET_ITEM_CODE      NVARCHAR(20)                -- (필수) 세트품목
                          , @CONST_ITEM_NAME    NVARCHAR(40)                -- (선택) 구성품목(공백처리)
                          , @USER_ID            NVARCHAR(100)                -- (필수) USER ID
        
        --  1. 변수 값 할당 -------------------------------------------------------------------------------------------------
            SET @COMP_CODE          = #{S_COMP_CODE}
            SET @DIV_CODE           = #{DIV_CODE_TEMP}
            SET @SET_ITEM_CODE      = #{SET_ITEM_CODE_TEMP}
            SET @CONST_ITEM_NAME    = #{CONST_ITEM_NAME_TEMP}
            SET @USER_ID            = #{S_USER_ID}
        
        -----------------------------------------------------------------------------------------------------------------------
            DECLARE @RefItem            NVARCHAR(01)
        
            SELECT TOP 1 @RefItem = REF_ITEM
            FROM   BSA300T WITH (NOLOCK)
            WHERE  USER_ID = @USER_ID
        
            SET @RefItem = ISNULL(@RefItem, '0')
        
        -----------------------------------------------------------------------------------------------------------------------
            SELECT A.COMP_CODE
                 , A.DIV_CODE
                 , A.CONST_SEQ
                 , A.SET_ITEM_CODE
                 , A.CONST_ITEM_CODE
                 , CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                        WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                        WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                        ELSE C1.ITEM_NAME
                   END                          AS ITEM_NAME
                 , C1.SPEC
                 , C1.STOCK_UNIT
                 , A.CONST_Q
                 , A.BASIS_SET_Q
                 , A.SO_KIND
                 , A.USE_YN
                 , A.REMARK
                 , A.UPDATE_DB_USER
                 , A.UPDATE_DB_TIME
            FROM              SET100T A  WITH (NOLOCK)
                   INNER JOIN BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE = A.COMP_CODE
                                                      AND C1.ITEM_CODE = A.CONST_ITEM_CODE
            WHERE  A.COMP_CODE = @COMP_CODE
            AND    A.DIV_CODE  = @DIV_CODE
            AND    A.SET_ITEM_CODE = @SET_ITEM_CODE
            ORDER BY A.CONST_SEQ, A.CONST_ITEM_CODE
        END           
    </select>
    
    <insert id="sbs030ukrsService.insertDetail8_2" parameterType="Map">    
        --set100ukrv.Cset100ukrv[fnSet100Save] Query07
        INSERT INTO SET100T
             ( COMP_CODE
             , DIV_CODE
             , CONST_SEQ
             , SET_ITEM_CODE
             , CONST_ITEM_CODE
             , CONST_Q
             , BASIS_SET_Q
             , SO_KIND
             , USE_YN
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             ) 
        VALUES
             ( #{S_COMP_CODE}       
             , #{DIV_CODE}        
             , #{CONST_SEQ}       
             , #{SET_ITEM_CODE}   
             , #{CONST_ITEM_CODE} 
             , #{CONST_Q}         
             , #{BASIS_SET_Q}     
             , #{SO_KIND}         
             , #{USE_YN}          
             , #{S_USER_ID}  
             , GETDATE()  
             )        
    </insert>
    
    <update id="sbs030ukrsService.updateDetail8_2" parameterType="Map">     
        --set100ukrv.Cset100ukrv[fnSet100Save] Query07
        UPDATE SET100T
           SET CONST_SEQ       = #{CONST_SEQ}     
             , CONST_Q         = #{CONST_Q}       
             , BASIS_SET_Q     = #{BASIS_SET_Q}   
             , SO_KIND         = #{SO_KIND}       
             , USE_YN          = #{USE_YN}        
             , REMARK          = #{REMARK}        
             , UPDATE_DB_USER  = #{S_USER_ID}
             , UPDATE_DB_TIME  = GETDATE()
             
         WHERE COMP_CODE       =  #{S_COMP_CODE}      
           AND DIV_CODE        =  #{DIV_CODE}      
           AND SET_ITEM_CODE   =  #{SET_ITEM_CODE}  
           AND CONST_ITEM_CODE =  #{CONST_ITEM_CODE}    
    </update>
    
    <delete id="sbs030ukrsService.deleteDetail8_2" parameterType="Map">     
        --set100ukrv.Cset100ukrv[fnSet100Save] Query04
        DELETE FROM SET100T 
         WHERE COMP_CODE       = #{S_COMP_CODE}
           AND DIV_CODE        = #{DIV_CODE}
           AND SET_ITEM_CODE   = #{SET_ITEM_CODE}
           AND CONST_ITEM_CODE = #{CONST_ITEM_CODE}
    </delete>
</mapper>