<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="str110ukrvServiceImpl">
	<select id="str110ukrvServiceImpl.selectReturnNumMaster" parameterType="Map" resultType="rMap">
		/* str110ukrv.Cstr110ukrv[fnStr110QPop] Query01 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드   	*/
		          , @UserId      NVARCHAR(100) /* 사용자ID     */
		          , @LangType    NVARCHAR(2)  /* 언어구분    	*/
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형    */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    SELECT (CASE WHEN @RefItem = '1' THEN C.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN C.CUSTOM_NAME2
		                                     ELSE C.CUSTOM_NAME
		            END)                          AS CUSTOM_NAME
		         , A.INOUT_TYPE_DETAIL
		         , A.ITEM_CODE
		         , (CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN B.ITEM_NAME2
		                                     ELSE B.ITEM_NAME
		            END)                          AS ITEM_NAME
		         , B.SPEC
		         , CAST(A.INOUT_DATE AS DATETIME) AS INOUT_DATE
		         , A.ORDER_UNIT_Q                 AS INOUT_Q
		         , A.WH_CODE
		         , A.INOUT_PRSN
		         , A.INOUT_NUM
		         , A.PROJECT_NO
		         , A.DIV_CODE
		         , A.INOUT_CODE
		         , C.AGENT_TYPE				/*거래처 정보*/
		         , C.WON_CALC_BAS			/*거래처 정보*/
		         , C.TAX_TYPE               /*거래처 정보*/
		         , A.INSPEC_NUM                                     --20191004 추가
		         , A.MONEY_UNIT                                     --20191008 추가
		         , CASE WHEN ISNULL(A.EXCHG_RATE_O, 0) = 0 THEN 1   --20191011 추가
		                ELSE A.EXCHG_RATE_O
		           END                            AS EXCHG_RATE_O
		         , A.LOT_NO                       --20200115 추가
		         , A.BILL_TYPE                    --20210312 추가
		         , A.CARD_CUSTOM_CODE             --20210312 추가
		      FROM 		   BTR100T A WITH (NOLOCK)
		      	INNER JOIN BPR100T B WITH (NOLOCK)   ON B.COMP_CODE     = A.COMP_CODE
		                                            AND B.ITEM_CODE     = A.ITEM_CODE
		        INNER JOIN BCM100T C WITH (NOLOCK)   ON C.COMP_CODE     = A.COMP_CODE
		                                            AND C.CUSTOM_CODE   = A.INOUT_CODE
--		        INNER JOIN BSA210T D WITH (NOLOCK)   ON D.COMP_CODE 	= A.COMP_CODE
--          											AND D.TYPE_LEVEL 	= A.DIV_CODE
--          											AND D.TREE_CODE 	= A.DEPT_CODE
		     WHERE A.INOUT_TYPE = '3'
		       AND A.CREATE_LOC = '1'
		     <if test="@foren.Ognl@isNotEmpty(INOUT_PRSN)">
		       AND A.INOUT_PRSN     = #{INOUT_PRSN}
		     </if>
		       AND A.DIV_CODE       = #{DIV_CODE}
		     
		     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		       AND A.INOUT_CODE 		= #{CUSTOM_CODE}					/* 거래처코드  */
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		       AND A.INOUT_CODE 		LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
		       AND C.CUSTOM_NAME 		LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_FR)">
		       AND A.INOUT_DATE &gt;= #{INOUT_DATE_FR}
		     </if>
			 <if test="@foren.Ognl@isNotEmpty(INOUT_DATE_TO)">
		       AND A.INOUT_DATE &lt;= #{INOUT_DATE_TO}
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		       AND A.ITEM_CODE 		= #{ITEM_CODE}						/* 품목코드  */
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
		       AND A.ITEM_CODE 		LIKE #{ITEM_CODE} + '%'				/* 품목코드  */
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
		       AND B.ITEM_NAME 		LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
		     </if>
		     
		     <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
		       AND A.WH_CODE        = #{WH_CODE}
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(PJT_CODE)">		/*프로젝트번호*/
		        AND    A.PROJECT_NO = #{PJT_CODE}
		     </if>
<!-- 20191209 조회조건 추가(반품관리번호) -->
		     <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">		/*반품관리번호*/
		        AND    A.INSPEC_NUM LIKE #{INSPEC_NUM} + '%'
		     </if>
		       AND A.COMP_CODE      = @CompCode

		    ORDER BY C.CUSTOM_NAME, A.INOUT_DATE, A.INOUT_NUM

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
 	</select>

	<select id="str110ukrvServiceImpl.selectSaleReferList" parameterType="Map" resultType="rMap">
        --출고참조
        BEGIN
            DECLARE @COMP_CODE            NVARCHAR(08)        -- (필수) 법인코드
                  , @FR_INOUT_DATE        NVARCHAR(08)        -- (필수) From 수불일
                  , @TO_INOUT_DATE        NVARCHAR(08)        -- (필수) To 수불일
                  , @ITEM_CODE            NVARCHAR(20)        -- (선택) 품목코드
                  , @ITEM_NAME            NVARCHAR(200)        -- (선택) 품목명
                  , @DIV_CODE             NVARCHAR(08)        -- (선택) 사업장코드
                    --
                  , @INOUT_CODE           NVARCHAR(20)        -- (선택) 출고처
                  , @INOUT_CODE_NAME      NVARCHAR(40)        -- (선택) 출고처명
                  , @USER_ID              NVARCHAR(100)        -- (필수) 사용자 ID

            SET NOCOUNT ON
            SET ARITHABORT ON

            SET @COMP_CODE         = #{S_COMP_CODE}
            SET @DIV_CODE          = #{DIV_CODE}
            SET @FR_INOUT_DATE     = #{FR_INOUT_DATE}
            SET @TO_INOUT_DATE     = #{TO_INOUT_DATE}
            SET @ITEM_CODE         = #{ITEM_CODE}
            SET @ITEM_NAME         = #{ITEM_NAME}
            SET @INOUT_CODE        = #{CUSTOM_CODE}
            SET @INOUT_CODE_NAME   = #{CUSTOM_NAME}

            SET @USER_ID           = #{S_USER_ID}

        --  [ 명칭 참조 유형 ] ------------------------------------------------------------------------------------------------
            DECLARE @RefItem            NVARCHAR(01)

            SELECT  TOP 1 @RefItem = REF_ITEM
            FROM    BSA300T WITH (NOLOCK)
            WHERE   USER_ID = @USER_ID

            SET @RefItem = ISNULL(@RefItem, N'0')

        --  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
            DECLARE @DateFormat         NVARCHAR(10)

            SELECT  TOP 1 @DateFormat = CODE_NAME
            FROM    BSA100T WITH (NOLOCK)
            WHERE   COMP_CODE = @COMP_CODE
            AND     MAIN_CODE = N'B044'
            AND     REF_CODE1 = N'Y'

            SET @DateFormat = ISNULL(@DateFormat, N'YYYY.MM.DD')

        --  [ 시분초 필드 처리여부 설정 ] -------------------------------------------------------------------------------------
            DECLARE @TimeSI             NVARCHAR(01)
                  , @TimeSR             NVARCHAR(01)
                  , @TimeSS             NVARCHAR(01)

            SELECT  @TimeSI = MAX(CASE WHEN SUB_CODE = 'SI' THEN REF_CODE1 ELSE '' END)
                 ,  @TimeSR = MAX(CASE WHEN SUB_CODE = 'SR' THEN REF_CODE1 ELSE '' END)
                 ,  @TimeSS = MAX(CASE WHEN SUB_CODE = 'SS' THEN REF_CODE1 ELSE '' END)
            FROM    BSA100T WITH (NOLOCK)
            WHERE   COMP_CODE = @COMP_CODE
            AND     MAIN_CODE = N'S048'
            AND     SUB_CODE IN (N'SI', N'SR', N'SS')

            SET @TimeSI = ISNULL(@TimeSI, N'N')
            SET @TimeSR = ISNULL(@TimeSR, N'N')
            SET @TimeSS = ISNULL(@TimeSS, N'N')
		 --  [ 반품시 품목의 주반품 창고 사용여부 ] -------------------------------------------------------------------------------------
            DECLARE @refMainWhCode             NVARCHAR(20)

            SELECT @refMainWhCode =
				  	   CASE WHEN COUNT(1) = 1
								 THEN 'Y'
								 ELSE 'N'
					    END
            FROM    BSA100T WITH (NOLOCK)
            WHERE  COMP_CODE = 'MASTER'
            AND      MAIN_CODE = N'S147'
            AND      SUB_CODE IN (N'10')
			AND	   REF_CODE1 = N'Y'

        --  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
            SELECT  CAST(0 AS BIT)                                                                  AS CHOICE
                 ,  A.INOUT_CODE                                                                    AS CUSTOM_CODE
                 ,  A.CUSTOM_NAME                                                                   AS CUSTOM_NAME
                 ,  A.INOUT_DATE
                 ,  A.ITEM_CODE
                 ,  A.ITEM_NAME
                 ,  A.SPEC
                 ,  A.INOUT_Q           --출고량
                 ,  A.ORDER_UNIT        --단위
                 ,  A.LOT_NO
                 ,  A.TRNS_RATE         --입수
                 ,  A.ORDER_UNIT_Q      --출고량(재고단위)
                 ,  A.MONEY_UNIT
                 ,  A.INOUT_P
                 ,  A.INOUT_I
                 ,  A.INOUT_TYPE_DETAIL
                 ,  A.WH_CODE
                 ,  A.ACCOUNT_YNC
                 ,  A.INOUT_NUM
                 ,  A.INOUT_SEQ
                 ,  A.PRICE_YN
                 ,  A.SALE_DIV_CODE
                 ,  A.SALE_CUSTOM_CODE
                 ,  A.TAX_TYPE
                 ,  A.DISCOUNT_RATE
                 ,  A.DVRY_CUST_CD
                 ,  A.DVRY_CUST_NM
                 ,  A.ORDER_NUM
                 ,  A.ORDER_SEQ
                 ,  A.PROJECT_NO
		         --20200106 추가: 프로젝트명 가져오기 위해 추가
		         , Z1.PJT_NAME
                 ,  A.STOCK_CARE_YN
                 ,  A.SALE_PRSN
                 ,  A.BILL_TYPE
                 ,  A.CARD_CUSTOM_CODE  --20210312 수정: 참조 시, 매출의 부가세유형, 카드사 가져오기 위해 추가
                 ,  A.ORDER_TYPE
                 ,  A.AGENT_TYPE
                 ,  A.DEPT_CODE
                 ,  A.DIV_CODE
                 ,  A.ENRETURN_Q
                 ,  A.MAIN_WH_CODE
                 ,  @refMainWhCode AS MAIN_WH_CODE_YN
                 --20190618 추가
                 ,  A.EXCHG_RATE_O                                                                  AS EXCHG_RATE_O
                 ,  A.TAX_INOUT                                                                     --20210521 추가: 세액포함여부
            FROM    (
                    SELECT  A.COMP_CODE
                         ,  A.DIV_CODE
                         ,  A.ITEM_CODE
                         ,  CASE WHEN @RefItem = '0' THEN C1.ITEM_NAME
                                 WHEN @RefItem = '1' THEN C1.ITEM_NAME1
                                 WHEN @RefItem = '2' THEN C1.ITEM_NAME2
                                 ELSE ''
                            END                                                                                     AS ITEM_NAME
                         ,  C1.SPEC
                         ,  A.ORDER_UNIT
                         , (CASE WHEN A.CREATE_LOC = '1' THEN A.ORDER_UNIT_Q
                                 WHEN A.CREATE_LOC = '5' THEN A.INOUT_Q / ISNULL(A.TRNS_RATE, 1)
                                 ELSE 0 END) * (CASE WHEN A.INOUT_TYPE = '3' THEN -1 ELSE 1 END)                   AS ORDER_UNIT_Q
                         ,  A.ORDER_UNIT_P
                         ,  A.TRNS_RATE
                         ,  C1.STOCK_UNIT
                         ,  A.INOUT_Q         * (CASE WHEN A.INOUT_TYPE = '3' THEN -1 ELSE 1 END)                   AS INOUT_Q
                         ,  A.ORDER_UNIT_P                                                                          AS INOUT_P
                         ,  A.MONEY_UNIT
                         ,  A.EXCHG_RATE_O
                         ,  A.INOUT_FOR_O     * (CASE WHEN A.INOUT_TYPE = '3' THEN -1 ELSE 1 END)                   AS INOUT_FOR_O
                         ,  A.INOUT_I         * (CASE WHEN A.INOUT_TYPE = '3' THEN -1 ELSE 1 END)                   AS INOUT_I
                         ,  A.INOUT_TYPE_DETAIL
                         ,  A.INOUT_CODE_TYPE
                         ,  CASE WHEN A.CREATE_LOC = '1'  THEN A.INOUT_CODE
                                 WHEN A.CREATE_LOC = '5'  THEN A.INOUT_CODE
                                 ELSE A.SALE_CUSTOM_CODE
                            END                                                                                    AS INOUT_CODE
                         ,  CASE WHEN A.CREATE_LOC      = '1' THEN CASE WHEN  @RefItem = '1' THEN ISNULL(D1.CUSTOM_NAME1, '')
                                                                        WHEN  @RefItem = '2' THEN ISNULL(D1.CUSTOM_NAME2, '')
                                                                        ELSE  ISNULL(D1.CUSTOM_NAME, '') END
                                 WHEN A.INOUT_CODE_TYPE = '3' THEN ISNULL(C4.TREE_NAME, '')
                                 WHEN A.INOUT_CODE_TYPE = '4' THEN CASE WHEN  @RefItem = '1' THEN ISNULL(D1.CUSTOM_NAME1, '')
                                                                        WHEN  @RefItem = '2' THEN ISNULL(D1.CUSTOM_NAME2, '')
                                                                        ELSE  ISNULL(D1.CUSTOM_NAME, '') END
                                 ELSE ''
                            END                                                                                     AS INOUT_NAME
                         ,  CONVERT(NVARCHAR(10),
                            REPLACE(
                            REPLACE(
                            REPLACE(@DateFormat, N'YYYY', SUBSTRING(A.INOUT_DATE, 1, 4))
                                               , N'MM',   SUBSTRING(A.INOUT_DATE, 5, 2))
                                               , N'DD',   SUBSTRING(A.INOUT_DATE, 7, 2)))                           AS INOUT_DATE
                         ,  D2.DVRY_CUST_NM                                                                         AS DVRY_CUST_NAME
                         ,  M1.CODE_NAME                                                                            AS DOM_FORIGN
                         ,  A.WH_CODE
                         ,  A.INOUT_PRSN
                         ,  CONVERT(NVARCHAR(10),
                            REPLACE(
                            REPLACE(
                            REPLACE(@DateFormat, N'YYYY', SUBSTRING(D3.ISSUE_DATE, 1, 4))
                                               , N'MM',   SUBSTRING(D3.ISSUE_DATE, 5, 2))
                                               , N'DD',   SUBSTRING(D3.ISSUE_DATE, 7, 2)))                          AS ISSUE_DATE
                         ,  RTRIM(' ' + CASE @TimeSR WHEN 'Y' THEN ISNULL(D3.DELIVERY_TIME,'')
                                                     ELSE ''
                                         END)                                                                       AS ISSUE_TIME
                         ,  A.ISSUE_REQ_NUM
                         ,  A.ACCOUNT_YNC
                         ,  A.ORDER_NUM
                         ,  A.ORDER_SEQ
                         ,  CONVERT(NVARCHAR(10),
                            REPLACE(
                            REPLACE(
                            REPLACE(@DateFormat, N'YYYY', SUBSTRING(D4.DVRY_DATE, 1, 4))
                                               , N'MM',   SUBSTRING(D4.DVRY_DATE, 5, 2))
                                               , N'DD',   SUBSTRING(D4.DVRY_DATE, 7, 2)))                           AS DVRY_DATE
                         ,  RTRIM(' ' + CASE @TimeSS WHEN 'Y' THEN ISNULL(D4.DVRY_TIME,'')
                                                     ELSE ''
                                         END)                                                                       AS DVRY_TIME
                         ,  CONVERT(NVARCHAR(10),
                            REPLACE(
                            REPLACE(
                            REPLACE(@DateFormat, N'YYYY', SUBSTRING(A.DELIVERY_DATE, 1, 4))
                                               , N'MM',   SUBSTRING(A.DELIVERY_DATE, 5, 2))
                                               , N'DD',   SUBSTRING(A.DELIVERY_DATE, 7, 2)))                        AS DELIVERY_DATE
                         ,  RTRIM(' ' + CASE @TimeSI WHEN 'Y' THEN ISNULL(A.DELIVERY_TIME,'')
                                                     ELSE ''
                                         END)                                                                       AS DELIVERY_TIME
                         ,  (CASE WHEN A.CREATE_LOC = '1' THEN A.ACCOUNT_Q
                                  WHEN A.CREATE_LOC = '5' THEN (ISNULL(E1.LLC_ACCOUNT_Q, 0) + ISNULL(E2.MLC_ACCOUNT_Q, 0)) / A.TRNS_RATE
                                  ELSE 0 END) * (CASE WHEN A.INOUT_TYPE = '3' THEN -1 ELSE 1 END)                   AS ACCOUNT_Q
                         ,  A.LC_NUM
                         ,  A.INOUT_NUM
                         ,  D4.PO_NUM
                         ,  D4.PO_SEQ
                         ,  A.INOUT_SEQ
                         ,  A.INOUT_METH
                         ,  ISNULL(B.EVAL_INOUT_P, 0)                                                               AS EVAL_INOUT_P
                         ,  RTRIM(A.INOUT_NUM) + RTRIM(CONVERT(VARCHAR(4), A.INOUT_SEQ))                            AS SORT_KEY
                         ,  A.UPDATE_DB_TIME
                         ,  A.SALE_CUSTOM_CODE
                         ,  CASE WHEN @RefItem = '0' THEN D1.CUSTOM_NAME
                                 WHEN @RefItem = '1' THEN D1.CUSTOM_NAME1
                                 WHEN @RefItem = '2' THEN D1.CUSTOM_NAME2
                                 ELSE ''
                            END                                                                                     AS CUSTOM_NAME
                         ,  A.DVRY_CUST_CD
                         ,  D2.DVRY_CUST_NM
                         ,  A.LOT_NO
                         ,  A.REMARK
                         ,  A.PRICE_YN
                         ,  A.SALE_DIV_CODE
                         ,  A.TAX_TYPE
                         ,  A.DISCOUNT_RATE
                         ,  A.PROJECT_NO
                         ,  C1.STOCK_CARE_YN
                         ,  A.SALE_PRSN
                         ,  CASE WHEN ISNULL(C.BILL_TYPE, '') = '' THEN A.BILL_TYPE
                                 ELSE ISNULL(C.BILL_TYPE, '')
                            END                                                   AS BILL_TYPE            --20210312 수정: 참조 시, 매출의 부가세유형, 카드사 가져오기 위해 추가
                         ,  CASE WHEN ISNULL(C.BILL_TYPE, '') = '' THEN A.CARD_CUSTOM_CODE
                                 ELSE ISNULL(C.CARD_CUSTOM_CODE, '')
                            END                                                   AS CARD_CUSTOM_CODE     --20210312 수정: 참조 시, 매출의 부가세유형, 카드사 가져오기 위해 추가
                         ,  A.ORDER_TYPE
                         ,  A.AGENT_TYPE
                         ,  A.DEPT_CODE
                        -- ,  ISNULL(A.ORDER_UNIT_Q, 0) - ISNULL(D4.RETURN_Q, 0)     AS ENRETURN_Q
                         ,  ISNULL(A.ORDER_UNIT_Q, 0) - ISNULL(A.RETURN_QTY, 0)      AS ENRETURN_Q
                         ,  C2.WH_CODE AS MAIN_WH_CODE
                         ,  CASE WHEN ISNULL(A.TAX_INOUT, '') = '' THEN D5.TAX_INOUT
                                 ELSE ISNULL(A.TAX_INOUT, '')
                            END                                                      AS TAX_INOUT         --20210521 수정: 세액포함여부
                    FROM                BTR100T A  WITH (NOLOCK, INDEX(BTR100T_IDX02))
                            --20210312 추가: 참조 시, 매출의 부가세유형, 카드사 가져오기 위해 추가
                            LEFT  JOIN (SELECT S1.*
                                             , S2.INOUT_NUM
                                             , S2.INOUT_SEQ
                                          FROM            SSA100T S1 WITH (NOLOCK)
                                               INNER JOIN SSA110T S2 WITH (NOLOCK)
                                                                       ON S1.COMP_CODE  = S2.COMP_CODE
                                                                      AND S1.DIV_CODE   = S2.DIV_CODE
                                                                      AND S1.BILL_NUM   = S2.BILL_NUM
                                                                      AND S2.INOUT_TYPE = '2'
                                       ) C                     ON A.COMP_CODE     = C.COMP_CODE
                                                              AND A.DIV_CODE      = C.DIV_CODE
                                                              AND A.INOUT_NUM     = C.INOUT_NUM
                                                              AND A.INOUT_SEQ     = C.INOUT_SEQ
                            LEFT  JOIN  BIV600T B  WITH (NOLOCK) ON B.COMP_CODE       = A.COMP_CODE
                                                                AND B.INOUT_NUM       = A.INOUT_NUM
                                                                AND B.INOUT_SEQ       = A.INOUT_SEQ
                                                                AND B.SPLIT_SEQ       = 0
                                                                AND B.INOUT_TYPE      = A.INOUT_TYPE
                                                                AND B.DIV_CODE        = A.DIV_CODE
                                                                AND B.DEL_FLAG        = 'N'
                            LEFT  JOIN  BPR100T C1 WITH (NOLOCK) ON C1.COMP_CODE      = A.COMP_CODE
                                                                AND C1.ITEM_CODE      = A.ITEM_CODE
                            LEFT  JOIN  BPR200T C2 WITH (NOLOCK) ON C2.COMP_CODE      = A.COMP_CODE
                                                                AND C2.DIV_CODE       = A.DIV_CODE
                                                                AND C2.ITEM_CODE      = A.ITEM_CODE
                            LEFT  JOIN  BPR100T C3 WITH (NOLOCK) ON C3.COMP_CODE      = C1.COMP_CODE
                                                                AND C3.ITEM_CODE      = C1.ITEM_GROUP
                            LEFT  JOIN  BSA230T C4 WITH (NOLOCK) ON C4.COMP_CODE      = A.COMP_CODE
                                                                AND C4.TYPE_LEVEL     = A.DIV_CODE
                                                                AND C4.TREE_CODE      = A.INOUT_CODE
                            LEFT  JOIN  BCM100T D1 WITH (NOLOCK) ON D1.COMP_CODE      = A.COMP_CODE
                                                                AND D1.CUSTOM_CODE    = A.INOUT_CODE
                            LEFT  JOIN  SCM100T D2 WITH (NOLOCK) ON D2.COMP_CODE      = A.COMP_CODE
                                                                AND D2.CUSTOM_CODE    = A.INOUT_CODE
                                                                AND A.DVRY_CUST_CD    = CONVERT(NVARCHAR(08), D2.DVRY_CUST_SEQ)
                            LEFT  JOIN  SRQ100T D3 WITH (NOLOCK) ON D3.COMP_CODE      = A.COMP_CODE
                                                                AND D3.DIV_CODE       = A.DIV_CODE
                                                                AND D3.ISSUE_REQ_NUM  = A.ISSUE_REQ_NUM
                                                                AND D3.ISSUE_REQ_SEQ  = A.ISSUE_REQ_SEQ
                            LEFT  JOIN  SOF110T D4 WITH (NOLOCK) ON D4.COMP_CODE      = A.COMP_CODE
                                                                AND D4.DIV_CODE       = A.DIV_CODE
                                                                AND D4.ORDER_NUM      = A.ORDER_NUM
                                                                AND D4.SER_NO         = A.ORDER_SEQ
                            --20210521 추가: 세액포함여부 가져오기 위해 추가
                            LEFT  JOIN  SOF100T D5 WITH (NOLOCK) ON D5.COMP_CODE      = D4.COMP_CODE
                                                                AND D5.DIV_CODE       = D4.DIV_CODE
                                                                AND D5.ORDER_NUM      = D4.ORDER_NUM
                            LEFT  JOIN  BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE      = A.COMP_CODE
                                                                AND M1.MAIN_CODE      = 'B019'
                                                                AND M1.SUB_CODE       = CASE WHEN A.CREATE_LOC = '1' THEN '1' ELSE '2' END
                            LEFT  JOIN  (
                                        SELECT  COMP_CODE, DIV_CODE, LLC_SER_NO, LLC_AMEND_SEQ, SUM(QTY*ISNULL(TRANS_RATE,1)) AS LLC_ACCOUNT_Q
                                        FROM    TEC130T WITH (NOLOCK)
                                        WHERE   COMP_CODE   = @COMP_CODE
                                        GROUP   BY COMP_CODE, DIV_CODE, LLC_SER_NO, LLC_AMEND_SEQ
                                        ) E1                     ON E1.COMP_CODE      = A.COMP_CODE
                                                                AND E1.DIV_CODE       = A.DIV_CODE
                                                                AND E1.LLC_SER_NO     = A.LC_NUM
                                                                AND E1.LLC_AMEND_SEQ  = A.LC_AMEND_SEQ
                                                                AND A.CREATE_LOC      = '5'
                                                                AND A.TRADE_LOC       = '2'
                            LEFT  JOIN  (
                                        SELECT  A.COMP_CODE, A.DIV_CODE, A.SO_SER, A.SO_SER_NO, SUM(A.QTY*ISNULL(B.TRANS_RATE, 1)) AS MLC_ACCOUNT_Q
                                        FROM                TED110T A  WITH (NOLOCK)
                                                LEFT  JOIN  TEC110T B  WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                                                    AND B.PASS_SER    = A.PASS_SER
                                                                                    AND B.PASS_SER_NO = A.PASS_SER_NO
                                        WHERE   A.COMP_CODE = @COMP_CODE
                                        GROUP BY A.COMP_CODE, A.DIV_CODE, A.SO_SER, A.SO_SER_NO
                                        ) E2                     ON E2.COMP_CODE      = A.COMP_CODE
                                                                AND E2.DIV_CODE       = A.DIV_CODE
                                                                AND E2.SO_SER_NO      = A.ORDER_NUM
                                                                AND E2.SO_SER         = A.ORDER_SEQ
                                                                AND A.CREATE_LOC      = '5'
                                                                AND A.TRADE_LOC      != '2'
                    WHERE   A.COMP_CODE            = @COMP_CODE
                    AND     A.DIV_CODE             = @DIV_CODE
		       <if test="@foren.Ognl@isNotEmpty(FR_INOUT_DATE)">
                    AND     A.INOUT_DATE       &gt;= @FR_INOUT_DATE
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(TO_INOUT_DATE)">
                    AND     A.INOUT_DATE       &lt;= @TO_INOUT_DATE
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(LOT_NO)">
		            --20191014 LIKE로 변경
                    AND     A.LOT_NO LIKE #{LOT_NO} + '%'
		       </if>
<!-- 20191129 출고참조 팝업 검색조건(출고창고, 출고창고CELL) 추가 -->
		       <if test="@foren.Ognl@isNotEmpty(WH_CODE)">
                    AND     A.WH_CODE           = #{WH_CODE}
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(WH_CELL_CODE)">
                    AND     A.WH_CELL_CODE      = #{WH_CELL_CODE}
		       </if>
                    AND     A.CREATE_LOC          IN ('1', '5')
                    AND     A.INOUT_TYPE        = '2'
                    -- 품목코드
                    AND   ((A.ITEM_CODE        LIKE @ITEM_CODE + '%'       AND @ITEM_CODE         != '') OR (@ITEM_CODE         = ''))
                    AND   ((
                           (C1.ITEM_NAME       LIKE '%' + @ITEM_NAME + '%'       AND @ITEM_NAME         != '' AND @RefItem = '0')
                    OR     (C1.ITEM_NAME1      LIKE '%' + @ITEM_NAME + '%'       AND @ITEM_NAME         != '' AND @RefItem = '1')
                    OR     (C1.ITEM_NAME2      LIKE '%' + @ITEM_NAME + '%'       AND @ITEM_NAME         != '' AND @RefItem = '2')
                           ) OR (@ITEM_NAME       = ''))
                    -- 출고처
                    AND   ((A.INOUT_CODE LIKE @INOUT_CODE + '%'      AND @INOUT_CODE        != '') OR (@INOUT_CODE        = ''))
                    AND   ((
                           (D1.CUSTOM_NAME     LIKE '%' + @INOUT_CODE_NAME + '%' AND @INOUT_CODE_NAME   != '' AND @RefItem = '0')
                    OR     (D1.CUSTOM_NAME1    LIKE '%' + @INOUT_CODE_NAME + '%' AND @INOUT_CODE_NAME   != '' AND @RefItem = '1')
                    OR     (D1.CUSTOM_NAME2    LIKE '%' + @INOUT_CODE_NAME + '%' AND @INOUT_CODE_NAME   != '' AND @RefItem = '2')
                           ) OR (@INOUT_CODE_NAME     = ''))
                 --   AND     CASE WHEN ISNULL(D4.ORDER_NUM, '') != ''
                 --                THEN ISNULL(A.ORDER_UNIT_Q, 0) - ISNULL(D4.RETURN_Q, 0)
                 --                ELSE 1
                 --           END > 0
                    AND  ISNULL(A.ORDER_UNIT_Q, 0) - ISNULL(A.RETURN_QTY, 0) > 0
<!-- 20210331 추가: 고객명(월드와이드메모리), 20210421 수정: 수주테이블 데이터까지 검색 -->
		       <if test="@foren.Ognl@isNotEmpty(CUSTOM_PRSN)">
                    AND     (A.CUSTOM_PRSN         LIKE '%' + #{CUSTOM_PRSN} + '%'
                          OR D4.ORDER_NAME         LIKE '%' + #{CUSTOM_PRSN} + '%'
                          OR D4.RECEIVER_NAME      LIKE '%' + #{CUSTOM_PRSN} + '%')
		       </if>
                    ) A
		           --20200106 추가: 프로젝트명 가져오기 위해 추가
		           LEFT  JOIN BCM600T Z1 WITH(NOLOCK) ON Z1.COMP_CODE     = A.COMP_CODE
		                                             AND Z1.PJT_CODE      = A.PROJECT_NO
            ORDER   BY 1, A.INOUT_TYPE_DETAIL, A.INOUT_CODE_TYPE, A.INOUT_CODE, A.INOUT_DATE, A.INOUT_NUM, A.INOUT_SEQ

            SET NOCOUNT OFF
            SET ARITHABORT OFF
        END

 	</select>

	<select id="str110ukrvServiceImpl.selectOrderReferList" parameterType="Map" resultType="rMap">
		/* str110ukrv.Cstr110ukrv[fnStr110QRef] Query01 */
		--수주참조
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    SELECT CAST(0 AS BIT)                                  AS CHOICE
		         , B.ITEM_CODE
		         , (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C.ITEM_NAME2
		                                     ELSE C.ITEM_NAME
		            END)                                           AS ITEM_NAME
		         , C.SPEC
		         , CAST(A.ORDER_DATE AS DATETIME)                  AS ORDER_DATE
		         , B.ORDER_UNIT
		         , B.ORDER_Q
		         , ISNULL(B.OUTSTOCK_Q,0) - ISNULL(B.RETURN_Q,0)   AS ENRETURN_Q
		         , B.ORDER_P
		         , M1.CODE_NAME                                    AS ORDER_PRSN
		         , M2.CODE_NAME                                    AS ORDER_TYPE
		         , A.ORDER_NUM
		         , B.SER_NO
		         , B.SALE_CUST_CD
		         , (CASE WHEN @RefItem = '1' THEN D.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN D.CUSTOM_NAME2
		                                     ELSE D.CUSTOM_NAME
		            END)                                           AS SALE_CUST_NM
		         , B.DVRY_CUST_CD
		         , E.DVRY_CUST_NM
		         --202001016 수정: detail의 project_no 가져오도록 수정
		         , B.PROJECT_NO
		         --20200106 추가: 프로젝트명 가져오기 위해 추가
		         , Z1.PJT_NAME
		         , A.TAX_INOUT
		         , A.TAX_INOUT                                     AS SOF100_TAX_INOUT
		         , B.TRANS_RATE
		         , B.TAX_TYPE
		         , B.PRICE_YN
		         , C.STOCK_CARE_YN
		         , B.DISCOUNT_RATE
		         , A.ORDER_PRSN                                    AS ORDER_PRSN_CD
		         , B.DIV_CODE
		         , B.OUT_DIV_CODE
		         , A.BILL_TYPE
		         , A.ORDER_TYPE                                    AS ORDER_TYPE_CD
		         , A.AGENT_TYPE
		         , A.DEPT_CODE
		         , F.ITEM_ACCOUNT
		         --20190618 추가
		         , A.MONEY_UNIT
		         , A.EXCHG_RATE_O                                  AS EXCHG_RATE_O
		      FROM            SOF100T A  WITH (NOLOCK)
		           INNER JOIN SOF110T B  WITH (NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
		                                              AND B.DIV_CODE      = A.DIV_CODE
		                                              AND B.ORDER_NUM     = A.ORDER_NUM
		           INNER JOIN BPR100T C  WITH (NOLOCK) ON C.COMP_CODE     = B.COMP_CODE
		                                              AND C.ITEM_CODE     = B.ITEM_CODE
		           LEFT  JOIN BCM100T D  WITH (NOLOCK) ON D.COMP_CODE     = B.COMP_CODE
		                                              AND D.CUSTOM_CODE   = B.SALE_CUST_CD
		           LEFT  JOIN SCM100T E  WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
		                                              AND E.CUSTOM_CODE   = A.CUSTOM_CODE
		                                              AND B.DVRY_CUST_CD  = CONVERT(NVARCHAR(08), E.DVRY_CUST_SEQ)
		           LEFT  JOIN BSA100T M1 WITH (NOLOCK) ON M1.COMP_CODE    = A.COMP_CODE
		                                              AND M1.MAIN_CODE    = 'S010'
		                                              AND M1.SUB_CODE     = A.ORDER_PRSN
		           LEFT  JOIN BSA100T M2 WITH (NOLOCK) ON M2.COMP_CODE    = A.COMP_CODE
		                                              AND M2.MAIN_CODE    = 'S002'
		                                              AND M2.SUB_CODE     = A.ORDER_TYPE
		           INNER JOIN BPR200T F  WITH (NOLOCK) ON F.COMP_CODE     = B.COMP_CODE
		                                              AND F.DIV_CODE      = B.DIV_CODE
		                                              AND F.ITEM_CODE     = B.ITEM_CODE
		           --20200106 추가: 프로젝트명 가져오기 위해 추가
		           LEFT  JOIN BCM600T Z1 WITH(NOLOCK) ON Z1.COMP_CODE     = B.COMP_CODE
		                                             AND Z1.PJT_CODE      = B.PROJECT_NO
		     WHERE ISNULL(B.OUTSTOCK_Q,0) &gt; ISNULL(B.RETURN_Q,0)
		       AND ISNULL(A.STATUS,'6')   = '6'        /* 승인완결여부 */

		       <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		       AND B.OUT_DIV_CODE    = #{DIV_CODE}  /*마스터폼정보*/   	    /* 사업장 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		       AND A.CUSTOM_CODE     = #{CUSTOM_CODE}/*마스터폼정보*/      /* 거래처 */
		       </if>
		       
		       <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
		       AND B.ITEM_CODE 		= #{ITEM_CODE}						/* 품목코드  */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
		       AND B.ITEM_CODE 		LIKE #{ITEM_CODE} + '%'				/* 품목코드  */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
		       AND (CASE WHEN @RefItem = '1' THEN C.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN C.ITEM_NAME2
		                                     ELSE C.ITEM_NAME
		            END) 			LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
		       </if>
		       
		       <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_FR)">
		       AND A.ORDER_DATE  &gt;= #{ORDER_DATE_FR}     			/* 수주일(Fr) */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ORDER_DATE_TO)">
		       AND A.ORDER_DATE  &lt;= #{ORDER_DATE_TO}     			/* 수주일(To) */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ORDER_NUM)">
		       AND A.ORDER_NUM       = #{ORDER_NUM}    		    		/* 수주번호 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
		       AND A.PROJECT_NO      = #{PJT_CODE}   		    		/* 프로젝트번호 */
		       </if>
		       <if test="@foren.Ognl@isNotEmpty(ORDER_PRSN)">
		       AND A.ORDER_PRSN      = #{ORDER_PRSN}      				/* 영업담당 */
		       </if>

		       AND A.COMP_CODE       = @CompCode      					/* 법인코드 */

		     ORDER BY B.ITEM_CODE, A.ORDER_DATE

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
 	</select>

	<select id="str110ukrvServiceImpl.selectDetailList" parameterType="Map" resultType="rMap">
		/* str110ukrv.Cstr110ukrv[fnStr110QStd] Query01 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /* 명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    SELECT A.INOUT_SEQ
		         , A.INOUT_TYPE_DETAIL
		         , A.WH_CODE
                 , A.WH_CELL_CODE
		         , A.ITEM_CODE
		         , (CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
		                 WHEN @RefItem = '2' THEN B.ITEM_NAME2
		                                     ELSE B.ITEM_NAME
		            END)                              AS ITEM_NAME
		         , B.SPEC
		         , A.ORDER_UNIT
		         , A.TRNS_RATE
		         , A.ORDER_UNIT_Q
		         , A.ORDER_UNIT_P
		         , A.ORDER_UNIT_O
		         , A.TAX_TYPE
		         , A.INOUT_TAX_AMT
		         , A.ORDER_UNIT_O + A.INOUT_TAX_AMT   AS ORDER_AMT_SUM
		         --20191011 추가: EXCHANGE_AMOUNT(환산액), 20200611 수정: 자사단가 가져오는 로직 수정
		         , (A.ORDER_UNIT_O + A.INOUT_TAX_AMT)
		           * A.EXCHG_RATE_O
		           / unilite.fnGetExchangeRateBasis(A.COMP_CODE, A.MONEY_UNIT)                    AS EXCHANGE_AMOUNT
		         , (A.ORDER_UNIT_O + A.INOUT_TAX_AMT) AS ORDER_O_TAX_O
		         , ISNULL(A.DISCOUNT_RATE, 0)         AS DISCOUNT_RATE
		         , A.ITEM_STATUS
		         , A.ACCOUNT_YNC
		         , A.ORDER_NUM
		         , A.ORDER_SEQ
		         , A.SALE_DIV_CODE
		         , A.SALE_CUSTOM_CODE
		         , (CASE WHEN @RefItem = '1' THEN E.CUSTOM_NAME1
		                 WHEN @RefItem = '2' THEN E.CUSTOM_NAME2
		                                     ELSE E.CUSTOM_NAME
		            END)                              AS SALE_CUSTOM_NAME
		         , A.DVRY_CUST_CD
		         , F.DVRY_CUST_NM
		         , A.PROJECT_NO
		         --20200106 추가: 프로젝트명 가져오기 위해 추가
		         , Z1.PJT_NAME
		         , A.LOT_NO
		         , A.REMARK
		        /* HIDDEN FIELD */
		         , B.STOCK_UNIT
		         , A.DIV_CODE
		         , A.INOUT_NUM
		         , A.INOUT_TYPE
		         , A.INOUT_METH
		         , A.INOUT_CODE_TYPE
		         , A.INOUT_CODE
		         , (CASE WHEN ISNULL(A.INOUT_DATE , '')= '' THEN ''
		                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY' , SUBSTRING(A.INOUT_DATE, 1, 4))
		                                                          , 'MM'   , SUBSTRING(A.INOUT_DATE, 5, 2))
		                                                          , 'DD'   , SUBSTRING(A.INOUT_DATE, 7, 2))
		             END)                            AS INOUT_DATE
		         , A.INOUT_Q
		         , A.INOUT_P
		         , A.INOUT_I
		         , A.MONEY_UNIT
		         , A.INOUT_FOR_P
		         , A.INOUT_FOR_O
		         , A.EXCHG_RATE_O
		         , A.INOUT_PRSN
		         , A.ACCOUNT_Q
		         , A.BILL_TYPE
		         , A.SALE_TYPE
		         , A.PRICE_YN
		         , A.UPDATE_DB_USER
		         , A.UPDATE_DB_TIME
		         , ISNULL(B.STOCK_CARE_YN, 'Y')       AS STOCK_CARE_YN
		         , CASE WHEN ISNULL(A.TAX_INOUT, '') = '' THEN CASE ISNULL(ORDER_NUM,'') WHEN '' THEN D.TAX_TYPE                  --20210521 수정
		                                                                                 ELSE (SELECT TAX_INOUT
		                                                                                         FROM SOF100T WITH(NOLOCK)
		                                                                                        WHERE COMP_CODE = A.COMP_CODE
		                                                                                          AND DIV_CODE  = A.DIV_CODE
		                                                                                          AND ORDER_NUM = A.ORDER_NUM)
		                                                       END
		                ELSE ISNULL(A.TAX_INOUT, '')
		           END                               AS SOF100_TAX_INOUT
		         , C.BILL_NUM AS BILL_NUM
		         , A.INOUT_TYPE_DETAIL               AS SSA110T_INOUT_TYPE_DETAIL
		         , C.SALE_PRSN
		         , C.BILL_TYPE                       AS REF_BILL_TYPE
		         , C.ORDER_TYPE                      AS REF_SALE_TYPE
		         , A.COMP_CODE
		         , A.AGENT_TYPE
		         , A.DEPT_CODE
		         , G.ITEM_ACCOUNT
		         , B.SALE_BASIS_P
		         , A.BASIS_NUM
		         , A.BASIS_SEQ
		         --20191004 추가
		         , A.INSPEC_NUM
--		         , H.PURCHASE_RATE
--		         , H.PURCHASE_P
--		         , H.SALES_TYPE
--		         , A.PURCHASE_RATE
--				 , A.PURCHASE_P
--				 , A.SALES_TYPE
--				 , A.PURCHASE_CUSTOM_CODE
--				 , A.PURCHASE_TYPE
		         , A.BILL_TYPE                    --20210312 추가
		         , A.CARD_CUSTOM_CODE             --20210312 추가
		      FROM            BTR100T A WITH (NOLOCK)
		           INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE     = B.COMP_CODE
		                                             AND A.ITEM_CODE     = B.ITEM_CODE
		           LEFT  JOIN (SELECT S1.*
		                            , S2.INOUT_NUM
		                            , S2.INOUT_SEQ
		                         FROM            SSA100T S1 WITH (NOLOCK)
		                              INNER JOIN SSA110T S2 WITH (NOLOCK)
		                                                      ON S1.COMP_CODE  = S2.COMP_CODE
		                                                     AND S1.DIV_CODE   = S2.DIV_CODE
		                                                     AND S1.BILL_NUM   = S2.BILL_NUM
		                                                     AND S2.INOUT_TYPE = '3'
		                      ) C                     ON A.COMP_CODE     = C.COMP_CODE
		                                             AND A.DIV_CODE      = C.DIV_CODE
		                                             AND A.INOUT_NUM     = C.INOUT_NUM
		                                             AND A.INOUT_SEQ     = C.INOUT_SEQ
		           INNER JOIN BCM100T D WITH (NOLOCK) ON D.COMP_CODE     = A.COMP_CODE
		                                             AND D.CUSTOM_CODE   = A.INOUT_CODE
		           LEFT  JOIN BCM100T E WITH (NOLOCK) ON E.COMP_CODE     = A.COMP_CODE
		                                             AND E.CUSTOM_CODE   = A.SALE_CUSTOM_CODE
		           LEFT  JOIN SCM100T F WITH (NOLOCK) ON A.COMP_CODE     = F.COMP_CODE
		                                             AND A.INOUT_CODE    = F.CUSTOM_CODE
		                                             AND A.DVRY_CUST_CD  = CONVERT(NVARCHAR(08), F.DVRY_CUST_SEQ)
		           INNER JOIN BPR200T G WITH (NOLOCK) ON G.COMP_CODE     = A.COMP_CODE
		                                             AND G.DIV_CODE      = A.DIV_CODE
		                                             AND G.ITEM_CODE     = A.ITEM_CODE
--		           LEFT JOIN BIV350T H WITH (NOLOCK)  ON H.COMP_CODE     = A.COMP_CODE
--		                                             AND H.DIV_CODE      = A.DIV_CODE
--		                                             AND H.LOT_NO        = A.LOT_NO
--		                                             AND H.WH_CODE	     = A.WH_CODE
--		                                             AND H.ITEM_CODE 	 = A.ITEM_CODE
		           --20200106 추가: 프로젝트명 가져오기 위해 추가
		           LEFT  JOIN BCM600T Z1 WITH(NOLOCK) ON Z1.COMP_CODE     = A.COMP_CODE
		                                             AND Z1.PJT_CODE      = A.PROJECT_NO
		     WHERE A.COMP_CODE  = B.COMP_CODE
		       AND A.ITEM_CODE  = B.ITEM_CODE
		       AND A.INOUT_TYPE = '3'
		       AND A.CREATE_LOC = '1'
		       AND A.DIV_CODE  = #{DIV_CODE}
		       AND A.INOUT_NUM = #{INOUT_NUM}

		     ORDER BY A.INOUT_SEQ

		     SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
 	</select>



	<insert id="str110ukrvServiceImpl.insertLogMaster" parameterType="Map">
		INSERT INTO L_BTR100T
		     ( KEY_VALUE		    , OPR_FLAG
		     , COMP_CODE            , INOUT_NUM             , INOUT_SEQ             , INOUT_TYPE            , DIV_CODE
		     , INOUT_METH           , CREATE_LOC            , INOUT_TYPE_DETAIL     , INOUT_CODE_TYPE       , INOUT_CODE
		     , INOUT_CODE_DETAIL    , INOUT_DATE            , ITEM_CODE             , ITEM_STATUS           , WH_CODE
		     , WH_CELL_CODE         , INOUT_PRSN            , INOUT_Q               , INOUT_P               , INOUT_I
		     , INOUT_FOR_P          , INOUT_FOR_O           , EXCHG_RATE_O          , MONEY_UNIT            , EXPENSE_I
		     , RETURN_QTY           , TRANS_COST            , TARIFF_AMT            , BASIS_NUM             , BASIS_SEQ
		     , TO_DIV_CODE          , PROJECT_NO            , PJT_CODE              , LOT_NO                , REMARK
		     , ORDER_TYPE           , ORDER_NUM             , ORDER_SEQ             , ORDER_UNIT            , TRNS_RATE
		     , ORDER_UNIT_Q         , ORDER_UNIT_P          , ORDER_UNIT_O          , INOUT_TAX_AMT         , ORDER_UNIT_FOR_P
		     , IN_ITEM_STATUS       , ISSUE_REQ_NUM         , ISSUE_REQ_SEQ         , DELIVERY_DATE         , DELIVERY_TIME
		     , DVRY_CUST_CD         , DISCOUNT_RATE         , BILL_TYPE             , SALE_TYPE             , TAX_TYPE
		     , PRICE_YN             , SALE_PRSN             , SALE_DIV_CODE         , SALE_CUSTOM_CODE      , SALE_C_YN
		     , SALE_C_DATE          , SALE_C_REMARK         , AGENT_TYPE            , DEPT_CODE             , LC_NUM
		     , BL_NUM               , TRADE_LOC             , LC_AMEND_SEQ          , EXPENSE_FLAG          , ACCOUNT_YNC
		     , ACCOUNT_Q            , FR_ACCOUNT            , TO_ACCOUNT            , EX_DATE               , EX_NUM
		     , AGREE_YN             , AC_DATE               , AC_NUM                , INOUT_CAL_P           , INOUT_CAL_I
		     , BASIS_P              , BASIS_I               , INOUT_NET_P           , INOUT_NET_I           , INSPEC_NUM
		     , INSPEC_SEQ           , SCM_FLAG_YN           , DELIVERY_NO           , MAKE_DATE             , DEFECT_CODE
		     , DEFECT_TYPE          , DEFECT_REMARK         , PERSONS_NUM           , WORK_TIME             , GONG_SU
		     , MAKER_TYPE           , SET_TYPE              , WORK_SHOP_CODE        , UPDATE_DB_USER        , UPDATE_DB_TIME
		     , CARD_CUSTOM_CODE     --20210312 추가
		     , TAX_INOUT            --20210521 추가
		) VALUES
		     ( #{KEY_VALUE}         , #{OPR_FLAG}
		     , #{COMP_CODE}         , #{INOUT_NUM}          , #{INOUT_SEQ}          , #{INOUT_TYPE}         , #{DIV_CODE}
		     , #{INOUT_METH}        , '1'                   , #{INOUT_TYPE_DETAIL}  , #{INOUT_CODE_TYPE}    , #{INOUT_CODE}
		     , NULL                 , #{INOUT_DATE}         , #{ITEM_CODE}          , #{ITEM_STATUS}        , #{WH_CODE}
		      --20200611 수정: 자사단가 가져오는 로직 수정
		     , #{WH_CELL_CODE}      , #{INOUT_PRSN}         , ${ORDER_UNIT_Q} * ${TRNS_RATE}                , (${ORDER_UNIT_P} / ${TRNS_RATE}) * ${EXCHG_RATE_O} / unilite.fnGetExchangeRateBasis(#{COMP_CODE}, #{MONEY_UNIT})            , ${ORDER_UNIT_O} * ${EXCHG_RATE_O} / unilite.fnGetExchangeRateBasis(#{COMP_CODE}, #{MONEY_UNIT}) 
		     , ${ORDER_UNIT_P} / ${TRNS_RATE}               , ${ORDER_UNIT_O}       , #{EXCHG_RATE_O}       , #{MONEY_UNIT}         , NULL
		     <if test="@foren.Ognl@isEmpty(BASIS_NUM)">
		     , NULL                 , NULL                   , NULL                  , NULL                  , NULL
		     </if>
		     <if test="@foren.Ognl@isNotEmpty(BASIS_NUM)">
		     , NULL                 , NULL                  , NULL                  , #{BASIS_NUM}          , #{BASIS_SEQ}
		     </if>
		     , NULL					, #{PROJECT_NO}         , NULL					, #{LOT_NO}             , #{REMARK}
		     , NULL					, #{ORDER_NUM}          , #{ORDER_SEQ}          , #{ORDER_UNIT}         , #{TRNS_RATE}
		     , #{ORDER_UNIT_Q}      , #{ORDER_UNIT_P}       , #{ORDER_UNIT_O}       , ${INOUT_TAX_AMT} * ${EXCHG_RATE_O} / unilite.fnGetExchangeRateBasis(#{COMP_CODE}, #{MONEY_UNIT})      , NULL
		     , NULL					, #{BASIS_NUM}			, #{BASIS_SEQ}			, NULL					, NULL
		     , #{DVRY_CUST_CD}      , #{DISCOUNT_RATE}      , #{BILL_TYPE}          , #{SALE_TYPE}          , #{TAX_TYPE}
		     , #{PRICE_YN}          , #{SALE_PRSN}          , #{SALE_DIV_CODE}      , #{SALE_CUSTOM_CODE}   , 'N'
		     , NULL					, NULL					, #{AGENT_TYPE}         , #{DEPT_CODE}          , NULL
		     , NULL					, NULL					, NULL					, NULL					, #{ACCOUNT_YNC}
		     , #{ACCOUNT_Q}         , NULL					, NULL					, NULL					, NULL
		     , NULL					, NULL					, NULL					, NULL					, NULL
		     , NULL					, NULL					, NULL					, NULL					, #{INSPEC_NUM}
		     , NULL					, NULL					, NULL					, NULL					, NULL
		     , NULL					, NULL					, NULL					, NULL					, NULL
		     , NULL					, NULL					, NULL                  , #{S_USER_ID}          , GETDATE()
		     , #{CARD_CUSTOM_CODE}  --20210312 추가
		     , #{SOF100_TAX_INOUT}  --20210521 추가
		)
	</insert>

	<update id="str110ukrvServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call USP_SALES_Str110ukr (
			#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
			#{InOutNum, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
			#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</update>



	<select id="str110ukrvServiceImpl.getLotNo" parameterType="Map" resultType="rMap">
		/* str110ukrvServiceImpl.getLotNo */
		SELECT ITEM_CODE, LOT_NO
		  FROM STR800T WITH(NOLOCK)
		 WHERE COMP_CODE   = #{S_COMP_CODE}
		   AND DIV_CODE    = #{DIV_CODE}
		   AND BOX_BARCODE = #{LOT_NO}
	</select>

	<select id="str110ukrvServiceImpl.deptWhcode" parameterType="Map" resultType="rMap">
		SELECT WH_CODE
		  FROM BSA210T WITH(NOLOCK)
		 WHERE COMP_CODE  = #{S_COMP_CODE}
		   AND TYPE_LEVEL = #{DIV_CODE}
		   AND TREE_CODE  = #{DEPT_CODE}
	</select>
	<insert id="str110ukrvServiceImpl.insertExcel" parameterType="Map">
    	/*str110ukrvServiceImpl.insertExcel*/
    	INSERT INTO L_STR110T (
    		   _EXCEL_JOBID    
			 , _EXCEL_ROWNUM   
			 , _EXCEL_HAS_ERROR
			 , _EXCEL_ERROR_MSG
			 , INOUT_TYPE_DETAIL
			 , WH_CODE			
			 , WH_CELL_CODE		
			 , ITEM_CODE		
			 , ITEM_NAME		
			 , SPEC				
			 , LOT_NO			
			 , ORDER_UNIT_P		
			 , ORDER_UNIT_Q		
			 , ORDER_UNIT_O		
			 , INOUT_TAX_AMT	
			 , ORDER_AMT_SUM	
			 , TAX_TYPE			
			 , ORDER_UNIT		
			 , TRNS_RATE		
			 , ITEM_STATUS		
			 , ACCOUNT_YNC		
			 , SOF100_TAX_INOUT	
			 , PROJECT_NO		
			 , REMARK	
			 , INSERT_DB_USER
			 , INSERT_DB_TIME
			 , UPDATE_DB_USER
			 , UPDATE_DB_TIME
    	 )  VALUES (
    		   #{_EXCEL_JOBID}
    		 , #{_EXCEL_ROWNUM}
    		 , #{_EXCEL_HAS_ERROR}
    		 , #{_EXCEL_ERROR_MSG}
    		 , #{INOUT_TYPE_DETAIL}
			 , #{WH_CODE}
			 , #{WH_CELL_CODE}
			 , #{ITEM_CODE}
			 , #{ITEM_NAME}
			 , #{SPEC}
			 , #{LOT_NO}
			 , #{ORDER_UNIT_P}
			 , #{ORDER_UNIT_Q}
			 , #{ORDER_UNIT_O}
			 , #{ORDER_AMT_SUM}
			 , #{ORDER_O_TAX_O}
			 , #{TAX_TYPE}
			 , #{ORDER_UNIT}
			 , #{TRNS_RATE}
			 , #{ITEM_STATUS}
			 , #{ACCOUNT_YNC}
			 , #{SOF100_TAX_INOUT}
			 , #{PROJECT_NO}
			 , #{REMARK}
			 , #{S_USER_ID}          
			 , GETDATE()
			 , #{S_USER_ID}          
			 , GETDATE()
    	)
    </insert>
	<select id="str110ukrvServiceImpl.selectExcelist" parameterType="Map" resultType="rMap">	
		/*str110ukrvService.insertExcelist*/
		
	    /* 데이터 조회 */
		SELECT	 _EXCEL_JOBID    
			   , _EXCEL_ROWNUM   
			   , _EXCEL_HAS_ERROR
			   , _EXCEL_ERROR_MSG
			   , INOUT_TYPE_DETAIL
			   , WH_CODE			
			   , WH_CELL_CODE		
			   , ITEM_CODE		
			   , ITEM_NAME		
			   , SPEC				
			   , LOT_NO			
			   , ORDER_UNIT_P		
			   , ORDER_UNIT_Q		
			   , ORDER_UNIT_O		
			   , INOUT_TAX_AMT	
			   , ORDER_AMT_SUM	
			   , TAX_TYPE			
			   , ORDER_UNIT		
			   , TRNS_RATE		
			   , ITEM_STATUS		
			   , ACCOUNT_YNC		
			   , SOF100_TAX_INOUT	
			   , PROJECT_NO		
			   , REMARK	
		 FROM  L_STR110T
	    WHERE  _EXCEL_JOBID = #{_EXCEL_JOBID}
		ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
		 
	</select>
	<update id="str110ukrvServiceImpl.excelValidate" >		
	/*str110ukrvServiceImpl.excelValidate*/
   UPDATE   A
	SET 
			A._EXCEL_HAS_ERROR = (CASE WHEN (SELECT COUNT(ITEM_CODE) AS CNT
										    FROM   BPR100T WITH (NOLOCK)
										    WHERE  COMP_CODE=#{S_COMP_CODE}
										      AND  ITEM_CODE=A.ITEM_CODE)	= 0 THEN 'Y'
									   WHEN A.INOUT_TYPE_DETAIL IS NULL OR A.WH_CODE IS NULL OR A.WH_CELL_CODE IS NULL OR A.ITEM_CODE IS NULL OR A.ORDER_UNIT_Q IS NULL OR A.TAX_TYPE IS NULL
									   		OR A.ORDER_UNIT IS NULL OR A.TRNS_RATE IS NULL OR A.ITEM_STATUS IS NULL OR A.ACCOUNT_YNC IS NULL		THEN 'Y'
								  ELSE A._EXCEL_HAS_ERROR 
							      END),
							     
			A._EXCEL_ERROR_MSG = (CASE WHEN (SELECT COUNT(ITEM_CODE) AS CNT
										    FROM   BPR100T WITH (NOLOCK)
										    WHERE  COMP_CODE=#{S_COMP_CODE}
										      AND  ITEM_CODE=A.ITEM_CODE)	= 0 THEN ISNULL(_EXCEL_ERROR_MSG,'') + '등록되지 않은 품목입니다. '
									   WHEN A.INOUT_TYPE_DETAIL IS NULL OR A.WH_CODE IS NULL OR A.WH_CELL_CODE IS NULL OR A.ITEM_CODE IS NULL OR A.ORDER_UNIT_Q IS NULL OR A.TAX_TYPE IS NULL
									   		OR A.ORDER_UNIT IS NULL OR A.TRNS_RATE IS NULL OR A.ITEM_STATUS IS NULL OR A.ACCOUNT_YNC IS NULL	THEN ISNULL(_EXCEL_ERROR_MSG,'') + '필수입력값을 확인하십시오. '
								 ELSE A._EXCEL_ERROR_MSG 
								 END)
								 
	FROM L_STR110T A WITH (NOLOCK)  
	WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
	</update>
</mapper>