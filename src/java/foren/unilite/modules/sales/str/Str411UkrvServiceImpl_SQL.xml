<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="str411ukrvServiceImpl">
	<select id="str411ukrvServiceImpl.WebCashMaster" parameterType="Map" resultType="rMap">
		/* str411ukrv.Cstr411ukrs2v[fnSsa7000Std] Query01 */
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

		    SET @CompCode = #{S_COMP_CODE}
		    SET @UserId   = #{S_USER_ID}
		    SET @LangType = #{S_LANG_CODE}

		    /*명칭 참조 유형 */
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /*날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    SELECT
		           CAST('' AS BIT)                                                          AS CHK
		         , CASE WHEN D.ERR_CD != '000000' AND D.ERR_CD != 'SEND' THEN 'Error'
		                                                                 ELSE M2.CODE_NAME 
		            END                                                                     AS TRANSYN_NAME     /* 전송여부명 */
		         , ISNULL(D.STAT_CODE, '1')                                                 AS STAT_CODE        /* 상태 */
		         , M3.CODE_NAME                                                             AS STS              /* 상태 */
		         , (CASE WHEN ISNULL(A.BILL_DATE , '')= '' THEN ''
		             ELSE REPLACE(REPLACE(REPLACE(@DateFormat , 'YYYY' , SUBSTRING(A.BILL_DATE, 1, 4))
		                                                      , 'MM'   , SUBSTRING(A.BILL_DATE, 5, 2))
		                                                      , 'DD'   , SUBSTRING(A.BILL_DATE, 7, 2))
		         END)                                                                       AS REGS_DATE        /* 발행일 */
		         , C1.COMPANY_NUM                                                           AS SELR_CORP_NO     /* 공급자 사업자번호 */
		         , CASE WHEN ISNULL(C1.DIV_FULL_NAME, '') = '' THEN C1.DIV_NAME
		                                                       ELSE C1.DIV_FULL_NAME
		            END                                                                     AS SELR_CORP_NM     /* 공급자 업체명 */
		         , C1.REPRE_NAME                                                            AS SELR_CEO         /* 공급자 대표자명 */
		         , C1.ADDR                                                                  AS SELR_CORP_ADDS   /* 공급자 주소 */
		         , C1.COMP_TYPE                                                             AS SELR_BUSS_CONS   /* 공급자 업태 */
		         , C1.COMP_CLASS                                                            AS SELR_BUSS_TYPE   /* 공급자 업종 */
		         , CASE WHEN ISNULL(E1.REF_CODE6, '') != '' THEN E1.REF_CODE6
		                                                    ELSE ( CASE WHEN ISNULL(E2.REF_CODE6, '') != '' THEN E2.REF_CODE6
		                                                                                                    ELSE C1.TELEPHON
		                                                            END )
		                                                   
		            END                                                                     AS SELR_TEL        /* 공급자 전화번호  */
		         , CASE WHEN C.BUSINESS_TYPE = '3' THEN uniLITE.fnCipherDecrypt(C.TOP_NUM, 'A')
		                                           ELSE SUBSTRING(C.COMPANY_NUM,1,3)
		                                              + '-' + SUBSTRING(C.COMPANY_NUM,4,2)
		                                              + '-' + SUBSTRING(C.COMPANY_NUM,6,5)
		            END                                                                     AS BUYR_CORP_NO   /* 공급받는자사업자번호  */
		
		         , A.CUSTOM_CODE                                                            AS CUSTOM_CODE    /* 고객코드 */
		         , C.CUSTOM_FULL_NAME                                                       AS BUYR_CORP_NM   /* 공급받는자상호 */
		         , C.TOP_NAME                                                               AS BUYR_CEO       /* 공급받는자 대표자명 */
		         , ISNULL(C.ADDR1, '') + ISNULL(C.ADDR2, '')                                AS BUYR_CORP_ADDS /* 공급받는자 주소 */
		         , CASE ISNULL(A.BILL_SEND_YN, 'N') WHEN 'N' THEN (CASE WHEN ISNULL(C4.PRSN_NAME, '') = '' THEN ISNULL(C.TELEPHON, C.HAND_PHON)
		                                                                                                   ELSE ISNULL(C4.TELEPHONE_NUM1, C4.HAND_PHON)
		                                                            END)
		                                            WHEN 'Y' THEN D.BUYR_TEL
		            END                                                                     AS BUYR_TEL       /* 공급받는자 전화번호 */
		         , A.SALE_LOC_AMT_I                                                         AS CHRG_AMT       /* 공급가액 */
		         , A.TAX_AMT_O                                                              AS TAX_AMT        /* 세액 */
		         , ISNULL(A.SALE_LOC_AMT_I, 0) + ISNULL(A.TAX_AMT_O, 0)                     AS TOTL_AMT       /* 합계 */
		         , ISNULL(A.SALE_LOC_AMT_I, 0) + ISNULL(A.TAX_AMT_O, 0)                     AS SUM_AMT        /* 합계 */
		         , CASE ISNULL(A.BILL_SEND_YN, 'N') WHEN 'N' THEN (CASE WHEN ISNULL(C4.MAIL_ID, '') = '' THEN ISNULL(C.BILL_PRSN, C.CUSTOM_FULL_NAME)
		                                                                                                 ELSE C4.PRSN_NAME 
		                                                            END)
		                                            WHEN 'Y' THEN D.BUYR_CHRG_NM1
		            END                                                                     AS BUYR_CHRG_NM1     /* 전자문서담당자 */
		         , CASE ISNULL(A.BILL_SEND_YN, 'N') WHEN 'N' THEN (CASE WHEN ISNULL(C4.MAIL_ID, '') = '' THEN ISNULL(C.HAND_PHON, C.TELEPHON)
		                                                                                                 ELSE ISNULL(C4.HAND_PHON, C4.TELEPHONE_NUM1)
		                                                            END)
		                                            WHEN 'Y' THEN D.BUYR_CHRG_MOBL1 
		            END                                                                     AS BUYR_CHRG_MOBL1    /* 전자문서핸드폰 */
		         , CASE ISNULL(A.BILL_SEND_YN, 'N') WHEN 'N' THEN (CASE WHEN ISNULL(C4.MAIL_ID, '') = '' THEN ISNULL(C.BILL_MAIL_ID, '')
		                                                                                                 ELSE ISNULL(C4.MAIL_ID, '')
		                                                            END)
		                                            WHEN 'Y' THEN D.BUYR_CHRG_EMAIL1
		            END                                                                     AS BUYR_CHRG_EMAIL1   /* 공급받는자 전자문서E-MAIL */
		         , ISNULL(E5.REF_CODE1, 'N')                                                AS SND_MAL_YN     /* EMail발행요청유무 */
		         , ISNULL(E6.REF_CODE1, 'N')                                                AS SND_SMS_YN     /* SMS발행요청유무 */
		         , ISNULL(E7.REF_CODE1, 'N')                                                AS SND_FAX_YN     /* FAX발행요청유무 */
		         , A.PUB_NUM                                                                AS BILLSEQ        /* 계산서번호 */
		         , A.EB_NUM                                                                 AS ERP_SEQ         /* 전자문서번호 */
		         , A.DIV_CODE                                                               AS DIV_CODE       /* 사업장코드 */
		         , M3.REF_CODE1                                                             AS DEL_YN         /* 삭제가능여부 */
		         , A.COMP_CODE
		         , ''                                                                       AS ERR_GUBUN
		         , B.SEND_LOG_TIME                                                          AS SEND_DATE         /* 전송일시 */
		      FROM (
		             /* 1.1 영업 세금계산서 테이블 */
		             SELECT A.COMP_CODE
		                  , A.DIV_CODE
		                  , B.EB_NUM
		                  , A.BILL_DATE
		                  , A.CUSTOM_CODE
		                  , CASE WHEN C.BILL_MEM_TYPE = '1' THEN '30'
		                         WHEN C.BILL_MEM_TYPE = '2' THEN '31'
		                                                    ELSE '31'
		                     END AS BILL_TYPE
		                  , B.BILL_SEND_YN
		                  , A.BILL_FLAG
		                  , A.SALE_LOC_AMT_I
		                  , A.TAX_AMT_O
		                  , A.PUB_NUM
		                  , A.MODI_REASON
		                  , A.REMARK
		                  , A.BILL_GUBUN
		                  , ISNULL(A.SALE_PRSN, '') AS SALE_PRSN
		               FROM            STB100T AS A WITH (NOLOCK)
		                    LEFT  JOIN STR100T AS B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
		                                                         AND B.DIV_CODE    = A.DIV_CODE
		                                                         AND B.INOUT_NUM   = A.PUB_NUM
		                    LEFT  JOIN BCM100T AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                                         AND C.CUSTOM_CODE = A.CUSTOM_CODE
		                    LEFT  JOIN WEBCASH_DB.WEBCASH.ITIS_STS_MSTR AS D ON D.ERP_SEQ = B.EB_NUM
		              WHERE A.COMP_CODE        = #{S_COMP_CODE}
		              <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		                AND A.DIV_CODE         = #{DIV_CODE}
		              </if>  
		              <if test="@foren.Ognl@isNotEmpty(BILL_DATE_FR)">
		                AND A.BILL_DATE       &gt;= #{BILL_DATE_FR}
		              </if>  
		              <if test="@foren.Ognl@isNotEmpty(BILL_DATE_TO)">
		                AND A.BILL_DATE       &lt;= #{BILL_DATE_TO}
		              </if>
		              
		              <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		              AND A.CUSTOM_CODE 		= #{CUSTOM_CODE}					/* 거래처코드  */
		              </if>
		              <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isEmpty(CUSTOM_NAME)">
		              AND A.CUSTOM_CODE 		LIKE  #{CUSTOM_CODE} + '%'			/* 거래처코드  */
		              </if>
		              <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME) and @foren.Ognl@isEmpty(CUSTOM_CODE)">
		              AND C.CUSTOM_NAME 		LIKE '%' + #{CUSTOM_NAME} + '%'		/* 거래처명  */
		              </if>
		              <if test="@foren.Ognl@isNotEmpty(BILL_STAT)">
		                AND D.STAT_CODE        = #{BILL_STAT}
		              </if>  
		              <if test="@foren.Ognl@isNotEmpty(BILL_SEND_YN)">
		                AND ISNULL(B.BILL_SEND_YN, 'N') =  #{BILL_SEND_YN}
		              </if>  
		              <if test="@foren.Ognl@isNotEmpty(BILL_TYPE)">
		                AND C.BILL_MEM_TYPE    = #{BILL_TYPE}
		              </if>  
		            ) AS A
		                LEFT JOIN (SELECT MAX(SEND_LOG_TIME) AS SEND_LOG_TIME
		                                , DIV_CODE
		                                , EB_NUM
		                                , BILL_DATE
		                                , CUSTOM_CODE
		                                , MAX(EB_STEP) AS EB_STEP 
		                                , COMP_CODE
		                             FROM STB200T WITH (NOLOCK)
		                            WHERE COMP_CODE = @CompCode
		                            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
		                              AND DIV_CODE = #{DIV_CODE}
		                            </if>
		                              AND EB_STEP IN('1', '2')
		                         GROUP BY COMP_CODE, DIV_CODE, EB_NUM, BILL_DATE, CUSTOM_CODE) AS B  ON B.COMP_CODE   = A.COMP_CODE
		                                                                                            AND B.DIV_CODE    = A.DIV_CODE
		                                                                                            AND B.EB_NUM      = A.EB_NUM
		                                                                                            AND B.BILL_DATE   = A.BILL_DATE
		                                                                                            AND B.CUSTOM_CODE = A.CUSTOM_CODE
		                LEFT JOIN BCM100T AS C WITH (NOLOCK) ON C.COMP_CODE   = A.COMP_CODE
		                                                    AND C.CUSTOM_CODE = A.CUSTOM_CODE
		                LEFT JOIN WEBCASH_DB.WEBCASH.ITIS_STS_MSTR AS D ON D.ERP_SEQ  = A.EB_NUM
		                LEFT JOIN BOR120T C1 WITH (NOLOCK)  ON C1.COMP_CODE   = A.COMP_CODE
		                                                   AND C1.DIV_CODE    = A.DIV_CODE
		                LEFT JOIN BOR100T C2 WITH (NOLOCK)  ON C2.COMP_CODE   = A.COMP_CODE
		                LEFT JOIN BSA100T M2 WITH (NOLOCK)  ON M2.COMP_CODE   = A.COMP_CODE
		                                                   AND M2.MAIN_CODE   = 'B087'
		                                                   AND M2.SUB_CODE   != '$'
		                                                   AND M2.SUB_CODE    = ISNULL(A.BILL_SEND_YN, 'N')
		                LEFT JOIN BSA100T M3 WITH (NOLOCK)  ON M3.COMP_CODE   = A.COMP_CODE
		                                                   AND M3.MAIN_CODE   = 'S100'
		                                                   AND M3.SUB_CODE   != '$'
		                                                   AND M3.SUB_CODE    = D.STAT_CODE
		                LEFT JOIN (SELECT A.COMP_CODE
		                                , A.CUSTOM_CODE
		                                , A.PRSN_NAME
		                                , A.MAIL_ID
		                                , A.HAND_PHON, A.TELEPHONE_NUM1
		                             FROM            BCM120T AS A WITH(NOLOCK) 
		                                  INNER JOIN ( SELECT A.COMP_CODE
		                                                    , MAX(A.CUSTOM_CODE) AS CUSTOM_CODE 
		                                                    , MIN(A.SEQ)         AS SEQ
		                                                 FROM BCM120T AS A WITH(NOLOCK)
		                                                WHERE A.MAIN_BILL_YN ='Y'
		                                                  AND A.BILL_TYPE IN ('2','3')
		                                                GROUP BY A.COMP_CODE, A.CUSTOM_CODE
		                                             ) AS B ON B.COMP_CODE   = A.COMP_CODE
		                                                   AND B.CUSTOM_CODE = A.CUSTOM_CODE
		                                                   AND B.SEQ         = A.SEQ
		                           ) C4 ON C4.COMP_CODE   = A.COMP_CODE
		                               AND C4.CUSTOM_CODE = A.CUSTOM_CODE
		                LEFT JOIN BSA100T E1 WITH (NOLOCK)  ON E1.COMP_CODE   = A.COMP_CODE
		                                                   AND E1.MAIN_CODE   = 'S010'
		                                                   AND E1.SUB_CODE   != '$'
		                                                   AND E1.SUB_CODE    = A.SALE_PRSN
		                LEFT JOIN BSA100T E2 WITH (NOLOCK)  ON E2.COMP_CODE   = C.COMP_CODE
		                                                   AND E2.MAIN_CODE   = 'S010'
		                                                   AND E2.SUB_CODE   != '$'
		                                                   AND E2.SUB_CODE    = C.BUSI_PRSN
		                LEFT JOIN BSA210T E3 WITH (NOLOCK)  ON E3.COMP_CODE   = E1.COMP_CODE
		                                                   AND E3.TREE_CODE   = E1.REF_CODE2
		                LEFT JOIN BSA210T E4 WITH (NOLOCK)  ON E4.COMP_CODE   = E2.COMP_CODE
		                                                   AND E4.TREE_CODE   = E2.REF_CODE2
		                LEFT JOIN BSA100T E5 WITH (NOLOCK)  ON E5.COMP_CODE   = A.COMP_CODE
		                                                   AND E5.MAIN_CODE   = 'S083'
		                                                   AND E5.SUB_CODE   != '$'
		                                                   AND E5.SUB_CODE    = '01'
		                LEFT JOIN BSA100T E6 WITH (NOLOCK)  ON E6.COMP_CODE   = A.COMP_CODE
		                                                   AND E6.MAIN_CODE   = 'S083'
		                                                   AND E6.SUB_CODE   != '$'
		                                                   AND E6.SUB_CODE    = '02'
		                LEFT JOIN BSA100T E7 WITH (NOLOCK)  ON E7.COMP_CODE   = A.COMP_CODE
		                                                   AND E7.MAIN_CODE   = 'S083'
		                                                   AND E7.SUB_CODE   != '$'
		                                                   AND E7.SUB_CODE    = '03'
		        SET NOCOUNT OFF
		        SET ARITHABORT OFF
		END
	</select>

	<select id="str411ukrvServiceImpl.selectDetail" parameterType="Map" resultType="rMap">
		/* str411ukrv.Cstr411ukrs1v[fnStr411QStd2] Query01 */
		BEGIN
		    SET NOCOUNT ON
		    SET ARITHABORT ON

		    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
		          , @UserId      NVARCHAR(100) /* 사용자ID    */
		          , @LangType    NVARCHAR(2)  /* 언어구분    */
		          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
		          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */
		          , @UnitType    NVARCHAR(03) /* (필수) 수량단위구분(1:판매단위,2:재고단위) */

		    SET @CompCode = #{COMP_CODE}        /*그리드PARAM*/
		    SET @UserId   = #{S_USER_ID}        /*그리드PARAM*/
		    SET @LangType = #{S_LANG_CODE}      /*그리드PARAM*/
		    SET @UnitType = #{UNIT_TYPE}        /*폼PARAM*/  

		    /* 명칭 참조 유형 */                      
		    SELECT TOP 1 @RefItem = REF_ITEM
		      FROM BSA300T WITH (NOLOCK)
		     WHERE USER_ID = @UserId

		    SET @RefItem = ISNULL(@RefItem, N'0')

		    /* 날짜 포맷 유형 설정 */
		    SELECT TOP 1 @DateFormat = CODE_NAME
		      FROM BSA100T WITH (NOLOCK)
		     WHERE COMP_CODE = @CompCode
		       AND MAIN_CODE = N'B044'
		       AND REF_CODE1 = N'Y'

		    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

		    /*데이터 조회*/
		    SELECT  
		           CASE WHEN ISNULL(C.INOUT_DATE, '') = '' THEN ''
		                ELSE REPLACE(
		                     REPLACE(
		                     REPLACE(@DateFormat, 'YYYY', SUBSTRING(C.INOUT_DATE, 1, 4))
		                                        , 'MM',   SUBSTRING(C.INOUT_DATE, 5, 2))
		                                        , 'DD',   SUBSTRING(C.INOUT_DATE, 7, 2))
		           END                                                                      AS DT
		         , CASE WHEN ISNULL(M1.REF_CODE5, 'N') = 'N' THEN C1.ITEM_CODE
		                ELSE CASE WHEN ISNULL(C2.CUSTOM_ITEM_CODE, '') != '' THEN C2.CUSTOM_ITEM_CODE
		                          ELSE C1.ITEM_CODE
		                     END
		           END                                                                      AS CODE
		         , CASE WHEN ISNULL(M1.REF_CODE5, 'N') = 'N' THEN CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                                                               WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                                               ELSE C1.ITEM_NAME
		                                                          END
		                ELSE CASE WHEN ISNULL(C2.CUSTOM_ITEM_NAME, '') != '' THEN C2.CUSTOM_ITEM_NAME
		                          ELSE CASE WHEN @RefItem = '1' THEN C1.ITEM_NAME1
		                                    WHEN @RefItem = '2' THEN C1.ITEM_NAME2
		                                    ELSE C1.ITEM_NAME
		                               END
		                     END
		           END                                                                      AS NAME
		         , CASE WHEN ISNULL(M1.REF_CODE5, 'N') = 'N' THEN REPLACE(REPLACE(C1.SPEC, '&lt;', ''), '&gt;', '')
		                ELSE CASE WHEN ISNULL(C2.CUSTOM_ITEM_SPEC, '') != '' THEN REPLACE(REPLACE(C2.CUSTOM_ITEM_SPEC, '&lt;', ''), '&gt;', '')
		                          ELSE REPLACE(REPLACE(C1.SPEC, '&lt;', ''), '&gt;', '')
		                     END
		           END                                                                      AS UNIT
		         , CASE WHEN @UnitType = '1' THEN ISNULL(B.SALE_Q, 0)
		                ELSE ISNULL(C.INOUT_Q, 0)
		           END                                                                      AS VLM
		         , CASE WHEN @UnitType = '1' THEN ISNULL(B.SALE_P, 0)
		                ELSE ISNULL(C.INOUT_P, 0)
		           END                                                                      AS DANGA
		         , ISNULL(B.SALE_AMT_O, 0)                                                  AS SUP
		         , ISNULL(B.TAX_AMT_O , 0)                                                  AS TAX
		         , A.COMP_CODE
		         , A.DIV_CODE
		         , A.PUB_NUM
		         , B.ITEM_CODE
		         , B.CUSTOM_CODE
		         , B.SALE_UNIT
		         , B.TRANS_RATE
		    FROM              STB100T   A  WITH (NOLOCK)
		           INNER JOIN SSA110T   B  WITH (NOLOCK) ON  B.COMP_CODE        = A.COMP_CODE
		                                                AND  B.DIV_CODE         = A.SALE_DIV_CODE
		                                                AND  B.PUB_NUM          = A.PUB_NUM
		           LEFT  JOIN BTR100T   C  WITH (NOLOCK) ON  C.COMP_CODE        = B.COMP_CODE
		                                                AND  C.DIV_CODE         = B.TO_DIV_CODE
		                                                AND  C.INOUT_NUM        = B.INOUT_NUM
		                                                AND  C.INOUT_SEQ        = B.INOUT_SEQ
		                                                AND  C.INOUT_TYPE       = B.INOUT_TYPE
		           INNER JOIN BPR100T   C1 WITH (NOLOCK) ON C1.COMP_CODE        = B.COMP_CODE
		                                                AND C1.ITEM_CODE        = B.ITEM_CODE
		           LEFT  JOIN BPR300T   C2 WITH (NOLOCK) ON C2.COMP_CODE        = B.COMP_CODE
		                                                AND C2.TYPE             = N'2'          /* 구분(1:구매, 2:판매) */
		                                                AND C2.DIV_CODE         = N'*'          /* 판매일 경우 사업장 관리안함 */
		                                                AND C2.ITEM_CODE        = B.ITEM_CODE
		                                                AND C2.CUSTOM_CODE      = B.CUSTOM_CODE
		                                                AND C2.APLY_START_DATE  = (
		                                                                          SELECT MAX(APLY_START_DATE) AS APLY_START_DATE
		                                                                          FROM   BPR300T   WITH (NOLOCK)
		                                                                          WHERE  COMP_CODE          = C2.COMP_CODE
		                                                                          AND    TYPE               = C2.TYPE
		                                                                          AND    DIV_CODE           = C2.DIV_CODE
		                                                                          AND    ITEM_CODE          = C2.ITEM_CODE
		                                                                          AND    CUSTOM_CODE        = C2.CUSTOM_CODE
		                                                                          AND    APLY_START_DATE   &lt;= ISNULL(C.INOUT_DATE, CONVERT(NVARCHAR, GETDATE(), 112))
		                                                                          )
		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE        = A.COMP_CODE
		                                                AND M1.MAIN_CODE        = N'S084'
		                                                AND M1.SUB_CODE        != N'$'
		                                                AND M1.REF_CODE1        = N'Y'
		    WHERE  A.COMP_CODE      = @CompCode
		    AND    A.DIV_CODE       = #{DIV_CODE}
		    AND    A.PUB_NUM        = #{BILLSEQ}
		    ORDER  BY
		           C.INOUT_DATE, B.BILL_NUM, B.BILL_SEQ

		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>

	<select id="str411ukrvServiceImpl.getGsBillYN" parameterType="Map" resultType="rMap">
		SELECT TOP 1
		       ISNULL(SUB_CODE , '02'  )  AS SUB_CODE
		     , ISNULL(REF_CODE4, 'NAME')  AS REF_CODE4
		     , ISNULL(REF_CODE5, 'N'   )  AS REF_CODE5
		     , ISNULL(REF_CODE6, 'N'   )  AS REF_CODE6
		     , ISNULL(REF_CODE7, ''    )  AS REF_CODE7
		     , ISNULL(REF_CODE8, '8'   )  AS REF_CODE8
		     , ISNULL(REF_CODE9, 'N'   )  AS REF_CODE9
		  FROM BSA100T WITH(NOLOCK)
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = N'S084'
		   AND SUB_CODE != N'$'
		   AND REF_CODE1 = N'Y'
	</select>



<!-- detail data 변경된 부분 저장하는 로직 -->
	<update id="str411ukrvServiceImpl.updateDetail" parameterType="Map">
		/*str411ukrvServiceImpl.updateDetail: str411ukrv.Cstr411ukrs1v[fnStr411Save] Query01 */
		BEGIN
		    DECLARE         @COMP_CODE          NVARCHAR(08)                -- 법인코드
		                  , @DIV_CODE           NVARCHAR(08)                -- 사업장
		                  , @ITEM_CODE          NVARCHAR(20)                -- 품목코드
		                  , @CUSTOM_CODE        NVARCHAR(08)                -- 거래처코드
		                  , @APLY_START_DATE    NVARCHAR(08)                -- 적용시작일
		                  , @CUSTOM_ITEM_CODE   NVARCHAR(20)                -- 거래처품목코드
		                  , @CUSTOM_ITEM_NAME   NVARCHAR(40)                -- 거래처품목명
		                  , @CUSTOM_ITEM_SPEC   NVARCHAR(40)                -- 거래처규격
		                  , @ORDER_UNIT         NVARCHAR(03)                -- 구매단위
		                  , @TRNS_RATE          NUMERIC(12, 6)              -- 입수
		                  , @USER_ID            NVARCHAR(10)                -- 사용자ID

		    SET @COMP_CODE          = #{COMP_CODE}
		    SET @DIV_CODE           = #{DIV_CODE}
		    SET @ITEM_CODE          = #{ITEM_CODE}
		    SET @CUSTOM_CODE        = #{CUSTOM_CODE}
		    SET @APLY_START_DATE    = #{DT}
		    SET @CUSTOM_ITEM_CODE   = #{CODE}
		    SET @CUSTOM_ITEM_NAME   = #{NAME}
		    SET @CUSTOM_ITEM_SPEC   = #{UNIT}
		    SET @ORDER_UNIT         = #{SALE_UNIT}
		    SET @TRNS_RATE          = #{TRANS_RATE}
		    SET @USER_ID            = #{S_USER_ID}

		    IF NOT EXISTS (
		                  SELECT TOP 1 1
		                  FROM   BPR300T   WITH (NOLOCK)
		                  WHERE  COMP_CODE        = @COMP_CODE
		                  AND    TYPE             = N'2'          -- 구분(1:구매, 2:판매)
		                  AND    DIV_CODE         = N'*'          -- 판매일 경우 사업장 관리안함
		                  AND    ITEM_CODE        = @ITEM_CODE
		                  AND    CUSTOM_CODE      = @CUSTOM_CODE
		                  AND    APLY_START_DATE  = @APLY_START_DATE
		                  )
		        BEGIN
		            -- 품목 거래처정보 등록
		            INSERT INTO BPR300T
		            (      COMP_CODE           , TYPE               , DIV_CODE           , ITEM_CODE          , CUSTOM_CODE
		                 , APLY_START_DATE     , CUSTOM_ITEM_CODE   , CUSTOM_ITEM_NAME   , CUSTOM_ITEM_SPEC   , ORDER_UNIT
		                 , ORDER_P             , TRNS_RATE          , ORDER_PRSN         , MAKER_NAME         , AGREE_DATE
		                 , ORDER_RATE          , REMARK             , BASIS_P            , AGENT_P
		                 , INSERT_DB_USER      , INSERT_DB_TIME     , UPDATE_DB_USER     , UPDATE_DB_TIME
		            )
		            SELECT @COMP_CODE          , N'2'               , N'*'               , @ITEM_CODE         , @CUSTOM_CODE
		                 , @APLY_START_DATE    , @CUSTOM_ITEM_CODE  , @CUSTOM_ITEM_NAME  , @CUSTOM_ITEM_SPEC  , @ORDER_UNIT
		                 , NULL                , @TRNS_RATE         , N'*'               , N'*'               , @APLY_START_DATE
		                 , 100                 , N'*'               , NULL               , NULL
		                 , @USER_ID            , GETDATE()          , @USER_ID           , GETDATE()
		            FROM   BPR100T  WITH (NOLOCK)
		            WHERE  COMP_CODE            = @COMP_CODE
		            AND    ITEM_CODE            = @ITEM_CODE
		        END
		    ELSE
		        BEGIN
		            -- 품목 거래처정보 수정
		            UPDATE A
		            SET    A.CUSTOM_ITEM_CODE   = @CUSTOM_ITEM_CODE
		                 , A.CUSTOM_ITEM_NAME   = @CUSTOM_ITEM_NAME
		                 , A.CUSTOM_ITEM_SPEC   = @CUSTOM_ITEM_SPEC
		                 , A.UPDATE_DB_USER     = @USER_ID
		                 , A.UPDATE_DB_TIME     = GETDATE()
		            FROM   BPR300T   A
		            WHERE  COMP_CODE            = @COMP_CODE
		            AND    TYPE                 = N'2'          -- 구분(1:구매, 2:판매)
		            AND    DIV_CODE             = N'*'          -- 판매일 경우 사업장 관리안함
		            AND    ITEM_CODE            = @ITEM_CODE
		            AND    CUSTOM_CODE          = @CUSTOM_CODE
		            AND    APLY_START_DATE      = @APLY_START_DATE
		        END
		END
	</update>



<!-- 전자거래명세서 전송 로직 -->
	<insert id="str411ukrvServiceImpl.fnProgWebCash" parameterType="Map">
		/* str411ukrvServiceImpl.fnProgWebCash */
		INSERT INTO L_STR411T (
		            KEY_VALUE         , OPR_FLAG           , COMP_CODE           , TRANSYN_NAME   , STAT_CODE         , STS
		          , REGS_DATE         , SELR_CORP_NO       , SELR_CORP_NM        , SELR_CEO       , SELR_CORP_ADDS    , SELR_BUSS_CONS
		          , SELR_BUSS_TYPE    , SELR_CHRG_TEL      , BUYR_CORP_NO        , CUSTOM_CODE    , BUYR_CORP_NM      , BUYR_CEO
		          , BUYR_CORP_ADDS    , BUYR_CHRG_TEL      , CHRG_AMT            , TAX_AMT        , TOTL_AMT          , SUM_AMT
		          , BUYR_CHRG_NM1     , BUYR_CHRG_MOBL1    , BUYR_CHRG_EMAIL1    , SND_MAIL_YN    , SND_SMS_YN        , SND_FAX_YN
		          , BILLSEQ           , ERP_SEQ            , DIV_CODE            , DEL_YN         , ERR_GUBUN         , SEND_DATE
		          , INSERT_DB_USER    , INSERT_DB_TIME
		) VALUES(
		            #{KEY_VALUE}      , #{OPR_FLAG}        , #{COMP_CODE}        , #{TRANSYN_NAME}, #{STAT_CODE}      , #{STS}
		          , #{REGS_DATE}      , #{SELR_CORP_NO}    , #{SELR_CORP_NM}     , #{SELR_CEO}    , #{SELR_CORP_ADDS} , #{SELR_BUSS_CONS}
		          , #{SELR_BUSS_TYPE} , #{SELR_CHRG_TEL}   , #{BUYR_CORP_NO}     , #{CUSTOM_CODE} , #{BUYR_CORP_NM}   , #{BUYR_CEO}
		          , #{BUYR_CORP_ADDS} , #{BUYR_CHRG_TEL}   , #{CHRG_AMT}         , #{TAX_AMT}     , #{TOTL_AMT}       , #{SUM_AMT}
		          , #{BUYR_CHRG_NM1}  , #{BUYR_CHRG_MOBL1} , #{BUYR_CHRG_EMAIL1} , #{SND_MAIL_YN} , #{SND_SMS_YN}     , #{SND_FAX_YN}
		          , #{BILLSEQ}        , #{ERP_SEQ}         , #{DIV_CODE}         , #{DEL_YN}      , #{ERR_GUBUN}      , #{SEND_DATE}
		          , #{S_USER_ID}      , GETDATE()
		)
	</insert>

	<update id="str411ukrvServiceImpl.spReceiving" parameterType="Map" statementType="CALLABLE">
		{call USP_SALES_ElectronicTransStatOfWebCash(
			#{COMP_CODE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{KEY_VALUE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{UNIT_TYPE		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{LOGIN_ID		, mode=IN		, jdbcType=VARCHAR		, javaType=java.lang.String},
			#{ERROR_DESC	, mode=OUT		, jdbcType=VARCHAR		, javaType=java.lang.String} 
		)}
	</update>



<!-- 전자거래명세서 출력 로직 -->
	<update id="str411ukrvServiceImpl.fnMakePrintData" parameterType="Map">
		/* str411ukrvServiceImpl.fnMakePrintData */
		DECLARE @CompCode         NVARCHAR(08)         -- 법인코드  
		      , @DivCode          NVARCHAR(08)         -- 사업자
		      , @UserID           NVARCHAR(10)         -- 사용자  
		      , @PgmID            NVARCHAR(20)         -- 프로그램 ID
		      , @PubNum           NVARCHAR(20)         -- 계산서번호
		      , @RptSeq           INT                  -- 순번
		      , @RptNum           NVARCHAR(40)         -- 출력 레포트 번호(key)

		    SET @CompCode = #{S_COMP_CODE}
		    SET @DivCode  = #{DIV_CODE}
		    SET @UserID   = #{S_USER_ID}
		    SET @PgmID    = 'STR411UKRV'
		    SET @PubNum   = #{BILLSEQ}
		    SET @RptSeq   = ${RPT_SEQ}
		    SET @RptNum   = #{KEY_VALUE}               -- @UserID + CONVERT(NVARCHAR(08), GETDATE(), 112) + REPLACE(CONVERT(NVARCHAR, GETDATE(), 8),  ':', '')

		IF NOT EXISTS (
		               SELECT TOP 1 1
		                 FROM  SYSOBJECTS
		                WHERE  NAME = 'T_STR411UKRV1'
		                  AND  TYPE = 'U'
		              )
		    BEGIN
		        -- 임시테이블 생성
		        CREATE TABLE uniLITE.T_STR411UKRV1
		        (      RPT_NUM          NVARCHAR(30)    NOT NULL ,                      -- 출력번호
		               RPT_SEQ          NUMERIC(05, 0)  NOT NULL DEFAULT 0 ,            -- 출력순번
		               PGM_ID           NVARCHAR(30)    NOT NULL ,                      -- 프로그램ID
		               COMP_CODE        NVARCHAR(08)    NOT NULL DEFAULT 'MASTER' ,     -- 법인코드
		               DIV_CODE         NVARCHAR(08)    NOT NULL ,                      -- 사업장
		               PUB_NUM          NVARCHAR(20)    NOT NULL ,                      -- 세금계산서번호
		               INSERT_DB_USER   NVARCHAR(10)    NOT NULL DEFAULT 'uniLITE',     -- 입력자
		               INSERT_DB_TIME   DATETIME        NOT NULL DEFAULT GETDATE(),     -- 입력일
		    
		               CONSTRAINT T_STR411UKRV1_IDX00 PRIMARY KEY CLUSTERED (RPT_NUM, RPT_SEQ, PGM_ID)
		        )
		    END
		ELSE
		    BEGIN
		        -- 이전 출력조건 삭제
		        DELETE A
		          FROM uniLITE.T_STR411UKRV1  A  WITH (NOLOCK)
		         WHERE A.INSERT_DB_TIME &lt; DATEADD(DAY, -1, GETDATE())
		    END

		INSERT INTO uniLITE.T_STR411UKRV1(
		       RPT_NUM           , RPT_SEQ           , PGM_ID            , COMP_CODE
		     , DIV_CODE          , PUB_NUM           , INSERT_DB_USER    , INSERT_DB_TIME
		)
		SELECT @RptNum      AS RPT_NUM
		     , @RptSeq      AS RPT_SEQ
		     , @PgmID       AS PGM_ID
		     , @CompCode    AS COMP_CODE
		     , @DivCode     AS DIV_CODE
		     , @PubNum      AS PUB_NUM
		     , @UserID      AS INSERT_DB_USER
		     , GETDATE()    AS INSERT_DB_TIME
	</update>

	<select id="str411ukrvServiceImpl.fnPrintData" parameterType="Map" resultType="rMap">
		/* str411ukrvServiceImpl.fnPrintData (str411ukrv.Cstr411ukrs1v[fnStr411QStd] Query01) */
		BEGIN
		    DECLARE         @COMP_CODE          NVARCHAR(08)                -- (필수) 법인코드
		                  , @DIV_CODE           NVARCHAR(08)                -- (필수) 사업장
		                  , @RPT_NUM            NVARCHAR(30)                -- (필수) 출력번호
		                  , @USER_ID            NVARCHAR(10)                -- (필수) 사용자ID
		                  , @PGM_ID             NVARCHAR(30)                -- (필수) 프로그램ID
		                
		    SET NOCOUNT ON
		    SET ARITHABORT ON
		
		--  1. 변수 값 할당> -------------------------------------------------------------------------------------------------
		    SET @COMP_CODE          = #{S_COMP_CODE}
		    SET @DIV_CODE           = #{DIV_CODE}
		    SET @RPT_NUM            = #{KEY_VALUE}
		    SET @USER_ID            = #{S_USER_ID}
		    SET @PGM_ID             = #{PGM_ID}
		
		--  2. 명칭 조회 유형 설정> ------------------------------------------------------------------------------------------
		    DECLARE @RefItem            NVARCHAR(01)
		
		    SELECT TOP 1 @RefItem = REF_ITEM
		    FROM   BSA300T WITH (NOLOCK)
		    WHERE  USER_ID = @USER_ID
		
		    SET @RefItem = ISNULL(@RefItem, '0')
		
		--  3. 출력 옵션 설정> -----------------------------------------------------------------------------------------------
		    DECLARE @ItemDisplay        NVARCHAR(05)            -- 품목표시컬럼설정
		          , @MaxPage            NUMERIC(03, 0)          -- 페이지내 최대데이터 건수
		          , @TotalYN            NVARCHAR(03)            -- 합계표시여부
		
		    SELECT TOP 1 @ItemDisplay = REF_CODE4
		               , @MaxPage     = REF_CODE8
		               , @TotalYN     = CASE WHEN ISNULL(REF_CODE9, 'N') = '' THEN 'N'
		                                     ELSE ISNULL(REF_CODE9, 'N')
		                                END
		    FROM   BSA100T WITH (NOLOCK)
		    WHERE  COMP_CODE    = @COMP_CODE
		    AND    MAIN_CODE    = N'S084'
		    AND    SUB_CODE    != N'$'
		    AND    REF_CODE1    = N'Y'
		
		    SET @ItemDisplay = ISNULL(@ItemDisplay, 'NAME')
		    SET @MaxPage     = ISNULL(@MaxPage    , 8)
		    SET @TotalYN     = ISNULL(@TotalYN    , 'N')
		
		--  4. 임시 테이블 선언> ---------------------------------------------------------------------------------------------
		    IF EXISTS (SELECT TOP 1 1 FROM tempdb..sysobjects WHERE id = OBJECT_ID('tempdb..#STR400RKR_TMP_080913')) 
		        DROP TABLE #STR400RKR_TMP_080913
		
		    CREATE TABLE #STR400RKR_TMP_080913
		    (      COMP_CODE        NVARCHAR(08)  , INOUT_NUM        NVARCHAR(20)  , INOUT_SEQ        NUMERIC(5, 0)
		         , INOUT_TYPE       NVARCHAR(02)  , DIV_CODE         NVARCHAR(08)  , INOUT_DATE       NVARCHAR(08)
		         , MY_CUSTOM_CODE   NVARCHAR(08)  , MY_CUSTOM_NAME   NVARCHAR(40)  , MY_TOP_NAME      NVARCHAR(20)
		         , MY_COMPANY_NUM   NVARCHAR(12)  , MY_ZIP_CODE      NVARCHAR(06)  , MY_ADDR          NVARCHAR(80)
		         , MY_TELEPHON      NVARCHAR(20)  , CUSTOM_CODE      NVARCHAR(08)  , CUSTOM_NAME      NVARCHAR(40)
		         , TOP_NAME         NVARCHAR(20)  , COMPANY_NUM      NVARCHAR(12)  , ZIP_CODE         NVARCHAR(06)
		         , ADDR             NVARCHAR(200) , TELEPHON         NVARCHAR(20)  , ITEM_CODE        NVARCHAR(20)
		         , ITEM_NAME        NVARCHAR(200) , SPEC             NVARCHAR(160) , ORDER_UNIT       NVARCHAR(03)
		         , ORDER_UNIT_Q     NUMERIC(30, 6), ORDER_UNIT_P     NUMERIC(30, 6), ORDER_UNIT_O     NUMERIC(30, 6)
		         , INOUT_TAX_AMT    NUMERIC(30, 6), TAX_TYPE         NVARCHAR(01)  , DISCOUNT_RATE    NUMERIC(30, 6)
		         , DVRY_CUST_CD     NVARCHAR(40)  , DVRY_CUST_NM     NVARCHAR(40)  , DVRY_CUST_TEL    NVARCHAR(20)
		         , DVRY_CUST_ADD    NVARCHAR(200) , GUBUN            NUMERIC(18, 0), l_PAGE           NUMERIC(18, 0)
		         , N_PAGE           NUMERIC(06, 0), MAX_PAGE         NUMERIC(06, 0), SUM_Q            NUMERIC(30, 6)
		         , SUM_O            NUMERIC(30, 6), SUM_TAX          NUMERIC(30, 6), G_REC            NUMERIC(04, 0)
		         , G_SUPP           NVARCHAR(01)  , LOT_NO           NVARCHAR(20)
		         , SORT_FLD         AS COMP_CODE + DIV_CODE + CUSTOM_CODE + INOUT_TYPE + INOUT_NUM + ISNULL(G_SUPP, 'S')
		                                                                  + RIGHT('0000' + CONVERT(NVARCHAR(5), INOUT_SEQ), 5)
		    )
		    CREATE INDEX STR400RKR_TMP_080913_IDX01 ON #STR400RKR_TMP_080913(COMP_CODE , DIV_CODE , CUSTOM_CODE
		                                                                   , INOUT_TYPE, INOUT_NUM, G_SUPP, INOUT_SEQ)
		
		--  5. 조회 데이터 생성> ---------------------------------------------------------------------------------------------
		    INSERT INTO #STR400RKR_TMP_080913
		    SELECT A.COMP_CODE
		         , A.INOUT_NUM
		         , A.INOUT_SEQ
		         , A.INOUT_TYPE
		         , A.DIV_CODE
		         , A.INOUT_DATE
		         , C5.DIV_CODE                                                                  AS MY_CUSTOM_CODE
		         , C5.DIV_NAME                                                                  AS MY_CUSTOM_NAME
		         , C5.REPRE_NAME                                                                AS MY_TOP_NAME
		         , CASE WHEN ISNULL(C5.COMPANY_NUM, '') = '' THEN ''
		                ELSE SUBSTRING(C5.COMPANY_NUM,1,3) + '-'
		                   + SUBSTRING(C5.COMPANY_NUM,4,2) + '-'
		                   + SUBSTRING(C5.COMPANY_NUM,6,5)
		           END                                                                          AS MY_COMPANY_NUM
		         , C5.ZIP_CODE                                                                  AS MY_ZIP_CODE
		         , C5.ADDR                                                                      AS MY_ADDR
		         , C5.TELEPHON                                                                  AS MY_TELEPHON
		         , C1.CUSTOM_CODE
		         , C1.CUSTOM_NAME                                                               AS CUSTOM_NAME
		         , C1.TOP_NAME
		         , CASE WHEN ISNULL(C1.COMPANY_NUM,'') = '' THEN ''
		                ELSE SUBSTRING(C1.COMPANY_NUM,1,3) + '-'
		                   + SUBSTRING(C1.COMPANY_NUM,4,2) + '-'
		                   + SUBSTRING(C1.COMPANY_NUM,6,5)
		           END                                                                          AS COMPANY_NUM
		         , C1.ZIP_CODE
		         , RTRIM(ISNULL(C1.ADDR1,'') + ISNULL(C1.ADDR2,''))                             AS ADDR
		         , C1.TELEPHON
		         , CASE WHEN ISNULL(C3.CUSTOM_ITEM_CODE, '') != '' THEN C3.CUSTOM_ITEM_CODE
		                ELSE A.ITEM_CODE
		           END                                                                          AS ITEM_CODE
		         , CASE WHEN ISNULL(C3.CUSTOM_ITEM_NAME, '') != '' THEN C3.CUSTOM_ITEM_NAME
		                ELSE CASE WHEN @RefItem = '1' THEN C2.ITEM_NAME1
		                          WHEN @RefItem = '2' THEN C2.ITEM_NAME2
		                          ELSE C2.ITEM_NAME
		                     END        
		           END                                                                          AS ITEM_NAME
		         , CASE WHEN ISNULL(C3.CUSTOM_ITEM_SPEC, '') != '' THEN C3.CUSTOM_ITEM_SPEC
		                ELSE C2.SPEC
		           END                                                                          AS SPEC
		         , A.ORDER_UNIT
		         , CASE WHEN A.INOUT_TYPE = '2' THEN A.ORDER_UNIT_Q
		                WHEN A.INOUT_TYPE = '3' THEN A.ORDER_UNIT_Q  * (-1)
		           END                                                                          AS ORDER_UNIT_Q
		         , A.ORDER_UNIT_P                                                               AS ORDER_UNIT_P
		         , CASE WHEN A.INOUT_TYPE = '2' THEN A.ORDER_UNIT_O
		                WHEN A.INOUT_TYPE = '3' THEN A.ORDER_UNIT_O  * (-1)
		           END                                                                          AS ORDER_UNIT_O
		         , CASE WHEN A.INOUT_TYPE = '2' THEN A.INOUT_TAX_AMT
		                WHEN A.INOUT_TYPE = '3' THEN A.INOUT_TAX_AMT * (-1)
		           END                                                                          AS INOUT_TAX_AMT
		         , A.TAX_TYPE
		         , ISNULL(A.DISCOUNT_RATE, 0)                                                   AS DISCOUNT_RATE
		         , A.DVRY_CUST_CD
		         , ISNULL(C4.DVRY_CUST_NM ,' ')                                                 AS DVRY_CUST_NM
		         , ISNULL(C4.DVRY_CUST_TEL,' ')                                                 AS DVRY_CUST_TEL
		         , ISNULL(C4.DVRY_CUST_ADD,' ')                                                 AS DVRY_CUST_ADD
		         , CONVERT(NUMERIC(18, 0), 0)                                                   AS GUBUN
		         , CONVERT(NUMERIC(18, 0), 0)                                                   AS l_PAGE
		         , CONVERT(NUMERIC(06, 0), 0)                                                   AS N_PAGE
		         , CONVERT(NUMERIC(06, 0), 0)                                                   AS MAX_PAGE
		         , CONVERT(NUMERIC(18, 6), 0)                                                   AS SUM_Q
		         , CONVERT(NUMERIC(18, 4), 0)                                                   AS SUM_O
		         , CONVERT(NUMERIC(18, 4), 0)                                                   AS SUM_TAX
		         , CONVERT(NUMERIC(04, 0), 0)                                                   AS G_REC
		         , 'S'                                                                          AS G_SUPP
		         , A.LOT_NO                                                                     AS LOT_NO
		    FROM              BTR100T   A  WITH (NOLOCK)
		           INNER JOIN (-- 출력조회조건
		                      SELECT S1.COMP_CODE, S1.DIV_CODE, S2.INOUT_NUM, S2.INOUT_TYPE
		                      FROM              STB100T       S1 WITH (NOLOCK)
		                             INNER JOIN SSA110T       S2 WITH (NOLOCK) ON S2.COMP_CODE  = S1.COMP_CODE
		                                                                      AND S2.DIV_CODE   = S1.SALE_DIV_CODE
		                                                                      AND S2.PUB_NUM    = S1.PUB_NUM
		                             INNER JOIN T_STR411UKRV1 S3 WITH (NOLOCK) ON S3.RPT_NUM    = @RPT_NUM
		                                                                      AND S3.COMP_CODE  = S1.COMP_CODE
		                                                                      AND S3.DIV_CODE   = S1.DIV_CODE
		                                                                      AND S3.PUB_NUM    = S1.PUB_NUM
		                      WHERE  S1.COMP_CODE    = @COMP_CODE
		                      AND    S1.DIV_CODE     = @DIV_CODE
		                      GROUP  BY
		                             S1.COMP_CODE, S1.DIV_CODE, S2.INOUT_NUM, S2.INOUT_TYPE
		                      ) C                        ON  C.COMP_CODE        = A.COMP_CODE
		                                                AND  C.DIV_CODE         = A.DIV_CODE
		                                                AND  C.INOUT_NUM        = A.INOUT_NUM
		                                                AND  C.INOUT_TYPE       = A.INOUT_TYPE
		           INNER JOIN BCM100T   C1 WITH (NOLOCK) ON C1.COMP_CODE        = A.COMP_CODE
		                                                AND C1.CUSTOM_CODE      = A.SALE_CUSTOM_CODE
		           INNER JOIN BPR100T   C2 WITH (NOLOCK) ON C2.COMP_CODE        = A.COMP_CODE
		                                                AND C2.ITEM_CODE        = A.ITEM_CODE
		           LEFT  JOIN BPR300T   C3 WITH (NOLOCK) ON C3.TYPE             = '2'
		                                                AND C3.DIV_CODE         = '*'
		                                                AND C3.COMP_CODE        = A.COMP_CODE
		                                                AND C3.CUSTOM_CODE      = A.INOUT_CODE
		                                                AND C3.ITEM_CODE        = A.ITEM_CODE
		                                                AND C3.APLY_START_DATE  = (
		                                                                          SELECT MAX(APLY_START_DATE)
		                                                                          FROM   BPR300T WITH (NOLOCK)
		                                                                          WHERE  COMP_CODE        = C3.COMP_CODE
		                                                                          AND    TYPE             = C3.TYPE
		                                                                          AND    DIV_CODE         = C3.DIV_CODE
		                                                                          AND    ITEM_CODE        = C3.ITEM_CODE
		                                                                          AND    CUSTOM_CODE      = C3.CUSTOM_CODE
		                                                                          AND    APLY_START_DATE &lt;= ISNULL(A.INOUT_DATE, CONVERT(NVARCHAR, GETDATE(), 112)))
		           LEFT  JOIN (-- 배송처
		                      SELECT S1.COMP_CODE
		                           , S1.CUSTOM_CODE
		                           , CONVERT(NVARCHAR(8), S1.DVRY_CUST_SEQ) AS DVRY_CUST_SEQ
		                           , S1.DVRY_CUST_NM
		                           , MAX(S1.DVRY_CUST_TEL)                  AS DVRY_CUST_TEL
		                           , S1.DVRY_CUST_ADD
		                      FROM   SCM100T S1 WITH (NOLOCK)
		                      WHERE  S1.COMP_CODE  = @COMP_CODE
		                      GROUP  BY
		                             S1.COMP_CODE, S1.CUSTOM_CODE, S1.DVRY_CUST_SEQ, S1.DVRY_CUST_NM, S1.DVRY_CUST_ADD
		                      ) C4                       ON C4.COMP_CODE        = A.COMP_CODE
		                                                AND C4.DVRY_CUST_SEQ    = A.DVRY_CUST_CD
		                                                AND C4.CUSTOM_CODE      = A.INOUT_CODE
		           INNER JOIN BOR120T   C5 WITH (NOLOCK) ON C5.COMP_CODE        = A.COMP_CODE
		                                                AND C5.DIV_CODE         = A.DIV_CODE
--		           LEFT  JOIN BSA100T   M1 WITH (NOLOCK) ON M1.COMP_CODE        = A.COMP_CODE
--		                                                AND M1.MAIN_CODE        = N'S101'
--		                                                AND M1.SUB_CODE        != N'$'
		    WHERE  A.COMP_CODE          = @COMP_CODE
		    AND    A.DIV_CODE           = @DIV_CODE
		    AND    A.INOUT_TYPE        IN ('2', '3')
		    AND    A.CREATE_LOC         = N'1'
		
		--  6. 수불번호별 공백 데이터 생성> ----------------------------------------------------------------------------------
		    DECLARE     @InoutNum       NVARCHAR(20)        -- 수불번호
		              , @InoutSeq       NUMERIC(05, 0)      -- 수불순번
		              , @InoutType      NVARCHAR(03)        -- 수불유형
		              , @GroupSupp      NVARCHAR(02)        -- 거래명세서 구분
		              , @InoutCnt       NUMERIC(05, 0)      -- 수불번호별 조회데이터 건수
		              , @InoutMax       NUMERIC(03, 0)      -- 수불번호별 최대데이터 건수
		
		    SET     @InoutMax       = @MaxPage
		    
		    DECLARE     @CurrentCnt     NUMERIC(05, 0)      -- 현수불번호별 조회데이터 건수
		              , @ItemName       NVARCHAR(200)       -- 품목명(이하여백 코멘트 추가)
		              , @Spec           NVARCHAR(160)       -- 규격  (이하여백 코멘트 추가)
		
		    -- 커서로 수불번호 조회
		    DECLARE CUR_200911121447 CURSOR LOCAL FOR
		        
		        SELECT A.INOUT_NUM, A.INOUT_TYPE, A.G_SUPP
		             , MAX(A.INOUT_SEQ) + 1 AS INOUT_SEQ
		        FROM   #STR400RKR_TMP_080913 A  WITH (NOLOCK)
		        GROUP  BY
		               A.INOUT_NUM, A.INOUT_TYPE, A.G_SUPP
		
		    OPEN CUR_200911121447
		    FETCH NEXT FROM CUR_200911121447 INTO @InoutNum, @InoutType, @GroupSupp, @InoutSeq
		
		    WHILE (@@FETCH_STATUS = 0)
		    BEGIN
		        SELECT @InoutCnt    = COUNT(*) % @InoutMax
		        FROM   #STR400RKR_TMP_080913 A WITH (NOLOCK)
		        WHERE  A.INOUT_NUM  = @InoutNum
		        AND    A.INOUT_TYPE = @InoutType
		        AND    A.G_SUPP     = ISNULL(@GroupSupp, 'S')
		
		        SET @CurrentCnt = @InoutCnt
		
		        WHILE @InoutCnt &lt; @InoutMax AND ((@TotalYN = 'N' AND @InoutCnt > 0) OR (@TotalYN = 'Y'))
		        BEGIN
		            IF @CurrentCnt = @InoutCnt
		                BEGIN
		                    IF @ItemDisplay = 'CODE'
		                        SET @ItemName = '**이하여백**'
		                    ELSE
		                        SET @Spec     = '**이하여백**'
		                END
		            ELSE
		                BEGIN
		                    SET @ItemName = ''
		                    SET @Spec     = ''
		                END
		
		            INSERT INTO #STR400RKR_TMP_080913
		            (      COMP_CODE       , DIV_CODE        , INOUT_NUM       , INOUT_SEQ       , INOUT_TYPE
		                 , INOUT_DATE      , MY_CUSTOM_CODE  , MY_CUSTOM_NAME  , MY_TOP_NAME     , MY_COMPANY_NUM
		                 , MY_ZIP_CODE     , MY_ADDR         , MY_TELEPHON     , CUSTOM_CODE     , CUSTOM_NAME
		                 , TOP_NAME        , COMPANY_NUM     , ZIP_CODE        , ADDR            , TELEPHON
		                 , ITEM_NAME       , SPEC            , GUBUN           , G_SUPP
		            )
		            SELECT TOP 1
		                   A.COMP_CODE     , A.DIV_CODE      , A.INOUT_NUM     , @InoutSeq       , A.INOUT_TYPE
		                 , A.INOUT_DATE    , A.MY_CUSTOM_CODE, A.MY_CUSTOM_NAME, A.MY_TOP_NAME   , A.MY_COMPANY_NUM
		                 , A.MY_ZIP_CODE   , A.MY_ADDR       , A.MY_TELEPHON   , A.CUSTOM_CODE   , A.CUSTOM_NAME
		                 , A.TOP_NAME      , A.COMPANY_NUM   , A.ZIP_CODE      , A.ADDR          , A.TELEPHON
		                 , @ItemName       , @Spec           , A.GUBUN         , A.G_SUPP
		            FROM   #STR400RKR_TMP_080913 A WITH (NOLOCK)
		            WHERE  A.INOUT_NUM  = @InoutNum
		            AND    A.INOUT_TYPE = @InoutType
		            AND    A.G_SUPP     = @GroupSupp
		
		            SET    @InoutCnt = @InoutCnt + 1
		            SET    @InoutSeq = @InoutSeq + 1
		        END
		
		        FETCH NEXT FROM CUR_200911121447 INTO @InoutNum, @InoutType, @GroupSupp, @InoutSeq
		    END
		
		    CLOSE CUR_200911121447
		    DEALLOCATE CUR_200911121447
		
		--  7. 출력페이지 설정> ----------------------------------------------------------------------------------------------
		    UPDATE A
		    SET    A.l_PAGE     = ISNULL(B.l_PAGE  , 0)
		         , A.N_PAGE     = ISNULL(B.N_PAGE  , 0)
		         , A.MAX_PAGE   = ISNULL(B.MAX_PAGE, 0)
		         , A.G_REC      = ISNULL(B.G_REC   , 0)
		    FROM              #STR400RKR_TMP_080913 A  WITH (NOLOCK, INDEX(STR400RKR_TMP_080913_IDX01))
		           INNER JOIN (
		                      SELECT A.COMP_CODE, A.DIV_CODE, A.INOUT_NUM, A.INOUT_SEQ, A.INOUT_TYPE, A.G_SUPP
		                           , ROW_NUMBER() OVER(    ORDER BY A.SORT_FLD)                       AS T_REC
		                           , ROW_NUMBER() OVER(PARTITION BY A.INOUT_NUM 
		                                                   ORDER BY A.SORT_FLD)                       AS G_REC
		                           , CEILING(ROW_NUMBER() OVER(    ORDER BY A.SORT_FLD) / @InoutMax)  AS l_PAGE
		                           , CEILING(ROW_NUMBER() OVER(PARTITION BY A.INOUT_NUM 
		                                                           ORDER BY A.SORT_FLD) / @InoutMax)  AS N_PAGE
		                           , @InoutMax                                                        AS MAX_PAGE
		                      FROM   #STR400RKR_TMP_080913 A  WITH (NOLOCK, INDEX(STR400RKR_TMP_080913_IDX01))
		                      ) B                                   ON B.COMP_CODE      = A.COMP_CODE
		                                                           AND B.DIV_CODE       = A.DIV_CODE
		                                                           AND B.INOUT_NUM      = A.INOUT_NUM
		                                                           AND B.INOUT_SEQ      = A.INOUT_SEQ
		                                                           AND B.INOUT_TYPE     = A.INOUT_TYPE
		                                                           AND ISNULL(B.G_SUPP, 'S') = ISNULL(A.G_SUPP, 'S')
		    WHERE  A.COMP_CODE  = @COMP_CODE
		
		--  8. 합계 계산> ----------------------------------------------------------------------------------------------------
		    IF @TotalYN = 'Y'
		    BEGIN
		        UPDATE A
		        SET    A.ITEM_CODE      = CASE WHEN A.G_REC % A.MAX_PAGE = 0 AND A.ITEM_CODE IS NULL THEN '합계'
		                                       ELSE A.ITEM_CODE
		                                  END
		             , A.ORDER_UNIT_Q   = CASE WHEN A.G_REC % A.MAX_PAGE = 0 AND A.ITEM_CODE IS NULL THEN ISNULL(B.SUM_Q  , 0.0)
		                                       ELSE A.ORDER_UNIT_Q
		                                  END
		             , A.ORDER_UNIT_O   = CASE WHEN A.G_REC % A.MAX_PAGE = 0 AND A.ITEM_CODE IS NULL THEN ISNULL(B.SUM_O  , 0.0)
		                                       ELSE A.ORDER_UNIT_O
		                                  END
		             , A.INOUT_TAX_AMT  = CASE WHEN A.G_REC % A.MAX_PAGE = 0 AND A.ITEM_CODE IS NULL THEN ISNULL(B.SUM_TAX, 0.0)
		                                       ELSE A.INOUT_TAX_AMT
		                                  END
		             , A.SUM_Q          = ISNULL(B.SUM_Q  , 0.0)
		             , A.SUM_O          = ISNULL(B.SUM_O  , 0.0)
		             , A.SUM_TAX        = ISNULL(B.SUM_TAX, 0.0)
		        FROM              #STR400RKR_TMP_080913 A  WITH (NOLOCK)
		               INNER JOIN (
		                          SELECT A.COMP_CODE, A.DIV_CODE, A.INOUT_NUM, A.INOUT_TYPE, A.G_SUPP
		                               , SUM(ISNULL(A.ORDER_UNIT_Q , 0.0))  AS SUM_Q
		                               , SUM(ISNULL(A.ORDER_UNIT_O , 0.0))  AS SUM_O
		                               , SUM(ISNULL(A.INOUT_TAX_AMT, 0.0))  AS SUM_TAX
		                          FROM   #STR400RKR_TMP_080913 A  WITH (NOLOCK)
		                          GROUP  BY
		                                 A.COMP_CODE, A.DIV_CODE, A.INOUT_NUM, A.INOUT_TYPE, A.G_SUPP
		                          ) B                                   ON B.COMP_CODE      = A.COMP_CODE
		                                                               AND B.DIV_CODE       = A.DIV_CODE
		                                                               AND B.INOUT_NUM      = A.INOUT_NUM
		                                                               AND B.INOUT_TYPE     = A.INOUT_TYPE
		                                                               AND B.G_SUPP         = A.G_SUPP
		        WHERE  A.COMP_CODE      = @COMP_CODE
		    END
		
		--  9. 데이터 조회> --------------------------------------------------------------------------------------------------
		    SELECT A.INOUT_NUM        , A.INOUT_DATE
		         , A.MY_CUSTOM_CODE   , A.MY_CUSTOM_NAME   , A.MY_TOP_NAME      , A.MY_COMPANY_NUM   , A.MY_ZIP_CODE
		         , A.MY_ADDR          , A.MY_TELEPHON      , A.CUSTOM_CODE      , A.CUSTOM_NAME
		         , A.TOP_NAME         , A.COMPANY_NUM      , A.ZIP_CODE         , A.ADDR             , A.TELEPHON
		         , A.INOUT_SEQ        , A.ITEM_CODE        , A.ITEM_NAME        , A.SPEC
		         , A.ORDER_UNIT       , A.ORDER_UNIT_Q     , A.ORDER_UNIT_P     , A.ORDER_UNIT_O     , A.INOUT_TAX_AMT
		         , A.TAX_TYPE         , A.DISCOUNT_RATE    , A.DVRY_CUST_NM     , A.DVRY_CUST_TEL
		         , A.GUBUN            , A.l_PAGE           , A.N_PAGE           , A.MAX_PAGE
		         , A.SUM_Q            , A.SUM_O            , A.SUM_TAX          , A.DVRY_CUST_CD     , A.G_REC
		         , A.G_SUPP           , A.DVRY_CUST_ADD    , A.LOT_NO           , A.SORT_FLD         , B.MAX_N_PAGE
		    FROM   #STR400RKR_TMP_080913 A  WITH (NOLOCK, INDEX(STR400RKR_TMP_080913_IDX01))
		    INNER JOIN ( SELECT COUNT(COMP_CODE) AS MAX_N_PAGE
		                   FROM #STR400RKR_TMP_080913 WITH(NOLOCK)
		               ) B ON 1 = 1
		    ORDER  BY
		           A.SORT_FLD
		--         A.GUBUN, A.INOUT_NUM, A.N_PAGE   -- 레포트 페이지내 정렬순서
		    
		--  10. 임시테이블 삭제> ---------------------------------------------------------------------------------------------
		    DROP TABLE #STR400RKR_TMP_080913
		
		    SET NOCOUNT OFF
		    SET ARITHABORT OFF
		END
	</select>
</mapper>