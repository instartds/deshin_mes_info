<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sea200ukrvServiceImpl">
<!-- 조회 팝업 쿼리 -->
	<select id="sea200ukrvServiceImpl.searchPopupList" parameterType="Map" resultType="rMap">
		/* sea200ukrvServiceImpl.searchPopupList */
		SELECT A.COMP_CODE
		     , A.DIV_CODE
		     , A.ESTI_NUM
		     , A.CUSTOM_CODE
		     , CASE WHEN ISNULL(A.CUSTOM_NAME, '') = '' THEN C1.CUSTOM_NAME
		            ELSE A.CUSTOM_NAME
		       END                                      AS CUSTOM_NAME       --20210818 수정: 
		     , A.ESTI_REQ_DATE
		     , A.SALE_PRSN
		     , A.ESTI_ITEM_CODE
		     , A.ESTI_ITEM_NAME
		     , A.ESTI_QTY
		     , A.ESTI_TYPE
		     , A.PROD_PART
		     , A.RES_PART
		     , A.FILL_UNIT
		     , A.AGREE_YN
		     , A.AGREE_PRSN
		     , A.BOM_SPEC
		     , A.REMARK
		     , A.CASE_SM_REMARK
		     , A.INSERT_DB_USER
		     , A.INSERT_DB_TIME
		     , A.UPDATE_DB_USER
		     , A.UPDATE_DB_TIME
		     , Z1.REF_CODE1
		  FROM       SEA100T A  WITH(NOLOCK)
		  LEFT  JOIN BCM100T C1 WITH(NOLOCK) ON C1.COMP_CODE   = A.COMP_CODE
		                                    AND C1.CUSTOM_CODE = A.CUSTOM_CODE
		  LEFT  JOIN BSA100T Z1 WITH(NOLOCK) ON Z1.COMP_CODE   = A.COMP_CODE
		                                    AND Z1.MAIN_CODE   = 'SE06'
		                                    AND Z1.SUB_CODE    = A.PROD_PART
		 WHERE A.COMP_CODE      = #{S_COMP_CODE}
		   AND A.DIV_CODE       = #{DIV_CODE}
		<if test="@foren.Ognl@isNotEmpty(FR_ESTI_REQ_DATE)">
		   AND A.ESTI_REQ_DATE &gt;= #{FR_ESTI_REQ_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(TO_ESTI_REQ_DATE)">
		   AND A.ESTI_REQ_DATE &lt;= #{TO_ESTI_REQ_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ESTI_NUM)">
		   AND A.ESTI_NUM       LIKE #{ESTI_NUM} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(SALE_PRSN)">
		   AND A.SALE_PRSN      = #{SALE_PRSN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE) and @foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND A.CUSTOM_CODE    = #{CUSTOM_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
		   AND A.CUSTOM_CODE    LIKE #{CUSTOM_CODE} + '%'
		</if>
		<if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
		   AND C1.CUSTOM_NAME   LIKE #{CUSTOM_NAME} + '%'
		</if>
		<if test="AGREE_YN != &quot;A&quot;">
		   AND A.AGREE_YN       = #{AGREE_YN}        --Y/N
		</if>
	</select>

<!-- 조회 쿼리 -->
	<select id="sea200ukrvServiceImpl.selectDetail" parameterType="Map" resultType="rMap">
		/* sea200ukrvServiceImpl.selectList */
		IF EXISTS ( SELECT TOP 1 1
		              FROM SEA200T WITH(NOLOCK)
		             WHERE COMP_CODE = #{S_COMP_CODE}
		               AND DIV_CODE  = #{DIV_CODE}
		               AND ESTI_NUM  = #{ESTI_NUM})
		    BEGIN
		        SELECT A.COMP_CODE        /* 법인코드                                */
		             , A.DIV_CODE         /* 사업장                                  */
		             , A.ESTI_NUM         /* 견적의뢰번호                            */
		             , A.OUT_DIV_CODE     /* 출고사업장                              */
		             , A.WORK_SHOP_CODE   /* 작업장                                  */
		             , C.TREE_NAME        AS WORK_SHOP_NAME
		             , A.PROG_WORK_CODE   /* 공정코드                                */
		             , B.PROG_WORK_NAME   /* 공정명                                  */
		             , A.WORK_TIME        /* 소요시간(HR)                            */
		             , A.MAN_CNT          /* 투입인력                                */
		             , A.MAN_HOUR         /* 작업공수(COMPUTE)                       */
		             , A.PRODT_PRSN       /* 생산담당                                */
		             , A.INSERT_DB_USER   /* 입력자                                  */
		             , A.INSERT_DB_TIME   /* 입력일                                  */
		             , A.UPDATE_DB_USER   /* 수정자                                  */
		             , A.UPDATE_DB_TIME   /* 수정일                                  */
		          FROM       SEA200T A WITH(NOLOCK)
		          INNER JOIN PBS200T B WITH(NOLOCK) ON B.COMP_CODE      = A.COMP_CODE
		                                           AND B.DIV_CODE       = A.OUT_DIV_CODE
		                                           AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
		                                           AND B.PROG_WORK_CODE = A.PROG_WORK_CODE
		          INNER JOIN BSA230T C WITH(NOLOCK) ON C.COMP_CODE      = A.COMP_CODE
		                                           AND C.TYPE_LEVEL     = A.OUT_DIV_CODE
		                                           AND C.TREE_CODE      = A.WORK_SHOP_CODE
		         WHERE A.COMP_CODE = #{S_COMP_CODE}
		           AND A.DIV_CODE  = #{DIV_CODE}
		           AND A.ESTI_NUM  = #{ESTI_NUM}
		    END
		ELSE
		    BEGIN
		        SELECT A.COMP_CODE
		             , #{DIV_CODE}        AS DIV_CODE
		             , #{ESTI_NUM}        AS ESTI_NUM
		             , #{OUT_DIV_CODE}    AS OUT_DIV_CODE
		             , A.WORK_SHOP_CODE
		             , C.TREE_NAME        AS WORK_SHOP_NAME
		             , A.PROG_WORK_CODE
		             , A.PROG_WORK_NAME
		             , 0                  AS WORK_TIME
		             , 0                  AS MAN_CNT
		             , 0                  AS MAN_HOUR
		             , #{PRODT_PRSN}      AS PRODT_PRSN
		             , A.INSERT_DB_USER
		             , A.INSERT_DB_TIME
		             , A.UPDATE_DB_USER
		             , A.UPDATE_DB_TIME
		          FROM       PBS200T A WITH(NOLOCK)
		          INNER JOIN BSA230T C WITH(NOLOCK) ON C.COMP_CODE  = A.COMP_CODE
		                                           AND C.TYPE_LEVEL = #{OUT_DIV_CODE}
		                                           AND C.TREE_CODE  = A.WORK_SHOP_CODE
		         WHERE A.COMP_CODE = #{S_COMP_CODE}
		           AND A.DIV_CODE  = #{OUT_DIV_CODE}
		    END
	</select>

	<select id="sea200ukrvServiceImpl.selectDetail2" parameterType="Map" resultType="rMap">
		/* sea200ukrvServiceImpl.selectDetail2, 20210804 수정 - REF_CODE1, 2 가져오는 로직 수정 - OUT_DIV_CODE에 따라 변경되도록 수정 */
		SELECT A.${REF_CODE}                                                                     AS MONTH_AVG_MAN_HOUR
		     , ISNULL(B2.SUM_MAN_HOUR, 0)                                                        AS SUM_MAN_HOUR
		     , CASE WHEN ISNULL(A.${REF_CODE}, 0) = 0 THEN 0
		            ELSE ROUND(ISNULL(B2.SUM_MAN_HOUR, 0) / ISNULL(CONVERT(NUMERIC, A.${REF_CODE}), 1) * 100, 3) --소숫점 3자리까지 표시
		       END                                                                               AS RATIO_MAN_HOUR
		    -- , CASE WHEN B1.SUB_CODE = '20' THEN '노무비'
		    --        WHEN B1.SUB_CODE = '30' THEN '제조경비'
		    --        WHEN B1.SUB_CODE = '40' THEN '일반관리비'                                        --20210804 추가
		    --        ELSE ''
		    --   END                                                                               AS GUBUN
		     , B1.CODE_NAME                                                                              AS GUBUN
		  
		     , CASE WHEN B1.SUB_CODE = '40'  THEN 
		     			CASE WHEN ISNULL(B2.COMMON_COST, 0) = 0 THEN B1.${REF_CODE} ELSE ISNULL(B2.COMMON_COST, 0) END
		            WHEN B1.SUB_CODE = '51' AND C.MAT_TYPE = '01'	  THEN 
		     			CASE WHEN ISNULL(B2.MAT1_COST, 0) = 0 THEN B1.${REF_CODE} ELSE ISNULL(B2.MAT1_COST, 0) END
		            WHEN B1.SUB_CODE = '51' AND C.MAT_TYPE != '01'	  THEN 0
		            WHEN B1.SUB_CODE = '52' AND C.MAT_TYPE = '02'	  THEN 
		     			CASE WHEN ISNULL(B2.MAT2_COST, 0) = 0 THEN B1.${REF_CODE} ELSE ISNULL(B2.MAT2_COST, 0) END
		            WHEN B1.SUB_CODE = '52' AND C.MAT_TYPE != '02'	  THEN 0
		            
		            ELSE B1.${REF_CODE} * CASE WHEN ISNULL(A.${REF_CODE}, 0) = 0 THEN 0
		                                       ELSE ROUND(ISNULL(B2.SUM_MAN_HOUR, 0) / ISNULL(CONVERT(NUMERIC, A.${REF_CODE}), 1), 5)
		                                  END
		               / #{ESTI_QTY}
		       END                                                                               AS UNIT_P     --월평균금액 * 공수점유율 / 생산수량
		     , #{ESTI_QTY}                                                                       AS QTY
		     , CASE WHEN B1.SUB_CODE = '40'  THEN 
		     			CASE WHEN ISNULL(B2.COMMON_COST, 0) = 0 THEN ROUND(CONVERT(NUMERIC, B1.${REF_CODE}) * #{ESTI_QTY}, 5) ELSE  ROUND(CONVERT(NUMERIC, ISNULL(B2.COMMON_COST, 0)) * #{ESTI_QTY}, 5) END
                    WHEN B1.SUB_CODE = '51' AND C.MAT_TYPE = '01'	  THEN 
                    	CASE WHEN ISNULL(B2.MAT1_COST, 0) = 0 THEN ROUND(CONVERT(NUMERIC, B1.${REF_CODE}) * #{ESTI_QTY}, 5) ELSE  ROUND(CONVERT(NUMERIC, ISNULL(B2.MAT1_COST, 0)) * #{ESTI_QTY}, 5)  END 
                    WHEN B1.SUB_CODE = '51' AND C.MAT_TYPE != '01'	  THEN 0
                    WHEN B1.SUB_CODE = '52' AND C.MAT_TYPE = '02'	  THEN 
                    	CASE WHEN ISNULL(B2.MAT2_COST, 0) = 0 THEN ROUND(CONVERT(NUMERIC, B1.${REF_CODE}) * #{ESTI_QTY}, 5) ELSE ROUND(CONVERT(NUMERIC, ISNULL(B2.MAT2_COST, 0)) * #{ESTI_QTY}, 5) END 
                    WHEN B1.SUB_CODE = '52' AND C.MAT_TYPE != '02'	  THEN 0
                    
		            ELSE B1.${REF_CODE} * CASE WHEN ISNULL(A.${REF_CODE}, 0) = 0 THEN 0
		                                       ELSE ROUND(ISNULL(B2.SUM_MAN_HOUR, 0) / ISNULL(CONVERT(NUMERIC, A.${REF_CODE}), 1), 5)
		                                  END
		       END                                                                               AS PRICE      --단가 * 수량
		     , B1.${REF_CODE}                                                                    AS MONTH_AVG_AMT
		     , B1.SUB_CODE                                                                       AS FLAG       -- 구분
		  FROM      BSA100T A  WITH(NOLOCK)
		  LEFT JOIN BSA100T B1 WITH(NOLOCK) ON B1.COMP_CODE = A.COMP_CODE
		                                   AND B1.MAIN_CODE = A.MAIN_CODE
		                                   AND B1.SUB_CODE != '$'
		                                   AND B1.SUB_CODE != '10'
		  LEFT JOIN (
		             SELECT A.COMP_CODE
		                  , A.DIV_CODE
		                  , A.ESTI_NUM
		                  , SUM(A.MAN_HOUR) AS SUM_MAN_HOUR
		                  , MAX(A.COMMON_COST) AS COMMON_COST
		                  , MAX(A.MAT1_COST) AS MAT1_COST
		                  , MAX(A.MAT2_COST) AS MAT2_COST
		               FROM SEA200T A WITH(NOLOCK)
		              WHERE A.COMP_CODE = #{S_COMP_CODE}
		                AND A.DIV_CODE  = #{DIV_CODE}
		                AND A.ESTI_NUM  = #{ESTI_NUM}
		              GROUP BY A.COMP_CODE, A.DIV_CODE, A.ESTI_NUM) B2 ON B2.COMP_CODE = A.COMP_CODE
		                                                              AND B2.DIV_CODE  = #{DIV_CODE}
		                                                              AND B2.ESTI_NUM  = #{ESTI_NUM}
		LEFT JOIN SEA100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
										AND C.DIV_CODE = #{DIV_CODE}
										AND C.ESTI_NUM = #{ESTI_NUM}





		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.MAIN_CODE = 'SE05'
		   AND A.SUB_CODE  = '10'
	</select>





<!-- 저장 로직(master) -->
<!-- 01. data 저장 -->
	<insert id="sea200ukrvServiceImpl.insertDetail" parameterType="Map" useGeneratedKeys="false">
		/* sea200ukrvServiceImpl.insertList */
		INSERT INTO SEA200T (
		          COMP_CODE
		        , DIV_CODE
		        , ESTI_NUM
		        , OUT_DIV_CODE
		        , WORK_SHOP_CODE
		        , PROG_WORK_CODE
		        , WORK_TIME
		        , MAN_CNT
		        , PRODT_PRSN
		        , MONTH_MAN_COST
		        , MONTH_PROD_COST
		        , MONTH_MAN_HOUR
		        , COMMON_COST
		        , MAT1_COST        --20210909 추가
		        , MAT2_COST        --20210909 추가
		        , INSERT_DB_USER
		        , INSERT_DB_TIME
		        , UPDATE_DB_USER
		        , UPDATE_DB_TIME
		) 
		SELECT #{S_COMP_CODE}
		     , #{DIV_CODE}
		     , #{ESTI_NUM}
		     , #{OUT_DIV_CODE}
		     , #{WORK_SHOP_CODE}
		     , #{PROG_WORK_CODE}
		     , #{WORK_TIME}
		     , #{MAN_CNT}
		     , #{PRODT_PRSN}
		     , CASE WHEN #{OUT_DIV_CODE} = '01' THEN B.REF_CODE1
		            ELSE B.REF_CODE2
		       END                                               AS MONTH_MAN_COST
		     , CASE WHEN #{OUT_DIV_CODE} = '01' THEN C.REF_CODE1
		            ELSE C.REF_CODE2
		       END                                               AS MONTH_PROD_COST
		     , CASE WHEN #{OUT_DIV_CODE} = '01' THEN A.REF_CODE1
		            ELSE A.REF_CODE2
		       END                                               AS MONTH_MAN_HOUR
		     , CASE WHEN #{OUT_DIV_CODE} = '01' THEN D.REF_CODE1
		            ELSE D.REF_CODE2
		       END                                               AS COMMON_COST
		     , CASE WHEN #{OUT_DIV_CODE} = '01' THEN E.REF_CODE1
		            ELSE E.REF_CODE2
		       END                                               AS MAT1_COST        --20210909 추가
		     , CASE WHEN #{OUT_DIV_CODE} = '01' THEN F.REF_CODE1
		            ELSE F.REF_CODE2
		       END                                               AS MAT2_COST        --20210909 추가
		     , #{S_USER_ID}
		     , GETDATE()
		     , #{S_USER_ID}
		     , GETDATE()
		  FROM BSA100T A WITH(NOLOCK)
		  LEFT JOIN BSA100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
		                                  AND B.MAIN_CODE = A.MAIN_CODE
		                                  AND B.SUB_CODE  = '20'
		  LEFT JOIN BSA100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
		                                  AND C.MAIN_CODE = A.MAIN_CODE
		                                  AND C.SUB_CODE  = '30'
		  LEFT JOIN BSA100T D WITH(NOLOCK) ON D.COMP_CODE = A.COMP_CODE
		                                  AND D.MAIN_CODE = A.MAIN_CODE
		                                  AND D.SUB_CODE  = '40'
		  LEFT JOIN BSA100T E WITH(NOLOCK) ON E.COMP_CODE = A.COMP_CODE        --20210909 추가
		                                  AND E.MAIN_CODE = A.MAIN_CODE
		                                  AND E.SUB_CODE  = '51'
		  LEFT JOIN BSA100T F WITH(NOLOCK) ON F.COMP_CODE = A.COMP_CODE        --20210909 추가
		                                  AND F.MAIN_CODE = A.MAIN_CODE
		                                  AND F.SUB_CODE  = '52'
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.MAIN_CODE = 'SE05'
		   AND A.SUB_CODE  = '10'
	</insert>

	<update id="sea200ukrvServiceImpl.updateDetail" parameterType="Map">
		/* sea200ukrvServiceImpl.updateList */
		MERGE INTO SEA200T                              A
		USING ( SELECT #{S_COMP_CODE}     AS COMP_CODE
		             , #{DIV_CODE}        AS DIV_CODE
		             , #{ESTI_NUM}        AS ESTI_NUM
		             , #{OUT_DIV_CODE}    AS OUT_DIV_CODE
		             , #{WORK_SHOP_CODE}  AS WORK_SHOP_CODE
		             , #{PROG_WORK_CODE}  AS PROG_WORK_CODE
		      )                                         B   ON B.COMP_CODE      = A.COMP_CODE
		                                                   AND B.DIV_CODE       = A.DIV_CODE
		                                                   AND B.ESTI_NUM       = A.ESTI_NUM
		                                                   AND B.OUT_DIV_CODE   = A.OUT_DIV_CODE
		                                                   AND B.WORK_SHOP_CODE = A.WORK_SHOP_CODE
		                                                   AND B.PROG_WORK_CODE = A.PROG_WORK_CODE
		WHEN MATCHED THEN
		UPDATE 
		   SET OUT_DIV_CODE    = #{OUT_DIV_CODE}
		     , PRODT_PRSN      = #{PRODT_PRSN}
		     , WORK_TIME       = #{WORK_TIME}
		     , MAN_CNT         = #{MAN_CNT}
		     , UPDATE_DB_USER  = #{S_USER_ID}
		     , UPDATE_DB_TIME  = GETDATE()

		WHEN NOT MATCHED THEN
		INSERT (
		          COMP_CODE
		        , DIV_CODE
		        , ESTI_NUM
		        , OUT_DIV_CODE
		        , WORK_SHOP_CODE
		        , PROG_WORK_CODE
		        , WORK_TIME
		        , MAN_CNT
		        , PRODT_PRSN
		        --20210707 추가
		        , MONTH_MAN_COST
		        , MONTH_PROD_COST
		        , MONTH_MAN_HOUR
		        , COMMON_COST
		        , MAT1_COST        --20210909 추가
		        , MAT2_COST        --20210909 추가
		        , INSERT_DB_USER
		        , INSERT_DB_TIME
		        , UPDATE_DB_USER
		        , UPDATE_DB_TIME
		) VALUES (
		          #{S_COMP_CODE}
		        , #{DIV_CODE}
		        , #{ESTI_NUM}
		        , #{OUT_DIV_CODE}
		        , #{WORK_SHOP_CODE}
		        , #{PROG_WORK_CODE}
		        , #{WORK_TIME}
		        , #{MAN_CNT}
		        , #{PRODT_PRSN}
		        , (SELECT CASE WHEN #{OUT_DIV_CODE} = '01' THEN A.REF_CODE1
		                       ELSE A.REF_CODE2
		                  END
		             FROM BSA100T A WITH(NOLOCK)
		            WHERE A.COMP_CODE = #{S_COMP_CODE}
		              AND A.MAIN_CODE = 'SE05'
		              AND A.SUB_CODE  = '20')
		        , (SELECT CASE WHEN #{OUT_DIV_CODE} = '01' THEN A.REF_CODE1
		                       ELSE A.REF_CODE2
		                  END
		             FROM BSA100T A WITH(NOLOCK)
		            WHERE A.COMP_CODE = #{S_COMP_CODE}
		              AND A.MAIN_CODE = 'SE05'
		              AND A.SUB_CODE  = '30')
		        , (SELECT CASE WHEN #{OUT_DIV_CODE} = '01' THEN A.REF_CODE1
		                       ELSE A.REF_CODE2
		                  END
		             FROM BSA100T A WITH(NOLOCK)
		            WHERE A.COMP_CODE = #{S_COMP_CODE}
		              AND A.MAIN_CODE = 'SE05'
		              AND A.SUB_CODE  = '10')
		        , (SELECT CASE WHEN #{OUT_DIV_CODE} = '01' THEN A.REF_CODE1
		                       ELSE A.REF_CODE2
		                  END
		             FROM BSA100T A WITH(NOLOCK)
		            WHERE A.COMP_CODE = #{S_COMP_CODE}
		              AND A.MAIN_CODE = 'SE05'
		              AND A.SUB_CODE  = '40')
		        , (SELECT CASE WHEN #{OUT_DIV_CODE} = '01' THEN A.REF_CODE1
		                       ELSE A.REF_CODE2
		                  END
		             FROM BSA100T A WITH(NOLOCK)
		            WHERE A.COMP_CODE = #{S_COMP_CODE}
		              AND A.MAIN_CODE = 'SE05'
		              AND A.SUB_CODE  = '51')
		        , (SELECT CASE WHEN #{OUT_DIV_CODE} = '01' THEN A.REF_CODE1
		                       ELSE A.REF_CODE2
		                  END
		             FROM BSA100T A WITH(NOLOCK)
		            WHERE A.COMP_CODE = #{S_COMP_CODE}
		              AND A.MAIN_CODE = 'SE05'
		              AND A.SUB_CODE  = '52')
		        , #{S_USER_ID}
		        , GETDATE()
		        , #{S_USER_ID}
		        , GETDATE()
		);
	</update>

	<delete id="sea200ukrvServiceImpl.deleteDetail" parameterType="Map">
		/* sea200ukrvServiceImpl.deleteDetail */
		DELETE FROM SEA200T
		 WHERE COMP_CODE      = #{S_COMP_CODE}
		   AND DIV_CODE       = #{DIV_CODE}
		   AND ESTI_NUM       = #{ESTI_NUM}
		   AND OUT_DIV_CODE   = #{OUT_DIV_CODE}
		   AND WORK_SHOP_CODE = #{WORK_SHOP_CODE}
		   AND PROG_WORK_CODE = #{PROG_WORK_CODE}
	</delete>
	
	<!-- SEA100T 임가공비 저장 -->
	<update id="sea200ukrvServiceImpl.insertCost" parameterType="Map">
		/* sea200ukrvServiceImpl.insertCost, 20210818 수정: 마진율 저장로직 추가 */
		UPDATE A
		   SET A.MAN_COST        = #{MAN_COST}       -- 노무비
		     , A.PROD_EXPENSE    = #{PROD_EXPENSE}   -- 제조경비
		     , A.PROD_COST       = #{PROD_COST}      -- 임가공비(노무비 + 제조경비)
		     , A.BASE_MAN_RATE   = CASE WHEN #{ESTI_TYPE} = 'A' THEN B1.REF_CODE2
		                                ELSE B1.REF_CODE3
		                           END
		     , A.SPEC_MAN_RATE   = CASE WHEN #{ESTI_TYPE} = 'A' THEN B2.REF_CODE2
		                                ELSE B2.REF_CODE3
		                           END
		     , A.BASE_SALE_RATE  = CASE WHEN #{ESTI_TYPE} = 'A' THEN B3.REF_CODE2
		                                ELSE B3.REF_CODE3
		                           END
		     , A.SPEC_SALE_RATE  = CASE WHEN #{ESTI_TYPE} = 'A' THEN B4.REF_CODE2
		                                ELSE B4.REF_CODE3
		                           END
		     , A.BASE_RES_RATE   = CASE WHEN #{ESTI_TYPE} = 'A' THEN B5.REF_CODE2
		                                ELSE B5.REF_CODE3
		                           END
		     , A.SPEC_RES_RATE   = CASE WHEN #{ESTI_TYPE} = 'A' THEN B6.REF_CODE2
		                                ELSE B6.REF_CODE3
		                           END
		     , A.UPDATE_DB_USER  = #{S_USER_ID}
		     , A.UPDATE_DB_TIME  = GETDATE()
		  FROM      SEA100T A  WITH(NOLOCK)
		  LEFT JOIN BSA100T B1 WITH(NOLOCK) ON B1.COMP_CODE = A.COMP_CODE
		                                   AND B1.MAIN_CODE = 'SE02'
		                                   AND B1.SUB_CODE  = 'B20'       --임가공비 기본가
		  LEFT JOIN BSA100T B2 WITH(NOLOCK) ON B2.COMP_CODE = A.COMP_CODE
		                                   AND B2.MAIN_CODE = 'SE02'
		                                   AND B2.SUB_CODE  = 'S20'       --임가공비 기획가
		  LEFT JOIN BSA100T B3 WITH(NOLOCK) ON B3.COMP_CODE = A.COMP_CODE
		                                   AND B3.MAIN_CODE = 'SE02'
		                                   AND B3.SUB_CODE  = 'B30'       --영업이익 기본가
		  LEFT JOIN BSA100T B4 WITH(NOLOCK) ON B4.COMP_CODE = A.COMP_CODE
		                                   AND B4.MAIN_CODE = 'SE02'
		                                   AND B4.SUB_CODE  = 'S30'       --영업이익 기획가
		  LEFT JOIN BSA100T B5 WITH(NOLOCK) ON B5.COMP_CODE = A.COMP_CODE
		                                   AND B5.MAIN_CODE = 'SE02'
		                                   AND B5.SUB_CODE  = 'B40'       --연구개발비 기본가
		  LEFT JOIN BSA100T B6 WITH(NOLOCK) ON B6.COMP_CODE = A.COMP_CODE
		                                   AND B6.MAIN_CODE = 'SE02'
		                                   AND B6.SUB_CODE  = 'S40'       --연구개발비 기획가
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND A.DIV_CODE  = #{DIV_CODE}
		   AND A.ESTI_NUM  = #{ESTI_NUM}
	</update>
</mapper>