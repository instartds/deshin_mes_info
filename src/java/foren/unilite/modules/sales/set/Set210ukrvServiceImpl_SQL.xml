<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="set210ukrvServiceImpl">
	
	<select id="set210ukrvServiceImpl.selectWorkNoMaster" parameterType="Map" resultType="rMap">
	--set210ukrv.Cset210ukrv[fnSet210QPop] Query01
	DECLARE    @COMP_CODE                  NVARCHAR(08)             -- (필수) 법인코드
	         , @DIV_CODE                   NVARCHAR(08)             -- (필수) 사업장코드
	         , @INOUT_NUM                  NVARCHAR(20)             -- (선택) 제작번호
	         , @ITEM_CODE                  NVARCHAR(20)             -- (선택) 품목코드
	         , @ITEM_NAME                  NVARCHAR(200)            -- (선택) 품목명
	         , @WH_CODE                    NVARCHAR(20)             -- (선택) 창고
	         , @WH_CELL_CODE               NVARCHAR(20)             -- (선택) CELL창고
	         , @FR_DATE                    NVARCHAR(08)             -- (선택) 요청일자(FROM)
	         , @TO_DATE                    NVARCHAR(08)             -- (선택) 요청일자(TO)
	
	SET @COMP_CODE    = #{S_COMP_CODE}
	SET @DIV_CODE     = #{DIV_CODE}
	SET @INOUT_NUM    = #{WORK_NUM}
	SET @ITEM_CODE    = #{ITEM_CODE}
	SET @WH_CODE      = #{WH_CODE}
	SET @WH_CELL_CODE = #{WH_CELL_CODE}
	SET @FR_DATE      = #{CREATE_DATE_FR}
	SET @TO_DATE      = #{CREATE_DATE_TO}
	
	SELECT A.DIV_CODE
	     , A.INOUT_NUM
	     , A.INOUT_SEQ
	     , A.INOUT_TYPE
	     , A.ITEM_CODE
	     , B.ITEM_NAME
	     , A.WH_CODE
	     , C.TREE_NAME AS WH_NAME
	     , A.WH_CELL_CODE
	     , D.WH_CELL_NAME
	     , uniLITE.fnGetUserDate(A.COMP_CODE, A.INOUT_DATE) AS INOUT_DATE
	     , ISNULL(A.INOUT_Q, 0) AS INOUT_Q
	     , A.PERSONS_NUM
	     , A.WORK_TIME
	     , A.GONG_SU
	     , A.MAKER_TYPE
	     , A.LOT_NO
	     , A.WORK_SHOP_CODE
	     , A.REMARK
	     , A.INOUT_P
	     , A.INOUT_I
	     , A.INOUT_PRSN
	  FROM            BTR100T AS A WITH(NOLOCK)
	       INNER JOIN BPR100T AS B WITH(NOLOCK) ON B.COMP_CODE    = A.COMP_CODE
	                                           AND B.ITEM_CODE    = A.ITEM_CODE
	       INNER JOIN BSA220T AS C WITH(NOLOCK) ON C.COMP_CODE    = A.COMP_CODE
	                                           AND C.TREE_CODE    = A.WH_CODE
	       INNER  JOIN BSA225T AS D WITH(NOLOCK) ON D.COMP_CODE    = A.COMP_CODE
	                                           AND D.DIV_CODE     = A.DIV_CODE
	                                           AND D.WH_CODE      = A.WH_CODE
	                                           AND D.WH_CELL_CODE = A.WH_CELL_CODE
	       LEFT  JOIN SET100T AS E WITH(NOLOCK) ON E.COMP_CODE       = A.COMP_CODE
	                                           AND E.DIV_CODE        = A.DIV_CODE
	                                           AND E.SET_ITEM_CODE   = A.ITEM_CODE  
	                                           AND E.CONST_ITEM_CODE = '$'    
	 WHERE A.COMP_CODE          = @COMP_CODE
	   AND A.INOUT_METH         = '2'
	   AND A.INOUT_TYPE_DETAIL  = '98'
	   AND A.CREATE_LOC         = '1'
	   AND A.INOUT_CODE_TYPE    = '*'
	   <if test="gsGubun == &quot;1&quot;">
	   AND A.INOUT_TYPE         = '1'
	   AND A.SET_TYPE           = '1'
	   </if>
	   <if test="gsGubun == &quot;2&quot;">
	   AND A.INOUT_TYPE         = '2'
	   AND A.SET_TYPE           = '2'
	   </if>
	   AND ((A.DIV_CODE        = @DIV_CODE     AND @DIV_CODE     != '') OR (@DIV_CODE     = ''))
	   AND ((A.INOUT_NUM       = @INOUT_NUM    AND @INOUT_NUM    != '') OR (@INOUT_NUM    = ''))
	   AND ((A.WH_CODE         = @WH_CODE      AND @WH_CODE      != '') OR (@WH_CODE      = ''))
	   AND ((A.WH_CELL_CODE    = @WH_CELL_CODE AND @WH_CELL_CODE != '') OR (@WH_CELL_CODE = ''))
	   AND ((A.INOUT_DATE  &gt;= @FR_DATE      AND @FR_DATE      != '') OR (@FR_DATE      = ''))
	   AND ((A.INOUT_DATE  &lt;= @TO_DATE      AND @TO_DATE      != '') OR (@TO_DATE      = ''))
	   
	<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
	   AND A.ITEM_CODE 		= @ITEM_CODE						/* 품목코드  */
	</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
	   AND A.ITEM_CODE 		LIKE @ITEM_CODE + '%'				/* 품목코드  */
	</if>
	<if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
	   AND B.ITEM_NAME 		LIKE '%' + #{ITEM_NAME} + '%'		/* 품목명  */
	</if>
	   
	 ORDER BY A.INOUT_DATE, A.INOUT_NUM, A.INOUT_SEQ, A.INOUT_TYPE
	</select>
	
	<select id="set210ukrvServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
		--set210ukrv.Cset210ukrv[fnSet210QStd3] Query01
	    SELECT A.INOUT_NUM                               
	         , A.INOUT_SEQ                                        
	         , A.ITEM_CODE           
	         , B.ITEM_NAME                               
	         , B.SPEC                                    
	         , B.STOCK_UNIT                              
	         , ISNULL(C.CONST_Q, 1) AS CONST_Q           
	         , (CASE ISNULL(A.INOUT_NUM,'')              
	                 WHEN ''                             
	                      THEN D.WH_CODE                 
	                      ELSE A.WH_CODE END)    AS WH_CODE 
	         , (CASE ISNULL(A.INOUT_NUM,'')                 
	                 WHEN ''                                
	                      THEN C3.TREE_NAME                 
	                      ELSE C2.TREE_NAME END) AS WH_NAME 
	         , A.WH_CELL_CODE
	         , C4.WH_CELL_NAME
	         , A.LOT_NO
	         , A.INOUT_Q
			 
	    <if test="gsSumTypeCell == &quot;Y&quot;">
	             , ISNULL((SELECT SUM(GOOD_STOCK_Q)                                 
	                         FROM BIV100T                                           
	                        WHERE ITEM_CODE = C.CONST_ITEM_CODE                     
	                          AND DIV_CODE  = C.DIV_CODE                            
	                          AND COMP_CODE = C.COMP_CODE                           
	                          AND WH_CODE   = (CASE ISNULL(INOUT_NUM,'')            
	                                                WHEN ''                         
	                                                     THEN D.WH_CODE             
	                                                     ELSE A.WH_CODE END)), 0) AS CURRENT_STOCK
	    </if>
	    <if test="gsSumTypeCell != &quot;Y&quot;">
	             , ISNULL((SELECT SUM(GOOD_STOCK_Q)                                 
	                         FROM BIV150T                                           
	                        WHERE ITEM_CODE = C.CONST_ITEM_CODE                     
	                          AND DIV_CODE  = C.DIV_CODE                            
	                          AND COMP_CODE = C.COMP_CODE                           
	                          AND LOT_NO    = A.LOT_NO                              
	                          AND SUM_TYPE  = 'D'
	                          AND WH_CODE   = (CASE ISNULL(INOUT_NUM,'')            
	                                                WHEN ''                         
	                                                     THEN D.WH_CODE             
	                                                     ELSE A.WH_CODE END)
	                          AND WH_CELL_CODE = (CASE ISNULL(INOUT_NUM,'')         
	                                                    WHEN ''                     
	                                                        THEN C5.REF_CODE3
	                                                        ELSE A.WH_CELL_CODE END)), 0) AS CURRENT_STOCK
	   </if>
	         , A.DIV_CODE                                                           
	         , A.INOUT_CODE                                                         
	         , A.INOUT_DATE                                                         
	         , A.ITEM_STATUS                                                        
	         , A.INOUT_TYPE                                                         
	         , A.INOUT_METH                                                         
	         , A.INOUT_TYPE_DETAIL                                                  
	         , A.INOUT_CODE_TYPE                                                    
	         , A.INOUT_P
	         , A.INOUT_I                                                            
	         , A.MONEY_UNIT                                                         
	         , A.INOUT_FOR_P                                                        
	         , A.INOUT_FOR_O                                                        
	         , A.EXCHG_RATE_O                                                       
	         , A.ORDER_UNIT                                                         
	         , A.TRNS_RATE                                                          
	         , A.ORDER_UNIT_Q                                                       
	         , A.ORDER_UNIT_P                                                       
	         , A.ORDER_UNIT_O                                                       
	         , A.ORDER_UNIT_FOR_P                                                   
	         , A.CREATE_LOC                                                         
	         , A.SALE_C_YN                                                          
	         , A.SALE_DIV_CODE                                                      
	         , A.SALE_CUSTOM_CODE                                                   
	         , A.BILL_TYPE                                                          
	         , A.SALE_TYPE                                                          
	         , A.UPDATE_DB_USER                                                     
	         , A.UPDATE_DB_TIME                                                     
	         , A.COMP_CODE                                                          
	         , A.PERSONS_NUM
	         , A.WORK_TIME
	         , A.GONG_SU
	         , A.MAKER_TYPE
	         , A.SET_TYPE
	         , A.WORK_SHOP_CODE
	         , A.REMARK
	         , A.INOUT_Q      AS OLD_INOUT_Q
	         , A.INOUT_PRSN
	      FROM            BTR100T AS A  WITH(NOLOCK)
	           LEFT  JOIN SET100T AS C  WITH(NOLOCK) ON C.COMP_CODE         = A.COMP_CODE
	                                                AND C.DIV_CODE          = A.DIV_CODE
	                                                AND C.CONST_ITEM_CODE   = A.ITEM_CODE
	                                                AND C.CONST_ITEM_CODE != '$'
	                                                AND C.SET_ITEM_CODE    = #{ITEM_CODE}
	           LEFT  JOIN BPR100T AS B  WITH(NOLOCK) ON B.COMP_CODE         = A.COMP_CODE
	                                                AND B.ITEM_CODE         = A.ITEM_CODE
	           LEFT  JOIN BPR200T AS D  WITH(NOLOCK) ON D.COMP_CODE         = A.COMP_CODE
	                                                AND D.DIV_CODE          = A.DIV_CODE
	                                                AND D.ITEM_CODE         = A.ITEM_CODE
	           LEFT  JOIN BIV100T AS E  WITH(NOLOCK) ON E.COMP_CODE         = A.COMP_CODE
	                                                AND E.DIV_CODE          = A.DIV_CODE
	                                                AND E.ITEM_CODE         = A.ITEM_CODE
	                                                AND E.WH_CODE           = ISNULL(A.WH_CODE, #{WH_CODE})
	    <if test="gsSumTypeCell == &quot;Y&quot;">
	               LEFT  JOIN BIV150T AS F  WITH(NOLOCK) ON F.COMP_CODE         = A.COMP_CODE
	                                                    AND F.DIV_CODE          = A.DIV_CODE            
	                                                    AND F.ITEM_CODE         = A.ITEM_CODE     
	                                                    AND F.WH_CODE           = ISNULL(D.WH_CODE, #{WH_CODE})
	                                                    AND F.WH_CELL_CODE      = ISNULL(A.WH_CELL_CODE, #{WH_CELL_CODE})
	                                                    AND F.SUM_TYPE          = 'D'
	                                                    AND F.LOT_NO            = A.LOT_NO
	    </if>
	           LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE        = A.COMP_CODE
	                                              AND C2.TYPE_LEVEL       = A.DIV_CODE
	                                              AND C2.TREE_CODE        = A.WH_CODE
	           LEFT  JOIN BSA220T C3 WITH (NOLOCK) ON C3.COMP_CODE        = D.COMP_CODE
	                                              AND C3.TYPE_LEVEL       = D.DIV_CODE
	                                              AND C3.TREE_CODE        = D.WH_CODE
	           LEFT  JOIN BSA225T C4 WITH (NOLOCK) ON C4.COMP_CODE        = A.COMP_CODE
	                                              AND C4.DIV_CODE         = A.DIV_CODE
	                                              AND C4.WH_CODE          = A.WH_CODE
	                                              AND C4.WH_CELL_CODE     = A.WH_CELL_CODE
	           LEFT  JOIN BSA100T C5 WITH (NOLOCK) ON C5.COMP_CODE        = A.COMP_CODE
	                                              AND C5.MAIN_CODE        = 'B095'
	                                              AND C5.SUB_CODE         = 'SC'
	     WHERE A.COMP_CODE         = #{S_COMP_CODE}
	       AND A.DIV_CODE          = #{DIV_CODE}
	       AND A.INOUT_TYPE_DETAIL = '98'
	       AND A.INOUT_TYPE        = '2'
	       AND A.INOUT_NUM         = #{WORK_NUM}
	     ORDER BY A.INOUT_NUM, A.INOUT_SEQ, C.CONST_ITEM_CODE
    </select>	
	
	<select id="set210ukrvServiceImpl.selectMaster2" parameterType="Map" resultType="rMap">
    --set210ukrv.Cset210ukrv[fnSet210QStd4] Query01
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
    SELECT A.INOUT_NUM                              
         , A.INOUT_SEQ                              
         , A.ITEM_CODE AS ITEM_CODE           
         , B.ITEM_NAME                              
         , B.SPEC                                   
         , B.STOCK_UNIT                             
         , ISNULL(C.CONST_Q, 1) AS CONST_Q          
         , A.WH_CODE    AS WH_CODE
         , C2.TREE_NAME AS WH_NAME
         , A.WH_CELL_CODE
         , C4.WH_CELL_NAME
         , A.LOT_NO                                 
         , A.INOUT_Q AS INOUT_Q              
         , A.DIV_CODE                               
         , A.INOUT_CODE                             
         , A.INOUT_DATE                             
         , A.ITEM_STATUS                            
         , A.INOUT_TYPE                             
         , A.INOUT_METH                             
         , A.INOUT_TYPE_DETAIL                      
         , A.INOUT_CODE_TYPE                        
          , ISNULL(
                 (SELECT TOP 1 AVERAGE_P
                 FROM BIV100T E
                 Where E.COMP_CODE = C.COMP_CODE
                     AND E.DIV_CODE          = C.DIV_CODE
                     AND E.ITEM_CODE         = C.CONST_ITEM_CODE
                     AND E.AVERAGE_P != 0 )
                 , 0) AS INOUT_P
         , A.INOUT_I                                
         , A.MONEY_UNIT                             
         , A.INOUT_FOR_P                            
         , A.INOUT_FOR_O                            
         , A.EXCHG_RATE_O                           
         , A.ORDER_UNIT                             
         , A.TRNS_RATE                              
         , A.ORDER_UNIT_Q AS ORDER_UNIT_Q    
         , A.ORDER_UNIT_P                           
         , A.ORDER_UNIT_O                           
         , A.ORDER_UNIT_FOR_P                       
         , A.CREATE_LOC                             
         , A.SALE_C_YN                              
         , A.SALE_DIV_CODE                          
         , A.SALE_CUSTOM_CODE                       
         , A.BILL_TYPE                              
         , A.SALE_TYPE                              
         , A.UPDATE_DB_USER                         
         , A.UPDATE_DB_TIME                         
         , A.COMP_CODE                              
         , A.PERSONS_NUM
         , A.WORK_TIME
         , A.GONG_SU
         , A.MAKER_TYPE
         , A.SET_TYPE
         , A.WORK_SHOP_CODE
         , A.REMARK
         , A.INOUT_Q AS OLD_INOUT_Q              
         , A.INOUT_PRSN
      FROM            BTR100T AS A  WITH(NOLOCK)
           LEFT  JOIN SET100T AS C  WITH(NOLOCK) ON C.COMP_CODE         = A.COMP_CODE
                                                AND C.DIV_CODE          = A.DIV_CODE
                                                AND C.CONST_ITEM_CODE   = A.ITEM_CODE
                                                AND C.CONST_ITEM_CODE != '$'
                                                AND C.SET_ITEM_CODE    = #{ITEM_CODE}
           LEFT  JOIN BPR100T AS B  WITH(NOLOCK) ON B.COMP_CODE         = A.COMP_CODE
                                                AND B.ITEM_CODE         = A.ITEM_CODE
           LEFT  JOIN BPR200T AS D  WITH(NOLOCK) ON D.COMP_CODE         = A.COMP_CODE
                                                AND D.DIV_CODE          = A.DIV_CODE
                                                AND D.ITEM_CODE         = A.ITEM_CODE
    
    <if test="gsSumTypeCell == &quot;Y&quot;">
               LEFT  JOIN BIV150T AS F  WITH(NOLOCK) ON F.COMP_CODE     = A.COMP_CODE
                                                    AND F.DIV_CODE      = A.DIV_CODE            
                                                    AND F.ITEM_CODE     = A.ITEM_CODE     
                                                    AND F.WH_CODE       = ISNULL(D.WH_CODE, #{WH_CODE})
                                                    AND F.WH_CELL_CODE  = ISNULL(A.WH_CELL_CODE, #{WH_CELL_CODE})
                                                    AND F.SUM_TYPE      = 'D'
                                                    AND F.LOT_NO        = A.LOT_NO
    </if>
    
           LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE          = A.COMP_CODE
                                              AND C2.TYPE_LEVEL         = A.DIV_CODE
                                              AND C2.TREE_CODE          = A.WH_CODE
           LEFT  JOIN BSA220T C3 WITH (NOLOCK) ON C3.COMP_CODE          = D.COMP_CODE
                                              AND C3.TYPE_LEVEL         = D.DIV_CODE
                                              AND C3.TREE_CODE          = ISNULL(D.WH_CODE, #{WH_CODE})
           LEFT  JOIN BSA225T C4 WITH (NOLOCK) ON C4.COMP_CODE          = A.COMP_CODE
                                              AND C4.DIV_CODE           = A.DIV_CODE
                                              AND C4.WH_CODE            = A.WH_CODE
                                              AND C4.WH_CELL_CODE       = A.WH_CELL_CODE
           LEFT  JOIN BSA100T C5 WITH (NOLOCK) ON C5.COMP_CODE          = A.COMP_CODE
                                              AND C5.MAIN_CODE          = 'B095'
                                              AND C5.SUB_CODE           = 'SC'
     WHERE A.COMP_CODE        =  #{S_COMP_CODE}
       AND A.DIV_CODE         =  #{DIV_CODE}
       AND A.INOUT_TYPE_DETAIL = '98'
       AND A.INOUT_TYPE        = '1'
       AND A.INOUT_NUM         = #{WORK_NUM}
     ORDER BY A.INOUT_NUM, A.INOUT_SEQ, C.CONST_ITEM_CODE
    </select>
    
	<select id="set210ukrvServiceImpl.selectAverageP" parameterType="Map" resultType="rMap">
	    BEGIN
	        SET NOCOUNT ON
			SET ARITHABORT ON
			
			DECLARE @BASIS_YYYYMM    NVARCHAR(08)
			
			SET @BASIS_YYYYMM = #{BASIS_YYYYMM}
			SET @BASIS_YYYYMM = LEFT(@BASIS_YYYYMM, 6)
			
			IF EXISTS(SELECT TOP 1 1
			            FROM BIV200T WITH (NOLOCK)
			           WHERE COMP_CODE    = #{S_COMP_CODE}
			             AND DIV_CODE     = #{DIV_CODE} 
			             AND WH_CODE      = #{WH_CODE} 
			             AND ITEM_CODE    = #{ITEM_CODE} 
			             AND BASIS_YYYYMM = @BASIS_YYYYMM)
			    BEGIN
			          SELECT ISNULL(AVERAGE_P, 0) AS AVERAGE_P
			            FROM BIV200T WITH (NOLOCK)
			           WHERE COMP_CODE    = #{S_COMP_CODE}
			             AND DIV_CODE     = #{DIV_CODE} 
			             AND WH_CODE      = #{WH_CODE} 
			             AND ITEM_CODE    = #{ITEM_CODE} 
			             AND BASIS_YYYYMM = @BASIS_YYYYMM
			    END
			ELSE
			   BEGIN
			        SELECT MAX(ISNULL(AVERAGE_P, 0)) AS AVERAGE_P
			          FROM BIV100T WITH (NOLOCK)
			         WHERE COMP_CODE    = #{S_COMP_CODE}
			           AND DIV_CODE     = #{DIV_CODE} 
			           AND WH_CODE      = #{WH_CODE} 
			           AND ITEM_CODE    = #{ITEM_CODE} 
			   END

	        SET NOCOUNT OFF
		    SET ARITHABORT OFF
	    END
	</select>
    
    <select id="set210ukrvServiceImpl.selectComponseGen2" parameterType="Map" resultType="rMap">
	--set210ukrv.Cset210ukrv[fnSet210QSt2] Query01
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED                
    SELECT A.INOUT_NUM                                                 
         , A.INOUT_SEQ                                              
         , C.CONST_ITEM_CODE AS ITEM_CODE        
         , B.ITEM_NAME                                              
         , B.SPEC                                                       
         , B.STOCK_UNIT                                            
         , C.CONST_Q                                                 
         , D.WH_CODE    AS WH_CODE
         , C3.TREE_NAME AS WH_NAME
         , A.WH_CELL_CODE
         , C4.WH_CELL_NAME
         , A.LOT_NO                                                   
         , A.INOUT_Q * (-1) AS INOUT_Q                   
         , A.DIV_CODE                                                
         , A.INOUT_CODE                                           
         , A.INOUT_DATE                                            
         , A.ITEM_STATUS                                          
         , A.INOUT_TYPE                                            
         , A.INOUT_METH                                           
         , A.INOUT_TYPE_DETAIL                               
         , A.INOUT_CODE_TYPE                                 
         , ISNULL(
                (SELECT TOP 1 E.AVERAGE_P
                FROM BIV100T E
                Where E.COMP_CODE = C.COMP_CODE
                    AND E.DIV_CODE          = C.DIV_CODE
                    AND E.ITEM_CODE         = C.CONST_ITEM_CODE
                    AND E.AVERAGE_P != 0 )
                , 0) AS INOUT_P
         , A.INOUT_I                                                      
         , A.MONEY_UNIT                                              
         , A.INOUT_FOR_P                                            
         , A.INOUT_FOR_O                                            
         , A.EXCHG_RATE_O                                         
         , A.ORDER_UNIT                                              
         , A.TRNS_RATE                                               
         , A.ORDER_UNIT_Q  * (-1) AS ORDER_UNIT_Q 
         , A.ORDER_UNIT_P                                          
         , A.ORDER_UNIT_O                                          
         , A.ORDER_UNIT_FOR_P                                  
         , A.CREATE_LOC                                             
         , A.SALE_C_YN                                                
         , A.SALE_DIV_CODE                                         
         , A.SALE_CUSTOM_CODE                                
         , A.BILL_TYPE                                                  
         , A.SALE_TYPE                                                
         , A.UPDATE_DB_USER                                     
         , A.UPDATE_DB_TIME                                      
         , A.COMP_CODE                                              
         , A.PERSONS_NUM
         , A.WORK_TIME
         , A.GONG_SU
         , A.MAKER_TYPE
         , A.SET_TYPE
         , A.WORK_SHOP_CODE
         , A.REMARK
         , A.INOUT_Q * (-1) AS OLD_INOUT_Q                                
         , A.INOUT_PRSN
      FROM BTR100T A                                                      
                   RIGHT OUTER JOIN SET100T C                             
                                 ON A.COMP_CODE         = C.COMP_CODE      
                                AND A.ITEM_CODE         = C.CONST_ITEM_CODE
                                AND A.INOUT_TYPE_DETAIL = '98'             
                                AND A.INOUT_TYPE        = '2'              

    <if test="@foren.Ognl@isNotEmpty(WORK_NUM)">
                                 AND A.INOUT_NUM = #{WORK_NUM}
    </if>
    
                         INNER JOIN BPR100T B                                   
                                 ON B.COMP_CODE         = C.COMP_CODE           
                                AND B.ITEM_CODE         = C.CONST_ITEM_CODE     
                         INNER JOIN BPR200T D                                   
                                 ON D.COMP_CODE         = C.COMP_CODE           
                                AND D.DIV_CODE          = C.DIV_CODE            
                                AND D.ITEM_CODE         = C.CONST_ITEM_CODE     
    
	<if test='gsSumTypeCell == &quot;Y&quot;'>
                             LEFT  JOIN BIV150T F                                   
                                     ON F.COMP_CODE         = C.COMP_CODE           
                                    AND F.DIV_CODE          = C.DIV_CODE            
                                    AND F.ITEM_CODE         = C.CONST_ITEM_CODE     
                                    AND F.WH_CODE           = ISNULL(D.WH_CODE, #{WH_CODE})
                                    AND F.WH_CELL_CODE      = ISNULL(A.WH_CELL_CODE, #{WH_CELL_CODE})
                                    AND F.SUM_TYPE          = 'D'
                                    AND F.LOT_NO            = A.LOT_NO
    </if>
           LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                              AND C2.TYPE_LEVEL   = A.DIV_CODE
                                              AND C2.TREE_CODE    = A.WH_CODE
           LEFT  JOIN BSA220T C3 WITH (NOLOCK) ON C3.COMP_CODE    = D.COMP_CODE
                                              AND C3.TYPE_LEVEL   = D.DIV_CODE
                                              AND C3.TREE_CODE    = D.WH_CODE
           LEFT  JOIN BSA225T C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
                                              AND C4.DIV_CODE     = A.DIV_CODE
                                              AND C4.WH_CODE      = A.WH_CODE
                                              AND C4.WH_CELL_CODE = A.WH_CELL_CODE
           LEFT  JOIN BSA100T C5 WITH (NOLOCK) ON C5.COMP_CODE    = A.COMP_CODE
                                              AND C5.MAIN_CODE    = 'B095'
                                              AND C5.SUB_CODE     = 'SC'
    
     WHERE C.COMP_CODE        = #{S_COMP_CODE}                   
       AND C.DIV_CODE         = #{DIV_CODE}                 
       AND C.CONST_ITEM_CODE != '$'                                   
       AND C.SET_ITEM_CODE    = #{ITEM_CODE}               
     ORDER BY A.INOUT_NUM, A.INOUT_SEQ, C.CONST_ITEM_CODE 
    </select>	
    
    <select id="set210ukrvServiceImpl.selectComponseGen1" parameterType="Map" resultType="rMap">
    --set210ukrv.Cset210ukrv[fnSet210QSt1] Query01
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
    SELECT A.INOUT_NUM                        
         , A.INOUT_SEQ                        
         , C.CONST_ITEM_CODE AS ITEM_CODE     
         , B.ITEM_NAME                        
         , B.SPEC                             
         , B.STOCK_UNIT                       
         , C.CONST_Q                          
    
    <if test="gsQueryType == &quot;1&quot;">
             , ISNULL(D.WH_CODE, #{WH_CODE}) AS WH_CODE       
             , ISNULL(C3.TREE_NAME, N'')               AS WH_NAME       
    </if>
    <if test="gsQueryType != &quot;1&quot;">
             , (CASE ISNULL(A.INOUT_NUM,'')       
                     WHEN ''                      
                          THEN ISNULL(D.WH_CODE, #{WH_CODE})  
                          ELSE A.WH_CODE END) AS WH_CODE 
             , (CASE ISNULL(A.INOUT_NUM,'')       
                     WHEN ''                      
                          THEN ISNULL(C3.TREE_NAME, N'')          
                          ELSE ISNULL(C2.TREE_NAME, N'') END) AS WH_NAME 
    </if>
    
         , A.WH_CELL_CODE
         , C4.WH_CELL_NAME
         , A.LOT_NO                                                      
         , A.INOUT_Q 
    <if test="gsSumTypeCell != &quot;Y&quot;">
        <if test="gsQueryType == &quot;1&quot;">
                 , ISNULL((SELECT  SUM(GOOD_STOCK_Q)                            
                             FROM BIV100T                                      
                            WHERE ITEM_CODE = C.CONST_ITEM_CODE                
                              AND DIV_CODE  = C.DIV_CODE                       
                              AND COMP_CODE = C.COMP_CODE                      
                              AND WH_CODE   = ISNULL(D.WH_CODE, #{WH_CODE})), 0) AS CURRENT_STOCK
        </if>
        <if test="gsQueryType != &quot;1&quot;">
                 , ISNULL((SELECT  SUM(GOOD_STOCK_Q)                          
                             FROM BIV100T                                    
                            WHERE ITEM_CODE = C.CONST_ITEM_CODE              
                              AND DIV_CODE  = C.DIV_CODE                     
                              AND COMP_CODE = C.COMP_CODE                    
                              AND WH_CODE   = (CASE ISNULL(INOUT_NUM,'')     
                                                    WHEN ''                  
                                                         THEN D.WH_CODE      
                                                         ELSE A.WH_CODE END)), 0) AS CURRENT_STOCK
        </if>
    </if>
    <if test="gsSumTypeCell == &quot;Y&quot;">
        <if test="gsQueryType == &quot;1&quot;">
                 , ISNULL((SELECT  SUM(GOOD_STOCK_Q)                            
                             FROM BIV150T                                      
                            WHERE ITEM_CODE = C.CONST_ITEM_CODE                
                              AND DIV_CODE  = C.DIV_CODE                       
                              AND COMP_CODE = C.COMP_CODE                      
                              AND LOT_NO    = A.LOT_NO                         
                              AND WH_CODE   = ISNULL(D.WH_CODE, #{WH_CODE})
                              AND SUM_TYPE  = 'D'
                              AND WH_CELL_CODE   = ISNULL(A.WH_CELL_CODE, #{WH_CELL_CODE})), 0) AS CURRENT_STOCK
        </if>
        <if test="gsQueryType != &quot;1&quot;">
                 , ISNULL((SELECT  SUM(GOOD_STOCK_Q)                          
                             FROM BIV150T                                    
                            WHERE ITEM_CODE = C.CONST_ITEM_CODE              
                              AND DIV_CODE  = C.DIV_CODE                     
                              AND COMP_CODE = C.COMP_CODE                    
                              AND LOT_NO    = A.LOT_NO                       
                              AND SUM_TYPE  = 'D'
                              AND WH_CODE   = (CASE ISNULL(INOUT_NUM,'')     
                                                    WHEN ''                  
                                                         THEN D.WH_CODE      
                                                         ELSE A.WH_CODE END)
                              AND WH_CELL_CODE = (CASE ISNULL(INOUT_NUM,'')     
                                                        WHEN ''                  
                                                            THEN C5.REF_CODE3
                                                            ELSE A.WH_CELL_CODE END)), 0) AS CURRENT_STOCK
        </if>
    </if>
    
         , A.DIV_CODE                                                    
         , A.INOUT_CODE                                                  
         , A.INOUT_DATE                                                  
         , A.ITEM_STATUS                                                 
         , A.INOUT_TYPE                                                  
         , A.INOUT_METH                                                  
         , A.INOUT_TYPE_DETAIL                                           
         , A.INOUT_CODE_TYPE                                             
          , ISNULL(
                 (SELECT TOP 1 E.AVERAGE_P
                 FROM BIV100T E
                 Where E.COMP_CODE = C.COMP_CODE
                     AND E.DIV_CODE          = C.DIV_CODE
                     AND E.ITEM_CODE         = C.CONST_ITEM_CODE
                     AND E.AVERAGE_P != 0 )
                 , 0) AS INOUT_P
         , A.INOUT_I                                                     
         , A.MONEY_UNIT                                                  
         , A.INOUT_FOR_P                                                 
         , A.INOUT_FOR_O                                                 
         , A.EXCHG_RATE_O                                                
         , A.ORDER_UNIT                                                  
         , A.TRNS_RATE                                                   
         , A.ORDER_UNIT_Q                                                
         , A.ORDER_UNIT_P                                                
         , A.ORDER_UNIT_O                                                
         , A.ORDER_UNIT_FOR_P                                            
         , A.CREATE_LOC                                                  
         , A.SALE_C_YN                                                   
         , A.SALE_DIV_CODE                                               
         , A.SALE_CUSTOM_CODE                                            
         , A.BILL_TYPE                                                   
         , A.SALE_TYPE                                                   
         , A.UPDATE_DB_USER                                              
         , A.UPDATE_DB_TIME                                              
         , A.COMP_CODE                                                   
         , A.PERSONS_NUM
         , A.WORK_TIME
         , A.GONG_SU
         , A.MAKER_TYPE
         , A.SET_TYPE
         , A.WORK_SHOP_CODE
         , A.REMARK
         , A.INOUT_Q        AS OLD_INOUT_Q
         , A.INOUT_PRSN
      FROM BTR100T A                                                     
                   RIGHT OUTER JOIN SET100T C                            
                                 ON A.COMP_CODE         = C.COMP_CODE    
                                AND A.DIV_CODE          = C.DIV_CODE    
                                AND A.ITEM_CODE         = C.CONST_ITEM_CODE     
                                AND A.INOUT_TYPE_DETAIL = '98'           
                                AND A.INOUT_TYPE        = '2' 
    
    <if test="@foren.Ognl@isNotEmpty(WORK_NUM)">
                                    AND A.INOUT_NUM         = #{WORK_NUM}
    </if>
    
                         INNER JOIN BPR100T B                            
                                 ON B.COMP_CODE         = C.COMP_CODE    
                                AND B.ITEM_CODE         = C.CONST_ITEM_CODE     
                         INNER JOIN BPR200T D                            
                                 ON D.COMP_CODE         = C.COMP_CODE    
                                AND D.DIV_CODE          = C.DIV_CODE     
                                AND D.ITEM_CODE         = C.CONST_ITEM_CODE     

    <if test="gsSumTypeCell == &quot;Y&quot;">
                             LEFT  JOIN BIV150T F                            
                                     ON F.COMP_CODE         = C.COMP_CODE    
                                    AND F.DIV_CODE          = C.DIV_CODE     
                                    AND F.ITEM_CODE         = C.CONST_ITEM_CODE     
                                    AND F.WH_CODE           = ISNULL(D.WH_CODE, #{WH_CODE})
                                    AND F.WH_CELL_CODE      = ISNULL(A.WH_CELL_CODE, #{WH_CELL_CODE})
                                    AND F.SUM_TYPE          = 'D'
                                    AND F.LOT_NO            = A.LOT_NO
    </if>
           LEFT  JOIN BSA220T C2 WITH (NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
                                              AND C2.TYPE_LEVEL   = A.DIV_CODE
                                              AND C2.TREE_CODE    = A.WH_CODE
           LEFT  JOIN BSA220T C3 WITH (NOLOCK) ON C3.COMP_CODE    = D.COMP_CODE
                                              AND C3.TYPE_LEVEL   = D.DIV_CODE
                                              AND C3.TREE_CODE    = ISNULL(D.WH_CODE, #{WH_CODE})
           LEFT  JOIN BSA225T C4 WITH (NOLOCK) ON C4.COMP_CODE    = A.COMP_CODE
                                              AND C4.DIV_CODE     = A.DIV_CODE
                                              AND C4.WH_CODE      = A.WH_CODE
                                              AND C4.WH_CELL_CODE = A.WH_CELL_CODE
           LEFT  JOIN BSA100T C5 WITH (NOLOCK) ON C5.COMP_CODE    = A.COMP_CODE
                                              AND C5.MAIN_CODE    = 'B095'
                                              AND C5.SUB_CODE     = 'SC'
     WHERE C.COMP_CODE        = #{S_COMP_CODE}
       AND C.DIV_CODE         = #{DIV_CODE}                   
       AND C.CONST_ITEM_CODE != '$'                                      
       AND C.SET_ITEM_CODE    = #{ITEM_CODE}                       
     ORDER BY A.INOUT_NUM, A.INOUT_SEQ, C.CONST_ITEM_CODE
    </select>
    
    <select id="set210ukrvServiceImpl.selectStockQty" parameterType="Map" resultType="rMap">
        --set210ukrv.Cset210ukrv[fnBiv100QStd] Query01
        <if test="gsSumTypeCell != &quot;Y&quot;">
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED  
        SELECT ISNULL(SUM(GOOD_STOCK_Q),0) AS GOOD_STOCK_Q
             , ISNULL(SUM(STOCK_Q),0)      AS STOCK_Q     
             , ISNULL(SUM(BAD_STOCK_Q),0)  AS BAD_STOCK_Q 
          FROM BIV100T                                    
         WHERE WH_CODE   = #{WH_CODE}
           AND ITEM_CODE = #{ITEM_CODE}
           AND COMP_CODE = #{S_COMP_CODE}
           <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
           AND DIV_CODE  = #{DIV_CODE}
           </if>
        </if>
        <if test="gsSumTypeCell == &quot;Y&quot;">
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED   
        SELECT ISNULL(SUM(GOOD_STOCK_Q),0) AS GOOD_STOCK_Q 
             , ISNULL(SUM(STOCK_Q),0)      AS STOCK_Q      
             , ISNULL(SUM(BAD_STOCK_Q),0)  AS BAD_STOCK_Q  
             , ISNULL(MIN(CASE WHEN GOOD_STOCK_Q &gt; 0 THEN LOT_NO ELSE '999999' END), '') AS LOT_NO
          FROM BIV150T                                     
         WHERE WH_CODE      = #{WH_CODE}        
           AND WH_CELL_CODE = #{WH_CELL_CODE}
           AND ITEM_CODE    = #{ITEM_CODE}         
           AND COMP_CODE    = #{S_COMP_CODE}          
           AND SUM_TYPE     = N'D'
           <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
           AND DIV_CODE  = #{DIV_CODE}
           </if>
         ORDER BY LOT_NO
        </if>
    </select>
    
    <insert id="set210ukrvServiceImpl.insertLogDetail" parameterType="Map"> 
	INSERT INTO L_BTR100T
	     (  KEY_VALUE, OPR_FLAG
		  , COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
          , INOUT_CODE_TYPE, INOUT_CODE, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
          , INOUT_Q, INOUT_P, INOUT_I, INOUT_FOR_P, INOUT_FOR_O, EXCHG_RATE_O, MONEY_UNIT
          , LOT_NO, REMARK
          , ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, ORDER_UNIT_FOR_P
          , BILL_TYPE, SALE_TYPE --,LOT_ASSIGNED_YN
          , SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_YN
          , PERSONS_NUM, WORK_TIME, GONG_SU, MAKER_TYPE, SET_TYPE, WORK_SHOP_CODE
          , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME
		 )
	VALUES
	     (  #{KEY_VALUE}, #{OPR_FLAG}
    	  , #{S_COMP_CODE}, #{INOUT_NUM}, #{INOUT_SEQ}, #{INOUT_TYPE}, #{DIV_CODE}, #{INOUT_METH}, #{CREATE_LOC}, #{INOUT_TYPE_DETAIL}
          , #{INOUT_CODE_TYPE}, #{INOUT_CODE}, #{INOUT_DATE}, #{ITEM_CODE}, #{ITEM_STATUS}, #{WH_CODE}, #{WH_CELL_CODE}, #{INOUT_PRSN}
          , #{INOUT_Q}, #{INOUT_P}, #{INOUT_I}, #{INOUT_FOR_P}, #{INOUT_FOR_O}, #{EXCHG_RATE_O}, #{MONEY_UNIT}
          , #{LOT_NO}, #{REMARK}
          , #{ORDER_UNIT}, #{TRNS_RATE}, #{ORDER_UNIT_Q}, #{ORDER_UNIT_P}, #{ORDER_UNIT_O}, #{ORDER_UNIT_FOR_P}
          , #{BILL_TYPE}, #{SALE_TYPE}
          , #{SALE_DIV_CODE}, #{SALE_CUSTOM_CODE}, #{SALE_C_YN}
          , #{PERSONS_NUM}, #{WORK_TIME}, #{GONG_SU}, #{MAKER_TYPE}, #{SET_TYPE}, #{WORK_SHOP_CODE}
          , #{S_USER_ID}, GETDATE(), #{S_USER_ID}, GETDATE()
		 )
	</insert>
	
	<insert id="set210ukrvServiceImpl.updateLogDetail" parameterType="Map">  
	INSERT INTO L_BTR100T(			
			KEY_VALUE, OPR_FLAG
		  , COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
	            , INOUT_CODE_TYPE, INOUT_CODE, INOUT_CODE_DETAIL, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
	            , INOUT_Q, INOUT_P, INOUT_I, INOUT_FOR_P, INOUT_FOR_O, EXCHG_RATE_O, MONEY_UNIT, EXPENSE_I, RETURN_QTY
	            , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, TO_DIV_CODE, PROJECT_NO, PJT_CODE, LOT_NO, REMARK
	            , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, INOUT_TAX_AMT, ORDER_UNIT_FOR_P
	            , IN_ITEM_STATUS, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, DELIVERY_DATE, DELIVERY_TIME, DVRY_CUST_CD, DISCOUNT_RATE, BILL_TYPE, SALE_TYPE, TAX_TYPE
	            , PRICE_YN, SALE_PRSN, SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_YN, SALE_C_DATE, SALE_C_REMARK, AGENT_TYPE, DEPT_CODE
	            , LC_NUM, BL_NUM, TRADE_LOC, LC_AMEND_SEQ, EXPENSE_FLAG, ACCOUNT_YNC, ACCOUNT_Q, FR_ACCOUNT, TO_ACCOUNT
	            , EX_DATE, EX_NUM, AGREE_YN, AC_DATE, AC_NUM
	            , INOUT_CAL_P, INOUT_CAL_I, BASIS_P, BASIS_I, INOUT_NET_P, INOUT_NET_I, INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN, DELIVERY_NO
	            , MAKE_DATE, DEFECT_CODE, DEFECT_TYPE, DEFECT_REMARK, PERSONS_NUM, WORK_TIME, GONG_SU, MAKER_TYPE, SET_TYPE, WORK_SHOP_CODE
	            , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME, TEMPC_01, TEMPC_02, TEMPC_03, TEMPN_01, TEMPN_02, TEMPN_03)
	      SELECT  #{KEY_VALUE}, #{OPR_FLAG}
	      	    , #{S_COMP_CODE}, #{INOUT_NUM}, #{INOUT_SEQ}, #{INOUT_TYPE}, #{DIV_CODE}, #{INOUT_METH}, #{CREATE_LOC}, #{INOUT_TYPE_DETAIL}
	            , #{INOUT_CODE_TYPE}, #{INOUT_CODE}, INOUT_CODE_DETAIL, #{INOUT_DATE}, #{ITEM_CODE}, #{ITEM_STATUS}, #{WH_CODE}, #{WH_CELL_CODE}, #{INOUT_PRSN}
	            , #{INOUT_Q}, #{INOUT_P}, #{INOUT_I}, #{INOUT_FOR_P}, #{INOUT_FOR_O}, #{EXCHG_RATE_O}, #{MONEY_UNIT}, EXPENSE_I, RETURN_QTY
	            , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, TO_DIV_CODE, PROJECT_NO, PJT_CODE, #{LOT_NO}, #{REMARK}
	            , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, #{ORDER_UNIT}, #{TRNS_RATE}, #{ORDER_UNIT_Q}, #{ORDER_UNIT_P}, #{ORDER_UNIT_O}, INOUT_TAX_AMT, #{ORDER_UNIT_FOR_P}
	            , IN_ITEM_STATUS, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, DELIVERY_DATE, DELIVERY_TIME, DVRY_CUST_CD, DISCOUNT_RATE, #{BILL_TYPE}, #{SALE_TYPE}, TAX_TYPE
	            , PRICE_YN, SALE_PRSN, #{SALE_DIV_CODE}, #{SALE_CUSTOM_CODE}, #{SALE_C_YN}, SALE_C_DATE, SALE_C_REMARK, AGENT_TYPE, DEPT_CODE
	            , LC_NUM,BL_NUM,TRADE_LOC, LC_AMEND_SEQ, EXPENSE_FLAG, ACCOUNT_YNC, ACCOUNT_Q, FR_ACCOUNT, TO_ACCOUNT
	            , EX_DATE, EX_NUM, AGREE_YN, AC_DATE, AC_NUM
	            , INOUT_CAL_P, INOUT_CAL_I, BASIS_P, BASIS_I, INOUT_NET_P, INOUT_NET_I, INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN, DELIVERY_NO
	            , MAKE_DATE, DEFECT_CODE, DEFECT_TYPE, DEFECT_REMARK, #{PERSONS_NUM}, #{WORK_TIME}, #{GONG_SU}, #{MAKER_TYPE}, #{SET_TYPE}, #{WORK_SHOP_CODE}
	            , INSERT_DB_USER, INSERT_DB_TIME, #{S_USER_ID}, GETDATE(), TEMPC_01, TEMPC_02, TEMPC_03, TEMPN_01, TEMPN_02, TEMPN_03
	      FROM   BTR100T   A  WITH (NOLOCK) 
	      WHERE A.COMP_CODE     = #{S_COMP_CODE}
	     	AND A.DIV_CODE      = #{DIV_CODE}
	        AND A.INOUT_NUM     = #{INOUT_NUM}
	        AND A.INOUT_SEQ     = #{INOUT_SEQ}
	        AND A.INOUT_TYPE    = #{INOUT_TYPE}
	</insert>
    
    <update id="set210ukrvServiceImpl.spSet210ukrv" parameterType="Map" statementType="CALLABLE">
	{call USP_SALE_SET210UKRV (
		#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{OptFlag, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{InOutNum, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
		#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
	</update>	
	
</mapper>