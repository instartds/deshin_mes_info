<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="set220ukrvServiceImpl">
	
	<select id="set220ukrvServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
	--set220ukrv.Cset220ukrv[fnSet220QStd1]query01
	/*******************************************************************************************
	SET품목단가등록"
	*******************************************************************************************/
	BEGIN
	        SET NOCOUNT ON
	        SET ARITHABORT ON
	
	        DECLARE @COMP_CODE   NVARCHAR(08)
	              , @DIV_CODE    NVARCHAR(08)
	              , @FR_DATE     NVARCHAR(08)
	              , @TO_DATE     NVARCHAR(08)
	              , @ITEM_CODE   NVARCHAR(40)
	              , @ITEM_NAME   NVARCHAR(200)
	              , @MAKER_TYPE  NVARCHAR(08)
	              , @WH_CODE     NVARCHAR(20)
	              , @ITEM_CODE2  NVARCHAR(40)
	              , @ITEM_NAME2  NVARCHAR(200)
	
	        SET @COMP_CODE  = #{S_COMP_CODE}
	        SET @DIV_CODE   = #{DIV_CODE}
	        SET @FR_DATE    = #{PRODT_DATE_FR}
	        SET @TO_DATE    = #{PRODT_DATE_TO}
	        SET @ITEM_CODE  = #{ITEM_CODE}
	        SET @ITEM_NAME  = #{ITEM_NAME}
	        SET @MAKER_TYPE = #{MAKER_TYPE}
	        SET @WH_CODE    = #{WH_CODE}
	        SET @ITEM_CODE2 = #{ITEM_CODE2}
	        SET @ITEM_NAME2 = #{ITEM_NAME2}
	
	        SELECT 
	              CAST(0 AS BIT) AS CHOICE
	             , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.INOUT_DATE) AS INOUT_DATE
	             , A.ROWNUM                  AS SER_NO
	             , A.ITEM_CODE               AS P_ITEM_CODE
	             , A.ITEM_NAME               AS P_ITEM_NAME
	             , A.INOUT_Q                 AS P_INOUT_Q
	             , A.INOUT_P                 AS P_INOUT_P
	             , A.INOUT_I                 AS P_INOUT_I
	             , ISNULL(A.MAKER_TYPE, ' ') AS MAKER_TYPE
	             --, CAST(0 AS BIT) AS CHOICE
	             , B.ITEM_CODE               AS C_ITEM_CODE
	             , B.ITEM_NAME               AS C_ITEM_NAME
	             , B.WH_NAME
	             , B.WH_CELL_NAME
	             , B.INOUT_Q                 AS C_INOUT_Q
	             , B.INOUT_P                 AS C_INOUT_P
	             , B.INOUT_I                 AS C_INOUT_I
	             , B.COMP_CODE
	             , B.DIV_CODE
	             , A.INOUT_NUM               AS P_INOUT_NUM
	             , A.INOUT_SEQ               AS P_INOUT_SEQ
	             , A.INOUT_TYPE              AS P_INOUT_TYPE
	             , A.ITEM_STATUS             AS P_ITEM_STATUS
	             , A.WH_CODE                 AS P_WH_CODE
	             , A.WH_CELL_CODE            AS P_WH_CELL_CODE
	             , A.LOT_NO                  AS P_LOT_NO
	             , B.INOUT_NUM               AS C_INOUT_NUM
	             , B.INOUT_SEQ               AS C_INOUT_SEQ
	             , B.INOUT_TYPE              AS C_INOUT_TYPE
	             , B.ITEM_STATUS             AS C_ITEM_STATUS
	             , B.WH_CODE                 AS C_WH_CODE
	             , B.WH_CELL_CODE            AS C_WH_CELL_CODE
	             , B.LOT_NO                  AS C_LOT_NO
	          FROM (
	                 SELECT 
	                        A.COMP_CODE
	                      , A.DIV_CODE
	                      , ROW_NUMBER() OVER(ORDER BY A.INOUT_DATE, A.INOUT_NUM) AS ROWNUM
	                      , A.INOUT_NUM
	                      , A.INOUT_DATE
	                      , A.ITEM_CODE
	                      , B.ITEM_NAME
	                      , A.INOUT_Q
	                      , C.CODE_NAME AS MAKER_TYPE
	                      , A.INOUT_P
	                      , A.INOUT_I
	                      , A.INOUT_SEQ
	                      , A.INOUT_TYPE
	                      , A.ITEM_STATUS
	                      , A.WH_CODE
	                      , A.WH_CELL_CODE
	                      , A.LOT_NO
	                   FROM            BTR100T A WITH(NOLOCK)
	                        INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                                         AND B.ITEM_CODE = A.ITEM_CODE
	                        LEFT  JOIN BSA100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
	                                                         AND C.MAIN_CODE = 'S086'
	                                                         AND C.SUB_CODE  = A.MAKER_TYPE
	                  WHERE A.COMP_CODE         = @COMP_CODE
	                    AND A.DIV_CODE          = @DIV_CODE
	                    AND A.INOUT_TYPE        = N'1'
	                    AND A.INOUT_METH        = N'2'
	                    AND A.CREATE_LOC        = N'1'
	                    AND A.INOUT_TYPE_DETAIL = N'98'
	                    AND A.INOUT_CODE_TYPE   = N'*'
	                    AND A.SET_TYPE          = N'1' 
	                    AND A.INOUT_DATE       >= @FR_DATE
	                    AND A.INOUT_DATE       &lt;= @TO_DATE
	                    
	                    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
	                    AND A.ITEM_CODE 		= @ITEM_CODE						/* 품목코드  */
	                    </if>
	                    <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
	                    AND A.ITEM_CODE 		LIKE @ITEM_CODE + '%'				/* 품목코드  */
	                    </if>
	                    <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
	                    AND B.ITEM_NAME 		LIKE '%' + @ITEM_NAME + '%'			/* 품목명  */
	                    </if>
	                    
	                    AND ((A.MAKER_TYPE      = @MAKER_TYPE       AND @MAKER_TYPE != '') OR (@MAKER_TYPE = ''))
	               ) AS A INNER JOIN (
	                                   SELECT 
	                                          A.COMP_CODE
	                                        , A.DIV_CODE
	                                        , A.INOUT_NUM
	                                        , A.INOUT_SEQ
	                                        , A.INOUT_DATE
	                                        , A.ITEM_CODE
	                                        , B.ITEM_NAME
	                                        , A.INOUT_Q
	                                        , A.INOUT_CAL_P AS INOUT_P
	                                        , A.INOUT_CAL_I AS INOUT_I
	                                       --, A.INOUT_P
	                                       --, A.INOUT_I
	                                            , A.WH_CODE 
	                                            , C1.TREE_NAME AS WH_NAME 
	                                            , A.WH_CELL_CODE
	                                            , C2.WH_CELL_NAME
	                                            , A.INOUT_TYPE
	                                            , A.ITEM_STATUS
	                                            , A.LOT_NO
	                                         FROM            BTR100T A  WITH(NOLOCK)
	                                              INNER JOIN BPR100T B  WITH(NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
	                                                                                AND B.ITEM_CODE     = A.ITEM_CODE
	                                              LEFT  JOIN BSA220T C1 WITH(NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
	                                                                                AND C1.TYPE_LEVEL   = A.DIV_CODE
	                                                                                AND C1.TREE_CODE    = A.WH_CODE
	                                              LEFT  JOIN BSA225T C2 WITH(NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
	                                                                                AND C2.DIV_CODE     = A.DIV_CODE
	                                                                                AND C2.WH_CODE      = A.WH_CODE
	                                                                                AND C2.WH_CELL_CODE = A.WH_CELL_CODE
	                                        WHERE A.COMP_CODE         = @COMP_CODE
	                                          AND A.DIV_CODE          = @DIV_CODE
	                                          AND A.INOUT_TYPE        = N'2'
	                                          AND A.INOUT_METH        = N'2'
	                                          AND A.CREATE_LOC        = N'1'
	                                          AND A.INOUT_TYPE_DETAIL = N'98'
	                                          AND A.INOUT_CODE_TYPE   = N'*'
	                                          AND A.SET_TYPE          = N'1' 
	                                          AND A.INOUT_DATE       >= @FR_DATE
	                                          AND A.INOUT_DATE       &lt;= @TO_DATE
	                                          
	                                          <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
	                                          AND A.ITEM_CODE 		= @ITEM_CODE2						/* 품목코드  */
	                                          </if>
	                                          <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
	                                          AND A.ITEM_CODE 		LIKE @ITEM_CODE2 + '%'				/* 품목코드  */
	                                          </if>
	                                          <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
	                                          AND B.ITEM_NAME 		LIKE '%' + @ITEM_NAME2 + '%'			/* 품목명  */
	                                          </if>
	                                          
	                                          AND ((A.MAKER_TYPE      = @MAKER_TYPE       AND @MAKER_TYPE != '') OR (@MAKER_TYPE = ''))
	                                          AND ((A.WH_CODE         = @WH_CODE          AND @WH_CODE    != '') OR (@WH_CODE    = ''))
	                                     ) AS B  ON B.COMP_CODE = A.COMP_CODE
	                                            AND B.DIV_CODE  = A.DIV_CODE
	                                            AND B.INOUT_NUM = A.INOUT_NUM
	             ORDER BY A.INOUT_DATE, A.INOUT_NUM
	    
	            SET NOCOUNT OFF
	            SET ARITHABORT OFF
	    END
    </select>	
    
    <select id="set220ukrvServiceImpl.selectMaster2" parameterType="Map" resultType="rMap">
		--set220ukrv.Cset220ukrv[fnSet220QStd2]query01
	    /*******************************************************************************************
	    SET품목단가등록
	    *******************************************************************************************/
	    BEGIN
	            SET NOCOUNT ON
	            SET ARITHABORT ON
	    
	            DECLARE @COMP_CODE   NVARCHAR(08)
	                  , @DIV_CODE    NVARCHAR(08)
	                  , @FR_DATE     NVARCHAR(08)
	                  , @TO_DATE     NVARCHAR(08)
	                  , @ITEM_CODE   NVARCHAR(40)
	                  , @ITEM_NAME   NVARCHAR(200)
	                  , @MAKER_TYPE  NVARCHAR(08)
	                  , @WH_CODE     NVARCHAR(20)
	                  , @ITEM_CODE2  NVARCHAR(40)
	                  , @ITEM_NAME2  NVARCHAR(200)
	    
	            SET @COMP_CODE  = #{S_COMP_CODE}
	            SET @DIV_CODE   = #{DIV_CODE}
	            SET @FR_DATE    = #{PRODT_DATE_FR}
	            SET @TO_DATE    = #{PRODT_DATE_TO}
	            SET @ITEM_CODE  = #{ITEM_CODE}
	            SET @ITEM_NAME  = #{ITEM_NAME}
	            SET @MAKER_TYPE = #{MAKER_TYPE}
	            SET @WH_CODE    = #{WH_CODE}
	            SET @ITEM_CODE2 = #{ITEM_CODE2}
	            SET @ITEM_NAME2 = #{ITEM_NAME2}
	    
	            SELECT
	                   CAST(0 AS BIT) AS CHOICE
	                 , uniLITE.fnGetUserDateComp(A.COMP_CODE, A.INOUT_DATE) AS INOUT_DATE
	                 , A.ROWNUM                  AS SER_NO
	                 , A.ITEM_CODE               AS P_ITEM_CODE
	                 , A.ITEM_NAME               AS P_ITEM_NAME
	                 , A.INOUT_Q                 AS P_INOUT_Q
	                 , A.INOUT_P                 AS P_INOUT_P
	                 , A.INOUT_I                 AS P_INOUT_I
	                 , ISNULL(A.MAKER_TYPE, ' ') AS MAKER_TYPE
	    
	                 , B.ITEM_CODE               AS C_ITEM_CODE
	                 , B.ITEM_NAME               AS C_ITEM_NAME
	                 , B.WH_NAME
	                 , B.WH_CELL_NAME
	                 , B.INOUT_Q                 AS C_INOUT_Q
	                 , B.INOUT_P                 AS C_INOUT_P
	                 , B.INOUT_I                 AS C_INOUT_I
	                 , B.COMP_CODE
	                 , B.DIV_CODE
	                 , A.INOUT_NUM               AS P_INOUT_NUM
	                 , A.INOUT_SEQ               AS P_INOUT_SEQ
	                 , A.INOUT_TYPE              AS P_INOUT_TYPE
	                 , A.ITEM_STATUS             AS P_ITEM_STATUS
	                 , A.WH_CODE                 AS P_WH_CODE
	                 , A.WH_CELL_CODE            AS P_WH_CELL_CODE
	                 , A.LOT_NO                  AS P_LOT_NO
	                 , B.INOUT_NUM               AS C_INOUT_NUM
	                 , B.INOUT_SEQ               AS C_INOUT_SEQ
	                 , B.INOUT_TYPE              AS C_INOUT_TYPE
	                 , B.ITEM_STATUS             AS C_ITEM_STATUS
	                 , B.WH_CODE                 AS C_WH_CODE
	                 , B.WH_CELL_CODE            AS C_WH_CELL_CODE
	                 , B.LOT_NO                  AS C_LOT_NO
	              FROM (
	                     SELECT 
	                            A.COMP_CODE
	                          , A.DIV_CODE
	                          , ROW_NUMBER() OVER(ORDER BY A.INOUT_DATE, A.INOUT_NUM) AS ROWNUM
	                          , A.INOUT_NUM
	                          , A.INOUT_DATE
	                          , A.ITEM_CODE
	                          , B.ITEM_NAME
	                          , A.INOUT_Q
	                          , C.CODE_NAME AS MAKER_TYPE
	                          , A.INOUT_CAL_P AS INOUT_P
	                          , A.INOUT_CAL_I AS INOUT_I
	
	                          , A.INOUT_SEQ
	                          , A.INOUT_TYPE
	                          , A.ITEM_STATUS
	                          , A.WH_CODE
	                          , A.WH_CELL_CODE
	                          , A.LOT_NO
	                       FROM            BTR100T A WITH(NOLOCK, INDEX(BTR100T_IDX02))
	                            INNER JOIN BPR100T B WITH(NOLOCK) ON B.COMP_CODE = A.COMP_CODE
	                                                             AND B.ITEM_CODE = A.ITEM_CODE
	                            LEFT  JOIN BSA100T C WITH(NOLOCK) ON C.COMP_CODE = A.COMP_CODE
	                                                             AND C.MAIN_CODE = 'S086'
	                                                             AND C.SUB_CODE  = A.MAKER_TYPE
	                      WHERE A.COMP_CODE         = @COMP_CODE
	                        AND A.DIV_CODE          = @DIV_CODE
	                        AND A.INOUT_TYPE        = N'2'
	                        AND A.INOUT_METH        = N'2'
	                        AND A.CREATE_LOC        = N'1'
	                        AND A.INOUT_TYPE_DETAIL = N'98'
	                        AND A.INOUT_CODE_TYPE   = N'*'
	                        AND A.SET_TYPE          = N'2' 
	                        AND A.INOUT_DATE       >= @FR_DATE
	                        AND A.INOUT_DATE       &lt;= @TO_DATE
	                        <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
	                        AND A.ITEM_CODE 		= @ITEM_CODE						/* 품목코드  */
	                        </if>
	                        <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
	                        AND A.ITEM_CODE 		LIKE @ITEM_CODE + '%'				/* 품목코드  */
	                        </if>
	                        <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
	                        AND B.ITEM_NAME 		LIKE '%' + @ITEM_NAME + '%'			/* 품목명  */
	                        </if>
	                        AND ((A.MAKER_TYPE      = @MAKER_TYPE       AND @MAKER_TYPE != '') OR (@MAKER_TYPE = ''))
	                   ) AS A INNER JOIN (
	                                       SELECT 
	                                              A.COMP_CODE
	                                            , A.DIV_CODE
	                                            , A.INOUT_NUM
	                                            , A.INOUT_SEQ
	                                            , A.INOUT_DATE
	                                            , A.ITEM_CODE
	                                            , B.ITEM_NAME
	                                            , A.INOUT_Q
	                                            , A.INOUT_P
	                                            , A.INOUT_I
	                                            , A.WH_CODE 
	                                            , C1.TREE_NAME AS WH_NAME 
	                                            , A.WH_CELL_CODE
	                                            , C2.WH_CELL_NAME
	                                            , A.INOUT_TYPE
	                                            , A.ITEM_STATUS
	                                            , A.LOT_NO
	                                         FROM            BTR100T A  WITH(NOLOCK, INDEX(BTR100T_IDX02))
	                                              INNER JOIN BPR100T B  WITH(NOLOCK) ON B.COMP_CODE     = A.COMP_CODE
	                                                                                AND B.ITEM_CODE     = A.ITEM_CODE
	                                              LEFT  JOIN BSA220T C1 WITH(NOLOCK) ON C1.COMP_CODE    = A.COMP_CODE
	                                                                                AND C1.TYPE_LEVEL   = A.DIV_CODE
	                                                                                AND C1.TREE_CODE    = A.WH_CODE
	                                              LEFT  JOIN BSA225T C2 WITH(NOLOCK) ON C2.COMP_CODE    = A.COMP_CODE
	                                                                                AND C2.DIV_CODE     = A.DIV_CODE
	                                                                                AND C2.WH_CODE      = A.WH_CODE
	                                                                                AND C2.WH_CELL_CODE = A.WH_CELL_CODE
	                                        WHERE A.COMP_CODE         = @COMP_CODE
	                                          AND A.DIV_CODE          = @DIV_CODE
	                                          AND A.INOUT_TYPE        = N'1'
	                                          AND A.INOUT_METH        = N'2'
	                                          AND A.CREATE_LOC        = N'1'
	                                          AND A.INOUT_TYPE_DETAIL = N'98'
	                                          AND A.INOUT_CODE_TYPE   = N'*'
	                                          AND A.SET_TYPE          = N'2' 
	                                          AND A.INOUT_DATE       >= @FR_DATE
	                                          AND A.INOUT_DATE       &lt;= @TO_DATE
	                                          
	                                          <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isNotEmpty(ITEM_NAME)">
	                                          AND A.ITEM_CODE 		= @ITEM_CODE2						/* 품목코드  */
	                                          </if>
	                                          <if test="@foren.Ognl@isNotEmpty(ITEM_CODE) and @foren.Ognl@isEmpty(ITEM_NAME)">
	                                          AND A.ITEM_CODE 		LIKE @ITEM_CODE2 + '%'				/* 품목코드  */
	                                          </if>
	                                          <if test="@foren.Ognl@isNotEmpty(ITEM_NAME) and @foren.Ognl@isEmpty(ITEM_CODE)">
	                                          AND B.ITEM_NAME 		LIKE '%' + @ITEM_NAME2 + '%'			/* 품목명  */
	                                          </if>
	                                          AND ((A.MAKER_TYPE      = @MAKER_TYPE       AND @MAKER_TYPE != '') OR (@MAKER_TYPE = ''))
	                                          AND ((A.WH_CODE         = @WH_CODE          AND @WH_CODE    != '') OR (@WH_CODE    = ''))
	                                     ) AS B  ON B.COMP_CODE = A.COMP_CODE
	                                            AND B.DIV_CODE  = A.DIV_CODE
	                                            AND B.INOUT_NUM = A.INOUT_NUM
	             ORDER BY A.INOUT_DATE, A.INOUT_NUM
	    
	            SET NOCOUNT OFF
	            SET ARITHABORT OFF
	    END
    </select>	
		
	<insert id="set220ukrvServiceImpl.updateLogDetail" parameterType="Map">  
       INSERT INTO L_BTR100T(			
		      KEY_VALUE, OPR_FLAG
	        , COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
            , INOUT_CODE_TYPE, INOUT_CODE, INOUT_CODE_DETAIL, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
            , INOUT_Q, INOUT_P, INOUT_I, INOUT_FOR_P, INOUT_FOR_O, EXCHG_RATE_O, MONEY_UNIT, EXPENSE_I, RETURN_QTY
            , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, TO_DIV_CODE, PROJECT_NO, PJT_CODE, LOT_NO, REMARK
            , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, INOUT_TAX_AMT, ORDER_UNIT_FOR_P
            , IN_ITEM_STATUS, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, DELIVERY_DATE, DELIVERY_TIME, DVRY_CUST_CD, DISCOUNT_RATE, BILL_TYPE, SALE_TYPE, TAX_TYPE
            , PRICE_YN, SALE_PRSN, SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_YN, SALE_C_DATE, SALE_C_REMARK, AGENT_TYPE, DEPT_CODE
            , LC_NUM, BL_NUM, TRADE_LOC, LC_AMEND_SEQ, EXPENSE_FLAG, ACCOUNT_YNC, ACCOUNT_Q, FR_ACCOUNT, TO_ACCOUNT
            , EX_DATE, EX_NUM, AGREE_YN, AC_DATE, AC_NUM
            , INOUT_CAL_P, INOUT_CAL_I, BASIS_P, BASIS_I, INOUT_NET_P, INOUT_NET_I, INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN, DELIVERY_NO
            , MAKE_DATE, DEFECT_CODE, DEFECT_TYPE, DEFECT_REMARK, PERSONS_NUM, WORK_TIME, GONG_SU, MAKER_TYPE, SET_TYPE, WORK_SHOP_CODE
            , INSERT_DB_USER, INSERT_DB_TIME, UPDATE_DB_USER, UPDATE_DB_TIME, TEMPC_01, TEMPC_02, TEMPC_03, TEMPN_01, TEMPN_02, TEMPN_03)
      SELECT  #{KEY_VALUE}, #{OPR_FLAG}
      	    , COMP_CODE, INOUT_NUM, INOUT_SEQ, INOUT_TYPE, DIV_CODE, INOUT_METH, CREATE_LOC, INOUT_TYPE_DETAIL
            , INOUT_CODE_TYPE, INOUT_CODE, INOUT_CODE_DETAIL, INOUT_DATE, ITEM_CODE, ITEM_STATUS, WH_CODE, WH_CELL_CODE, INOUT_PRSN
            , #{INOUT_Q}, #{INOUT_P}, #{INOUT_I}, #{INOUT_FOR_P}, #{INOUT_FOR_O}, EXCHG_RATE_O, MONEY_UNIT, EXPENSE_I, RETURN_QTY
            , TRANS_COST, TARIFF_AMT, BASIS_NUM, BASIS_SEQ, TO_DIV_CODE, PROJECT_NO, PJT_CODE, LOT_NO, REMARK
            , ORDER_TYPE, ORDER_NUM, ORDER_SEQ, ORDER_UNIT, TRNS_RATE, ORDER_UNIT_Q, ORDER_UNIT_P, ORDER_UNIT_O, INOUT_TAX_AMT, ORDER_UNIT_FOR_P
            , IN_ITEM_STATUS, ISSUE_REQ_NUM, ISSUE_REQ_SEQ, DELIVERY_DATE, DELIVERY_TIME, DVRY_CUST_CD, DISCOUNT_RATE, BILL_TYPE, SALE_TYPE, TAX_TYPE
            , PRICE_YN, SALE_PRSN, SALE_DIV_CODE, SALE_CUSTOM_CODE, SALE_C_YN, SALE_C_DATE, SALE_C_REMARK, AGENT_TYPE, DEPT_CODE
            , LC_NUM,BL_NUM,TRADE_LOC, LC_AMEND_SEQ, EXPENSE_FLAG, ACCOUNT_YNC, ACCOUNT_Q, FR_ACCOUNT, TO_ACCOUNT
            , EX_DATE, EX_NUM, AGREE_YN, AC_DATE, AC_NUM
            , INOUT_CAL_P, INOUT_CAL_I, BASIS_P, BASIS_I, INOUT_NET_P, INOUT_NET_I, INSPEC_NUM, INSPEC_SEQ, SCM_FLAG_YN, DELIVERY_NO
            , MAKE_DATE, DEFECT_CODE, DEFECT_TYPE, DEFECT_REMARK, PERSONS_NUM, WORK_TIME, GONG_SU, MAKER_TYPE, SET_TYPE, WORK_SHOP_CODE
            , INSERT_DB_USER, INSERT_DB_TIME, #{S_USER_ID}, GETDATE(), TEMPC_01, TEMPC_02, TEMPC_03, TEMPN_01, TEMPN_02, TEMPN_03
       FROM   BTR100T   A  WITH (NOLOCK) 
      WHERE A.COMP_CODE     = #{S_COMP_CODE}
     	AND A.DIV_CODE      = #{DIV_CODE}
        AND A.INOUT_NUM     = #{INOUT_NUM}
        AND A.INOUT_SEQ     = #{INOUT_SEQ}
        AND A.INOUT_TYPE    = #{INOUT_TYPE}
	</insert>
	
	<update id="spSet220ukrv" parameterType="Map" statementType="CALLABLE">
	{call USP_SALE_SET220UKRV (
		#{KEY_VALUE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{LANG_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{ERROR_DESC, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
    </update>
    	
</mapper>