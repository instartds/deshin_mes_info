<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_afb740ukrkocisServiceImpl">
		
<select id="s_afb740ukrkocisServiceImpl.selectSubList1" parameterType="Map" resultType="rMap">
	SELECT 
         NVL(B.BUDG_NAME,'')    AS BUDG_NAME_1--부문
        ,NVL(C.BUDG_NAME,'')    AS BUDG_NAME_4--세부사업
        ,NVL(D.BUDG_NAME,'')    AS BUDG_NAME_6--세목
        
        ,A.DEPT_CODE
        ,A.BUDG_CODE
        
        ,(SUM(NVL(A.BUDG_CONF_I , 0)) +
         SUM(NVL(A.BUDG_CONV_I , 0)) +
         SUM(NVL(A.BUDG_ASGN_I , 0)) +
         SUM(NVL(A.BUDG_SUPP_I , 0)) +
         SUM(NVL(A.BUDG_IWALL_I, 0)) +
         SUM(NVL(A.BUDG_TRANSFER_I, 0)) -
         SUM(NVL(A.EX_AMT_I , 0)) -
         SUM(NVL(A.AC_AMT_I , 0)) -
         SUM(NVL(A.ORDER_AMT, 0)) -
         SUM(NVL(A.REQ_AMT  , 0)))  AS BUDG_I
         
      FROM AFB510T A 
 LEFT JOIN AFB400T B ON B.COMP_CODE = A.COMP_CODE 
                    AND B.AC_YYYY   = SUBSTRING(A.BUDG_YYYYMM,1,4)
                    AND B.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,3)
 LEFT JOIN AFB400T C ON C.COMP_CODE = A.COMP_CODE 
                    AND C.AC_YYYY   = SUBSTRING(A.BUDG_YYYYMM,1,4)
                    AND C.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,14) 
 LEFT JOIN AFB400T D ON D.COMP_CODE = A.COMP_CODE 
                    AND D.AC_YYYY   = SUBSTRING(A.BUDG_YYYYMM,1,4)
                    AND D.BUDG_CODE = A.BUDG_CODE

    WHERE A.COMP_CODE = #{S_COMP_CODE}
      AND A.DEPT_CODE = #{S_DEPT_CODE}
      AND A.ACCT_NO   = #{REF_ACCT_NO}
      
      AND B.BUDG_TYPE = '2'
	
GROUP BY A.COMP_CODE, SUBSTRING(A.BUDG_YYYYMM,1,4),A.DEPT_CODE,A.BUDG_CODE, NVL(B.BUDG_NAME,''),NVL(C.BUDG_NAME,''),NVL(D.BUDG_NAME,''), A.ACCT_NO

 HAVING (SUM(NVL(A.BUDG_CONF_I , 0)) +
         SUM(NVL(A.BUDG_CONV_I , 0)) +
         SUM(NVL(A.BUDG_ASGN_I , 0)) +
         SUM(NVL(A.BUDG_SUPP_I , 0)) +
         SUM(NVL(A.BUDG_IWALL_I, 0)) +
         SUM(NVL(A.BUDG_TRANSFER_I, 0)) -
         SUM(NVL(A.EX_AMT_I , 0)) -
         SUM(NVL(A.AC_AMT_I , 0)) -
         SUM(NVL(A.ORDER_AMT, 0)) -
         SUM(NVL(A.REQ_AMT  , 0))) != 0
</select>
		
		
		
			
<select id="s_afb740ukrkocisServiceImpl.selectList" parameterType="Map" resultType="rMap">
    SELECT 
        A.COMP_CODE
        ,A.DEPT_CODE
        ,A.DOC_NO
        ,A.EX_DATE
        ,A.AC_GUBUN
        ,A.BUDG_CODE
        ,B.BUDG_NAME    AS BUDG_NAME_1--부문
        ,C.BUDG_NAME    AS BUDG_NAME_4--세부사업
        ,D.BUDG_NAME    AS BUDG_NAME_6--세목
        ,A.CURR_UNIT
        ,A.CURR_RATE
        ,A.CURR_AMT
        ,A.EX_AMT
        ,A.ACCT_NO
        ,E.SAVE_NAME
        ,A.REF_ACCT_NO
        ,E2.SAVE_NAME       AS REF_SAVE_NAME
        ,A.REF_EX_AMT
        
        ,A.REMARK
        ,A.IF_DOC_NO
        ,A.AP_STS
        ,A.AP_DATE
        ,A.AP_USER_ID
        ,A.AP_CHARGE_CODE
    
      FROM AFB740T A  
 LEFT JOIN AFB400T B ON B.COMP_CODE = A.COMP_CODE 
                    AND B.AC_YYYY   = SUBSTRING(A.EX_DATE,1,4)
                    AND B.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,3)
 LEFT JOIN AFB400T C ON C.COMP_CODE = A.COMP_CODE 
                    AND C.AC_YYYY   = SUBSTRING(A.EX_DATE,1,4)
                    AND C.BUDG_CODE = SUBSTRING(A.BUDG_CODE,1,14) 
 LEFT JOIN AFB400T D ON D.COMP_CODE = A.COMP_CODE 
                    AND D.AC_YYYY   = SUBSTRING(A.EX_DATE,1,4)
                    AND D.BUDG_CODE = A.BUDG_CODE
 LEFT JOIN AFS100T E ON E.COMP_CODE = A.COMP_CODE 
                    AND E.DEPT_CODE = A.DEPT_CODE
                    AND E.SAVE_CODE = A.ACCT_NO
 LEFT JOIN AFS100T E2 ON E2.COMP_CODE = A.COMP_CODE 
                    AND E2.DEPT_CODE = A.DEPT_CODE
                    AND E2.SAVE_CODE = A.REF_ACCT_NO
     WHERE A.COMP_CODE = #{S_COMP_CODE}
       AND A.DEPT_CODE = #{DEPT_CODE}
    <if test="@foren.Ognl@isNotEmpty(AC_GUBUN)"> 
       AND A.AC_GUBUN = #{AC_GUBUN}
    </if>
       AND SUBSTRING(A.EX_DATE, 1, 6) &gt;= #{AC_YEAR} + #{AC_MONTH_FR}
       AND SUBSTRING(A.EX_DATE, 1, 6) &lt;= #{AC_YEAR} + #{AC_MONTH_TO}
    <if test="@foren.Ognl@isNotEmpty(REMARK)"> 
       AND A.REMARK = #{REMARK}
    </if>


</select>

<update id="s_afb740ukrkocisServiceImpl.spAutoNum" parameterType="Map" statementType="CALLABLE">
	{call SP_GetAutoNumComp (
		#{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{DIV_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{TABLE_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{PREFIX, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{BASIS_DATE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{AUTO_TYPE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{KEY_NUMBER, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
</update>

<insert id="s_afb740ukrkocisServiceImpl.insertForm" parameterType="Map">    
    INSERT INTO AFB740T
    (
        COMP_CODE
        ,DEPT_CODE
        ,DOC_NO
        ,AC_YYYY
        ,EX_DATE
        ,AC_GUBUN
        ,BUDG_CODE
        ,CURR_UNIT
        ,CURR_RATE
        ,CURR_AMT
        ,EX_AMT
        ,ACCT_NO
        ,REF_ACCT_NO
        ,REF_EX_AMT
        
        ,REMARK
        ,AP_STS
        ,INSERT_DB_USER
        ,INSERT_DB_TIME
        ,UPDATE_DB_USER
        ,UPDATE_DB_TIME
    )
    VALUES
    (
         #{S_COMP_CODE}
        ,#{S_DEPT_CODE} 
        ,#{DOC_NO}
        ,#{AC_YYYY}
        ,#{EX_DATE}
        ,#{AC_GUBUN}
        ,#{BUDG_CODE}
        ,#{CURR_UNIT}
        ,#{CURR_RATE}
        ,#{CURR_AMT}
        ,#{EX_AMT}
        ,#{ACCT_NO}
        ,#{REF_ACCT_NO}
        ,#{REF_EX_AMT}
        
        ,#{REMARK}
        ,'0'
        ,#{S_USER_ID}
        ,now()
        ,#{S_USER_ID}
        ,now()
    )
</insert>
	
<update id="s_afb740ukrkocisServiceImpl.updateForm" parameterType="Map">	
    UPDATE AFB740T
        SET REMARK        = #{REMARK}          --적요   
            ,UPDATE_DB_USER    = #{S_USER_ID} 
            ,UPDATE_DB_TIME    = now()         

     WHERE COMP_CODE      = #{S_COMP_CODE}
       AND DEPT_CODE      = #{S_DEPT_CODE}
       AND AC_YYYY        = #{AC_YYYY}
       AND DOC_NO         = #{DOC_NO}	     
</update>

<update id="s_afb740ukrkocisServiceImpl.deleteForm" parameterType="Map">
	DELETE FROM AFB740T
	 WHERE COMP_CODE      = #{S_COMP_CODE}
       AND DEPT_CODE      = #{S_DEPT_CODE}
       AND AC_YYYY        = #{AC_YYYY}
       AND DOC_NO         = #{DOC_NO}
</update>

<select id="s_afb740ukrkocisServiceImpl.checkAFB740T" parameterType="Map" resultType="rMap">
    SELECT 
        NVL(AP_STS, '0') AS AP_STS
      FROM AFB740T
     WHERE COMP_CODE = #{S_COMP_CODE}
       AND DEPT_CODE = #{S_DEPT_CODE}
       AND AC_YYYY   = #{AC_YYYY}
       AND DOC_NO    = #{DOC_NO}
</select>

<select id="s_afb740ukrkocisServiceImpl.checkAFB510T" parameterType="Map" resultType="rMap">
    SELECT 
        BUDG_TRANSFER_I
       ,BUDG_FOR_AMT_I
      FROM AFB510T
     WHERE COMP_CODE   = #{S_COMP_CODE}
       AND BUDG_YYYYMM = SUBSTRING(#{EX_DATE},1,4) + '01'
       AND DEPT_CODE   = #{S_DEPT_CODE}
       AND BUDG_CODE   = #{BUDG_CODE}
       
       AND ACCT_NO     = #{ACCT_NO} 
</select>

<insert id="s_afb740ukrkocisServiceImpl.insertAFB510T" parameterType="Map">   
    INSERT INTO AFB510T
       (
        COMP_CODE
       ,BUDG_YYYYMM
       ,DEPT_CODE
       ,BUDG_CODE
       ,BUDG_GUBUN
       ,BUDG_I
       ,BUDG_CONF_I
       ,BUDG_TRANSFER_I
       ,BUDG_FOR_AMT_I
       ,INSERT_DB_USER
       ,INSERT_DB_TIME
       ,UPDATE_DB_USER
       ,UPDATE_DB_TIME
       ,ACCT_NO
       ,AC_GUBUN 
           
           )
     VALUES
     (
        #{S_COMP_CODE}
       ,SUBSTRING(#{EX_DATE},1,4) + '01'
       ,#{S_DEPT_CODE}
       ,#{BUDG_CODE}
       ,'1'
       , 0
       , 0 
       ,#{BUDG_TRANSFER_I}
       ,#{BUDG_FOR_AMT_I}
       ,#{S_USER_ID}
       ,now()
       ,#{S_USER_ID}
       ,now()
       ,#{ACCT_NO}
       ,#{AC_GUBUN}
     )
</insert>

<update id="s_afb740ukrkocisServiceImpl.updateAFB510T" parameterType="Map">   
    UPDATE AFB510T
       SET BUDG_TRANSFER_I = NVL(BUDG_TRANSFER_I,0) + #{BUDG_TRANSFER_I}
          ,BUDG_FOR_AMT_I = NVL(BUDG_FOR_AMT_I,0) + #{BUDG_FOR_AMT_I}
          ,UPDATE_DB_USER = #{S_USER_ID}
          ,UPDATE_DB_TIME = now()
          
     WHERE COMP_CODE   = #{S_COMP_CODE}
       AND BUDG_YYYYMM = SUBSTRING(#{EX_DATE},1,4) + '01'  -- 발의일자 6자리 까지
       AND DEPT_CODE   = #{S_DEPT_CODE}
       AND BUDG_CODE   = #{BUDG_CODE}
       
       AND ACCT_NO     = #{ACCT_NO} 
</update>

<select id="s_afb740ukrkocisServiceImpl.fnGetDocNo" parameterType="Map" resultType="rMap">  
        SELECT 
            '4' + #{S_DEPT_CODE} + #{AC_YYYY} + TO_CHAR  (NVL(MAX( TO_NUMBER (SUBSTRING(DOC_NO, 10))),0) +1, '0000') AS DOC_NO
          FROM AFB740T
         WHERE COMP_CODE = #{S_COMP_CODE} 
           AND DEPT_CODE = #{S_DEPT_CODE}
           AND AC_YYYY   = #{AC_YYYY}
           AND LENGTH(DOC_NO) = 13
    </select>

</mapper>