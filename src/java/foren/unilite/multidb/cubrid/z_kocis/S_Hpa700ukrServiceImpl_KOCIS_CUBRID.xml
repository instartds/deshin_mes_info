<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_hpa700ukrServiceImpl_KOCIS">
	    <!-- 퇴사일로 퇴사여부 확인 -->
    <select id="s_hpa700ukrServiceImpl_KOCIS.retireYN" parameterType="Map" resultType="string">
        SELECT  CASE WHEN COUNT(COMP_CODE) = 0 THEN 'N'
                     ELSE 'Y'
                END                                          AS EXIST_YN
        FROM    HUM100T
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     PERSON_NUMB = #{PERSON_NUMB}
        AND     RETR_DATE  != '00000000'
    </select>
    
    <select id="s_hpa700ukrServiceImpl_KOCIS.selectList1_1" parameterType="rMap" resultType="rMap">
        SELECT WAGES_CODE SUB_CODE, WAGES_NAME CODE_NAME
          FROM HBS300T
         WHERE COMP_CODE = #{S_COMP_CODE}
           AND CODE_TYPE = '1'
           AND USE_YN    = 'Y' 
    </select>
    
    <select id="s_hpa700ukrServiceImpl_KOCIS.selectList1_2" parameterType="rMap" resultType="rMap">
        SELECT SUB_CODE, CODE_NAME
          FROM BSA100T 
         WHERE COMP_CODE   = #{S_COMP_CODE}
           AND MAIN_CODE   = 'H034'  
           AND SUB_CODE   != '$' 
           AND USE_YN = 'Y'
         ORDER BY MAIN_CODE, SUB_CODE
    </select>
    
    <select id="s_hpa700ukrServiceImpl_KOCIS.selectList2_1" parameterType="rMap" resultType="rMap">
        SELECT A.PERSON_NUMB
             , B.NAME
             , fnGetUserDateComp(#{S_COMP_CODE}, A.PAY_FR_YYYYMM) PAY_FR_YYYYMM
             , fnGetUserDateComp(#{S_COMP_CODE}, A.PAY_TO_YYYYMM) PAY_TO_YYYYMM
             , A.DED_AMOUNT_I
             , A.REMARK
             , A.PROV_GUBUN
             , A.WAGES_CODE
             , A.SUPP_TYPE
        FROM       HPA700T A 
        INNER JOIN HUM100T B ON A.COMP_CODE = B.COMP_CODE
                          AND A.PERSON_NUMB = B.PERSON_NUMB
        WHERE A.COMP_CODE   = #{S_COMP_CODE}
        AND   A.SUPP_TYPE   = #{SUPP_TYPE}
        AND   A.PROV_GUBUN  = #{PROV_GUBUN}
        AND   A.PAY_TO_YYYYMM &gt;= #{PAY_TO_YYYYMM}
    <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">    
        AND A.PERSON_NUMB = #{PERSON_NUMB}
    </if>
    <if test="@foren.Ognl@isNotEmpty(SUB_CODE)">                
        AND A.WAGES_CODE = #{SUB_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
        AND B.DIV_CODE   = #{DIV_CODE}
    </if> 
    
     ORDER BY A.PAY_FR_YYYYMM, A.PAY_TO_YYYYMM, B.NAME
    </select>
    
    <select id="s_hpa700ukrServiceImpl_KOCIS.selectList2_2" parameterType="rMap" resultType="rMap">
        SELECT A.PERSON_NUMB
             , B.NAME
             , ''               AS PAY_FR_YYYYMM
             , ''               AS PAY_TO_YYYYMM
             , A.AMOUNT_I       AS DED_AMOUNT_I
             , ''               AS REMARK
             , A.PROV_GUBUN
             , A.WAGES_CODE
             , ''               AS SUPP_TYPE
        FROM       HPA200T A 
        INNER JOIN HUM100T B ON A.COMP_CODE   = B.COMP_CODE
                            AND A.PERSON_NUMB = B.PERSON_NUMB
        WHERE A.COMP_CODE   = #{S_COMP_CODE}
        AND   A.PROV_GUBUN  = #{PROV_GUBUN}
    <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">    
        AND A.PERSON_NUMB = #{PERSON_NUMB}
    </if>
    <if test="@foren.Ognl@isNotEmpty(SUB_CODE)">                
        AND A.WAGES_CODE = #{SUB_CODE}
    </if>
	 <if test="DEPT_CODE != &quot;01&quot;">
	    AND B.DEPT_CODE = #{DEPT_CODE}
	 </if>    
    
     ORDER BY B.NAME
    </select>
    
    <insert id="s_hpa700ukrServiceImpl_KOCIS.insertList" parameterType="rMap">
            INSERT INTO
            <if test="rdoSelect == &quot;1&quot;"> 
                            HPA700T
            </if>
            <if test="rdoSelect == &quot;2&quot;"> 
                            HPA200T
            </if>
                 ( PERSON_NUMB
            <if test="rdoSelect == &quot;1&quot;"> 
                 , PAY_FR_YYYYMM
                 , PAY_TO_YYYYMM
                 <if test="@foren.Ognl@isNotEmpty(DED_AMOUNT_I)">
                 , DED_AMOUNT_I
                 </if>
            </if>
            <if test="rdoSelect == &quot;2&quot;"> 
                 <if test="@foren.Ognl@isNotEmpty(DED_AMOUNT_I)">
                 , AMOUNT_I
                 </if>
            </if>
            <if test="rdoSelect == &quot;1&quot;"> 
                 <if test="@foren.Ognl@isNotEmpty(REMARK)">
                 , REMARK
                 </if>
            </if>
                 , PROV_GUBUN
                 , WAGES_CODE
            <if test="rdoSelect == &quot;1&quot;"> 
                 , SUPP_TYPE
            </if>
                 , UPDATE_DB_USER
                 , UPDATE_DB_TIME
                 , INSERT_DB_USER
                 , INSERT_DB_TIME
                 , COMP_CODE
            ) 
            VALUES
                 ( #{PERSON_NUMB}
            <if test="rdoSelect == &quot;1&quot;"> 
                 , #{PAY_FR_YYYYMM}
                 , #{PAY_TO_YYYYMM}
            </if>
                 <if test="@foren.Ognl@isNotEmpty(DED_AMOUNT_I)">
                 , ${DED_AMOUNT_I}
                 </if>
            <if test="rdoSelect == &quot;1&quot;"> 
                 <if test="@foren.Ognl@isNotEmpty(REMARK)">
                 , #{REMARK}
                 </if>
            </if>
                 , #{PROV_GUBUN}
                 , #{WAGES_CODE}
            <if test="rdoSelect == &quot;1&quot;"> 
                 , #{SUPP_TYPE}
            </if>
                 , #{S_USER_ID}
                 , SYSDATETIME
                 , #{S_USER_ID}
                 , SYSDATETIME
                 , #{S_COMP_CODE}
            )
    </insert>
    
    <update id="s_hpa700ukrServiceImpl_KOCIS.updateList" parameterType="rMap">
        UPDATE          
            <if test="rdoSelect == &quot;1&quot;"> 
                            HPA700T
            </if>
            <if test="rdoSelect == &quot;2&quot;"> 
                            HPA200T
            </if>

           SET PAY_TO_YYYYMM  = #{PAY_TO_YYYYMM}
            <if test="rdoSelect == &quot;1&quot;"> 
                 <if test="@foren.Ognl@isNotEmpty(DED_AMOUNT_I)">
             , DED_AMOUNT_I   = ${DED_AMOUNT_I}
                 </if>
             </if>
            <if test="rdoSelect == &quot;2&quot;"> 
                 <if test="@foren.Ognl@isNotEmpty(DED_AMOUNT_I)">
             , AMOUNT_I   = ${DED_AMOUNT_I}
                 </if>
             </if>
             <if test="@foren.Ognl@isNotEmpty(REMARK)">
             , REMARK         = #{REMARK}
             </if>
             , UPDATE_DB_USER = #{S_USER_ID}
             , UPDATE_DB_TIME = SYSDATETIME
             
         WHERE PERSON_NUMB    = #{PERSON_NUMB}
           AND PAY_FR_YYYYMM  = #{PAY_FR_YYYYMM}
           AND PROV_GUBUN     = #{PROV_GUBUN}
           AND WAGES_CODE     = #{WAGES_CODE}
        <if test="rdoSelect == &quot;1&quot;"> 
           AND SUPP_TYPE      = #{SUPP_TYPE}
        </if>
           AND COMP_CODE      = #{S_COMP_CODE}
    </update>
    
    <delete id="s_hpa700ukrServiceImpl_KOCIS.deleteList" parameterType="rMap">
        DELETE FROM 
            <if test="rdoSelect == &quot;1&quot;"> 
                            HPA700T
            </if>
            <if test="rdoSelect == &quot;2&quot;"> 
                            HPA200T
            </if>
         WHERE PERSON_NUMB   = #{PERSON_NUMB}
        <if test="rdoSelect == &quot;1&quot;"> 
           AND PAY_FR_YYYYMM = #{PAY_FR_YYYYMM}
        </if>
           AND PROV_GUBUN    = #{PROV_GUBUN}
           AND WAGES_CODE    = #{WAGES_CODE}
        <if test="rdoSelect == &quot;1&quot;"> 
           AND SUPP_TYPE      = #{SUPP_TYPE}
        </if>
           AND COMP_CODE     = #{S_COMP_CODE}
    </delete>
    
    
    <!-- Excel -->
    <insert id="s_hpa700ukrServiceImpl_KOCIS.insertExcelHbs700upload" parameterType="Map">
        INSERT INTO HPA700T_UPLOAD
            (_EXCEL_JOBID, 
             _EXCEL_ROWNUM, 
             _EXCEL_HAS_ERROR, 
             _EXCEL_ERROR_MSG, 
             PERSON_NUMB, 
             NAME,
             PAY_FR_YYYYMM,
             PAY_TO_YYYYMM,
             DED_AMOUNT_I,
             REMARK
        )
        VALUES 
        (
            #{_EXCEL_JOBID}, 
            #{_EXCEL_ROWNUM}, 
            #{_EXCEL_HAS_ERROR ,jdbcType=VARCHAR}, 
            #{_EXCEL_ERROR     ,jdbcType=VARCHAR},               
            #{PERSON_NUMB}, 
            <if test="@foren.Ognl@isNotEmpty(NAME)">
            #{NAME},
            </if>
            <if test="@foren.Ognl@isEmpty(NAME)">
            (SELECT NAME AS NAME1 FROM HUM100T WHERE COMP_CODE = #{S_COMP_CODE} AND PERSON_NUMB = #{PERSON_NUMB}),
     	    </if>
            #{PAY_FR_YYYYMM},
            #{PAY_TO_YYYYMM},
            #{DED_AMOUNT_I},
            #{REMARK}           
        )
    </insert>
    
    <select id="s_hpa700ukrServiceImpl_KOCIS.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">
        /*s_hpa700ukrServiceImpl_KOCIS.selectExcelUploadSheet1*/
        SELECT _EXCEL_JOBID
             , _EXCEL_ROWNUM
             , _EXCEL_HAS_ERROR       
             , _EXCEL_ERROR_MSG
             , PERSON_NUMB 
             , NAME
             , PAY_FR_YYYYMM
             , PAY_TO_YYYYMM
             , DED_AMOUNT_I
             , REMARK
             , #{PROV_GUBUN} AS PROV_GUBUN
             , #{WAGES_CODE} AS WAGES_CODE
             , #{SUPP_TYPE}  AS SUPP_TYPE
          FROM HPA700T_UPLOAD 
         WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
         ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
    </select>
    
    <update id="s_hpa700ukrServiceImpl_KOCIS.excelValidate" >
        /*hbs020ukrServiceImpl.excelValidate*/
        UPDATE  HPA700T_UPLOAD A
        LEFT JOIN  HUM100T B    ON B.COMP_CODE= #{S_COMP_CODE}
                                AND A.PERSON_NUMB = B.PERSON_NUMB        
           SET 
                A._EXCEL_HAS_ERROR = (CASE WHEN A.PERSON_NUMB IS NULL 
                                           THEN 'Y' 
                                      ELSE A._EXCEL_HAS_ERROR 
                                      END),
                A._EXCEL_ERROR_MSG = (CASE WHEN A.PERSON_NUMB IS NULL  
                                           THEN NVL(_EXCEL_ERROR_MSG,'') + '해당 사번의 사원이 존재하지 않습니다. ' 
                                      ELSE A._EXCEL_ERROR_MSG END)
        WHERE A._EXCEL_JOBID = #{_EXCEL_JOBID}
    </update>
        
</mapper>