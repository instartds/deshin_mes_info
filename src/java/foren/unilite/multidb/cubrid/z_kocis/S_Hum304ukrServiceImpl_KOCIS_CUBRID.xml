<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_hum304ukrServiceImpl_KOCIS">
    <select id="s_hum304ukrServiceImpl_KOCIS.checkCompCode" parameterType="Map" resultType="rMap">
            SELECT A.COMP_CODE, A.COMP_NAME
            FROM              BOR100T   A
                   LEFT  JOIN BSA100T   M1 ON M1.COMP_CODE    = #{S_COMP_CODE}    
                                          AND M1.MAIN_CODE    = 'B107'
                                          AND M1.SUB_CODE     = '20'         
            WHERE (A.COMP_CODE      &gt; ''        AND NVL(M1.REF_CODE1, 'N') = 'Y')
               OR (A.COMP_CODE      = #{S_COMP_CODE}  AND NVL(M1.REF_CODE1, 'N') = 'N')
    </select>

    <!-- 퇴사일로 퇴사여부 확인 -->
    <select id="s_hum304ukrServiceImpl_KOCIS.retireYN" parameterType="Map" resultType="string">
        SELECT  CASE WHEN COUNT(COMP_CODE) = 0 THEN 'N'
                     ELSE 'Y'
                END                                          AS EXIST_YN
        FROM    HUM100T
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     PERSON_NUMB = #{PERSON_NUMB}
        AND     RETR_DATE  != '00000000'
    </select>
    
    <select id="s_hum304ukrServiceImpl_KOCIS.select" parameterType="Map" resultType="rMap"> /* 조회쿼리 */
         --Hum304.CHum304UKR1[fnHum304QStd] QUERY01
            
            --  [ 날짜 포맷 유형 설정 ] ------------------------------------------------------------

                SET @DateFormat = (SELECT CODE_NAME
                                             FROM    BSA100T
                                             WHERE   COMP_CODE = #{S_COMP_CODE}
                                             AND     MAIN_CODE = 'B044'
                                             AND     REF_CODE1 = 'Y');
            
                SET @DateFormat = NVL(@DateFormat, 'YYYY.MM.DD');
                

            --  [ 데이터 조회 ] --------------------------------------------------------------------
            
            
            SELECT 
                      M.DOC_ID           
                    , M.COMP_CODE           
                    , A.DIV_CODE            
                    , A.DEPT_NAME           
                    , A.POST_CODE           
                    , A.NAME                
                    , A.PERSON_NUMB     
                    , M.EDU_TITLE
        
                    , CASE WHEN NVL(M.EDU_FR_DATE, '') = '' THEN ''
                           ELSE REPLACE(
                                REPLACE(
                                REPLACE(@DateFormat, 'YYYY', SUBSTRING(M.EDU_FR_DATE, 1, 4))
                                                   , 'MM',   SUBSTRING(M.EDU_FR_DATE, 5, 2))
                                                   , 'DD',   SUBSTRING(M.EDU_FR_DATE, 7, 2))
                       END AS EDU_FR_DATE
        
                    , CASE WHEN NVL(M.EDU_TO_DATE, '') = '' THEN ''
                           ELSE REPLACE(
                                REPLACE(
                                REPLACE(@DateFormat, 'YYYY', SUBSTRING(M.EDU_TO_DATE, 1, 4))
                                                   , 'MM',   SUBSTRING(M.EDU_TO_DATE, 5, 2))
                                                   , 'DD',   SUBSTRING(M.EDU_TO_DATE, 7, 2))
                       END AS EDU_TO_DATE
            
                    , M.EDU_TIME
                    , M.EDU_ORGAN
                    , M.EDU_NATION
                    , M.EDU_GUBUN
                    , M.EDU_GRADES
                    , M.EDU_AMT
                    , M.REPORT_YN
                    , M.GRADE
                    , M.INSERT_DB_USER
                    , M.INSERT_DB_TIME
                    , M.UPDATE_DB_USER
                    , M.UPDATE_DB_TIME
            FROM                        HUM740T     M 
                    INNER JOIN          HUM100T     A   ON M.COMP_CODE     = A.COMP_CODE
                                                       AND M.PERSON_NUMB   = A.PERSON_NUMB
                    LEFT  OUTER JOIN    BSA100T     B   ON M.COMP_CODE     = B.COMP_CODE
                                                       AND B.SUB_CODE      = A.EMPLOY_TYPE
                                                       AND B.MAIN_CODE     = 'H024'
                    LEFT  OUTER JOIN    BSA100T     D   ON D.COMP_CODE     = M.COMP_CODE
                                                       AND D.SUB_CODE      = M.EDU_ORGAN
                                                       AND D.MAIN_CODE     = 'H089'
        
            WHERE   M.COMP_CODE     =  #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">                    
                AND A.DIV_CODE IN
                    <foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
                     #{item}
                    </foreach>                                  
            </if>
            <if test="@foren.Ognl@isNotEmpty(NAME)">
                AND A.NAME   LIKE + '%' +  #{NAME} + '%'
            </if>
            <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
                AND A.PERSON_NUMB  = #{PERSON_NUMB}
            </if>
            <if test="RDO_TYPE == &quot;A&quot;">
                AND A.RETR_DATE = '00000000'        -- 재직구분 (재직)
            </if>
            <if test="RDO_TYPE == &quot;B&quot;">
                AND A.RETR_DATE != '00000000'       -- 재직구분 (퇴사)
            </if>

            <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
               AND A.PAY_GUBUN      = #{PAY_GUBUN}                                  -- 고용형태
            </if>
            <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
               AND A.PAY_CODE       = #{PAY_CODE}                                   -- 급여지급방식
            </if>
            <if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
               AND A.PAY_PROV_FLAG  = #{PAY_PROV_FLAG}                              -- 급여지급차수
            </if>
            <if test="@foren.Ognl@isNotEmpty(PERSON_GROUP)">
               AND B.REF_CODE1      = #{PERSON_GROUP}                               -- 사원그룹
            </if>
            
            <if test="@foren.Ognl@isNotEmpty(EDU_TITLE)">
               AND M.EDU_TITLE      LIKE + '%' + #{EDU_TITLE} + '%'                 -- 교육명
            </if>
            <if test="@foren.Ognl@isNotEmpty(EDU_ORGAN)">
               AND M.EDU_ORGAN      LIKE + '%' + #{EDU_ORGAN} + '%' 
               OR  D.CODE_NAME      LIKE + '%' + #{EDU_ORGAN} + '%'                 -- 교육기관
            </if>
            <if test="@foren.Ognl@isNotEmpty(EDU_ORGAN)">
               AND D.CODE_NAME      = #{EDU_ORGAN}                                  -- 사원그룹
            </if>
            <if test="@foren.Ognl@isNotEmpty(EDU_FR_DATE)">
            AND ((NVL(M.EDU_FR_DATE, '') = '') OR

                (NVL(M.EDU_TO_DATE  , '') = '') OR

                (M.EDU_FR_DATE &lt;= #{EDU_FR_DATE} AND M.EDU_TO_DATE   &gt;= #{EDU_TO_DATE}) OR

                (M.EDU_FR_DATE &gt;= #{EDU_FR_DATE} AND M.EDU_FR_DATE   &lt;= #{EDU_TO_DATE}) OR

                (M.EDU_TO_DATE &gt;= #{EDU_FR_DATE} AND M.EDU_TO_DATE   &lt;= #{EDU_TO_DATE}) OR

                (M.EDU_FR_DATE &gt;= #{EDU_FR_DATE} AND M.EDU_TO_DATE   &lt;= #{EDU_TO_DATE}))
            </if>
            <if test="@foren.Ognl@isNotEmpty(EDU_TO_DATE)">
            AND ((NVL(M.EDU_FR_DATE, '') = '') OR

                (NVL(M.EDU_TO_DATE  , '') = '') OR

                (M.EDU_FR_DATE &lt;= #{EDU_FR_DATE} AND M.EDU_TO_DATE   &gt;= #{EDU_TO_DATE}) OR

                (M.EDU_FR_DATE &gt;= #{EDU_FR_DATE} AND M.EDU_FR_DATE   &lt;= #{EDU_TO_DATE}) OR

                (M.EDU_TO_DATE &gt;= #{EDU_FR_DATE} AND M.EDU_TO_DATE   &lt;= #{EDU_TO_DATE}) OR

                (M.EDU_FR_DATE &gt;= #{EDU_FR_DATE} AND M.EDU_TO_DATE   &lt;= #{EDU_TO_DATE}))
            </if>
            <if test="@foren.Ognl@isNotEmpty(EDU_FR_AMT)">
               AND M.EDU_AMT                &gt;= #{EDU_FR_AMT}                     -- 교육비 FR
            </if>
            <if test="@foren.Ognl@isNotEmpty(EDU_TO_AMT)">
               AND M.EDU_AMT                &lt;= #{EDU_TO_AMT}                     -- 교육비 TO
            </if>
            
            ORDER BY A.DIV_CODE, A.DEPT_CODE, A.POST_CODE, A.JOIN_DATE, A.NAME, A.PERSON_NUMB;
            
    </select>
    
    <insert id="s_hum304ukrServiceImpl_KOCIS.insertDetail" parameterType="Map">    /* 추가 */
        --Hum304ukr.CHum304UKR[fnHum304Save] Query02
        INSERT INTO HUM740T
             ( COMP_CODE
             , PERSON_NUMB
             , EDU_TITLE
             , EDU_FR_DATE
             <if test="@foren.Ognl@isNotEmpty(EDU_TO_DATE)">
             , EDU_TO_DATE
             </if>
             <if test="@foren.Ognl@isNotEmpty(EDU_TIME)">
             , EDU_TIME
             </if>
             <if test="@foren.Ognl@isNotEmpty(EDU_ORGAN)">
             , EDU_ORGAN
             </if>
             <if test="@foren.Ognl@isNotEmpty(EDU_NATION)">
             , EDU_NATION
             </if>
             <if test="@foren.Ognl@isNotEmpty(EDU_GUBUN)">
             , EDU_GUBUN
             </if>
             <if test="@foren.Ognl@isNotEmpty(EDU_GRADES)">
             , EDU_GRADES
             </if>
             <if test="@foren.Ognl@isNotEmpty(EDU_AMT)">
             , EDU_AMT
             </if>
             <if test="@foren.Ognl@isNotEmpty(REPORT_YN)">
             , REPORT_YN
             </if>
             <if test="@foren.Ognl@isNotEmpty(GRADE)">
             , GRADE
             </if>
             , INSERT_DB_USER
             , INSERT_DB_TIME
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             ) 
        VALUES
             ( #{S_COMP_CODE}
             , #{PERSON_NUMB}
             , #{EDU_TITLE}
             , #{EDU_FR_DATE}
             <if test="@foren.Ognl@isNotEmpty(EDU_TO_DATE)">
             , #{EDU_TO_DATE}
             </if>
             <if test="@foren.Ognl@isNotEmpty(EDU_TIME)">
             , #{EDU_TIME}
             </if>
             <if test="@foren.Ognl@isNotEmpty(EDU_ORGAN)">
             , #{EDU_ORGAN}
             </if>
             <if test="@foren.Ognl@isNotEmpty(EDU_NATION)">
             , #{EDU_NATION}
             </if>
             <if test="@foren.Ognl@isNotEmpty(EDU_GUBUN)">
             , #{EDU_GUBUN}
             </if>
             <if test="@foren.Ognl@isNotEmpty(EDU_GRADES)">
             , #{EDU_GRADES}
             </if>
             <if test="@foren.Ognl@isNotEmpty(EDU_AMT)">
             , #{EDU_AMT}
             </if>
             <if test="@foren.Ognl@isNotEmpty(REPORT_YN)">
             , #{REPORT_YN}
             </if>
             <if test="@foren.Ognl@isNotEmpty(GRADE)">
             , #{GRADE}
             </if>
             , #{S_USER_ID}
             , SYSDATETIME
             , #{S_USER_ID}
             , SYSDATETIME
             )
    </insert>
    
    <update id="s_hum304ukrServiceImpl_KOCIS.updateDetail" parameterType="Map">     /* 수정 */
        --Hum304ukr.CHum304UKR[fnHum304Save] Query02
            UPDATE HUM740T
               SET COMP_CODE      = #{S_COMP_CODE}
                 , PERSON_NUMB    = #{PERSON_NUMB}
                 , EDU_TITLE      = #{EDU_TITLE}
                 , EDU_FR_DATE    = #{EDU_FR_DATE}
                 <if test="@foren.Ognl@isExists(_parameter, 'EDU_TO_DATE')">
                 , EDU_TO_DATE    = #{EDU_TO_DATE}
                 </if>
                 <if test="@foren.Ognl@isExists(_parameter, 'EDU_ORGAN')">
                 , EDU_ORGAN      = #{EDU_ORGAN}
                 </if>
                 <if test="@foren.Ognl@isExists(_parameter, 'EDU_NATION')">
                 , EDU_NATION     = #{EDU_NATION}
                 </if>
                 <if test="@foren.Ognl@isExists(_parameter, 'EDU_GUBUN')">
                 , EDU_GUBUN      = #{EDU_GUBUN}
                 </if>
                 <if test="@foren.Ognl@isExists(_parameter, 'EDU_GRADES')">
                 , EDU_GRADES     = #{EDU_GRADES}
                 </if>
                 <if test="@foren.Ognl@isExists(_parameter, 'EDU_AMT')">
                 , EDU_AMT        = #{EDU_AMT}
                 </if>
                 <if test="@foren.Ognl@isExists(_parameter, 'REPORT_YN')">
                 , REPORT_YN      = #{REPORT_YN}
                 </if>
                 <if test="@foren.Ognl@isExists(_parameter, 'GRADE')">
                 , GRADE          = #{GRADE}
                 </if>
                 , INSERT_DB_USER = #{S_USER_ID}
                 , UPDATE_DB_USER = #{S_USER_ID}
                 , UPDATE_DB_TIME = SYSDATETIME
                 
             WHERE DOC_ID         = #{DOC_ID}
    </update>
    
    <delete id="s_hum304ukrServiceImpl_KOCIS.deleteDetail" parameterType="Map">     /* 삭제 */
        --Hum304ukr.CHum304UKR1[fnHum304Save] Query02
        DELETE FROM HUM740T 
         WHERE DOC_ID = #{DOC_ID}
    </delete>
    
    
    <insert id="s_hum304ukrServiceImpl_KOCIS.insertExcelHum740t_xls" parameterType="Map">       /* 엑셀insert */
        INSERT INTO HUM740t_XLS
             ( _EXCEL_JOBID
             , _EXCEL_ROWNUM
             , _EXCEL_HAS_ERROR
             , _EXCEL_ERROR_MSG
             , NAME   
             , EDU_TITLE     
             , EDU_FR_DATE   
             , EDU_TO_DATE   
             , EDU_TIME      
             , EDU_ORGAN     
             , EDU_NATION    
             , EDU_GUBUN     
             , EDU_GRADES    
             , EDU_AMT       
             , REPORT_YN     
             , GRADE         
             , UPDATE_DB_USER
             , UPDATE_DB_TIME
             , COMP_CODE     
             ) 
        VALUES
             ( #{_EXCEL_JOBID}
             , #{_EXCEL_ROWNUM}
             , #{_EXCEL_HAS_ERROR,jdbcType=VARCHAR}
             , #{_EXCEL_ERROR,jdbcType=VARCHAR}
             , #{NAME}
             , #{EDU_TITLE}  
             , #{EDU_FR_DATE}   
             , #{EDU_TO_DATE}    
             , #{EDU_TIME}       
             , #{EDU_ORGAN}     
             , #{EDU_NATION}     
             , #{EDU_GUBUN}  
             , #{EDU_GRADES}     
             , #{EDU_AMT}        
             , #{REPORT_YN}  
             , #{GRADE} 
             , #{S_USER_ID}
             , SYSDATETIME
             , #{S_COMP_CODE}
             )
    </insert>

    <select id="s_hum304ukrServiceImpl_KOCIS.selectExcelUploadSheet1" parameterType="Map" resultType="rMap">    /* 엑셀업로드 버튼 / 조회 */
        /* 데이터 조회 */    
            SELECT A._EXCEL_JOBID
                 , A._EXCEL_ROWNUM
                 , A._EXCEL_HAS_ERROR
                 , A._EXCEL_ERROR_MSG
                 , A.NAME   
                 , B.PERSON_NUMB
                 , A.EDU_TITLE  
                 , A.EDU_FR_DATE
                 , A.EDU_TO_DATE    
                 , A.EDU_TIME       
                 , A.EDU_ORGAN
                 , A.EDU_NATION 
                 , A.EDU_GUBUN  
                 , A.EDU_GRADES 
                 , A.EDU_AMT        
                 , A.REPORT_YN  
                 , A.GRADE      
                 , A.UPDATE_DB_USER 
                 , A.UPDATE_DB_TIME 
                 , A.COMP_CODE 
              FROM HUM740T_XLS  A
              
              LEFT JOIN HUM100T B   ON B.COMP_CODE = #{S_COMP_CODE}
                                              AND A.NAME      = B.NAME
                                   
                                   
             WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
            ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
    </select>

    <update id="excelValidate" >    /* 엑셀validation */
        
    UPDATE   HUM740T_XLS A
    SET 
            A._EXCEL_HAS_ERROR = (CASE WHEN     A.NAME             IS NULL                 -- 성명
                                                                OR A.EDU_TITLE        IS NULL                 -- 교육명
                                                                OR A.EDU_FR_DATE   IS NULL  THEN 'Y'      -- 교육시작일
                                        
                                                       ELSE A._EXCEL_HAS_ERROR                      -- 필수값 체크
                                                END)
         , A._EXCEL_ERROR_MSG = (CASE WHEN  A.NAME IS NULL OR A.EDU_TITLE IS NULL OR A.EDU_FR_DATE IS NULL THEN '필수입력 값을 확인 해주세요.'
                                                       ELSE  A._EXCEL_ERROR_MSG 
                                              END);
    
                        
    UPDATE HUM740T_XLS A 
    SET  A._EXCEL_HAS_ERROR = (CASE WHEN '18891231' &gt; A.EDU_FR_DATE
                                                            OR '18891231' &gt; A.EDU_TO_DATE
                                                            OR '30000101' &lt; A.EDU_FR_DATE
                                                            OR '30000101' &lt; A.EDU_TO_DATE   THEN 'Y' -- 교육시작일 / 교육종료일이 1900~2999 만 설정하게 함
                                                      ELSE A._EXCEL_HAS_ERROR                       -- 필수값 체크
                                              END)                       
       ,  A._EXCEL_ERROR_MSG = (CASE WHEN  '18891231' &gt; A.EDU_FR_DATE
                                                            OR '18891231' &gt; A.EDU_TO_DATE
                                                            OR '30000101' &lt; A.EDU_FR_DATE
                                                            OR '30000101' &lt; A.EDU_TO_DATE  THEN '연도는 (1900 ~ 2999) 년 범위내의 값만 입력 할 수 있습니다.'
                                                     ELSE A._EXCEL_ERROR_MSG 
                                             END);
                                 

    
    UPDATE   HUM740T_XLS A 
    LEFT JOIN HUM100T B  ON B.COMP_CODE =#{S_COMP_CODE}
                                    AND B.NAME          = A.NAME    
    SET 
            A._EXCEL_HAS_ERROR = (CASE WHEN B.NAME   IS NULL THEN 'Y'       -- HUM100 사번 체크
                                                       ELSE A._EXCEL_HAS_ERROR                  -- 필수값 체크
                                               END)                      
        ,   A._EXCEL_ERROR_MSG = (CASE WHEN B.NAME   IS NULL  THEN '인사정보에 없는 성명이 존재합니다.'
                                                       ELSE A._EXCEL_ERROR_MSG 
                                               END);

    </update>
    
    
    
    <select id="s_hum304ukrServiceImpl_KOCIS.selectExcelUploadApply" parameterType="Map" resultType="rMap"> /* 엑셀업로드 버튼 / 조회 */
        /* 데이터 조회 */    
            SELECT A._EXCEL_JOBID
                 , A._EXCEL_ROWNUM
                 , A._EXCEL_HAS_ERROR
                 , A._EXCEL_ERROR_MSG
                 , A.NAME   
                 , B.PERSON_NUMB
                 , B.DIV_CODE
                 , B.DEPT_NAME
                 , B.POST_CODE
                 , A.EDU_TITLE  
                 , A.EDU_FR_DATE
                 , A.EDU_TO_DATE    
                 , A.EDU_TIME       
                 , A.EDU_ORGAN
                 , A.EDU_NATION 
                 , A.EDU_GUBUN  
                 , A.EDU_GRADES 
                 , A.EDU_AMT        
                 , A.REPORT_YN  
                 , A.GRADE      
                 , A.UPDATE_DB_USER 
                 , A.UPDATE_DB_TIME 
                 , A.COMP_CODE 
              FROM HUM740T_XLS A
              LEFT JOIN HUM100T B   ON B.COMP_CODE = #{S_COMP_CODE}
                                               AND A.NAME      = B.NAME
              
             WHERE _EXCEL_JOBID = #{_EXCEL_JOBID}
            ORDER BY _EXCEL_JOBID, _EXCEL_ROWNUM
    </select>
</mapper>