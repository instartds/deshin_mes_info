<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_ass600skrServiceImpl_KOCIS">
	
	<select id="s_ass600skrServiceImpl_KOCIS.selectList" parameterType="Map" resultType="rMap">
		/*UArpt02Krv.CASS600SKR, [FNASS600NQ] Query1*/
		SELECT A.ITEM_CD
		     , A.ACCNT
		     , A.ASST
		     , A.ASST_NAME
		     , NVL(A.SPEC, '') 												   AS SPEC
		     , C.DIV_NAME
		     , NVL((SELECT TREE_NAME 
		                 FROM BSA210T  
		                WHERE COMP_CODE	= A.COMP_CODE
		                  AND TREE_CODE	= A.DEPT_CODE), '') 				   AS DEPT_NAME 
		     --, NVL(A.DEPT_NAME, '') 										   AS DEPT_NAME
		     , NVL(D.PJT_NAME, '')											   AS PJT_NAME
		     , NVL(A.ACQ_Q, 0) 												   AS ACQ_Q
		     , NVL(A.STOCK_Q, 0) 											   AS STOCK_Q
			 , CAST(A.DRB_YEAR AS INT)										   AS DRB_YEAR
		     , NVL(A.ACQ_DATE, '')     										   AS ACQ_DATE
		     , NVL(A.ACQ_AMT_I    , 0 )                                        AS ACQ_AMT_I
		     , NVL(A.FOR_ACQ_AMT_I, 0 )                                        AS FOR_ACQ_AMT_I
		     , NVL(N2.CODE_NAME   , '')                                        AS DPR_STS2
		     , NVL(A.DPR_YYYYMM, '')   										   AS DPR_YYYYMM
		     , NVL(N3.CODE_NAME   , '')                                        AS WASTE_SW
		     , NVL(A.WASTE_YYYYMM, '') 										   AS WASTE_YYYYMM
		     , A.SALE_MANAGE_COST
		     , A.PRODUCE_COST
		     , A.SALE_COST
		     , NVL(E.COST_POOL_NAME, '')                                       AS COST_POOL_NAME
		     , CASE WHEN NVL(A.COST_DIRECT, '') = 'Y' THEN N1.CODE_NAME
		            ELSE ''
		       END                                                             AS COST_DIRECT
		     , NVL(M1.LEVEL_NAME, '')                                          AS ITEMLEVEL1_NAME
		     , NVL(M2.LEVEL_NAME, '')                                          AS ITEMLEVEL2_NAME
		     , NVL(M3.LEVEL_NAME, '')                                          AS ITEMLEVEL3_NAME
		     , NVL(G.CUSTOM_NAME, '')                                          AS CUSTOM_NAME
		     , NVL(H.NAME, '')                                                 AS PERSON_NAME
		     , NVL(A.PLACE_INFO , '')                                          AS PLACE_INFO
		     , NVL(A.SERIAL_NO  , '')                                          AS SERIAL_NO
		     , NVL(A.BAR_CODE   , '')                                          AS BAR_CODE
		     , NVL(A.REMARK     , '')                                          AS REMARK
		     , NVL(A.UPDATE_DB_USER     , '')                                  AS UPDATE_DB_USER 
			 , K.USER_NAME													   AS NAME			/* 처분담당자 */
			 	
		     , A.ITEM_NM
		     , A.ASS_STATE
     		 , A.REASON_NM
     		 , A.ITEM_USE
		     , B.PROCESS_GUBUN
     		 
		  FROM ASS300T 			  A 
               LEFT  JOIN ASS500T B  
		                              ON A.ASST      		= B.ASST
		                             AND A.COMP_CODE 		= B.COMP_CODE
		       INNER JOIN BOR120T C   ON A.COMP_CODE        = C.COMP_CODE
		                             AND A.DIV_CODE         = C.DIV_CODE
		       LEFT  JOIN BCM600T D   ON A.COMP_CODE        = D.COMP_CODE
		                             AND A.PJT_CODE         = D.PJT_CODE
		       LEFT  JOIN CBM600T E   ON E.COMP_CODE        = A.COMP_CODE
		                             AND E.COST_POOL_CODE   = A.COST_POOL_CODE
		       LEFT  JOIN BCM100T G   ON G.COMP_CODE        = A.COMP_CODE
		                             AND G.CUSTOM_CODE      = A.CUSTOM_CODE
		       LEFT  JOIN HUM100T H   ON H.COMP_CODE        = A.COMP_CODE
		                             AND H.PERSON_NUMB      = A.PERSON_NUMB
		       LEFT  JOIN BPR000T M1  ON M1.COMP_CODE       = A.COMP_CODE
		                             AND M1.LEVEL1         != '*'
		                             AND M1.LEVEL1          = A.ITEM_LEVEL1
		                             AND M1.LEVEL2          = '*'
		                             AND M1.LEVEL3          = '*'
		       LEFT  JOIN BPR000T M2  ON M2.COMP_CODE       = A.COMP_CODE
		                             AND M2.LEVEL1         != '*'
		                             AND M2.LEVEL1          = A.ITEM_LEVEL1
		                             AND M2.LEVEL2         != '*'
		                             AND M2.LEVEL2          = A.ITEM_LEVEL2
		                             AND M2.LEVEL3          = '*'
		       LEFT  JOIN BPR000T M3  ON M3.COMP_CODE       = A.COMP_CODE
		                             AND M3.LEVEL1         != '*'
		                             AND M3.LEVEL1          = A.ITEM_LEVEL1
		                             AND M3.LEVEL2         != '*'
		                             AND M3.LEVEL2          = A.ITEM_LEVEL2
		                             AND M3.LEVEL3         != '*'
		                             AND M3.LEVEL3          = A.ITEM_LEVEL3
		       LEFT  JOIN BSA100T N1  ON N1.COMP_CODE       = A.COMP_CODE
		                             AND N1.MAIN_CODE       = 'B010'
		                             AND N1.SUB_CODE        = A.COST_DIRECT
		       LEFT  JOIN BSA100T N2  ON N2.COMP_CODE       = A.COMP_CODE
		                             AND N2.MAIN_CODE       = 'A035'
		                             AND N2.SUB_CODE        = A.DPR_STS2
		       LEFT  JOIN BSA100T N3  ON N3.COMP_CODE       = A.COMP_CODE
		                             AND N3.MAIN_CODE       = 'B010'
		                             AND N3.SUB_CODE        = A.WASTE_SW
		       LEFT JOIN BSA300T K    ON K.COMP_CODE 		= A.COMP_CODE
									 AND Upper(K.USER_ID)	= Upper(A.UPDATE_DB_USER)
		 WHERE A.COMP_CODE = #{S_COMP_CODE}
		   AND NVL(B.PROCESS_GUBUN, '') IS NULL
		
			<if test="@foren.Ognl@isNotEmpty(ASSET_CODE)">
		   AND A.ASST &gt;= #{ASSET_CODE}
			</if>
			<if test="@foren.Ognl@isNotEmpty(ASSET_CODE2)">
		   AND A.ASST &lt;= #{ASSET_CODE2}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">					
			AND A.DEPT_CODE = #{DEPT_CODE}								
			</if>
	 		<if test="@foren.Ognl@isNotEmpty(ITEM_CD)">
		    AND A.ITEM_CD = #{ITEM_CD}
		    </if>
	 
	 <!-- 추가검색 내용(필요시 가져다 쓰면 됨 -->
	 		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
		    AND A.ACCNT &gt;= #{ACCNT_CODE}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE2)">
		    AND A.ACCNT &lt;= #{ACCNT_CODE2}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(DPR_STS2)">
		    AND NVL(A.DPR_STS2,'') = #{DPR_STS2}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(AC_PROJECT_CODE)">
		    AND A.PJT_CODE &gt;= #{AC_PROJECT_CODE}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(AC_PROJECT_CODE2)">
		    AND A.PJT_CODE &lt;= #{AC_PROJECT_CODE2}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(DRB_YEAR_FR)">
		   AND A.DRB_YEAR &gt;= #{DRB_YEAR_FR}
		   </if>
			<if test="@foren.Ognl@isNotEmpty(DRB_YEAR_TO)">
		   AND A.DRB_YEAR &lt;= #{DRB_YEAR_TO}
		   </if>
			<if test="@foren.Ognl@isNotEmpty(ACQ_AMT_I_FR)">
		   AND NVL(A.ACQ_AMT_I,0.0) &gt;= #{ACQ_AMT_I_FR}
		   </if>
			<if test="@foren.Ognl@isNotEmpty(ACQ_AMT_I_TO)">
		   AND NVL(A.ACQ_AMT_I,0.0) &lt;= #{ACQ_AMT_I_TO}
		   </if>
			<if test="@foren.Ognl@isNotEmpty(FOR_ACQ_AMT_I_FR)">
		   AND NVL(A.FOR_ACQ_AMT_I,0.0) &gt;= #{FOR_ACQ_AMT_I_FR}
		   </if>
			<if test="@foren.Ognl@isNotEmpty(FOR_ACQ_AMT_I_TO)">
		   AND NVL(A.FOR_ACQ_AMT_I,0.0) &lt;= #{FOR_ACQ_AMT_I_TO}
		   </if>
			<if test="@foren.Ognl@isNotEmpty(ACQ_DATE_FR)">
		    AND A.ACQ_DATE &gt;= #{ACQ_DATE_FR}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(ACQ_DATE_TO)">
		    AND A.ACQ_DATE &lt;= #{ACQ_DATE_TO}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(USE_DATE_FR)">
		    AND A.USE_DATE &gt;= #{USE_DATE_FR}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(USE_DATE_TO)">
		    AND A.USE_DATE &lt;= #{USE_DATE_TO}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(DPR_YYYYMM_FR)">
		    AND A.DPR_YYYYMM &gt;= #{DPR_YYYYMM_FR}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(DPR_YYYYMM_TO)">
		    AND A.DPR_YYYYMM &lt;= #{DPR_YYYYMM_TO}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(WASTE_YYYYMM_FR)">
		    AND A.WASTE_YYYYMM &gt;= #{WASTE_YYYYMM_FR}
		    </if>
			<if test="@foren.Ognl@isNotEmpty(WASTE_YYYYMM_TO)">
		    AND A.WASTE_YYYYMM &lt;= #{WASTE_YYYYMM_TO}
		    </if>
			<if test="WASTE_SW == &quot;Y&quot;">	    
		    AND A.WASTE_SW = 'Y'
			</if>
					<if test="WASTE_SW == &quot;N&quot;">	    
		    AND A.WASTE_SW = 'N'
			</if>
		 ORDER BY A.ACCNT, A.ASST
	</select>
	
	
	
	
	<select id="s_ass600skrServiceImpl_KOCIS.selectList_BACKUP" parameterType="Map" resultType="rMap">
		/*UArpt02Krv.CASS600SKR, [FNASS600NQ] Query1*/
	SELECT A.ACCNT
	     , B.ACCNT_NAME
	     , A.ASST
	     , A.ASST_NAME
	     , NVL(A.SPEC, '') 												  AS SPEC
	     , C.DIV_NAME
	     , NVL(A.DEPT_NAME, '') 											  AS DEPT_NAME
	     , NVL(D.PJT_NAME, '')											  AS  PJT_NAME
	     , NVL(A.ACQ_Q, 0) 												  AS ACQ_Q
	     , NVL(A.STOCK_Q, 0) 											  AS STOCK_Q
	     , CONVERT(NVARCHAR, NVL(A.DRB_YEAR, 0))							  AS DRB_YEAR
	     , NVL(A.ACQ_DATE, '')     										  AS ACQ_DATE
	     , NVL(A.ACQ_AMT_I    , 0 )                                        AS ACQ_AMT_I
	     , NVL(A.FOR_ACQ_AMT_I, 0 )                                        AS FOR_ACQ_AMT_I
	     , NVL(N2.CODE_NAME   , '')                                        AS DPR_STS2
	     , NVL(A.DPR_YYYYMM, '')   										  AS DPR_YYYYMM
	     , NVL(N3.CODE_NAME   , '')                                        AS WASTE_SW
	     , NVL(A.WASTE_YYYYMM, '') 										  AS WASTE_YYYYMM
	     , A.SALE_MANAGE_COST
	     , A.PRODUCE_COST
	     , A.SALE_COST
	     , NVL(E.COST_POOL_NAME, '')                                       AS COST_POOL_NAME
	     , CASE WHEN NVL(A.COST_DIRECT, '') = 'Y' THEN N1.CODE_NAME
	            ELSE ''
	       END                                                                AS COST_DIRECT
	     , NVL(M1.LEVEL_NAME, '')                                          AS ITEMLEVEL1_NAME
	     , NVL(M2.LEVEL_NAME, '')                                          AS ITEMLEVEL2_NAME
	     , NVL(M3.LEVEL_NAME, '')                                          AS ITEMLEVEL3_NAME
	     , NVL(G.CUSTOM_NAME, '')                                          AS CUSTOM_NAME
	     , NVL(H.NAME, '')                                                 AS PERSON_NAME
	     , NVL(A.PLACE_INFO , '')                                          AS PLACE_INFO
	     , NVL(A.SERIAL_NO  , '')                                          AS SERIAL_NO
	     , NVL(A.BAR_CODE   , '')                                          AS BAR_CODE
	     , NVL(A.REMARK     , '')                                          AS REMARK
	     , NVL(A.UPDATE_DB_USER     , '')                                  AS UPDATE_DB_USER 
		 , K.USER_NAME														  AS NAME			/* 처분담당자 */	
	  FROM ASS300T A 
	       INNER JOIN ABA400T B   ON A.COMP_CODE        = B.COMP_CODE
	                             AND A.ACCNT            = B.ACCNT
	       INNER JOIN BOR120T C   ON A.COMP_CODE        = C.COMP_CODE
	                             AND A.DIV_CODE         = C.DIV_CODE
	       LEFT  JOIN BCM600T D   ON A.COMP_CODE        = D.COMP_CODE
	                             AND A.PJT_CODE         = D.PJT_CODE
	       LEFT  JOIN CBM600T E   ON E.COMP_CODE        = A.COMP_CODE
	                             AND E.COST_POOL_CODE   = A.COST_POOL_CODE
	       LEFT  JOIN BCM100T G   ON G.COMP_CODE        = A.COMP_CODE
	                             AND G.CUSTOM_CODE      = A.CUSTOM_CODE
	       LEFT  JOIN HUM100T H   ON H.COMP_CODE        = A.COMP_CODE
	                             AND H.PERSON_NUMB      = A.PERSON_NUMB
	       LEFT  JOIN BPR000T M1  ON M1.COMP_CODE       = A.COMP_CODE
	                             AND M1.LEVEL1         != '*'
	                             AND M1.LEVEL1          = A.ITEM_LEVEL1
	                             AND M1.LEVEL2          = '*'
	                             AND M1.LEVEL3          = '*'
	       LEFT  JOIN BPR000T M2  ON M2.COMP_CODE       = A.COMP_CODE
	                             AND M2.LEVEL1         != '*'
	                             AND M2.LEVEL1          = A.ITEM_LEVEL1
	                             AND M2.LEVEL2         != '*'
	                             AND M2.LEVEL2          = A.ITEM_LEVEL2
	                             AND M2.LEVEL3          = '*'
	       LEFT  JOIN BPR000T M3  ON M3.COMP_CODE       = A.COMP_CODE
	                             AND M3.LEVEL1         != '*'
	                             AND M3.LEVEL1          = A.ITEM_LEVEL1
	                             AND M3.LEVEL2         != '*'
	                             AND M3.LEVEL2          = A.ITEM_LEVEL2
	                             AND M3.LEVEL3         != '*'
	                             AND M3.LEVEL3          = A.ITEM_LEVEL3
	       LEFT  JOIN BSA100T N1  ON N1.COMP_CODE       = A.COMP_CODE
	                             AND N1.MAIN_CODE       = 'B010'
	                             AND N1.SUB_CODE        = A.COST_DIRECT
	       LEFT  JOIN BSA100T N2  ON N2.COMP_CODE       = A.COMP_CODE
	                             AND N2.MAIN_CODE       = 'A035'
	                             AND N2.SUB_CODE        = A.DPR_STS2
	       LEFT  JOIN BSA100T N3  ON N3.COMP_CODE       = A.COMP_CODE
	                             AND N3.MAIN_CODE       = 'B010'
	                             AND N3.SUB_CODE        = A.WASTE_SW
	       LEFT JOIN BSA300T K    ON K.COMP_CODE 		= A.COMP_CODE
								 AND Upper(K.USER_ID)	= Upper(A.UPDATE_DB_USER)
	 WHERE A.COMP_CODE = #{S_COMP_CODE}
		<if test="@foren.Ognl@isNotEmpty(ASSET_CODE)">
	   AND A.ASST &gt;= #{ASSET_CODE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ASSET_CODE2)">
	   AND A.ASST &lt;= #{ASSET_CODE2}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE)">
	    AND A.ACCNT &gt;= #{ACCNT_CODE}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(ACCNT_CODE2)">
	    AND A.ACCNT &lt;= #{ACCNT_CODE2}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">					
		AND     A.DIV_CODE IN
		<foreach collection="DIV_CODE" item="item" separator="," close=")" open="(">
			#{item}
		</foreach>									
	  </if>
		<if test="@foren.Ognl@isNotEmpty(DPR_STS2)">
	    AND NVL(A.DPR_STS2,'') = #{DPR_STS2}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(AC_PROJECT_CODE)">
	    AND A.PJT_CODE &gt;= #{AC_PROJECT_CODE}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(AC_PROJECT_CODE2)">
	    AND A.PJT_CODE &lt;= #{AC_PROJECT_CODE2}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(DRB_YEAR_FR)">
	   AND A.DRB_YEAR &gt;= #{DRB_YEAR_FR}
	   </if>
		<if test="@foren.Ognl@isNotEmpty(DRB_YEAR_TO)">
	   AND A.DRB_YEAR &lt;= #{DRB_YEAR_TO}
	   </if>
		<if test="@foren.Ognl@isNotEmpty(ACQ_AMT_I_FR)">
	   AND NVL(A.ACQ_AMT_I,0.0) &gt;= #{ACQ_AMT_I_FR}
	   </if>
		<if test="@foren.Ognl@isNotEmpty(ACQ_AMT_I_TO)">
	   AND NVL(A.ACQ_AMT_I,0.0) &lt;= #{ACQ_AMT_I_TO}
	   </if>
		<if test="@foren.Ognl@isNotEmpty(FOR_ACQ_AMT_I_FR)">
	   AND NVL(A.FOR_ACQ_AMT_I,0.0) &gt;= #{FOR_ACQ_AMT_I_FR}
	   </if>
		<if test="@foren.Ognl@isNotEmpty(FOR_ACQ_AMT_I_TO)">
	   AND NVL(A.FOR_ACQ_AMT_I,0.0) &lt;= #{FOR_ACQ_AMT_I_TO}
	   </if>
		<if test="@foren.Ognl@isNotEmpty(ACQ_DATE_FR)">
	    AND A.ACQ_DATE &gt;= #{ACQ_DATE_FR}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(ACQ_DATE_TO)">
	    AND A.ACQ_DATE &lt;= #{ACQ_DATE_TO}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(USE_DATE_FR)">
	    AND A.USE_DATE &gt;= #{USE_DATE_FR}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(USE_DATE_TO)">
	    AND A.USE_DATE &lt;= #{USE_DATE_TO}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(DPR_YYYYMM_FR)">
	    AND A.DPR_YYYYMM &gt;= #{DPR_YYYYMM_FR}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(DPR_YYYYMM_TO)">
	    AND A.DPR_YYYYMM &lt;= #{DPR_YYYYMM_TO}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(WASTE_YYYYMM_FR)">
	    AND A.WASTE_YYYYMM &gt;= #{WASTE_YYYYMM_FR}
	    </if>
		<if test="@foren.Ognl@isNotEmpty(WASTE_YYYYMM_TO)">
	    AND A.WASTE_YYYYMM &lt;= #{WASTE_YYYYMM_TO}
	    </if>
		<if test="WASTE_SW == &quot;Y&quot;">	    
 		AND A.WASTE_SW = 'Y'
		</if>
		<if test="WASTE_SW == &quot;N&quot;">	    
 		AND A.WASTE_SW = 'N'
		</if>
 
 
	 ORDER BY A.ACCNT, ASST
	</select>
</mapper>