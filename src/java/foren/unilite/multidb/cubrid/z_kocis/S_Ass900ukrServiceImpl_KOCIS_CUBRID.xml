<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="s_ass900ukrServiceImpl_KOCIS">

	<select id="s_ass900ukrServiceImpl_KOCIS.selectMaster" parameterType="Map" resultType="rMap">
		/* s_ass900ukrServiceImpl_KOCIS.selectMaster - 미술품정보 조회 */
		SELECT A.ITEM_CODE
			 , A.ITEM_NM
			 , A.DEPT_CODE
			 , A.TREE_NAME																				AS DEPT_NAME
			 , A.ADDR
			 , A.APP_USER
			 , A.ACQ_AMT_I
			 , A.EXPECT_AMT_I
			 , A.INSUR_YN
			 , A.OPEN_YN
			 , A.REMARK
			 , A.ITEM_DESC
			 , A.ITEM_GBN
			 , A.AUTHOR
			 , A.AUTHOR_HO
			 , A.ITEM_DIR
			 , A.PURCHASE_WHY
			 , A.VALUE_GUBUN
			 , A.ITEM_STATE
			 , A.PURCHASE_DATE
			 , A.ESTATE_AMT_I
			 , A.SALES_AMT_I
			 , A.FIRST_CHECK_YN
			 , A.FIRST_CHECK_DATE
			 , A.FIRST_CHECK_DESC
			 , A.FIRST_CHECK_USR
			 , A.SECOND_CHECK_YN
			 , A.SECOND_CHECK_DATE
			 , A.SECOND_CHECK_DESC
			 , A.SECOND_CHECK_USR
			 , A.CLOSING_YEAR
			 , A.SPEC
			 , SUBSTR(A.SPEC, 1, INSTR(A.SPEC, 'x') - 1)												AS X_LENGTH
			 , SUBSTR(A.SPEC, INSTR(A.SPEC, 'x') + 1, INSTR(A.SPEC, 'x', -1)-1 - INSTR(A.SPEC, 'x'))	AS Y_LENGTH
			 , SUBSTR(A.SPEC, INSTR(A.SPEC, 'x', -1) + 1)												AS Z_LENGTH
			 , A.IMAGE_DIR
			 , A.INSERT_DB_USER
			 , A.INSERT_DB_TIME
			 , A.UPDATE_DB_USER
			 , A.UPDATE_DB_TIME 
			 , TO_CHAR( A.UPDATE_DB_TIME ) 																AS CHANGE_YN 
		FROM (
				SELECT X.ITEM_CODE
					 , X.ITEM_NM
					 , X.DEPT_CODE
					 , Y.TREE_NAME
					 , X.ADDR
					 , X.APP_USER
					 , X.ACQ_AMT_I
					 , X.EXPECT_AMT_I
					 , X.INSUR_YN
					 , X.OPEN_YN
					 , X.REMARK
					 , X.ITEM_DESC
					 , X.ITEM_GBN
					 , X.AUTHOR
					 , X.AUTHOR_HO
					 , X.ITEM_DIR
					 , X.PURCHASE_WHY
					 , X.VALUE_GUBUN
					 , X.ITEM_STATE
					 , X.PURCHASE_DATE
					 , X.ESTATE_AMT_I
					 , X.SALES_AMT_I
					 , X.FIRST_CHECK_YN
					 , X.FIRST_CHECK_DATE
					 , X.FIRST_CHECK_DESC
					 , X.FIRST_CHECK_USR
					 , X.SECOND_CHECK_YN
					 , X.SECOND_CHECK_DATE
					 , X.SECOND_CHECK_DESC
					 , X.SECOND_CHECK_USR
					 , X.SPEC
					 , X.CLOSING_YEAR
					 , X.IMAGE_DIR
					 , X.INSERT_DB_USER
					 , X.INSERT_DB_TIME
					 , X.UPDATE_DB_USER
					 , X.UPDATE_DB_TIME 
				FROM	  ASS600T	AS X
			   INNER JOIN BSA210T	AS Y ON Y.TREE_CODE = X.DEPT_CODE
		<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">    
			   WHERE ITEM_CODE = #{ITEM_CODE}
		</if>		
			 ) A
	</select>
	
	<insert id="s_ass900ukrServiceImpl_KOCIS.insertForm" parameterType="Map">
		/* s_ass900ukrServiceImpl_KOCIS.insertForm - 미술품정보 등록 */
		INSERT INTO ASS600T 
		     ( 
				  ITEM_CODE
				, ITEM_NM
				, DEPT_CODE
		<if test="@foren.Ognl@isNotEmpty(ADDR)">    
				, ADDR
		</if>
				, APP_USER
		<if test="@foren.Ognl@isNotEmpty(ACQ_AMT_I)">    
				, ACQ_AMT_I
		</if>
		<if test="@foren.Ognl@isNotEmpty(EXPECT_AMT_I)">    
				, EXPECT_AMT_I
		</if>
				, INSUR_YN
				, OPEN_YN
		<if test="@foren.Ognl@isNotEmpty(REMARK)">    
				, REMARK
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_DESC)">    
				, ITEM_DESC
		</if>
				, ITEM_GBN
				, AUTHOR
		<if test="@foren.Ognl@isNotEmpty(AUTHOR_HO)">    
				, AUTHOR_HO
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_DIR)">    
				, ITEM_DIR
		</if>
		<if test="@foren.Ognl@isNotEmpty(PURCHASE_WHY)">    
				, PURCHASE_WHY
		</if>
		<if test="@foren.Ognl@isNotEmpty(VALUE_GUBUN)">    
				, VALUE_GUBUN
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_STATE)">    
				, ITEM_STATE
		</if>
				, PURCHASE_DATE
		<if test="@foren.Ognl@isNotEmpty(ESTATE_AMT_I)">    
				, ESTATE_AMT_I
		</if>
				, SALES_AMT_I
		<if test="@foren.Ognl@isNotEmpty(FIRST_CHECK_YN)">    
				, FIRST_CHECK_YN
		</if>
		<if test="@foren.Ognl@isNotEmpty(FIRST_CHECK_DATE)">    
				, FIRST_CHECK_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(FIRST_CHECK_DESC)">    
				, FIRST_CHECK_DESC
		</if>
		<if test="@foren.Ognl@isNotEmpty(FIRST_CHECK_USR)">    
				, FIRST_CHECK_USR
		</if>
		<if test="@foren.Ognl@isNotEmpty(SECOND_CHECK_YN)">    
				, SECOND_CHECK_YN
		</if>
		<if test="@foren.Ognl@isNotEmpty(SECOND_CHECK_DATE)">    
				, SECOND_CHECK_DATE
		</if>
		<if test="@foren.Ognl@isNotEmpty(SECOND_CHECK_DESC)">    
				, SECOND_CHECK_DESC
		</if>
		<if test="@foren.Ognl@isNotEmpty(SECOND_CHECK_USR)">    
				, SECOND_CHECK_USR
		</if>
		<if test="@foren.Ognl@isNotEmpty(SPEC)">    
				, SPEC
		</if>
				, CLOSING_YEAR
				, INSERT_DB_USER
				, INSERT_DB_TIME
				, UPDATE_DB_USER
				, UPDATE_DB_TIME
		     ) 
		VALUES
			(  
				  #{ITEM_CODE}
				, #{ITEM_NM}
				, #{DEPT_CODE}
		<if test="@foren.Ognl@isNotEmpty(ADDR)">    
				, #{ADDR}
		</if>
				, #{APP_USER}
		<if test="@foren.Ognl@isNotEmpty(ACQ_AMT_I)">    
				, #{ACQ_AMT_I}
		</if>
		<if test="@foren.Ognl@isNotEmpty(EXPECT_AMT_I)">    
				, #{EXPECT_AMT_I}
		</if>
				, #{INSUR_YN}
				, #{OPEN_YN}
		<if test="@foren.Ognl@isNotEmpty(REMARK)">    
				, #{REMARK}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_DESC)">    
				, #{ITEM_DESC}
		</if>
				, #{ITEM_GBN}
				, #{AUTHOR}
		<if test="@foren.Ognl@isNotEmpty(AUTHOR_HO)">    
				, #{AUTHOR_HO}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_DIR)">    
				, #{ITEM_DIR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(PURCHASE_WHY)">    
				, #{PURCHASE_WHY}
		</if>
		<if test="@foren.Ognl@isNotEmpty(VALUE_GUBUN)">    
				, #{VALUE_GUBUN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(ITEM_STATE)">    
				, #{ITEM_STATE}
		</if>
				, #{PURCHASE_DATE}
		<if test="@foren.Ognl@isNotEmpty(ESTATE_AMT_I)">    
				, #{ESTATE_AMT_I}
		</if>
				, #{SALES_AMT_I}
		<if test="@foren.Ognl@isNotEmpty(FIRST_CHECK_YN)">    
				, #{FIRST_CHECK_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(FIRST_CHECK_DATE)">    
				, #{FIRST_CHECK_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(FIRST_CHECK_DESC)">    
				, #{FIRST_CHECK_DESC}
		</if>
		<if test="@foren.Ognl@isNotEmpty(FIRST_CHECK_USR)">    
				, #{FIRST_CHECK_USR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SECOND_CHECK_YN)">    
				, #{SECOND_CHECK_YN}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SECOND_CHECK_DATE)">    
				, #{SECOND_CHECK_DATE}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SECOND_CHECK_DESC)">    
				, #{SECOND_CHECK_DESC}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SECOND_CHECK_USR)">    
				, #{SECOND_CHECK_USR}
		</if>
		<if test="@foren.Ognl@isNotEmpty(SPEC)">    
				, #{SPEC}
		</if>
				, #{CLOSING_YEAR}
				, #{S_USER_ID}
				, SYSDATETIME
				, #{S_USER_ID}
				, SYSDATETIME
		     )			
	</insert>
	
	<update id="s_ass900ukrServiceImpl_KOCIS.updateForm" parameterType="Map">
		/* s_ass900ukrServiceImpl_KOCIS.updateForm - 미술품정보 수정 */
	   UPDATE ASS600T
		  SET ITEM_CODE			= #{ITEM_CODE}
	  		, ITEM_NM			= #{ITEM_NM}
	  		, DEPT_CODE			= #{DEPT_CODE}
	  		, ADDR				= #{ADDR}
	  		, APP_USER			= #{APP_USER}
	  		, ACQ_AMT_I			= #{ACQ_AMT_I}
	  		, EXPECT_AMT_I		= #{EXPECT_AMT_I}
	  		, INSUR_YN			= #{INSUR_YN}
	  		, OPEN_YN			= #{OPEN_YN}
	  		, REMARK			= #{REMARK}
	  		, ITEM_DESC			= #{ITEM_DESC}
	  		, ITEM_GBN			= #{ITEM_GBN}
	  		, AUTHOR			= #{AUTHOR}
	  		, AUTHOR_HO			= #{AUTHOR_HO}
	  		, ITEM_DIR			= #{ITEM_DIR}
	  		, PURCHASE_WHY		= #{PURCHASE_WHY}
	  		, VALUE_GUBUN		= #{VALUE_GUBUN}
	  		, ITEM_STATE		= #{ITEM_STATE}
	  		, PURCHASE_DATE		= #{PURCHASE_DATE}
	  		, ESTATE_AMT_I		= #{ESTATE_AMT_I}
	  		, SALES_AMT_I		= #{SALES_AMT_I}
	  		, FIRST_CHECK_YN	= #{FIRST_CHECK_YN}
	  		, FIRST_CHECK_DATE	= #{FIRST_CHECK_DATE}
	  		, FIRST_CHECK_DESC	= #{FIRST_CHECK_DESC}
	  		, FIRST_CHECK_USR	= #{FIRST_CHECK_USR}
	  		, SECOND_CHECK_YN	= #{SECOND_CHECK_YN}
	  		, SECOND_CHECK_DATE	= #{SECOND_CHECK_DATE}
	  		, SECOND_CHECK_DESC	= #{SECOND_CHECK_DESC}
	  		, SECOND_CHECK_USR	= #{SECOND_CHECK_USR}
	  		, SPEC				= #{SPEC}
			, CLOSING_YEAR		= #{CLOSING_YEAR}
			, UPDATE_DB_USER	= #{S_USER_ID}
			, UPDATE_DB_TIME	= SYSDATETIME
		     
		WHERE ITEM_CODE	= #{ITEM_CODE}
	</update>
	
	<update id="s_ass900ukrServiceImpl_KOCIS.deleteForm" parameterType="Map">
		/* s_ass900ukrServiceImpl_KOCIS.deleteForm - 미술품정보 삭제 */
		DELETE FROM ASS600T 
		 WHERE ITEM_CODE = #{ITEM_CODE}
		  
	</update>

	<select id="s_ass900ukrServiceImpl_KOCIS.beforeInsertCheck" parameterType="Map" resultType="rMap">
		/* s_ass900ukrServiceImpl_KOCIS.beforeSaveCheck */
		    SET     @COMP_CODE  		= #{S_COMP_CODE};
		    SET     @ITEM_CODE  		= #{ITEM_CODE};
		    SET     @ITEM_NM            = #{ITEM_NM}
		    SET     @ITEM_GBN           = #{ITEM_GBN}
		    SET     @AUTHOR             = #{AUTHOR}
		    SET     @PURCHASE_DATE      = #{PURCHASE_DATE}
			SET     @ACQ_AMT_I          = #{ACQ_AMT_I}
			
			DO (
			    --1. 자산코드 존재여부 확인
			    SELECT 	@ExistsYn	:= COUNT(*)
			    FROM    ASS600T AS A 
			    WHERE   A.ITEM_NM		= @ITEM_NM
			    AND		A.ITEM_GBN		= @ITEM_GBN
			    AND		A.AUTHOR		= @AUTHOR
			    AND		A.PURCHASE_DATE	= @PURCHASE_DATE
			    AND		A.ACQ_AMT_I		= @ACQ_AMT_I
		    )
	        
			SELECT @ExistsYn AS EXIST_YN
	</select>
	
	<select id="s_ass900ukrServiceImpl_KOCIS.beforeSaveCheck" parameterType="Map" resultType="rMap">
		/* s_ass900ukrServiceImpl_KOCIS.beforeSaveCheck */
		    SET     @COMP_CODE  = #{S_COMP_CODE};
		    SET     @ITEM_CODE  = #{ITEM_CODE};
			
			DO (
			    --1. 자산코드 존재여부 확인
			    SELECT 	@ExistsYn	:= COUNT(*)
			    FROM    ASS600T AS A 
			    WHERE   A.ITEM_CODE = @ITEM_CODE
		    )
	        
			SELECT @ExistsYn AS EXIST_YN
	</select>
	
	<select id="s_ass900ukrServiceImpl_KOCIS.getMaxNum" parameterType="Map" resultType="rMap">
		/* s_ass900ukrServiceImpl_KOCIS.makeAutoNum */
            SET		@DEPT_CODE		= #{DEPT_CODE}
            SET     @MaxITEM_CODE   = '';
	
			DO(
	            SELECT  @MaxITEM_CODE    := MAX(NVL(A.ITEM_CODE, ''))
	            FROM    ASS600T AS A 
	            WHERE	A.DEPT_CODE		= @DEPT_CODE
			)
			
            SET     @MaxITEM_CODE    := NVL(@MaxITEM_CODE, '');
			
			SELECT @MaxITEM_CODE AS MAX_ITEM_CODE
	</select>

	<!-- 첫 번째 채번의 경우 -->	
	<select id="s_ass900ukrServiceImpl_KOCIS.autoNum1" parameterType="Map" resultType="string">
		/* s_ass900ukrServiceImpl_KOCIS.makeAutoNum */
		    SET     @DEPT_CODE		= #{DEPT_CODE};
		    SET		@PURCHASE_DATE	= #{PURCHASE_DATE}
		    SET     @AutoNo			= '';
	
            SET 	@AutoNo = @DEPT_CODE + LEFT(@PURCHASE_DATE, 4) + RIGHT('0000000000' + '1', 5)
            
            SELECT @AutoNo AS AUTO_NUM
	</select>
	
	<!-- 첫 번째 채번 이외의 경우 -->	
	<select id="s_ass900ukrServiceImpl_KOCIS.autoNum2" parameterType="Map" resultType="string">
		/* s_ass900ukrServiceImpl_KOCIS.makeAutoNum */
		    SET     @DEPT_CODE 		= #{DEPT_CODE};
		    SET		@PURCHASE_DATE	= #{PURCHASE_DATE}
		    SET     @MaxITEM_CODE   = '';
	
			DO(
	            SELECT  @MaxITEM_CODE    := MAX(NVL(A.ITEM_CODE, ''))
	            FROM    ASS600T AS A 
	            WHERE	A.DEPT_CODE		= @DEPT_CODE
			)
			
            SET @MaxITEM_CODE= NVL(@MaxITEM_CODE, '');
            
            SET @MaxSeq = TO_NUMBER(RIGHT(@MaxITEM_CODE, 5))
            SET @AutoNo = @DEPT_CODE + LEFT(@PURCHASE_DATE, 4) + RIGHT('00000' + TO_CHAR(@MaxSeq + 1), 5)
            
            SELECT @DEPT_CODE + LEFT(@PURCHASE_DATE, 4) + RIGHT('00000' + TO_CHAR(@MaxSeq + 1), 5) AS AUTO_NUM
	</select>
	
	
	
	<!-- 사진업로드 후, 등록자정보 update -->	
	<update id="s_ass900ukrServiceImpl_KOCIS.photoModified" parameterType="Map">	
		/* s_ass900ukrServiceImpl_KOCIS.photoModified */
		UPDATE ASS600T
		   SET IMAGE_DIR		= #{IMAGE_DIR}
		   	 , UPDATE_DB_USER	= #{S_USER_ID}  
			 , UPDATE_DB_TIME	= SYSDATETIME
		     
		WHERE ITEM_CODE	= #{ITEM_CODE}
	</update>
</mapper>