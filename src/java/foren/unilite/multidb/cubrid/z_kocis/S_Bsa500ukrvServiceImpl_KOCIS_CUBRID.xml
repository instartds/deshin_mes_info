<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bsa500ukrvService">
    
    <select id="bsa500ukrvService.selectList" parameterType="Map" resultType="rMap">
    /* bsa500ukrvService.selectList */
    /* bsa500ukrv.Cbsa500ukrv[fnBsa500QRef] Query01 */
    SELECT MAX(A.PGM_SEQ) PGM_SEQ                                
         , A.PGM_ID                                              
         , MAX(A.PGM_NAME) AS PGM_NAME                    
                        
         , A.AUTHO_TYPE                                          
         , A.AUTHO_PGM                                           
        , NVL(REF_CODE1, '') AS REF_CODE         
         , '' AS AUTHO_ID                                        
         , A.COMP_CODE  
         , #{USER_ID} AS USER_ID
         ,  '0'                     AS PGM_LEVEL
         ,  '1'                     AS PGM_LEVEL2
         ,  #{S_USER_NAME}            AS UPDATE_MAN                                       
      FROM            BSA400T  A   
      LEFT OUTER JOIN BSA100T  B  ON B.COMP_CODE = 'MASTER'            
                                 AND B.MAIN_CODE = 'BS02'                            
                                 AND B.SUB_CODE  = A.AUTHO_TYPE                                          
     WHERE A.TYPE      &lt; '9'                                     
       AND A.COMP_CODE = #{COMP_CODE}                     
       AND A.PGM_ID NOT IN (SELECT PGM_ID                        
                              FROM BSA500T                        
                             WHERE COMP_CODE = #{COMP_CODE}
                               AND USER_ID   = #{USER_ID} )
       <if test="@foren.Ognl@isNotEmpty(PGM_SEQ)">
       AND A.PGM_SEQ     = #{PGM_SEQ}
       </if>
       <if test="@foren.Ognl@isNotEmpty(PGM_ID)">
       AND A.PGM_ID   LIKE #{PGM_ID} + '%'
       </if>
       <if test="@foren.Ognl@isNotEmpty(PGM_NAME)">
       AND A.PGM_NAME LIKE  '%' +#{PGM_NAME} + '%'
       </if>
     GROUP BY A.PGM_ID, A.AUTHO_TYPE, A.AUTHO_PGM, A.COMP_CODE
     ORDER BY A.PGM_ID

    </select>
    
    <select id="bsa500ukrvService.selectProgramList" parameterType="Map" resultType="rMap">
    /* bsa500ukrvService.selectProgramList */
    /* bsa500ukrv.Cbsa500ukrv[fnBsa500QStd] Query01 */
    SELECT A.PGM_ID                                             
         , MAX(B.PGM_NAME)    AS PGM_NAME                        
         , MAX(B.PGM_NAME_EN) AS PGM_NAME_EN                     
         , MAX(B.PGM_NAME_CN) AS PGM_NAME_CN                     
         , MAX(B.PGM_NAME_JP) AS PGM_NAME_JP                     
         , MAX(A.PGM_LEVEL)   AS PGM_LEVEL                       
         , MAX(A.PGM_LEVEL2)  AS PGM_LEVEL2                      
         , (SELECT SUB_CODE
              FROM BSA100T                                      
             WHERE COMP_CODE = A.COMP_CODE                      
               AND MAIN_CODE = B.BS02_REF_CODE1
               AND NVL(SUB_CODE,'')  = NVL(A.AUTHO_USER,'')) AS AUTHO_USER    
         , A.UPDATE_MAN                                         
         , A.UPDATE_DATE                                        
         , B.AUTHO_TYPE                                         
         , B.AUTHO_PGM                                          
         , B.BS02_REF_CODE1  AS REF_CODE        
         , MAX(A.AUTHO_USER) AS AUTHO_ID                        
         , A.COMP_CODE   
         , A.USER_ID   AS USER_ID                                      
      FROM            BSA500T A                                             
           INNER JOIN (
                        SELECT T1.*, NVL(T2.REF_CODE1, '') AS BS02_REF_CODE1
                          FROM             BSA400T T1
                          LEFT OUTER JOIN BSA100T T2  ON  T1.COMP_CODE = T2.COMP_CODE
                                                     AND T2.MAIN_CODE = 'BS02'
                                                     AND T2.SUB_CODE  = NVL(CASE WHEN T1.AUTHO_TYPE IS NULL THEN '1' ELSE T1.AUTHO_TYPE END, '1')
                            ) B  ON B.COMP_CODE = A.COMP_CODE                            
                                AND B.PGM_ID    = A.PGM_ID                               
     WHERE A.COMP_CODE   = #{COMP_CODE}
       AND A.USER_ID     = #{USER_ID}
       <if test="@foren.Ognl@isNotEmpty(PGM_SEQ)">
       AND B.PGM_SEQ     = #{PGM_SEQ}
       </if>
       <if test="@foren.Ognl@isNotEmpty(PGM_ID)">
       AND A.PGM_ID   LIKE #{PGM_ID} + '%'
       </if>
       <if test="@foren.Ognl@isNotEmpty(PGM_NAME)">
       AND B.PGM_NAME LIKE '%'+ #{PGM_NAME} + '%'
       </if>
     GROUP BY A.PGM_ID   , A.AUTHO_USER, A.UPDATE_MAN, A.UPDATE_DATE, B.AUTHO_TYPE
            , B.AUTHO_PGM, A.COMP_CODE, A.USER_ID
     ORDER BY A.PGM_ID

    </select>
    
    <update id="bsa500ukrvService.insertPrograms" parameterType="Map">
        /* bsa500ukrvService.insertPrograms */
        INSERT INTO BSA500T
           (COMP_CODE
           ,USER_ID
           ,PGM_ID
           ,PGM_LEVEL
           ,UPDATE_MAN
           ,UPDATE_DATE
           ,PGM_LEVEL2
           ,AUTHO_USER
           ,INSERT_DB_USER
           ,INSERT_DB_TIME
           ,UPDATE_DB_USER
           ,UPDATE_DB_TIME)
     VALUES
           (#{COMP_CODE}
           ,#{USER_ID}
           ,#{PGM_ID}
           ,#{PGM_LEVEL}
           ,#{UPDATE_MAN}
           ,NOW()
           ,#{PGM_LEVEL2}
           ,#{AUTHO_USER}
           ,#{S_USER_ID}
           ,NOW()
           ,#{S_USER_ID}
           ,NOW())
    </update>
    <update id="bsa500ukrvService.deletePrograms" parameterType="Map">
        /* bsa500ukrvService.deletePrograms */
        DELETE FROM BSA500T 
        WHERE COMP_CODE=#{COMP_CODE}
          AND PGM_ID = #{PGM_ID}
          AND USER_ID = #{USER_ID}
    </update>
    <update id="bsa500ukrvService.updatePrograms" parameterType="Map">
        /* bsa500ukrvService.updatePrograms */
        UPDATE BSA500T 
            SET PGM_LEVEL  = #{PGM_LEVEL},
            PGM_LEVEL2     = #{PGM_LEVEL2},
            AUTHO_USER     = #{AUTHO_USER},
            UPDATE_DB_USER = #{S_USER_ID},
            UPDATE_DB_TIME = NOW()
        WHERE COMP_CODE = #{COMP_CODE}
          AND PGM_ID    = #{PGM_ID}
          AND USER_ID   = #{USER_ID}
    </update>
</mapper>