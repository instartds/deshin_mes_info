<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb800skrServiceImpl">
<select id="afb800skrServiceImpl.selectBudgName" parameterType="Map" resultType="rMap">		/* BUDG_NAME 컬럼수*/
--UAccntPopupKrv.CAccntPopupKR[fnGetBudgCode] Query02
<!-- BEGIN -->
    <!-- DECLARE         @COMP_CODE          NVARCHAR(08) -->

--  [ 변수 값 할당 ] ------------------------------------------------------------------------------------------
    SET @COMP_CODE  = #{S_COMP_CODE}

--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
    SELECT  CODE_NAME
    FROM    fnGetBudgLevelName(@COMP_CODE, '')
<!-- END	 -->
</select>	
	
<select id="afb800skrServiceImpl.selectList" parameterType="Map" resultType="rMap">		/* 메인*/
--afb800skr.Cafb800skr[fnAfb800Qstd] QUERY03
<!-- BEGIN -->


--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
    SET @COMP_CODE    = #{S_COMP_CODE}
    SET @IN_DRAFT_NO  = #{DRAFTER}

--  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
    <!-- DECLARE         @DateFormat         NVARCHAR(10) -->
    DO(
        select * from (
            SELECT @DateFormat := M1.CODE_NAME
            FROM   BSA100T M1 
            WHERE  M1.COMP_CODE = @COMP_CODE
            AND    M1.MAIN_CODE = 'B044'
            AND    M1.REF_CODE1 = 'Y'
        )  TOPT where rownum = 1
    )

    SET @DateFormat = NVL(@DateFormat, 'YYYY/MM/DD')

--  [ 그룹웨어 연동여부 설정 ] ----------------------------------------------------------------------------------------
    <!-- DECLARE         @LinkedGW           NVARCHAR(01) -->
    DO(
        select * from (
            SELECT @LinkedGW := M1.REF_CODE1
            FROM   BSA100T M1 
            WHERE  M1.COMP_CODE = @COMP_CODE
            AND    M1.MAIN_CODE = 'A169'
            AND    M1.SUB_CODE  = '20'
        )  TOPT where rownum = 1
    )

    SET @LinkedGW = NVL(@LinkedGW, '')

--  [ 임시 테이블 처리 ] ----------------------------------------------------------------------------------------------
    <!-- DECLARE     @TypeKey                NVARCHAR(20) -->

    SET @TypeKey  = REPLACE(REPLACE(REPLACE(REPLACE(TO_CHAR(SYSDATETIME, 'YYYY-MM-DD HH24:MM:SS.FF'), '-', ''), ':', ''), '.', ''), ' ', '')


        delete from T_AFB800SKR1 WHERE  TYPE_KEY NOT LIKE LEFT(@TypeKey, 8) + '%'
   <!--  END -->

--  [ 데이터 생성 ] ---------------------------------------------------------------------------------------------------
    -- 1. 상세내역 데이터 생성
    INSERT  INTO T_AFB800SKR1(TYPE_KEY, TYPE_FLAG, COMP_CODE, ORDER_SEQ, STATUS, IN_DRAFT_NO, IN_DATE, SLIP_DATE, TITLE, TOT_AMT_I
                            , BUDG_CODE, BUDG_NAME, ACCNT, ACCNT_NAME, PJT_NAME, INOUT_DATE, IN_AMT_I, CUSTOM_CODE, CUSTOM_NAME, AGENT_TYPE
                            , BILL_GUBUN, PROOF_DIVI, BILL_DATE, BILL_REMARK, ACCNT_GUBUN, SAVE_CODE, SAVE_NAME, BANK_ACCOUNT, BANK_NAME, REMARK, IF_CODE
                            , DIV_CODE, DIV_NAME, DEPT_CODE, DEPT_NAME, EX_DATE, EX_NUM, AP_STS, GWIF_ID)
    SELECT TYPE_KEY, TYPE_FLAG, COMP_CODE, ORDER_SEQ, STATUS, IN_DRAFT_NO, IN_DATE, SLIP_DATE, TITLE, TOT_AMT_I
                            , BUDG_CODE, BUDG_NAME, ACCNT, ACCNT_NAME, PJT_NAME, INOUT_DATE, IN_AMT_I, CUSTOM_CODE, CUSTOM_NAME, AGENT_TYPE
                            , BILL_GUBUN, PROOF_DIVI, BILL_DATE, BILL_REMARK, ACCNT_GUBUN, SAVE_CODE, SAVE_NAME, fnCipherDecrypt(BANK_ACCOUNT, '') AS BANK_ACCOUNT
                            , BANK_NAME, REMARK, IF_CODE
                            , DIV_CODE, DIV_NAME, DEPT_CODE, DEPT_NAME, EX_DATE, EX_NUM, AP_STS, GWIF_ID
    FROM (
    
    SELECT  
            @TypeKey                                                                    AS TYPE_KEY
          , '0'                                                                        AS TYPE_FLAG
          , A.COMP_CODE                                                                 AS COMP_CODE
          , ROW_NUMBER() OVER (ORDER BY A.IN_DATE, A.IN_DRAFT_NO, B.SEQ)                AS ORDER_SEQ
          , M4.CODE_NAME                                                                AS STATUS
          , A.IN_DRAFT_NO                                                               AS IN_DRAFT_NO
          , A.IN_DATE                                                                   AS IN_DATE
          , CASE WHEN NVL(A.SLIP_DATE, '') = '' THEN ''
                 ELSE REPLACE(
                      REPLACE(
                      REPLACE(@DateFormat, 'YYYY', SUBSTR(A.SLIP_DATE, 1, 4))
                                         , 'MM'  , SUBSTR(A.SLIP_DATE, 5, 2))
                                         , 'DD'  , SUBSTR(A.SLIP_DATE, 7, 2))
            END                                                                         AS SLIP_DATE
          , A.TITLE                                                                     AS TITLE
          , A.TOT_AMT_I                                                                 AS TOT_AMT_I
          , B.BUDG_CODE                                                                 AS BUDG_CODE
          , D.BUDG_NAME                                                                 AS BUDG_NAME
          , B.ACCNT                                                                     AS ACCNT
          , C2.ACCNT_NAME                                                               AS ACCNT_NAME
          , C3.PJT_NAME                                                                 AS PJT_NAME
          , CASE WHEN NVL(B.INOUT_DATE, '') = '' THEN ''
                 ELSE REPLACE(
                      REPLACE(
                      REPLACE(@DateFormat, 'YYYY', SUBSTR(B.INOUT_DATE, 1, 4))
                                         , 'MM'  , SUBSTR(B.INOUT_DATE, 5, 2))
                                         , 'DD'  , SUBSTR(B.INOUT_DATE, 7, 2))
            END                                                                         AS INOUT_DATE
          , B.IN_AMT_I                                                                  AS IN_AMT_I
          , B.CUSTOM_CODE                                                               AS CUSTOM_CODE
          , C1.CUSTOM_NAME                                                              AS CUSTOM_NAME
          , M3.CODE_NAME                                                                AS AGENT_TYPE
          , M5.CODE_NAME                                                                AS BILL_GUBUN
          , M6.CODE_NAME                                                                AS PROOF_DIVI
          , CASE WHEN NVL(B.BILL_DATE, '') = '' THEN ''
                 ELSE REPLACE(
                      REPLACE(
                      REPLACE(@DateFormat, 'YYYY', SUBSTR(B.BILL_DATE, 1, 4))
                                         , 'MM'  , SUBSTR(B.BILL_DATE, 5, 2))
                                         , 'DD'  , SUBSTR(B.BILL_DATE, 7, 2))
            END                                                                         AS BILL_DATE
          , M7.CODE_NAME                                                                AS BILL_REMARK
          , M2.CODE_NAME                                                                AS ACCNT_GUBUN
          , B.SAVE_CODE                                                                 AS SAVE_CODE
          , C4.SAVE_NAME                                                                AS SAVE_NAME
          --, fnCipherDecrypt(C4.BANK_ACCOUNT, '')                                AS BANK_ACCOUNT
          , C4.BANK_ACCOUNT                                AS BANK_ACCOUNT
          , C6.CUSTOM_NAME                                                              AS BANK_NAME
          , B.REMARK                                                                    AS REMARK
          , NVL(M8.CODE_NAME, '')                                                    AS IF_CODE
          , B.DIV_CODE                                                                  AS DIV_CODE
          , C5.DIV_NAME                                                                 AS DIV_NAME
          , B.DEPT_CODE                                                                 AS DEPT_CODE
          , C7.TREE_NAME                                                                AS DEPT_NAME
          , CASE WHEN NVL(A.EX_DATE, '') = '' THEN ''
                 ELSE REPLACE(
                      REPLACE(
                      REPLACE(@DateFormat, 'YYYY', SUBSTR(A.EX_DATE, 1, 4))
                                         , 'MM'  , SUBSTR(A.EX_DATE, 5, 2))
                                         , 'DD'  , SUBSTR(A.EX_DATE, 7, 2))
            END                                                                         AS EX_DATE
          , A.EX_NUM                                                                    AS EX_NUM
          , M1.CODE_NAME                                                                AS AP_STS
          , C.GWIF_ID                                                                   AS GWIF_ID
    FROM                AFB800T   A  
            INNER JOIN  AFB810T   B   ON B.COMP_CODE           = A.COMP_CODE
                                                  AND B.IN_DRAFT_NO         = A.IN_DRAFT_NO
            LEFT  JOIN  T_GWIF    C   ON C.GWIF_KEY1           = A.COMP_CODE
                                                  AND C.GWIF_KEY2           = '79'
                                                  AND C.GWIF_KEY3           = A.IN_DRAFT_NO

            LEFT  JOIN  BCM100T   C1  ON C1.COMP_CODE          = B.COMP_CODE
                                                  AND C1.CUSTOM_CODE        = B.CUSTOM_CODE
            LEFT  JOIN  ABA400T   C2  ON C2.COMP_CODE          = B.COMP_CODE
                                                  AND C2.ACCNT              = B.ACCNT
            LEFT  JOIN  BCM600T   C3  ON C3.COMP_CODE          = B.COMP_CODE
                                                  AND C3.PJT_CODE           = B.PJT_CODE
            LEFT  JOIN  AFS100T   C4  ON C4.COMP_CODE          = B.COMP_CODE
                                                  AND C4.SAVE_CODE          = B.SAVE_CODE
            LEFT  JOIN  BOR120T   C5  ON C5.COMP_CODE          = B.COMP_CODE
                                                  AND C5.DIV_CODE           = B.DIV_CODE
            LEFT  JOIN  BCM100T   C6  ON C6.COMP_CODE          = C4.COMP_CODE
                                                  AND C6.CUSTOM_CODE        = C4.BANK_CODE
            LEFT  JOIN  BSA210T   C7  ON C7.COMP_CODE          = B.COMP_CODE
                                                  AND C7.TREE_CODE          = B.DEPT_CODE
            LEFT  JOIN  (
                        SELECT D.* FROM AFB800T   A  
                        INNER JOIN  AFB810T   B   ON B.COMP_CODE           = A.COMP_CODE
                                                  AND B.IN_DRAFT_NO         = A.IN_DRAFT_NO
                        INNER  JOIN  AFB400T   D   ON D.COMP_CODE           = B.COMP_CODE
                                                  AND D.AC_YYYY             = fnGetBudgAcYyyy(A.COMP_CODE, A.IN_DATE)
                                                  AND D.BUDG_CODE           = B.BUDG_CODE
                        )   D               ON D.COMP_CODE           = B.COMP_CODE
                                            AND D.BUDG_CODE           = B.BUDG_CODE
                                                  
                                                  
                                                  
                                                  
            LEFT  JOIN  HUM100T   D1  ON D1.COMP_CODE          = A.COMP_CODE
                                                  AND D1.PERSON_NUMB        = A.DRAFTER
            LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE          = B.COMP_CODE
                                                  AND M1.MAIN_CODE          = 'A014'
                                                  --AND M1.SUB_CODE           = E.AP_STS
            LEFT  JOIN  BSA100T   M2  ON M2.COMP_CODE          = B.COMP_CODE
                                                  AND M2.MAIN_CODE          = 'A171'
                                                  AND M2.SUB_CODE           = A.ACCNT_GUBUN
            LEFT  JOIN  BSA100T   M3  ON M3.COMP_CODE          = C1.COMP_CODE
                                                  AND M3.MAIN_CODE          = 'B055'
                                                  AND M3.SUB_CODE           = C1.AGENT_TYPE
            LEFT  JOIN  BSA100T   M4  ON M4.COMP_CODE          = A.COMP_CODE
                                                  AND M4.MAIN_CODE          = 'A134'
                                                  AND M4.SUB_CODE           = CASE WHEN @LinkedGW = 'Y' THEN NVL(C.GW_STATUS, '0')
                                                                                   ELSE A.STATUS
                                                                              END
            LEFT  JOIN  BSA100T   M5  ON M5.COMP_CODE          = B.COMP_CODE
                                                  AND M5.MAIN_CODE          = 'A183'
                                                  AND M5.SUB_CODE           = B.BILL_GUBUN
            LEFT  JOIN  BSA100T   M6  ON M6.COMP_CODE          = B.COMP_CODE
                                                  AND M6.MAIN_CODE          = 'A184'
                                                  AND M6.SUB_CODE           = B.PROOF_DIVI
            LEFT  JOIN  BSA100T   M7  ON M7.COMP_CODE          = B.COMP_CODE
                                                  AND M7.MAIN_CODE          = 'A185'
                                                  AND M7.SUB_CODE           = B.BILL_REMARK
            LEFT  JOIN  BSA100T   M8  ON M8.COMP_CODE          = D.COMP_CODE
                                                  AND M8.MAIN_CODE          = 'A199'
                                                  AND M8.SUB_CODE           = D.IF_CODE
    WHERE   A.COMP_CODE        = #{S_COMP_CODE}
    AND     A.IN_DATE      &gt;= #{IN_DATE_FR}
    AND     A.IN_DATE      &lt;= #{IN_DATE_TO}
    <if test="@foren.Ognl@isNotEmpty(DRAFTER)">
    AND     A.DRAFTER       LIKE #{DRAFTER}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DRAFT_NAME)">
    AND     D1.NAME         LIKE #{DRAFT_NAME}
    </if>
    <if test="@foren.Ognl@isNotEmpty(ACCNT_GUBUN)">
    AND     A.ACCNT_GUBUN      = #{ACCNT_GUBUN}
    </if>
    <if test="@foren.Ognl@isNotEmpty(BUDG_CODE)">
    AND     D.BUDG_CODE     LIKE #{BUDG_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(TITLE)">
    AND     A.TITLE         LIKE #{TITLE}
    </if>
    <if test="STATUS == &quot;0&quot;">
    AND     NVL(C.GW_STATUS, A.STATUS)  = #{STATUS}
    </if>
    <if test="STATUS == &quot;1&quot;">
    AND     NVL(C.GW_STATUS, A.STATUS)  = #{STATUS}
    </if>
    <if test="STATUS == &quot;5&quot;">
    AND     NVL(C.GW_STATUS, A.STATUS)  = #{STATUS}
    </if>
    <if test="STATUS == &quot;9&quot;">
    AND     NVL(C.GW_STATUS, A.STATUS)  = #{STATUS}
    </if>
    <if test="@foren.Ognl@isNotEmpty(ACCNT_DIV_CODE)">					
    AND     B.DIV_CODE IN
		<foreach collection="ACCNT_DIV_CODE" item="item" separator="," close=")" open="(">
		 #{item}
		</foreach>									
 	</if>
    <if test="@foren.Ognl@isNotEmpty(DEPT_CODE)">
    AND     B.DEPT_CODE     LIKE #{DEPT_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DEPT_NAME)">
    AND     B.DEPT_NAME     LIKE #{DEPT_NAME}
    </if>
    <if test="@foren.Ognl@isNotEmpty(PJT_CODE)">
    AND     B.PJT_CODE      LIKE #{PJT_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(PJT_NAME)">
    AND     C3.PJT_NAME     LIKE #{PJT_NAME}
    </if>
    <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
    AND     B.CUSTOM_CODE   LIKE #{CUSTOM_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(CUSTOM_NAME)">
    AND     C1.CUSTOM_NAME  LIKE #{CUSTOM_NAME}
    </if>
    <if test="@foren.Ognl@isNotEmpty(SAVE_CODE)">
    AND     B.SAVE_CODE     LIKE #{SAVE_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(SAVE_NAME)">
    AND     C4.SAVE_NAME    LIKE #{SAVE_NAME}
    </if>
    <if test="@foren.Ognl@isNotEmpty(AGENT_TYPE)">
    AND     C1.AGENT_TYPE      = #{AGENT_TYPE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(IN_DRAFT_NO)">
    AND     A.IN_DRAFT_NO   LIKE #{IN_DRAFT_NO}
    </if>
    <if test="STOP_CHECK == &quot;1&quot;">
    AND     NVL(C.GW_STATUS, '0') != '5'   -- 반려제외
    </if>
    <if test="@foren.Ognl@isNotEmpty(SLIP_DATE_FR)">
    AND     A.SLIP_DATE       &gt;= #{SLIP_DATE_FR}
    </if>
    <if test="@foren.Ognl@isNotEmpty(SLIP_DATE_TO)">
    AND     A.SLIP_DATE       &lt;= #{SLIP_DATE_TO}
    </if>
    )


--  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
    SELECT  A.TYPE_FLAG
          , A.ORDER_SEQ
          , A.STATUS
          , A.IN_DRAFT_NO
          , CASE WHEN NVL(A.IN_DATE, '') = '' THEN ''
                 ELSE REPLACE(
                      REPLACE(
                      REPLACE(@DateFormat, 'YYYY', SUBSTR(A.IN_DATE , 1, 4))
                                         , 'MM'  , SUBSTR(A.IN_DATE , 5, 2))
                                         , 'DD'  , SUBSTR(A.IN_DATE , 7, 2))
            END                                                                             AS IN_DATE
          , A.SLIP_DATE
          , A.TITLE
          , A.TOT_AMT_I
          , A.BUDG_CODE
          <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
          , C${index+1}.BUDG_NAME                                                           AS BUDG_NAME_${index+1}
          </foreach>
          , A.ACCNT
          , A.ACCNT_NAME
          , A.PJT_NAME
          , A.INOUT_DATE
          , A.IN_AMT_I
          , A.CUSTOM_CODE
          , A.CUSTOM_NAME
          , A.AGENT_TYPE
          , A.BILL_GUBUN
          , A.PROOF_DIVI
          , A.BILL_DATE
          , A.BILL_REMARK
          , A.ACCNT_GUBUN
          , A.SAVE_CODE
          , A.SAVE_NAME
          , A.BANK_ACCOUNT
          , A.BANK_NAME
          , A.REMARK
          , A.IF_CODE
          , A.DIV_CODE
          , A.DIV_NAME
          , A.DEPT_CODE
          , A.DEPT_NAME
          , A.EX_DATE
          , A.EX_NUM
          , A.AP_STS
          , A.GWIF_ID
    FROM                T_AFB800SKR1   A  
            -- 레코드count
            LEFT  JOIN  (
                        select * from  T_AFB800SKR1   A                                                                        
                        INNER  JOIN  AFB400T   C${budgNameInfoList.size} ON C${budgNameInfoList.size}.COMP_CODE  = A.COMP_CODE
                                                                         AND C${budgNameInfoList.size}.AC_YYYY    = fnGetBudgAcYyyy(A.COMP_CODE, A.IN_DATE)
                                                                         AND C${budgNameInfoList.size}.BUDG_CODE  = A.BUDG_CODE                                                             
                        )  C${budgNameInfoList.size}    ON C${budgNameInfoList.size}.COMP_CODE  = A.COMP_CODE 
                                                        AND C${budgNameInfoList.size}.BUDG_CODE  = A.BUDG_CODE                                                          
                                                                         
                                                                         
            -- 레코드index-1
            <foreach collection="budgNameInfoList" item="budgNameInfo" index="index">
           		<if test="index+1 != budgNameInfoList.size">
            	LEFT  JOIN  AFB400T   C${budgNameInfoList.size-(index+1)}  ON C${budgNameInfoList.size-(index+1)}.COMP_CODE  = C${budgNameInfoList.size-(index)}.COMP_CODE    
	                                                           						   AND C${budgNameInfoList.size-(index+1)}.AC_YYYY    = C${budgNameInfoList.size-(index)}.AC_YYYY      
	                                                           						   AND C${budgNameInfoList.size-(index+1)}.BUDG_CODE  = C${budgNameInfoList.size-(index)}.TREE_LEVEL 
            	</if>
            </foreach>
    WHERE   A.TYPE_KEY  = @TypeKey
    ORDER BY A.TYPE_FLAG


<!-- END -->
</select>
</mapper>