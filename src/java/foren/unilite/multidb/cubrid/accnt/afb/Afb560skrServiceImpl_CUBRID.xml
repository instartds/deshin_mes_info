<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb560skrServiceImpl">
<select id="afb560skrServiceImpl.selectBudgName" parameterType="Map" resultType="rMap">		/* BUDG_NAME 컬럼수*/
--UAccntPopupKrv.CAccntPopupKR[fnGetBudgCode] Query02
<!-- BEGIN -->
    <!-- DECLARE         @COMP_CODE          NVARCHAR(08) -->

--  [ 변수 값 할당 ] ------------------------------------------------------------------------------------------
    SET @COMP_CODE  = #{S_COMP_CODE}
--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
    SELECT  *
    FROM    fnGetBudgLevelName(@COMP_CODE, #{ST_DATE})
<!-- END	 -->

<!-- SP생성필요 -->

</select>	

<select id="afb560skrServiceImpl.selectDeptBudg" parameterType="Map" resultType="rMap">		/* 부서정보, 예산현황 조회*/
--afb500skr.Cafb500skr[fnAfb500QStd] Query03
SELECT CASE WHEN NVL(B.DEPT_CODE, '') = '' THEN NVL(E.BUDG_TREE_CODE, A.DEPT_CODE)
            ELSE NVL(F.BUDG_TREE_CODE, B.DEPT_CODE)
       END                          AS DEPT_CODE2
     , M1.REF_CODE2                 AS CHARGE_GUBUN      --현업부서구분(1:회계부서, 2:현업부서)
     , NVL(M2.REF_CODE1, 'Y')    AS ACCDEPT_GUBUN     --예산현황_실적부서 구분여부
     , NVL(M3.REF_CODE1, 'N')    AS ACCDEPT_USEYN     --예산현황_사용예산코드만 조회
  FROM            BSA300T AS A  
       LEFT  JOIN HUM100T AS B   ON B.COMP_CODE    = A.COMP_CODE
                                             AND B.PERSON_NUMB  = A.PERSON_NUMB
       LEFT  JOIN BSA210T AS E   ON E.COMP_CODE    = A.COMP_CODE
                                             AND E.TREE_CODE    = A.DEPT_CODE
       LEFT  JOIN BSA210T AS F   ON F.COMP_CODE    = B.COMP_CODE
                                             AND F.TREE_CODE    = B.DEPT_CODE
       LEFT  JOIN BSA100T AS M1  ON M1.COMP_CODE   = A.COMP_CODE
                                             AND M1.MAIN_CODE   = 'A009'
                                             AND M1.REF_CODE1   = A.USER_ID
       LEFT  JOIN BSA100T AS M2  ON M2.COMP_CODE   = A.COMP_CODE
                                             AND M2.MAIN_CODE   = 'A169'
                                             AND M2.SUB_CODE    = '60'
       LEFT  JOIN BSA100T AS M3  ON M3.COMP_CODE   = A.COMP_CODE
                                             AND M3.MAIN_CODE   = 'A169'
                                             AND M3.SUB_CODE    = '61'

 WHERE A.COMP_CODE = #{S_COMP_CODE}
   AND A.USER_ID   = #{S_USER_ID}
</select>

<select id="afb560skrServiceImpl.selectAmtPoint" parameterType="Map" resultType="rMap">
--afb540skr.Cafb540skr[fnAfb540QStd]Query01                  
SELECT AMT_POINT
 FROM ABA100T     
WHERE COMP_CODE = #{S_COMP_CODE}
</select>

<select id="afb560skrServiceImpl.selectRefCode1" parameterType="Map" resultType="rMap">
SELECT REF_CODE1 
  FROM BSA100T 
 WHERE COMP_CODE = #{S_COMP_CODE}
   AND MAIN_CODE = 'B042' 
   AND SUB_CODE  = #{MONEY_UNIT}
</select>
	
<select id="afb560skrServiceImpl.selectList" parameterType="Map" resultType="rMap">		/* 메인*/
--afb560skr.Cafb560skr[fnAfb560QStd] Query02
<!-- BEGIN -->

          
            SET @slUnit = '1'
            
            DO(
			SELECT @slUnit := REF_CODE1 
			  FROM BSA100T 
			 WHERE COMP_CODE = #{S_COMP_CODE}
			   AND MAIN_CODE = 'B042' 
			   AND SUB_CODE  = #{MONEY_UNIT}
            )

            


            SET @lUnit = @slUnit



    SET @COMP_CODE    = #{S_COMP_CODE}
    SET @BG_YYYY      = #{BG_YYYY}
    SET @BG_DATE_FR   = #{BG_DATE_FR}
    SET @BG_DATE_TO   = #{BG_DATE_TO}
    SET @DV_DATE_FR   = #{DV_DATE_FR}
    SET @DV_DATE_TO   = #{DV_DATE_TO}
    SET @DEPT_CODE    = #{DEPT_CODE}
    SET @BUDG_CODE    = #{BUDG_CODE}
    SET @DV_DEPT_CODE = #{DV_DEPT_CODE}
    SET @DV_BUDG_CODE = #{DV_BUDG_CODE}
    SET @BUGUN        = #{BUGUN}
    SET @LOWER_DEPT   = #{LOWER_DEPT}
    SET @BUDG_TYPE    = #{BUDG_TYPE}

        --부서코드레벨 및 길이 가져오기

        SET @TREE_LEVEL = ''
        
        DO(
        SELECT @TREE_LEVEL := TREE_LEVEL
          FROM BSA210T 
         WHERE COMP_CODE   = @COMP_CODE
           AND TREE_CODE   = @DEPT_CODE
           AND USE_YN      = 'Y'
        )
 
        SET @LEVEL_LEN = ''

        DO(
        SELECT @LEVEL_LEN  := LENGTH(TREE_LEVEL)
          FROM BSA210T 
         WHERE COMP_CODE   = @COMP_CODE
           AND TREE_CODE   = @DEPT_CODE
           AND USE_YN      = 'Y'
        )



SELECT DEPT_NAME
    , BUDG_CODE
    <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
    , AS BUDG_NAME_L${index+1}
    </foreach>
    ,  LEFT(fnGetUserDateComp(@COMP_CODE, BUDG_YYYYMM), 7)  AS BUDG_YYYYMM
    , DIVERT_DIVI
    , DIVERT_BUDG_I
    , LEFT(fnGetUserDateComp(@COMP_CODE, DIVERT_YYYYMM), 7) AS DIVERT_YYYYMM
    , DIVERT_BUDG_CODE
    , DIVERT_BUDG_NAME
    , DIVERT_DEPT_NAME
    , REMARK
    , TREE_LEVEL
FROM 
(
    
    SELECT C.TREE_NAME                   AS DEPT_NAME
         , A.BUDG_CODE                   AS BUDG_CODE
        <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
         , CASE WHEN L${budgNameInfoList.size}.CODE_LEVEL &gt;=  ${index+1}
                THEN L${index+1}.BUDG_NAME
                ELSE ''
            END AS BUDG_NAME_L${index+1}
        </foreach>
         , A.BUDG_YYYYMM  AS BUDG_YYYYMM
         , A.DIVERT_DIVI                   AS DIVERT_DIVI
         , NVL(ROUND(A.DIVERT_BUDG_I / @lUnit ${sSqlAmtPoint},0) AS DIVERT_BUDG_I
         , A.DIVERT_YYYYMM AS DIVERT_YYYYMM
         , A.DIVERT_BUDG_CODE              AS DIVERT_BUDG_CODE
         , B.BUDG_NAME                     AS DIVERT_BUDG_NAME
         , A.DIVERT_DEPT_NAME              AS DIVERT_DEPT_NAME
         , A.REMARK                        AS REMARK
         , C.TREE_LEVEL                    AS TREE_LEVEL
      FROM            AFB520T A 
           LEFT  JOIN AFB400T B  ON B.COMP_CODE        = A.COMP_CODE
                                            AND B.BUDG_CODE        = A.DIVERT_BUDG_CODE
                                            AND B.AC_YYYY          = @BG_YYYY
           LEFT  JOIN BSA210T C  ON A.COMP_CODE        = C.COMP_CODE
                                            AND A.DEPT_CODE        = C.TREE_CODE
        
           LEFT  JOIN AFB400T AS L${budgNameInfoList.size}
                              ON L${budgNameInfoList.size}.COMP_CODE     = A.COMP_CODE
                             AND L${budgNameInfoList.size}.AC_YYYY       = @BG_YYYY
                             AND L${budgNameInfoList.size}.BUDG_CODE     = A.BUDG_CODE
        <foreach collection="budgNameInfoList" item="budgNameInfo" index="index">
    		<if test="index+1 &lt; budgNameInfoList.size">
           LEFT  JOIN AFB400T AS L${budgNameInfoList.size-(index+1)}
                              ON L${budgNameInfoList.size-(index+1)}.COMP_CODE     = L${budgNameInfoList.size-(index)}.COMP_CODE
                             AND L${budgNameInfoList.size-(index+1)}.AC_YYYY       = L${budgNameInfoList.size-(index)}.AC_YYYY
                             AND L${budgNameInfoList.size-(index+1)}.BUDG_CODE     = L${budgNameInfoList.size-(index)}.TREE_LEVEL
                             AND L${budgNameInfoList.size-(index+1)}.CODE_LEVEL    = L${budgNameInfoList.size-(index)}.CODE_LEVEL - 1
        	</if>
    	</foreach>
    
     WHERE A.COMP_CODE      = @COMP_CODE
       AND A.BUDG_YYYYMM   &gt;= @BG_DATE_FR
       AND A.BUDG_YYYYMM   &lt;= @BG_DATE_TO
       AND ((A.DEPT_CODE              = @DEPT_CODE        AND @DEPT_CODE    != '' AND @LOWER_DEPT    != 'Y') OR 
            (C.TREE_LEVEL          LIKE @TREE_LEVEL + '%' AND @DEPT_CODE    != '' AND @LOWER_DEPT     = 'Y') OR
            (@DEPT_CODE               = '' ))
       AND ((A.DIVERT_YYYYMM   &gt;= @DV_DATE_FR    AND @DV_DATE_FR    != '')    OR (@DV_DATE_FR   = ''))
       AND ((A.DIVERT_YYYYMM   &lt;= @DV_DATE_TO    AND @DV_DATE_TO    != '')    OR (@DV_DATE_TO   = ''))
       AND ((A.BUDG_CODE        = @BUDG_CODE     AND @BUDG_CODE     != '')    OR (@BUDG_CODE    = ''))
       AND ((A.DIVERT_BUDG_CODE = @DV_BUDG_CODE  AND @DV_BUDG_CODE  != '')    OR (@DV_BUDG_CODE = ''))
       AND ((A.DIVERT_DEPT_CODE = @DV_DEPT_CODE  AND @DV_DEPT_CODE  != '')    OR (@DV_DEPT_CODE = ''))
       AND ((A.DIVERT_DIVI      = @BUGUN         AND @BUGUN         != '')    OR (@BUGUN        = ''))
       AND ((B.BUDG_TYPE        = @BUDG_TYPE     AND @BUDG_TYPE     != '')    OR (@BUDG_TYPE    = ''))
     ORDER BY A.DEPT_CODE, A.BUDG_CODE
)    

<!-- END -->
</select>

</mapper>