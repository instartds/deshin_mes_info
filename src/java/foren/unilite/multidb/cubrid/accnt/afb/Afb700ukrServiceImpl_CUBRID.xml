<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb700ukrServiceImpl">
	
<select id="afb700ukrServiceImpl.selectRefCode" parameterType="Map" resultType="rMap">	
	--afb600ukr.Cafb600ukr[fnGetReturnCode] Query01
	SELECT  CODE_NAME               AS CODE_NAME
	     ,  SUB_CODE                AS SUB_CODE
	     ,  NVL(REF_CODE5, '')   AS REF_CODE5
	     ,  NVL(REF_CODE6, '')   AS REF_CODE6
	FROM    BSA100T  
	WHERE   COMP_CODE = #{S_COMP_CODE}
	AND     MAIN_CODE = 'A171'
	AND     SUB_CODE  = #{ACCNT_GUBUN}
</select>
	
<select id="afb700ukrServiceImpl.selectCheck1" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qstd] QUERY04
	SELECT  MAX(MAPPING) MAPPING      , MAX(GWIF) GWIF            , MAX(DRAFT_REF) DRAFT_REF     , MAX(DTL_MAX_ROWS) DTL_MAX_ROWS, MAX(CONTENTS) CONTENTS
	     ,  MAX(MULTI_CODE) MULTI_CODE, MAX(TOT_AMT_IN) TOT_AMT_IN, MAX(APP_BTN_USE) APP_BTN_USE , MAX(PEND_CODE_YN) PEND_CODE_YN
	     ,  MAX(CRDT_REF) CRDT_REF    , MAX(PAY_DTL_REF) PAY_DTL_REF
	FROM    (
	        SELECT  CASE WHEN SUB_CODE = '10' THEN UPPER(REF_CODE1) ELSE '' END    AS MAPPING      --지출수입관리 아이디와 1:1 Mapping
	              , CASE WHEN SUB_CODE = '20' THEN UPPER(REF_CODE1) ELSE '' END    AS GWIF         --지출결의_그룹웨어 연동여부
	              , CASE WHEN SUB_CODE = '40' THEN UPPER(REF_CODE1) ELSE '' END    AS DRAFT_REF    --지출결의_예산기안참조 필수여부
	              , CASE WHEN SUB_CODE = '41' THEN UPPER(REF_CODE1) ELSE '' END    AS DTL_MAX_ROWS --지출결의_입력가능행수
	              , CASE WHEN SUB_CODE = '42' THEN UPPER(REF_CODE1) ELSE '' END    AS CONTENTS     --지출결의_내용난 표시여부
	              , CASE WHEN SUB_CODE = '43' THEN UPPER(REF_CODE1) ELSE '' END    AS MULTI_CODE   --지출결의_다중예산코드 입력 허용여부
	              , CASE WHEN SUB_CODE = '44' THEN UPPER(REF_CODE1) ELSE '' END    AS TOT_AMT_IN   --지출결의_지급액 입력여부
	              , CASE WHEN SUB_CODE = '45' THEN UPPER(REF_CODE1) ELSE '' END    AS APP_BTN_USE  --지출결의_지출승인 프로세스 사용
	              , CASE WHEN SUB_CODE = '46' THEN UPPER(REF_CODE1) ELSE '' END    AS PEND_CODE_YN --지출결의_지출결의_지급처구분(pend_code) 사용
	              , CASE WHEN SUB_CODE = '50' THEN UPPER(REF_CODE1) ELSE '' END    AS CRDT_REF     --지출결의_법인카드참조 필수여부
	              , CASE WHEN SUB_CODE = '70' THEN UPPER(REF_CODE1) ELSE '' END    AS PAY_DTL_REF  --지출결의_지급명세서 참조여부
	        FROM    BSA100T 
	        WHERE   COMP_CODE   = #{S_COMP_CODE}
	        AND     MAIN_CODE   = 'A169'
	        AND     SUB_CODE   IN ('10', '20', '40', '41', '42', '43', '44', '45', '46', '50', '70')
    ) T
	
	
</select>

<select id="afb700ukrServiceImpl.selectCheck2" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qstd] QUERY05
	select * from (
        SELECT  SUB_CODE AS ACCNT_GUBUN
    	FROM    BSA100T 
    	WHERE   COMP_CODE   = #{S_COMP_CODE}
    	AND     MAIN_CODE   = 'A171'
    	AND     REF_CODE1   = 'Y'
    	AND    (REF_CODE2   = '0'
    	 OR     REF_CODE2   = '1')
	)  TOPT where rownum = 1
    
</select>

<select id="afb700ukrServiceImpl.selectCheck3" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qstd] QUERY07
	select * from (
        SELECT  SUB_CODE AS CHARGE_CODE, REF_CODE2 AS CHARGE_DIVI
    	FROM    BSA100T 
    	WHERE   COMP_CODE   = #{S_COMP_CODE}
    	AND     MAIN_CODE   = 'A009'
    	AND     REF_CODE1   = #{S_USER_ID}
    )  TOPT where rownum = 1
</select>

<select id="afb700ukrServiceImpl.selectCheck4" parameterType="Map" resultType="rMap">
		--afb600ukr.Cafb600ukr[fnAfb600Qstd] QUERY05
	SELECT  A.PERSON_NUMB, B.NAME
            , NVL(C.BUDG_TREE_CODE, B.DEPT_CODE) DEPT_CODE
            , NVL(C1.TREE_NAME, B.DEPT_NAME) DEPT_NAME
            , B.DIV_CODE
	FROM                BSA300T   A  
	        LEFT  JOIN  HUM100T   B   ON B.COMP_CODE   = A.COMP_CODE
	                                              AND B.PERSON_NUMB = A.PERSON_NUMB
	        LEFT  JOIN  BSA210T   C   ON C.COMP_CODE   = B.COMP_CODE
	                                              AND C.TREE_CODE   = B.DEPT_CODE
	        LEFT  JOIN  BSA210T   C1  ON C1.COMP_CODE  = C.COMP_CODE
	                                              AND C1.TREE_CODE  = C.BUDG_TREE_CODE
	WHERE   A.COMP_CODE = #{S_COMP_CODE}
	AND     A.USER_ID   = #{S_USER_ID}
</select>

<select id="afb700ukrServiceImpl.selectCheck5" parameterType="Map" resultType="rMap">
		--afb700ukr.Cafb700ukr[fnAfb700Qstd] QUERY09
	select * from (
        SELECT  SUB_CODE
    	FROM    BSA100T 
    	WHERE   COMP_CODE   = #{S_COMP_CODE}
    	AND     MAIN_CODE   = 'A179'
    	AND     SUB_CODE    = #{S_USER_ID}
    ) TOPT where rownum = 1
</select>

<select id="afb700ukrServiceImpl.selectCheck6" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qstd] QUERY10
	select * from (
        SELECT  SUB_CODE
    	      , NVL(REF_CODE1, '') AS BIZ_GUBUN
    	FROM    BSA100T 
    	WHERE   COMP_CODE   = #{S_COMP_CODE}
    	AND     MAIN_CODE   = 'A182'
    	AND     REF_CODE2   = 'Y'
    ) TOPT where rownum = 1
</select>

<select id="afb700ukrServiceImpl.selectCheck7" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qstd] QUERY11
	SELECT  CODE_NAME AS PAYDTL_PGMID
	FROM    BSA100T 
	WHERE   COMP_CODE   = #{S_COMP_CODE}
	AND     MAIN_CODE   = 'A125'
	AND     SUB_CODE    = '7'
</select>

<select id="afb700ukrServiceImpl.selectCheck8" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qstd] QUERY12
SELECT  MAX(PATH_INFO_1) + MAX(PATH_INFO_2) PATH_INFO_1
     ,  MAX(PATH_INFO_3) PATH_INFO_3
     ,  MAX(PATH_INFO_4) PATH_INFO_4
FROM    (
        SELECT  CASE WHEN SUB_CODE = '1' THEN REF_CODE3 ELSE '' END    AS PATH_INFO_1 
              , CASE WHEN SUB_CODE = '2' THEN REF_CODE3 ELSE '' END    AS PATH_INFO_2
              , CASE WHEN SUB_CODE = '3' THEN REF_CODE3 ELSE '' END    AS PATH_INFO_3
              , CASE WHEN SUB_CODE = '4' THEN REF_CODE3 ELSE '' END    AS PATH_INFO_4
        FROM    BSA100T 
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     MAIN_CODE   = 'A198'
        AND     SUB_CODE   IN ('1', '2', '3', '4')
        ) T
</select>			

<select id="afb700ukrServiceImpl.selectCheck9" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qstd] QUERY11
	SELECT  CODE_NAME AS BIZ_GUBUN_NAME
	FROM    BSA100T 
	WHERE   COMP_CODE   = #{S_COMP_CODE}
	AND     MAIN_CODE   = 'A174'
	AND     SUB_CODE    = '$'
	AND     CODE_NAME  != '지출결의_세부구분항목'
	
</select>

<select id="afb700ukrServiceImpl.selectCheck10" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qstd] QUERY12
    select * from (
        SELECT  SUB_CODE
        FROM    BSA100T 
        WHERE   COMP_CODE   = #{S_COMP_CODE}
        AND     MAIN_CODE   = 'A212'
        AND     SUB_CODE    = #{S_USER_ID}
    )  TOPT where rownum = 1
	
	
</select>		


<select id="afb700ukrServiceImpl.selectDeposit" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700QDeposit] Query01
    <!-- BEGIN -->
    
    --  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------"
        SET @COMP_CODE          = #{S_COMP_CODE}
        SET @PAY_DIVI           = #{PAY_DIVI}
    
    --  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------"
        
        select IN_BANK_CODE
                , IN_BANK_NAME
                , NVL(fnCipherDecrypt(IN_BANKBOOK_NUM, ''), '')     AS IN_BANKBOOK_NUM
                , IN_BANKBOOK_NAME 
        from (        
            SELECT  NVL(B.BANK_CODE, '')                                 AS IN_BANK_CODE
                  , NVL(C.CUSTOM_NAME, '')                               AS IN_BANK_NAME
                  , B.BANK_ACCOUNT                                      AS IN_BANKBOOK_NUM
                  , NVL(B.SAVE_NAME, '')                                 AS IN_BANKBOOK_NAME
            FROM              BSA100T A 
                    LEFT JOIN AFS100T B  ON B.COMP_CODE   = A.COMP_CODE
                                                     AND B.SAVE_CODE   = NVL(A.REF_CODE3, '')
                    LEFT JOIN BCM100T C  ON C.COMP_CODE   = B.COMP_CODE
                                                     AND C.CUSTOM_CODE = B.BANK_CODE
                                                     AND C.CUSTOM_TYPE = '4'
            WHERE   A.COMP_CODE  = @COMP_CODE
            AND     A.MAIN_CODE  = 'A172'
            AND     A.SUB_CODE   = @PAY_DIVI
        ) T
    <!-- END -->

</select>


<select id="afb700ukrServiceImpl.fnCheckPassword" parameterType="Map" resultType="rMap">

<!-- SP 필요 -->

<!-- BEGIN -->

    SET @COMP_CODE          = #{S_COMP_CODE}
    SET @DRAFTER            = #{DRAFTER_PN}

--  [ 지출관리 아이디와 1:1 매핑여부 설정 ] ---------------------------------------------------------------------------
    
    set @isIdMapping = ''
    
    DO(
        select * from (
            SELECT  @isIdMapping := REF_CODE1
            FROM    BSA100T 
            WHERE   COMP_CODE   = @COMP_CODE
            AND     MAIN_CODE   = 'A169'
            AND     SUB_CODE    = '10'
        )
    )

    SET @isIdMapping = NVL(@isIdMapping, 'N')

--  [ 주민번호 체크여부 설정 및 주민번호 리턴] ------------------------------------------------------------------------
<!--     IF      ( @isIdMapping = 'Y' )
        BEGIN
            SELECT  'N' CHECK_PASSWORD, '' REPRE_NUM
        END
    ELSE IF ( @isIdMapping = 'N' )
        BEGIN
            SELECT  'Y' CHECK_PASSWORD, fnCipherDecrypt(REPRE_NUM,'') REPRE_NUM
            FROM    HUM100T 
            WHERE   COMP_CODE   = @COMP_CODE
            AND     PERSON_NUMB = @DRAFTER
        END -->
        
    SET @CHKPW = ''
    SET @RPRENM = ''    
    
    SELECT @CHKPW := CASE WHEN @isIdMapping = 'Y' THEN (SELECT 'N' )
                          WHEN @isIdMapping = 'N' THEN (SELECT  'Y' CHECK_PASSWORD
                                                        FROM    HUM100T 
                                                        WHERE   COMP_CODE   = @COMP_CODE
                                                        AND PERSON_NUMB = @DRAFTER)
                      ELSE  @CHKPW  
                      END
    
    SELECT @RPRENM := CASE WHEN @isIdMapping = 'Y' THEN (SELECT '' )
                           WHEN @isIdMapping = 'N' THEN (SELECT  fnCipherDecrypt(REPRE_NUM,'') REPRE_NUM
                                                         FROM    HUM100T 
                                                         WHERE   COMP_CODE   = @COMP_CODE
                                                         AND PERSON_NUMB = @DRAFTER)
                      ELSE  @RPRENM 
                      END
    
    
    SELECT @CHKPW   , @RPRENM       
    
    
    
        
        
        
<!-- END -->
</select>



<select id="afb700ukrServiceImpl.selectReCancel1" parameterType="Map" resultType="rMap">

<!-- SP 생성 필요 -->

--afb700ukr.Cafb700ukr [fnAfb700ReCancel] Query02
<!-- BEGIN -->

--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
    SET @COMP_CODE          = #{S_COMP_CODE}
    SET @PAY_DRAFT_NO       = #{PAY_DRAFT_NO}
    SET @UPDATE_DB_USER     = #{S_USER_ID}
    SET @GWIF_TYPE          = '1'

    SET @LANG_TYPE 			= #{S_LANG_CODE} 
    SET @ERROR_DESC         = ''

--  [ 이체여부 체크 ] ---------------------------------------------------------------------------------------
    <!-- DECLARE         @TransSeq           NUMERIC(5, 0) -->

    set @TransSeq = (
        SELECT  @TransSeq    := NVL(A2.TRANS_SEQ, 0)
        FROM                AFB700T   A  
                LEFT  JOIN  (
                            SELECT  TOP 1 COMP_CODE, PAY_DRAFT_NO, SEQ, TRANS_SEQ
                            FROM    AFB710T 
                            WHERE   COMP_CODE            = @COMP_CODE
                            AND     PAY_DRAFT_NO         = @PAY_DRAFT_NO
                            AND     NVL(TRANS_SEQ, 0) != 0
                            )         A2               ON A2.COMP_CODE     = A.COMP_CODE
                                                      AND A2.PAY_DRAFT_NO  = A.PAY_DRAFT_NO
                LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE     = A.COMP_CODE
                                                      AND M1.MAIN_CODE     = 'S091'
                                                      AND M1.SUB_CODE      = A.COMP_CODE
                LEFT  JOIN  T_GWIF    B   ON B.GWIF_ID        = M1.REF_CODE1 + @GWIF_TYPE + A.PAY_DRAFT_NO
        WHERE   A.COMP_CODE     = @COMP_CODE
        AND     A.PAY_DRAFT_NO  = @PAY_DRAFT_NO
        AND    (B.GW_STATUS     = '1'
         OR     B.GW_STATUS     = '9')
     )

<!--     IF ( @TransSeq &gt; 0 )
    BEGIN
        /* 이체가 된 건은 임의반려할 수 없습니다. 이체등록 자료를 먼저 삭제하십시오. */
        SET @ERROR_DESC = '55516;' +  fnGetTxtLang(@LANG_TYPE, 'A0304') + ': ' + @PAY_DRAFT_NO                 + CHAR(13)
                                 +  fnGetTxtLang(@LANG_TYPE, 'A0096') + ': ' + CONVERT(NVARCHAR(10), @TransSeq)   
        GOTO ERROR_HANDLER
    END

ERROR_HANDLER:

    IF CHARINDEX(';', @ERROR_DESC) &gt; 0
        SELECT @ERROR_DESC AS ERROR_DESC
    ELSE
        SELECT TOP 1  '' ERROR_DESC -->
    
    -- 이체가 된 건은 임의반려할 수 없습니다. 이체등록 자료를 먼저 삭제하십시오
        
    SET @ERROR_DESC = ''    
        .
    SELECT  @ERROR_DESC := CASE WHEN @TransSeq > 0 THEN (SELECT '55516;' + fnGetTxt( 'A0304') + ': ' + @PAY_DRAFT_NO  + CHR(13)
                                                            + fnGetTxt( 'A0096') + ': ' + CAST(@TransSeq AS VARCHAR(10)) )
                                ELSE @ERROR_DESC
                                END    
        
    SELECT  @ERROR_DESC     
        
        
<!-- END -->
</select>



<select id="afb700ukrServiceImpl.selectReCancel2" parameterType="Map" resultType="rMap">
--afb700ukr.Cafb700ukr [fnAfb700ReCancel] Query02
BEGIN


--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
    SET @COMP_CODE          = #{S_COMP_CODE}
    SET @PAY_DRAFT_NO       = #{PAY_DRAFT_NO}
    SET @UPDATE_DB_USER     = #{S_USER_ID}
    SET @GWIF_TYPE          = '1'

    SET @LANG_TYPE 			= #{S_LANG_CODE} 
    SET @ERROR_DESC         = ''

--  [ 그룹웨어 연동여부 설정 ] ----------------------------------------------------------------------------------------
    DECLARE         @LinkedGW           NVARCHAR(01)
    set @LinkedGW = (
        select * from (
            SELECT @LinkedGW := M1.REF_CODE1
            FROM   BSA100T M1 
            WHERE  M1.COMP_CODE = @COMP_CODE
            AND    M1.MAIN_CODE = 'A169'
            AND    M1.SUB_CODE  = '20'
        )  TOPT where rownum = 1
    )  

    SET @LinkedGW = NVL(@LinkedGW, 'N')

--  [ 등록된 수정자일 경우/그룹웨어 연동인 경우, 임의반려 실행 ] -----------------------------------------------------------------------------
    IF EXISTS ( 
                    select * from (
                        SELECT  *
                        FROM    BSA100T M1 
                        WHERE   COMP_CODE   = @COMP_CODE
                        AND     MAIN_CODE   = 'A179'
                        AND     SUB_CODE    = @UPDATE_DB_USER 
                    )  TOPT where rownum = 1
              ) AND (@LinkedGW = 'Y')
    BEGIN
        -- 승인상태, 기안여부, 결재완료, 전표번호 유지하기 위해 여유컬럼 사용
        UPDATE  A
        SET     A.TEMPC_01 = CASE WHEN @LinkedGW = 'Y' THEN NVL(B.GW_STATUS, '0')
                                  ELSE NVL(A.STATUS, '0')
                             END                                -- 승인상태
              , A.TEMPC_02 = NVL(C.DRAFT_YN, 'N')            -- 기안여부
              , A.TEMPC_03 = NVL(C.AGREE_YN, 'N')            -- 결재완료
              , A.TEMPN_01 = CASE WHEN A.SLIP_DATE = A.EX_DATE THEN A.EX_NUM
                                  ELSE 0
                             END                                -- 전표번호
        FROM                AFB700T   A  
                LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE  = A.COMP_CODE
                                                      AND M1.MAIN_CODE  = 'S091'
                                                      AND M1.SUB_CODE   = A.COMP_CODE
                LEFT  JOIN  T_GWIF    B   ON B.GWIF_ID     = M1.REF_CODE1 + @GWIF_TYPE + A.PAY_DRAFT_NO
                LEFT  JOIN  AGJ110T   C   ON C.COMP_CODE   = A.COMP_CODE
                                                      AND C.EX_DATE     = A.EX_DATE
                                                      AND C.EX_NUM      = A.EX_NUM
                                                      AND C.INPUT_PATH  = '80'
                                                      AND C.MOD_DIVI   IS NULL
        WHERE   A.COMP_CODE     = @COMP_CODE
        AND     A.PAY_DRAFT_NO  = @PAY_DRAFT_NO
        AND    (B.GW_STATUS     = '1'
         OR     B.GW_STATUS     = '9')

    --  [ 기표취소 SP 실행 ] ----------------------------------------------------------------------------------------------
        DECLARE   @GWIF_ID     NVARCHAR(50)
        
        set @GWIF_ID = (
            SELECT  @GWIF_ID    := B.GWIF_ID
            FROM                AFB700T   A  
                    LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE     = A.COMP_CODE
                                                          AND M1.MAIN_CODE     = 'S091'
                                                          AND M1.SUB_CODE      = A.COMP_CODE
                    LEFT  JOIN  T_GWIF    B   ON B.GWIF_ID        = M1.REF_CODE1 + @GWIF_TYPE + A.PAY_DRAFT_NO
            WHERE   A.COMP_CODE     = @COMP_CODE
            AND     A.PAY_DRAFT_NO  = @PAY_DRAFT_NO
            AND    (B.GW_STATUS     = '1' OR     B.GW_STATUS     = '9')
        )

        EXEC USP_ACCNT_PayStop   @PAY_DRAFT_NO, 'HANDY','', @LANG_TYPE, @ERROR_DESC OUTPUT

    --  [ 동일한 번호로 기표취소하기 위해 여유컬럼에 저장했던 전표번호 삭제] ------------------------------------------------
        UPDATE  AFB700T
        SET     TEMPC_01 = NULL
              , TEMPC_02 = NULL
              , TEMPC_03 = NULL
              , TEMPN_01 = 0
        WHERE   COMP_CODE       = @COMP_CODE
        AND     PAY_DRAFT_NO    = @PAY_DRAFT_NO

    --  [ 그룹웨어 연계테이블에 반려status UPDATE(결재중(회수/삭제등)과 완결인 건만 처리함] ---------------------------------
        UPDATE  B
        SET     B.GW_STATUS = '5'
        FROM                AFB700T   A  
                LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE  = A.COMP_CODE
                                                      AND M1.MAIN_CODE  = 'S091'
                                                      AND M1.SUB_CODE   = A.COMP_CODE
                INNER JOIN  T_GWIF    B   ON B.GWIF_ID     = M1.REF_CODE1 + @GWIF_TYPE + A.PAY_DRAFT_NO
        WHERE   A.COMP_CODE     = @COMP_CODE
        AND     A.PAY_DRAFT_NO  = @PAY_DRAFT_NO
        AND    (B.GW_STATUS     = '1'   OR  B.GW_STATUS = '9')

    --  [ 결과 리턴 ] -----------------------------------------------------------------------------------------------------
        IF ( @ERROR_DESC != '' )
            BEGIN
                SELECT   @ERROR_DESC    AS ERROR_DESC
                      , ''          AS EX_NUM
            END
        ELSE
            BEGIN
                SELECT   '' ERROR_DESC, EX_NUM
                      , NVL(B.GW_STATUS, '0') AS STATUS
                FROM                AFB700T   A  
                        LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE  = A.COMP_CODE
                                                              AND M1.MAIN_CODE  = 'S091'
                                                              AND M1.SUB_CODE   = A.COMP_CODE
                        LEFT  JOIN  T_GWIF    B   ON B.GWIF_ID     = M1.REF_CODE1 + @GWIF_TYPE + A.PAY_DRAFT_NO
                WHERE   A.COMP_CODE     = @COMP_CODE
                AND     A.PAY_DRAFT_NO  = @PAY_DRAFT_NO
            END
    END

END
</select>

<select id="afb700ukrServiceImpl.selectAppPro1" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr [fnAfb700AppPro] Query02
<!-- BEGIN -->

--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
    SET @COMP_CODE          = #{S_COMP_CODE}
    SET @PAY_DRAFT_NO       = #{PAY_DRAFT_NO}
    SET @UPDATE_DB_USER     = #{S_USER_ID}
    SET @GWIF_TYPE          = '1'

    SET @LANG_TYPE 			= #{S_LANG_CODE} 
    SET @ERROR_DESC         = ''

--  [ 이체여부 체크 ] ---------------------------------------------------------------------------------------

    set @TransSeq = (
        SELECT  @TransSeq    = NVL(A2.TRANS_SEQ, 0)
        FROM                AFB700T   A  
                LEFT  JOIN  (
                            SELECT  TOP 1 COMP_CODE, PAY_DRAFT_NO, SEQ, TRANS_SEQ
                            FROM    AFB710T 
                            WHERE   COMP_CODE            = @COMP_CODE
                            AND     PAY_DRAFT_NO         = @PAY_DRAFT_NO
                            AND     NVL(TRANS_SEQ, 0) != 0
                            )         A2               ON A2.COMP_CODE     = A.COMP_CODE
                                                      AND A2.PAY_DRAFT_NO  = A.PAY_DRAFT_NO
                LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE     = A.COMP_CODE
                                                      AND M1.MAIN_CODE     = 'S091'
                                                      AND M1.SUB_CODE      = A.COMP_CODE
                LEFT  JOIN  T_GWIF    B   ON B.GWIF_ID        = M1.REF_CODE1 + @GWIF_TYPE + A.PAY_DRAFT_NO
        WHERE   A.COMP_CODE     = @COMP_CODE
        AND     A.PAY_DRAFT_NO  = @PAY_DRAFT_NO
        AND    (B.GW_STATUS     = '1'
         OR     B.GW_STATUS     = '9')
    )

<!--     IF ( @TransSeq &gt; 0 )
    BEGIN
        /* 이체가 된 건은 지출승인을 취소할 수 없습니다. 이체등록 자료를 먼저 삭제하십시오. */
        SET @ERROR_DESC = '55521;' +  fnGetTxtLang(@LANG_TYPE, 'A0304') + ': ' + @PAY_DRAFT_NO                   + CHAR(13)
                                 +  fnGetTxtLang(@LANG_TYPE, 'A0096') + ': ' + CONVERT(NVARCHAR(10), @TransSeq)  
        GOTO ERROR_HANDLER
    END

ERROR_HANDLER:


    IF CHARINDEX(';', @ERROR_DESC) &gt; 0
        SELECT @ERROR_DESC AS ERROR_DESC
    ELSE
        SELECT TOP 1 '' ERROR_DESC -->
   
   
        
       -- 이체가 된 건은 지출승인을 취소할 수 없습니다. 이체등록 자료를 먼저 삭제하십시오.
        
    SET @ERROR_DESC = ''    
        .
    SELECT  @ERROR_DESC := CASE WHEN @TransSeq > 0 THEN (SELECT '55521;' + fnGetTxt( 'A0304') + ': ' + @PAY_DRAFT_NO + CHAR(13)
                                                            + fnGetTxt( 'A0096') + ': ' + CAST(@TransSeq AS VARCHAR(10))  )
                                ELSE @ERROR_DESC
                                END    
        
    SELECT  @ERROR_DESC       
        
        
        
<!-- END -->

</select>
<select id="afb700ukrServiceImpl.selectAppPro2" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr [fnAfb700AppPro] Query01
BEGIN


--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
    SET @COMP_CODE          = #{S_COMP_CODE}
    SET @PAY_DRAFT_NO       = #{PAY_DRAFT_NO}
    SET @T_STATUS           = #{HDD_APP}
    SET @USER_ID            = #{S_USER_ID}

    SET @LANG_TYPE 			= #{S_LANG_CODE} 
    SET @ERROR_DESC         = ''

--  [ 그룹웨어 연동여부 설정 ] ----------------------------------------------------------------------------------------

    set @LinkedGW = (
        select * from (
            SELECT @LinkedGW := M1.REF_CODE1
            FROM   BSA100T M1 
            WHERE  M1.COMP_CODE = @COMP_CODE
            AND    M1.MAIN_CODE = 'A169'
            AND    M1.SUB_CODE  = '20'
        )  TOPT where rownum = 1
    )

    SET @LinkedGW = NVL(@LinkedGW, 'N')

--  [ 지출승인 프로세스 사용여부 ] ------------------------------------------------------------------------------------------
    set @AppProButton = (
        SELECT @AppProButton = REF_CODE1
        FROM   BSA100T 
        WHERE  COMP_CODE    = @COMP_CODE
        AND    MAIN_CODE    = 'A169'
        AND    SUB_CODE     = '45'
    )

    SET @AppProButton = NVL(@AppProButton, 'N')

    IF (@LinkedGW = 'N' OR @AppProButton = 'Y') -- 그룹웨어 연계사용하지 않거나 지출승인 프로세스를 사용하는 경우만 실행
    BEGIN

    --  [ 지출승인 처리를 위한 변수 값 설정 ] ---------------------------------------------------------------------


        IF ( @T_STATUS = '0' )
            BEGIN
                SET @SIGN       = 1
                SET @Status     = '9'
            END
        ELSE
            BEGIN
                SET @SIGN       = -1
                SET @Status     = '0'
            END

    --  [ 지출승인 UPDATE ] -----------------------------------------------------------------------------------------
        UPDATE  AFB700T
        SET     "STATUS"          = @Status
        WHERE   COMP_CODE       = @COMP_CODE
        AND     PAY_DRAFT_NO    = @PAY_DRAFT_NO

    --  [ 결과 리턴 ] -----------------------------------------------------------------------------------------------------
        IF ( @ERROR_DESC != '' )
            BEGIN
                SELECT   @ERROR_DESC    AS ERROR_DESC
                      , ''          AS EX_NUM
            END
        ELSE
            BEGIN
                SELECT  '' ERROR_DESC, A.EX_NUM
                      , NVL(A.STATUS, '0') AS STATUS
                FROM                AFB700T   A  
                WHERE   A.COMP_CODE     = @COMP_CODE
                AND     A.PAY_DRAFT_NO  = @PAY_DRAFT_NO
            END
    END

END

</select>


<select id="afb700ukrServiceImpl.selectMaster" parameterType="Map" resultType="rMap">
--afb700ukr.Cafb700ukr[fnAfb700Qstd] QUERY01
BEGIN


--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
    SET @COMP_CODE      = #{S_COMP_CODE}
    SET @PAY_DRAFT_NO   = #{PAY_DRAFT_NO}
    SET @GWIF_TYPE      = '1'

--  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
    <!-- DECLARE         @DateFormat         NVARCHAR(10) -->

    
    set @DateFormat = ''
    
    DO(
        select * from (
            SELECT @DateFormat := M1.CODE_NAME
            FROM   BSA100T M1 
            WHERE  M1.COMP_CODE = @COMP_CODE
            AND    M1.MAIN_CODE = 'B044'
            AND    M1.REF_CODE1 = 'Y'
        )  TOPT where rownum = 1
    )
    
    SET @DateFormat = NVL(@DateFormat, 'YYYY/MM/DD')

--  [ 그룹웨어 연동여부 설정 ] ----------------------------------------------------------------------------------------
    <!-- DECLARE         @LinkedGW           NVARCHAR(01) -->

    set @LinkedGW = ''
    
    DO(
        select * from (
            SELECT @LinkedGW := M1.REF_CODE1
            FROM   BSA100T M1 
            WHERE  M1.COMP_CODE = @COMP_CODE
            AND    M1.MAIN_CODE = 'A169'
            AND    M1.SUB_CODE  = '20'
        )  TOPT where rownum = 1
    )

    SET @LinkedGW = NVL(@LinkedGW, 'N')

--  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
    SELECT  A.COMP_CODE
          , A.PAY_DRAFT_NO
          , REPLACE(
            REPLACE(
            REPLACE(@DateFormat, 'YYYY', SUBSTR(A.PAY_DATE , 1, 4))
                               , 'MM'  , SUBSTR(A.PAY_DATE , 5, 2))
                               , 'DD'  , SUBSTR(A.PAY_DATE , 7, 2))      AS PAY_DATE
          , REPLACE(
            REPLACE(
            REPLACE(@DateFormat, 'YYYY', SUBSTR(A.SLIP_DATE, 1, 4))
                               , 'MM'  , SUBSTR(A.SLIP_DATE, 5, 2))
                               , 'DD'  , SUBSTR(A.SLIP_DATE, 7, 2))      AS SLIP_DATE
          , CASE WHEN NVL(A.EX_NUM, 0) = 0 THEN ''
                 <!-- ELSE CONVERT(NVARCHAR(7), A.EX_NUM) -->
                 ELSE CAST(A.EX_NUM AS VARCHAR(11))
            END                                                             AS EX_NUM
          , A.DRAFTER
          , D1.NAME                                                         AS DRAFTER_NM
          , A.PAY_USER
          , D2.NAME                                                         AS PAY_USER_NM
          , A.DEPT_CODE
          , D3.TREE_NAME                                                    AS DEPT_NAME
          , A.DIV_CODE
          , A.BUDG_GUBUN
          , A.ACCNT_GUBUN
          , NVL(M2.REF_CODE4, '')                                        AS PAY_GUBUN    -- 급여공제 버튼 사용유무
          , CASE WHEN G1.DED_CNT &gt; 0 THEN 'Y' ELSE 'N' END               AS DED_DATA_YN  -- 급여공제 데이터유무
          , NVL(G1.DED_AMT_TOT, 0)                                       AS DED_AMT_TOT  -- 급여공제 합계
          , F3.TOT_AMT_I
          , A.TITLE
          , NVL(A.TITLE_DESC, '')                                        AS TITLE_DESC
          , CASE WHEN @LinkedGW = 'Y' THEN NVL(B.GW_STATUS, '0')
                 ELSE A.STATUS
            END                                                             AS STATUS
          , NVL(A.DRAFT_NO   , '')                                       AS DRAFT_NO
          , NVL(E1.TITLE     , '')                                       AS DRAFT_TITLE
          , NVL(A.PAY_DTL_NO , '')                                       AS PAY_DTL_NO
          , NVL(F1.TITLE     , '')                                       AS PAY_DTL_TITLE
          , NVL(F2.TOT_AMT_I ,  0)                                       AS PAY_DTL_AMT
          , A.INSERT_DB_USER
          , A.SLIP_DATE                                                     AS REF_SLIP_DATE
    FROM                AFB700T   A  
            LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE      = A.COMP_CODE
                                                  AND M1.MAIN_CODE      = 'S091'
                                                  AND M1.SUB_CODE       = A.COMP_CODE
            LEFT  JOIN  T_GWIF    B   ON B.GWIF_ID         = M1.REF_CODE1 + @GWIF_TYPE + A.PAY_DRAFT_NO
            LEFT  JOIN  HUM100T   D1  ON D1.COMP_CODE      = A.COMP_CODE
                                                  AND D1.PERSON_NUMB    = A.DRAFTER
            LEFT  JOIN  HUM100T   D2  ON D2.COMP_CODE      = A.COMP_CODE
                                                  AND D2.PERSON_NUMB    = A.PAY_USER
            LEFT  JOIN  BSA210T   D3  ON D3.COMP_CODE      = A.COMP_CODE
                                                  AND D3.TREE_CODE      = A.DEPT_CODE
            LEFT  JOIN  AFB600T   E1  ON E1.COMP_CODE      = A.COMP_CODE
                                                  AND E1.DRAFT_NO       = A.DRAFT_NO
            LEFT  JOIN  AFB720T   F1  ON F1.COMP_CODE      = A.COMP_CODE
                                                  AND F1.PAY_DTL_NO     = A.PAY_DTL_NO
            LEFT  JOIN  (
                        SELECT  COMP_CODE
                              , PAY_DTL_NO
                              , SUM(TOT_AMT_I) AS TOT_AMT_I
                        FROM    AFB721T 
                        WHERE   COMP_CODE = @COMP_CODE
                        GROUP   BY  COMP_CODE, PAY_DTL_NO
                        )         F2               ON F2.COMP_CODE      = F1.COMP_CODE
                                                  AND F2.PAY_DTL_NO     = F1.PAY_DTL_NO
            LEFT  JOIN  (
                        SELECT  COMP_CODE
                              , PAY_DRAFT_NO
                              , SUM(TOT_AMT_I) AS TOT_AMT_I
                        FROM    AFB710T 
                        WHERE   COMP_CODE     = @COMP_CODE
                        AND     PAY_DRAFT_NO  = @PAY_DRAFT_NO
                        GROUP   BY  COMP_CODE, PAY_DRAFT_NO
                        )         F3               ON F3.COMP_CODE      = A.COMP_CODE
                                                  AND F3.PAY_DRAFT_NO   = A.PAY_DRAFT_NO
            LEFT  JOIN  (
                        SELECT  COMP_CODE
                              , PAY_DRAFT_NO
                              , COUNT(*)          AS DED_CNT
                              , SUM(DED_AMOUNT_I) AS DED_AMT_TOT
                        FROM    AFB711T 
                        WHERE   COMP_CODE     = @COMP_CODE
                        AND     PAY_DRAFT_NO  = @PAY_DRAFT_NO
                        AND     DED_AMOUNT_I != 0
                        GROUP   BY  COMP_CODE, PAY_DRAFT_NO
                        )         G1               ON G1.COMP_CODE      = A.COMP_CODE
                                                  AND G1.PAY_DRAFT_NO   = A.PAY_DRAFT_NO
            LEFT  JOIN  BSA100T   M2  ON M2.COMP_CODE      = A.COMP_CODE
                                                  AND M2.MAIN_CODE      = 'A171'
                                                  AND M2.SUB_CODE       = A.ACCNT_GUBUN
    WHERE   A.COMP_CODE     = @COMP_CODE
    AND     A.PAY_DRAFT_NO  = @PAY_DRAFT_NO


END
</select>


<select id="afb700ukrServiceImpl.selectDetail" parameterType="Map" resultType="rMap">

--afb700ukr.Cafb700ukr[fnAfb700Qstd] QUERY02
<!-- BEGIN -->


--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
    SET @COMP_CODE          = #{S_COMP_CODE}
    SET @PAY_DRAFT_NO       = #{PAY_DRAFT_NO}

--  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
    <!-- DECLARE         @DateFormat         NVARCHAR(10) -->

    set @DateFormat = ''
    
    DO(
        select * from (
        SELECT @DateFormat := M1.CODE_NAME
        FROM   BSA100T M1 
        WHERE  M1.COMP_CODE = @COMP_CODE
        AND    M1.MAIN_CODE = 'B044'
        AND    M1.REF_CODE1 = 'Y'
        )  TOPT where rownum = 1
    )

    SET @DateFormat = NVL(@DateFormat, 'YYYY/MM/DD')

--  [ 그룹웨어 연동여부 설정 ] ----------------------------------------------------------------------------------------
    <!-- DECLARE         @LinkedGW           NVARCHAR(01) -->

    set @LinkedGW = ''
    
    DO(
        select * from (
            SELECT @LinkedGW := M1.REF_CODE1
            FROM   BSA100T M1 
            WHERE  M1.COMP_CODE = @COMP_CODE
            AND    M1.MAIN_CODE = 'A169'
            AND    M1.SUB_CODE  = '20'
        )  TOPT where rownum = 1
    ) 

    SET @LinkedGW = NVL(@LinkedGW, 'N')

--  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
    SELECT  
            B.COMP_CODE
          , B.PAY_DRAFT_NO
          , B.SEQ
          , B.BUDG_GUBUN
          , B.BUDG_CODE
          , D.BUDG_NAME
          , B.PJT_CODE
          , C3.PJT_NAME
          , B.SAVE_CODE
          , C6.SAVE_NAME
          ,  fnCipherDecrypt(C6.BANK_ACCOUNT, '')                    AS BANK_ACCOUNT
          , CASE WHEN NVL(B.DRAFT_NO, '') = ''
                 THEN  fnPossibleBudgAmt(A.COMP_CODE, A.SLIP_DATE, A.DEPT_CODE, B.BUDG_CODE, B.BUDG_GUBUN)
                 ELSE B1.DRAFT_REMIND_AMT
            END                                                             AS BUDG_POSS_AMT
          , B.BIZ_REMARK
          , B.BIZ_GUBUN
          , NVL(M3.REF_CODE2, '')                                        AS BIZ_GUBUN_REF
          , B.PAY_DIVI
          , NVL(M2.REF_CODE1, '')                                        AS PAY_DIVI_REF1
          , NVL(M2.REF_CODE2, '')                                        AS PAY_DIVI_REF2
          , NVL(M2.REF_CODE3, '')                                        AS PAY_DIVI_REF3
          , NVL(M2.REF_CODE4, '')                                        AS PAY_DIVI_REF4
          , B.PROOF_DIVI
          , NVL(M1.REF_CODE1, '')                                        AS PROOF_KIND
          , NVL(M1.REF_CODE2, '')                                        AS REASON_ESS
          , NVL(M1.REF_CODE3, '')                                        AS PROOF_TYPE
          , NVL(M1.REF_CODE5, '')                                        AS CUSTOM_ESS
          , NVL(M1.REF_CODE6, '')                                        AS DEFAULT_EB
          , NVL(M1.REF_CODE7, '')                                        AS DEFAULT_REASON
          , B.SUPPLY_AMT_I
          , B.TAX_AMT_I
          , B.ADD_REDUCE_AMT_I
          , B.TOT_AMT_I
          , B.PEND_CODE
          , NVL(M4.REF_CODE1, '')                                        AS PEND_CODE_REF1
          , B.PAY_CUSTOM_CODE
          , C4.PAY_CUSTOM_NAME
          , B.CUSTOM_CODE
          , CASE WHEN NVL(M2.REF_CODE2, '') = 'C' THEN B.CUSTOM_NAME
                 ELSE C1.CUSTOM_NAME
            END                                                             AS CUSTOM_NAME
          , C1.AGENT_TYPE
          , B.IN_BANK_CODE
          , C5.CUSTOM_NAME                                                  AS IN_BANK_NAME
          ,  fnCipherDecrypt(B.IN_BANKBOOK_NUM, '')                  AS IN_BANKBOOK_NUM
          , B.IN_BANKBOOK_NAME
          , B.INC_AMT_I
          , B.LOC_AMT_I
          , B.REAL_AMT_I
          , B.REMARK
          , B.EB_YN
          , B.CRDT_NUM
          ,  fnCipherDecrypt(C7.CRDT_FULL_NUM, '')                   AS CRDT_FULL_NUM
          , B.APP_NUM
          , REPLACE(
            REPLACE(
            REPLACE(@DateFormat, 'YYYY', SUBSTR(B.SEND_DATE, 1, 4))
                               , 'MM'  , SUBSTR(B.SEND_DATE, 5, 2))
                               , 'DD'  , SUBSTR(B.SEND_DATE, 7, 2))      AS SEND_DATE
          , REPLACE(
            REPLACE(
            REPLACE(@DateFormat, 'YYYY', SUBSTR(B.BILL_DATE, 1, 4))
                               , 'MM'  , SUBSTR(B.BILL_DATE, 5, 2))
                               , 'DD'  , SUBSTR(B.BILL_DATE, 7, 2))      AS BILL_DATE
          , B.ACCNT
          , C2.ACCNT_NAME
          , B.REASON_CODE
          , B.DEPT_CODE
          , B.DEPT_NAME
          , B.DIV_CODE
          , B.REFER_NUM
          , CASE WHEN NVL(B.REFER_NUM, '') != '' AND NVL(B.SUPPLY_AMT_I, 0) &lt; 0 THEN 'Y'
                 ELSE 'N'
            END                                                             AS CANCEL_YN
          , B.DRAFT_NO
          , B.DRAFT_SEQ
          , M5.BUDG_NAME                                                    AS BUDG_NAME_4
          , B.INSERT_DB_USER
          , B.INSERT_DB_TIME
          , B.UPDATE_DB_USER
          , B.UPDATE_DB_TIME
    FROM                AFB700T   A  
            INNER JOIN  AFB710T   B   ON B.COMP_CODE           = A.COMP_CODE
                                                  AND B.PAY_DRAFT_NO        = A.PAY_DRAFT_NO
            LEFT  JOIN  AFB610T   B1  ON B1.COMP_CODE          = B.COMP_CODE
                                                  AND B1.DRAFT_NO           = B.DRAFT_NO
                                                  AND B1.DRAFT_SEQ          = B.DRAFT_SEQ
            LEFT  JOIN  BCM100T   C1  ON C1.COMP_CODE          = B.COMP_CODE
                                                  AND C1.CUSTOM_CODE        = B.CUSTOM_CODE
            LEFT  JOIN  ABA400T   C2  ON C2.COMP_CODE          = B.COMP_CODE
                                                  AND C2.ACCNT              = B.ACCNT
            LEFT  JOIN  BCM600T   C3  ON C3.COMP_CODE          = B.COMP_CODE
                                                  AND C3.PJT_CODE           = B.PJT_CODE
            LEFT  JOIN  ABH200TV  C4  ON C4.COMP_CODE          = B.COMP_CODE
                                                  AND C4.PEND_CODE          = B.PEND_CODE
                                                  AND C4.PAY_CUSTOM_CODE    = B.PAY_CUSTOM_CODE
            LEFT  JOIN  BCM100T   C5  ON C5.COMP_CODE          = B.COMP_CODE
                                                  AND C5.CUSTOM_CODE        = B.IN_BANK_CODE
            LEFT  JOIN  AFS100T   C6  ON C6.COMP_CODE          = B.COMP_CODE
                                                  AND C6.SAVE_CODE          = B.SAVE_CODE
            LEFT  JOIN  ABA500T   C7  ON C7.COMP_CODE          = B.COMP_CODE
                                                  AND C7.CRDT_NUM           = B.CRDT_NUM
            LEFT  JOIN  AFB400T   D   ON D.COMP_CODE           = B.COMP_CODE
                                                  AND D.AC_YYYY             =  fnGetBudgAcYyyy(A.COMP_CODE, A.PAY_DATE)
                                                  AND D.BUDG_CODE           = B.BUDG_CODE
            LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE          = B.COMP_CODE
                                                  AND M1.MAIN_CODE          = 'A173'
                                                  AND M1.SUB_CODE           = B.PROOF_DIVI
            LEFT  JOIN  BSA100T   M2  ON M2.COMP_CODE          = B.COMP_CODE
                                                  AND M2.MAIN_CODE          = 'A172'
                                                  AND M2.SUB_CODE           = B.PAY_DIVI
            LEFT  JOIN  BSA100T   M3  ON M3.COMP_CODE          = B.COMP_CODE
                                                  AND M3.MAIN_CODE          = 'A174'
                                                  AND M3.SUB_CODE           = B.BIZ_GUBUN
            LEFT  JOIN  BSA100T   M4  ON M4.COMP_CODE          = B.COMP_CODE
                                                  AND M4.MAIN_CODE          = 'A210'
                                                  AND M4.SUB_CODE           = B.PEND_CODE
            LEFT  JOIN  AFB400T   M5  ON M5.COMP_CODE          = D.COMP_CODE
                                                  AND M5.AC_YYYY            = D.AC_YYYY
                                                  AND M5.BUDG_CODE          = D.TREE_LEVEL
    WHERE   A.COMP_CODE     = @COMP_CODE
    AND     A.PAY_DRAFT_NO  = @PAY_DRAFT_NO
    ORDER BY B.SEQ


<!-- END -->


</select>





<select id="afb700ukrServiceImpl.selectMainRef" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qre2] QUERY02
<!-- BEGIN -->


--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
    SET @COMP_CODE      = #{S_COMP_CODE}
    SET @DRAFT_NO       = #{DRAFT_NO}
    SET @SLIP_DATE      = #{SLIP_DATE}

    SELECT  
            B.COMP_CODE
          , B.DRAFT_NO
          , B.DRAFT_SEQ
          , CASE WHEN LEFT(A.DRAFT_DATE, 4) != LEFT(@SLIP_DATE, 4) THEN '2'
                 ELSE B.BUDG_GUBUN
            END AS BUDG_GUBUN
          , B.BUDG_CODE
          
          <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
          , C${index+1}.BUDG_NAME                                                           AS BUDG_NAME_${index+1}
          </foreach>
          
          
          , B.PJT_CODE
          , D1.PJT_NAME
          , B.BUDG_AMT
          , B.DRAFT_REMIND_AMT
    FROM                AFB600T   A  
            INNER JOIN  AFB610T   B   ON B.COMP_CODE   = A.COMP_CODE
                                                  AND B.DRAFT_NO    = A.DRAFT_NO                           
            INNER  JOIN  AFB400T   C${budgNameInfoList.size} ON C${budgNameInfoList.size}.COMP_CODE  = B.COMP_CODE
                                                  						 AND C${budgNameInfoList.size}.AC_YYYY    =  fnGetBudgAcYyyy(A.COMP_CODE, A.DRAFT_DATE)
                                              	  						 AND C${budgNameInfoList.size}.BUDG_CODE  = B.BUDG_CODE
            <foreach collection="budgNameInfoList" item="budgNameInfo" index="index">
           		<if test="index+1 != budgNameInfoList.size">
            	INNER  JOIN  AFB400T   C${budgNameInfoList.size-(index+1)}  ON C${budgNameInfoList.size-(index+1)}.COMP_CODE  = C${budgNameInfoList.size-(index)}.COMP_CODE    
	                                                           						   AND C${budgNameInfoList.size-(index+1)}.AC_YYYY    = C${budgNameInfoList.size-(index)}.AC_YYYY      
	                                                           						   AND C${budgNameInfoList.size-(index+1)}.BUDG_CODE  = C${budgNameInfoList.size-(index)}.TREE_LEVEL 
            	</if>
            </foreach>                                   
            LEFT  JOIN  BCM600T   D1  ON D1.COMP_CODE  = B.COMP_CODE
                                                  AND D1.PJT_CODE   = B.PJT_CODE
    WHERE   A.COMP_CODE     = @COMP_CODE
    AND     A.DRAFT_NO      = @DRAFT_NO
    ORDER BY B.DRAFT_NO, B.DRAFT_SEQ


<!-- END -->
</select>

<select id="afb700ukrServiceImpl.selectCorporationCardList" parameterType="Map" resultType="rMap">
--afb700ukr.Cafb700ukr[fnAfb700Qre1] QUERY01
<!-- BEGIN -->


--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
    SET @COMP_CODE          = #{S_COMP_CODE}
    SET @FR_DATE            = #{FR_DATE}
    SET @TO_DATE            = #{TO_DATE}
    SET @CARD_NO            = #{CRDT_NUM}
    SET @CARD_NM            = #{CRDT_NAME}
    SET @SLIP_DATE          = #{SLIP_DATE}
    SET @PAY_USER           = #{PAY_USER}

--  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
    <!-- DECLARE         @DateFormat         NVARCHAR(10) -->

    set @DateFormat = ''
    
    DO(
        select * from (
            SELECT @DateFormat := M1.CODE_NAME
            FROM   BSA100T M1 
            WHERE  M1.COMP_CODE = @COMP_CODE
            AND    M1.MAIN_CODE = 'B044'
            AND    M1.REF_CODE1 = 'Y'
        )  TOPT where rownum = 1
    )

    SET @DateFormat = NVL(@DateFormat, 'YYYY/MM/DD')

--  [법인카드내역 사용자 권한 설정 ] ----------------------------------------------------------------------------------
    <!-- DECLARE         @CardAuthor         NVARCHAR(01) -->

    set @CardAuthor = ''
    
    DO(
        select * from (
            SELECT @CardAuthor := REF_CODE1
            FROM   BSA100T 
            WHERE  COMP_CODE = @COMP_CODE
            AND    MAIN_CODE = 'A169'
            AND    SUB_CODE  = '30'
        )  TOPT where rownum = 1
    )

    SET @CardAuthor = NVL(@CardAuthor, 'Y')

--  [ 지급예정일 설정 ] -----------------------------------------------------------------------------------------------
    <!-- DECLARE         @SendDate           NVARCHAR(08) -->

    SET @SendDate           = LEFT(@SLIP_DATE, 6) + '01'

--  [ 데이터 조회 ] ---------------------------------------------------------------------------------------------------
    SELECT  
            <!-- CONVERT(BIT, 0)                                                             AS CHOICE -->
            CAST(0 AS BIT)                                                             AS CHOICE
          , T.CRDT_COMP_CD
          , T.CRDT_COMP_NM
          , T.CRDT_NUM
          , T.CRDT_FULL_NUM
          , REPLACE(
            REPLACE(
            REPLACE(@DateFormat, 'YYYY', SUBSTR(T.APPR_DATE, 1, 4))
                               , 'MM'  , SUBSTR(T.APPR_DATE, 5, 2))
                               , 'DD'  , SUBSTR(T.APPR_DATE, 7, 2))                  AS APPR_DATE
          , T.CHAIN_NAME
          , T.CHAIN_ID
          , T.CUSTOM_CODE
          , T.CUSTOM_NAME
          , T.APPR_AMT_I
          , T.APPR_TAX_I
          , T.APPR_NO
          , T.DEDUCT_YN
          , T.PAY_DIVI
          , T.PAY_CUSTOM_CODE
          , U.CUSTOM_NAME                                                               AS PAY_CUSTOM_NAME
          , REPLACE(
            REPLACE(
            REPLACE(@DateFormat, 'YYYY', SUBSTR(T.SEND_DATE, 1, 4))
                               , 'MM'  , SUBSTR(T.SEND_DATE, 5, 2))
                               , 'DD'  , SUBSTR(T.SEND_DATE, 7, 2))                  AS SEND_DATE
          , T.REFER_NUM
          , CASE WHEN NVL(T.APPR_AMT_I, 0) &lt; 0 THEN 'Y'
                 ELSE 'N'
            END                                                                         AS CANCEL_YN
    FROM                (
                        SELECT  A.COMP_CODE
                              , A.CARD_COMP_CODE                                                                                        AS CRDT_COMP_CD
                              , D2.CUSTOM_NAME                                                                                          AS CRDT_COMP_NM
                              , B.CRDT_NUM                                                                                              AS CRDT_NUM
                              ,  fnCipherDecrypt(A.CARD_NO, 'C')                                                                 AS CRDT_FULL_NUM
                              , A.APPR_DATE
                              , A.CHAIN_NAME
                              , SUBSTR(A.CHAIN_ID, 1, 3) + '-'
                              + SUBSTR(A.CHAIN_ID, 4, 2) + '-'
                              + SUBSTR(A.CHAIN_ID, 6, 5)                                                                             AS CHAIN_ID
                              , A.CUSTOM_CODE
                              , D1.CUSTOM_NAME
                              , A.APPR_AMT_I
                              , A.APPR_TAX_I
                              , A.APPR_NO
                              , M3.CODE_NAME                                                                                            AS DEDUCT_YN
                              , M1.SUB_CODE                                                                                             AS PAY_DIVI
                              , CASE WHEN NVL(B.CRDT_COMP_CD, '') = ''
                                     THEN M2.REF_CODE3
                                     ELSE B.CRDT_COMP_CD
                                END                                                                                                     AS PAY_CUSTOM_CODE
                              , CASE WHEN NVL(B.SET_DATE, '') = ''
                                     <!-- THEN CONVERT(NVARCHAR, DATEADD(DAY, -1, DATEADD(MONTH, 2, @SendDate)), 112) -->
                                     THEN  TO_CHAR( ADDDATE(ADD_MONTHS(@SendDate, 2), -1), 'YYYYMMDD')
                                     <!-- ELSE LEFT(CONVERT(NVARCHAR, DATEADD(MONTH, 1, @SendDate), 112), 6) + RIGHT('0' + B.SET_DATE, 2) -->
                                     ELSE LEFT(TO_CHAR(ADD_MONTHS(@SendDate, 1), 'YYYYMMDD'), 6) + RIGHT('0' + B.SET_DATE, 2)
                                END                                                                                                     AS SEND_DATE
                              , A.COMP_CODE
                                +  fnCipherDecrypt(A.CARD_NO, '')
                                + A.APPR_DATE
                                <!-- + CONVERT(NVARCHAR(20), A.SEQ) -->
                                + CAST(A.SEQ AS VARCHAR(30))
                                + A.APPR_NO
                                + A.CANCEL_YN                                                                                           AS REFER_NUM
                        FROM                ABH600T   A  
                                LEFT  JOIN  ABA500T   B   ON B.COMP_CODE       = A.COMP_CODE
                                                                      AND REPLACE( fnCipherDecrypt(B.CRDT_FULL_NUM, ''), '-', '') = REPLACE( fnCipherDecrypt(A.CARD_NO, ''), '-', '')
                                LEFT  JOIN  BCM100T   D1  ON D1.COMP_CODE      = A.COMP_CODE
                                                                      AND D1.CUSTOM_CODE    = A.CUSTOM_CODE
                                LEFT  JOIN  BCM100T   D2  ON D2.COMP_CODE      = A.COMP_CODE
                                                                      AND D2.CUSTOM_CODE    = A.CARD_COMP_CODE
                                LEFT  JOIN  BSA100T   M1  ON M1.COMP_CODE      = A.COMP_CODE
                                                                      AND M1.MAIN_CODE      = 'A172'
                                                                      AND M1.REF_CODE2      = 'C'
                                LEFT  JOIN  BSA100T   M2  ON M2.COMP_CODE      = B.COMP_CODE
                                                                      AND M2.MAIN_CODE      = 'A028'
                                                                      AND M2.SUB_CODE       = B.CRDT_KIND
                                LEFT  JOIN  BSA100T   M3  ON M3.COMP_CODE      = B.COMP_CODE
                                                                      AND M3.MAIN_CODE      = 'A109'
                                                                      AND M3.SUB_CODE       = A.DEDUCT_YN
                        WHERE   A.COMP_CODE      =       @COMP_CODE
                        AND     A.APPR_DATE     &gt;=       @FR_DATE
                        AND     A.APPR_DATE     &lt;=       @TO_DATE
                        AND   ((B.CRDT_NUM    LIKE       @CARD_NO + '%'     AND @CARD_NO    != '') OR (@CARD_NO = ''))
                        AND   ((B.CRDT_NAME   LIKE '%' + @CARD_NM + '%'     AND @CARD_NM    != '') OR (@CARD_NM = ''))
                        AND   ((B.PERSON_NUMB    =       @PAY_USER          AND @CardAuthor = 'Y') OR (@CardAuthor = 'N'))
                        AND     NVL(A.PAY_REFT_NO, '') = ''
                        ) T
            LEFT  JOIN  BCM100T U   ON U.COMP_CODE     = T.COMP_CODE
                                                AND U.CUSTOM_CODE   = T.PAY_CUSTOM_CODE


<!-- END -->


</select>








<select id="afb700ukrServiceImpl.selectDraftNoList" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qpop] QUERY01		/* 예산기안(추산)참조 */
	<!-- BEGIN -->

	
	--  [ 변수 값 할당 ] ------------------------------------------------------------------------------------------
	    SET @COMP_CODE      = #{S_COMP_CODE}
	    SET @FR_DATE        = #{FR_DATE}
	    SET @TO_DATE        = #{TO_DATE}
	    SET @DRAFTER        = #{DRAFTER_PN}
	    SET @DRAFTER_NM     = #{DRAFTER_NM}
	    SET @DRAFT_NO       = #{DRAFT_NO}
	    SET @DEPT_CODE      = #{DEPT_CODE}
	    SET @DEPT_NAME      = #{DEPT_NAME}
	    SET @CHARGE_DIVI    = #{CHARGE_DIVI} 
	    SET @QRY_TYPE       = #{QRY_TYPE}
	
	--  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
	    <!-- DECLARE         @DateFormat         NVARCHAR(10) -->
        
        set @DateFormat = (
            select * from (
        	    SELECT @DateFormat := M1.CODE_NAME
        	    FROM   BSA100T M1 
        	    WHERE  M1.COMP_CODE = @COMP_CODE
        	    AND    M1.MAIN_CODE = 'B044'
        	    AND    M1.REF_CODE1 = 'Y'
            )  TOPT where rownum = 1
        )
	
	    SET @DateFormat = NVL(@DateFormat, 'YYYY/MM/DD')
	
	--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
	    SELECT  A.DRAFT_NO
	          , REPLACE(
	            REPLACE(
	            REPLACE(@DateFormat, 'YYYY', SUBSTR(A.DRAFT_DATE, 1, 4))
	                               , 'MM'  , SUBSTR(A.DRAFT_DATE, 5, 2))
	                               , 'DD'  , SUBSTR(A.DRAFT_DATE, 7, 2))     AS DRAFT_DATE
	          , B1.NAME                                                         AS DRAFTER
	          , B2.NAME                                                         AS PAY_USER
	          , A.DEPT_CODE
	          , C1.TREE_NAME                                                    AS DEPT_NAME
	          , C2.DIV_NAME
	          , A.TITLE
	          , SUM(A1.BUDG_AMT)                                                AS BUDG_AMT
	          , SUM(A1.PAY_DRAFT_AMT)                                           AS PAY_DRAFT_AMT
	          , SUM(A1.DRAFT_REMIND_AMT)                                        AS DRAFT_REMIND_AMT
	    FROM                AFB600T   A  
	            INNER JOIN  (SELECT COMP_CODE
	                              , DRAFT_NO
	                              , SUM(BUDG_AMT)            AS BUDG_AMT
	                              , SUM(PAY_DRAFT_AMT)       AS PAY_DRAFT_AMT
	                              , SUM(DRAFT_REMIND_AMT)    AS DRAFT_REMIND_AMT
	                         FROM   AFB610T 
	                         GROUP BY COMP_CODE, DRAFT_NO, BUDG_AMT
	                        )         A1               ON A1.COMP_CODE      = A.COMP_CODE
	                                                  AND A1.DRAFT_NO       = A.DRAFT_NO
	            LEFT  JOIN  HUM100T   B1  ON B1.COMP_CODE      = A.COMP_CODE
	                                                  AND B1.PERSON_NUMB    = A.DRAFTER
	            LEFT  JOIN  HUM100T   B2  ON B2.COMP_CODE      = A.COMP_CODE
	                                                  AND B2.PERSON_NUMB    = A.PAY_USER
	            LEFT  JOIN  BSA210T   C1  ON C1.COMP_CODE      = A.COMP_CODE
	                                                  AND C1.TREE_CODE      = A.DEPT_CODE
	            LEFT  JOIN  BOR120T   C2  ON C2.COMP_CODE      = A.COMP_CODE
	                                                  AND C2.DIV_CODE       = A.DIV_CODE
	    WHERE   A.COMP_CODE        =       @COMP_CODE
	    AND     A.DRAFT_DATE      &gt;=       @FR_DATE
	    AND     A.DRAFT_DATE      &lt;=       @TO_DATE
	    AND   ((A.DRAFTER       LIKE       @DRAFTER    + '%'    AND @DRAFTER    != ''  AND  @CHARGE_DIVI    = '1')
	    OR     (A.DRAFTER          =       @DRAFTER             AND @DRAFTER    != ''  AND  @CHARGE_DIVI    = '2')
	    OR     (@DRAFTER           = ''))
	    AND   ((B1.NAME         LIKE '%' + @DRAFTER_NM + '%'    AND @DRAFTER_NM != '')  OR (@DRAFTER_NM     = ''))
	    AND   ((A.DRAFT_NO      LIKE       @DRAFT_NO   + '%'    AND @DRAFT_NO   != '')  OR (@DRAFT_NO       = ''))
	    AND   ((A.DEPT_CODE     LIKE       @DEPT_CODE  + '%'    AND @DEPT_CODE  != '')  OR (@DEPT_CODE      = ''))
	    AND   ((C1.TREE_NAME    LIKE '%' + @DEPT_NAME  + '%'    AND @DEPT_NAME  != '')  OR (@DEPT_NAME      = ''))
	    AND     A.CONFIRM_YN       = 'Y'
	    AND     A.AGREE_YN         = 'Y'
	    AND   ((@QRY_TYPE          = 'A'                              ) OR
	           (@QRY_TYPE          = 'I' AND A1.DRAFT_REMIND_AMT != 0 ) OR
	           (@QRY_TYPE          = 'E' AND A1.DRAFT_REMIND_AMT  = 0 ))
	    GROUP   BY  A.DRAFT_NO, A.DRAFT_DATE, B1.NAME, B2.NAME, A.DEPT_CODE, C1.TREE_NAME, C2.DIV_NAME, A.TITLE
	    ORDER   BY  A.DRAFT_NO
	<!-- END -->

</select>

<select id="afb700ukrServiceImpl.selectPayDtlNoList" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qpop2] QUERY01		/* 지급명세서 참조 */
<!-- BEGIN -->


--  [ 변수 값 할당 ] ------------------------------------------------------------------------------------------
    SET @COMP_CODE      = #{S_COMP_CODE}
    SET @FR_DATE        = #{FR_DATE}
    SET @TO_DATE        = #{TO_DATE}
    SET @DRAFTER        = #{DRAFTER_PN} 
    SET @DRAFTER_NM     = #{DRAFTER_NM} 
    SET @PAY_DTL_NO     = #{PAY_DTL_NO}   
    SET @DEPT_CODE      = #{DEPT_CODE}  
    SET @DEPT_NAME      = #{DEPT_NAME}  
    SET @CHARGE_DIVI    = #{CHARGE_DIVI}
    SET @QRY_TYPE       = #{QRY_TYPE}   

--  [ 날짜 포맷 유형 설정 ] -------------------------------------------------------------------------------------------
    <!-- DECLARE         @DateFormat         NVARCHAR(10) -->

    set @DateFormat = (
        select * from (
            SELECT @DateFormat = M1.CODE_NAME
            FROM   BSA100T M1 
            WHERE  M1.COMP_CODE = @COMP_CODE
            AND    M1.MAIN_CODE = 'B044'
            AND    M1.REF_CODE1 = 'Y'
        )  TOPT where rownum = 1
    )

    SET @DateFormat = NVL(@DateFormat, 'YYYY/MM/DD')

--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
    SELECT  A.PAY_DTL_NO
          , REPLACE(
            REPLACE(
            REPLACE(@DateFormat, 'YYYY', SUBSTR(A.PAY_DATE, 1, 4))
                               , 'MM'  , SUBSTR(A.PAY_DATE, 5, 2))
                               , 'DD'  , SUBSTR(A.PAY_DATE, 7, 2))       AS PAY_DATE
          , B1.NAME                                                         AS DRAFTER
          , A.DEPT_CODE
          , C1.TREE_NAME                                                    AS DEPT_NAME
          , C2.DIV_NAME
          , A.TITLE
          , NVL(A1.TOT_AMT_I, 0)                                         AS TOT_AMT_I
          , A.PAY_DRAFT_NO
    FROM                AFB720T   A  
            INNER JOIN  (
                        SELECT  COMP_CODE
                              , PAY_DTL_NO
                              , SUM(TOT_AMT_I) AS TOT_AMT_I
                        FROM    AFB721T 
                        WHERE   COMP_CODE = @COMP_CODE
                        GROUP   BY  COMP_CODE, PAY_DTL_NO
                       )          A1               ON A1.COMP_CODE      = A.COMP_CODE
                                                  AND A1.PAY_DTL_NO     = A.PAY_DTL_NO
            LEFT  JOIN  HUM100T   B1  ON B1.COMP_CODE      = A.COMP_CODE
                                                  AND B1.PERSON_NUMB    = A.DRAFTER
            LEFT  JOIN  BSA210T   C1  ON C1.COMP_CODE      = A.COMP_CODE
                                                  AND C1.TREE_CODE      = A.DEPT_CODE
            LEFT  JOIN  BOR120T   C2  ON C2.COMP_CODE      = A.COMP_CODE
                                                  AND C2.DIV_CODE       = A.DIV_CODE
    WHERE   A.COMP_CODE        =       @COMP_CODE
    AND     A.PAY_DATE        &gt;=       @FR_DATE
    AND     A.PAY_DATE        &lt;=       @TO_DATE
    AND   ((A.DRAFTER       LIKE       @DRAFTER    + '%'    AND @DRAFTER    != ''  AND  @CHARGE_DIVI    = '1')
    OR     (A.DRAFTER          =       @DRAFTER             AND @DRAFTER    != ''  AND  @CHARGE_DIVI    = '2')
    OR     (@DRAFTER           = ''))
    AND   ((B1.NAME         LIKE '%' + @DRAFTER_NM + '%'    AND @DRAFTER_NM != '')  OR (@DRAFTER_NM     = ''))
    AND   ((A.PAY_DTL_NO    LIKE       @PAY_DTL_NO + '%'    AND @PAY_DTL_NO != '')  OR (@PAY_DTL_NO     = ''))
    AND   ((A.DEPT_CODE     LIKE       @DEPT_CODE  + '%'    AND @DEPT_CODE  != '')  OR (@DEPT_CODE      = ''))
    AND   ((C1.TREE_NAME    LIKE '%' + @DEPT_NAME  + '%'    AND @DEPT_NAME  != '')  OR (@DEPT_NAME      = ''))
    AND   ((@QRY_TYPE       = 'A'                              ) OR
           (@QRY_TYPE       = 'I' AND NVL(A.PAY_DRAFT_NO, '')  = '' ) OR
           (@QRY_TYPE       = 'E' AND NVL(A.PAY_DRAFT_NO, '') != ''))
    ORDER   BY  A.PAY_DTL_NO
<!-- END -->
</select>












<select id="afb700ukrServiceImpl.selectDedAmtCheckList" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qpop3] QUERY01
	<!-- BEGIN -->

	
	    SET @COMP_CODE      = #{S_COMP_CODE}
	    SET @PAY_DRAFT_NO   = #{PAY_DRAFT_NO}
	
	    SELECT * 
	    FROM   AFB711T 
	    WHERE  COMP_CODE    = @COMP_CODE
	    AND    PAY_DRAFT_NO = @PAY_DRAFT_NO
	<!-- END -->
</select>

<select id="afb700ukrServiceImpl.selectDedAmtMasterList" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qpop3] QUERY03
	<!-- BEGIN -->

	
	--   변수 값 할당  ------------------------------------------------------------------------------------------
	    SET @COMP_CODE      = #{S_COMP_CODE}
	    SET @PAY_DRAFT_NO   = #{PAY_DRAFT_NO}
	    SET @PAY_YYMM       = #{PAY_YYMM}
	    SET @SUPP_TYPE      = #{SUPP_TYPE}
	    SET @COST_POOL      = #{COST_POOL}
	    SET @PERSON_GROUP   = #{PERSON_GROUP}
	    SET @AFFIL_CODE     = #{AFFIL_CODE}
	    SET @FR_DEPT_CODE   = #{FR_DEPT_CODE} 
	    SET @FR_DEPT_NAME   = #{FR_DEPT_NAME} 
	    SET @TO_DEPT_CODE   = #{TO_DEPT_CODE} 
	    SET @TO_DEPT_NAME   = #{TO_DEPT_NAME} 
	
	--   데이터 조회  -------------------------------------------------------------------------------------------
	    SELECT  A.COMP_CODE
	          , A.PAY_DRAFT_NO
	          , A.PAY_YYYYMM
	          , A.SUPP_TYPE
	          , NVL(A.COST_POOL   , '') AS COST_POOL
	          , NVL(A.PERSON_GROUP, '') AS PERSON_GROUP
	          , NVL(A.AFFIL_CODE  , '') AS AFFIL_CODE
	          , NVL(A.FR_DEPT_CODE, '') AS FR_DEPT_CODE
	          , NVL(A.FR_DEPT_NAME, '') AS FR_DEPT_NAME
	          , NVL(A.TO_DEPT_CODE, '') AS TO_DEPT_CODE
	          , NVL(A.TO_DEPT_NAME, '') AS TO_DEPT_NAME
	          , NVL(B.DED_AMT_TOT, 0)   AS DED_AMT_TOT
	          , #{sExistYN}       AS EXISTS_YN
	    FROM               AFB711T A 
	            LEFT  JOIN (SELECT COMP_CODE 
	                             , PAY_DRAFT_NO
	                             , SUM(NVL(DED_AMOUNT_I, 0)) AS DED_AMT_TOT
	                        FROM   AFB711T 
	                        WHERE  COMP_CODE    = @COMP_CODE
	                        AND    PAY_DRAFT_NO = @PAY_DRAFT_NO
	                        GROUP BY COMP_CODE, PAY_DRAFT_NO
	                       )       B               ON B.COMP_CODE     = A.COMP_CODE
	                                              AND B.PAY_DRAFT_NO  = A.PAY_DRAFT_NO
	    WHERE   A.COMP_CODE        =       @COMP_CODE
	    AND     A.PAY_DRAFT_NO     =       @PAY_DRAFT_NO
	<!-- END -->
</select>

<select id="afb700ukrServiceImpl.selectDedAmtDetailList1" parameterType="Map" resultType="rMap">
	 --afb700ukr.Cafb700ukr[fnAfb700Qpop3] QUERY02
        <!-- BEGIN -->
 
        
        --   변수 값 할당  ------------------------------------------------------------------------------------------
            SET @COMP_CODE      = #{S_COMP_CODE}
            SET @PAY_DRAFT_NO   = #{PAY_DRAFT_NO}
            SET @PAY_YYMM       = #{PAY_YYMM}
            SET @SUPP_TYPE      = #{SUPP_TYPE}
            SET @COST_POOL      = #{COST_POOL}
            SET @PERSON_GROUP   = #{PERSON_GROUP}
            SET @AFFIL_CODE     = #{AFFIL_CODE}
		  	SET @FR_DEPT_CODE   = #{FR_DEPT_CODE} 
		  	SET @FR_DEPT_NAME   = #{FR_DEPT_NAME} 
		  	SET @TO_DEPT_CODE   = #{TO_DEPT_CODE} 
		  	SET @TO_DEPT_NAME   = #{TO_DEPT_NAME} 
            SET @USER_ID        = #{S_USER_ID}
        
        --  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
            SELECT  ROW_NUMBER() OVER(PARTITION BY B.COMP_CODE ORDER BY B.REF_CODE2) AS SEQ
                  , A.COMP_CODE
                  , @PAY_DRAFT_NO   AS PAY_DRAFT_NO
                  , A.DED_CODE
                  , B.CODE_NAME     AS DED_NAME
                  
                  , A.DED_AMOUNT_I AS DED_AMOUNT_I_DUMMY		
                  , A.DED_AMOUNT_I_DUMMY AS DED_AMOUNT_I		--필드가 수정 된것처럼 만들기 위한 DUMMY값 ..
                  
                  , A.PAY_YYYYMM
                  , A.SUPP_TYPE
                  , @COST_POOL      AS COST_POOL
                  , @PERSON_GROUP   AS PERSON_GROUP
                  , @AFFIL_CODE     AS AFFIL_CODE
                  , @FR_DEPT_CODE   AS FR_DEPT_CODE
                  , @FR_DEPT_NAME   AS FR_DEPT_NAME
                  , @TO_DEPT_CODE   AS TO_DEPT_CODE
                  , @TO_DEPT_NAME   AS TO_DEPT_NAME
                  , @USER_ID        AS INSERT_DB_USER
                  , SYS_DATETIME       AS INSERT_DB_TIME
                  , @USER_ID        AS UPDATE_DB_USER
                  , SYS_DATETIME       AS UPDATE_DB_TIME
                  , 'N'             AS UPDATE_MODE
            FROM   (SELECT  
                            A.COMP_CODE         AS COMP_CODE
                          , A.PAY_YYYYMM        AS PAY_YYYYMM
                          , A.SUPP_TYPE         AS SUPP_TYPE
                          , B.DED_CODE          AS DED_CODE
                          
                          , SUM(B.DED_AMOUNT_I) AS DED_AMOUNT_I
                          , 7777777 AS DED_AMOUNT_I_DUMMY --필드가 수정 된것처럼 만들기 위한 DUMMY값 ..
                          
                    FROM               HPA600T A  
                            INNER JOIN HPA400T B   ON B.COMP_CODE    = A.COMP_CODE
                                                               AND B.PAY_YYYYMM   = A.PAY_YYYYMM
                                                               AND B.SUPP_TYPE    = A.SUPP_TYPE
                                                               AND B.PERSON_NUMB  = A.PERSON_NUMB
                            LEFT  JOIN HUM100T C   ON C.COMP_CODE    = A.COMP_CODE
                                                               AND C.PERSON_NUMB  = A.PERSON_NUMB
                            LEFT  JOIN BSA100T M1  ON M1.COMP_CODE   = A.COMP_CODE
                                                               AND M1.MAIN_CODE   = 'H024'    -- 사원구분
                                                               AND M1.SUB_CODE    = C.EMPLOY_TYPE
                            LEFT  JOIN BSA100T M2  ON M2.COMP_CODE   = A.COMP_CODE
                                                               AND M2.MAIN_CODE   = 'H173'    -- 직렬코드
                                                               AND M2.SUB_CODE    = C.AFFIL_CODE
                            LEFT  JOIN BSA100T M3  ON M3.COMP_CODE   = A.COMP_CODE
                                                               AND M3.MAIN_CODE   = 'H181'    -- 사원그룹
                                                               AND M3.SUB_CODE    = M1.REF_CODE1
                    WHERE   A.COMP_CODE        =       @COMP_CODE
                    AND     A.PAY_YYYYMM       =       @PAY_YYMM
                    AND     A.SUPP_TYPE        =       @SUPP_TYPE
                    AND   ((A.COST_KIND     LIKE       @COST_POOL     + '%'    AND @COST_POOL     != '')  OR (@COST_POOL         = ''))
                    AND   ((M3.SUB_CODE     LIKE       @PERSON_GROUP  + '%'    AND @PERSON_GROUP  != '')  OR (@PERSON_GROUP      = ''))
                    AND   ((M2.SUB_CODE     LIKE       @AFFIL_CODE    + '%'    AND @AFFIL_CODE    != '')  OR (@AFFIL_CODE        = ''))
                    AND   ((A.DEPT_CODE       &gt;=       @FR_DEPT_CODE           AND @FR_DEPT_CODE  != '')  OR (@FR_DEPT_CODE      = ''))
                    AND   ((A.DEPT_CODE       &lt;=       @TO_DEPT_CODE           AND @TO_DEPT_CODE  != '')  OR (@TO_DEPT_CODE      = ''))
                  
                  
                    GROUP BY A.COMP_CODE, A.PAY_YYYYMM, A.SUPP_TYPE, B.DED_CODE
                    )                  A
                    LEFT  JOIN BSA100T B  ON B.COMP_CODE   = A.COMP_CODE
                                                      AND B.MAIN_CODE   = 'H034'    -- 공제코드
                                                      AND B.SUB_CODE    = A.DED_CODE
            ORDER   BY  B.REF_CODE2
        <!-- END -->
</select>
<select id="afb700ukrServiceImpl.selectDedAmtDetailList2" parameterType="Map" resultType="rMap">
	--afb700ukr.Cafb700ukr[fnAfb700Qpop3] QUERY03
	<!-- BEGIN -->

	
	--  [ 변수 값 할당 ] ------------------------------------------------------------------------------------------
	    SET @COMP_CODE      = #{S_COMP_CODE}    
	    SET @PAY_DRAFT_NO   = #{PAY_DRAFT_NO}   
	    SET @PAY_YYMM       = #{PAY_YYMM}       
	    SET @SUPP_TYPE      = #{SUPP_TYPE}      
	    SET @COST_POOL      = #{COST_POOL}      
	    SET @PERSON_GROUP   = #{PERSON_GROUP}   
	    SET @AFFIL_CODE     = #{AFFIL_CODE}      
	    SET @FR_DEPT_CODE   = #{FR_DEPT_CODE}
		SET @FR_DEPT_NAME   = #{FR_DEPT_NAME}
		SET @TO_DEPT_CODE   = #{TO_DEPT_CODE}
	 	SET @TO_DEPT_NAME   = #{TO_DEPT_NAME}
	
	--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
	    SELECT  ROW_NUMBER() OVER(PARTITION BY B.COMP_CODE ORDER BY B.REF_CODE2) AS SEQ
	          , A.COMP_CODE
	          , A.PAY_DRAFT_NO
	          , A.DED_CODE
	          , B.CODE_NAME AS DED_NAME
	          , A.DED_AMOUNT_I
	          , A.DED_AMOUNT_I	AS DED_AMOUNT_I_DUMMY
	          , A.PAY_YYYYMM
	          , A.SUPP_TYPE
	          , A.COST_POOL
	          , A.PERSON_GROUP
	          , A.AFFIL_CODE
	          , A.FR_DEPT_CODE
	          , A.FR_DEPT_NAME
	          , A.TO_DEPT_CODE
	          , A.TO_DEPT_NAME
	          , A.INSERT_DB_USER
	          , A.INSERT_DB_TIME
	          , A.UPDATE_DB_USER
	          , A.UPDATE_DB_TIME
	          , ''  AS UPDATE_MODE
	    FROM               AFB711T A 
	            LEFT  JOIN BSA100T B  ON B.COMP_CODE   = A.COMP_CODE
	                                              AND B.MAIN_CODE   = 'H034'    -- 공제코드
	                                              AND B.SUB_CODE    = A.DED_CODE
	    WHERE   A.COMP_CODE        =       @COMP_CODE
	    AND     A.PAY_DRAFT_NO     =       @PAY_DRAFT_NO
	    ORDER   BY  B.REF_CODE2
	<!-- END -->
</select>



<insert id="afb700ukrServiceImpl.insertDedAmtDetail" parameterType="Map">    	
	--afb700ukr.Cafb700ukr[fnAfb700Savepop3] Query02
INSERT INTO AFB711T
     ( COMP_CODE
     , PAY_DRAFT_NO
     , DED_CODE
     , DED_AMOUNT_I
     , PAY_YYYYMM
     , SUPP_TYPE
     
     , COST_POOL   
	 , PERSON_GROUP
	 , AFFIL_CODE  
	 , FR_DEPT_CODE
	 , FR_DEPT_NAME
	 , TO_DEPT_CODE
	 , TO_DEPT_NAME
     
     , INSERT_DB_USER
     , INSERT_DB_TIME
     , UPDATE_DB_USER
     , UPDATE_DB_TIME
     ) 
VALUES
     ( #{S_COMP_CODE}
     , #{PAY_DRAFT_NO}
     , #{DED_CODE}
     , #{DED_AMOUNT_I}
     , #{PAY_YYYYMM}
     , #{SUPP_TYPE}
     
     , #{COST_POOL}
     , #{PERSON_GROUP}
     , #{AFFIL_CODE}
     , #{FR_DEPT_CODE}
     , #{FR_DEPT_NAME}
     , #{TO_DEPT_CODE}
     , #{TO_DEPT_NAME}
     
     , #{S_USER_ID}
     , SYS_DATETIME
     , #{S_USER_ID}
     , SYS_DATETIME
     )
</insert>




<update id="afb700ukrServiceImpl.updateDedAmtDetail" parameterType="Map">	
	--afb700ukr.Cafb700ukr[fnAfb700Savepop3] Query02
	UPDATE AFB711T
	   SET DED_AMOUNT_I   = #{DED_AMOUNT_I}
	     , PAY_YYYYMM     = #{PAY_YYYYMM}
	     , SUPP_TYPE      = #{SUPP_TYPE}
	     , COST_POOL      = #{COST_POOL}
	     , PERSON_GROUP   = #{PERSON_GROUP}
	     , AFFIL_CODE     = #{AFFIL_CODE}
	     , FR_DEPT_CODE   = #{FR_DEPT_CODE}
	     , FR_DEPT_NAME   = #{FR_DEPT_NAME}
	     , TO_DEPT_CODE   = #{TO_DEPT_CODE}
	     , TO_DEPT_NAME   = #{TO_DEPT_NAME}
	     , INSERT_DB_USER = #{S_USER_ID}
	     , UPDATE_DB_USER = #{S_USER_ID}
	     , UPDATE_DB_TIME = SYS_DATETIME
	     
	 WHERE COMP_CODE      = #{S_COMP_CODE}
	   AND PAY_DRAFT_NO   = #{PAY_DRAFT_NO}
	   AND DED_CODE       = #{DED_CODE}
</update>

<select id="afb700ukrServiceImpl.beforeDeleteCheckDedAmtDetail" parameterType="Map" resultType="rMap">

<!-- sp생성필요 -->
{call AFB700UKR_BEFORE_DEL_CHK_DEDAMT_DTL (
        #{COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
        #{PAY_DRAFT_NO, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
        #{UPDATE_DB_USER, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
        #{ERROR_CODE, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
        #{ERROR_DESC, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
    )}

</select>

<update id="afb700ukrServiceImpl.deleteDedAmtDetail" parameterType="Map">
--afb700ukr.Cafb700ukr[fnAfb700DelAPop3] Query03
<!-- BEGIN -->

--  [ 변수 값 할당 ] ----------------------------------------------------------------------------------------------------------
    SET @COMP_CODE      = #{S_COMP_CODE}
    SET @PAY_DRAFT_NO   = #{PAY_DRAFT_NO}

--  [ 급여공제데이터 삭제 ] ---------------------------------------------------------------------------------------------------
    DELETE  FROM AFB711T
    WHERE   COMP_CODE       = @COMP_CODE
    AND     PAY_DRAFT_NO    = @PAY_DRAFT_NO
<!-- END -->
</update>



<insert id="afb700ukrServiceImpl.insertLogMaster" parameterType="Map">    	
 	INSERT INTO L_AFB700T
           (KEY_VALUE           ,OPR_FLAG
           ,COMP_CODE           ,PAY_DRAFT_NO          ,PAY_DATE           ,SLIP_DATE             ,DRAFTER
           ,PAY_USER            ,DEPT_CODE             ,DIV_CODE           ,BUDG_GUBUN            ,ACCNT_GUBUN
           ,TOT_AMT_I           ,TITLE                 ,TITLE_DESC         ,DRAFT_NO              ,PAY_DTL_NO
           ,RETURN_REASON       ,RETURN_PRSN           ,RETURN_DATE        ,RETURN_TIME           ,STATUS
           ,EX_DATE             ,EX_NUM                ,RETURN_CODE        ,INSERT_DB_USER        ,INSERT_DB_TIME
           ,UPDATE_DB_USER      ,UPDATE_DB_TIME        ,TEMPC_01           ,TEMPC_02              ,TEMPC_03
           ,TEMPN_01            ,TEMPN_02              ,TEMPN_03
           ,PASSWORD
          )
    VALUES
    (		#{KEY_VALUE}           ,#{OPR_FLAG}
           ,#{COMP_CODE}           ,#{PAY_DRAFT_NO}          ,#{PAY_DATE}           ,#{SLIP_DATE}             ,#{DRAFTER_PN}
           ,#{PAY_USER_PN}         ,#{DEPT_CODE}             ,#{DIV_CODE}           ,#{BUDG_GUBUN}            ,#{ACCNT_GUBUN}
           ,#{TOT_AMT_I}           ,#{TITLE}                 ,#{TITLE_DESC}         ,#{DRAFT_NO}              ,#{PAY_DTL_NO}
           ,NULL       			   ,NULL                     ,NULL                  ,NULL                     ,#{STATUS}
           ,NULL            	   ,NULL                     ,#{RETURN_CODE}        ,#{S_USER_ID}             ,SYS_DATETIME                
           ,#{S_USER_ID}           ,SYS_DATETIME        	     ,NULL       			,NULL                     ,NULL
           ,NULL       			   ,NULL                     ,NULL 
           ,fnCipherEncrypt(#{PASSWORD}, '')                 
           
    )
</insert>	  	

<insert id="afb700ukrServiceImpl.insertLogDetail" parameterType="Map">    	
 	INSERT INTO L_AFB710T
           (KEY_VALUE           ,OPR_FLAG           
           ,COMP_CODE           ,PAY_DRAFT_NO        ,SEQ                  ,BUDG_CODE             ,ACCNT
           ,PJT_CODE            ,BUDG_GUBUN          ,BIZ_REMARK           ,BIZ_GUBUN             ,PAY_DIVI
           ,PROOF_DIVI          ,SUPPLY_AMT_I        ,TAX_AMT_I            ,ADD_REDUCE_AMT_I      ,TOT_AMT_I
           ,INC_AMT_I           ,LOC_AMT_I           ,REAL_AMT_I           ,CUSTOM_CODE           ,CUSTOM_NAME
           ,BE_CUSTOM_CODE      ,PEND_CODE           ,PAY_CUSTOM_CODE      ,REMARK                ,EB_YN
           ,IN_BANK_CODE        ,IN_BANKBOOK_NUM     ,IN_BANKBOOK_NAME     ,CRDT_NUM              ,APP_NUM
           ,SAVE_CODE           ,REASON_CODE         ,BILL_DATE            ,SEND_DATE             ,DEPT_CODE
           ,DEPT_NAME           ,DIV_CODE            ,BILL_USER            ,REFER_NUM             ,DRAFT_NO
           ,DRAFT_SEQ           ,TRANS_SEQ           ,INSERT_DB_USER       ,INSERT_DB_TIME        ,UPDATE_DB_USER
           ,UPDATE_DB_TIME      ,TEMPC_01            ,TEMPC_02             ,TEMPC_03              ,TEMPN_01
           ,TEMPN_02            ,TEMPN_03
           )
     VALUES
     (		#{KEY_VALUE}           ,#{OPR_FLAG}           
           ,#{COMP_CODE}           ,#{PAY_DRAFT_NO}        ,#{SEQ}                  ,#{BUDG_CODE}             ,#{ACCNT}
           ,#{PJT_CODE}            ,#{BUDG_GUBUN}          ,#{BIZ_REMARK}           ,#{BIZ_GUBUN}             ,#{PAY_DIVI}
           ,#{PROOF_DIVI}          ,#{SUPPLY_AMT_I}        ,#{TAX_AMT_I}            ,#{ADD_REDUCE_AMT_I}      ,#{TOT_AMT_I}
           ,#{INC_AMT_I}           ,#{LOC_AMT_I}           ,#{REAL_AMT_I}           ,#{CUSTOM_CODE}           ,#{CUSTOM_NAME}
           ,#{BE_CUSTOM_CODE}      ,#{PEND_CODE}           ,#{PAY_CUSTOM_CODE}      ,#{REMARK}                ,#{EB_YN}
           ,#{IN_BANK_CODE}        ,fnCipherEncrypt(#{IN_BANKBOOK_NUM}, '') ,#{IN_BANKBOOK_NAME}      ,#{CRDT_NUM}              ,#{APP_NUM}
           ,#{SAVE_CODE}           ,#{REASON_CODE}         ,#{BILL_DATE}            ,#{SEND_DATE}             ,#{DEPT_CODE}
           ,#{DEPT_NAME}           ,#{DIV_CODE}            ,#{BILL_USER}            ,#{REFER_NUM}             ,#{DRAFT_NO}
           ,#{DRAFT_SEQ}           ,NULL                   ,#{S_USER_ID}            ,SYS_DATETIME                ,#{S_USER_ID}
           ,SYS_DATETIME      		   ,NULL       			   ,NULL                    ,NULL              		  ,NULL
           ,NULL       			   ,NULL                   
     
     )
</insert>
	  	

	  	
<update id="spUspAccntAfb700ukr" parameterType="Map" statementType="CALLABLE">
	{call USP_ACCNT_AFB700UKR (
		#{KeyValue, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{LangCode, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{UserId, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{PayDraftNo, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
		#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
</update>	

<update id="spUspAccntAfb700ukrDelA" parameterType="Map" statementType="CALLABLE">

{call USP_ACCNT_AFB700UKR_DelA (
		#{S_COMP_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{PAY_DRAFT_NO, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{S_LANG_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{S_USER_ID, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{DRAFTER_PN, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{PASSWORD, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{ErrorDesc, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
</update>	

<select id="afb700ukrServiceImpl.getUseColList" parameterType="Map" resultType="rMap">
	/*UBsaExKrv.CBsaExSKr[fnSheetHiddenYn] Query01*/
<!-- BEGIN -->


    SELECT REF_CODE3
         , CASE WHEN NVL(REF_CODE4, 'Y') = 'N' THEN 'False'
           ELSE 'True'
           END  AS REF_CODE4
      FROM BSA100T 
     WHERE COMP_CODE = @COMP_CODE
       AND MAIN_CODE = 'B114'
       AND REF_CODE1 = @PGM_ID
       AND REF_CODE2 = @SHEET_ID
     ORDER BY REF_CODE2

<!-- END	 -->	
</select>
<select id="afb700ukrServiceImpl.sAutoNoYN_sGapBase" parameterType="Map" resultType="rMap">
	/*afb600ukr.Cafb600UKR[fnafb600q] Query02*/

	
	SET     @COMP_CODE  = #{S_COMP_CODE}
	SET     @MAIN_CODE  = 'A151'
	
	/* 자동채번유무*/
	SET @REF_CODE1 = ''
    
    DO(
        select * from (
            SELECT  @REF_CODE1  := NVL(REF_CODE1, 'N')
        	FROM    BSA100T 
        	WHERE   COMP_CODE   = @COMP_CODE
        	AND     MAIN_CODE   = @MAIN_CODE
        	AND     NVL(REF_CODE1, 'N') = 'Y'
        )  TOPT where rownum = 1
    )
	
	SET     @REF_CODE1   = NVL(@REF_CODE1, 'N')
	
	/* 회계기준사용(1:K-GAAP, 2:K-IFRS)*/
	
    
    set @SUB_CODE = ''
    DO(
        select * from (
            SELECT  @SUB_CODE   := NVL(SUB_CODE, '1')
        	FROM    BSA100T 
        	WHERE   COMP_CODE   = @COMP_CODE
        	AND     MAIN_CODE   = @MAIN_CODE
        	AND     NVL(REF_CODE2, '') = 'Y'
        )  TOPT where rownum = 1
    )
	
	SET     @SUB_CODE   = NVL(@SUB_CODE, '1')
	
	SELECT  @REF_CODE1  AS REF_CODE1
	     ,  @SUB_CODE   AS SUB_CODE
</select>
</mapper>