<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="afb500skrServiceImpl">
<select id="afb500skrServiceImpl.selectBudgName" parameterType="Map" resultType="rMap">		/* BUDG_NAME 컬럼수*/
--UAccntPopupKrv.CAccntPopupKR[fnGetBudgCode] Query02
<!-- BEGIN -->
    <!-- DECLARE         @COMP_CODE          NVARCHAR(08) -->




--  [ 변수 값 할당 ] ------------------------------------------------------------------------------------------
    SET @COMP_CODE  = #{S_COMP_CODE}
--  [ 데이터 조회 ] -------------------------------------------------------------------------------------------
    SELECT  *
    FROM    fnGetBudgLevelName(@COMP_CODE, #{ST_DATE})
<!-- END -->	

<!-- SP생성필요 -->

</select>	

<select id="afb500skrServiceImpl.selectChargeGubun" parameterType="Map" resultType="rMap">		/* 집계구분 셋팅*/
--afb540skr.Cafb500skr[fnAfb540QStd] Query03
SELECT CASE WHEN NVL(B.DEPT_CODE, '') = '' THEN NVL(E.BUDG_TREE_CODE, A.DEPT_CODE)
            ELSE NVL(F.BUDG_TREE_CODE, B.DEPT_CODE)
       END                          AS DEPT_CODE
     , M1.REF_CODE2                 AS CHARGE_GUBUN      --현업부서구분(1:회계부서, 2:현업부서)
     , NVL(M2.REF_CODE1, 'Y')    AS ACCDEPT_GUBUN     --예산현황_실적부서 구분여부
     , NVL(M3.REF_CODE1, 'N')    AS ACCDEPT_USEYN     --예산현황_사용예산코드만 조회
  FROM            BSA300T AS A
       LEFT  JOIN HUM100T AS B ON B.COMP_CODE    = A.COMP_CODE
                                             AND B.PERSON_NUMB  = A.PERSON_NUMB
       LEFT  JOIN BSA210T AS E ON E.COMP_CODE    = A.COMP_CODE
                                             AND E.TREE_CODE    = A.DEPT_CODE
       LEFT  JOIN BSA210T AS F ON F.COMP_CODE    = B.COMP_CODE
                                             AND F.TREE_CODE    = B.DEPT_CODE
       LEFT  JOIN BSA100T AS M1  ON M1.COMP_CODE   = A.COMP_CODE
                                             AND M1.MAIN_CODE   = 'A009'
                                             AND M1.REF_CODE1   = A.USER_ID
       LEFT  JOIN BSA100T AS M2  ON M2.COMP_CODE   = A.COMP_CODE
                                             AND M2.MAIN_CODE   = 'A169'
                                             AND M2.SUB_CODE    = '60'
       LEFT  JOIN BSA100T AS M3  ON M3.COMP_CODE   = A.COMP_CODE
                                             AND M3.MAIN_CODE   = 'A169'
                                             AND M3.SUB_CODE    = '61'

 WHERE A.COMP_CODE = #{S_COMP_CODE}
   AND A.USER_ID   = #{S_USER_ID}
</select>

<select id="afb500skrServiceImpl.selectDeptBudg" parameterType="Map" resultType="rMap">		/* 부서정보, 예산현황 조회*/
--afb500skr.Cafb500skr[fnAfb500QStd] Query03
 
SELECT CASE WHEN NVL(B.DEPT_CODE, '') = '' THEN NVL(E.BUDG_TREE_CODE, A.DEPT_CODE)
            ELSE NVL(F.BUDG_TREE_CODE, B.DEPT_CODE)
       END                          AS DEPT_CODE2
     , M1.REF_CODE2                 AS CHARGE_GUBUN      --현업부서구분(1:회계부서, 2:현업부서)
     , NVL(M2.REF_CODE1, 'Y')    AS ACCDEPT_GUBUN     --예산현황_실적부서 구분여부
     , NVL(M3.REF_CODE1, 'N')    AS ACCDEPT_USEYN     --예산현황_사용예산코드만 조회
  FROM            BSA300T AS A
       LEFT  JOIN HUM100T AS B ON B.COMP_CODE    = A.COMP_CODE
                                             AND B.PERSON_NUMB  = A.PERSON_NUMB
       LEFT  JOIN BSA210T AS E ON E.COMP_CODE    = A.COMP_CODE
                                             AND E.TREE_CODE    = A.DEPT_CODE
       LEFT  JOIN BSA210T AS F ON F.COMP_CODE    = B.COMP_CODE
                                             AND F.TREE_CODE    = B.DEPT_CODE
       LEFT  JOIN BSA100T AS M1  ON M1.COMP_CODE   = A.COMP_CODE
                                             AND M1.MAIN_CODE   = 'A009'
                                             AND M1.REF_CODE1   = A.USER_ID
       LEFT  JOIN BSA100T AS M2  ON M2.COMP_CODE   = A.COMP_CODE
                                             AND M2.MAIN_CODE   = 'A169'
                                             AND M2.SUB_CODE    = '60'
       LEFT  JOIN BSA100T AS M3  ON M3.COMP_CODE   = A.COMP_CODE
                                             AND M3.MAIN_CODE   = 'A169'
                                             AND M3.SUB_CODE    = '61'

 WHERE A.COMP_CODE = #{S_COMP_CODE}
   AND A.USER_ID   = #{S_USER_ID}
</select>

<select id="afb500skrServiceImpl.selectAmtPoint" parameterType="Map" resultType="rMap">
--afb500skr.Cafb500skr[fnAfb500QStd]Query01
SELECT AMT_POINT
  FROM ABA100T
 WHERE COMP_CODE = #{S_COMP_CODE}
</select>
	
<select id="afb500skrServiceImpl.selectList" parameterType="Map" resultType="rMap">		/* 메인*/
 --afb500skr.Cafb500skr[fnAfb500QStd] Query05

        SET @slUnit = '1'
        
        DO(
        SELECT @slUnit := REF_CODE1 
		  FROM BSA100T 
		 WHERE COMP_CODE = #{S_COMP_CODE}
		   AND MAIN_CODE = 'B042' 
		   AND SUB_CODE  = #{MONEY_UNIT}
        )
		   
        
        SET @lUnit = @slUnit
        
        DROP VARIABLE @slUnit







--  [ 변수 값 할당 ] --------------------------------------------------------------------------------------------------
    SET @COMP_CODE    = #{S_COMP_CODE}
    SET @AC_YYYY      = #{AC_YYYY}
    SET @DEPT_CODE    = #{DEPT_CODE}
    SET @FR_BUDG_CODE = #{BUDG_CODE_FR}
    SET @TO_BUDG_CODE = #{BUDG_CODE_TO}
    SET @BUDG_TYPE    = #{BUDG_TYPE}
    SET @LOWER_DEPT   = #{LOWER_DEPT}
	SET @PROJECT_NO   = #{AC_PROJECT_CODE}

    SET @LEN          = LENGTH(@TO_BUDG_CODE)

--  [ 부서코드레벨 및 길이 가져오기 ] --------------------------------------------------------------------------------------------------

        SET @TREE_LEVEL = ''


        DO(
        SELECT @TREE_LEVEL := TREE_LEVEL
            -- , @LEVEL_LEN  := LENGTH(TREE_LEVEL)
          FROM BSA210T 
         WHERE COMP_CODE   = @COMP_CODE
           AND TREE_CODE   = @DEPT_CODE
           AND USE_YN      = 'Y'
        )

--  [ 회계기간 가져오기 ] --------------------------------------------------------------------------------------------------
    DO(
        SELECT @FnDate := SUBSTR(FN_DATE, 5, 2)
          FROM BOR100T 
         WHERE COMP_CODE = @COMP_CODE
    )

--  [ 예산코드자릿수 가져오기 ] --------------------------------------------------------------------------------------------------

    
    DO(   
        SELECT @LEVEL_LEN1 := NVL(LEVEL_NUM1, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    
    DO(   
        SELECT @LEVEL_LEN2 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    DO(   
        SELECT @LEVEL_LEN3 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    DO(   
        SELECT @LEVEL_LEN4 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    DO(   
        SELECT @LEVEL_LEN5 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0) + NVL(LEVEL_NUM5, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    DO(   
        SELECT @LEVEL_LEN6 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0) + NVL(LEVEL_NUM5, 0) + NVL(LEVEL_NUM6, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    DO(   
        SELECT @LEVEL_LEN7 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0) + NVL(LEVEL_NUM5, 0) + NVL(LEVEL_NUM6, 0) + NVL(LEVEL_NUM7, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )
    DO(   
        SELECT @LEVEL_LEN8 := NVL(LEVEL_NUM1, 0) + NVL(LEVEL_NUM2, 0) + NVL(LEVEL_NUM3, 0) + NVL(LEVEL_NUM4, 0) + NVL(LEVEL_NUM5, 0) + NVL(LEVEL_NUM6, 0) + NVL(LEVEL_NUM7, 0) + NVL(LEVEL_NUM8, 0)
          FROM AFB300T 
         WHERE COMP_CODE = @COMP_CODE
           AND AC_YYYY   = @AC_YYYY
    )

       
       

    --사업년도의 첫번째,마지막 예산년월 계산
    SET @FrBudgYyyyMm = @AC_YYYY + @FnDate + '01'
    
    DROP VARIABLE @FnDate
    
    
    <!-- SET @ToBudgYyyyMm = CONVERT(NVARCHAR,DATEADD(DD, -1, DATEADD(MM, 12, @FrBudgYyyyMm)),112) -->
    SET @ToBudgYyyyMm = TO_CHAR(ADDDATE(ADD_MONTHS(@FrBudgYyyyMm , 12) , -1), 'YYYYMMDD')

--  [ 임시 테이블 처리 ] ----------------------------------------------------------------------------------------------
    <!-- DECLARE     @TypeKey                NVARCHAR(20) -->

    <!-- SET @TypeKey  = REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(30), GETDATE(), 121), '-', ''), ':', ''), '.', ''), ' ', '') -->
    SET @TypeKey  = REPLACE(REPLACE(REPLACE(REPLACE(TO_CHAR(SYSDATETIME, 'YYYY-MM-DD HH24:MM:SS.FF'), '-', ''), ':', ''), '.', ''), ' ', '')



    DELETE FROM T_AFB500SKR1 WHERE  TYPE_KEY NOT LIKE LEFT(@TypeKey, 8) + '%'





--  [ 데이터 생성 ] ---------------------------------------------------------------------------------------------------
    -- 1. 예산확정정보 테이블(AFB510T)에서 데이터 조회하여 그리드 포맷에 맞춰 임시테이블에 INSERT
    --    (예산코드명을 레벨순서대로 펼침, 예산금액을 12개월로 펼침)
    INSERT INTO T_AFB500SKR1(TYPE_KEY, TYPE_FLAG, COMP_CODE, AC_YYYY, BUDG_YYYYMM, DEPT_CODE, DEPT_NAME, BUDG_CODE, BUDG_NAME
                           , BUDG_I_TOT, BUDG_I, BUDG_CONF_I, LAST_CONF_I, BUDG_CONV_I, BUDG_ASGN_I, BUDG_SUPP_I, BUDG_IWALL_I, BUDG_TYPE
    <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
                           , BUDG_CODE_${index+1}
    </foreach>
                            )
    SELECT @TypeKey                  AS TYPE_KEY
         , '0'                      AS TYPE_FLAG
         , B.COMP_CODE               AS COMP_CODE
         , @AC_YYYY                  AS AC_YYYY
         , B.BUDG_YYYYMM             AS BUDG_YYYYMM
         , B.DEPT_CODE               AS DEPT_CODE
         , C.TREE_NAME               AS DEPT_NAME
         , B.BUDG_CODE               AS BUDG_CODE
         , D.BUDG_NAME               AS BUDG_NAME
         , NVL(B.BUDG_CONF_I , 0)
         + NVL(B.BUDG_CONV_I , 0)
         + NVL(B.BUDG_ASGN_I , 0)
         + NVL(B.BUDG_SUPP_I , 0)
         + NVL(B.BUDG_IWALL_I, 0) AS BUDG_I_TOT
         , CASE WHEN B.BUDG_GUBUN = '1' THEN B.BUDG_I       ELSE 0 END AS BUDG_I
         , CASE WHEN B.BUDG_GUBUN = '1' THEN B.BUDG_CONF_I  ELSE 0 END AS BUDG_CONF_I
         , CASE WHEN B.BUDG_GUBUN = '2' THEN B.BUDG_CONF_I  ELSE 0 END AS LAST_CONF_I
         , CASE WHEN B.BUDG_GUBUN = '1' THEN B.BUDG_CONV_I  ELSE 0 END AS BUDG_CONV_I
         , CASE WHEN B.BUDG_GUBUN = '1' THEN B.BUDG_ASGN_I  ELSE 0 END AS BUDG_ASGN_I
         , CASE WHEN B.BUDG_GUBUN = '1' THEN B.BUDG_SUPP_I  ELSE 0 END AS BUDG_SUPP_I
         , CASE WHEN B.BUDG_GUBUN = '1' THEN B.BUDG_IWALL_I ELSE 0 END AS BUDG_IWALL_I
         , D.BUDG_TYPE               AS BUDG_TYPE
	
    <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
         , LEFT(B.BUDG_CODE, @LEVEL_LEN${index+1} ) AS BUDG_CODE_${index+1}
    </foreach>
    
      FROM            AFB510T AS B
    --'사용예산코드만 조회옵션이 'Y'이고 현업담당자이면 해당 예산코드만 조회되도록 inner join 처리
    <if test="ACCDEPT_USEYN == &quot;Y&quot;">
    	 <if test="CHARGE_GUBUN == &quot;2&quot;">
           INNER JOIN (SELECT COMP_CODE
                            , BUDG_CODE
                       FROM   AFB410T 
                       WHERE  COMP_CODE = @COMP_CODE
                       AND    AC_YYYY   = @AC_YYYY
                       AND    DEPT_CODE = '3100'
                       AND    USE_YN    = 'Y'
                       )        A                 ON A.COMP_CODE      = B.COMP_CODE
                                                 AND A.BUDG_CODE      = B.BUDG_CODE
    	 </if>
    </if>
           LEFT  JOIN AFB410T AS A ON A.COMP_CODE      = B.COMP_CODE
                                                 AND A.AC_YYYY        = @AC_YYYY
                                                 AND A.DEPT_CODE      = B.DEPT_CODE
                                                 AND A.BUDG_CODE      = B.BUDG_CODE

           LEFT  JOIN BSA210T AS C ON C.COMP_CODE = B.COMP_CODE
                                                 AND C.TREE_CODE = B.DEPT_CODE
           LEFT  JOIN AFB400T AS D ON D.COMP_CODE = B.COMP_CODE
                                                 AND D.AC_YYYY   = @AC_YYYY
                                                 AND D.BUDG_CODE = B.BUDG_CODE
    
     WHERE B.COMP_CODE                = @COMP_CODE
       AND B.BUDG_YYYYMM             &gt;= LEFT(@FrBudgYyyyMm, 6)
       AND B.BUDG_YYYYMM             &lt;= LEFT(@ToBudgYyyyMm, 6)
       AND ((B.DEPT_CODE              = @DEPT_CODE        AND @DEPT_CODE    != '' AND @LOWER_DEPT    != 'Y') OR 
            (C.TREE_LEVEL          LIKE @TREE_LEVEL + '%' AND @DEPT_CODE    != '' AND @LOWER_DEPT     = 'Y') OR
            (@DEPT_CODE               = '' ))
       AND ((B.BUDG_CODE             &gt;= @FR_BUDG_CODE     AND @FR_BUDG_CODE != '' ) OR (@FR_BUDG_CODE = '' ))
       AND ((LEFT(B.BUDG_CODE, @LEN) &lt;= @TO_BUDG_CODE     AND @TO_BUDG_CODE != '' ) OR (@TO_BUDG_CODE = '' ))
    
       AND ((D.BUDG_TYPE              = @BUDG_TYPE        AND @BUDG_TYPE    != '') OR (@BUDG_TYPE    = ''))
       AND ((D.PJT_CODE               = @PROJECT_NO       AND @PROJECT_NO   != '')  OR (@PROJECT_NO   = ''))
    
       AND D.GROUP_YN                 = 'N'


    -- 임시테이블에 레벨별 합계 INSERT
    
    <foreach collection="budgNameInfoList" item="budgNameInfo" index="index" >
        INSERT INTO T_AFB500SKR1(TYPE_KEY, TYPE_FLAG, COMP_CODE, DEPT_CODE, DEPT_NAME, BUDG_CODE, BUDG_NAME, CODE_LEVEL
                               , BUDG_I_TOT, BUDG_I, BUDG_CONF_I, LAST_CONF_I, BUDG_CONV_I, BUDG_ASGN_I, BUDG_SUPP_I, BUDG_IWALL_I
                               , BUDG_TYPE)
        SELECT X.TYPE_KEY   AS TYPE_KEY
             , '1'         AS TYPE_FLAG
             , X.COMP_CODE  AS COMP_CODE

        <if test="RDO == &quot;1&quot;">
             , X.DEPT_CODE  AS DEPT_CODE
             , X.DEPT_NAME  AS DEPT_NAME
        </if>
        <if test="RDO == &quot;2&quot;">
             <!-- , CONVERT(NVARCHAR(08),'') AS DEPT_CODE -->
             , CAST( '' AS VARCHAR(12)) AS DEPT_CODE 
             <!-- , CONVERT(NVARCHAR(30),'') AS DEPT_NAME -->
             , CAST( '' AS VARCHAR(45)) AS DEPT_NAME
        </if>
             , LEFT(X.BUDG_CODE, @LEVEL_LEN${index+1} ) AS BUDG_CODE
             , SPACE((${index+1} -1) * 2) + Y.BUDG_NAME AS BUDG_NAME
             , Y.CODE_LEVEL AS CODE_LEVEL
             
             , NVL(ROUND(SUM(X.BUDG_I_TOT)    /@lUnit ${sSqlAmtPoint},0)  AS BUDG_I_TOT
             , NVL(ROUND(SUM(X.BUDG_I)        /@lUnit ${sSqlAmtPoint},0)  AS BUDG_I
             , NVL(ROUND(SUM(X.BUDG_CONF_I)   /@lUnit ${sSqlAmtPoint},0)  AS BUDG_CONF_I
             , NVL(ROUND(SUM(X.LAST_CONF_I)   /@lUnit ${sSqlAmtPoint},0)  AS LAST_CONF_I
             , NVL(ROUND(SUM(X.BUDG_CONV_I)   /@lUnit ${sSqlAmtPoint},0)  AS BUDG_CONV_I
             , NVL(ROUND(SUM(X.BUDG_ASGN_I)   /@lUnit ${sSqlAmtPoint},0)  AS BUDG_ASGN_I
             , NVL(ROUND(SUM(X.BUDG_SUPP_I)   /@lUnit ${sSqlAmtPoint},0)  AS BUDG_SUPP_I
             , NVL(ROUND(SUM(X.BUDG_IWALL_I)  /@lUnit ${sSqlAmtPoint},0)  AS BUDG_IWALL_I
             , X.BUDG_TYPE

      FROM           T_AFB500SKR1 X 
           LEFT JOIN AFB400T Y  ON Y.COMP_CODE = X.COMP_CODE
                                            AND Y.AC_YYYY   = X.AC_YYYY
                                            AND Y.BUDG_CODE = X.BUDG_CODE_${index+1}
        WHERE  TYPE_KEY  = @TypeKey
        AND    TYPE_FLAG = '0'
       
        GROUP BY X.TYPE_KEY, X.COMP_CODE
        
        <if test="RDO == &quot;1&quot;">
                   , X.DEPT_CODE, X.DEPT_NAME, X.BUDG_TYPE
        </if>
        
               , LEFT(X.BUDG_CODE, @LEVEL_LEN${index+1} ), Y.BUDG_NAME, Y.CODE_LEVEL, X.BUDG_TYPE
    </foreach>
    

    -- Main Query
    SELECT COMP_CODE
         , DEPT_CODE
         , DEPT_NAME
         , BUDG_CODE
         , BUDG_NAME
         , CODE_LEVEL
         , BUDG_I_TOT
         , BUDG_I
         , BUDG_CONF_I
         , LAST_CONF_I
         , BUDG_CONV_I
         , BUDG_ASGN_I
         , BUDG_SUPP_I
         , BUDG_IWALL_I
         , BUDG_TYPE
    FROM   T_AFB500SKR1 
    WHERE  TYPE_KEY  = @TypeKey
    AND    TYPE_FLAG = '1'
    ORDER BY COMP_CODE, DEPT_CODE, BUDG_CODE

    <!-- SET NOCOUNT OFF -->
<!-- END -->
</select>

</mapper>