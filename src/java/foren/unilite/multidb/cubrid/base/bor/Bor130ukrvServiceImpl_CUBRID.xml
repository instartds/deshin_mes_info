<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bor130ukrvServiceImpl">
    
    <!--
    1. result Class 확인(foren.framework.lib.tree.GenericTreeDataMap)!
    2. SQL의 수행 결과 순서는 parent가 child보더 먼저 나오게 구성 되어야 함.
    3. id와 parentId는 필수 !
    4. 최상의 node는 parentId가 root로 지정 되어야 함.
    -->
    <select id="bor130ukrvServiceImpl.selectTreeList" parameterType="Map" resultType="foren.framework.lib.tree.GenericTreeDataMap">
    /* bor130ukrvServiceImpl.selectTreeList */
        SELECT  S.ID AS 'id'
              , S.PARENT_NODE AS 'parentId'
              , CASE WHEN S.PARENT_NODE = 'root' THEN '1'
                     ELSE S.PARENT_NODE + CONVERT(NVARCHAR(3), SORT_SEQ )
                END AS SORT_NO
              , TREE_CODE                                     
              , TREE_NAME                                     
              , TREE_LEVEL                                    
              , TYPE_LEVEL
              , SHOP_CLASS
              , CUSTOM_CODE
              , CUSTOM_NAME
              , WH_CODE                                    
              , SECTION_CD                                    
              , MAKE_SALE                                     
              , USE_YN                                        
              , SORT_SEQ 
              , TELEPHONE_NO
              , FAX_NO                                   
              , REMARK                                        
              ,'' AS UPLEVE_CODE                              
              , COMP_CODE 
              , INSPEC_FLAG                                    
              , UPDATE_DB_USER                                
              , UPDATE_DB_TIME  
        FROM (
            SELECT a.TREE_LEVEL ID
                ,CASE 
                    WHEN LEN(a.TREE_LEVEL) = 1
                        THEN 'root' /*SUBSTRING(a.tree_level, 1, 1)*/
                    ELSE SUBSTRING(a.tree_level, 1, LEN(a.TREE_LEVEL) - 3)
                    END parent_node
                ,a.*
                ,B.CUSTOM_NAME
            FROM             BSA210T A WITH (NOLOCK)
                LEFT JOIN  BCM100T B WITH (NOLOCK) ON B.COMP_CODE   = A.COMP_CODE
                                                  AND B.CUSTOM_CODE = A.CUSTOM_CODE
            WHERE A.COMP_CODE = #{S_COMP_CODE}
            <if test="@foren.Ognl@isNotEmpty(USE_YN)">
                AND A.USE_YN = #{USE_YN}
            </if>
            )  s
          ORDER BY  s.id
    </select>
    <select id="bor130ukrvServiceImpl.checkPK" parameterType="Map" resultType="rMap">
        /* bor130ukrvServiceImpl.checkPK */
        SELECT COUNT(TREE_CODE) AS CNT
        FROM BSA210T WITH (NOLOCK) 
        WHERE COMP_CODE= #{S_COMP_CODE}
          AND TREE_CODE = #{TREE_CODE}

    </select>
    <insert id="bor130ukrvServiceImpl.insert">        
        /* bor130ukrvServiceImpl.insert */
        /* bor130ukrv.Cbor130ukrv[fnBor130Save] Query02    */                 
                    
        DECLARE @UP_TREE_LEVEL NVARCHAR(30),
                @TREE_LEVEL NVARCHAR(30),
                @TREE_LEVEL_NUM NUMERIC(30,0),
                @TMP_NUM NUMERIC(3,0),
                @TMP_STR NVARCHAR(3)
        
        SELECT @UP_TREE_LEVEL = TREE_LEVEL                                
            FROM BSA210T WITH (NOLOCK)                                   
            WHERE TREE_CODE = #{parentId}    /* 상위코드 */
            AND COMP_CODE = #{S_COMP_CODE}    /* 법인코드 */
                                        
                                            
        SELECT @TREE_LEVEL = ISNULL(MAX(TREE_LEVEL),0)              
            FROM BSA210T WITH (NOLOCK)                                                   
            WHERE TREE_LEVEL LIKE @UP_TREE_LEVEL + '%'          
            AND LEN(TREE_LEVEL) = LEN(@UP_TREE_LEVEL) + 3
            AND COMP_CODE = #{S_COMP_CODE}
        
        
        IF LEN(@TREE_LEVEL) = 0 
            BEGIN
                SET @TREE_LEVEL = @UP_TREE_LEVEL + '001'
            END
        ELSE 
            BEGIN
                SET @TREE_LEVEL_NUM = CONVERT(NUMERIC(30,0), @TREE_LEVEL)
        
                SET @TMP_NUM =  CONVERT(NUMERIC(3,0), RIGHT(@TREE_LEVEL_NUM,3))+1
                
                SET @TMP_STR =   RIGHT('000'+ CONVERT(NVARCHAR(3), @TMP_NUM),3)
                
                SET @TREE_LEVEL = @UP_TREE_LEVEL + @TMP_STR
            END
        
        
            INSERT INTO BSA210T
                       (COMP_CODE
                       ,TREE_CODE
                       ,TREE_NAME
                       ,TYPE_LEVEL
                       <if test="@foren.Ognl@isNotEmpty(SHOP_CLASS)">
                       ,SHOP_CLASS
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                       ,CUSTOM_CODE
                       </if>
                       ,WH_CODE
                       ,SECTION_CD
                       ,USE_YN
                       ,MAKE_SALE
                       ,SORT_SEQ
                       ,TELEPHONE_NO
                       ,FAX_NO   
                       ,REMARK
                       ,TREE_LEVEL
                       ,INSPEC_FLAG
                       ,INSERT_DB_USER
                       ,INSERT_DB_TIME
                       ,UPDATE_DB_USER
                       ,UPDATE_DB_TIME)
                 VALUES
                       (#{S_COMP_CODE}
                       ,#{TREE_CODE}
                       ,#{TREE_NAME}
                       ,#{TYPE_LEVEL}
                       <if test="@foren.Ognl@isNotEmpty(SHOP_CLASS)">
                       ,#{SHOP_CLASS}
                       </if>
                       <if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
                       ,#{CUSTOM_CODE}
                       </if>
                       ,#{WH_CODE}
                       ,#{SECTION_CD}
                       ,#{USE_YN}
                       ,#{MAKE_SALE}
                       ,#{SORT_SEQ}
                       ,#{TELEPHONE_NO}
                       ,#{FAX_NO}
                       ,#{REMARK}
                       ,@TREE_LEVEL
                       ,#{INSPEC_FLAG}
                       ,#{S_USER_ID}
                       ,NOW()
                       ,#{S_USER_ID}
                       ,NOW())
    </insert>
    <update id="bor130ukrvServiceImpl.update" parameterType="Map"> 
        /* bor130ukrvServiceImpl.update */
                UPDATE BSA210T
                   SET TREE_NAME     = #{TREE_NAME}
                      ,TYPE_LEVEL    = #{TYPE_LEVEL}
                      ,SHOP_CLASS    = #{SHOP_CLASS}
                      ,CUSTOM_CODE   = #{CUSTOM_CODE}                      
                      ,WH_CODE         = #{WH_CODE}
                      ,USE_YN        = #{USE_YN}
                      ,MAKE_SALE      = #{MAKE_SALE}
                      ,SORT_SEQ      = #{SORT_SEQ}
                      ,TELEPHONE_NO  = #{TELEPHONE_NO}
                      ,FAX_NO          = #{FAX_NO}
                      ,REMARK          = #{REMARK}    
                      ,INSPEC_FLAG   = #{INSPEC_FLAG}         
                      ,UPDATE_DB_USER = #{S_USER_ID}
                      ,UPDATE_DB_TIME = NOW()
                 WHERE COMP_CODE     = #{S_COMP_CODE}
                  AND  TREE_CODE      = #{TREE_CODE}
            
    </update>
    <update id="bor130ukrvServiceImpl.delete" parameterType="Map">
        DELETE FROM  BSA210T
         WHERE COMP_CODE= #{S_COMP_CODE}
          AND  TREE_CODE = #{TREE_CODE}
    </update>
</mapper>