<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bsa310ukrvServiceImpl">
	<select id="bsa310ukrvServiceImpl.oldPwdCheck" parameterType="Map" resultType="rMap">
		SELECT  TOP 1 1
	    FROM    BSA300T A 
	    WHERE   A.USER_ID= #{S_USER_ID}
	    AND     (PWDCOMPARE(#{OLD_PWD}, A.PASSWORD)=1 
	             OR A.PASSWORD= #{OLD_PWD})     
	</select>
	<select id="bsa310ukrvServiceImpl.fnPGNInit" parameterType="Map" resultType="rMap">
		SELECT *
	      FROM BSA310T 
	     WHERE COMP_CODE = #{S_COMP_CODE}
	       AND (USER_ID  = #{S_USER_ID} OR USER_ID = '$')
	       AND (PGM_ID   = #{PGM_ID} OR PGM_ID  = '$')
	</select>
	
	<select id="bsa310ukrvServiceImpl.pwRuleCheck" parameterType="Map" resultType="rMap">
		SELECT CHAR_TYPE, ALLOW_VALUE FROM PWD100T   
	</select>
	
	<select id="bsa310ukrvServiceImpl.birthTelCheck" parameterType="Map" resultType="rMap">
		/* bsa310ukrv.CPassword (fnPwdRegCheck-1) */
		SELECT  RIGHT(B.TELEPHON,4)   AS TEL,
		        RIGHT(B.BIRTH_DATE,4) AS BIR
		FROM    BSA300T A 
		        LEFT JOIN HUM100T B  ON A.COMP_CODE=B.COMP_CODE AND A.PERSON_NUMB=B.PERSON_NUMB
		WHERE   A.USER_ID = #{S_USER_ID}
	</select>
	
	<select id="bsa310ukrvServiceImpl.pwCheckQ" parameterType="Map" resultType="rMap">
		/* bsa310ukrv.CPassword (fnPwdRegCheck-2) 기존비밀번호 체크 갯수 */
		SELECT  TOP 1 CASE WHEN ISNULL(REF_CODE1,'')='' THEN 0 ELSE CONVERT(NUMERIC(10,0), REF_CODE1) END AS CYCLE_CNT
		FROM    BSA100T  
		WHERE   COMP_CODE = 'MASTER' AND MAIN_CODE= 'B110' AND SUB_CODE='20'
	</select>
	
	<select id="bsa310ukrvServiceImpl.pwDuplicateCheck" parameterType="Map" resultType="rMap">
		SELECT  TOP 1 1
		FROM    BSA300T A 
		WHERE   A.USER_ID= #{S_USER_ID}
		AND     PWDCOMPARE(#{NEW_PWD}, A.PASSWORD)=1
	</select>
	
	<select id="bsa310ukrvServiceImpl.pwSameCheck" parameterType="Map" resultType="rMap">
		/* bsa310ukrv.CPassword (fnPwdRegCheck-2-1) */
		SET NOCOUNT ON
		SELECT ISNULL(MAX(CHANGE_CNT),0)- #{DCYCLE_CNT}  AS CHECK_SEQ, COMP_CODE, USER_ID
		INTO    #USER_INFO
		FROM    LOG200T 
		WHERE   COMP_CODE > '' AND USER_ID= #{S_USER_ID}
		GROUP BY COMP_CODE, USER_ID
		
		SET NOCOUNT OFF
		
		SELECT  TOP 1 1
		FROM    LOG200T A 
		        INNER JOIN #USER_INFO B ON A.COMP_CODE=B.COMP_CODE AND A.USER_ID=B.USER_ID
		WHERE   A.COMP_CODE > ''
		AND     A.USER_ID= #{S_USER_ID}
		AND     A.CHANGE_CNT > B.CHECK_SEQ
		AND     UPPER(uniLITE.fnCipherDecrypt(PASSWORD,'')) = UPPER(#{NEW_PWD})
		
		DROP TABLE #USER_INFO
	</select>
	
	<select id="bsa310ukrvServiceImpl.encryptionYN" parameterType="Map" resultType="rMap">
		/* UBsa01Krv.CBsa400UKr[fnSetChangePass] Query01  암호화 적용여부체크 */  
		SELECT TOP 1 1 
	         , ISNULL((
	             SELECT  TOP 1 UPPER(REF_CODE1) AS CASE_SENS_YN 
	             FROM    BSA100T 
	             WHERE   COMP_CODE='MASTER' AND MAIN_CODE='B110' AND SUB_CODE='40' AND USE_YN='Y'
	            ),'N') 						    AS CASE_SENS_YN
		FROM    BSA100T  
		WHERE   COMP_CODE='MASTER'
		AND MAIN_CODE='B239' AND SUB_CODE='10' AND REF_CODE1='Y' AND USE_YN='Y'	
	</select>
	
	<select id="bsa310ukrvServiceImpl.fnPrintInit" parameterType="Map" resultType="rMap">
		SET ROWCOUNT 1
		SELECT *
  			FROM BSA310T 
 				WHERE COMP_CODE = #{S_COMP_CODE}
   					AND USER_ID   = #{S_USER_ID}
						AND PGM_ID IN ('$',#{PGM_ID})
 		ORDER BY PGM_ID DESC
	</select>
	
	<update id="bsa310ukrvServiceImpl.encryptionSavePw" parameterType="Map">
		UPDATE BSA300T                     
		       SET PASSWORD = PWDENCRYPT(#{NEW_PWD})
		         , PWD_UPDATE_DATE = NOW()
		         , UPDATE_DB_USER = #{S_USER_ID}
		WHERE COMP_CODE &gt; '' AND USER_ID  = #{S_USER_ID}
		        
		IF EXISTS (SELECT TOP 1 1 FROM BSA301T  WHERE COMP_CODE &gt; '' AND USER_ID=#{S_USER_ID})
		    UPDATE BSA301T                     
		           SET PASSWORD = uniLITE.fnCipherEncrypt(#{NEW_PWD}, '')
		             , UPDATE_DB_TIME = NOW()
		             , UPDATE_DB_USER = #{S_USER_ID}
		    WHERE COMP_CODE &gt; '' AND USER_ID  = #{S_USER_ID}
		                
		ELSE
		    INSERT INTO BSA301T (COMP_CODE, USER_ID, PASSWORD, INSERT_DB_USER, UPDATE_DB_USER)
		    SELECT COMP_CODE, USER_ID, uniLITE.fnCipherEncrypt(#{NEW_PWD}, '') PASSWORD, #{S_USER_ID} INSERT_DB_USER, #{S_USER_ID} UPDATE_DB_USER
		    FROM BSA300T 
		    WHERE COMP_CODE &gt; '' AND USER_ID=#{S_USER_ID}
	</update>
	
	<update id="bsa310ukrvServiceImpl.notEncryptionSavePw" parameterType="Map">
	    UPDATE BSA300T                     
	       SET PASSWORD = #{NEW_PWD}      
	         , PWD_UPDATE_DATE = NOW()
	         , UPDATE_DB_USER = #{S_USER_ID}
	    WHERE COMP_CODE > '' AND USER_ID  = #{S_USER_ID}	
	</update>
	
</mapper>