<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bsa520ukrvService">
   <select id="bsa520ukrvService.selectMaster" parameterType="Map" resultType="rMap">
    /* bsa520ukrv.Cbsa520ukrv[fnBsa520QStd] Query01 */
    SELECT 
         SUB_CODE  AS GROUP_CODE
        ,CODE_NAME AS GROUP_NAME
      FROM BSA100T 
     WHERE COMP_CODE  = #{S_COMP_CODE}
       AND MAIN_CODE  = 'BS03'
       AND SUB_CODE  != '$' 
       AND USE_YN     = 'Y'    
   </select>
   <select id="bsa520ukrvService.selectList" parameterType="Map" resultType="rMap">
   /* bsa520ukrv.Cbsa520ukrv[fnBsa520QRef] Query01 */
    SELECT DISTINCT A.PGM_ID
         , A.PGM_ID
         , A.PGM_NAME
         , '' AS AUTHO_TYPE
         , '' AS AUTHO_PGM
         , '' AS REF_CODE
         , '' AS AUTHO_ID                                        
         , A.COMP_CODE                                           
      FROM BSA400T A                                              
     WHERE A.TYPE      &lt; '9'                                     
       AND A.COMP_CODE = #{S_COMP_CODE}                
       AND A.USE_YN    = '1'                                    
       AND A.PGM_ID NOT IN (SELECT PGM_ID                        
                              FROM BSA520T                        
                             WHERE COMP_CODE  = #{S_COMP_CODE}
                               AND GROUP_CODE = #{GROUP_CODE})
       <if test="@foren.Ognl@isNotEmpty(PGM_SEQ)">     
        AND A.PGM_SEQ      = #{PGM_SEQ}
       </if>
       <if test="@foren.Ognl@isNotEmpty(PGM_ID)">     
        AND A.PGM_ID     LIKE  #{PGM_ID} + '%'
       </if>
       <if test="@foren.Ognl@isNotEmpty(PGM_NAME)">     
        AND A.PGM_NAME   LIKE  #{PGM_NAME} + '%'
       </if>                             
       AND A.PGM_TYPE    = '1'
     GROUP BY A.PGM_ID, A.PGM_NAME, A.AUTHO_TYPE, A.AUTHO_PGM, A.COMP_CODE
     ORDER BY A.PGM_ID
   </select>
   <select id="bsa520ukrvService.selectProgramList" parameterType="Map" resultType="rMap">
      /* bsa520ukrv.Cbsa520ukrv[fnBsa520QStd] Query01 */
    SELECT DISTINCT A.GROUP_CODE, A.PGM_ID                                             
         , MAX(B.PGM_NAME)   AS PGM_NAME                        
         , MAX(A.PGM_LEVEL)  AS PGM_LEVEL                       
         , MAX(A.PGM_LEVEL2) AS PGM_LEVEL2                      
         , MAX(A.AUTHO_USER) AS AUTHO_USER                                     
         , '' AS AUTHO_TYPE                                     
         , '' AS AUTHO_PGM                                     
         , '' AS REF_CODE                                     
         , MAX(A.AUTHO_USER) AS AUTHO_ID                        
         , A.COMP_CODE                                          
         , A.INSERT_DB_USER, A.UPDATE_DB_USER                                          
      FROM BSA520T A 
           INNER JOIN BSA400T B  ON B.COMP_CODE = A.COMP_CODE
                                             AND B.PGM_ID    = A.PGM_ID
     WHERE A.COMP_CODE    = #{S_COMP_CODE}
       AND A.GROUP_CODE   = #{GROUP_CODE}
       <if test="@foren.Ognl@isNotEmpty(PGM_SEQ)">     
        AND B.PGM_SEQ      = #{PGM_SEQ}
       </if>
       <if test="@foren.Ognl@isNotEmpty(PGM_ID)">     
        AND B.PGM_ID     LIKE  #{PGM_ID} + '%'
       </if>
       <if test="@foren.Ognl@isNotEmpty(PGM_NAME)">     
        AND B.PGM_NAME   LIKE  #{PGM_NAME} + '%'
       </if>
       AND B.PGM_TYPE    = '1'
     GROUP BY A.GROUP_CODE, A.PGM_ID   , A.AUTHO_USER, B.AUTHO_TYPE
            , B.AUTHO_PGM, A.COMP_CODE, A.INSERT_DB_USER, A.UPDATE_DB_USER
     ORDER BY A.PGM_ID
     </select>
   <select id="bsa520ukrvService.checkCompCode" parameterType="Map" resultType="rMap">
          SELECT A.COMP_CODE, A.COMP_NAME
          FROM              BOR100T   A  
                 LEFT  JOIN BSA100T   M1  ON M1.COMP_CODE    = #{S_COMP_CODE}    
                                                      AND M1.MAIN_CODE    = 'B107'
                                                      AND M1.SUB_CODE     = '20'         
          WHERE (A.COMP_CODE      &gt; ''        AND NVL(M1.REF_CODE1, 'N') = 'Y')
             OR (A.COMP_CODE      = #{S_COMP_CODE}  AND NVL(M1.REF_CODE1, 'N') = 'N')
   </select>
   
   <insert id="bsa520ukrvService.insertDetail" parameterType="Map">
       INSERT INTO BSA520T
         ( GROUP_CODE
         , PGM_ID
         , PGM_LEVEL
         , PGM_LEVEL2
         , PGM_LEVEL3
         , COMP_CODE
         , INSERT_DB_USER
         , INSERT_DB_TIME
         , UPDATE_DB_USER
         , UPDATE_DB_TIME
         ) 
    VALUES
         ( #{GROUP_CODE}
         , #{PGM_ID}
         , NVL(#{PGM_LEVEL}, '1')
         , NVL(#{PGM_LEVEL2}, '1')
         , NVL(#{PGM_LEVEL3}, '0')
         , #{COMP_CODE}
         , #{S_USER_ID}
         , NOW()
         , #{S_USER_ID}
         , NOW()
         )
       
       
   </insert>
   
   <update id="bsa520ukrvService.updateDetail" parameterType="Map">
           UPDATE BSA520T
           SET 
             <if test="@foren.Ognl@isExists(_parameter, 'PGM_LEVEL')"> 
              PGM_LEVEL           = #{PGM_LEVEL}                                
             </if>
             <if test="@foren.Ognl@isExists(_parameter, 'PGM_LEVEL2')"> 
             ,PGM_LEVEL2      = #{PGM_LEVEL2}                                
             </if>
             <if test="@foren.Ognl@isExists(_parameter, 'AUTHO_USER')"> 
             , AUTHO_USER      = #{AUTHO_USER}                                
             </if>
             , INSERT_DB_USER = #{S_USER_ID}
             , UPDATE_DB_USER = #{S_USER_ID}
             
         WHERE 
                COMP_CODE      = #{COMP_CODE}
           AND GROUP_CODE     = #{GROUP_CODE}
           AND PGM_ID         = #{PGM_ID}
   </update>
   
   <delete id="bsa520ukrvService.deleteDetail" parameterType="Map">
        DELETE FROM BSA520T 
         WHERE COMP_CODE      = #{COMP_CODE}
           AND GROUP_CODE     = #{GROUP_CODE}
           AND PGM_ID         = #{PGM_ID}
  
   </delete>
</mapper>