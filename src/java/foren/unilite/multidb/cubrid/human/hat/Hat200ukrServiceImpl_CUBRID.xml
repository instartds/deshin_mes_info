<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hat200ukrServiceImpl">
	<!--
			Sorry, I can`t migrate	Hum100ukrModel
			See console output for further details 
		-->
	<!--
			Sorry, I can`t migrate	Hum710ukrModel
			See console output for further details 
		-->	
	<!--
			Sorry, I can`t migrate	Hum790ukrModel
			See console output for further details 
		-->
	<!--
			Sorry, I can`t migrate	Hum800ukrModel
			See console output for further details 
		-->
	
	<select id="hat200ukrServiceImpl.vrecord2" parameterType="rMap" resultType="rMap">
		SELECT F.SUB_CODE, F.REF_CODE1
		<if test="@foren.Ognl@isNotEmpty(PAY_PROV_FLAG)">
		FROM BSA100T F 
		WHERE F.COMP_CODE = #{S_COMP_CODE}
		AND F.MAIN_CODE = 'H031' 
		AND F.SUB_CODE != '$' 
		AND F.SUB_CODE LIKE '#{PAY_PROV_FLAG}%'
		</if>
		<if test="@foren.Ognl@isEmpty(PAY_PROV_FLAG)">
		FROM BSA100T F 
		WHERE F.COMP_CODE = #{S_COMP_CODE}
		AND F.MAIN_CODE = 'H031' 
		AND F.SUB_CODE != '$' 
		AND F.SUB_CODE LIKE '%'
		</if>
	</select>
	
		
	<select id="hat200ukrServiceImpl.selectList" parameterType="rMap" resultType="rMap">		
		/* hat200ukrServiceImpl.selectList */
        
        SET @yyyymm = #{DUTY_YYYYMM} + ';'  
        SET @sDate     = #{sDate} + ';'
        SET @eDate     = #{eDate| + ';'
        SET @diff        = #{diff} + ';'
        
        SELECT T.* 
        FROM(       
                  SELECT 'U' FLAG
                          ,  MAX(DEPT_CODE) DEPT_CODE           
                          ,  MAX(POST_CODE) POST_CODE           
                          ,  MAX(DIV_CODE) DIV_CODE             
                          ,  MAX(B.DUTY_YYYYMM) DUTY_YYYYMM     
                          ,  MAX(A.DEPT_NAME) DEPT_NAME         
                          ,  MAX(A.NAME) NAME                   
                          ,  MAX(A.PERSON_NUMB) PERSON_NUMB     
                          ,  MAX(A.SEX_CODE) SEX_CODE           
                          ,  MAX(A.JOIN_DATE) AS JOIN_DATE
                          ,  MAX(A.RETR_DATE) RETR_DATE         
                          ,  MAX(A.YEAR_GIVE) YEAR_GIVE         
                          ,  MAX(A.MONTH_GIVE) MONTH_GIVE       
                          ,  MAX(A.PAY_CODE) PAY_CODE           
                          ,  MAX(0) PAY_DD                      
                          ,  MAX((CASE WHEN D.PERSON_NUMB != '' THEN D.TOT_DAY ELSE 0 END)) TOTDAY      
                          ,  MAX((CASE WHEN D.PERSON_NUMB != '' THEN D.SUN_DAY ELSE 0 END))DAYCNT       
                          ,  MAX(NVL((E.YEAR_NUM - E.YEAR_USE),0))YEAR_NUM                           
                          ,  MAX((CASE WHEN D.PERSON_NUMB != '' THEN D.TOT_DAY ELSE 0 END)) AS DAYDIFF  
                          ,  MAX((0)) AS DATACHAK                                                       
                          ,  MAX(A.PAY_PROV_FLAG) PAY_PROV_FLAG
                    
                        <foreach collection="DUTY_CODE" item="item" index="index">       
                             , NVL(MAX(
                                CASE 
                                    WHEN DUTY_CODE = ${item.SUB_CODE} THEN 'U'
                                END ),'N')  AS FLAG${item.SUB_CODE}
                            , NVL(MAX(
                                CASE 
                                    WHEN DUTY_CODE = ${item.SUB_CODE} THEN DUTY_NUM 
                                END),0) AS DUTY_NUM${item.SUB_CODE}
                            , NVL(MAX(
                                CASE 
                                    WHEN DUTY_CODE = ${item.SUB_CODE} THEN DUTY_TIME 
                                END),0) AS DUTY_TIME${item.SUB_CODE}
                        </foreach>
                    
                       , @sDate DUTY_FROM 
                       , @eDate DUTY_TO
            
                       , #{DEPT_CODE2} DEPT_CODE2
                       , MAX(D.REMARK) REMARK 
               FROM HUM100T A 
               INNER JOIN HAT200T B ON B.COMP_CODE   = A.COMP_CODE
                                   AND B.PERSON_NUMB = A.PERSON_NUMB
               LEFT  JOIN HAT300T D ON D.COMP_CODE   = A.COMP_CODE
                                   AND D.PERSON_NUMB = A.PERSON_NUMB
                                   AND D.COMP_CODE   = B.COMP_CODE
                                   AND D.DUTY_YYYYMM = B.DUTY_YYYYMM
               LEFT  JOIN HAT700T E ON E.COMP_CODE   = A.COMP_CODE
                                   AND E.PERSON_NUMB = A.PERSON_NUMB
                                   AND (
                                               (SUBSTRING(E.DUTY_YYYYMMDDFR_USE, 1, 6)  &lt;= #{DUTY_YYYYMM})
                                       AND (SUBSTRING(E.DUTY_YYYYMMDDTO_USE, 1, 6)  &gt;=#{DUTY_YYYYMM})
                                          )
            WHERE A.COMP_CODE = #{S_COMP_CODE}
            AND (
                      A.RETR_DATE  = '00000000' OR SUBSTRING(A.RETR_DATE,1,6) &gt;= LEFT(@sDate,6)
                    )  
                    
            GROUP BY  A.COMP_CODE, A.PERSON_NUMB, B.DUTY_YYYYMM
            
            <foreach collection="VRECORD2" item="vrecord2" index="index">
            
        UNION ALL 
        
        SELECT 'N' FLAG
             , MAX(DEPT_CODE) DEPT_CODE   
             , MAX(POST_CODE) POST_CODE   
             , DIV_CODE
             , @yyyymm AS  DUTY_YYYYMM
             , MAX(A.DEPT_NAME) DEPT_NAME
             , MAX(A.NAME) NAME
             , MAX(A.PERSON_NUMB) PERSON_NUMB
             , MAX(A.SEX_CODE) SEX_CODE
             , MAX(A.JOIN_DATE) AS JOIN_DATE
             , MAX(A.RETR_DATE) RETR_DATE
             , MAX(A.YEAR_GIVE) YEAR_GIVE
             , MAX(A.MONTH_GIVE) MONTH_GIVE
             , MAX(A.PAY_CODE) PAY_CODE
             , MAX(0) PAY_DD
             , MAX(0) AS TOTDAY
             , MAX(0) AS DAYCNT
             , MAX(NVL((E.YEAR_NUM - E.YEAR_USE),0))YEAR_NUM 
             , MAX(@diff) AS DAYDIFF
             , MAX((0)) AS DATACHAK
             , MAX(A.PAY_PROV_FLAG) PAY_PROV_FLAG   
            <foreach collection="DUTY_CODE" item="item" index="index">
                , 'N' AS  FLAG#{item.SUB_CODE}
                        , (SELECT COUNT(*) 
                              FROM HAT800T 
                             WHERE COMP_CODE       = #{S_COMP_CODE}
                               AND PERSON_NUMB     = A.PERSON_NUMB 
                               AND DUTY_CODE       =   ${item.SUB_CODE}
                               AND DUTY_YYYYMMDD  &gt;=   @sDate
                               AND DUTY_YYYYMMDD  &lt;=   @eDate) NUM${item.SUB_CODE}
                        , 0  AS TIME${item.SUB_CODE}
            </foreach>
             , @sDate  AS DUTY_FROM
             , @eDate   AS DUTY_TO
             
             , #{DEPT_CODE2} DEPT_CODE2
             , MAX('') REMARK 
     FROM HUM100T A
               LEFT JOIN HAT700T E ON E.COMP_CODE   = A.COMP_CODE
                                  AND E.PERSON_NUMB = A.PERSON_NUMB
                                  AND ((SUBSTRING(E.DUTY_YYYYMMDDFR_USE, 1, 6) &lt;= #{DUTY_YYYYMM})
                                  AND (SUBSTRING(E.DUTY_YYYYMMDDTO_USE, 1, 6)  &gt;= #{DUTY_YYYYMM}))
            WHERE A.COMP_CODE    = #{S_COMP_CODE}
            AND (A.RETR_DATE  = '00000000' OR A.RETR_DATE &gt;= @sDate)
            AND (A.JOIN_DATE &lt;= @eDate)
            AND (A.PAY_PROV_FLAG = '${vrecord2.SUB_CODE}')
            
            AND A.PERSON_NUMB NOT IN ( SELECT DISTINCT(B.PERSON_NUMB) AS  PERSON_NUMB 
                                                           FROM HUM100T C, HAT200T B 
                                                           WHERE C.COMP_CODE   = B.COMP_CODE
                                                           AND C.PERSON_NUMB = B.PERSON_NUMB
                                                           AND C.COMP_CODE   = #{S_COMP_CODE}
                                                           AND B.DUTY_YYYYMM = #{DUTY_YYYYMM}
                                                           AND B.PERSON_NUMB = C.PERSON_NUMB 
                                                           AND C.PAY_PROV_FLAG = '${vrecord2.SUB_CODE}'
                                                         )
            
             <if test="@foren.Ognl@isNotEmpty(DEPTS)">                  
               AND A.DEPT_CODE IN
                <foreach collection="DEPTS" item="item" separator="," close=")" open="(">
                 #{item}
                </foreach>                                  
            </if>
            <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                AND  A.DIV_CODE = #{DIV_CODE}
            </if>
            <if test="@foren.Ognl@isNotEmpty(PAY_GUBUN)">
                AND A.PAY_GUBUN = #{PAY_GUBUN}  
            </if>
            <if test="@foren.Ognl@isNotEmpty(PERSON_NUMB)">
                AND A.PERSON_NUMB = #{PERSON_NUMB}  
            </if>        
            <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
                AND  A.PAY_CODE = #{PAY_CODE}
            </if>                       
            GROUP BY A.COMP_CODE, A.DEPT_NAME, A.PERSON_NUMB , A.JOIN_DATE, A.RETR_DATE ,A.DIV_CODE              
         </foreach>
         ) T
         ORDER BY T.DIV_CODE, T.DEPT_CODE, T.POST_CODE, T.JOIN_DATE, T.NAME, T.PERSON_NUMB;
	</select>
	
	<select id="hat200ukrServiceImpl.selectList2" parameterType="rMap" resultType="rMap">	
		SELECT TOT_DAY
		     , MONTH_GIVE
		     , DED_TIME
		     , WORK_TIME
		     , WEEK_DAY
		     , MENS_GIVE
		     , DED_DAY
		     , WORK_DAY
		     , SUN_DAY
		     , WEEK_GIVE
		     , FULL_GIVE
		     , MONTH_GIVE
		     , MENS_GIVE
		     , SAT_DAY
		     , EXTEND_WORK_TIME
		     , NON_WEEK_DAY
		     , HOLIDAY
		  FROM HAT300T
		WHERE COMP_CODE   = #{S_COMP_CODE}		 
	    AND   DUTY_YYYYMM = #{DUTY_YYYYMM}		
		AND   PERSON_NUMB = #{PERSON_NUMB}
		 
	</select>
	
	
	
<!-- UHat01Krv.Chbs100Kr SetHbs100[fnHbs100nq] -->
<select id="hat200ukrServiceImpl.fnHbs100nq" parameterType="rMap" resultType="rMap">
SELECT PAY_CODE                        
        , DUTY_CODE                       
        , DUTY_TYPE                       
        , COTR_TYPE                       
        , DUTY_STRT_MM                    
        , DUTY_STRT_DD                    
        , DUTY_LAST_MM                    
        , DUTY_LAST_DD                    
        , MARGIR_TYPE                     
        , MONTH_REL_CODE                  
        , YEAR_REL_CODE                   
        , MENS_REL_CODE                   
        , WEEK_REL_CODE                   
        , FULL_REL_CODE                   
  FROM HBS100T                         
  WHERE COMP_CODE = #{S_COMP_CODE}
    <if test="@foren.Ognl@isNotEmpty(PAY_CODE)">
    	AND PAY_CODE  = #{PAY_CODE}
    </if>
    <if test="@foren.Ognl@isNotEmpty(DUTY_CODE)">
      AND DUTY_CODE = #{SUB_CODE}
    </if>
</select>

	
<!--	UHBS01KRV.CHCLOSEYN[fncloseYN] strsql -->
<!-- 마감여부 체크 -->
<select id="hat200ukrServiceImpl.fncloseYN" parameterType="rMap" resultType="rMap">
	SELECT CLOSE_DATE
	FROM HBS900T
	WHERE COMP_CODE  = #{S_COMP_CODE}
	AND   CLOSE_TYPE = 'D'
</select>

<!--Delete -->
<update id="hat200ukrServiceImpl.delete" parameterType="rMap">
	
    <foreach collection="paramList" item="item" index="index">
        DELETE FROM HAT200T 
        WHERE DUTY_YYYYMM = #{DUTY_YYYYMM}
        AND PERSON_NUMB = #{PERSON_NUMB}
        AND DUTY_CODE   = '${item}'
        AND COMP_CODE   = #{COMP_CODE};
    </foreach>  
    
    <!--UHat01Krv.Chat200Kr-fnDelSum.dSql(0) -->
    UPDATE HAT700T A 
    INNER JOIN (
                 SELECT A.DUTY_YYYY                               AS H_DUTY_YYYY
                          , A.YEAR_USE -  B.YEAR_USE             AS H_YEAR_USE
                          , A.YEAR_SAVE -  B.YEAR_GIVE          AS H_YEAR_NUM
                          , A.MONTH_NUM -  B.MONTH_NUM AS H_HMONTH_NUM
                          , A.MONTH_USE -  B.MONTH_USE     AS H_MONTH_USE
                          , A.MONTH_PROV -  B.MONTH_GIVE AS H_MONTH_PROV
                          , A.PERSON_NUMB                         AS H_PERSON_NUMB
                          , A.COMP_CODE
                          ,A.SUPP_TYPE
                  FROM          HAT700T A 
                  INNER JOIN HAT300T B ON A.COMP_CODE     = B.COMP_CODE
                                                   AND A.PERSON_NUMB = B.PERSON_NUMB
                  INNER JOIN HUM100T V ON A.COMP_CODE   = B.COMP_CODE
                                                    AND A.PERSON_NUMB = V.PERSON_NUMB
             WHERE A.COMP_CODE = #{S_COMP_CODE}
               AND B.DUTY_YYYYMM &gt;= LEFT(A.DUTY_YYYYMMDDFR_USE,6) 
               AND B.DUTY_YYYYMM &lt;= LEFT(A.DUTY_YYYYMMDDTO_USE,6) 
               AND B.DUTY_YYYYMM = #{DUTY_YYYYMM}
               AND B.PERSON_NUMB = #{PERSON_NUMB}
               AND V.PAY_PROV_FLAG =  #{PAY_PROV_FLAG}
               AND V.DIV_CODE = #{DIV_CODE}
               ) AA ON AA.COMP_CODE = A.COMP_CODE
                    AND AA.H_DUTY_YYYY   = A.DUTY_YYYY
                    AND AA.SUPP_TYPE    = A.SUPP_TYPE
                    AND AA.H_PERSON_NUMB = A.PERSON_NUMB    
    SET YEAR_USE            = AA.H_YEAR_USE
        , YEAR_SAVE          = AA.H_YEAR_NUM
        , MONTH_NUM      = AA.H_HMONTH_NUM
        , MONTH_USE        = AA.H_MONTH_USE
        , MONTH_PROV     = AA.H_MONTH_PROV
        , UPDATE_DB_USER = #{USER_ID}
        , UPDATE_DB_TIME  = SYSDATETIME
     WHERE COMP_CODE   = #{S_COMP_CODE}
       AND DUTY_YYYY   = AA.H_DUTY_YYYY 
       AND PERSON_NUMB = AA.H_PERSON_NUMB;
       
       
       
       
       <!--UHat01Krv.Chat200Kr-fnDelSum.dSql(1) -->
    DELETE T
    FROM HAT300T T
    INNER JOIN HUM100T V ON T.COMP_CODE    = V.COMP_CODE
                                      AND T.PERSON_NUMB = V.PERSON_NUMB
     WHERE T.COMP_CODE     = #{S_COMP_CODE}
       AND T.DUTY_YYYYMM   = #{DUTY_YYYYMM}
       AND V.PAY_PROV_FLAG = #{PAY_PROV_FLAG}
       AND V.DIV_CODE      = #{DIV_CODE}
       AND T.PERSON_NUMB   = #{PERSON_NUMB};
		
	
	
</update>

<!--UHat01Krv.Chat200UKr[fnHat200Set] -->
<select id="hat200ukrServiceImpl.fnHat200Set" parameterType="rMap" resultType="rMap">
    SELECT F.SUB_CODE
             , TO_CHAR(CASE F.REF_CODE1 WHEN '00' THEN TO_CHAR(LEFT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 4) + '-' + RIGHT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 2)  + '-01')
                                                        ELSE ADDDATE(ADD_MONTHS(LEFT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 4) + '-' + RIGHT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 2) + '-' + F.REF_CODE1, -1), 1) --#{DUTY_YYYYMM}
                              END, 'YYYYMMDD') AS STRT_DT
             , TO_CHAR(CASE F.REF_CODE1 WHEN '00' THEN ADDDATE(ADD_MONTHS(LEFT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 4) + '-' + RIGHT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 2) + '-' + F.REF_CODE1, 1), -1) --#{DUTY_YYYYMM}
                                              ELSE LEFT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 4) + '-' + RIGHT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 2) + '-'  + F.REF_CODE1
                                        END, 'YYYYMMDD') END_DT
             , F.REF_CODE1
             , TO_CHAR(CASE F.REF_CODE2 WHEN '00' THEN TO_CHAR(LEFT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 4) + '-' + RIGHT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 2)  + '-01')
                                        ELSE ADDDATE(ADD_MONTHS(LEFT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 4) + '-' + RIGHT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 2) + '-' + F.REF_CODE2, -1), 1)
                                        END, 'YYYYMMDD') AS PAY_STRT_DT
             , TO_CHAR(CASE F.REF_CODE2 WHEN '00' THEN ADDDATE(ADD_MONTHS(LEFT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 4) + '-' + RIGHT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 2) + '-01', 1), -1) 
                                        ELSE LEFT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 4) + '-' + RIGHT(REPLACE(#{DUTY_YYYYMM}, '-', ''), 2)  + '-' + F.REF_CODE2
                                        END, 'YYYYMMDD') AS PAY_END_DT
             , F.REF_CODE2
FROM BSA100T F
WHERE F.COMP_CODE = #{S_COMP_CODE}
    AND F.MAIN_CODE = 'H031'
    AND F.SUB_CODE != '$'
    AND F.SUB_CODE  = #{PAY_PROV_FLAG}
</select>

<!--Update -->
<update id="hat200ukrServiceImpl.update" parameterType="rMap">
            <if test='FLAG.equals("U")'>            
            <foreach collection="paramList" item="item" index="index">              
                UPDATE HAT200T
                   SET DUTY_NUM       = '${item.DUTY_NUM}'
                     , DUTY_TIME      = '${item.DUTY_TIME}'
                     , UPDATE_DB_USER = #{USER_ID}
                     , UPDATE_DB_TIME = SYSDATETIME
                     
                 WHERE DUTY_YYYYMM    = #{DUTY_YYYYMM}
                   AND PERSON_NUMB    = #{PERSON_NUMB}
                   AND DUTY_CODE      = '${item.DUTY_CODE}'
                   AND COMP_CODE      = #{COMP_CODE};
            </foreach>
            </if>
            <if test='FLAG.equals("N")'>
            <foreach collection="paramList" item="item" index="index">
                INSERT INTO HAT200T
                 ( DUTY_YYYYMM
                 , PERSON_NUMB
                 , DUTY_CODE
                 , DUTY_NUM
                 , DUTY_TIME
                 , UPDATE_DB_USER
                 , UPDATE_DB_TIME
                 , COMP_CODE
                 ) 
                VALUES
                 ( #{DUTY_YYYYMM}
                 , #{PERSON_NUMB}
                 , '${item.DUTY_CODE}'
                 , '${item.DUTY_NUM}'
                 , '${item.DUTY_TIME}'
                 , #{USER_ID}
                 , SYSDATETIME
                 , #{COMP_CODE}
                 );
            </foreach>
            </if>           
    
            --SELECT '' INTO :rtn FROM db_root;        
            --CALL SP_HAT_doTotalWork_innerFunctions(#{PAY_PROV_FLAG},#{DUTY_YYYYMM},#{DUTY_FROM}    ,#{DUTY_TO},#{DIV_CODE},'','',#{PERSON_NUMB},#{USER_ID},'',#{COMP_CODE},#{PAY_STRT_DT},#{PAY_END_DT}, '');            
            --SELECT :rtn FROM db_root;

            -- 변수 초기화
            SET @RTN_MSG = '';
            
            DO(
                SELECT @RTN_MSG := SP_HAT_doTotalWork_innerFunctions(#{PAY_PROV_FLAG}, #{DUTY_YYYYMM}, #{DUTY_FROM}, #{DUTY_TO}, #{DIV_CODE}, '', '', #{PERSON_NUMB}, #{USER_ID}, '', #{COMP_CODE}, #{PAY_STRT_DT}, #{PAY_END_DT})
              );
            

            <if test="@foren.Ognl@isNotEmpty(REMARK)">
            UPDATE HAT300T 
            SET REMARK = #{REMARK}
            WHERE COMP_CODE   = #{COMP_CODE}
               AND DUTY_YYYYMM = #{DUTY_YYYYMM}
               AND PERSON_NUMB = #{PERSON_NUMB};
            </if>
	
</update>

<select id="hat200ukrServiceImpl.wirteCheck" parameterType="rMap" resultType="rMap">
	--hat200ukrServiceImpl.wirteCheck              
	SELECT PAY_CODE                        
	     , DUTY_CODE                       
	     , DUTY_TYPE                       
	     , COTR_TYPE                       
	     , DUTY_STRT_MM                    
	     , DUTY_STRT_DD                    
	     , DUTY_LAST_MM                    
	     , DUTY_LAST_DD                    
	     , MARGIR_TYPE                     
	     , MONTH_REL_CODE                  
	     , YEAR_REL_CODE                   
	     , MENS_REL_CODE                   
	     , WEEK_REL_CODE                   
	     , FULL_REL_CODE                   
	  FROM HBS100T                         
	 WHERE COMP_CODE = #{S_COMP_CODE}
	   AND PAY_CODE  = #{PAY_CODE}
	   AND DUTY_CODE = #{DUTY_CODE}
</select>

	
	
</mapper>