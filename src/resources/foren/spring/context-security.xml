<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
              http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- SSO Core 모듈의 SAML Bootstrap설정을 Import한다. -->
	<import resource="classpath*:/META-INF/security/saml-context.xml" />

	<context:annotation-config/>
    <context:component-scan base-package="devonframe.sso"/>
	
	<!-- idp와 sp에서 각각 구현해야 함 -->
    <bean id="metadata" class="devonframe.sso.saml.metadata.MetadataManagerImpl">
        <constructor-arg>
            <list>
			   <bean id="spMetadataProvider" class="devonframe.sso.sp.metadata.SPBeanMetadataProvider">
			     <property name="entityId" value="omegaplus.co.kr"/>
				   <property name="endpoints">
					   <map key-type="devonframe.sso.saml.metadata.BeanMetadataProviderBase.ENDPOINT">
						   <entry key="ASSERTION_CONSUMER_POST" value="http://saas.omegaplus.co.kr:7001/lgsaas/sso/assertionConsumer.do"/>
					       <entry key="SINGLE_LOGOUT_POST" value="http://saas.omegaplus.co.kr:7001/lgsaas/login/singleLogout.do"/>
				       </map>
			       </property>
			   </bean>
               <bean class="org.opensaml.saml2.metadata.provider.FilesystemMetadataProvider">
                   <constructor-arg>
                       <value type="java.io.File">classpath:security\sso-metadata.xml</value>
                    </constructor-arg>
                    <property name="parserPool" ref="parserPool"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
	<!-- SAML Message송수신에 필요한 Local Entity Id정보와
    암호화된 메시지의 암호화키를 복호화하기 위한 Local Key정보를 설정한다. -->
    <bean id="contextProvider" class="devonframe.sso.sp.context.SPSAMLContextProvider" lazy-init="true">
    	<constructor-arg type="java.lang.String" value="omegaplus.co.kr"/>
    	<property name="encryptionKey" value="omegaplus.co.kr"/>
    </bean>

	<!-- 전자서명 인증을 위한 로컬키 관리하기 위한 Key Store를 설정한다. -->
	<bean id="keyManager" class="devonframe.sso.saml.key.JKSKeyManager">
        <constructor-arg value="classpath:security/keyStore.jks"/>
        <constructor-arg type="java.lang.String" value="changeit"/>
        <constructor-arg>
            <map>
                <entry key="omegaplus.co.kr" value="changeit"/>
            </map>
        </constructor-arg>
        <constructor-arg type="java.lang.String" value="omegaplus.co.kr"/>
    </bean>

	<!-- IdP로 Single Sign On 요청을 전송 처리하고, IdP로부터의 인증 주장인 Assertion Response를
	수신처리하기 위한 Profile Bean을 등록한다. -->
    <bean id="authnRequestProfile" class="mw.sso.sp.profile.MWAuthnRequestProfileImpl"/>
    <bean id="assertionConsumerProfile" class="mw.sso.sp.profile.MWAssertionConsumerProfileImpl">
    	<property name="responseSkew" value="300"/>
    	<property name="maxAuthenticationAge" value="300"/>
    </bean>
    <bean id="singleLogoutProfile" class="mw.sso.sp.profile.MWSingleLogoutProfileImpl"/>
    
</beans>
