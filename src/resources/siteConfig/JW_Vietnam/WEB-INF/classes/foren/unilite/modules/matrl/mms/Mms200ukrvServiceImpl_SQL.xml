<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mms200ukrvServiceImpl">

<select id="mms200ukrvServiceImpl.selectreceiptNumMasterList" parameterType="Map" resultType="rMap">
/* mms200ukrv.Cmms200ukrv[fnQms200QPop] Query01 */
BEGIN
 SET NOCOUNT ON
 SET ARITHABORT ON

 DECLARE @CompCode  NVARCHAR(08) /* 법인코드 */
       , @UserId   NVARCHAR(100)  /* 사용자ID */
       , @LangType  NVARCHAR(2)  /* 언어구분 */

	SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}

    SELECT A.INSPEC_NUM
         , A.INSPEC_SEQ
         , uniLite.fnGetUserdate(@CompCode, A.INSPEC_DATE) AS INSPEC_DATE
         , A.CUSTOM_CODE
         , C.CUSTOM_NAME
         , A.ITEM_CODE
         , B.ITEM_NAME
         , B.SPEC
         , A.INSPEC_Q
         , A.GOOD_INSPEC_Q
         , A.BAD_INSPEC_Q
         , A.INSPEC_TYPE
         , A.INSPEC_PRSN
         , A.RECEIPT_NUM
         , A.RECEIPT_SEQ
         , A.LOT_NO
      FROM            QMS200T A WITH (NOLOCK)
           INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
                                             AND A.ITEM_CODE   = B.ITEM_CODE
           INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
                                             AND A.CUSTOM_CODE = C.CUSTOM_CODE
      WHERE A.COMP_CODE = @CompCode
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
    AND A.DIV_CODE     = #{DIV_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_FR)">
    AND A.INSPEC_DATE &gt;= #{INSPEC_DATE_FR}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE_TO)">
    AND A.INSPEC_DATE &lt;= #{INSPEC_DATE_TO}
</if>
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
    AND A.CUSTOM_CODE  = #{CUSTOM_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
    AND A.ITEM_CODE    = #{ITEM_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_TYPE)">
    AND A.INSPEC_TYPE  = #{INSPEC_TYPE}
</if>
<if test="@foren.Ognl@isNotEmpty(GOODBAD_TYPE)">
    AND A.GOODBAD_TYPE = #{GOODBAD_TYPE}
</if>
    ORDER BY A.INSPEC_NUM, A.INSPEC_SEQ


 SET ARITHABORT OFF
 SET NOCOUNT OFF
 END

    </select>
<select id="mms200ukrvServiceImpl.selectreceiptList" parameterType="Map" resultType="rMap">
/* mms200ukrv.Cmms200ukrv[fnQms200QRef] Query01 */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode    NVARCHAR(08) /* 법인코드    */
          , @UserId      NVARCHAR(100) /* 사용자ID    */
          , @LangType    NVARCHAR(2)  /* 언어구분    */
          , @RefItem     NVARCHAR(01) /* 명칭 참조 유형  */
          , @DateFormat  NVARCHAR(10) /* 날짜 포맷 유형 설정 */

    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}

 /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

 /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

 /* 데이터 조회 */


    SELECT CAST('' AS BIT) AS CHK
         , A.CUSTOM_CODE
         , C.CUSTOM_NAME
         , A.ITEM_CODE
         , B.ITEM_NAME
         , B.SPEC
         , (CASE WHEN ISNULL(A.RECEIPT_DATE, '') = ''
                 THEN ''
                 ELSE REPLACE(REPLACE(REPLACE(@DateFormat, 'YYYY', SUBSTRING(A.RECEIPT_DATE, 1, 4))
                                                         , 'MM'  , SUBSTRING(A.RECEIPT_DATE, 5, 2))
                                                         , 'DD'  , SUBSTRING(A.RECEIPT_DATE, 7, 2))
            END)                                            AS RECEIPT_DATE
         , A.ORDER_UNIT
         , ISNULL(D.INSPEC_METH_MATRL, '02')				AS INSPEC_METH_MATRL
         , ISNULL(A.RECEIPT_Q,0) AS INSPEC_Q
         , ISNULL(A.RECEIPT_Q,0) -  ISNULL(A.INSPEC_Q,0) AS NOT_INSPEC_Q
         , A.RECEIPT_NUM
         , A.RECEIPT_SEQ
         , A.LOT_NO
         , A.ORDER_TYPE
         , A.ORDER_NUM
         , A.ORDER_SEQ
         , A.REMARK
         , A.PROJECT_NO
         , E.WH_CODE
      FROM            QMS100T A WITH (NOLOCK)
           INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
                                             AND A.ITEM_CODE   = B.ITEM_CODE
           INNER JOIN BPR200T D WITH (NOLOCK) ON A.COMP_CODE   = D.COMP_CODE
                                             AND A.DIV_CODE    = D.DIV_CODE
                                             AND A.ITEM_CODE   = D.ITEM_CODE
                                             --AND D.INSPEC_YN   = 'Y'   --제외 20180424
                                             --AND ISNULL(D.INSPEC_METH_MATRL, '') != N''--제외 20180424
           INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
                                             AND A.CUSTOM_CODE = C.CUSTOM_CODE
           INNER JOIN MPO200T E WITH (NOLOCK) ON A.COMP_CODE   = E.COMP_CODE
                                             AND A.DIV_CODE    = E.DIV_CODE
                                             AND A.ORDER_NUM   = E.ORDER_NUM
                                             AND A.ORDER_SEQ   = E.ORDER_SEQ
                                             AND E.CONTROL_STATUS != N'8'
                                             --AND E.INSPEC_FLAG = 'Y'      --추가 -- 20180424
     WHERE A.COMP_CODE = @CompCode
       AND ISNULL(A.RECEIPT_Q,0) - ISNULL(A.INSPEC_Q,0) != 0
       AND A.INSPEC_FLAG = 'Y'
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
        AND A.DIV_CODE      = #{DIV_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(CUSTOM_CODE)">
        AND A.CUSTOM_CODE   = #{CUSTOM_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_FR)">
        AND A.RECEIPT_DATE &gt;= #{RECEIPT_DATE_FR}
</if>
<if test="@foren.Ognl@isNotEmpty(RECEIPT_DATE_TO)">
        AND A.RECEIPT_DATE &lt;= #{RECEIPT_DATE_TO}
</if>
<if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
        AND A.ITEM_CODE     = #{ITEM_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(LOT_NO)">
        AND A.LOT_NO        = #{LOT_NO}
</if>
<if test="@foren.Ognl@isNotEmpty(ORDER_TYPE)">
        AND A.ORDER_TYPE    = #{ORDER_TYPE}
</if>


     SET NOCOUNT OFF
     SET ARITHABORT OFF
END
</select>
<select id="mms200ukrvServiceImpl.selectList1" parameterType="Map" resultType="rMap">
/* mms200ukrv.Cmms200ukrv[fnQms200QStd] Query01 */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
          , @UserId         NVARCHAR(100) /* 사용자ID                */
          , @LangType       NVARCHAR(2)  /* 언어구분                */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}

    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 데이터 조회 */
    SELECT A.DIV_CODE
         , A.INSPEC_NUM
         , A.INSPEC_SEQ
         , A.ITEM_CODE
         , (CASE WHEN @RefItem = '1' THEN B.ITEM_NAME1
                 WHEN @RefItem = '2' THEN B.ITEM_NAME2
                                     ELSE B.ITEM_NAME
             END) AS ITEM_NAME
         , B.SPEC
         , A.ORDER_UNIT
         , A.INSPEC_TYPE
         , A.END_DECISION
         , ISNULL(A.RECEIPT_Q    ,0) AS RECEIPT_Q
         , ISNULL(A.INSPEC_Q     ,0) AS INSPEC_Q
         , ISNULL(A.GOOD_INSPEC_Q,0) AS GOOD_INSPEC_Q
         , ISNULL(A.BAD_INSPEC_Q ,0) AS BAD_INSPEC_Q
         , ISNULL(A.INSTOCK_Q    ,0) AS INSTOCK_Q

         , (CASE WHEN A.INSPEC_Q = 0 THEN 0
                ELSE A.BAD_INSPEC_Q / A.INSPEC_Q * 100
           END) AS BAD_INSPEC_PER

         , A.INSPEC_PRSN
         , A.CUSTOM_CODE
         , (CASE WHEN @RefItem = '1' THEN C.CUSTOM_NAME1
                 WHEN @RefItem = '2' THEN C.CUSTOM_NAME2
                                     ELSE C.CUSTOM_NAME
             END) AS CUSTOM_NAME
         , A.RECEIPT_NUM
         , A.RECEIPT_SEQ
         , A.REMARK
         , A.PROJECT_NO
         , uniLite.fnGetUserdate(@CompCode, A.INSPEC_DATE) AS INSPEC_DATE
         , A.ORDER_TYPE
         , A.LOT_NO
         , A.ORDER_NUM
         , A.ORDER_SEQ
         , A.GOODBAD_TYPE
         , ISNULL((SELECT TOP 1 E.WH_CODE
                     FROM BTR100T E WITH (NOLOCK)
                    WHERE E.COMP_CODE   = A.COMP_CODE
                      AND E.DIV_CODE    = A.DIV_CODE
                      AND E.INSPEC_NUM  = A.INSPEC_NUM
                      AND E.INSPEC_SEQ  = A.INSPEC_SEQ
                      AND E.ITEM_STATUS = N'1'
                    ORDER BY E.INOUT_DATE),'') AS GOOD_WH_CODE
         , ISNULL((SELECT TOP 1 E.WH_CODE
                     FROM BTR100T E WITH (NOLOCK)
                    WHERE E.COMP_CODE   = A.COMP_CODE
                      AND E.DIV_CODE    = A.DIV_CODE
                      AND E.INSPEC_NUM  = A.INSPEC_NUM
                      AND E.INSPEC_SEQ  = A.INSPEC_SEQ
                      AND E.ITEM_STATUS = N'2'
                    ORDER BY E.INOUT_DATE),'') AS BAD_WH_CODE
      FROM            QMS200T A WITH (NOLOCK)
           INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE   = B.COMP_CODE
                                             AND A.ITEM_CODE   = B.ITEM_CODE
           INNER JOIN BCM100T C WITH (NOLOCK) ON A.COMP_CODE   = C.COMP_CODE
                                             AND A.CUSTOM_CODE = C.CUSTOM_CODE
     WHERE A.COMP_CODE    = @CompCode
<if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
       AND A.DIV_CODE     = #{DIV_CODE}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_TYPE)">
       AND A.INSPEC_TYPE  = #{INSPEC_TYPE}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_DATE)">
       AND A.INSPEC_DATE  = #{INSPEC_DATE}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_PRSN)">
       AND A.INSPEC_PRSN  = #{INSPEC_PRSN}
</if>
<if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
       AND A.INSPEC_NUM   = #{INSPEC_NUM}
</if>
<if test="@foren.Ognl@isNotEmpty(GOODBAD_TYPE)">
       AND A.GOODBAD_TYPE = #{GOODBAD_TYPE}
</if>
     ORDER BY A.INSPEC_SEQ

    SET ARITHABORT OFF
    SET NOCOUNT OFF
END

</select>
<select id="mms200ukrvServiceImpl.selectList2" parameterType="Map" resultType="rMap">
    /* mms200ukrv.Cmms200ukrv[fnQms200QBad] Query01 */
BEGIN
    SET NOCOUNT ON
    SET ARITHABORT ON

    DECLARE @CompCode       NVARCHAR(08) /* 법인코드                */
          , @UserId         NVARCHAR(100) /* 사용자ID       */
          , @LangType       NVARCHAR(2)  /* 언어구분                */
          , @RefItem        NVARCHAR(01) /* 명칭 참조 유형            */
          , @DateFormat     NVARCHAR(10) /* 날짜 포맷 유형 설정     */

    SET @CompCode = #{S_COMP_CODE}
    SET @UserId   = #{S_USER_ID}
    SET @LangType = #{S_LANG_CODE}

    /* 명칭 참조 유형 */
    SELECT TOP 1 @RefItem = REF_ITEM
      FROM BSA300T WITH (NOLOCK)
     WHERE USER_ID = @UserId

    SET @RefItem = ISNULL(@RefItem, N'0')

    /* 날짜 포맷 유형 설정 */
    SELECT TOP 1 @DateFormat = CODE_NAME
      FROM BSA100T WITH (NOLOCK)
     WHERE COMP_CODE = @CompCode
       AND MAIN_CODE = N'B044'
       AND REF_CODE1 = N'Y'

    SET @DateFormat = ISNULL(@DateFormat, 'YYYY.MM.DD')

    /* 데이터 조회 */
    SELECT A.DIV_CODE
         , A.INSPEC_NUM
         , A.INSPEC_SEQ
         , B.SUB_CODE  AS BAD_INSPEC_CODE
         , B.CODE_NAME AS BAD_INSPEC_NAME
         , A.BAD_INSPEC_Q
         , A.INSPEC_REMARK
         , A.MANAGE_REMARK
      FROM QMS210T A WITH (NOLOCK)
           RIGHT JOIN (SELECT A.SUB_CODE
                            , A.COMP_CODE
                            , (CASE WHEN @LangType = 'ko' THEN A.CODE_NAME
                                    WHEN @LangType = 'en' THEN A.CODE_NAME_EN
                                    WHEN @LangType = 'zh' THEN A.CODE_NAME_CN
                                    WHEN @LangType = 'ja' THEN A.CODE_NAME_JP
                                                          ELSE A.CODE_NAME
                                      END)	AS CODE_NAME
                         FROM            BSA100T A WITH (NOLOCK)
                              INNER JOIN BPR100T B WITH (NOLOCK) ON A.COMP_CODE             = B.COMP_CODE
                                                                AND ISNULL(A.REF_CODE1,'*') =  (CASE WHEN ISNULL(A.REF_CODE1,'*') = '*' THEN '*'
                                                                                                    WHEN RTRIM(A.REF_CODE1)      = '' 	 THEN ''
                                                                                                    ELSE ISNULL(B.ITEM_LEVEL1,'*')
                                                                                               END)
                                                               <if test="@foren.Ognl@isNotEmpty(ITEM_CODE)">
                                                                AND B.ITEM_CODE             = #{ITEM_CODE}
                                                               </if>
                        WHERE A.COMP_CODE = @CompCode
                        <if test="ORDER_TYPE == &quot;1&quot;">
                          AND A.MAIN_CODE = 'Q011'
                        </if>
                        <if test="ORDER_TYPE != &quot;1&quot;">
                          AND A.MAIN_CODE = 'Q012'
                        </if>
                          AND A.SUB_CODE != '$') B ON A.COMP_CODE       = B.COMP_CODE
                                                  AND A.BAD_INSPEC_CODE = B.SUB_CODE
                                                  <if test="@foren.Ognl@isNotEmpty(DIV_CODE)">
                                                  AND A.DIV_CODE        = #{DIV_CODE}
                                                  </if>
                                                  <if test="@foren.Ognl@isNotEmpty(INSPEC_NUM)">
                                                  AND A.INSPEC_NUM      = #{INSPEC_NUM}
                                                  </if>
												  <if test="@foren.Ognl@isNotEmpty(INSPEC_SEQ)">
                                                  AND A.INSPEC_SEQ      = #{INSPEC_SEQ}
												  </if>

    SET ARITHABORT OFF
    SET NOCOUNT OFF
END
</select>
<select id="mms200ukrvServiceImpl.inspecQtyCheck" parameterType="Map" resultType="rMap">
	  /*  mms200ukrv.Cmms200ukrv[fnQms200QChk] Query01*/
    SELECT INOUT_Q
      FROM BTR100T
     WHERE COMP_CODE  = #{S_COMP_CODE}
       AND DIV_CODE   = #{DIV_CODE}
       AND INSPEC_NUM = #{INSPEC_NUM}
       AND INSPEC_SEQ = #{INSPEC_SEQ}
       AND CREATE_LOC = '2'
</select>
<insert id="mms200ukrvServiceImpl.insertLogMaster" parameterType="Map">
INSERT INTO L_QMS200T
     ( KEY_VALUE		    , OPR_FLAG
     , COMP_CODE            , DIV_CODE              , INSPEC_NUM            , INSPEC_SEQ            , INSPEC_DATE
     , ORDER_TYPE           , ITEM_CODE             , CUSTOM_CODE           , ORDER_UNIT            , INSPEC_Q
     , GOOD_INSPEC_Q        , BAD_INSPEC_Q          , INSPEC_TYPE           , INSPEC_METHOD         , INSTOCK_Q
     , INSPEC_PRSN          , LOT_NO                , ORDER_NUM             , ORDER_SEQ             , RECEIPT_NUM
     , RECEIPT_SEQ          , REMARK                , PROJECT_NO            , GOODBAD_TYPE          , RECEIPT_Q
     , END_DECISION         , PJT_CODE )
VALUES
     ( #{KEY_VALUE}         , #{OPR_FLAG}
     , #{S_COMP_CODE}       , #{DIV_CODE}           , #{INSPEC_NUM}         , #{INSPEC_SEQ}         , #{INSPEC_DATE}
     , #{ORDER_TYPE}        , #{ITEM_CODE}          , #{CUSTOM_CODE}        , #{ORDER_UNIT}         , #{INSPEC_Q}
     , #{GOOD_INSPEC_Q}     , #{BAD_INSPEC_Q}       , #{INSPEC_TYPE}        , #{INSPEC_METHOD}      , #{INSTOCK_Q}
     , #{INSPEC_PRSN}       , #{LOT_NO}             , #{ORDER_NUM}          , #{ORDER_SEQ}          , #{RECEIPT_NUM}
     , #{RECEIPT_SEQ}       , #{REMARK}             , #{PROJECT_NO}         , #{GOODBAD_TYPE}       , #{RECEIPT_Q}
     , #{END_DECISION}      , #{PJT_CODE} )
 	</insert>
<insert id="mms200ukrvServiceImpl.insertQms210" parameterType="Map">
/*mms200ukrv.Cmms200ukrv[fnQms200Save] Query10 */
      INSERT QMS210T
          ( DIV_CODE       ,COMP_CODE      , INSPEC_NUM     , INSPEC_SEQ  , BAD_INSPEC_CODE, BAD_INSPEC_Q
          , INSPEC_REMARK  , MANAGE_REMARK , UPDATE_DB_USER , UPDATE_DB_TIME )
         VALUES
           ( #{DIV_CODE}
           , #{S_COMP_CODE}
           , #{INSPEC_NUM}
           , #{INSPEC_SEQ}
           , #{BAD_INSPEC_CODE}
           , #{BAD_INSPEC_Q}
           , #{INSPEC_REMARK}
           , #{MANAGE_REMARK}
           , #{S_USER_ID}
           , GETDATE() )
</insert>
<select id="mms200ukrvServiceImpl.selectQMS200" parameterType="Map" resultType="rMap">
     /*mms200ukrv.Cmms200ukrv[fnQms200Save] Query10-1*/
     SELECT ORDER_NUM, ORDER_SEQ
       FROM QMS200T
       WHERE COMP_CODE  = #{S_COMP_CODE}
         AND DIV_CODE   = #{DIV_CODE}
         AND INSPEC_NUM = #{INSPEC_NUM}
         AND INSPEC_SEQ = #{INSPEC_SEQ}
</select>
<update id="mms200ukrvServiceImpl.updateMpo200" parameterType="Map">
    /*mms200ukrv.Cmms200ukrv[fnQms200Save] Query10-2*/
    UPDATE MPO200T
      SET BAD_RETURN_Q = ISNULL(BAD_RETURN_Q,0) + #{BAD_INSPEC_Q}
     WHERE COMP_CODE  = #{S_COMP_CODE}
       AND DIV_CODE   = #{DIV_CODE}
       AND ORDER_NUM  = #{ORDER_NUM}
       AND ORDER_SEQ  = #{ORDER_SEQ}
</update>
<update id="mms200ukrvServiceImpl.updateQms210" parameterType="Map">
    /*mms200ukrv.Cmms200ukrv[fnQms200Save] Query11*/
    UPDATE QMS210T
       SET BAD_INSPEC_Q    = #{BAD_INSPEC_Q}
         , INSPEC_REMARK   = #{INSPEC_REMARK}
         , MANAGE_REMARK   = #{MANAGE_REMARK}
         , UPDATE_DB_USER  = #{S_USER_ID}
         , UPDATE_DB_TIME  = GETDATE()
     WHERE COMP_CODE       = #{S_COMP_CODE}
       AND DIV_CODE        = #{DIV_CODE}
       AND INSPEC_NUM      = #{INSPEC_NUM}
       AND INSPEC_SEQ      = #{INSPEC_SEQ}
       AND BAD_INSPEC_CODE = #{BAD_INSPEC_CODE}
</update>
<delete id="mms200ukrvServiceImpl.deleteQms210" parameterType="Map">
    /*mms200ukrv.Cmms200ukrv[fnQms200Save] Query10-2*/
    DELETE QMS210T
     WHERE COMP_CODE       = #{S_COMP_CODE}
       AND DIV_CODE        = #{DIV_CODE}
       AND INSPEC_NUM      = #{INSPEC_NUM}
       AND INSPEC_SEQ      = #{INSPEC_SEQ}
       AND BAD_INSPEC_CODE = #{BAD_INSPEC_CODE}
       AND BAD_INSPEC_Q    = 0
</delete>
<update id="mms200ukrvServiceImpl.updateQms200" parameterType="Map">
    /*mms200ukrv.Cmms200ukrv[fnQms200Save] Query13*/
        UPDATE QMS200T
           SET GOOD_INSPEC_Q = (CASE WHEN INSPEC_TYPE = '01' THEN ISNULL(INSPEC_Q,0) - ISNULL(A.SUM_BADQTY ,0)
           							ELSE GOOD_INSPEC_Q
           					   END)
             , BAD_INSPEC_Q  = ISNULL(A.SUM_BADQTY ,0)
          FROM (SELECT SUM(ISNULL(BAD_INSPEC_Q, 0)) AS SUM_BADQTY
                  FROM QMS210T
                 WHERE COMP_CODE  = #{S_COMP_CODE}
                   AND DIV_CODE   = #{DIV_CODE}
                   AND INSPEC_NUM = #{INSPEC_NUM}
                   AND INSPEC_SEQ = #{INSPEC_SEQ}) A
         WHERE COMP_CODE  = #{S_COMP_CODE}
           AND DIV_CODE   = #{DIV_CODE}
           AND INSPEC_NUM = #{INSPEC_NUM}
           AND INSPEC_SEQ = #{INSPEC_SEQ}
</update>
<update id="mms200ukrvServiceImpl.updateQms200AndQms100" parameterType="Map">
    /*mms200ukrv.Cmms200ukrv[fnQms200Save] Query14*/
    BEGIN
        SET NOCOUNT ON
        SET ARITHABORT ON

        UPDATE QMS200T
           SET GOOD_INSPEC_Q = B.GOOD_Q
             , BAD_INSPEC_Q  = B.BAD_Q
          FROM QMS200T A
                       INNER JOIN (SELECT DIV_CODE
                                        , INSPEC_NUM
                                        , INSPEC_SEQ
                                        , CASE WHEN GOODBAD_TYPE = '01'
                                                    THEN ISNULL(RECEIPT_Q, 0) - ISNULL(BAD_INSPEC_Q,0)
                                                    ELSE 0
                                           END GOOD_Q
                                        , CASE WHEN GOODBAD_TYPE = '02'
                                                    THEN ISNULL(RECEIPT_Q, 0)
                                                    ELSE BAD_INSPEC_Q
                                           END BAD_Q
                                        , COMP_CODE
                                     FROM QMS200T
                                    WHERE COMP_CODE   = #{S_COMP_CODE}
                                      AND DIV_CODE    = #{DIV_CODE}
                                      AND INSPEC_NUM  = #{S_INSPEC_NUM}
                                      AND INSPEC_TYPE = N'02'
                                 ) B
                               ON A.COMP_CODE  = B.COMP_CODE
                              AND A.DIV_CODE   = B.DIV_CODE
                              AND A.INSPEC_NUM = B.INSPEC_NUM
                              AND A.INSPEC_SEQ = B.INSPEC_SEQ

        UPDATE QMS100T
           SET INSPEC_Q = B.RECEIPT_Q
          FROM QMS100T A
                       INNER JOIN QMS200T B
                               ON A.COMP_CODE   = B.COMP_CODE
                              AND A.DIV_CODE    = B.DIV_CODE
                              AND A.RECEIPT_NUM = B.RECEIPT_NUM
                              AND A.RECEIPT_SEQ = B.RECEIPT_SEQ
         WHERE B.COMP_CODE   = #{S_COMP_CODE}
           AND B.DIV_CODE    = #{DIV_CODE}
           AND B.INSPEC_NUM  = #{S_INSPEC_NUM}
           AND B.INSPEC_TYPE = N'02'

    SET ARITHABORT OFF
    SET NOCOUNT OFF
    END
</update>
   <update id="spMms200ukrv" parameterType="Map" statementType="CALLABLE">
	{call USP_MATRL_MMS200UKRV (
		#{KEY_VALUE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{LANG_CODE, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		#{INSPEC_NUM, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
		#{ERROR_DESC, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String},
		#{AUTO_INPUT_FLAG, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
	)}
    </update>
    <select id="mms200ukrvServiceImpl.autoInputCheck" parameterType="Map" resultType="Int">
		  SELECT COUNT(1)
          FROM BSA100T
          WHERE MAIN_CODE = N'M025'
          AND ISNULL(UPPER(LEFT(REF_CODE1,1)),'') = N'Y'
          AND SUB_CODE = 'Y'
          AND COMP_CODE = #{COMP_CODE}
	</select>
</mapper>